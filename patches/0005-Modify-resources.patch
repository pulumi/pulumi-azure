From c8435af6c79671548611e80b822baf2dbcec61fc Mon Sep 17 00:00:00 2001
From: aq17 <aqiu@pulumi.com>
Date: Thu, 25 May 2023 10:33:38 -0700
Subject: [PATCH 5/8] Modify-resources

---
 .../advisor_recommendations_data_source.go    |  6 ++-
 .../analysis_services_server_resource.go      |  5 +-
 .../appservice/helpers/function_app_schema.go |  3 +-
 .../linux_function_app_slot_resource_test.go  | 13 +++++-
 .../automation/automation_runbook_resource.go |  4 +-
 .../automation_schedule_resource.go           |  8 ++--
 .../services/cdn/cdn_endpoint_resource.go     |  8 +++-
 internal/services/cdn/cdn_profile_resource.go |  5 +-
 internal/services/compute/image_resource.go   | 32 +++++++------
 .../compute/linux_virtual_machine_resource.go | 10 ++--
 .../services/compute/managed_disk_resource.go |  1 +
 .../services/compute/snapshot_resource.go     |  2 +-
 ...l_machine_data_disk_attachment_resource.go |  7 ++-
 .../windows_virtual_machine_resource.go       | 10 ++--
 .../containers/container_group_resource.go    | 10 ++--
 .../containers/container_registry_resource.go |  6 ---
 .../containers/kubernetes_cluster_resource.go |  2 +-
 internal/services/cosmos/common/schema.go     |  7 +--
 .../cosmos/cosmosdb_account_resource.go       | 12 +++--
 ...osmosdb_cassandra_cluster_resource_test.go | 11 +++++
 .../cosmos/cosmosdb_gremlin_graph_resource.go |  6 ++-
 .../services/dns/dns_caa_record_resource.go   |  5 +-
 .../eventhub/eventhub_namespace_resource.go   |  2 +-
 .../services/eventhub/eventhub_resource.go    |  3 +-
 .../firewall/firewall_policy_resource.go      |  6 +--
 .../hdinsight_hadoop_cluster_resource.go      |  8 ++--
 internal/services/hdinsight/schema.go         | 14 ++++--
 .../iotcentral_application_resource.go        |  2 +-
 internal/services/iothub/iothub_resource.go   | 13 ++++--
 .../key_vault_certificate_resource.go         |  5 +-
 .../legacy/virtual_machine_resource.go        | 15 ++++--
 .../virtual_machine_scale_set_resource.go     | 15 ++++--
 .../loadbalancer/loadbalancer_resource.go     |  4 +-
 .../loadbalancer/nat_pool_resource.go         |  3 +-
 .../loadbalancer/nat_rule_resource.go         |  3 +-
 .../services/loadbalancer/probe_resource.go   |  3 +-
 .../services/loadbalancer/rule_resource.go    |  3 +-
 ...ytics_datasource_windows_event_resource.go |  4 +-
 .../log_analytics_workspace_resource.go       |  5 +-
 ...on_account_batch_configuration_resource.go | 21 +++++----
 .../logic/logic_app_standard_resource.go      |  8 +++-
 .../services/logz/logz_monitor_resource.go    | 12 +++--
 .../media/media_services_account_resource.go  |  6 ++-
 .../monitor_autoscale_setting_resource.go     |  5 +-
 .../services/mssql/mssql_database_resource.go |  8 ++--
 .../mssql/mssql_elasticpool_resource.go       | 11 +++--
 ...l_server_security_alert_policy_resource.go |  5 +-
 .../services/mysql/mysql_server_resource.go   |  7 ++-
 .../network/application_gateway_resource.go   | 21 +++++----
 .../network/express_route_circuit_resource.go |  7 ++-
 .../network/network_interface_resource.go     |  4 +-
 .../network_security_group_resource.go        | 11 +++--
 .../network/network_security_rule_resource.go | 15 ++++--
 .../network/public_ip_prefix_resource.go      | 13 ++++--
 .../services/network/public_ip_resource.go    | 15 +++---
 internal/services/network/route_resource.go   |  5 +-
 .../services/network/route_table_resource.go  |  5 +-
 ...ual_network_gateway_connection_resource.go | 17 ++++---
 .../virtual_network_gateway_resource.go       |  8 ++--
 .../network/virtual_network_resource_test.go  | 46 +++++++++++++++++++
 .../notification_hub_namespace_resource.go    |  3 +-
 .../policy/policy_definition_resource.go      |  3 +-
 .../portal/portal_dashboard_resource_test.go  |  7 ++-
 .../postgres/postgresql_server_resource.go    | 12 +++--
 .../recovery_services_vault_resource.go       |  4 +-
 .../site_recovery_replicated_vm_resource.go   |  4 +-
 .../services/redis/redis_cache_resource.go    |  4 +-
 .../redis/redis_linked_server_resource.go     |  3 +-
 .../resource/template_deployment_resource.go  |  5 +-
 .../security_center_automation_resource.go    | 11 +++--
 ...erver_vulnerability_assessment_resource.go |  1 +
 .../servicebus_namespace_resource.go          |  5 +-
 .../servicebus/servicebus_queue_resource.go   | 14 ++++++
 .../servicebus_subscription_rule_resource.go  |  4 +-
 .../servicebus/servicebus_topic_resource.go   | 21 ++++++++-
 .../services/sql/sql_database_resource.go     | 18 ++++----
 .../sql/sql_managed_instance_resource.go      |  5 +-
 internal/services/sql/sql_server_resource.go  |  7 ++-
 .../storage/storage_account_data_source.go    | 20 +++++++-
 .../storage/storage_account_resource.go       | 19 +++++---
 .../storage_management_policy_resource.go     |  7 ++-
 ...sql_pool_security_alert_policy_resource.go |  5 +-
 ...orkspace_security_alert_policy_resource.go |  5 +-
 .../traffic_manager_profile_resource.go       |  8 +++-
 internal/services/web/app_service.go          | 18 +++++---
 .../app_service_certificate_order_resource.go |  3 +-
 internal/services/web/function_app.go         |  5 +-
 .../web/function_app_slot_resource.go         | 24 ++++++----
 88 files changed, 546 insertions(+), 230 deletions(-)

diff --git a/internal/services/advisor/advisor_recommendations_data_source.go b/internal/services/advisor/advisor_recommendations_data_source.go
index 55357c814c..aed2f02b45 100644
--- a/internal/services/advisor/advisor_recommendations_data_source.go
+++ b/internal/services/advisor/advisor_recommendations_data_source.go
@@ -5,6 +5,9 @@ import (
 	"strings"
 	"time"
 
+	"github.com/hashicorp/terraform-provider-azurerm/internal/features"
+	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/suppress"
+
 	"github.com/hashicorp/go-azure-helpers/lang/pointer"
 	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonids"
 	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonschema"
@@ -35,7 +38,8 @@ func dataSourceAdvisorRecommendations() *pluginsdk.Resource {
 						string(getrecommendations.CategoryPerformance),
 						string(getrecommendations.CategoryCost),
 						string(getrecommendations.CategoryOperationalExcellence),
-					}, false),
+					}, features.CaseInsensitive()),
+					DiffSuppressFunc: suppress.CaseDifferenceV2Only,
 				},
 			},
 
diff --git a/internal/services/analysisservices/analysis_services_server_resource.go b/internal/services/analysisservices/analysis_services_server_resource.go
index 3ef985f093..dd6d5b992f 100644
--- a/internal/services/analysisservices/analysis_services_server_resource.go
+++ b/internal/services/analysisservices/analysis_services_server_resource.go
@@ -3,6 +3,8 @@ package analysisservices
 import (
 	"bytes"
 	"fmt"
+	"github.com/hashicorp/terraform-provider-azurerm/internal/features"
+	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/suppress"
 	"log"
 	"strings"
 	"time"
@@ -117,7 +119,8 @@ func resourceAnalysisServicesServer() *pluginsdk.Resource {
 				ValidateFunc: validation.StringInSlice([]string{
 					string(servers.ConnectionModeAll),
 					string(servers.ConnectionModeReadOnly),
-				}, false),
+				}, features.CaseInsensitive()),
+				DiffSuppressFunc: suppress.CaseDifferenceV2Only,
 			},
 
 			"backup_blob_container_uri": {
diff --git a/internal/services/appservice/helpers/function_app_schema.go b/internal/services/appservice/helpers/function_app_schema.go
index 2a962494d5..0b2fe63105 100644
--- a/internal/services/appservice/helpers/function_app_schema.go
+++ b/internal/services/appservice/helpers/function_app_schema.go
@@ -1029,10 +1029,11 @@ func linuxFunctionAppStackSchema() *pluginsdk.Schema {
 					Description: "The version of .Net. Possible values are `3.1`, `6.0` and `7.0`",
 				},
 
+				// FORK: Removed default value due to pulumi-azure#1227
+				// These modifications can be removed once pulumi-terraform-bridge#577 is fixed.
 				"use_dotnet_isolated_runtime": {
 					Type:     pluginsdk.TypeBool,
 					Optional: true,
-					Default:  false,
 					ConflictsWith: []string{
 						"site_config.0.application_stack.0.python_version",
 						"site_config.0.application_stack.0.java_version",
diff --git a/internal/services/appservice/linux_function_app_slot_resource_test.go b/internal/services/appservice/linux_function_app_slot_resource_test.go
index 00b4ce212a..ffb16ada86 100644
--- a/internal/services/appservice/linux_function_app_slot_resource_test.go
+++ b/internal/services/appservice/linux_function_app_slot_resource_test.go
@@ -989,11 +989,21 @@ func TestAccLinuxFunctionAppSlot_identityKeyVaultIdentity(t *testing.T) {
 
 	data.ResourceTest(t, r, []acceptance.TestStep{
 		{
-			Config: r.identityUserAssignedKeyVaultIdentity(data, SkuStandardPlan),
+			Config: r.basic(data, SkuStandardPlan),
+			Check: acceptance.ComposeTestCheckFunc(
+				check.That(data.ResourceName).ExistsInAzure(r),
+				check.That(data.ResourceName).Key("kind").HasValue("functionapp,linux"),
+			),
+		},
+		data.ImportStep(),
+		{
+			Config: r.updateStorageAccount(data, SkuStandardPlan),
 			Check: acceptance.ComposeTestCheckFunc(
 				check.That(data.ResourceName).ExistsInAzure(r),
+				check.That(data.ResourceName).Key("kind").HasValue("functionapp,linux"),
 			),
 		},
+		data.ImportStep(),
 	})
 }
 
@@ -1038,7 +1048,6 @@ func TestAccLinuxFunctionAppSlot_storageAccountKeyVaultSecret(t *testing.T) {
 			Config: r.storageAccountKVSecret(data, SkuStandardPlan),
 			Check: acceptance.ComposeTestCheckFunc(
 				check.That(data.ResourceName).ExistsInAzure(r),
-				check.That(data.ResourceName).Key("kind").HasValue("functionapp,linux"),
 			),
 		},
 		data.ImportStep(),
diff --git a/internal/services/automation/automation_runbook_resource.go b/internal/services/automation/automation_runbook_resource.go
index fa2a38e546..225cd10301 100644
--- a/internal/services/automation/automation_runbook_resource.go
+++ b/internal/services/automation/automation_runbook_resource.go
@@ -7,6 +7,8 @@ import (
 	"log"
 	"time"
 
+	"github.com/hashicorp/terraform-provider-azurerm/internal/features"
+
 	"github.com/gofrs/uuid"
 	"github.com/hashicorp/go-azure-helpers/lang/pointer"
 	"github.com/hashicorp/go-azure-helpers/lang/response"
@@ -128,7 +130,7 @@ func resourceAutomationRunbook() *pluginsdk.Resource {
 					string(runbook.RunbookTypeEnumPythonThree),
 					string(runbook.RunbookTypeEnumPowerShellWorkflow),
 					string(runbook.RunbookTypeEnumScript),
-				}, false),
+				}, features.CaseInsensitive()),
 			},
 
 			"log_progress": {
diff --git a/internal/services/automation/automation_schedule_resource.go b/internal/services/automation/automation_schedule_resource.go
index e91a83971f..ef725c793f 100644
--- a/internal/services/automation/automation_schedule_resource.go
+++ b/internal/services/automation/automation_schedule_resource.go
@@ -3,6 +3,7 @@ package automation
 import (
 	"context"
 	"fmt"
+	"github.com/hashicorp/terraform-provider-azurerm/internal/features"
 	"log"
 	"strings"
 	"time"
@@ -71,7 +72,7 @@ func resourceAutomationSchedule() *pluginsdk.Resource {
 					string(schedule.ScheduleFrequencyMonth),
 					string(schedule.ScheduleFrequencyOneTime),
 					string(schedule.ScheduleFrequencyWeek),
-				}, false),
+				}, features.CaseInsensitive()),
 			},
 
 			// ignored when frequency is `OneTime`
@@ -124,7 +125,8 @@ func resourceAutomationSchedule() *pluginsdk.Resource {
 						string(schedule.ScheduleDayFriday),
 						string(schedule.ScheduleDaySaturday),
 						string(schedule.ScheduleDaySunday),
-					}, false),
+					}, features.CaseInsensitive()),
+					DiffSuppressFunc: suppress.CaseDifferenceV2Only,
 				},
 				Set:           set.HashStringIgnoreCase,
 				ConflictsWith: []string{"month_days", "monthly_occurrence"},
@@ -160,7 +162,7 @@ func resourceAutomationSchedule() *pluginsdk.Resource {
 								string(schedule.ScheduleDayFriday),
 								string(schedule.ScheduleDaySaturday),
 								string(schedule.ScheduleDaySunday),
-							}, false),
+							}, features.CaseInsensitive()),
 						},
 						"occurrence": {
 							Type:     pluginsdk.TypeInt,
diff --git a/internal/services/cdn/cdn_endpoint_resource.go b/internal/services/cdn/cdn_endpoint_resource.go
index 768c079bd1..c280d39319 100644
--- a/internal/services/cdn/cdn_endpoint_resource.go
+++ b/internal/services/cdn/cdn_endpoint_resource.go
@@ -2,6 +2,8 @@ package cdn
 
 import (
 	"fmt"
+	"github.com/hashicorp/terraform-provider-azurerm/internal/features"
+	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/suppress"
 	"log"
 	"time"
 
@@ -167,7 +169,8 @@ func resourceCdnEndpoint() *pluginsdk.Resource {
 							ValidateFunc: validation.StringInSlice([]string{
 								string(cdn.ActionTypeAllow),
 								string(cdn.ActionTypeBlock),
-							}, false),
+							}, features.CaseInsensitive()),
+							DiffSuppressFunc: suppress.CaseDifferenceV2Only,
 						},
 						"country_codes": {
 							Type:     pluginsdk.TypeList,
@@ -189,7 +192,8 @@ func resourceCdnEndpoint() *pluginsdk.Resource {
 					string(cdn.OptimizationTypeGeneralWebDelivery),
 					string(cdn.OptimizationTypeLargeFileDownload),
 					string(cdn.OptimizationTypeVideoOnDemandMediaStreaming),
-				}, false),
+				}, features.CaseInsensitive()),
+				DiffSuppressFunc: suppress.CaseDifferenceV2Only,
 			},
 
 			"fqdn": {
diff --git a/internal/services/cdn/cdn_profile_resource.go b/internal/services/cdn/cdn_profile_resource.go
index 11ec03362c..958c7a3fe7 100644
--- a/internal/services/cdn/cdn_profile_resource.go
+++ b/internal/services/cdn/cdn_profile_resource.go
@@ -2,6 +2,8 @@ package cdn
 
 import (
 	"fmt"
+	"github.com/hashicorp/terraform-provider-azurerm/internal/features"
+	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/suppress"
 	"time"
 
 	"github.com/Azure/azure-sdk-for-go/services/cdn/mgmt/2020-09-01/cdn" // nolint: staticcheck
@@ -64,7 +66,8 @@ func resourceCdnProfile() *pluginsdk.Resource {
 					string(cdn.SkuNameStandardVerizon),
 					string(cdn.SkuNameStandardMicrosoft),
 					string(cdn.SkuNamePremiumVerizon),
-				}, false),
+				}, features.CaseInsensitive()),
+				DiffSuppressFunc: suppress.CaseDifferenceV2Only,
 			},
 
 			"tags": tags.Schema(),
diff --git a/internal/services/compute/image_resource.go b/internal/services/compute/image_resource.go
index 099275fa02..d08bee3792 100644
--- a/internal/services/compute/image_resource.go
+++ b/internal/services/compute/image_resource.go
@@ -4,6 +4,9 @@ import (
 	"fmt"
 	"time"
 
+	"github.com/hashicorp/terraform-provider-azurerm/internal/features"
+	"github.com/tombuildsstuff/kermit/sdk/compute/2022-08-01/compute"
+
 	"github.com/hashicorp/go-azure-helpers/lang/pointer"
 	"github.com/hashicorp/go-azure-helpers/lang/response"
 	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonschema"
@@ -85,18 +88,18 @@ func resourceImage() *pluginsdk.Resource {
 							Type:     pluginsdk.TypeString,
 							Optional: true,
 							ValidateFunc: validation.StringInSlice([]string{
-								string(images.OperatingSystemTypesLinux),
-								string(images.OperatingSystemTypesWindows),
-							}, false),
+								string(compute.OperatingSystemTypesLinux),
+								string(compute.OperatingSystemTypesWindows),
+							}, features.CaseInsensitive()),
 						},
 
 						"os_state": {
 							Type:     pluginsdk.TypeString,
 							Optional: true,
 							ValidateFunc: validation.StringInSlice([]string{
-								string(images.OperatingSystemStateTypesGeneralized),
-								string(images.OperatingSystemStateTypesSpecialized),
-							}, false),
+								string(compute.OperatingSystemStateTypesGeneralized),
+								string(compute.OperatingSystemStateTypesSpecialized),
+							}, features.CaseInsensitive()),
 						},
 
 						"managed_disk_id": {
@@ -120,10 +123,10 @@ func resourceImage() *pluginsdk.Resource {
 							Optional: true,
 							Default:  string(images.CachingTypesNone),
 							ValidateFunc: validation.StringInSlice([]string{
-								string(images.CachingTypesNone),
-								string(images.CachingTypesReadOnly),
-								string(images.CachingTypesReadWrite),
-							}, false),
+								string(compute.CachingTypesNone),
+								string(compute.CachingTypesReadOnly),
+								string(compute.CachingTypesReadWrite),
+							}, features.CaseInsensitive()),
 						},
 
 						"size_gb": {
@@ -165,10 +168,11 @@ func resourceImage() *pluginsdk.Resource {
 							Optional: true,
 							Default:  string(images.CachingTypesNone),
 							ValidateFunc: validation.StringInSlice([]string{
-								string(images.CachingTypesNone),
-								string(images.CachingTypesReadOnly),
-								string(images.CachingTypesReadWrite),
-							}, false),
+								string(compute.CachingTypesNone),
+								string(compute.CachingTypesReadOnly),
+								string(compute.CachingTypesReadWrite),
+							}, features.CaseInsensitive()),
+							DiffSuppressFunc: suppress.CaseDifferenceV2Only,
 						},
 
 						"size_gb": {
diff --git a/internal/services/compute/linux_virtual_machine_resource.go b/internal/services/compute/linux_virtual_machine_resource.go
index 4dfe0cb011..a8515e0058 100644
--- a/internal/services/compute/linux_virtual_machine_resource.go
+++ b/internal/services/compute/linux_virtual_machine_resource.go
@@ -328,11 +328,11 @@ func resourceLinuxVirtualMachine() *pluginsdk.Resource {
 			},
 
 			"platform_fault_domain": {
-				Type:         pluginsdk.TypeInt,
-				Optional:     true,
-				Default:      -1,
-				ForceNew:     true,
-				RequiredWith: []string{"virtual_machine_scale_set_id"},
+				Type:     pluginsdk.TypeInt,
+				Optional: true,
+				Default:  -1,
+				ForceNew: true,
+				//RequiredWith: []string{"virtual_machine_scale_set_id"},
 				ValidateFunc: validation.IntAtLeast(-1),
 			},
 
diff --git a/internal/services/compute/managed_disk_resource.go b/internal/services/compute/managed_disk_resource.go
index 96e10732cc..59f059e7ed 100644
--- a/internal/services/compute/managed_disk_resource.go
+++ b/internal/services/compute/managed_disk_resource.go
@@ -149,6 +149,7 @@ func resourceManagedDisk() *pluginsdk.Resource {
 				Type:     pluginsdk.TypeString,
 				Optional: true,
 				ValidateFunc: validation.StringInSlice([]string{
+
 					string(disks.OperatingSystemTypesWindows),
 					string(disks.OperatingSystemTypesLinux),
 				}, false),
diff --git a/internal/services/compute/snapshot_resource.go b/internal/services/compute/snapshot_resource.go
index 58356943cb..2f23ea5f6d 100644
--- a/internal/services/compute/snapshot_resource.go
+++ b/internal/services/compute/snapshot_resource.go
@@ -64,7 +64,7 @@ func resourceSnapshot() *pluginsdk.Resource {
 				ValidateFunc: validation.StringInSlice([]string{
 					string(snapshots.DiskCreateOptionCopy),
 					string(snapshots.DiskCreateOptionImport),
-				}, false),
+				}, features.CaseInsensitive()),
 			},
 
 			"incremental_enabled": {
diff --git a/internal/services/compute/virtual_machine_data_disk_attachment_resource.go b/internal/services/compute/virtual_machine_data_disk_attachment_resource.go
index 5793bef1ff..50af818cae 100644
--- a/internal/services/compute/virtual_machine_data_disk_attachment_resource.go
+++ b/internal/services/compute/virtual_machine_data_disk_attachment_resource.go
@@ -2,6 +2,7 @@ package compute
 
 import (
 	"fmt"
+	"github.com/hashicorp/terraform-provider-azurerm/internal/features"
 	"log"
 	"time"
 
@@ -68,7 +69,8 @@ func resourceVirtualMachineDataDiskAttachment() *pluginsdk.Resource {
 					string(compute.CachingTypesNone),
 					string(compute.CachingTypesReadOnly),
 					string(compute.CachingTypesReadWrite),
-				}, false),
+				}, features.CaseInsensitive()),
+				DiffSuppressFunc: suppress.CaseDifferenceV2Only,
 			},
 
 			"create_option": {
@@ -79,7 +81,8 @@ func resourceVirtualMachineDataDiskAttachment() *pluginsdk.Resource {
 				ValidateFunc: validation.StringInSlice([]string{
 					string(compute.DiskCreateOptionTypesAttach),
 					string(compute.DiskCreateOptionTypesEmpty),
-				}, false),
+				}, features.CaseInsensitive()),
+				DiffSuppressFunc: suppress.CaseDifferenceV2Only,
 			},
 
 			"write_accelerator_enabled": {
diff --git a/internal/services/compute/windows_virtual_machine_resource.go b/internal/services/compute/windows_virtual_machine_resource.go
index 9ad08b1c00..d0be4559fe 100644
--- a/internal/services/compute/windows_virtual_machine_resource.go
+++ b/internal/services/compute/windows_virtual_machine_resource.go
@@ -350,11 +350,11 @@ func resourceWindowsVirtualMachine() *pluginsdk.Resource {
 			},
 
 			"platform_fault_domain": {
-				Type:         pluginsdk.TypeInt,
-				Optional:     true,
-				Default:      -1,
-				ForceNew:     true,
-				RequiredWith: []string{"virtual_machine_scale_set_id"},
+				Type:     pluginsdk.TypeInt,
+				Optional: true,
+				Default:  -1,
+				ForceNew: true,
+				//RequiredWith: []string{"virtual_machine_scale_set_id"},
 				ValidateFunc: validation.IntAtLeast(-1),
 			},
 
diff --git a/internal/services/containers/container_group_resource.go b/internal/services/containers/container_group_resource.go
index 051e6c271e..5fa4c93e0b 100644
--- a/internal/services/containers/container_group_resource.go
+++ b/internal/services/containers/container_group_resource.go
@@ -3,6 +3,8 @@ package containers
 import (
 	"bytes"
 	"fmt"
+	"github.com/hashicorp/terraform-provider-azurerm/internal/features"
+	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/suppress"
 	"log"
 	"strings"
 	"time"
@@ -69,7 +71,8 @@ func resourceContainerGroup() *pluginsdk.Resource {
 					string(containerinstance.ContainerGroupIPAddressTypePublic),
 					string(containerinstance.ContainerGroupIPAddressTypePrivate),
 					"None",
-				}, false),
+				}, features.CaseInsensitive()),
+				DiffSuppressFunc: suppress.CaseDifferenceV2Only,
 			},
 
 			"os_type": {
@@ -79,7 +82,8 @@ func resourceContainerGroup() *pluginsdk.Resource {
 				ValidateFunc: validation.StringInSlice([]string{
 					string(containerinstance.OperatingSystemTypesWindows),
 					string(containerinstance.OperatingSystemTypesLinux),
-				}, false),
+				}, features.CaseInsensitive()),
+				DiffSuppressFunc: suppress.CaseDifferenceV2Only,
 			},
 
 			"image_registry_credential": {
@@ -157,7 +161,7 @@ func resourceContainerGroup() *pluginsdk.Resource {
 					string(containerinstance.ContainerGroupRestartPolicyAlways),
 					string(containerinstance.ContainerGroupRestartPolicyNever),
 					string(containerinstance.ContainerGroupRestartPolicyOnFailure),
-				}, false),
+				}, features.CaseInsensitive()),
 			},
 
 			"dns_name_label": {
diff --git a/internal/services/containers/container_registry_resource.go b/internal/services/containers/container_registry_resource.go
index 0109de6887..d793918a3a 100644
--- a/internal/services/containers/container_registry_resource.go
+++ b/internal/services/containers/container_registry_resource.go
@@ -4,7 +4,6 @@ import (
 	"context"
 	"fmt"
 	"log"
-	"sort"
 	"strings"
 	"time"
 
@@ -617,11 +616,6 @@ func resourceContainerRegistryRead(d *pluginsdk.ResourceData, meta interface{})
 		}
 	}
 
-	// The order of the georeplications returned from the list API is not consistent. We simply order it alphabetically to be consistent.
-	sort.Slice(geoReplications, func(i, j int) bool {
-		return geoReplications[i].(map[string]interface{})["location"].(string) < geoReplications[j].(map[string]interface{})["location"].(string)
-	})
-
 	d.Set("georeplications", geoReplications)
 
 	return nil
diff --git a/internal/services/containers/kubernetes_cluster_resource.go b/internal/services/containers/kubernetes_cluster_resource.go
index 98af37b6f1..0896183b6d 100644
--- a/internal/services/containers/kubernetes_cluster_resource.go
+++ b/internal/services/containers/kubernetes_cluster_resource.go
@@ -880,7 +880,7 @@ func resourceKubernetesCluster() *pluginsdk.Resource {
 							ValidateFunc: validation.StringInSlice([]string{
 								string(managedclusters.LoadBalancerSkuBasic),
 								string(managedclusters.LoadBalancerSkuStandard),
-							}, false),
+							}, features.CaseInsensitive()),
 						},
 
 						"outbound_type": {
diff --git a/internal/services/cosmos/common/schema.go b/internal/services/cosmos/common/schema.go
index 589fd78279..b4574722aa 100644
--- a/internal/services/cosmos/common/schema.go
+++ b/internal/services/cosmos/common/schema.go
@@ -104,9 +104,10 @@ func CosmosDbIndexingPolicySchema() *pluginsdk.Schema {
 				// `automatic` is excluded as it is deprecated; see https://stackoverflow.com/a/58721386
 				// `indexing_mode` case changes from 2020-04-01 to 2021-01-15 issue https://github.com/Azure/azure-rest-api-specs/issues/14051
 				"indexing_mode": {
-					Type:     pluginsdk.TypeString,
-					Optional: true,
-					Default:  documentdb.IndexingModeConsistent,
+					Type:             pluginsdk.TypeString,
+					Optional:         true,
+					Default:          documentdb.IndexingModeConsistent,
+					DiffSuppressFunc: suppress.CaseDifferenceV2Only, // Open issue https://github.com/Azure/azure-sdk-for-go/issues/6603
 					ValidateFunc: validation.StringInSlice([]string{
 						string(documentdb.IndexingModeConsistent),
 						string(documentdb.IndexingModeNone),
diff --git a/internal/services/cosmos/cosmosdb_account_resource.go b/internal/services/cosmos/cosmosdb_account_resource.go
index 5414087d3c..028d4b53ef 100644
--- a/internal/services/cosmos/cosmosdb_account_resource.go
+++ b/internal/services/cosmos/cosmosdb_account_resource.go
@@ -4,6 +4,7 @@ import (
 	"bytes"
 	"context"
 	"fmt"
+	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/suppress"
 	"log"
 	"net/http"
 	"regexp"
@@ -189,7 +190,7 @@ func resourceCosmosDbAccount() *pluginsdk.Resource {
 				Required: true,
 				ValidateFunc: validation.StringInSlice([]string{
 					string(documentdb.DatabaseAccountOfferTypeStandard),
-				}, false),
+				}, features.CaseInsensitive()),
 			},
 
 			"analytical_storage": {
@@ -260,7 +261,7 @@ func resourceCosmosDbAccount() *pluginsdk.Resource {
 					string(documentdb.DatabaseAccountKindGlobalDocumentDB),
 					string(documentdb.DatabaseAccountKindMongoDB),
 					string(documentdb.DatabaseAccountKindParse),
-				}, false),
+				}, features.CaseInsensitive()),
 			},
 
 			"ip_range_filter": func() *schema.Schema {
@@ -334,7 +335,7 @@ func resourceCosmosDbAccount() *pluginsdk.Resource {
 								string(documentdb.DefaultConsistencyLevelEventual),
 								string(documentdb.DefaultConsistencyLevelSession),
 								string(documentdb.DefaultConsistencyLevelStrong),
-							}, false),
+							}, features.CaseInsensitive()),
 						},
 
 						"max_interval_in_seconds": {
@@ -391,8 +392,9 @@ func resourceCosmosDbAccount() *pluginsdk.Resource {
 				Elem: &pluginsdk.Resource{
 					Schema: map[string]*pluginsdk.Schema{
 						"name": {
-							Type:     pluginsdk.TypeString,
-							Required: true,
+							Type:             pluginsdk.TypeString,
+							Required:         true,
+							DiffSuppressFunc: suppress.CaseDifferenceV2Only,
 							ValidateFunc: validation.StringInSlice([]string{
 								string(databaseAccountCapabilitiesEnableAggregationPipeline),
 								string(databaseAccountCapabilitiesEnableCassandra),
diff --git a/internal/services/cosmos/cosmosdb_cassandra_cluster_resource_test.go b/internal/services/cosmos/cosmosdb_cassandra_cluster_resource_test.go
index bd7444ecf8..cc98d42083 100644
--- a/internal/services/cosmos/cosmosdb_cassandra_cluster_resource_test.go
+++ b/internal/services/cosmos/cosmosdb_cassandra_cluster_resource_test.go
@@ -15,6 +15,17 @@ import (
 
 type CassandraClusterResource struct{}
 
+func TestAccCassandraCluster(t *testing.T) {
+	// NOTE: this is a combined test rather than separate split out tests due to all below TCs sharing same sp
+	acceptance.RunTestsInSequence(t, map[string]map[string]func(t *testing.T){
+		"basic": {
+			"basic":          testAccCassandraCluster_basic,
+			"requiresImport": testAccCassandraCluster_requiresImport,
+			"tags":           testAccCassandraCluster_tags,
+		},
+	})
+}
+
 func testAccCassandraCluster_basic(t *testing.T) {
 	data := acceptance.BuildTestData(t, "azurerm_cosmosdb_cassandra_cluster", "test")
 	r := CassandraClusterResource{}
diff --git a/internal/services/cosmos/cosmosdb_gremlin_graph_resource.go b/internal/services/cosmos/cosmosdb_gremlin_graph_resource.go
index 2eb128da97..3e32536f7c 100644
--- a/internal/services/cosmos/cosmosdb_gremlin_graph_resource.go
+++ b/internal/services/cosmos/cosmosdb_gremlin_graph_resource.go
@@ -2,6 +2,7 @@ package cosmos
 
 import (
 	"fmt"
+	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/suppress"
 	"log"
 	"strings"
 	"time"
@@ -113,8 +114,9 @@ func resourceCosmosDbGremlinGraph() *pluginsdk.Resource {
 
 						// case change in 2021-01-15, issue https://github.com/Azure/azure-rest-api-specs/issues/14051
 						"indexing_mode": {
-							Type:     pluginsdk.TypeString,
-							Required: true,
+							Type:             pluginsdk.TypeString,
+							Required:         true,
+							DiffSuppressFunc: suppress.CaseDifferenceV2Only, // Open issue https://github.com/Azure/azure-sdk-for-go/issues/6603
 							ValidateFunc: validation.StringInSlice([]string{
 								string(documentdb.IndexingModeConsistent),
 								string(documentdb.IndexingModeNone),
diff --git a/internal/services/dns/dns_caa_record_resource.go b/internal/services/dns/dns_caa_record_resource.go
index 428f297761..4711ff2bcf 100644
--- a/internal/services/dns/dns_caa_record_resource.go
+++ b/internal/services/dns/dns_caa_record_resource.go
@@ -11,8 +11,10 @@ import (
 	"github.com/hashicorp/go-azure-sdk/resource-manager/dns/2018-05-01/recordsets"
 	"github.com/hashicorp/terraform-provider-azurerm/helpers/tf"
 	"github.com/hashicorp/terraform-provider-azurerm/internal/clients"
+	"github.com/hashicorp/terraform-provider-azurerm/internal/features"
 	"github.com/hashicorp/terraform-provider-azurerm/internal/services/dns/migration"
 	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
+	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/suppress"
 	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/validation"
 	"github.com/hashicorp/terraform-provider-azurerm/internal/timeouts"
 )
@@ -79,7 +81,8 @@ func resourceDnsCaaRecord() *pluginsdk.Resource {
 								"issue",
 								"issuewild",
 								"iodef",
-							}, false),
+							}, features.CaseInsensitive()),
+							DiffSuppressFunc: suppress.CaseDifferenceV2Only,
 						},
 
 						"value": {
diff --git a/internal/services/eventhub/eventhub_namespace_resource.go b/internal/services/eventhub/eventhub_namespace_resource.go
index 5f08e9fa0b..082b187147 100644
--- a/internal/services/eventhub/eventhub_namespace_resource.go
+++ b/internal/services/eventhub/eventhub_namespace_resource.go
@@ -78,7 +78,7 @@ func resourceEventHubNamespace() *pluginsdk.Resource {
 					string(namespaces.SkuNameBasic),
 					string(namespaces.SkuNameStandard),
 					string(namespaces.SkuNamePremium),
-				}, false),
+				}, features.CaseInsensitive()),
 			},
 
 			"capacity": {
diff --git a/internal/services/eventhub/eventhub_resource.go b/internal/services/eventhub/eventhub_resource.go
index de31314464..3b7c6ee4a5 100644
--- a/internal/services/eventhub/eventhub_resource.go
+++ b/internal/services/eventhub/eventhub_resource.go
@@ -2,6 +2,7 @@ package eventhub
 
 import (
 	"fmt"
+	"github.com/hashicorp/terraform-provider-azurerm/internal/features"
 	"log"
 	"time"
 
@@ -91,7 +92,7 @@ func resourceEventHub() *pluginsdk.Resource {
 							ValidateFunc: validation.StringInSlice([]string{
 								string(eventhubs.EncodingCaptureDescriptionAvro),
 								string(eventhubs.EncodingCaptureDescriptionAvroDeflate),
-							}, false),
+							}, features.CaseInsensitive()),
 						},
 						"interval_in_seconds": {
 							Type:         pluginsdk.TypeInt,
diff --git a/internal/services/firewall/firewall_policy_resource.go b/internal/services/firewall/firewall_policy_resource.go
index 807cef29ac..48da0e5da8 100644
--- a/internal/services/firewall/firewall_policy_resource.go
+++ b/internal/services/firewall/firewall_policy_resource.go
@@ -2,6 +2,7 @@ package firewall
 
 import (
 	"fmt"
+	"github.com/hashicorp/terraform-provider-azurerm/internal/features"
 	"log"
 	"time"
 
@@ -834,14 +835,13 @@ func resourceFirewallPolicySchema() map[string]*pluginsdk.Schema {
 								"protocol": {
 									Type:     pluginsdk.TypeString,
 									Required: true,
-									// protocol to be one of [ICMP ANY TCP UDP] but response may be "Any"
-									DiffSuppressFunc: suppress.CaseDifference,
 									ValidateFunc: validation.StringInSlice([]string{
 										string(network.FirewallPolicyIntrusionDetectionProtocolICMP),
 										string(network.FirewallPolicyIntrusionDetectionProtocolANY),
 										string(network.FirewallPolicyIntrusionDetectionProtocolTCP),
 										string(network.FirewallPolicyIntrusionDetectionProtocolUDP),
-									}, true),
+									}, features.CaseInsensitive()),
+									DiffSuppressFunc: suppress.CaseDifferenceV2Only,
 								},
 								"source_addresses": {
 									Type:     pluginsdk.TypeSet,
diff --git a/internal/services/hdinsight/hdinsight_hadoop_cluster_resource.go b/internal/services/hdinsight/hdinsight_hadoop_cluster_resource.go
index 8e2ec520ad..3ab330fa5a 100644
--- a/internal/services/hdinsight/hdinsight_hadoop_cluster_resource.go
+++ b/internal/services/hdinsight/hdinsight_hadoop_cluster_resource.go
@@ -3,6 +3,7 @@ package hdinsight
 import (
 	"context"
 	"fmt"
+	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/suppress"
 	"log"
 	"strings"
 	"time"
@@ -137,9 +138,10 @@ func resourceHDInsightHadoopCluster() *pluginsdk.Resource {
 									},
 
 									"vm_size": {
-										Type:         pluginsdk.TypeString,
-										Required:     true,
-										ValidateFunc: validation.StringInSlice(validate.NodeDefinitionVMSize, false),
+										Type:             pluginsdk.TypeString,
+										Required:         true,
+										DiffSuppressFunc: suppress.CaseDifferenceV2Only,
+										ValidateFunc:     validation.StringInSlice(validate.NodeDefinitionVMSize, false),
 									},
 
 									"install_script_action": {
diff --git a/internal/services/hdinsight/schema.go b/internal/services/hdinsight/schema.go
index 74bf0795eb..5bc323d3c2 100644
--- a/internal/services/hdinsight/schema.go
+++ b/internal/services/hdinsight/schema.go
@@ -2,6 +2,8 @@ package hdinsight
 
 import (
 	"fmt"
+	"github.com/hashicorp/terraform-provider-azurerm/internal/features"
+	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/suppress"
 	"net/url"
 	"regexp"
 	"strings"
@@ -46,7 +48,8 @@ func SchemaHDInsightTier() *pluginsdk.Schema {
 		ValidateFunc: validation.StringInSlice([]string{
 			string(hdinsight.TierStandard),
 			string(hdinsight.TierPremium),
-		}, false),
+		}, features.CaseInsensitive()),
+		DiffSuppressFunc: suppress.CaseDifferenceV2Only,
 	}
 }
 
@@ -1026,10 +1029,11 @@ type HDInsightNodeDefinition struct {
 func SchemaHDInsightNodeDefinition(schemaLocation string, definition HDInsightNodeDefinition, required bool) *pluginsdk.Schema {
 	result := map[string]*pluginsdk.Schema{
 		"vm_size": {
-			Type:         pluginsdk.TypeString,
-			Required:     true,
-			ForceNew:     true,
-			ValidateFunc: validation.StringInSlice(validate.NodeDefinitionVMSize, false),
+			Type:             pluginsdk.TypeString,
+			Required:         true,
+			ForceNew:         true,
+			DiffSuppressFunc: suppress.CaseDifferenceV2Only,
+			ValidateFunc:     validation.StringInSlice(validate.NodeDefinitionVMSize, false),
 		},
 		"username": {
 			Type:     pluginsdk.TypeString,
diff --git a/internal/services/iotcentral/iotcentral_application_resource.go b/internal/services/iotcentral/iotcentral_application_resource.go
index c8364cab23..516e765e70 100644
--- a/internal/services/iotcentral/iotcentral_application_resource.go
+++ b/internal/services/iotcentral/iotcentral_application_resource.go
@@ -87,7 +87,7 @@ func resourceIotCentralApplication() *pluginsdk.Resource {
 					string(apps.AppSkuSTOne),
 					string(apps.AppSkuSTTwo),
 					string(apps.AppSkuSTZero),
-				}, false),
+				}, features.CaseInsensitive()),
 				Default: string(apps.AppSkuSTOne),
 			},
 			"template": {
diff --git a/internal/services/iothub/iothub_resource.go b/internal/services/iothub/iothub_resource.go
index e7394315af..50e1671cd5 100644
--- a/internal/services/iothub/iothub_resource.go
+++ b/internal/services/iothub/iothub_resource.go
@@ -25,6 +25,7 @@ import (
 	servicebusValidate "github.com/hashicorp/terraform-provider-azurerm/internal/services/servicebus/validate"
 	"github.com/hashicorp/terraform-provider-azurerm/internal/tags"
 	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
+	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/suppress"
 	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/validation"
 	"github.com/hashicorp/terraform-provider-azurerm/internal/timeouts"
 	"github.com/hashicorp/terraform-provider-azurerm/utils"
@@ -347,11 +348,13 @@ func resourceIotHub() *pluginsdk.Resource {
 						},
 
 						"encoding": {
-							Type:             pluginsdk.TypeString,
-							Optional:         true,
-							ForceNew:         true,
-							Default:          string(devices.EncodingAvro),
-							DiffSuppressFunc: suppressIfTypeIsNot("AzureIotHub.StorageContainer"),
+							Type:     pluginsdk.TypeString,
+							Optional: true,
+							ForceNew: true,
+							Default:  string(devices.EncodingAvro),
+							DiffSuppressFunc: suppressWhenAny(
+								suppressIfTypeIsNot("AzureIotHub.StorageContainer"),
+								suppress.CaseDifferenceV2Only),
 							ValidateFunc: validation.StringInSlice([]string{
 								string(devices.EncodingAvro),
 								string(devices.EncodingAvroDeflate),
diff --git a/internal/services/keyvault/key_vault_certificate_resource.go b/internal/services/keyvault/key_vault_certificate_resource.go
index d8fca78693..c0cec274c0 100644
--- a/internal/services/keyvault/key_vault_certificate_resource.go
+++ b/internal/services/keyvault/key_vault_certificate_resource.go
@@ -6,6 +6,8 @@ import (
 	"encoding/base64"
 	"encoding/hex"
 	"fmt"
+	"github.com/hashicorp/terraform-provider-azurerm/internal/features"
+	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/suppress"
 	"log"
 	"math"
 	"strings"
@@ -158,7 +160,8 @@ func resourceKeyVaultCertificate() *pluginsdk.Resource {
 											string(keyvault.JSONWebKeyTypeRSA),
 											string(keyvault.JSONWebKeyTypeRSAHSM),
 											string(keyvault.JSONWebKeyTypeOct),
-										}, false),
+										}, features.CaseInsensitive()),
+										DiffSuppressFunc: suppress.CaseDifferenceV2Only,
 									},
 									"reuse_key": {
 										Type:     pluginsdk.TypeBool,
diff --git a/internal/services/legacy/virtual_machine_resource.go b/internal/services/legacy/virtual_machine_resource.go
index 10142be6a9..ec1c2ddff1 100644
--- a/internal/services/legacy/virtual_machine_resource.go
+++ b/internal/services/legacy/virtual_machine_resource.go
@@ -5,6 +5,7 @@ import (
 	"crypto/sha1"
 	"encoding/hex"
 	"fmt"
+	"github.com/hashicorp/terraform-provider-azurerm/internal/features"
 	"log"
 	"strings"
 	"time"
@@ -181,7 +182,7 @@ func resourceVirtualMachine() *pluginsdk.Resource {
 				ValidateFunc: validation.StringInSlice([]string{
 					"Windows_Client",
 					"Windows_Server",
-				}, false),
+				}, features.CaseInsensitive()),
 			},
 
 			"vm_size": {
@@ -247,7 +248,8 @@ func resourceVirtualMachine() *pluginsdk.Resource {
 							ValidateFunc: validation.StringInSlice([]string{
 								string(compute.OperatingSystemTypesLinux),
 								string(compute.OperatingSystemTypesWindows),
-							}, false),
+							}, features.CaseInsensitive()),
+							DiffSuppressFunc: suppress.CaseDifferenceV2Only,
 						},
 
 						"name": {
@@ -282,7 +284,8 @@ func resourceVirtualMachine() *pluginsdk.Resource {
 								string(compute.StorageAccountTypesPremiumLRS),
 								string(compute.StorageAccountTypesStandardLRS),
 								string(compute.StorageAccountTypesStandardSSDLRS),
-							}, false),
+							}, features.CaseInsensitive()),
+							DiffSuppressFunc: suppress.CaseDifferenceV2Only,
 						},
 
 						"image_uri": {
@@ -356,7 +359,8 @@ func resourceVirtualMachine() *pluginsdk.Resource {
 								string(compute.StorageAccountTypesStandardLRS),
 								string(compute.StorageAccountTypesStandardSSDLRS),
 								string(compute.StorageAccountTypesUltraSSDLRS),
-							}, false),
+							}, features.CaseInsensitive()),
+							DiffSuppressFunc: suppress.CaseDifferenceV2Only,
 						},
 
 						"create_option": {
@@ -503,7 +507,8 @@ func resourceVirtualMachine() *pluginsdk.Resource {
 										ValidateFunc: validation.StringInSlice([]string{
 											"HTTP",
 											"HTTPS",
-										}, false),
+										}, features.CaseInsensitive()),
+										DiffSuppressFunc: suppress.CaseDifferenceV2Only,
 									},
 									"certificate_url": {
 										Type:     pluginsdk.TypeString,
diff --git a/internal/services/legacy/virtual_machine_scale_set_resource.go b/internal/services/legacy/virtual_machine_scale_set_resource.go
index 916d168701..723d288090 100644
--- a/internal/services/legacy/virtual_machine_scale_set_resource.go
+++ b/internal/services/legacy/virtual_machine_scale_set_resource.go
@@ -4,6 +4,7 @@ import (
 	"bytes"
 	"context"
 	"fmt"
+	"github.com/hashicorp/terraform-provider-azurerm/internal/features"
 	"log"
 	"strings"
 	"time"
@@ -148,7 +149,7 @@ func resourceVirtualMachineScaleSet() *pluginsdk.Resource {
 				ValidateFunc: validation.StringInSlice([]string{
 					"Windows_Client",
 					"Windows_Server",
-				}, false),
+				}, features.CaseInsensitive()),
 			},
 
 			"upgrade_policy_mode": {
@@ -158,7 +159,8 @@ func resourceVirtualMachineScaleSet() *pluginsdk.Resource {
 					string(compute.UpgradeModeAutomatic),
 					string(compute.UpgradeModeManual),
 					string(compute.UpgradeModeRolling),
-				}, false),
+				}, features.CaseInsensitive()),
+				DiffSuppressFunc: suppress.CaseDifferenceV2Only,
 			},
 
 			"health_probe_id": {
@@ -231,7 +233,8 @@ func resourceVirtualMachineScaleSet() *pluginsdk.Resource {
 				ValidateFunc: validation.StringInSlice([]string{
 					string(compute.VirtualMachinePriorityTypesLow),
 					string(compute.VirtualMachinePriorityTypesRegular),
-				}, false),
+				}, features.CaseInsensitive()),
+				DiffSuppressFunc: suppress.CaseDifferenceV2Only,
 			},
 
 			"eviction_policy": {
@@ -597,7 +600,8 @@ func resourceVirtualMachineScaleSet() *pluginsdk.Resource {
 								string(compute.StorageAccountTypesPremiumLRS),
 								string(compute.StorageAccountTypesStandardLRS),
 								string(compute.StorageAccountTypesStandardSSDLRS),
-							}, false),
+							}, features.CaseInsensitive()),
+							DiffSuppressFunc: suppress.CaseDifferenceV2Only,
 						},
 
 						"caching": {
@@ -656,7 +660,8 @@ func resourceVirtualMachineScaleSet() *pluginsdk.Resource {
 								string(compute.StorageAccountTypesPremiumLRS),
 								string(compute.StorageAccountTypesStandardLRS),
 								string(compute.StorageAccountTypesStandardSSDLRS),
-							}, false),
+							}, features.CaseInsensitive()),
+							DiffSuppressFunc: suppress.CaseDifferenceV2Only,
 						},
 					},
 				},
diff --git a/internal/services/loadbalancer/loadbalancer_resource.go b/internal/services/loadbalancer/loadbalancer_resource.go
index 222f4c640e..a862e68f66 100644
--- a/internal/services/loadbalancer/loadbalancer_resource.go
+++ b/internal/services/loadbalancer/loadbalancer_resource.go
@@ -3,6 +3,7 @@ package loadbalancer
 import (
 	"context"
 	"fmt"
+	"github.com/hashicorp/terraform-provider-azurerm/internal/features"
 	"log"
 	"reflect"
 	"strconv"
@@ -403,7 +404,8 @@ func resourceArmLoadBalancerSchema() map[string]*pluginsdk.Schema {
 				string(network.LoadBalancerSkuNameBasic),
 				string(network.LoadBalancerSkuNameStandard),
 				string(network.LoadBalancerSkuNameGateway),
-			}, false),
+			}, features.CaseInsensitive()),
+			DiffSuppressFunc: suppress.CaseDifferenceV2Only,
 		},
 
 		"sku_tier": {
diff --git a/internal/services/loadbalancer/nat_pool_resource.go b/internal/services/loadbalancer/nat_pool_resource.go
index 9ad8fefef9..37ef7ead24 100644
--- a/internal/services/loadbalancer/nat_pool_resource.go
+++ b/internal/services/loadbalancer/nat_pool_resource.go
@@ -2,6 +2,7 @@ package loadbalancer
 
 import (
 	"fmt"
+	"github.com/hashicorp/terraform-provider-azurerm/internal/features"
 	"log"
 	"time"
 
@@ -67,7 +68,7 @@ func resourceArmLoadBalancerNatPool() *pluginsdk.Resource {
 					string(network.TransportProtocolAll),
 					string(network.TransportProtocolTCP),
 					string(network.TransportProtocolUDP),
-				}, false),
+				}, features.CaseInsensitive()),
 			},
 
 			"frontend_port_start": {
diff --git a/internal/services/loadbalancer/nat_rule_resource.go b/internal/services/loadbalancer/nat_rule_resource.go
index c8a8a1bd18..8cb7a0db39 100644
--- a/internal/services/loadbalancer/nat_rule_resource.go
+++ b/internal/services/loadbalancer/nat_rule_resource.go
@@ -2,6 +2,7 @@ package loadbalancer
 
 import (
 	"fmt"
+	"github.com/hashicorp/terraform-provider-azurerm/internal/features"
 	"log"
 	"time"
 
@@ -67,7 +68,7 @@ func resourceArmLoadBalancerNatRule() *pluginsdk.Resource {
 					string(network.TransportProtocolAll),
 					string(network.TransportProtocolTCP),
 					string(network.TransportProtocolUDP),
-				}, false),
+				}, features.CaseInsensitive()),
 			},
 
 			"frontend_port": {
diff --git a/internal/services/loadbalancer/probe_resource.go b/internal/services/loadbalancer/probe_resource.go
index 47de87848e..ed6caf1caf 100644
--- a/internal/services/loadbalancer/probe_resource.go
+++ b/internal/services/loadbalancer/probe_resource.go
@@ -2,6 +2,7 @@ package loadbalancer
 
 import (
 	"fmt"
+	"github.com/hashicorp/terraform-provider-azurerm/internal/features"
 	"log"
 	"time"
 
@@ -65,7 +66,7 @@ func resourceArmLoadBalancerProbe() *pluginsdk.Resource {
 					string(network.ProbeProtocolHTTP),
 					string(network.ProbeProtocolHTTPS),
 					string(network.ProbeProtocolTCP),
-				}, false),
+				}, features.CaseInsensitive()),
 			},
 
 			"port": {
diff --git a/internal/services/loadbalancer/rule_resource.go b/internal/services/loadbalancer/rule_resource.go
index 1281c2ef8e..f1df0460a4 100644
--- a/internal/services/loadbalancer/rule_resource.go
+++ b/internal/services/loadbalancer/rule_resource.go
@@ -2,6 +2,7 @@ package loadbalancer
 
 import (
 	"fmt"
+	"github.com/hashicorp/terraform-provider-azurerm/internal/features"
 	"log"
 	"time"
 
@@ -379,7 +380,7 @@ func resourceArmLoadBalancerRuleSchema() map[string]*pluginsdk.Schema {
 				string(network.TransportProtocolAll),
 				string(network.TransportProtocolTCP),
 				string(network.TransportProtocolUDP),
-			}, false),
+			}, features.CaseInsensitive()),
 		},
 
 		"frontend_port": {
diff --git a/internal/services/loganalytics/log_analytics_datasource_windows_event_resource.go b/internal/services/loganalytics/log_analytics_datasource_windows_event_resource.go
index 6611d82346..37a7649e11 100644
--- a/internal/services/loganalytics/log_analytics_datasource_windows_event_resource.go
+++ b/internal/services/loganalytics/log_analytics_datasource_windows_event_resource.go
@@ -3,6 +3,7 @@ package loganalytics
 import (
 	"encoding/json"
 	"fmt"
+	"github.com/hashicorp/terraform-provider-azurerm/internal/features"
 	"log"
 	"time"
 
@@ -76,7 +77,8 @@ func resourceLogAnalyticsDataSourceWindowsEvent() *pluginsdk.Resource {
 				Elem: &pluginsdk.Schema{
 					Type: pluginsdk.TypeString,
 					// API backend accepts event_types case-insensitively
-					ValidateFunc: validation.StringInSlice([]string{"Error", "Warning", "Information"}, false),
+					ValidateFunc:     validation.StringInSlice([]string{"Error", "Warning", "Information"}, features.CaseInsensitive()),
+					DiffSuppressFunc: suppress.CaseDifferenceV2Only,
 				},
 			},
 		},
diff --git a/internal/services/loganalytics/log_analytics_workspace_resource.go b/internal/services/loganalytics/log_analytics_workspace_resource.go
index 81ffb799b9..c24f87d289 100644
--- a/internal/services/loganalytics/log_analytics_workspace_resource.go
+++ b/internal/services/loganalytics/log_analytics_workspace_resource.go
@@ -3,6 +3,8 @@ package loganalytics
 import (
 	"context"
 	"fmt"
+	"github.com/hashicorp/terraform-provider-azurerm/internal/features"
+	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/suppress"
 	"log"
 	"strconv"
 	"strings"
@@ -108,7 +110,8 @@ func resourceLogAnalyticsWorkspace() *pluginsdk.Resource {
 					string(workspaces.WorkspaceSkuNameEnumStandard),
 					string(workspaces.WorkspaceSkuNameEnumCapacityReservation),
 					"Unlimited", // TODO check if this is actually no longer valid, removed in v28.0.0 of the SDK
-				}, false),
+				}, features.CaseInsensitive()),
+				DiffSuppressFunc: suppress.CaseDifferenceV2Only,
 			},
 
 			"reservation_capacity_in_gb_per_day": {
diff --git a/internal/services/logic/logic_app_integration_account_batch_configuration_resource.go b/internal/services/logic/logic_app_integration_account_batch_configuration_resource.go
index 0b495e7567..575fd18ed8 100644
--- a/internal/services/logic/logic_app_integration_account_batch_configuration_resource.go
+++ b/internal/services/logic/logic_app_integration_account_batch_configuration_resource.go
@@ -7,6 +7,8 @@ import (
 	"strings"
 	"time"
 
+	"github.com/hashicorp/terraform-provider-azurerm/internal/features"
+
 	"github.com/hashicorp/go-azure-helpers/lang/response"
 	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonschema"
 	"github.com/hashicorp/go-azure-sdk/resource-manager/logic/2019-05-01/integrationaccountbatchconfigurations"
@@ -91,9 +93,10 @@ func resourceLogicAppIntegrationAccountBatchConfiguration() *pluginsdk.Resource
 							Elem: &pluginsdk.Resource{
 								Schema: map[string]*pluginsdk.Schema{
 									"frequency": {
-										Type:         pluginsdk.TypeString,
-										Required:     true,
-										ValidateFunc: validation.StringInSlice(integrationaccountbatchconfigurations.PossibleValuesForRecurrenceFrequency(), false),
+										Type:     pluginsdk.TypeString,
+										Required: true,
+										ValidateFunc: validation.StringInSlice(integrationaccountbatchconfigurations.PossibleValuesForRecurrenceFrequency(),
+											features.CaseInsensitive()),
 									},
 
 									"interval": {
@@ -152,9 +155,10 @@ func resourceLogicAppIntegrationAccountBatchConfiguration() *pluginsdk.Resource
 													Elem: &pluginsdk.Resource{
 														Schema: map[string]*pluginsdk.Schema{
 															"weekday": {
-																Type:         pluginsdk.TypeString,
-																Required:     true,
-																ValidateFunc: validation.StringInSlice(integrationaccountbatchconfigurations.PossibleValuesForDayOfWeek(), false),
+																Type:     pluginsdk.TypeString,
+																Required: true,
+																ValidateFunc: validation.StringInSlice(integrationaccountbatchconfigurations.PossibleValuesForDayOfWeek(),
+																	features.CaseInsensitive()),
 															},
 
 															"week": {
@@ -174,8 +178,9 @@ func resourceLogicAppIntegrationAccountBatchConfiguration() *pluginsdk.Resource
 													Type:     pluginsdk.TypeSet,
 													Optional: true,
 													Elem: &pluginsdk.Schema{
-														Type:         pluginsdk.TypeString,
-														ValidateFunc: validation.StringInSlice(integrationaccountbatchconfigurations.PossibleValuesForDaysOfWeek(), false),
+														Type: pluginsdk.TypeString,
+														ValidateFunc: validation.StringInSlice(integrationaccountbatchconfigurations.PossibleValuesForDaysOfWeek(),
+															features.CaseInsensitive()),
 													},
 													ConflictsWith: []string{"release_criteria.0.recurrence.0.schedule.0.month_days", "release_criteria.0.recurrence.0.schedule.0.monthly"},
 												},
diff --git a/internal/services/logic/logic_app_standard_resource.go b/internal/services/logic/logic_app_standard_resource.go
index 020e55a79d..b8ac92854c 100644
--- a/internal/services/logic/logic_app_standard_resource.go
+++ b/internal/services/logic/logic_app_standard_resource.go
@@ -2,6 +2,8 @@ package logic
 
 import (
 	"fmt"
+	"github.com/hashicorp/terraform-provider-azurerm/internal/features"
+	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/suppress"
 	"log"
 	"strconv"
 	"strings"
@@ -137,7 +139,8 @@ func resourceLogicAppStandard() *pluginsdk.Resource {
 								string(web.ConnectionStringTypeServiceBus),
 								string(web.ConnectionStringTypeSQLAzure),
 								string(web.ConnectionStringTypeSQLServer),
-							}, false),
+							}, features.CaseInsensitive()),
+							DiffSuppressFunc: suppress.CaseDifferenceV2Only,
 						},
 
 						"value": {
@@ -856,7 +859,8 @@ func schemaLogicAppStandardSiteConfig() *pluginsdk.Schema {
 						"v4.0",
 						"v5.0",
 						"v6.0",
-					}, false),
+					}, features.CaseInsensitive()),
+					DiffSuppressFunc: suppress.CaseDifferenceV2Only,
 				},
 
 				"vnet_route_all_enabled": {
diff --git a/internal/services/logz/logz_monitor_resource.go b/internal/services/logz/logz_monitor_resource.go
index fb9e77104c..ad25fee5a4 100644
--- a/internal/services/logz/logz_monitor_resource.go
+++ b/internal/services/logz/logz_monitor_resource.go
@@ -2,6 +2,7 @@ package logz
 
 import (
 	"fmt"
+	"github.com/hashicorp/terraform-provider-azurerm/internal/features"
 	"log"
 	"time"
 
@@ -90,7 +91,8 @@ func resourceLogzMonitor() *pluginsdk.Resource {
 							ValidateFunc: validation.StringInSlice([]string{
 								"MONTHLY",
 								"WEEKLY",
-							}, false),
+							}, features.CaseInsensitive()),
+							DiffSuppressFunc: suppress.CaseDifferenceV2Only,
 						},
 
 						"effective_date": {
@@ -107,8 +109,9 @@ func resourceLogzMonitor() *pluginsdk.Resource {
 							ForceNew: true,
 							ValidateFunc: validation.StringInSlice([]string{
 								PlanId100gb14days,
-							}, false),
-							Default: PlanId100gb14days,
+							}, features.CaseInsensitive()),
+							Default:          PlanId100gb14days,
+							DiffSuppressFunc: suppress.CaseDifferenceV2Only,
 						},
 
 						"usage_type": {
@@ -118,7 +121,8 @@ func resourceLogzMonitor() *pluginsdk.Resource {
 							ValidateFunc: validation.StringInSlice([]string{
 								"PAYG",
 								"COMMITTED",
-							}, false),
+							}, features.CaseInsensitive()),
+							DiffSuppressFunc: suppress.CaseDifferenceV2Only,
 						},
 					},
 				},
diff --git a/internal/services/media/media_services_account_resource.go b/internal/services/media/media_services_account_resource.go
index 5a9e22f850..6afda9b772 100644
--- a/internal/services/media/media_services_account_resource.go
+++ b/internal/services/media/media_services_account_resource.go
@@ -7,6 +7,8 @@ import (
 	"strings"
 	"time"
 
+	"github.com/hashicorp/terraform-provider-azurerm/internal/features"
+
 	"github.com/hashicorp/go-azure-helpers/lang/pointer"
 	"github.com/hashicorp/go-azure-helpers/lang/response"
 	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonids"
@@ -132,7 +134,7 @@ func resourceMediaServicesAccount() *pluginsdk.Resource {
 				ValidateFunc: validation.StringInSlice([]string{
 					string(accounts.StorageAuthenticationSystem),
 					string(accounts.StorageAuthenticationManagedIdentity),
-				}, false),
+				}, features.CaseInsensitive()),
 			},
 
 			"key_delivery_access_control": {
@@ -148,7 +150,7 @@ func resourceMediaServicesAccount() *pluginsdk.Resource {
 							ValidateFunc: validation.StringInSlice([]string{
 								string(accounts.DefaultActionDeny),
 								string(accounts.DefaultActionAllow),
-							}, false),
+							}, features.CaseInsensitive()),
 						},
 
 						"ip_allow_list": {
diff --git a/internal/services/monitor/monitor_autoscale_setting_resource.go b/internal/services/monitor/monitor_autoscale_setting_resource.go
index 1e2f4c3dc0..234fbb5145 100644
--- a/internal/services/monitor/monitor_autoscale_setting_resource.go
+++ b/internal/services/monitor/monitor_autoscale_setting_resource.go
@@ -2,6 +2,8 @@ package monitor
 
 import (
 	"fmt"
+	"github.com/hashicorp/terraform-provider-azurerm/internal/features"
+	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/suppress"
 	"log"
 	"strconv"
 	"time"
@@ -313,7 +315,8 @@ func resourceMonitorAutoScaleSetting() *pluginsdk.Resource {
 												"Friday",
 												"Saturday",
 												"Sunday",
-											}, false),
+											}, features.CaseInsensitive()),
+											DiffSuppressFunc: suppress.CaseDifferenceV2Only,
 										},
 									},
 									"hours": {
diff --git a/internal/services/mssql/mssql_database_resource.go b/internal/services/mssql/mssql_database_resource.go
index 438171abd7..6a4099bc5b 100644
--- a/internal/services/mssql/mssql_database_resource.go
+++ b/internal/services/mssql/mssql_database_resource.go
@@ -3,6 +3,7 @@ package mssql
 import (
 	"context"
 	"fmt"
+	"github.com/hashicorp/terraform-provider-azurerm/internal/features"
 	"log"
 	"strings"
 	"time"
@@ -1015,7 +1016,8 @@ func resourceMsSqlDatabaseSchema() map[string]*pluginsdk.Schema {
 								"Sql_Injection",
 								"Sql_Injection_Vulnerability",
 								"Access_Anomaly",
-							}, false),
+							}, features.CaseInsensitive()),
+							DiffSuppressFunc: suppress.CaseDifferenceV2Only,
 						},
 					},
 
@@ -1026,7 +1028,7 @@ func resourceMsSqlDatabaseSchema() map[string]*pluginsdk.Schema {
 						ValidateFunc: validation.StringInSlice([]string{
 							"Disabled",
 							"Enabled",
-						}, false),
+						}, features.CaseInsensitive()),
 					},
 
 					"email_addresses": {
@@ -1052,7 +1054,7 @@ func resourceMsSqlDatabaseSchema() map[string]*pluginsdk.Schema {
 							string(sql.SecurityAlertPolicyStateDisabled),
 							string(sql.SecurityAlertPolicyStateEnabled),
 							string(sql.SecurityAlertPolicyStateNew),
-						}, false),
+						}, features.CaseInsensitive()),
 					},
 
 					"storage_account_access_key": {
diff --git a/internal/services/mssql/mssql_elasticpool_resource.go b/internal/services/mssql/mssql_elasticpool_resource.go
index b10272c64d..d944375f46 100644
--- a/internal/services/mssql/mssql_elasticpool_resource.go
+++ b/internal/services/mssql/mssql_elasticpool_resource.go
@@ -3,6 +3,8 @@ package mssql
 import (
 	"context"
 	"fmt"
+	"github.com/hashicorp/terraform-provider-azurerm/internal/features"
+	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/suppress"
 	"log"
 	"strings"
 	"time"
@@ -81,7 +83,8 @@ func resourceMsSqlElasticPool() *pluginsdk.Resource {
 								"BC_Gen4",
 								"BC_Gen5",
 								"BC_DC",
-							}, false),
+							}, features.CaseInsensitive()),
+							DiffSuppressFunc: suppress.CaseDifferenceV2Only,
 						},
 
 						"capacity": {
@@ -99,7 +102,8 @@ func resourceMsSqlElasticPool() *pluginsdk.Resource {
 								"Premium",
 								"GeneralPurpose",
 								"BusinessCritical",
-							}, false),
+							}, features.CaseInsensitive()),
+							DiffSuppressFunc: suppress.CaseDifferenceV2Only,
 						},
 
 						"family": {
@@ -110,7 +114,8 @@ func resourceMsSqlElasticPool() *pluginsdk.Resource {
 								"Gen5",
 								"Fsv2",
 								"DC",
-							}, false),
+							}, features.CaseInsensitive()),
+							DiffSuppressFunc: suppress.CaseDifferenceV2Only,
 						},
 					},
 				},
diff --git a/internal/services/mssql/mssql_server_security_alert_policy_resource.go b/internal/services/mssql/mssql_server_security_alert_policy_resource.go
index c34613009d..f45e829f05 100644
--- a/internal/services/mssql/mssql_server_security_alert_policy_resource.go
+++ b/internal/services/mssql/mssql_server_security_alert_policy_resource.go
@@ -2,6 +2,8 @@ package mssql
 
 import (
 	"fmt"
+	"github.com/hashicorp/terraform-provider-azurerm/internal/features"
+	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/suppress"
 	"log"
 	"time"
 
@@ -92,7 +94,8 @@ func resourceMsSqlServerSecurityAlertPolicy() *pluginsdk.Resource {
 					string(sql.SecurityAlertPolicyStateDisabled),
 					string(sql.SecurityAlertPolicyStateEnabled),
 					string(sql.SecurityAlertPolicyStateNew),
-				}, false),
+				}, features.CaseInsensitive()),
+				DiffSuppressFunc: suppress.CaseDifferenceV2Only,
 			},
 
 			"storage_account_access_key": {
diff --git a/internal/services/mysql/mysql_server_resource.go b/internal/services/mysql/mysql_server_resource.go
index 6ca2cab67b..724ad4b039 100644
--- a/internal/services/mysql/mysql_server_resource.go
+++ b/internal/services/mysql/mysql_server_resource.go
@@ -3,6 +3,8 @@ package mysql
 import (
 	"context"
 	"fmt"
+	"github.com/hashicorp/terraform-provider-azurerm/internal/features"
+	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/suppress"
 	"log"
 	"strconv"
 	"strings"
@@ -303,8 +305,9 @@ func resourceMySqlServer() *pluginsdk.Resource {
 				ValidateFunc: validation.StringInSlice([]string{
 					string(mysql.FiveFullStopSeven),
 					string(mysql.EightFullStopZero),
-				}, false),
-				ForceNew: true,
+				}, features.CaseInsensitive()),
+				DiffSuppressFunc: suppress.CaseDifferenceV2Only,
+				ForceNew:         true,
 			},
 		},
 
diff --git a/internal/services/network/application_gateway_resource.go b/internal/services/network/application_gateway_resource.go
index 416621fd65..158c9bfb5d 100644
--- a/internal/services/network/application_gateway_resource.go
+++ b/internal/services/network/application_gateway_resource.go
@@ -4,6 +4,8 @@ import (
 	"bytes"
 	"context"
 	"fmt"
+	"github.com/hashicorp/terraform-provider-azurerm/internal/features"
+	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/suppress"
 	"log"
 	"strings"
 	"time"
@@ -207,7 +209,7 @@ func resourceApplicationGateway() *pluginsdk.Resource {
 							ValidateFunc: validation.StringInSlice([]string{
 								string(network.ProtocolHTTP),
 								string(network.ProtocolHTTPS),
-							}, false),
+							}, features.CaseInsensitive()),
 						},
 
 						"cookie_based_affinity": {
@@ -216,7 +218,7 @@ func resourceApplicationGateway() *pluginsdk.Resource {
 							ValidateFunc: validation.StringInSlice([]string{
 								string(network.ApplicationGatewayCookieBasedAffinityEnabled),
 								string(network.ApplicationGatewayCookieBasedAffinityDisabled),
-							}, false),
+							}, features.CaseInsensitive()),
 						},
 
 						"affinity_cookie_name": {
@@ -343,7 +345,7 @@ func resourceApplicationGateway() *pluginsdk.Resource {
 							ValidateFunc: validation.StringInSlice([]string{
 								string(network.IPAllocationMethodDynamic),
 								string(network.IPAllocationMethodStatic),
-							}, false),
+							}, features.CaseInsensitive()),
 						},
 
 						"private_link_configuration_name": {
@@ -458,7 +460,7 @@ func resourceApplicationGateway() *pluginsdk.Resource {
 							ValidateFunc: validation.StringInSlice([]string{
 								string(network.ProtocolHTTP),
 								string(network.ProtocolHTTPS),
-							}, false),
+							}, features.CaseInsensitive()),
 						},
 
 						"host_name": {
@@ -613,7 +615,8 @@ func resourceApplicationGateway() *pluginsdk.Resource {
 										ValidateFunc: validation.StringInSlice([]string{
 											string(network.IPAllocationMethodDynamic),
 											string(network.IPAllocationMethodStatic),
-										}, false),
+										}, features.CaseInsensitive()),
+										DiffSuppressFunc: suppress.CaseDifferenceV2Only,
 									},
 
 									"primary": {
@@ -821,7 +824,7 @@ func resourceApplicationGateway() *pluginsdk.Resource {
 								string(network.ApplicationGatewaySkuNameWAFLarge),
 								string(network.ApplicationGatewaySkuNameWAFMedium),
 								string(network.ApplicationGatewaySkuNameWAFV2),
-							}, false),
+							}, features.CaseInsensitive()),
 						},
 
 						"tier": {
@@ -832,7 +835,7 @@ func resourceApplicationGateway() *pluginsdk.Resource {
 								string(network.ApplicationGatewayTierStandardV2),
 								string(network.ApplicationGatewayTierWAF),
 								string(network.ApplicationGatewayTierWAFV2),
-							}, false),
+							}, features.CaseInsensitive()),
 						},
 
 						"capacity": {
@@ -933,7 +936,7 @@ func resourceApplicationGateway() *pluginsdk.Resource {
 							ValidateFunc: validation.StringInSlice([]string{
 								string(network.ProtocolHTTP),
 								string(network.ProtocolHTTPS),
-							}, false),
+							}, features.CaseInsensitive()),
 						},
 
 						"path": {
@@ -1402,7 +1405,7 @@ func resourceApplicationGateway() *pluginsdk.Resource {
 							ValidateFunc: validation.StringInSlice([]string{
 								string(network.ApplicationGatewayFirewallModeDetection),
 								string(network.ApplicationGatewayFirewallModePrevention),
-							}, false),
+							}, features.CaseInsensitive()),
 						},
 
 						"rule_set_type": {
diff --git a/internal/services/network/express_route_circuit_resource.go b/internal/services/network/express_route_circuit_resource.go
index 08c892d472..c5daf29c0b 100644
--- a/internal/services/network/express_route_circuit_resource.go
+++ b/internal/services/network/express_route_circuit_resource.go
@@ -3,6 +3,7 @@ package network
 import (
 	"context"
 	"fmt"
+	"github.com/hashicorp/terraform-provider-azurerm/internal/features"
 	"log"
 	"time"
 
@@ -75,7 +76,8 @@ func resourceExpressRouteCircuit() *pluginsdk.Resource {
 								string(network.ExpressRouteCircuitSkuTierLocal),
 								string(network.ExpressRouteCircuitSkuTierStandard),
 								string(network.ExpressRouteCircuitSkuTierPremium),
-							}, false),
+							}, features.CaseInsensitive()),
+							DiffSuppressFunc: suppress.CaseDifferenceV2Only,
 						},
 
 						"family": {
@@ -84,7 +86,8 @@ func resourceExpressRouteCircuit() *pluginsdk.Resource {
 							ValidateFunc: validation.StringInSlice([]string{
 								string(network.ExpressRouteCircuitSkuFamilyMeteredData),
 								string(network.ExpressRouteCircuitSkuFamilyUnlimitedData),
-							}, false),
+							}, features.CaseInsensitive()),
+							DiffSuppressFunc: suppress.CaseDifferenceV2Only,
 						},
 					},
 				},
diff --git a/internal/services/network/network_interface_resource.go b/internal/services/network/network_interface_resource.go
index 07ecb06d4d..8b50708f98 100644
--- a/internal/services/network/network_interface_resource.go
+++ b/internal/services/network/network_interface_resource.go
@@ -2,6 +2,7 @@ package network
 
 import (
 	"fmt"
+	"github.com/hashicorp/terraform-provider-azurerm/internal/features"
 	"log"
 	"time"
 
@@ -95,7 +96,8 @@ func resourceNetworkInterface() *pluginsdk.Resource {
 							ValidateFunc: validation.StringInSlice([]string{
 								string(network.IPAllocationMethodDynamic),
 								string(network.IPAllocationMethodStatic),
-							}, false),
+							}, features.CaseInsensitive()),
+							DiffSuppressFunc: suppress.CaseDifferenceV2Only,
 						},
 
 						"public_ip_address_id": {
diff --git a/internal/services/network/network_security_group_resource.go b/internal/services/network/network_security_group_resource.go
index 2937d42751..8e41e61b27 100644
--- a/internal/services/network/network_security_group_resource.go
+++ b/internal/services/network/network_security_group_resource.go
@@ -10,11 +10,13 @@ import (
 	"github.com/hashicorp/terraform-provider-azurerm/helpers/azure"
 	"github.com/hashicorp/terraform-provider-azurerm/helpers/tf"
 	"github.com/hashicorp/terraform-provider-azurerm/internal/clients"
+	"github.com/hashicorp/terraform-provider-azurerm/internal/features"
 	"github.com/hashicorp/terraform-provider-azurerm/internal/locks"
 	"github.com/hashicorp/terraform-provider-azurerm/internal/services/network/parse"
 	"github.com/hashicorp/terraform-provider-azurerm/internal/tags"
 	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
 	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/set"
+	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/suppress"
 	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/validation"
 	"github.com/hashicorp/terraform-provider-azurerm/internal/timeouts"
 	"github.com/hashicorp/terraform-provider-azurerm/utils"
@@ -81,7 +83,8 @@ func resourceNetworkSecurityGroup() *pluginsdk.Resource {
 								string(network.SecurityRuleProtocolIcmp),
 								string(network.SecurityRuleProtocolAh),
 								string(network.SecurityRuleProtocolEsp),
-							}, false),
+							}, features.CaseInsensitive()),
+							DiffSuppressFunc: suppress.CaseDifferenceV2Only,
 						},
 
 						"source_port_range": {
@@ -152,7 +155,8 @@ func resourceNetworkSecurityGroup() *pluginsdk.Resource {
 							ValidateFunc: validation.StringInSlice([]string{
 								string(network.SecurityRuleAccessAllow),
 								string(network.SecurityRuleAccessDeny),
-							}, false),
+							}, features.CaseInsensitive()),
+							DiffSuppressFunc: suppress.CaseDifferenceV2Only,
 						},
 
 						"priority": {
@@ -167,7 +171,8 @@ func resourceNetworkSecurityGroup() *pluginsdk.Resource {
 							ValidateFunc: validation.StringInSlice([]string{
 								string(network.SecurityRuleDirectionInbound),
 								string(network.SecurityRuleDirectionOutbound),
-							}, false),
+							}, features.CaseInsensitive()),
+							DiffSuppressFunc: suppress.CaseDifferenceV2Only,
 						},
 					},
 				},
diff --git a/internal/services/network/network_security_rule_resource.go b/internal/services/network/network_security_rule_resource.go
index de10ee8c7c..f17772a4ab 100644
--- a/internal/services/network/network_security_rule_resource.go
+++ b/internal/services/network/network_security_rule_resource.go
@@ -8,8 +8,10 @@ import (
 	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonschema"
 	"github.com/hashicorp/terraform-provider-azurerm/helpers/tf"
 	"github.com/hashicorp/terraform-provider-azurerm/internal/clients"
+	"github.com/hashicorp/terraform-provider-azurerm/internal/features"
 	"github.com/hashicorp/terraform-provider-azurerm/internal/services/network/parse"
 	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
+	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/suppress"
 	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/validation"
 	"github.com/hashicorp/terraform-provider-azurerm/internal/timeouts"
 	"github.com/hashicorp/terraform-provider-azurerm/utils"
@@ -65,7 +67,8 @@ func resourceNetworkSecurityRule() *pluginsdk.Resource {
 					string(network.SecurityRuleProtocolIcmp),
 					string(network.SecurityRuleProtocolAh),
 					string(network.SecurityRuleProtocolEsp),
-				}, false),
+				}, features.CaseInsensitive()),
+				DiffSuppressFunc: suppress.CaseDifferenceV2Only,
 			},
 
 			"source_port_range": {
@@ -127,7 +130,7 @@ func resourceNetworkSecurityRule() *pluginsdk.Resource {
 			//lintignore:S018
 			"source_application_security_group_ids": {
 				Type:     pluginsdk.TypeSet,
-				MaxItems: 10,
+				MaxItems: 1,
 				Optional: true,
 				Elem:     &pluginsdk.Schema{Type: pluginsdk.TypeString},
 				Set:      pluginsdk.HashString,
@@ -136,7 +139,7 @@ func resourceNetworkSecurityRule() *pluginsdk.Resource {
 			//lintignore:S018
 			"destination_application_security_group_ids": {
 				Type:     pluginsdk.TypeSet,
-				MaxItems: 10,
+				MaxItems: 1,
 				Optional: true,
 				Elem:     &pluginsdk.Schema{Type: pluginsdk.TypeString},
 				Set:      pluginsdk.HashString,
@@ -148,7 +151,8 @@ func resourceNetworkSecurityRule() *pluginsdk.Resource {
 				ValidateFunc: validation.StringInSlice([]string{
 					string(network.SecurityRuleAccessAllow),
 					string(network.SecurityRuleAccessDeny),
-				}, false),
+				}, features.CaseInsensitive()),
+				DiffSuppressFunc: suppress.CaseDifferenceV2Only,
 			},
 
 			"priority": {
@@ -163,7 +167,8 @@ func resourceNetworkSecurityRule() *pluginsdk.Resource {
 				ValidateFunc: validation.StringInSlice([]string{
 					string(network.SecurityRuleDirectionInbound),
 					string(network.SecurityRuleDirectionOutbound),
-				}, false),
+				}, features.CaseInsensitive()),
+				DiffSuppressFunc: suppress.CaseDifferenceV2Only,
 			},
 		},
 	}
diff --git a/internal/services/network/public_ip_prefix_resource.go b/internal/services/network/public_ip_prefix_resource.go
index 8500dbc632..b4b4c693ad 100644
--- a/internal/services/network/public_ip_prefix_resource.go
+++ b/internal/services/network/public_ip_prefix_resource.go
@@ -2,6 +2,8 @@ package network
 
 import (
 	"fmt"
+	"github.com/hashicorp/terraform-provider-azurerm/internal/features"
+	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/suppress"
 	"log"
 	"time"
 
@@ -70,14 +72,15 @@ func resourcePublicIpPrefix() *pluginsdk.Resource {
 			},
 
 			"ip_version": {
-				Type:     pluginsdk.TypeString,
-				Optional: true,
-				Default:  string(network.IPVersionIPv4),
-				ForceNew: true,
+				Type:             pluginsdk.TypeString,
+				Optional:         true,
+				Default:          string(network.IPVersionIPv4),
+				ForceNew:         true,
+				DiffSuppressFunc: suppress.CaseDifferenceV2Only,
 				ValidateFunc: validation.StringInSlice([]string{
 					string(network.IPVersionIPv4),
 					string(network.IPVersionIPv6),
-				}, false),
+				}, features.CaseInsensitive()),
 			},
 
 			"zones": commonschema.ZonesMultipleOptionalForceNew(),
diff --git a/internal/services/network/public_ip_resource.go b/internal/services/network/public_ip_resource.go
index 825aea4914..4af8a28410 100644
--- a/internal/services/network/public_ip_resource.go
+++ b/internal/services/network/public_ip_resource.go
@@ -2,6 +2,8 @@ package network
 
 import (
 	"fmt"
+	"github.com/hashicorp/terraform-provider-azurerm/internal/features"
+	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/suppress"
 	"log"
 	"strings"
 	"time"
@@ -84,14 +86,15 @@ func resourcePublicIp() *pluginsdk.Resource {
 			"edge_zone": commonschema.EdgeZoneOptionalForceNew(),
 
 			"ip_version": {
-				Type:     pluginsdk.TypeString,
-				Optional: true,
-				Default:  string(network.IPVersionIPv4),
-				ForceNew: true,
+				Type:             pluginsdk.TypeString,
+				Optional:         true,
+				Default:          string(network.IPVersionIPv4),
+				ForceNew:         true,
+				DiffSuppressFunc: suppress.CaseDifferenceV2Only,
 				ValidateFunc: validation.StringInSlice([]string{
 					string(network.IPVersionIPv4),
 					string(network.IPVersionIPv6),
-				}, false),
+				}, features.CaseInsensitive()),
 			},
 
 			"sku": {
@@ -102,7 +105,7 @@ func resourcePublicIp() *pluginsdk.Resource {
 				ValidateFunc: validation.StringInSlice([]string{
 					string(network.PublicIPAddressSkuNameBasic),
 					string(network.PublicIPAddressSkuNameStandard),
-				}, false),
+				}, features.CaseInsensitive()),
 			},
 
 			"sku_tier": {
diff --git a/internal/services/network/route_resource.go b/internal/services/network/route_resource.go
index a5f4272fd9..dce0b8f892 100644
--- a/internal/services/network/route_resource.go
+++ b/internal/services/network/route_resource.go
@@ -2,6 +2,8 @@ package network
 
 import (
 	"fmt"
+	"github.com/hashicorp/terraform-provider-azurerm/internal/features"
+	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/suppress"
 	"time"
 
 	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonschema"
@@ -68,7 +70,8 @@ func resourceRoute() *pluginsdk.Resource {
 					string(network.RouteNextHopTypeInternet),
 					string(network.RouteNextHopTypeVirtualAppliance),
 					string(network.RouteNextHopTypeNone),
-				}, false),
+				}, features.CaseInsensitive()),
+				DiffSuppressFunc: suppress.CaseDifferenceV2Only,
 			},
 
 			"next_hop_in_ip_address": {
diff --git a/internal/services/network/route_table_resource.go b/internal/services/network/route_table_resource.go
index 325d935601..8e391dd17a 100644
--- a/internal/services/network/route_table_resource.go
+++ b/internal/services/network/route_table_resource.go
@@ -2,6 +2,8 @@ package network
 
 import (
 	"fmt"
+	"github.com/hashicorp/terraform-provider-azurerm/internal/features"
+	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/suppress"
 	"log"
 	"time"
 
@@ -81,7 +83,8 @@ func resourceRouteTable() *pluginsdk.Resource {
 								string(network.RouteNextHopTypeInternet),
 								string(network.RouteNextHopTypeVirtualAppliance),
 								string(network.RouteNextHopTypeNone),
-							}, false),
+							}, features.CaseInsensitive()),
+							DiffSuppressFunc: suppress.CaseDifferenceV2Only,
 						},
 
 						"next_hop_in_ip_address": {
diff --git a/internal/services/network/virtual_network_gateway_connection_resource.go b/internal/services/network/virtual_network_gateway_connection_resource.go
index 9043491926..0ad999353e 100644
--- a/internal/services/network/virtual_network_gateway_connection_resource.go
+++ b/internal/services/network/virtual_network_gateway_connection_resource.go
@@ -2,6 +2,8 @@ package network
 
 import (
 	"fmt"
+	"github.com/hashicorp/terraform-provider-azurerm/internal/features"
+	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/suppress"
 	"log"
 	"time"
 
@@ -58,7 +60,8 @@ func resourceVirtualNetworkGatewayConnection() *pluginsdk.Resource {
 					string(network.VirtualNetworkGatewayConnectionTypeExpressRoute),
 					string(network.VirtualNetworkGatewayConnectionTypeIPsec),
 					string(network.VirtualNetworkGatewayConnectionTypeVnet2Vnet),
-				}, false),
+				}, features.CaseInsensitive()),
+				DiffSuppressFunc: suppress.CaseDifferenceV2Only,
 			},
 
 			"virtual_network_gateway_id": {
@@ -241,7 +244,7 @@ func resourceVirtualNetworkGatewayConnection() *pluginsdk.Resource {
 								string(network.DhGroupECP256),
 								string(network.DhGroupECP384),
 								string(network.DhGroupNone),
-							}, false),
+							}, features.CaseInsensitive()),
 						},
 
 						"ike_encryption": {
@@ -255,7 +258,7 @@ func resourceVirtualNetworkGatewayConnection() *pluginsdk.Resource {
 								string(network.IkeEncryptionDES3),
 								string(network.IkeEncryptionGCMAES128),
 								string(network.IkeEncryptionGCMAES256),
-							}, false),
+							}, features.CaseInsensitive()),
 						},
 
 						"ike_integrity": {
@@ -268,7 +271,7 @@ func resourceVirtualNetworkGatewayConnection() *pluginsdk.Resource {
 								string(network.IkeIntegritySHA1),
 								string(network.IkeIntegritySHA256),
 								string(network.IkeIntegritySHA384),
-							}, false),
+							}, features.CaseInsensitive()),
 						},
 
 						"ipsec_encryption": {
@@ -284,7 +287,7 @@ func resourceVirtualNetworkGatewayConnection() *pluginsdk.Resource {
 								string(network.IpsecEncryptionGCMAES192),
 								string(network.IpsecEncryptionGCMAES256),
 								string(network.IpsecEncryptionNone),
-							}, false),
+							}, features.CaseInsensitive()),
 						},
 
 						"ipsec_integrity": {
@@ -297,7 +300,7 @@ func resourceVirtualNetworkGatewayConnection() *pluginsdk.Resource {
 								string(network.IpsecIntegrityMD5),
 								string(network.IpsecIntegritySHA1),
 								string(network.IpsecIntegritySHA256),
-							}, false),
+							}, features.CaseInsensitive()),
 						},
 
 						"pfs_group": {
@@ -313,7 +316,7 @@ func resourceVirtualNetworkGatewayConnection() *pluginsdk.Resource {
 								string(network.PfsGroupPFS2048),
 								string(network.PfsGroupPFS24),
 								string(network.PfsGroupPFSMM),
-							}, false),
+							}, features.CaseInsensitive()),
 						},
 
 						"sa_datasize": {
diff --git a/internal/services/network/virtual_network_gateway_resource.go b/internal/services/network/virtual_network_gateway_resource.go
index fdfc5e5497..7ef3a52139 100644
--- a/internal/services/network/virtual_network_gateway_resource.go
+++ b/internal/services/network/virtual_network_gateway_resource.go
@@ -3,6 +3,7 @@ package network
 import (
 	"bytes"
 	"fmt"
+	"github.com/hashicorp/terraform-provider-azurerm/internal/features"
 	"log"
 	"time"
 
@@ -64,7 +65,7 @@ func resourceVirtualNetworkGatewaySchema() map[string]*pluginsdk.Schema {
 			ValidateFunc: validation.StringInSlice([]string{
 				string(network.VirtualNetworkGatewayTypeExpressRoute),
 				string(network.VirtualNetworkGatewayTypeVpn),
-			}, false),
+			}, features.CaseInsensitive()),
 		},
 
 		"vpn_type": {
@@ -75,7 +76,7 @@ func resourceVirtualNetworkGatewaySchema() map[string]*pluginsdk.Schema {
 			ValidateFunc: validation.StringInSlice([]string{
 				string(network.VpnTypeRouteBased),
 				string(network.VpnTypePolicyBased),
-			}, false),
+			}, features.CaseInsensitive()),
 		},
 
 		"edge_zone": commonschema.EdgeZoneOptionalForceNew(),
@@ -280,7 +281,8 @@ func resourceVirtualNetworkGatewaySchema() map[string]*pluginsdk.Schema {
 								string(network.VpnClientProtocolIkeV2),
 								string(network.VpnClientProtocolOpenVPN),
 								string(network.VpnClientProtocolSSTP),
-							}, false),
+							}, features.CaseInsensitive()),
+							DiffSuppressFunc: suppress.CaseDifferenceV2Only,
 						},
 					},
 				},
diff --git a/internal/services/network/virtual_network_resource_test.go b/internal/services/network/virtual_network_resource_test.go
index 4490e5e362..b8df48bb47 100644
--- a/internal/services/network/virtual_network_resource_test.go
+++ b/internal/services/network/virtual_network_resource_test.go
@@ -330,6 +330,52 @@ resource "azurerm_virtual_network" "test" {
 }
 `, data.RandomInteger, data.Locations.Primary, data.RandomInteger)
 }
+func TestVirtualNetworkResource_tagCount(t *testing.T) {
+	data := acceptance.BuildTestData(t, "azurerm_virtual_network", "test")
+	r := VirtualNetworkResource{}
+
+	data.ResourceTest(t, r, []acceptance.TestStep{
+		{
+			Config: r.tagCount(data),
+			Check: acceptance.ComposeTestCheckFunc(
+				check.That(data.ResourceName).ExistsInAzure(r),
+			),
+		},
+		data.ImportStep(),
+	})
+}
+func (r VirtualNetworkResource) tagCount(data acceptance.TestData) string {
+	tags := ""
+	for i := 0; i < 50; i++ {
+		tags += fmt.Sprintf("t%d = \"v%d\"\n", i, i)
+	}
+
+	return fmt.Sprintf(`
+provider "azurerm" {
+  features {}
+}
+
+resource "azurerm_resource_group" "test" {
+  name     = "acctestRG-%d"
+  location = "%s"
+}
+
+resource "azurerm_virtual_network" "test" {
+  name                = "acctestvirtnet%d"
+  address_space       = ["10.0.0.0/16"]
+  location            = azurerm_resource_group.test.location
+  resource_group_name = azurerm_resource_group.test.name
+
+  subnet {
+    name           = "subnet1"
+    address_prefix = "10.0.1.0/24"
+  }
+  tags = {
+                                    %s
+  }
+}
+`, data.RandomInteger, data.Locations.Primary, data.RandomInteger, tags)
+}
 
 func (r VirtualNetworkResource) tagCount(data acceptance.TestData) string {
 	tags := ""
diff --git a/internal/services/notificationhub/notification_hub_namespace_resource.go b/internal/services/notificationhub/notification_hub_namespace_resource.go
index d43b6b6168..6ea1b70c9a 100644
--- a/internal/services/notificationhub/notification_hub_namespace_resource.go
+++ b/internal/services/notificationhub/notification_hub_namespace_resource.go
@@ -3,6 +3,7 @@ package notificationhub
 import (
 	"context"
 	"fmt"
+	"github.com/hashicorp/terraform-provider-azurerm/internal/features"
 	"log"
 	"strconv"
 	"time"
@@ -79,7 +80,7 @@ func resourceNotificationHubNamespace() *pluginsdk.Resource {
 				ValidateFunc: validation.StringInSlice([]string{
 					string(namespaces.NamespaceTypeMessaging),
 					string(namespaces.NamespaceTypeNotificationHub),
-				}, false),
+				}, features.CaseInsensitive()),
 			},
 
 			"tags": commonschema.Tags(),
diff --git a/internal/services/policy/policy_definition_resource.go b/internal/services/policy/policy_definition_resource.go
index f1f4369d0d..48640eede5 100644
--- a/internal/services/policy/policy_definition_resource.go
+++ b/internal/services/policy/policy_definition_resource.go
@@ -3,6 +3,7 @@ package policy
 import (
 	"context"
 	"fmt"
+	"github.com/hashicorp/terraform-provider-azurerm/internal/features"
 	"log"
 	"strconv"
 	"time"
@@ -300,7 +301,7 @@ func resourceArmPolicyDefinitionSchema() map[string]*pluginsdk.Schema {
 				string(policy.TypeCustom),
 				string(policy.TypeNotSpecified),
 				string(policy.TypeStatic),
-			}, false),
+			}, features.CaseInsensitive()),
 		},
 
 		"mode": {
diff --git a/internal/services/portal/portal_dashboard_resource_test.go b/internal/services/portal/portal_dashboard_resource_test.go
index 6d5b5e838b..60fc24fa2d 100644
--- a/internal/services/portal/portal_dashboard_resource_test.go
+++ b/internal/services/portal/portal_dashboard_resource_test.go
@@ -72,6 +72,7 @@ func (PortalDashboardResource) Exists(ctx context.Context, clients *clients.Clie
 }
 
 func (PortalDashboardResource) basic(data acceptance.TestData) string {
+	resourceName := "azurerm_portal_dashboard"
 	return fmt.Sprintf(`
 provider "azurerm" {
   features {}
@@ -93,10 +94,12 @@ resource "azurerm_portal_dashboard" "test" {
 }
 DASH
 }
-`, data.RandomInteger, data.Locations.Primary)
+`, data.RandomInteger, data.Locations.Primary, resourceName)
 }
 
 func (PortalDashboardResource) complete(data acceptance.TestData) string {
+	resourceName := "azurerm_portal_dashboard"
+
 	return fmt.Sprintf(`
 provider "azurerm" {
   features {}
@@ -147,7 +150,7 @@ resource "azurerm_portal_dashboard" "test" {
 }
 DASH
 }
-`, data.RandomInteger, data.Locations.Primary)
+`, data.RandomInteger, data.Locations.Primary, resourceName)
 }
 
 func (PortalDashboardResource) hiddenTitle(data acceptance.TestData) string {
diff --git a/internal/services/postgres/postgresql_server_resource.go b/internal/services/postgres/postgresql_server_resource.go
index 1b069d032b..89bd76279c 100644
--- a/internal/services/postgres/postgresql_server_resource.go
+++ b/internal/services/postgres/postgresql_server_resource.go
@@ -3,6 +3,8 @@ package postgres
 import (
 	"context"
 	"fmt"
+	"github.com/hashicorp/terraform-provider-azurerm/internal/features"
+	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/suppress"
 	"log"
 	"strconv"
 	"strings"
@@ -127,10 +129,12 @@ func resourcePostgreSQLServer() *pluginsdk.Resource {
 			},
 
 			"version": {
-				Type:         pluginsdk.TypeString,
-				Required:     true,
-				ForceNew:     true,
-				ValidateFunc: validation.StringInSlice(servers.PossibleValuesForServerVersion(), false),
+				Type:     pluginsdk.TypeString,
+				Required: true,
+				ForceNew: true,
+				ValidateFunc: validation.StringInSlice(servers.PossibleValuesForServerVersion(),
+					features.CaseInsensitive()),
+				DiffSuppressFunc: suppress.CaseDifferenceV2Only,
 			},
 
 			"administrator_login": {
diff --git a/internal/services/recoveryservices/recovery_services_vault_resource.go b/internal/services/recoveryservices/recovery_services_vault_resource.go
index 64ab28635d..7e5a45d47a 100644
--- a/internal/services/recoveryservices/recovery_services_vault_resource.go
+++ b/internal/services/recoveryservices/recovery_services_vault_resource.go
@@ -7,6 +7,8 @@ import (
 	"strings"
 	"time"
 
+	"github.com/hashicorp/terraform-provider-azurerm/internal/features"
+
 	"github.com/hashicorp/go-azure-helpers/lang/pointer"
 	"github.com/hashicorp/go-azure-helpers/lang/response"
 	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonids"
@@ -117,7 +119,7 @@ func resourceRecoveryServicesVault() *pluginsdk.Resource {
 				ValidateFunc: validation.StringInSlice([]string{
 					string(vaults.SkuNameRSZero),
 					string(vaults.SkuNameStandard),
-				}, false),
+				}, features.CaseInsensitive()),
 			},
 
 			"storage_mode_type": {
diff --git a/internal/services/recoveryservices/site_recovery_replicated_vm_resource.go b/internal/services/recoveryservices/site_recovery_replicated_vm_resource.go
index 872f4eb0ee..d62fc13b8b 100644
--- a/internal/services/recoveryservices/site_recovery_replicated_vm_resource.go
+++ b/internal/services/recoveryservices/site_recovery_replicated_vm_resource.go
@@ -217,7 +217,7 @@ func resourceSiteRecoveryReplicatedVM() *pluginsdk.Resource {
 								string(disks.DiskStorageAccountTypesPremiumLRS),
 								string(disks.DiskStorageAccountTypesStandardSSDLRS),
 								string(disks.DiskStorageAccountTypesUltraSSDLRS),
-							}, false),
+							}, features.CaseInsensitive()),
 						},
 						"target_replica_disk_type": {
 							Type:     pluginsdk.TypeString,
@@ -228,7 +228,7 @@ func resourceSiteRecoveryReplicatedVM() *pluginsdk.Resource {
 								string(disks.DiskStorageAccountTypesPremiumLRS),
 								string(disks.DiskStorageAccountTypesStandardSSDLRS),
 								string(disks.DiskStorageAccountTypesUltraSSDLRS),
-							}, false),
+							}, features.CaseInsensitive()),
 						},
 						"target_disk_encryption_set_id": {
 							Type:             pluginsdk.TypeString,
diff --git a/internal/services/redis/redis_cache_resource.go b/internal/services/redis/redis_cache_resource.go
index 3fb52ea195..43132b9c81 100644
--- a/internal/services/redis/redis_cache_resource.go
+++ b/internal/services/redis/redis_cache_resource.go
@@ -3,6 +3,7 @@ package redis
 import (
 	"context"
 	"fmt"
+	"github.com/hashicorp/terraform-provider-azurerm/internal/features"
 	"log"
 	"strconv"
 	"strings"
@@ -96,7 +97,8 @@ func resourceRedisCache() *pluginsdk.Resource {
 					string(redis.SkuNameBasic),
 					string(redis.SkuNameStandard),
 					string(redis.SkuNamePremium),
-				}, false),
+				}, features.CaseInsensitive()),
+				DiffSuppressFunc: suppress.CaseDifferenceV2Only,
 			},
 
 			"minimum_tls_version": {
diff --git a/internal/services/redis/redis_linked_server_resource.go b/internal/services/redis/redis_linked_server_resource.go
index 7cf429fc97..21f5732bc5 100644
--- a/internal/services/redis/redis_linked_server_resource.go
+++ b/internal/services/redis/redis_linked_server_resource.go
@@ -3,6 +3,7 @@ package redis
 import (
 	"context"
 	"fmt"
+	"github.com/hashicorp/terraform-provider-azurerm/internal/features"
 	"log"
 	"time"
 
@@ -66,7 +67,7 @@ func resourceRedisLinkedServer() *pluginsdk.Resource {
 				ValidateFunc: validation.StringInSlice([]string{
 					string(redis.ReplicationRolePrimary),
 					string(redis.ReplicationRoleSecondary),
-				}, false),
+				}, features.CaseInsensitive()),
 			},
 
 			"name": {
diff --git a/internal/services/resource/template_deployment_resource.go b/internal/services/resource/template_deployment_resource.go
index 967e8dad76..522c781070 100644
--- a/internal/services/resource/template_deployment_resource.go
+++ b/internal/services/resource/template_deployment_resource.go
@@ -4,6 +4,7 @@ import (
 	"context"
 	"encoding/json"
 	"fmt"
+	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/suppress"
 	"log"
 	"strconv"
 	"strings"
@@ -13,6 +14,7 @@ import (
 	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonschema"
 	"github.com/hashicorp/terraform-provider-azurerm/helpers/tf"
 	"github.com/hashicorp/terraform-provider-azurerm/internal/clients"
+	"github.com/hashicorp/terraform-provider-azurerm/internal/features"
 	"github.com/hashicorp/terraform-provider-azurerm/internal/services/resource/migration"
 	"github.com/hashicorp/terraform-provider-azurerm/internal/services/resource/parse"
 	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
@@ -80,7 +82,8 @@ func resourceTemplateDeployment() *pluginsdk.Resource {
 				ValidateFunc: validation.StringInSlice([]string{
 					string(resources.DeploymentModeComplete),
 					string(resources.DeploymentModeIncremental),
-				}, false),
+				}, features.CaseInsensitive()),
+				DiffSuppressFunc: suppress.CaseDifferenceV2Only,
 			},
 
 			"outputs": {
diff --git a/internal/services/securitycenter/security_center_automation_resource.go b/internal/services/securitycenter/security_center_automation_resource.go
index 20389ea030..0f4e6d6564 100644
--- a/internal/services/securitycenter/security_center_automation_resource.go
+++ b/internal/services/securitycenter/security_center_automation_resource.go
@@ -2,6 +2,8 @@ package securitycenter
 
 import (
 	"fmt"
+	"github.com/hashicorp/terraform-provider-azurerm/internal/features"
+	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/suppress"
 	"log"
 	"strings"
 	"time"
@@ -98,7 +100,8 @@ func resourceSecurityCenterAutomation() *pluginsdk.Resource {
 								typeLogicApp,
 								typeLogAnalytics,
 								typeEventHub,
-							}, false),
+							}, features.CaseInsensitive()),
+							DiffSuppressFunc: suppress.CaseDifferenceV2Only,
 						},
 
 						"resource_id": {
@@ -177,7 +180,8 @@ func resourceSecurityCenterAutomation() *pluginsdk.Resource {
 														string(security.LesserThanOrEqualTo),
 														string(security.NotEquals),
 														string(security.StartsWith),
-													}, false),
+													}, features.CaseInsensitive()),
+													DiffSuppressFunc: suppress.CaseDifferenceV2Only,
 												},
 												"property_type": {
 													Type:     pluginsdk.TypeString,
@@ -187,7 +191,8 @@ func resourceSecurityCenterAutomation() *pluginsdk.Resource {
 														string(security.String),
 														string(security.Boolean),
 														string(security.Number),
-													}, false),
+													}, features.CaseInsensitive()),
+													DiffSuppressFunc: suppress.CaseDifferenceV2Only,
 												},
 											},
 										},
diff --git a/internal/services/securitycenter/security_center_server_vulnerability_assessment_resource.go b/internal/services/securitycenter/security_center_server_vulnerability_assessment_resource.go
index f52d923f81..6bc1417618 100644
--- a/internal/services/securitycenter/security_center_server_vulnerability_assessment_resource.go
+++ b/internal/services/securitycenter/security_center_server_vulnerability_assessment_resource.go
@@ -23,6 +23,7 @@ const (
 	hybridMachineProvider  = "Microsoft.HybridCompute"
 )
 
+// TODO: 3.0 - split this into two resources for VM and HybridVM
 func resourceServerVulnerabilityAssessment() *pluginsdk.Resource {
 	return &pluginsdk.Resource{
 		Create: resourceServerVulnerabilityAssessmentCreate,
diff --git a/internal/services/servicebus/servicebus_namespace_resource.go b/internal/services/servicebus/servicebus_namespace_resource.go
index e2b17981a8..dcc13c48ae 100644
--- a/internal/services/servicebus/servicebus_namespace_resource.go
+++ b/internal/services/servicebus/servicebus_namespace_resource.go
@@ -3,6 +3,8 @@ package servicebus
 import (
 	"context"
 	"fmt"
+	"github.com/hashicorp/terraform-provider-azurerm/internal/features"
+	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/suppress"
 	"log"
 	"strings"
 	"time"
@@ -82,7 +84,8 @@ func resourceServiceBusNamespace() *pluginsdk.Resource {
 					string(namespaces.SkuNameBasic),
 					string(namespaces.SkuNameStandard),
 					string(namespaces.SkuNamePremium),
-				}, false),
+				}, features.CaseInsensitive()),
+				DiffSuppressFunc: suppress.CaseDifferenceV2Only,
 			},
 
 			"capacity": {
diff --git a/internal/services/servicebus/servicebus_queue_resource.go b/internal/services/servicebus/servicebus_queue_resource.go
index 127ff0c669..e669e42a62 100644
--- a/internal/services/servicebus/servicebus_queue_resource.go
+++ b/internal/services/servicebus/servicebus_queue_resource.go
@@ -43,6 +43,8 @@ func resourceServiceBusQueue() *pluginsdk.Resource {
 	}
 }
 
+// FORK: @stack72: Ensured the ResourceGroupName and NamespaceName was available as a computed attribute for use
+// in the servicebus mixins in Pulumi
 func resourceServicebusQueueSchema() map[string]*pluginsdk.Schema {
 	return map[string]*pluginsdk.Schema{
 		"name": {
@@ -163,6 +165,16 @@ func resourceServicebusQueueSchema() map[string]*pluginsdk.Schema {
 			ForceNew: true,
 		},
 
+		"resource_group_name": {
+			Type:     pluginsdk.TypeString,
+			Computed: true,
+		},
+
+		"namespace_name": {
+			Type:     pluginsdk.TypeString,
+			Computed: true,
+		},
+
 		"status": {
 			Type:     pluginsdk.TypeString,
 			Optional: true,
@@ -372,6 +384,8 @@ func resourceServiceBusQueueRead(d *pluginsdk.ResourceData, meta interface{}) er
 
 	d.Set("name", id.QueueName)
 	d.Set("namespace_id", namespaceId.ID())
+	d.Set("resource_group_name", id.ResourceGroupName)
+	d.Set("namespace_name", id.NamespaceName)
 
 	if model := resp.Model; model != nil {
 		if props := model.Properties; props != nil {
diff --git a/internal/services/servicebus/servicebus_subscription_rule_resource.go b/internal/services/servicebus/servicebus_subscription_rule_resource.go
index d968ab977c..195c70661c 100644
--- a/internal/services/servicebus/servicebus_subscription_rule_resource.go
+++ b/internal/services/servicebus/servicebus_subscription_rule_resource.go
@@ -2,6 +2,7 @@ package servicebus
 
 import (
 	"fmt"
+	"github.com/hashicorp/terraform-provider-azurerm/internal/features"
 	"log"
 	"time"
 
@@ -66,7 +67,8 @@ func resourceServicebusSubscriptionRuleSchema() map[string]*pluginsdk.Schema {
 			ValidateFunc: validation.StringInSlice([]string{
 				string(subscriptions.FilterTypeSqlFilter),
 				string(subscriptions.FilterTypeCorrelationFilter),
-			}, false),
+			}, features.CaseInsensitive()),
+			DiffSuppressFunc: suppress.CaseDifferenceV2Only,
 		},
 
 		"action": {
diff --git a/internal/services/servicebus/servicebus_topic_resource.go b/internal/services/servicebus/servicebus_topic_resource.go
index 59e2fddfc9..2f7391cf7f 100644
--- a/internal/services/servicebus/servicebus_topic_resource.go
+++ b/internal/services/servicebus/servicebus_topic_resource.go
@@ -2,6 +2,8 @@ package servicebus
 
 import (
 	"fmt"
+	"github.com/hashicorp/terraform-provider-azurerm/internal/features"
+	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/suppress"
 	"log"
 	"time"
 
@@ -41,6 +43,8 @@ func resourceServiceBusTopic() *pluginsdk.Resource {
 	}
 }
 
+// FORK: @stack72: Ensured the ResourceGroupName and NamespaceName was available as a computed attribute for use
+// in the servicebus mixins in Pulumi
 func resourceServiceBusTopicSchema() map[string]*pluginsdk.Schema {
 	return map[string]*pluginsdk.Schema{
 		"name": {
@@ -65,7 +69,8 @@ func resourceServiceBusTopicSchema() map[string]*pluginsdk.Schema {
 			ValidateFunc: validation.StringInSlice([]string{
 				string(topics.EntityStatusActive),
 				string(topics.EntityStatusDisabled),
-			}, false),
+			}, features.CaseInsensitive()),
+			DiffSuppressFunc: suppress.CaseDifferenceV2Only,
 		},
 
 		"auto_delete_on_idle": {
@@ -132,6 +137,16 @@ func resourceServiceBusTopicSchema() map[string]*pluginsdk.Schema {
 			Type:     pluginsdk.TypeBool,
 			Optional: true,
 		},
+
+		"resource_group_name": {
+			Type:     pluginsdk.TypeString,
+			Computed: true,
+		},
+
+		"namespace_name": {
+			Type:     pluginsdk.TypeString,
+			Computed: true,
+		},
 	}
 }
 
@@ -237,6 +252,10 @@ func resourceServiceBusTopicRead(d *pluginsdk.ResourceData, meta interface{}) er
 	d.Set("name", id.TopicName)
 	d.Set("namespace_id", topics.NewNamespaceID(id.SubscriptionId, id.ResourceGroupName, id.NamespaceName).ID())
 
+	// FORK: We must maintain these properties in order to keep Pulumi mixins working.
+	d.Set("namespace_name", id.NamespaceName)
+	d.Set("resource_group_name", id.ResourceGroupName)
+
 	if model := resp.Model; model != nil {
 		if props := model.Properties; props != nil {
 			status := ""
diff --git a/internal/services/sql/sql_database_resource.go b/internal/services/sql/sql_database_resource.go
index 858f598da3..b14a73a846 100644
--- a/internal/services/sql/sql_database_resource.go
+++ b/internal/services/sql/sql_database_resource.go
@@ -14,6 +14,7 @@ import (
 	"github.com/hashicorp/terraform-provider-azurerm/helpers/azure"
 	"github.com/hashicorp/terraform-provider-azurerm/helpers/tf"
 	"github.com/hashicorp/terraform-provider-azurerm/internal/clients"
+	"github.com/hashicorp/terraform-provider-azurerm/internal/features"
 	"github.com/hashicorp/terraform-provider-azurerm/internal/services/mssql/validate"
 	"github.com/hashicorp/terraform-provider-azurerm/internal/services/sql/parse"
 	"github.com/hashicorp/terraform-provider-azurerm/internal/tags"
@@ -467,7 +468,7 @@ func resourceSqlDatabaseSchema() map[string]*pluginsdk.Schema {
 				string(sql.CreateModeRecovery),
 				string(sql.CreateModeRestore),
 				string(sql.CreateModeRestoreLongTermRetentionBackup),
-			}, false),
+			}, features.CaseInsensitive()),
 		},
 
 		"import": {
@@ -491,7 +492,7 @@ func resourceSqlDatabaseSchema() map[string]*pluginsdk.Schema {
 						ValidateFunc: validation.StringInSlice([]string{
 							"StorageAccessKey",
 							"SharedAccessKey",
-						}, false),
+						}, features.CaseInsensitive()),
 					},
 					"administrator_login": {
 						Type:     pluginsdk.TypeString,
@@ -508,7 +509,7 @@ func resourceSqlDatabaseSchema() map[string]*pluginsdk.Schema {
 						ValidateFunc: validation.StringInSlice([]string{
 							"ADPassword",
 							"SQL",
-						}, false),
+						}, features.CaseInsensitive()),
 					},
 					"operation_mode": {
 						Type:     pluginsdk.TypeString,
@@ -516,7 +517,7 @@ func resourceSqlDatabaseSchema() map[string]*pluginsdk.Schema {
 						Default:  "Import",
 						ValidateFunc: validation.StringInSlice([]string{
 							"Import",
-						}, false),
+						}, features.CaseInsensitive()),
 					},
 				},
 			},
@@ -554,7 +555,7 @@ func resourceSqlDatabaseSchema() map[string]*pluginsdk.Schema {
 				string(sql.System),
 				string(sql.System2),
 				string(sql.Web),
-			}, false),
+			}, features.CaseInsensitive()),
 		},
 
 		"collation": {
@@ -639,7 +640,8 @@ func resourceSqlDatabaseSchema() map[string]*pluginsdk.Schema {
 								"Sql_Injection",
 								"Sql_Injection_Vulnerability",
 								"Access_Anomaly",
-							}, false),
+							}, features.CaseInsensitive()),
+							DiffSuppressFunc: suppress.CaseDifferenceV2Only,
 						},
 					},
 
@@ -650,7 +652,7 @@ func resourceSqlDatabaseSchema() map[string]*pluginsdk.Schema {
 						ValidateFunc: validation.StringInSlice([]string{
 							string(sql.SecurityAlertPolicyEmailAccountAdminsDisabled),
 							string(sql.SecurityAlertPolicyEmailAccountAdminsEnabled),
-						}, false),
+						}, features.CaseInsensitive()),
 					},
 
 					"email_addresses": {
@@ -676,7 +678,7 @@ func resourceSqlDatabaseSchema() map[string]*pluginsdk.Schema {
 							string(sql.SecurityAlertPolicyStateDisabled),
 							string(sql.SecurityAlertPolicyStateEnabled),
 							string(sql.SecurityAlertPolicyStateNew),
-						}, false),
+						}, features.CaseInsensitive()),
 					},
 
 					"storage_account_access_key": {
diff --git a/internal/services/sql/sql_managed_instance_resource.go b/internal/services/sql/sql_managed_instance_resource.go
index a324c81df6..7ab4a138dd 100644
--- a/internal/services/sql/sql_managed_instance_resource.go
+++ b/internal/services/sql/sql_managed_instance_resource.go
@@ -3,6 +3,8 @@ package sql
 import (
 	"context"
 	"fmt"
+	"github.com/hashicorp/terraform-provider-azurerm/internal/features"
+	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/suppress"
 	"log"
 	"strings"
 	"time"
@@ -110,7 +112,8 @@ func resourceArmSqlMiServer() *schema.Resource {
 				ValidateFunc: validation.StringInSlice([]string{
 					"LicenseIncluded",
 					"BasePrice",
-				}, false),
+				}, features.CaseInsensitive()),
+				DiffSuppressFunc: suppress.CaseDifferenceV2Only,
 			},
 
 			"subnet_id": {
diff --git a/internal/services/sql/sql_server_resource.go b/internal/services/sql/sql_server_resource.go
index c701c9a1b0..e2e8cbb7c5 100644
--- a/internal/services/sql/sql_server_resource.go
+++ b/internal/services/sql/sql_server_resource.go
@@ -3,6 +3,8 @@ package sql
 import (
 	"context"
 	"fmt"
+	"github.com/hashicorp/terraform-provider-azurerm/internal/features"
+	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/suppress"
 	"log"
 	"strings"
 	"time"
@@ -115,7 +117,8 @@ func resourceSqlServer() *pluginsdk.Resource {
 									"Access_Anomaly",
 									"Data_Exfiltration",
 									"Unsafe_Action",
-								}, false),
+								}, features.CaseInsensitive()),
+								DiffSuppressFunc: suppress.CaseDifferenceV2Only,
 							},
 						},
 
@@ -149,7 +152,7 @@ func resourceSqlServer() *pluginsdk.Resource {
 								string(sql.SecurityAlertPolicyStateDisabled),
 								string(sql.SecurityAlertPolicyStateEnabled),
 								string(sql.SecurityAlertPolicyStateNew), // Only kept for backward compatibility - TODO investigate if we can remove this in 4.0
-							}, false),
+							}, features.CaseInsensitive()),
 						},
 
 						"storage_account_access_key": {
diff --git a/internal/services/storage/storage_account_data_source.go b/internal/services/storage/storage_account_data_source.go
index 8a52e281be..ceb38abbaf 100644
--- a/internal/services/storage/storage_account_data_source.go
+++ b/internal/services/storage/storage_account_data_source.go
@@ -34,7 +34,8 @@ func dataSourceStorageAccount() *pluginsdk.Resource {
 				ValidateFunc: validate.StorageAccountName,
 			},
 
-			"resource_group_name": commonschema.ResourceGroupNameForDataSource(),
+			// Fork: Ensuring that ResourceGroupName is optional when getting a storage account
+			"resource_group_name": commonschema.ResourceGroupNameOptional(),
 
 			"location": commonschema.LocationComputed(),
 
@@ -331,11 +332,28 @@ func dataSourceStorageAccount() *pluginsdk.Resource {
 }
 
 func dataSourceStorageAccountRead(d *pluginsdk.ResourceData, meta interface{}) error {
+	storageClient := meta.(*clients.Client).Storage
 	client := meta.(*clients.Client).Storage.AccountsClient
 	subscriptionId := meta.(*clients.Client).Account.SubscriptionId
 	ctx, cancel := timeouts.ForRead(meta.(*clients.Client).StopContext, d)
 	defer cancel()
 
+	name := d.Get("name").(string)
+	var resourceGroup string
+	if rg, ok := d.GetOk("resource_group_name"); ok {
+		resourceGroup = rg.(string)
+	} else {
+		account, err := storageClient.FindAccount(ctx, name)
+		if err != nil {
+			return fmt.Errorf("Error retrieving Account %q: %s", name, err)
+		}
+		if account == nil {
+			return fmt.Errorf("Unable to locate Account %q", name)
+		}
+		resourceGroup = account.ResourceGroup
+		d.Set("resource_group_name", resourceGroup)
+	}
+
 	storageDomainSuffix, ok := meta.(*clients.Client).Account.Environment.Storage.DomainSuffix()
 	if !ok {
 		return fmt.Errorf("could not determine Storage domain suffix for environment %q", meta.(*clients.Client).Account.Environment.Name)
diff --git a/internal/services/storage/storage_account_resource.go b/internal/services/storage/storage_account_resource.go
index 5d837e8b2f..38caab031b 100644
--- a/internal/services/storage/storage_account_resource.go
+++ b/internal/services/storage/storage_account_resource.go
@@ -3,6 +3,8 @@ package storage
 import (
 	"context"
 	"fmt"
+	"github.com/hashicorp/terraform-provider-azurerm/internal/features"
+	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/suppress"
 	"log"
 	"net/http"
 	"net/url"
@@ -126,8 +128,9 @@ func resourceStorageAccount() *pluginsdk.Resource {
 					string(storage.KindBlockBlobStorage),
 					string(storage.KindFileStorage),
 					string(storage.KindStorageV2),
-				}, false),
-				Default: string(storage.KindStorageV2),
+				}, features.CaseInsensitive()),
+				DiffSuppressFunc: suppress.CaseDifferenceV2Only,
+				Default:          string(storage.KindStorageV2),
 			},
 
 			"account_tier": {
@@ -137,7 +140,8 @@ func resourceStorageAccount() *pluginsdk.Resource {
 				ValidateFunc: validation.StringInSlice([]string{
 					"Standard",
 					"Premium",
-				}, false),
+				}, features.CaseInsensitive()),
+				DiffSuppressFunc: suppress.CaseDifferenceV2Only,
 			},
 
 			"account_replication_type": {
@@ -150,7 +154,8 @@ func resourceStorageAccount() *pluginsdk.Resource {
 					"RAGRS",
 					"GZRS",
 					"RAGZRS",
-				}, false),
+				}, features.CaseInsensitive()),
+				DiffSuppressFunc: suppress.CaseDifferenceV2Only,
 			},
 
 			// Only valid for BlobStorage & StorageV2 accounts, defaults to "Hot" in create function
@@ -161,7 +166,8 @@ func resourceStorageAccount() *pluginsdk.Resource {
 				ValidateFunc: validation.StringInSlice([]string{
 					string(storage.AccessTierCool),
 					string(storage.AccessTierHot),
-				}, false),
+				}, features.CaseInsensitive()),
+				DiffSuppressFunc: suppress.CaseDifferenceV2Only,
 			},
 
 			"azure_files_authentication": {
@@ -379,7 +385,8 @@ func resourceStorageAccount() *pluginsdk.Resource {
 									string(storage.BypassLogging),
 									string(storage.BypassMetrics),
 									string(storage.BypassNone),
-								}, false),
+								}, features.CaseInsensitive()),
+								DiffSuppressFunc: suppress.CaseDifferenceV2Only,
 							},
 							Set: pluginsdk.HashString,
 						},
diff --git a/internal/services/storage/storage_management_policy_resource.go b/internal/services/storage/storage_management_policy_resource.go
index 89eee77915..35dcb26dd2 100644
--- a/internal/services/storage/storage_management_policy_resource.go
+++ b/internal/services/storage/storage_management_policy_resource.go
@@ -131,10 +131,9 @@ func resourceStorageManagementPolicy() *pluginsdk.Resource {
 													ValidateFunc: validation.IntBetween(0, 99999),
 												},
 												"tier_to_cool_after_days_since_last_access_time_greater_than": {
-													Type:         pluginsdk.TypeInt,
-													Optional:     true,
-													Default:      -1,
-													ValidateFunc: validation.IntBetween(0, 99999),
+													Type:     pluginsdk.TypeInt,
+													Optional: true,
+													Default:  -1,
 												},
 												"auto_tier_to_hot_from_cool_enabled": {
 													Type:     pluginsdk.TypeBool,
diff --git a/internal/services/synapse/synapse_sql_pool_security_alert_policy_resource.go b/internal/services/synapse/synapse_sql_pool_security_alert_policy_resource.go
index f07c93c91c..5e9b8d0ac8 100644
--- a/internal/services/synapse/synapse_sql_pool_security_alert_policy_resource.go
+++ b/internal/services/synapse/synapse_sql_pool_security_alert_policy_resource.go
@@ -2,6 +2,8 @@ package synapse
 
 import (
 	"fmt"
+	"github.com/hashicorp/terraform-provider-azurerm/internal/features"
+	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/suppress"
 	"log"
 	"time"
 
@@ -87,7 +89,8 @@ func resourceSynapseSqlPoolSecurityAlertPolicy() *pluginsdk.Resource {
 					string(synapse.SecurityAlertPolicyStateDisabled),
 					string(synapse.SecurityAlertPolicyStateEnabled),
 					string(synapse.SecurityAlertPolicyStateNew),
-				}, false),
+				}, features.CaseInsensitive()),
+				DiffSuppressFunc: suppress.CaseDifferenceV2Only,
 			},
 
 			"storage_account_access_key": {
diff --git a/internal/services/synapse/synapse_workspace_security_alert_policy_resource.go b/internal/services/synapse/synapse_workspace_security_alert_policy_resource.go
index 3489104184..c84dd8082a 100644
--- a/internal/services/synapse/synapse_workspace_security_alert_policy_resource.go
+++ b/internal/services/synapse/synapse_workspace_security_alert_policy_resource.go
@@ -2,6 +2,8 @@ package synapse
 
 import (
 	"fmt"
+	"github.com/hashicorp/terraform-provider-azurerm/internal/features"
+	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/suppress"
 	"log"
 	"time"
 
@@ -87,7 +89,8 @@ func resourceSynapseWorkspaceSecurityAlertPolicy() *pluginsdk.Resource {
 					string(synapse.SecurityAlertPolicyStateDisabled),
 					string(synapse.SecurityAlertPolicyStateEnabled),
 					string(synapse.SecurityAlertPolicyStateNew),
-				}, false),
+				}, features.CaseInsensitive()),
+				DiffSuppressFunc: suppress.CaseDifferenceV2Only,
 			},
 
 			"storage_account_access_key": {
diff --git a/internal/services/trafficmanager/traffic_manager_profile_resource.go b/internal/services/trafficmanager/traffic_manager_profile_resource.go
index 288b279d0a..ac2775802c 100644
--- a/internal/services/trafficmanager/traffic_manager_profile_resource.go
+++ b/internal/services/trafficmanager/traffic_manager_profile_resource.go
@@ -2,6 +2,8 @@ package trafficmanager
 
 import (
 	"fmt"
+	"github.com/hashicorp/terraform-provider-azurerm/internal/features"
+	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/suppress"
 	"log"
 	"strconv"
 	"strings"
@@ -57,7 +59,8 @@ func resourceArmTrafficManagerProfile() *pluginsdk.Resource {
 				ValidateFunc: validation.StringInSlice([]string{
 					string(profiles.ProfileStatusEnabled),
 					string(profiles.ProfileStatusDisabled),
-				}, false),
+				}, features.CaseInsensitive()),
+				DiffSuppressFunc: suppress.CaseDifferenceV2Only,
 			},
 
 			"traffic_routing_method": {
@@ -133,7 +136,8 @@ func resourceArmTrafficManagerProfile() *pluginsdk.Resource {
 								string(profiles.MonitorProtocolHTTP),
 								string(profiles.MonitorProtocolHTTPS),
 								string(profiles.MonitorProtocolTCP),
-							}, false),
+							}, features.CaseInsensitive()),
+							DiffSuppressFunc: suppress.CaseDifferenceV2Only,
 						},
 
 						"port": {
diff --git a/internal/services/web/app_service.go b/internal/services/web/app_service.go
index 441b9ab6f0..1dfa1864e6 100644
--- a/internal/services/web/app_service.go
+++ b/internal/services/web/app_service.go
@@ -2,6 +2,8 @@ package web
 
 import (
 	"fmt"
+	"github.com/hashicorp/terraform-provider-azurerm/internal/features"
+	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/suppress"
 	"log"
 	"strings"
 
@@ -258,7 +260,8 @@ func schemaAppServiceSiteConfig() *pluginsdk.Schema {
 						"v4.0",
 						"v5.0",
 						"v6.0",
-					}, false),
+					}, features.CaseInsensitive()),
+					DiffSuppressFunc: suppress.CaseDifferenceV2Only,
 				},
 
 				"http2_enabled": {
@@ -290,7 +293,8 @@ func schemaAppServiceSiteConfig() *pluginsdk.Schema {
 						"JAVA",
 						"JETTY",
 						"TOMCAT",
-					}, false),
+					}, features.CaseInsensitive()),
+					DiffSuppressFunc: suppress.CaseDifferenceV2Only,
 				},
 
 				"java_container_version": {
@@ -311,7 +315,8 @@ func schemaAppServiceSiteConfig() *pluginsdk.Schema {
 					ValidateFunc: validation.StringInSlice([]string{
 						string(web.ManagedPipelineModeClassic),
 						string(web.ManagedPipelineModeIntegrated),
-					}, false),
+					}, features.CaseInsensitive()),
+					DiffSuppressFunc: suppress.CaseDifferenceV2Only,
 				},
 
 				"php_version": {
@@ -344,9 +349,10 @@ func schemaAppServiceSiteConfig() *pluginsdk.Schema {
 				},
 
 				"remote_debugging_version": {
-					Type:     pluginsdk.TypeString,
-					Optional: true,
-					Computed: true,
+					Type:             pluginsdk.TypeString,
+					Optional:         true,
+					Computed:         true,
+					DiffSuppressFunc: suppress.CaseDifferenceV2Only,
 					ValidateFunc: validation.StringInSlice([]string{
 						"VS2017",
 						"VS2019",
diff --git a/internal/services/web/app_service_certificate_order_resource.go b/internal/services/web/app_service_certificate_order_resource.go
index 1ce60d4635..f18d4d6666 100644
--- a/internal/services/web/app_service_certificate_order_resource.go
+++ b/internal/services/web/app_service_certificate_order_resource.go
@@ -2,6 +2,7 @@ package web
 
 import (
 	"fmt"
+	"github.com/hashicorp/terraform-provider-azurerm/internal/features"
 	"log"
 	"time"
 
@@ -110,7 +111,7 @@ func resourceAppServiceCertificateOrder() *pluginsdk.Resource {
 				ValidateFunc: validation.StringInSlice([]string{
 					"Standard",
 					"WildCard",
-				}, false),
+				}, features.CaseInsensitive()),
 			},
 
 			"validity_in_years": {
diff --git a/internal/services/web/function_app.go b/internal/services/web/function_app.go
index 797d940e7c..f29b4da953 100644
--- a/internal/services/web/function_app.go
+++ b/internal/services/web/function_app.go
@@ -3,6 +3,8 @@ package web
 import (
 	"context"
 	"fmt"
+	"github.com/hashicorp/terraform-provider-azurerm/internal/features"
+	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/suppress"
 	"log"
 	"strings"
 
@@ -161,7 +163,8 @@ func schemaAppServiceFunctionAppSiteConfig() *pluginsdk.Schema {
 						"v4.0",
 						"v5.0",
 						"v6.0",
-					}, false),
+					}, features.CaseInsensitive()),
+					DiffSuppressFunc: suppress.CaseDifferenceV2Only,
 				},
 
 				"vnet_route_all_enabled": {
diff --git a/internal/services/web/function_app_slot_resource.go b/internal/services/web/function_app_slot_resource.go
index f5da0048e7..08740abac0 100644
--- a/internal/services/web/function_app_slot_resource.go
+++ b/internal/services/web/function_app_slot_resource.go
@@ -256,6 +256,7 @@ func resourceFunctionAppSlotCreate(d *pluginsdk.ResourceData, meta interface{})
 
 	appServicePlanID := d.Get("app_service_plan_id").(string)
 	enabled := d.Get("enabled").(bool)
+	clientAffinityEnabled := d.Get("client_affinity_enabled").(bool)
 	httpsOnly := d.Get("https_only").(bool)
 	dailyMemoryTimeQuota := d.Get("daily_memory_time_quota").(int)
 	t := d.Get("tags").(map[string]interface{})
@@ -278,11 +279,12 @@ func resourceFunctionAppSlotCreate(d *pluginsdk.ResourceData, meta interface{})
 		Location: &location,
 		Tags:     tags.Expand(t),
 		SiteProperties: &web.SiteProperties{
-			ServerFarmID:         utils.String(appServicePlanID),
-			Enabled:              utils.Bool(enabled),
-			HTTPSOnly:            utils.Bool(httpsOnly),
-			DailyMemoryTimeQuota: utils.Int32(int32(dailyMemoryTimeQuota)),
-			SiteConfig:           &siteConfig,
+			ServerFarmID:          utils.String(appServicePlanID),
+			Enabled:               utils.Bool(enabled),
+			ClientAffinityEnabled: utils.Bool(clientAffinityEnabled),
+			HTTPSOnly:             utils.Bool(httpsOnly),
+			DailyMemoryTimeQuota:  utils.Int32(int32(dailyMemoryTimeQuota)),
+			SiteConfig:            &siteConfig,
 		},
 	}
 
@@ -346,6 +348,7 @@ func resourceFunctionAppSlotUpdate(d *pluginsdk.ResourceData, meta interface{})
 	}
 	appServicePlanID := d.Get("app_service_plan_id").(string)
 	enabled := d.Get("enabled").(bool)
+	clientAffinityEnabled := d.Get("client_affinity_enabled").(bool)
 	httpsOnly := d.Get("https_only").(bool)
 	dailyMemoryTimeQuota := d.Get("daily_memory_time_quota").(int)
 	t := d.Get("tags").(map[string]interface{})
@@ -378,11 +381,12 @@ func resourceFunctionAppSlotUpdate(d *pluginsdk.ResourceData, meta interface{})
 		Location: &location,
 		Tags:     tags.Expand(t),
 		SiteProperties: &web.SiteProperties{
-			ServerFarmID:         utils.String(appServicePlanID),
-			Enabled:              utils.Bool(enabled),
-			HTTPSOnly:            utils.Bool(httpsOnly),
-			DailyMemoryTimeQuota: utils.Int32(int32(dailyMemoryTimeQuota)),
-			SiteConfig:           &siteConfig,
+			ServerFarmID:          utils.String(appServicePlanID),
+			Enabled:               utils.Bool(enabled),
+			ClientAffinityEnabled: utils.Bool(clientAffinityEnabled),
+			HTTPSOnly:             utils.Bool(httpsOnly),
+			DailyMemoryTimeQuota:  utils.Int32(int32(dailyMemoryTimeQuota)),
+			SiteConfig:            &siteConfig,
 		},
 	}
 
-- 
2.39.1

