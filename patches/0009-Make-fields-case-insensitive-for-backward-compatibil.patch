From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Daniel Bradley <daniel@pulumi.com>
Date: Wed, 22 May 2024 13:18:05 +0100
Subject: [PATCH] Make fields case-insensitive for backward compatibility

Try to make diffs as robust and mergable as possible:
- Minimise the amount of code reformatting around by adding comments where needed.
- Put added import lines in own block to avoid conflicts.
- Update 2024-09 - only maintain case insensitivity for properties which cause replacement (ForceNew=true).

Revert automation and cdn
Revert compute_image
Revert compute virtual_machine_data_disk_attachment

diff --git a/internal/features/four_point_oh.go b/internal/features/four_point_oh.go
index cb63f60555..c807830589 100644
--- a/internal/features/four_point_oh.go
+++ b/internal/features/four_point_oh.go
@@ -47,3 +47,9 @@ func FourPointOh() bool {
 func FourPointOhBeta() bool {
 	return FourPointOh() || strings.EqualFold(os.Getenv("ARM_FOURPOINTZERO_BETA"), "true")
 }
+
+// FORK: Small function to help us not make a breaking change in the Pulumi
+// provider where all Enums have been changed to case sensitive
+func CaseInsensitive() bool {
+	return true
+}
diff --git a/internal/services/containers/container_group_resource.go b/internal/services/containers/container_group_resource.go
index da09e66dfa..7413a4326e 100644
--- a/internal/services/containers/container_group_resource.go
+++ b/internal/services/containers/container_group_resource.go
@@ -11,6 +11,8 @@ import (
 	"strings"
 	"time"
 
+	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/suppress"
+
 	"github.com/hashicorp/go-azure-helpers/lang/pointer"
 	"github.com/hashicorp/go-azure-helpers/lang/response"
 	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonids"
@@ -72,7 +74,8 @@ func resourceContainerGroup() *pluginsdk.Resource {
 					string(containerinstance.ContainerGroupIPAddressTypePublic),
 					string(containerinstance.ContainerGroupIPAddressTypePrivate),
 					"None",
-				}, false),
+				}, features.CaseInsensitive()),
+				DiffSuppressFunc: suppress.CaseDifferenceV2Only,
 			},
 
 			"os_type": {
@@ -82,7 +85,8 @@ func resourceContainerGroup() *pluginsdk.Resource {
 				ValidateFunc: validation.StringInSlice([]string{
 					string(containerinstance.OperatingSystemTypesWindows),
 					string(containerinstance.OperatingSystemTypesLinux),
-				}, false),
+				}, features.CaseInsensitive()),
+				DiffSuppressFunc: suppress.CaseDifferenceV2Only,
 			},
 
 			"image_registry_credential": {
@@ -168,7 +172,7 @@ func resourceContainerGroup() *pluginsdk.Resource {
 					string(containerinstance.ContainerGroupRestartPolicyAlways),
 					string(containerinstance.ContainerGroupRestartPolicyNever),
 					string(containerinstance.ContainerGroupRestartPolicyOnFailure),
-				}, false),
+				}, features.CaseInsensitive()),
 			},
 
 			"dns_name_label": {
diff --git a/internal/services/containers/kubernetes_cluster_resource.go b/internal/services/containers/kubernetes_cluster_resource.go
index a10233de5a..7d5c6baebf 100644
--- a/internal/services/containers/kubernetes_cluster_resource.go
+++ b/internal/services/containers/kubernetes_cluster_resource.go
@@ -1065,7 +1065,7 @@ func resourceKubernetesCluster() *pluginsdk.Resource {
 							ValidateFunc: validation.StringInSlice([]string{
 								string(managedclusters.LoadBalancerSkuBasic),
 								string(managedclusters.LoadBalancerSkuStandard),
-							}, false),
+							}, features.CaseInsensitive()),
 						},
 
 						"outbound_type": {
diff --git a/internal/services/cosmos/cosmosdb_account_resource.go b/internal/services/cosmos/cosmosdb_account_resource.go
index 61deee1531..434c9ffc09 100644
--- a/internal/services/cosmos/cosmosdb_account_resource.go
+++ b/internal/services/cosmos/cosmosdb_account_resource.go
@@ -291,7 +291,7 @@ func resourceCosmosDbAccount() *pluginsdk.Resource {
 					string(cosmosdb.DatabaseAccountKindGlobalDocumentDB),
 					string(cosmosdb.DatabaseAccountKindMongoDB),
 					string(cosmosdb.DatabaseAccountKindParse),
-				}, false),
+				}, features.CaseInsensitive()),
 			},
 
 			"ip_range_filter": func() *schema.Schema {
diff --git a/internal/services/hdinsight/schema.go b/internal/services/hdinsight/schema.go
index a573be6683..987968c1b2 100644
--- a/internal/services/hdinsight/schema.go
+++ b/internal/services/hdinsight/schema.go
@@ -9,6 +9,9 @@ import (
 	"regexp"
 	"strings"
 
+	"github.com/hashicorp/terraform-provider-azurerm/internal/features"
+	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/suppress"
+
 	"github.com/hashicorp/go-azure-helpers/lang/pointer"
 	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonids"
 	"github.com/hashicorp/go-azure-helpers/resourcemanager/identity"
@@ -42,7 +45,8 @@ func SchemaHDInsightTier() *pluginsdk.Schema {
 		ValidateFunc: validation.StringInSlice([]string{
 			string(clusters.TierStandard),
 			string(clusters.TierPremium),
-		}, false),
+		}, features.CaseInsensitive()),
+		DiffSuppressFunc: suppress.CaseDifferenceV2Only,
 	}
 }
 
@@ -1169,6 +1173,8 @@ func SchemaHDInsightNodeDefinition(schemaLocation string, definition HDInsightNo
 			Required:     true,
 			ForceNew:     true,
 			ValidateFunc: validation.StringInSlice(validate.NodeDefinitionVMSize, false),
+			// FORK: Force attributes to maintain case-insensitivity to avoid breaking changes in Pulumi programs.
+			DiffSuppressFunc: suppress.CaseDifferenceV2Only,
 		},
 		"username": {
 			Type:     pluginsdk.TypeString,
diff --git a/internal/services/iothub/iothub_resource.go b/internal/services/iothub/iothub_resource.go
index cf865dbe59..1caa9d1158 100644
--- a/internal/services/iothub/iothub_resource.go
+++ b/internal/services/iothub/iothub_resource.go
@@ -13,6 +13,8 @@ import (
 	"strings"
 	"time"
 
+	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/suppress"
+
 	"github.com/hashicorp/go-azure-helpers/lang/pointer"
 	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonids"
 	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonschema"
@@ -359,7 +361,7 @@ func resourceIotHub() *pluginsdk.Resource {
 							Optional:         true,
 							ForceNew:         true,
 							Default:          string(devices.EncodingAvro),
-							DiffSuppressFunc: suppressIfTypeIsNot("AzureIotHub.StorageContainer"),
+							DiffSuppressFunc: suppress.CaseDifferenceV2Only,
 							ValidateFunc: validation.StringInSlice([]string{
 								string(devices.EncodingAvro),
 								string(devices.EncodingAvroDeflate),
diff --git a/internal/services/legacy/virtual_machine_scale_set_resource.go b/internal/services/legacy/virtual_machine_scale_set_resource.go
index 799f142449..2904422c56 100644
--- a/internal/services/legacy/virtual_machine_scale_set_resource.go
+++ b/internal/services/legacy/virtual_machine_scale_set_resource.go
@@ -12,6 +12,8 @@ import (
 	"strings"
 	"time"
 
+	"github.com/hashicorp/terraform-provider-azurerm/internal/features"
+
 	"github.com/hashicorp/go-azure-helpers/lang/pointer"
 	"github.com/hashicorp/go-azure-helpers/lang/response"
 	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonschema"
@@ -206,7 +208,8 @@ func resourceVirtualMachineScaleSet() *pluginsdk.Resource {
 				ValidateFunc: validation.StringInSlice([]string{
 					string(virtualmachinescalesets.VirtualMachinePriorityTypesLow),
 					string(virtualmachinescalesets.VirtualMachinePriorityTypesRegular),
-				}, false),
+				}, features.CaseInsensitive()),
+				DiffSuppressFunc: suppress.CaseDifferenceV2Only,
 			},
 
 			"eviction_policy": {
diff --git a/internal/services/loadbalancer/loadbalancer_resource.go b/internal/services/loadbalancer/loadbalancer_resource.go
index 2c052ba849..007e62e902 100644
--- a/internal/services/loadbalancer/loadbalancer_resource.go
+++ b/internal/services/loadbalancer/loadbalancer_resource.go
@@ -403,7 +403,8 @@ func resourceArmLoadBalancerSchema() map[string]*pluginsdk.Schema {
 				string(loadbalancers.LoadBalancerSkuNameBasic),
 				string(loadbalancers.LoadBalancerSkuNameStandard),
 				string(loadbalancers.LoadBalancerSkuNameGateway),
-			}, false),
+			}, features.CaseInsensitive()),
+			DiffSuppressFunc: suppress.CaseDifferenceV2Only,
 		},
 
 		"sku_tier": {
diff --git a/internal/services/logz/logz_monitor_resource.go b/internal/services/logz/logz_monitor_resource.go
index 4c3ad9df42..852dc41fd4 100644
--- a/internal/services/logz/logz_monitor_resource.go
+++ b/internal/services/logz/logz_monitor_resource.go
@@ -8,6 +8,8 @@ import (
 	"log"
 	"time"
 
+	"github.com/hashicorp/terraform-provider-azurerm/internal/features"
+
 	"github.com/hashicorp/go-azure-helpers/lang/pointer"
 	"github.com/hashicorp/go-azure-helpers/lang/response"
 	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonschema"
@@ -95,7 +97,8 @@ func resourceLogzMonitor() *pluginsdk.Resource {
 							ValidateFunc: validation.StringInSlice([]string{
 								"MONTHLY",
 								"WEEKLY",
-							}, false),
+							}, features.CaseInsensitive()),
+							DiffSuppressFunc: suppress.CaseDifferenceV2Only,
 						},
 
 						"effective_date": {
@@ -112,8 +115,9 @@ func resourceLogzMonitor() *pluginsdk.Resource {
 							ForceNew: true,
 							ValidateFunc: validation.StringInSlice([]string{
 								PlanId100gb14days,
-							}, false),
-							Default: PlanId100gb14days,
+							}, features.CaseInsensitive()),
+							Default:          PlanId100gb14days,
+							DiffSuppressFunc: suppress.CaseDifferenceV2Only,
 						},
 
 						"usage_type": {
@@ -123,7 +127,8 @@ func resourceLogzMonitor() *pluginsdk.Resource {
 							ValidateFunc: validation.StringInSlice([]string{
 								"PAYG",
 								"COMMITTED",
-							}, false),
+							}, features.CaseInsensitive()),
+							DiffSuppressFunc: suppress.CaseDifferenceV2Only,
 						},
 					},
 				},
diff --git a/internal/services/mysql/mysql_server_resource.go b/internal/services/mysql/mysql_server_resource.go
index a7553589e1..99c6655b1f 100644
--- a/internal/services/mysql/mysql_server_resource.go
+++ b/internal/services/mysql/mysql_server_resource.go
@@ -11,6 +11,9 @@ import (
 	"strings"
 	"time"
 
+	"github.com/hashicorp/terraform-provider-azurerm/internal/features"
+	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/suppress"
+
 	"github.com/hashicorp/go-azure-helpers/lang/pointer"
 	"github.com/hashicorp/go-azure-helpers/lang/response"
 	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonschema"
@@ -309,8 +312,10 @@ func resourceMySqlServer() *pluginsdk.Resource {
 				ValidateFunc: validation.StringInSlice([]string{
 					string(servers.ServerVersionFivePointSeven),
 					string(servers.ServerVersionEightPointZero),
-				}, false),
+				}, features.CaseInsensitive()),
 				ForceNew: true,
+				// FORK: Force attributes to maintain case-insensitivity to avoid breaking changes in Pulumi programs.
+				DiffSuppressFunc: suppress.CaseDifferenceV2Only,
 			},
 		},
 
diff --git a/internal/services/network/public_ip_prefix_resource.go b/internal/services/network/public_ip_prefix_resource.go
index cac9234613..dce56995a3 100644
--- a/internal/services/network/public_ip_prefix_resource.go
+++ b/internal/services/network/public_ip_prefix_resource.go
@@ -8,6 +8,9 @@ import (
 	"log"
 	"time"
 
+	"github.com/hashicorp/terraform-provider-azurerm/internal/features"
+	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/suppress"
+
 	"github.com/hashicorp/go-azure-helpers/lang/pointer"
 	"github.com/hashicorp/go-azure-helpers/lang/response"
 	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonschema"
@@ -79,7 +82,8 @@ func resourcePublicIpPrefix() *pluginsdk.Resource {
 				ValidateFunc: validation.StringInSlice([]string{
 					string(publicipprefixes.IPVersionIPvFour),
 					string(publicipprefixes.IPVersionIPvSix),
-				}, false),
+				}, features.CaseInsensitive()),
+				DiffSuppressFunc: suppress.CaseDifferenceV2Only,
 			},
 
 			"zones": commonschema.ZonesMultipleOptionalForceNew(),
diff --git a/internal/services/network/public_ip_resource.go b/internal/services/network/public_ip_resource.go
index f8f5ebb60d..ea6c5baa36 100644
--- a/internal/services/network/public_ip_resource.go
+++ b/internal/services/network/public_ip_resource.go
@@ -25,6 +25,7 @@ import (
 	"github.com/hashicorp/terraform-provider-azurerm/internal/features"
 	"github.com/hashicorp/terraform-provider-azurerm/internal/services/network/validate"
 	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
+	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/suppress"
 	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/validation"
 	"github.com/hashicorp/terraform-provider-azurerm/internal/timeouts"
 	"github.com/hashicorp/terraform-provider-azurerm/utils"
@@ -98,7 +99,8 @@ func resourcePublicIp() *pluginsdk.Resource {
 				ValidateFunc: validation.StringInSlice([]string{
 					string(publicipaddresses.IPVersionIPvFour),
 					string(publicipaddresses.IPVersionIPvSix),
-				}, false),
+				}, features.CaseInsensitive()),
+				DiffSuppressFunc: suppress.CaseDifferenceV2Only,
 			},
 
 			"sku": {
@@ -115,7 +117,7 @@ func resourcePublicIp() *pluginsdk.Resource {
 				ValidateFunc: validation.StringInSlice([]string{
 					string(publicipaddresses.PublicIPAddressSkuNameBasic),
 					string(publicipaddresses.PublicIPAddressSkuNameStandard),
-				}, false),
+				}, features.CaseInsensitive()),
 			},
 
 			"sku_tier": {
diff --git a/internal/services/network/virtual_network_gateway_connection_resource.go b/internal/services/network/virtual_network_gateway_connection_resource.go
index e9a9ceba86..de70cfd346 100644
--- a/internal/services/network/virtual_network_gateway_connection_resource.go
+++ b/internal/services/network/virtual_network_gateway_connection_resource.go
@@ -9,6 +9,8 @@ import (
 	"log"
 	"time"
 
+	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/suppress"
+
 	"github.com/hashicorp/go-azure-helpers/lang/pointer"
 	"github.com/hashicorp/go-azure-helpers/lang/response"
 	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonschema"
@@ -66,7 +68,8 @@ func resourceVirtualNetworkGatewayConnection() *pluginsdk.Resource {
 					string(virtualnetworkgatewayconnections.VirtualNetworkGatewayConnectionTypeExpressRoute),
 					string(virtualnetworkgatewayconnections.VirtualNetworkGatewayConnectionTypeIPsec),
 					string(virtualnetworkgatewayconnections.VirtualNetworkGatewayConnectionTypeVnetTwoVnet),
-				}, false),
+				}, features.CaseInsensitive()),
+				DiffSuppressFunc: suppress.CaseDifferenceV2Only,
 			},
 
 			"virtual_network_gateway_id": {
diff --git a/internal/services/network/virtual_network_gateway_resource.go b/internal/services/network/virtual_network_gateway_resource.go
index 6e6d6f40ee..97b92702e0 100644
--- a/internal/services/network/virtual_network_gateway_resource.go
+++ b/internal/services/network/virtual_network_gateway_resource.go
@@ -9,6 +9,8 @@ import (
 	"log"
 	"time"
 
+	"github.com/hashicorp/terraform-provider-azurerm/internal/features"
+
 	"github.com/hashicorp/go-azure-helpers/lang/pointer"
 	"github.com/hashicorp/go-azure-helpers/lang/response"
 	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonids"
@@ -70,7 +72,7 @@ func resourceVirtualNetworkGatewaySchema() map[string]*pluginsdk.Schema {
 			ValidateFunc: validation.StringInSlice([]string{
 				string(virtualnetworkgateways.VirtualNetworkGatewayTypeExpressRoute),
 				string(virtualnetworkgateways.VirtualNetworkGatewayTypeVpn),
-			}, false),
+			}, features.CaseInsensitive()),
 		},
 
 		"vpn_type": {
@@ -81,7 +83,7 @@ func resourceVirtualNetworkGatewaySchema() map[string]*pluginsdk.Schema {
 			ValidateFunc: validation.StringInSlice([]string{
 				string(virtualnetworkgateways.VpnTypeRouteBased),
 				string(virtualnetworkgateways.VpnTypePolicyBased),
-			}, false),
+			}, features.CaseInsensitive()),
 		},
 
 		"edge_zone": commonschema.EdgeZoneOptionalForceNew(),
diff --git a/internal/services/notificationhub/notification_hub_namespace_resource.go b/internal/services/notificationhub/notification_hub_namespace_resource.go
index 84673400f4..05d37cd939 100644
--- a/internal/services/notificationhub/notification_hub_namespace_resource.go
+++ b/internal/services/notificationhub/notification_hub_namespace_resource.go
@@ -86,7 +86,7 @@ func resourceNotificationHubNamespace() *pluginsdk.Resource {
 				ValidateFunc: validation.StringInSlice([]string{
 					string(namespaces.NamespaceTypeMessaging),
 					string(namespaces.NamespaceTypeNotificationHub),
-				}, false),
+				}, features.CaseInsensitive()),
 			},
 
 			"tags": commonschema.Tags(),
diff --git a/internal/services/policy/policy_definition_resource.go b/internal/services/policy/policy_definition_resource.go
index a6e25db8f3..99c0bd5a4d 100644
--- a/internal/services/policy/policy_definition_resource.go
+++ b/internal/services/policy/policy_definition_resource.go
@@ -6,6 +6,7 @@ package policy
 import (
 	"context"
 	"fmt"
+	"github.com/hashicorp/terraform-provider-azurerm/internal/features"
 	"log"
 	"strconv"
 	"time"
@@ -332,7 +333,7 @@ func resourceArmPolicyDefinitionSchema() map[string]*pluginsdk.Schema {
 				string(policy.TypeCustom),
 				string(policy.TypeNotSpecified),
 				string(policy.TypeStatic),
-			}, false),
+			}, features.CaseInsensitive()),
 		},
 
 		"mode": {
diff --git a/internal/services/postgres/postgresql_server_resource.go b/internal/services/postgres/postgresql_server_resource.go
index d68d5963fa..90dd2bfc33 100644
--- a/internal/services/postgres/postgresql_server_resource.go
+++ b/internal/services/postgres/postgresql_server_resource.go
@@ -11,6 +11,9 @@ import (
 	"strings"
 	"time"
 
+	"github.com/hashicorp/terraform-provider-azurerm/internal/features"
+	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/suppress"
+
 	"github.com/hashicorp/go-azure-helpers/lang/pointer"
 	"github.com/hashicorp/go-azure-helpers/lang/response"
 	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonschema"
@@ -133,10 +136,12 @@ func resourcePostgreSQLServer() *pluginsdk.Resource {
 			},
 
 			"version": {
-				Type:         pluginsdk.TypeString,
-				Required:     true,
-				ForceNew:     true,
-				ValidateFunc: validation.StringInSlice(servers.PossibleValuesForServerVersion(), false),
+				Type:     pluginsdk.TypeString,
+				Required: true,
+				ForceNew: true,
+				ValidateFunc: validation.StringInSlice(servers.PossibleValuesForServerVersion(),
+					features.CaseInsensitive()),
+				DiffSuppressFunc: suppress.CaseDifferenceV2Only,
 			},
 
 			"administrator_login": {
diff --git a/internal/services/recoveryservices/site_recovery_replicated_vm_resource.go b/internal/services/recoveryservices/site_recovery_replicated_vm_resource.go
index 5f1de4952f..1d4cc0f40a 100644
--- a/internal/services/recoveryservices/site_recovery_replicated_vm_resource.go
+++ b/internal/services/recoveryservices/site_recovery_replicated_vm_resource.go
@@ -231,7 +231,7 @@ func resourceSiteRecoveryReplicatedVM() *pluginsdk.Resource {
 								string(disks.DiskStorageAccountTypesPremiumLRS),
 								string(disks.DiskStorageAccountTypesStandardSSDLRS),
 								string(disks.DiskStorageAccountTypesUltraSSDLRS),
-							}, false),
+							}, features.CaseInsensitive()),
 						},
 
 						"target_replica_disk_type": {
@@ -243,7 +243,7 @@ func resourceSiteRecoveryReplicatedVM() *pluginsdk.Resource {
 								string(disks.DiskStorageAccountTypesPremiumLRS),
 								string(disks.DiskStorageAccountTypesStandardSSDLRS),
 								string(disks.DiskStorageAccountTypesUltraSSDLRS),
-							}, false),
+							}, features.CaseInsensitive()),
 						},
 
 						"target_disk_encryption_set_id": {
diff --git a/internal/services/redis/redis_linked_server_resource.go b/internal/services/redis/redis_linked_server_resource.go
index 9f187d24f2..2f87cd21f5 100644
--- a/internal/services/redis/redis_linked_server_resource.go
+++ b/internal/services/redis/redis_linked_server_resource.go
@@ -6,6 +6,7 @@ package redis
 import (
 	"context"
 	"fmt"
+	"github.com/hashicorp/terraform-provider-azurerm/internal/features"
 	"log"
 	"time"
 
@@ -69,7 +70,7 @@ func resourceRedisLinkedServer() *pluginsdk.Resource {
 				ValidateFunc: validation.StringInSlice([]string{
 					string(redis.ReplicationRolePrimary),
 					string(redis.ReplicationRoleSecondary),
-				}, false),
+				}, features.CaseInsensitive()),
 			},
 
 			"name": {
diff --git a/internal/tf/suppress/deprecated_soon.go b/internal/tf/suppress/deprecated_soon.go
index 926f57f880..815f6e3006 100644
--- a/internal/tf/suppress/deprecated_soon.go
+++ b/internal/tf/suppress/deprecated_soon.go
@@ -17,3 +17,9 @@ func CaseDifference(_, old, new string, _ *schema.ResourceData) bool {
 	// fields should be case-sensitive, normalize the Azure Resource ID in the Read if required
 	return strings.EqualFold(old, new)
 }
+
+// CaseDifferenceV2Only only suppress case difference for v2.0.
+func CaseDifferenceV2Only(_, old, new string, _ *schema.ResourceData) bool {
+	// FORK: Force attributes to maintain case-insensitivity to avoid breaking changes in Pulumi programs.
+	return strings.EqualFold(old, new)
+}
