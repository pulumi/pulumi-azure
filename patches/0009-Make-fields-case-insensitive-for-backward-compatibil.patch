From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Daniel Bradley <daniel@pulumi.com>
Date: Wed, 22 May 2024 13:18:05 +0100
Subject: [PATCH] Make fields case-insensitive for backward compatibility

Try to make diffs as robust and mergable as possible:
- Minimise the amount of code reformatting around by adding comments where needed.
- Put added import lines in own block to avoid conflicts.

diff --git a/internal/features/four_point_oh.go b/internal/features/four_point_oh.go
index 1921cf3887..cb10ba1bbe 100644
--- a/internal/features/four_point_oh.go
+++ b/internal/features/four_point_oh.go
@@ -47,3 +47,9 @@ func FourPointOh() bool {
 func FourPointOhBeta() bool {
 	return FourPointOh() || strings.EqualFold(os.Getenv("ARM_FOURPOINTZERO_BETA"), "true")
 }
+
+// FORK: Small function to help us not make a breaking change in the Pulumi
+// provider where all Enums have been changed to case sensitive
+func CaseInsensitive() bool {
+	return true
+}
diff --git a/internal/services/advisor/advisor_recommendations_data_source.go b/internal/services/advisor/advisor_recommendations_data_source.go
index e6f8ebf9c3..10531eccb9 100644
--- a/internal/services/advisor/advisor_recommendations_data_source.go
+++ b/internal/services/advisor/advisor_recommendations_data_source.go
@@ -8,6 +8,9 @@ import (
 	"strings"
 	"time"
 
+	"github.com/hashicorp/terraform-provider-azurerm/internal/features"
+	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/suppress"
+
 	"github.com/hashicorp/go-azure-helpers/lang/pointer"
 	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonids"
 	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonschema"
@@ -38,7 +41,8 @@ func dataSourceAdvisorRecommendations() *pluginsdk.Resource {
 						string(getrecommendations.CategoryPerformance),
 						string(getrecommendations.CategoryCost),
 						string(getrecommendations.CategoryOperationalExcellence),
-					}, false),
+					}, features.CaseInsensitive()),
+					DiffSuppressFunc: suppress.CaseDifferenceV2Only,
 				},
 			},
 
diff --git a/internal/services/analysisservices/analysis_services_server_resource.go b/internal/services/analysisservices/analysis_services_server_resource.go
index 68b328649c..d39553248c 100644
--- a/internal/services/analysisservices/analysis_services_server_resource.go
+++ b/internal/services/analysisservices/analysis_services_server_resource.go
@@ -6,6 +6,7 @@ package analysisservices
 import (
 	"bytes"
 	"fmt"
+	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/suppress"
 	"log"
 	"strings"
 	"time"
@@ -126,7 +127,8 @@ func resourceAnalysisServicesServer() *pluginsdk.Resource {
 				ValidateFunc: validation.StringInSlice([]string{
 					string(servers.ConnectionModeAll),
 					string(servers.ConnectionModeReadOnly),
-				}, false),
+				}, features.CaseInsensitive()),
+				DiffSuppressFunc: suppress.CaseDifferenceV2Only,
 			},
 
 			"backup_blob_container_uri": {
diff --git a/internal/services/automation/automation_runbook_resource.go b/internal/services/automation/automation_runbook_resource.go
index b0fcc7cb8f..2b70f55a25 100644
--- a/internal/services/automation/automation_runbook_resource.go
+++ b/internal/services/automation/automation_runbook_resource.go
@@ -9,6 +9,8 @@ import (
 	"log"
 	"time"
 
+	"github.com/hashicorp/terraform-provider-azurerm/internal/features"
+
 	"github.com/gofrs/uuid"
 	"github.com/hashicorp/go-azure-helpers/lang/pointer"
 	"github.com/hashicorp/go-azure-helpers/lang/response"
@@ -133,7 +135,7 @@ func resourceAutomationRunbook() *pluginsdk.Resource {
 					string(runbook.RunbookTypeEnumPowerShellWorkflow),
 					string(runbook.RunbookTypeEnumPowerShellSevenTwo),
 					string(runbook.RunbookTypeEnumScript),
-				}, false),
+				}, features.CaseInsensitive()),
 			},
 
 			"log_progress": {
diff --git a/internal/services/automation/automation_schedule_resource.go b/internal/services/automation/automation_schedule_resource.go
index 111ae21ae1..ed886bf6b7 100644
--- a/internal/services/automation/automation_schedule_resource.go
+++ b/internal/services/automation/automation_schedule_resource.go
@@ -6,6 +6,7 @@ package automation
 import (
 	"context"
 	"fmt"
+	"github.com/hashicorp/terraform-provider-azurerm/internal/features"
 	"log"
 	"strings"
 	"time"
@@ -74,7 +75,7 @@ func resourceAutomationSchedule() *pluginsdk.Resource {
 					string(schedule.ScheduleFrequencyMonth),
 					string(schedule.ScheduleFrequencyOneTime),
 					string(schedule.ScheduleFrequencyWeek),
-				}, false),
+				}, features.CaseInsensitive()),
 			},
 
 			// ignored when frequency is `OneTime`
@@ -127,7 +128,8 @@ func resourceAutomationSchedule() *pluginsdk.Resource {
 						string(schedule.ScheduleDayFriday),
 						string(schedule.ScheduleDaySaturday),
 						string(schedule.ScheduleDaySunday),
-					}, false),
+					}, features.CaseInsensitive()),
+					DiffSuppressFunc: suppress.CaseDifferenceV2Only,
 				},
 				Set:           set.HashStringIgnoreCase,
 				ConflictsWith: []string{"month_days", "monthly_occurrence"},
@@ -164,7 +166,7 @@ func resourceAutomationSchedule() *pluginsdk.Resource {
 								string(schedule.ScheduleDayFriday),
 								string(schedule.ScheduleDaySaturday),
 								string(schedule.ScheduleDaySunday),
-							}, false),
+							}, features.CaseInsensitive()),
 						},
 						"occurrence": {
 							Type:     pluginsdk.TypeInt,
diff --git a/internal/services/cdn/cdn_endpoint_resource.go b/internal/services/cdn/cdn_endpoint_resource.go
index 7c7d00e044..fb16cbb214 100644
--- a/internal/services/cdn/cdn_endpoint_resource.go
+++ b/internal/services/cdn/cdn_endpoint_resource.go
@@ -8,6 +8,8 @@ import (
 	"log"
 	"time"
 
+	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/suppress"
+
 	"github.com/Azure/azure-sdk-for-go/services/cdn/mgmt/2020-09-01/cdn" // nolint: staticcheck
 	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonschema"
 	"github.com/hashicorp/go-azure-helpers/resourcemanager/location"
@@ -171,7 +173,8 @@ func resourceCdnEndpoint() *pluginsdk.Resource {
 							ValidateFunc: validation.StringInSlice([]string{
 								string(cdn.ActionTypeAllow),
 								string(cdn.ActionTypeBlock),
-							}, false),
+							}, features.CaseInsensitive()),
+							DiffSuppressFunc: suppress.CaseDifferenceV2Only,
 						},
 						"country_codes": {
 							Type:     pluginsdk.TypeList,
@@ -193,7 +196,8 @@ func resourceCdnEndpoint() *pluginsdk.Resource {
 					string(cdn.OptimizationTypeGeneralWebDelivery),
 					string(cdn.OptimizationTypeLargeFileDownload),
 					string(cdn.OptimizationTypeVideoOnDemandMediaStreaming),
-				}, false),
+				}, features.CaseInsensitive()),
+				DiffSuppressFunc: suppress.CaseDifferenceV2Only,
 			},
 
 			"fqdn": {
diff --git a/internal/services/cdn/cdn_profile_resource.go b/internal/services/cdn/cdn_profile_resource.go
index 67956f15c9..0b70ccb184 100644
--- a/internal/services/cdn/cdn_profile_resource.go
+++ b/internal/services/cdn/cdn_profile_resource.go
@@ -5,6 +5,8 @@ package cdn
 
 import (
 	"fmt"
+	"github.com/hashicorp/terraform-provider-azurerm/internal/features"
+	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/suppress"
 	"time"
 
 	"github.com/Azure/azure-sdk-for-go/services/cdn/mgmt/2020-09-01/cdn" // nolint: staticcheck
@@ -67,7 +69,8 @@ func resourceCdnProfile() *pluginsdk.Resource {
 					string(cdn.SkuNameStandardVerizon),
 					string(cdn.SkuNameStandardMicrosoft),
 					string(cdn.SkuNamePremiumVerizon),
-				}, false),
+				}, features.CaseInsensitive()),
+				DiffSuppressFunc: suppress.CaseDifferenceV2Only,
 			},
 
 			"tags": tags.Schema(),
diff --git a/internal/services/compute/image_resource.go b/internal/services/compute/image_resource.go
index d1de175cb8..e8fd90b9df 100644
--- a/internal/services/compute/image_resource.go
+++ b/internal/services/compute/image_resource.go
@@ -7,6 +7,8 @@ import (
 	"fmt"
 	"time"
 
+	"github.com/hashicorp/terraform-provider-azurerm/internal/features"
+
 	"github.com/hashicorp/go-azure-helpers/lang/pointer"
 	"github.com/hashicorp/go-azure-helpers/lang/response"
 	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonids"
@@ -90,7 +92,7 @@ func resourceImage() *pluginsdk.Resource {
 							ValidateFunc: validation.StringInSlice([]string{
 								string(images.OperatingSystemTypesLinux),
 								string(images.OperatingSystemTypesWindows),
-							}, false),
+							}, features.CaseInsensitive()),
 						},
 
 						"os_state": {
@@ -99,7 +101,7 @@ func resourceImage() *pluginsdk.Resource {
 							ValidateFunc: validation.StringInSlice([]string{
 								string(images.OperatingSystemStateTypesGeneralized),
 								string(images.OperatingSystemStateTypesSpecialized),
-							}, false),
+							}, features.CaseInsensitive()),
 						},
 
 						"managed_disk_id": {
@@ -126,7 +128,7 @@ func resourceImage() *pluginsdk.Resource {
 								string(images.CachingTypesNone),
 								string(images.CachingTypesReadOnly),
 								string(images.CachingTypesReadWrite),
-							}, false),
+							}, features.CaseInsensitive()),
 						},
 
 						"size_gb": {
@@ -179,7 +181,8 @@ func resourceImage() *pluginsdk.Resource {
 								string(images.CachingTypesNone),
 								string(images.CachingTypesReadOnly),
 								string(images.CachingTypesReadWrite),
-							}, false),
+							}, features.CaseInsensitive()),
+							DiffSuppressFunc: suppress.CaseDifferenceV2Only,
 						},
 
 						"size_gb": {
diff --git a/internal/services/compute/snapshot_resource.go b/internal/services/compute/snapshot_resource.go
index c7166c707e..be69574aa5 100644
--- a/internal/services/compute/snapshot_resource.go
+++ b/internal/services/compute/snapshot_resource.go
@@ -70,7 +70,7 @@ func resourceSnapshot() *pluginsdk.Resource {
 				ValidateFunc: validation.StringInSlice([]string{
 					string(snapshots.DiskCreateOptionCopy),
 					string(snapshots.DiskCreateOptionImport),
-				}, false),
+				}, features.CaseInsensitive()),
 			},
 
 			"incremental_enabled": {
diff --git a/internal/services/compute/virtual_machine_data_disk_attachment_resource.go b/internal/services/compute/virtual_machine_data_disk_attachment_resource.go
index 6478ffa1d2..db6625b9f4 100644
--- a/internal/services/compute/virtual_machine_data_disk_attachment_resource.go
+++ b/internal/services/compute/virtual_machine_data_disk_attachment_resource.go
@@ -6,6 +6,7 @@ package compute
 import (
 	"context"
 	"fmt"
+	"github.com/hashicorp/terraform-provider-azurerm/internal/features"
 	"log"
 	"time"
 
@@ -114,7 +115,8 @@ func resourceVirtualMachineDataDiskAttachment() *pluginsdk.Resource {
 					string(virtualmachines.CachingTypesNone),
 					string(virtualmachines.CachingTypesReadOnly),
 					string(virtualmachines.CachingTypesReadWrite),
-				}, false),
+				}, features.CaseInsensitive()),
+				DiffSuppressFunc: suppress.CaseDifferenceV2Only,
 			},
 
 			"create_option": {
@@ -125,7 +127,8 @@ func resourceVirtualMachineDataDiskAttachment() *pluginsdk.Resource {
 				ValidateFunc: validation.StringInSlice([]string{
 					string(virtualmachines.DiskCreateOptionTypesAttach),
 					string(virtualmachines.DiskCreateOptionTypesEmpty),
-				}, false),
+				}, features.CaseInsensitive()),
+				DiffSuppressFunc: suppress.CaseDifferenceV2Only,
 			},
 
 			"write_accelerator_enabled": {
diff --git a/internal/services/containers/container_group_resource.go b/internal/services/containers/container_group_resource.go
index 5d1d4cfe1c..72cb85465c 100644
--- a/internal/services/containers/container_group_resource.go
+++ b/internal/services/containers/container_group_resource.go
@@ -11,6 +11,8 @@ import (
 	"strings"
 	"time"
 
+	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/suppress"
+
 	"github.com/hashicorp/go-azure-helpers/lang/pointer"
 	"github.com/hashicorp/go-azure-helpers/lang/response"
 	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonids"
@@ -72,7 +74,8 @@ func resourceContainerGroup() *pluginsdk.Resource {
 					string(containerinstance.ContainerGroupIPAddressTypePublic),
 					string(containerinstance.ContainerGroupIPAddressTypePrivate),
 					"None",
-				}, false),
+				}, features.CaseInsensitive()),
+				DiffSuppressFunc: suppress.CaseDifferenceV2Only,
 			},
 
 			"os_type": {
@@ -82,7 +85,8 @@ func resourceContainerGroup() *pluginsdk.Resource {
 				ValidateFunc: validation.StringInSlice([]string{
 					string(containerinstance.OperatingSystemTypesWindows),
 					string(containerinstance.OperatingSystemTypesLinux),
-				}, false),
+				}, features.CaseInsensitive()),
+				DiffSuppressFunc: suppress.CaseDifferenceV2Only,
 			},
 
 			"image_registry_credential": {
@@ -168,7 +172,7 @@ func resourceContainerGroup() *pluginsdk.Resource {
 					string(containerinstance.ContainerGroupRestartPolicyAlways),
 					string(containerinstance.ContainerGroupRestartPolicyNever),
 					string(containerinstance.ContainerGroupRestartPolicyOnFailure),
-				}, false),
+				}, features.CaseInsensitive()),
 			},
 
 			"dns_name_label": {
diff --git a/internal/services/containers/kubernetes_cluster_resource.go b/internal/services/containers/kubernetes_cluster_resource.go
index ab367080f4..cd100fdc4c 100644
--- a/internal/services/containers/kubernetes_cluster_resource.go
+++ b/internal/services/containers/kubernetes_cluster_resource.go
@@ -1087,7 +1087,7 @@ func resourceKubernetesCluster() *pluginsdk.Resource {
 							ValidateFunc: validation.StringInSlice([]string{
 								string(managedclusters.LoadBalancerSkuBasic),
 								string(managedclusters.LoadBalancerSkuStandard),
-							}, false),
+							}, features.CaseInsensitive()),
 						},
 
 						"outbound_type": {
diff --git a/internal/services/cosmos/common/schema.go b/internal/services/cosmos/common/schema.go
index b141d14cfd..d15c245309 100644
--- a/internal/services/cosmos/common/schema.go
+++ b/internal/services/cosmos/common/schema.go
@@ -114,6 +114,7 @@ func CosmosDbIndexingPolicySchema() *pluginsdk.Schema {
 						string(documentdb.IndexingModeConsistent),
 						string(documentdb.IndexingModeNone),
 					}, false),
+					DiffSuppressFunc: suppress.CaseDifferenceV2Only, // Open issue https://github.com/Azure/azure-sdk-for-go/issues/6603
 				},
 
 				"included_path": {
diff --git a/internal/services/cosmos/cosmosdb_account_resource.go b/internal/services/cosmos/cosmosdb_account_resource.go
index 37c2a62d71..9d12a303f8 100644
--- a/internal/services/cosmos/cosmosdb_account_resource.go
+++ b/internal/services/cosmos/cosmosdb_account_resource.go
@@ -13,6 +13,8 @@ import (
 	"strings"
 	"time"
 
+	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/suppress"
+
 	"github.com/Azure/azure-sdk-for-go/services/cosmos-db/mgmt/2021-10-15/documentdb" // nolint: staticcheck
 	"github.com/hashicorp/go-azure-helpers/lang/pointer"
 	"github.com/hashicorp/go-azure-helpers/lang/response"
@@ -204,7 +206,7 @@ func resourceCosmosDbAccount() *pluginsdk.Resource {
 				Required: true,
 				ValidateFunc: validation.StringInSlice([]string{
 					string(cosmosdb.DatabaseAccountOfferTypeStandard),
-				}, false),
+				}, features.CaseInsensitive()),
 			},
 
 			"analytical_storage": {
@@ -291,7 +293,7 @@ func resourceCosmosDbAccount() *pluginsdk.Resource {
 					string(cosmosdb.DatabaseAccountKindGlobalDocumentDB),
 					string(cosmosdb.DatabaseAccountKindMongoDB),
 					string(cosmosdb.DatabaseAccountKindParse),
-				}, false),
+				}, features.CaseInsensitive()),
 			},
 
 			"ip_range_filter": func() *schema.Schema {
@@ -387,7 +389,7 @@ func resourceCosmosDbAccount() *pluginsdk.Resource {
 								string(cosmosdb.DefaultConsistencyLevelEventual),
 								string(cosmosdb.DefaultConsistencyLevelSession),
 								string(cosmosdb.DefaultConsistencyLevelStrong),
-							}, false),
+							}, features.CaseInsensitive()),
 						},
 
 						// This value can only change if the 'consistency_level' is set to 'BoundedStaleness'
@@ -466,6 +468,7 @@ func resourceCosmosDbAccount() *pluginsdk.Resource {
 								string(databaseAccountCapabilitiesEnableTtlOnCustomPath),
 								string(databaseAccountCapabilitiesEnablePartialUniqueIndex),
 							}, false),
+							DiffSuppressFunc: suppress.CaseDifferenceV2Only,
 						},
 					},
 				},
diff --git a/internal/services/cosmos/cosmosdb_gremlin_graph_resource.go b/internal/services/cosmos/cosmosdb_gremlin_graph_resource.go
index 38f00d87fe..7c7b046cd2 100644
--- a/internal/services/cosmos/cosmosdb_gremlin_graph_resource.go
+++ b/internal/services/cosmos/cosmosdb_gremlin_graph_resource.go
@@ -10,6 +10,8 @@ import (
 	"strings"
 	"time"
 
+	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/suppress"
+
 	"github.com/hashicorp/go-azure-helpers/lang/response"
 	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonschema"
 	"github.com/hashicorp/go-azure-sdk/resource-manager/cosmosdb/2023-04-15/cosmosdb"
@@ -132,6 +134,7 @@ func resourceCosmosDbGremlinGraph() *pluginsdk.Resource {
 								string(cosmosdb.IndexingModeNone),
 								string(cosmosdb.IndexingModeLazy),
 							}, false),
+							DiffSuppressFunc: suppress.CaseDifferenceV2Only, // Open issue https://github.com/Azure/azure-sdk-for-go/issues/6603
 						},
 
 						"included_paths": {
diff --git a/internal/services/dns/dns_caa_record_resource.go b/internal/services/dns/dns_caa_record_resource.go
index 24f5734126..f20b2cd035 100644
--- a/internal/services/dns/dns_caa_record_resource.go
+++ b/internal/services/dns/dns_caa_record_resource.go
@@ -8,6 +8,9 @@ import (
 	"fmt"
 	"time"
 
+	"github.com/hashicorp/terraform-provider-azurerm/internal/features"
+	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/suppress"
+
 	"github.com/hashicorp/go-azure-helpers/lang/response"
 	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonschema"
 	"github.com/hashicorp/go-azure-helpers/resourcemanager/tags"
@@ -82,7 +85,8 @@ func resourceDnsCaaRecord() *pluginsdk.Resource {
 								"issue",
 								"issuewild",
 								"iodef",
-							}, false),
+							}, features.CaseInsensitive()),
+							DiffSuppressFunc: suppress.CaseDifferenceV2Only,
 						},
 
 						"value": {
diff --git a/internal/services/eventhub/eventhub_namespace_resource.go b/internal/services/eventhub/eventhub_namespace_resource.go
index da4956270e..f6ff2056d1 100644
--- a/internal/services/eventhub/eventhub_namespace_resource.go
+++ b/internal/services/eventhub/eventhub_namespace_resource.go
@@ -80,7 +80,7 @@ func resourceEventHubNamespace() *pluginsdk.Resource {
 					string(namespaces.SkuNameBasic),
 					string(namespaces.SkuNameStandard),
 					string(namespaces.SkuNamePremium),
-				}, false),
+				}, features.CaseInsensitive()),
 			},
 
 			"capacity": {
diff --git a/internal/services/eventhub/eventhub_resource.go b/internal/services/eventhub/eventhub_resource.go
index b3cb1e5f84..2ec36c63da 100644
--- a/internal/services/eventhub/eventhub_resource.go
+++ b/internal/services/eventhub/eventhub_resource.go
@@ -8,6 +8,8 @@ import (
 	"log"
 	"time"
 
+	"github.com/hashicorp/terraform-provider-azurerm/internal/features"
+
 	"github.com/hashicorp/go-azure-helpers/lang/response"
 	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonids"
 	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonschema"
@@ -93,7 +95,7 @@ func resourceEventHub() *pluginsdk.Resource {
 							ValidateFunc: validation.StringInSlice([]string{
 								string(eventhubs.EncodingCaptureDescriptionAvro),
 								string(eventhubs.EncodingCaptureDescriptionAvroDeflate),
-							}, false),
+							}, features.CaseInsensitive()),
 						},
 						"interval_in_seconds": {
 							Type:         pluginsdk.TypeInt,
diff --git a/internal/services/firewall/firewall_policy_resource.go b/internal/services/firewall/firewall_policy_resource.go
index ff4ace2126..e29b2410e4 100644
--- a/internal/services/firewall/firewall_policy_resource.go
+++ b/internal/services/firewall/firewall_policy_resource.go
@@ -791,14 +791,13 @@ func resourceFirewallPolicySchema() map[string]*pluginsdk.Schema {
 								"protocol": {
 									Type:     pluginsdk.TypeString,
 									Required: true,
-									// protocol to be one of [ICMP ANY TCP UDP] but response may be "Any"
-									DiffSuppressFunc: suppress.CaseDifference,
 									ValidateFunc: validation.StringInSlice([]string{
 										string(firewallpolicies.FirewallPolicyIntrusionDetectionProtocolICMP),
 										string(firewallpolicies.FirewallPolicyIntrusionDetectionProtocolANY),
 										string(firewallpolicies.FirewallPolicyIntrusionDetectionProtocolTCP),
 										string(firewallpolicies.FirewallPolicyIntrusionDetectionProtocolUDP),
-									}, true),
+									}, features.CaseInsensitive()),
+									DiffSuppressFunc: suppress.CaseDifferenceV2Only,
 								},
 								"source_addresses": {
 									Type:     pluginsdk.TypeSet,
diff --git a/internal/services/hdinsight/hdinsight_hadoop_cluster_resource.go b/internal/services/hdinsight/hdinsight_hadoop_cluster_resource.go
index 067484d622..543f3c8f77 100644
--- a/internal/services/hdinsight/hdinsight_hadoop_cluster_resource.go
+++ b/internal/services/hdinsight/hdinsight_hadoop_cluster_resource.go
@@ -9,6 +9,8 @@ import (
 	"strings"
 	"time"
 
+	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/suppress"
+
 	"github.com/hashicorp/go-azure-helpers/lang/pointer"
 	"github.com/hashicorp/go-azure-helpers/lang/response"
 	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonids"
@@ -150,6 +152,8 @@ func resourceHDInsightHadoopCluster() *pluginsdk.Resource {
 										Type:         pluginsdk.TypeString,
 										Required:     true,
 										ValidateFunc: validation.StringInSlice(validate.NodeDefinitionVMSize, false),
+										// FORK: Force attributes to maintain case-insensitivity to avoid breaking changes in Pulumi programs.
+										DiffSuppressFunc: suppress.CaseDifferenceV2Only,
 									},
 
 									"install_script_action": {
diff --git a/internal/services/hdinsight/schema.go b/internal/services/hdinsight/schema.go
index 36c461cbdc..e063184038 100644
--- a/internal/services/hdinsight/schema.go
+++ b/internal/services/hdinsight/schema.go
@@ -9,6 +9,9 @@ import (
 	"regexp"
 	"strings"
 
+	"github.com/hashicorp/terraform-provider-azurerm/internal/features"
+	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/suppress"
+
 	"github.com/hashicorp/go-azure-helpers/lang/pointer"
 	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonids"
 	"github.com/hashicorp/go-azure-helpers/resourcemanager/identity"
@@ -42,7 +45,8 @@ func SchemaHDInsightTier() *pluginsdk.Schema {
 		ValidateFunc: validation.StringInSlice([]string{
 			string(clusters.TierStandard),
 			string(clusters.TierPremium),
-		}, false),
+		}, features.CaseInsensitive()),
+		DiffSuppressFunc: suppress.CaseDifferenceV2Only,
 	}
 }
 
@@ -1169,6 +1173,8 @@ func SchemaHDInsightNodeDefinition(schemaLocation string, definition HDInsightNo
 			Required:     true,
 			ForceNew:     true,
 			ValidateFunc: validation.StringInSlice(validate.NodeDefinitionVMSize, false),
+			// FORK: Force attributes to maintain case-insensitivity to avoid breaking changes in Pulumi programs.
+			DiffSuppressFunc: suppress.CaseDifferenceV2Only,
 		},
 		"username": {
 			Type:     pluginsdk.TypeString,
diff --git a/internal/services/iotcentral/iotcentral_application_resource.go b/internal/services/iotcentral/iotcentral_application_resource.go
index db4cc26a57..a7deedb063 100644
--- a/internal/services/iotcentral/iotcentral_application_resource.go
+++ b/internal/services/iotcentral/iotcentral_application_resource.go
@@ -90,7 +90,7 @@ func resourceIotCentralApplication() *pluginsdk.Resource {
 					string(apps.AppSkuSTOne),
 					string(apps.AppSkuSTTwo),
 					string(apps.AppSkuSTZero),
-				}, false),
+				}, features.CaseInsensitive()),
 				Default: string(apps.AppSkuSTOne),
 			},
 			"template": {
diff --git a/internal/services/iothub/iothub_resource.go b/internal/services/iothub/iothub_resource.go
index 85ee108b8d..fa7c22d87a 100644
--- a/internal/services/iothub/iothub_resource.go
+++ b/internal/services/iothub/iothub_resource.go
@@ -13,6 +13,8 @@ import (
 	"strings"
 	"time"
 
+	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/suppress"
+
 	"github.com/hashicorp/go-azure-helpers/lang/pointer"
 	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonids"
 	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonschema"
@@ -357,7 +359,7 @@ func resourceIotHub() *pluginsdk.Resource {
 							Optional:         true,
 							ForceNew:         true,
 							Default:          string(devices.EncodingAvro),
-							DiffSuppressFunc: suppressIfTypeIsNot("AzureIotHub.StorageContainer"),
+							DiffSuppressFunc: suppress.CaseDifferenceV2Only,
 							ValidateFunc: validation.StringInSlice([]string{
 								string(devices.EncodingAvro),
 								string(devices.EncodingAvroDeflate),
diff --git a/internal/services/keyvault/key_vault_certificate_resource.go b/internal/services/keyvault/key_vault_certificate_resource.go
index 90e02d8080..a28b4f08e5 100644
--- a/internal/services/keyvault/key_vault_certificate_resource.go
+++ b/internal/services/keyvault/key_vault_certificate_resource.go
@@ -14,6 +14,9 @@ import (
 	"strings"
 	"time"
 
+	"github.com/hashicorp/terraform-provider-azurerm/internal/features"
+	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/suppress"
+
 	"github.com/Azure/go-autorest/autorest"
 	"github.com/google/go-cmp/cmp"
 	"github.com/hashicorp/go-azure-helpers/lang/pointer"
@@ -157,7 +160,8 @@ func resourceKeyVaultCertificate() *pluginsdk.Resource {
 											string(keyvault.JSONWebKeyTypeRSA),
 											string(keyvault.JSONWebKeyTypeRSAHSM),
 											string(keyvault.JSONWebKeyTypeOct),
-										}, false),
+										}, features.CaseInsensitive()),
+										DiffSuppressFunc: suppress.CaseDifferenceV2Only,
 									},
 									"reuse_key": {
 										Type:     pluginsdk.TypeBool,
diff --git a/internal/services/legacy/virtual_machine_resource.go b/internal/services/legacy/virtual_machine_resource.go
index 4f9cf43a06..56d568cd64 100644
--- a/internal/services/legacy/virtual_machine_resource.go
+++ b/internal/services/legacy/virtual_machine_resource.go
@@ -13,6 +13,8 @@ import (
 	"strings"
 	"time"
 
+	"github.com/hashicorp/terraform-provider-azurerm/internal/features"
+
 	"github.com/hashicorp/go-azure-helpers/lang/pointer"
 	"github.com/hashicorp/go-azure-helpers/lang/response"
 	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonids"
@@ -154,7 +156,7 @@ func resourceVirtualMachine() *pluginsdk.Resource {
 				ValidateFunc: validation.StringInSlice([]string{
 					"Windows_Client",
 					"Windows_Server",
-				}, false),
+				}, features.CaseInsensitive()),
 			},
 
 			"vm_size": {
@@ -220,7 +222,8 @@ func resourceVirtualMachine() *pluginsdk.Resource {
 							ValidateFunc: validation.StringInSlice([]string{
 								string(virtualmachines.OperatingSystemTypesLinux),
 								string(virtualmachines.OperatingSystemTypesWindows),
-							}, false),
+							}, features.CaseInsensitive()),
+							DiffSuppressFunc: suppress.CaseDifferenceV2Only,
 						},
 
 						"name": {
@@ -255,7 +258,8 @@ func resourceVirtualMachine() *pluginsdk.Resource {
 								string(virtualmachines.StorageAccountTypesPremiumLRS),
 								string(virtualmachines.StorageAccountTypesStandardLRS),
 								string(virtualmachines.StorageAccountTypesStandardSSDLRS),
-							}, false),
+							}, features.CaseInsensitive()),
+							DiffSuppressFunc: suppress.CaseDifferenceV2Only,
 						},
 
 						"image_uri": {
@@ -329,7 +333,8 @@ func resourceVirtualMachine() *pluginsdk.Resource {
 								string(virtualmachines.StorageAccountTypesStandardLRS),
 								string(virtualmachines.StorageAccountTypesStandardSSDLRS),
 								string(virtualmachines.StorageAccountTypesUltraSSDLRS),
-							}, false),
+							}, features.CaseInsensitive()),
+							DiffSuppressFunc: suppress.CaseDifferenceV2Only,
 						},
 
 						"create_option": {
@@ -476,7 +481,8 @@ func resourceVirtualMachine() *pluginsdk.Resource {
 										ValidateFunc: validation.StringInSlice([]string{
 											"HTTP",
 											"HTTPS",
-										}, false),
+										}, features.CaseInsensitive()),
+										DiffSuppressFunc: suppress.CaseDifferenceV2Only,
 									},
 									"certificate_url": {
 										Type:     pluginsdk.TypeString,
diff --git a/internal/services/legacy/virtual_machine_scale_set_resource.go b/internal/services/legacy/virtual_machine_scale_set_resource.go
index 799f142449..6aada8c4d7 100644
--- a/internal/services/legacy/virtual_machine_scale_set_resource.go
+++ b/internal/services/legacy/virtual_machine_scale_set_resource.go
@@ -12,6 +12,8 @@ import (
 	"strings"
 	"time"
 
+	"github.com/hashicorp/terraform-provider-azurerm/internal/features"
+
 	"github.com/hashicorp/go-azure-helpers/lang/pointer"
 	"github.com/hashicorp/go-azure-helpers/lang/response"
 	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonschema"
@@ -123,7 +125,7 @@ func resourceVirtualMachineScaleSet() *pluginsdk.Resource {
 				ValidateFunc: validation.StringInSlice([]string{
 					"Windows_Client",
 					"Windows_Server",
-				}, false),
+				}, features.CaseInsensitive()),
 			},
 
 			"upgrade_policy_mode": {
@@ -133,7 +135,8 @@ func resourceVirtualMachineScaleSet() *pluginsdk.Resource {
 					string(virtualmachinescalesets.UpgradeModeAutomatic),
 					string(virtualmachinescalesets.UpgradeModeManual),
 					string(virtualmachinescalesets.UpgradeModeRolling),
-				}, false),
+				}, features.CaseInsensitive()),
+				DiffSuppressFunc: suppress.CaseDifferenceV2Only,
 			},
 
 			"health_probe_id": {
@@ -206,7 +209,8 @@ func resourceVirtualMachineScaleSet() *pluginsdk.Resource {
 				ValidateFunc: validation.StringInSlice([]string{
 					string(virtualmachinescalesets.VirtualMachinePriorityTypesLow),
 					string(virtualmachinescalesets.VirtualMachinePriorityTypesRegular),
-				}, false),
+				}, features.CaseInsensitive()),
+				DiffSuppressFunc: suppress.CaseDifferenceV2Only,
 			},
 
 			"eviction_policy": {
@@ -572,7 +576,8 @@ func resourceVirtualMachineScaleSet() *pluginsdk.Resource {
 								string(virtualmachinescalesets.StorageAccountTypesPremiumLRS),
 								string(virtualmachinescalesets.StorageAccountTypesStandardLRS),
 								string(virtualmachinescalesets.StorageAccountTypesStandardSSDLRS),
-							}, false),
+							}, features.CaseInsensitive()),
+							DiffSuppressFunc: suppress.CaseDifferenceV2Only,
 						},
 
 						"caching": {
@@ -631,7 +636,8 @@ func resourceVirtualMachineScaleSet() *pluginsdk.Resource {
 								string(virtualmachinescalesets.StorageAccountTypesPremiumLRS),
 								string(virtualmachinescalesets.StorageAccountTypesStandardLRS),
 								string(virtualmachinescalesets.StorageAccountTypesStandardSSDLRS),
-							}, false),
+							}, features.CaseInsensitive()),
+							DiffSuppressFunc: suppress.CaseDifferenceV2Only,
 						},
 					},
 				},
diff --git a/internal/services/loadbalancer/loadbalancer_resource.go b/internal/services/loadbalancer/loadbalancer_resource.go
index 2c052ba849..007e62e902 100644
--- a/internal/services/loadbalancer/loadbalancer_resource.go
+++ b/internal/services/loadbalancer/loadbalancer_resource.go
@@ -403,7 +403,8 @@ func resourceArmLoadBalancerSchema() map[string]*pluginsdk.Schema {
 				string(loadbalancers.LoadBalancerSkuNameBasic),
 				string(loadbalancers.LoadBalancerSkuNameStandard),
 				string(loadbalancers.LoadBalancerSkuNameGateway),
-			}, false),
+			}, features.CaseInsensitive()),
+			DiffSuppressFunc: suppress.CaseDifferenceV2Only,
 		},
 
 		"sku_tier": {
diff --git a/internal/services/loadbalancer/nat_pool_resource.go b/internal/services/loadbalancer/nat_pool_resource.go
index d07fec653a..57342b5b34 100644
--- a/internal/services/loadbalancer/nat_pool_resource.go
+++ b/internal/services/loadbalancer/nat_pool_resource.go
@@ -8,6 +8,8 @@ import (
 	"log"
 	"time"
 
+	"github.com/hashicorp/terraform-provider-azurerm/internal/features"
+
 	"github.com/hashicorp/go-azure-helpers/lang/pointer"
 	"github.com/hashicorp/go-azure-helpers/lang/response"
 	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonschema"
@@ -71,7 +73,7 @@ func resourceArmLoadBalancerNatPool() *pluginsdk.Resource {
 					string(loadbalancers.TransportProtocolAll),
 					string(loadbalancers.TransportProtocolTcp),
 					string(loadbalancers.TransportProtocolUdp),
-				}, false),
+				}, features.CaseInsensitive()),
 			},
 
 			"frontend_port_start": {
diff --git a/internal/services/loadbalancer/nat_rule_resource.go b/internal/services/loadbalancer/nat_rule_resource.go
index 773f12d0c5..28e0ce4af5 100644
--- a/internal/services/loadbalancer/nat_rule_resource.go
+++ b/internal/services/loadbalancer/nat_rule_resource.go
@@ -8,6 +8,8 @@ import (
 	"log"
 	"time"
 
+	"github.com/hashicorp/terraform-provider-azurerm/internal/features"
+
 	"github.com/hashicorp/go-azure-helpers/lang/pointer"
 	"github.com/hashicorp/go-azure-helpers/lang/response"
 	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonschema"
@@ -69,7 +71,7 @@ func resourceArmLoadBalancerNatRule() *pluginsdk.Resource {
 					string(loadbalancers.TransportProtocolAll),
 					string(loadbalancers.TransportProtocolTcp),
 					string(loadbalancers.TransportProtocolUdp),
-				}, false),
+				}, features.CaseInsensitive()),
 			},
 
 			"frontend_port": {
diff --git a/internal/services/loadbalancer/probe_resource.go b/internal/services/loadbalancer/probe_resource.go
index 5b4376f28d..440c5c209a 100644
--- a/internal/services/loadbalancer/probe_resource.go
+++ b/internal/services/loadbalancer/probe_resource.go
@@ -8,6 +8,8 @@ import (
 	"log"
 	"time"
 
+	"github.com/hashicorp/terraform-provider-azurerm/internal/features"
+
 	"github.com/hashicorp/go-azure-helpers/lang/pointer"
 	"github.com/hashicorp/go-azure-helpers/lang/response"
 	"github.com/hashicorp/go-azure-sdk/resource-manager/network/2023-09-01/loadbalancers"
@@ -67,7 +69,7 @@ func resourceArmLoadBalancerProbe() *pluginsdk.Resource {
 					string(loadbalancers.ProbeProtocolHTTP),
 					string(loadbalancers.ProbeProtocolHTTPS),
 					string(loadbalancers.ProbeProtocolTcp),
-				}, false),
+				}, features.CaseInsensitive()),
 			},
 
 			"port": {
diff --git a/internal/services/loadbalancer/rule_resource.go b/internal/services/loadbalancer/rule_resource.go
index 856e2dea39..d69cf17717 100644
--- a/internal/services/loadbalancer/rule_resource.go
+++ b/internal/services/loadbalancer/rule_resource.go
@@ -372,7 +372,7 @@ func resourceArmLoadBalancerRuleSchema() map[string]*pluginsdk.Schema {
 				string(loadbalancers.TransportProtocolAll),
 				string(loadbalancers.TransportProtocolTcp),
 				string(loadbalancers.TransportProtocolUdp),
-			}, false),
+			}, features.CaseInsensitive()),
 		},
 
 		"frontend_port": {
diff --git a/internal/services/loganalytics/log_analytics_datasource_windows_event_resource.go b/internal/services/loganalytics/log_analytics_datasource_windows_event_resource.go
index dbbf9132fb..e516105b85 100644
--- a/internal/services/loganalytics/log_analytics_datasource_windows_event_resource.go
+++ b/internal/services/loganalytics/log_analytics_datasource_windows_event_resource.go
@@ -9,6 +9,8 @@ import (
 	"log"
 	"time"
 
+	"github.com/hashicorp/terraform-provider-azurerm/internal/features"
+
 	"github.com/hashicorp/go-azure-helpers/lang/response"
 	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonschema"
 	"github.com/hashicorp/go-azure-sdk/resource-manager/operationalinsights/2020-08-01/datasources"
@@ -79,7 +81,9 @@ func resourceLogAnalyticsDataSourceWindowsEvent() *pluginsdk.Resource {
 				Elem: &pluginsdk.Schema{
 					Type: pluginsdk.TypeString,
 					// API backend accepts event_types case-insensitively
-					ValidateFunc: validation.StringInSlice([]string{"Error", "Warning", "Information"}, false),
+					ValidateFunc: validation.StringInSlice([]string{"Error", "Warning", "Information"}, features.CaseInsensitive()),
+					// FORK: Force attributes to maintain case-insensitivity to avoid breaking changes in Pulumi programs.
+					DiffSuppressFunc: suppress.CaseDifferenceV2Only,
 				},
 			},
 		},
diff --git a/internal/services/loganalytics/log_analytics_workspace_resource.go b/internal/services/loganalytics/log_analytics_workspace_resource.go
index b98942039f..6f4d9ef6f3 100644
--- a/internal/services/loganalytics/log_analytics_workspace_resource.go
+++ b/internal/services/loganalytics/log_analytics_workspace_resource.go
@@ -11,6 +11,9 @@ import (
 	"strings"
 	"time"
 
+	"github.com/hashicorp/terraform-provider-azurerm/internal/features"
+	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/suppress"
+
 	"github.com/hashicorp/go-azure-helpers/lang/pointer"
 	"github.com/hashicorp/go-azure-helpers/lang/response"
 	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonschema"
@@ -115,7 +118,8 @@ func resourceLogAnalyticsWorkspace() *pluginsdk.Resource {
 					string(workspaces.WorkspaceSkuNameEnumStandard),
 					string(workspaces.WorkspaceSkuNameEnumCapacityReservation),
 					"Unlimited", // TODO check if this is actually no longer valid, removed in v28.0.0 of the SDK
-				}, false),
+				}, features.CaseInsensitive()),
+				DiffSuppressFunc: suppress.CaseDifferenceV2Only,
 			},
 
 			"reservation_capacity_in_gb_per_day": {
diff --git a/internal/services/logic/logic_app_integration_account_batch_configuration_resource.go b/internal/services/logic/logic_app_integration_account_batch_configuration_resource.go
index bdf780b66a..5a0bb36d62 100644
--- a/internal/services/logic/logic_app_integration_account_batch_configuration_resource.go
+++ b/internal/services/logic/logic_app_integration_account_batch_configuration_resource.go
@@ -10,6 +10,8 @@ import (
 	"strings"
 	"time"
 
+	"github.com/hashicorp/terraform-provider-azurerm/internal/features"
+
 	"github.com/hashicorp/go-azure-helpers/lang/response"
 	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonschema"
 	"github.com/hashicorp/go-azure-sdk/resource-manager/logic/2019-05-01/integrationaccountbatchconfigurations"
@@ -94,9 +96,10 @@ func resourceLogicAppIntegrationAccountBatchConfiguration() *pluginsdk.Resource
 							Elem: &pluginsdk.Resource{
 								Schema: map[string]*pluginsdk.Schema{
 									"frequency": {
-										Type:         pluginsdk.TypeString,
-										Required:     true,
-										ValidateFunc: validation.StringInSlice(integrationaccountbatchconfigurations.PossibleValuesForRecurrenceFrequency(), false),
+										Type:     pluginsdk.TypeString,
+										Required: true,
+										ValidateFunc: validation.StringInSlice(integrationaccountbatchconfigurations.PossibleValuesForRecurrenceFrequency(),
+											features.CaseInsensitive()),
 									},
 
 									"interval": {
@@ -155,9 +158,10 @@ func resourceLogicAppIntegrationAccountBatchConfiguration() *pluginsdk.Resource
 													Elem: &pluginsdk.Resource{
 														Schema: map[string]*pluginsdk.Schema{
 															"weekday": {
-																Type:         pluginsdk.TypeString,
-																Required:     true,
-																ValidateFunc: validation.StringInSlice(integrationaccountbatchconfigurations.PossibleValuesForDayOfWeek(), false),
+																Type:     pluginsdk.TypeString,
+																Required: true,
+																ValidateFunc: validation.StringInSlice(integrationaccountbatchconfigurations.PossibleValuesForDayOfWeek(),
+																	features.CaseInsensitive()),
 															},
 
 															"week": {
@@ -177,8 +181,9 @@ func resourceLogicAppIntegrationAccountBatchConfiguration() *pluginsdk.Resource
 													Type:     pluginsdk.TypeSet,
 													Optional: true,
 													Elem: &pluginsdk.Schema{
-														Type:         pluginsdk.TypeString,
-														ValidateFunc: validation.StringInSlice(integrationaccountbatchconfigurations.PossibleValuesForDaysOfWeek(), false),
+														Type: pluginsdk.TypeString,
+														ValidateFunc: validation.StringInSlice(integrationaccountbatchconfigurations.PossibleValuesForDaysOfWeek(),
+															features.CaseInsensitive()),
 													},
 													ConflictsWith: []string{"release_criteria.0.recurrence.0.schedule.0.month_days", "release_criteria.0.recurrence.0.schedule.0.monthly"},
 												},
diff --git a/internal/services/logic/logic_app_standard_resource.go b/internal/services/logic/logic_app_standard_resource.go
index 61dd7f0622..cd5000e953 100644
--- a/internal/services/logic/logic_app_standard_resource.go
+++ b/internal/services/logic/logic_app_standard_resource.go
@@ -10,6 +10,8 @@ import (
 	"strings"
 	"time"
 
+	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/suppress"
+
 	"github.com/Azure/azure-sdk-for-go/services/web/mgmt/2021-02-01/web" // nolint: staticcheck
 	"github.com/hashicorp/go-azure-helpers/lang/pointer"
 	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonids"
@@ -143,7 +145,8 @@ func resourceLogicAppStandard() *pluginsdk.Resource {
 								string(web.ConnectionStringTypeServiceBus),
 								string(web.ConnectionStringTypeSQLAzure),
 								string(web.ConnectionStringTypeSQLServer),
-							}, false),
+							}, features.CaseInsensitive()),
+							DiffSuppressFunc: suppress.CaseDifferenceV2Only,
 						},
 
 						"value": {
@@ -871,7 +874,8 @@ func schemaLogicAppStandardSiteConfig() *pluginsdk.Schema {
 						"v4.0",
 						"v5.0",
 						"v6.0",
-					}, false),
+					}, features.CaseInsensitive()),
+					DiffSuppressFunc: suppress.CaseDifferenceV2Only,
 				},
 
 				"vnet_route_all_enabled": {
diff --git a/internal/services/logz/logz_monitor_resource.go b/internal/services/logz/logz_monitor_resource.go
index 4c3ad9df42..852dc41fd4 100644
--- a/internal/services/logz/logz_monitor_resource.go
+++ b/internal/services/logz/logz_monitor_resource.go
@@ -8,6 +8,8 @@ import (
 	"log"
 	"time"
 
+	"github.com/hashicorp/terraform-provider-azurerm/internal/features"
+
 	"github.com/hashicorp/go-azure-helpers/lang/pointer"
 	"github.com/hashicorp/go-azure-helpers/lang/response"
 	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonschema"
@@ -95,7 +97,8 @@ func resourceLogzMonitor() *pluginsdk.Resource {
 							ValidateFunc: validation.StringInSlice([]string{
 								"MONTHLY",
 								"WEEKLY",
-							}, false),
+							}, features.CaseInsensitive()),
+							DiffSuppressFunc: suppress.CaseDifferenceV2Only,
 						},
 
 						"effective_date": {
@@ -112,8 +115,9 @@ func resourceLogzMonitor() *pluginsdk.Resource {
 							ForceNew: true,
 							ValidateFunc: validation.StringInSlice([]string{
 								PlanId100gb14days,
-							}, false),
-							Default: PlanId100gb14days,
+							}, features.CaseInsensitive()),
+							Default:          PlanId100gb14days,
+							DiffSuppressFunc: suppress.CaseDifferenceV2Only,
 						},
 
 						"usage_type": {
@@ -123,7 +127,8 @@ func resourceLogzMonitor() *pluginsdk.Resource {
 							ValidateFunc: validation.StringInSlice([]string{
 								"PAYG",
 								"COMMITTED",
-							}, false),
+							}, features.CaseInsensitive()),
+							DiffSuppressFunc: suppress.CaseDifferenceV2Only,
 						},
 					},
 				},
diff --git a/internal/services/media/media_services_account_resource.go b/internal/services/media/media_services_account_resource.go
index 520bf65dd8..128cd14f20 100644
--- a/internal/services/media/media_services_account_resource.go
+++ b/internal/services/media/media_services_account_resource.go
@@ -10,6 +10,8 @@ import (
 	"strings"
 	"time"
 
+	"github.com/hashicorp/terraform-provider-azurerm/internal/features"
+
 	"github.com/hashicorp/go-azure-helpers/lang/pointer"
 	"github.com/hashicorp/go-azure-helpers/lang/response"
 	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonids"
@@ -136,7 +138,7 @@ func resourceMediaServicesAccount() *pluginsdk.Resource {
 				ValidateFunc: validation.StringInSlice([]string{
 					string(accounts.StorageAuthenticationSystem),
 					string(accounts.StorageAuthenticationManagedIdentity),
-				}, false),
+				}, features.CaseInsensitive()),
 			},
 
 			"key_delivery_access_control": {
@@ -152,7 +154,7 @@ func resourceMediaServicesAccount() *pluginsdk.Resource {
 							ValidateFunc: validation.StringInSlice([]string{
 								string(accounts.DefaultActionDeny),
 								string(accounts.DefaultActionAllow),
-							}, false),
+							}, features.CaseInsensitive()),
 						},
 
 						"ip_allow_list": {
diff --git a/internal/services/monitor/monitor_autoscale_setting_resource.go b/internal/services/monitor/monitor_autoscale_setting_resource.go
index 2766565528..acaa0496c4 100644
--- a/internal/services/monitor/monitor_autoscale_setting_resource.go
+++ b/internal/services/monitor/monitor_autoscale_setting_resource.go
@@ -9,6 +9,9 @@ import (
 	"strconv"
 	"time"
 
+	"github.com/hashicorp/terraform-provider-azurerm/internal/features"
+	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/suppress"
+
 	"github.com/Azure/go-autorest/autorest/date"
 	"github.com/hashicorp/go-azure-helpers/lang/pointer"
 	"github.com/hashicorp/go-azure-helpers/lang/response"
@@ -343,7 +346,8 @@ func resourceMonitorAutoScaleSetting() *pluginsdk.Resource {
 												"Friday",
 												"Saturday",
 												"Sunday",
-											}, false),
+											}, features.CaseInsensitive()),
+											DiffSuppressFunc: suppress.CaseDifferenceV2Only,
 										},
 									},
 									"hours": {
diff --git a/internal/services/mssql/mssql_database_resource.go b/internal/services/mssql/mssql_database_resource.go
index f2531818d2..bc63a0394c 100644
--- a/internal/services/mssql/mssql_database_resource.go
+++ b/internal/services/mssql/mssql_database_resource.go
@@ -10,6 +10,8 @@ import (
 	"strings"
 	"time"
 
+	"github.com/hashicorp/terraform-provider-azurerm/internal/features"
+
 	"github.com/Azure/azure-sdk-for-go/services/preview/sql/mgmt/v5.0/sql" // nolint: staticcheck
 	"github.com/hashicorp/go-azure-helpers/lang/pointer"
 	"github.com/hashicorp/go-azure-helpers/lang/response"
@@ -1680,7 +1682,8 @@ func resourceMsSqlDatabaseSchema() map[string]*pluginsdk.Schema {
 								"Sql_Injection",
 								"Sql_Injection_Vulnerability",
 								"Access_Anomaly",
-							}, false),
+							}, features.CaseInsensitive()),
+							DiffSuppressFunc: suppress.CaseDifferenceV2Only,
 						},
 					},
 
@@ -1691,7 +1694,7 @@ func resourceMsSqlDatabaseSchema() map[string]*pluginsdk.Schema {
 						Optional: true,
 						Default:  EmailAccountAdminsStatusDisabled,
 						ValidateFunc: validation.StringInSlice(PossibleValuesForEmailAccountAdminsStatus(),
-							false),
+							features.CaseInsensitive()),
 					},
 
 					"email_addresses": {
@@ -1719,7 +1722,7 @@ func resourceMsSqlDatabaseSchema() map[string]*pluginsdk.Schema {
 						Optional: true,
 						Default:  string(serversecurityalertpolicies.SecurityAlertsPolicyStateDisabled),
 						ValidateFunc: validation.StringInSlice(serversecurityalertpolicies.PossibleValuesForSecurityAlertsPolicyState(),
-							false),
+							features.CaseInsensitive()),
 					},
 
 					"storage_account_access_key": {
diff --git a/internal/services/mssql/mssql_elasticpool_resource.go b/internal/services/mssql/mssql_elasticpool_resource.go
index 471d716371..0cbeb184da 100644
--- a/internal/services/mssql/mssql_elasticpool_resource.go
+++ b/internal/services/mssql/mssql_elasticpool_resource.go
@@ -10,6 +10,9 @@ import (
 	"strings"
 	"time"
 
+	"github.com/hashicorp/terraform-provider-azurerm/internal/features"
+	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/suppress"
+
 	"github.com/Azure/azure-sdk-for-go/services/preview/sql/mgmt/v5.0/sql" // nolint: staticcheck
 	"github.com/hashicorp/go-azure-helpers/lang/pointer"
 	"github.com/hashicorp/go-azure-helpers/lang/response"
@@ -91,7 +94,8 @@ func resourceMsSqlElasticPool() *pluginsdk.Resource {
 								"BC_DC",
 								"HS_Gen5",
 								"HS_PRMS",
-							}, false),
+							}, features.CaseInsensitive()),
+							DiffSuppressFunc: suppress.CaseDifferenceV2Only,
 						},
 
 						"capacity": {
@@ -110,7 +114,8 @@ func resourceMsSqlElasticPool() *pluginsdk.Resource {
 								"GeneralPurpose",
 								"BusinessCritical",
 								"Hyperscale",
-							}, false),
+							}, features.CaseInsensitive()),
+							DiffSuppressFunc: suppress.CaseDifferenceV2Only,
 						},
 
 						"family": {
@@ -121,7 +126,8 @@ func resourceMsSqlElasticPool() *pluginsdk.Resource {
 								"Gen5",
 								"Fsv2",
 								"DC",
-							}, false),
+							}, features.CaseInsensitive()),
+							DiffSuppressFunc: suppress.CaseDifferenceV2Only,
 						},
 					},
 				},
diff --git a/internal/services/mssql/mssql_server_security_alert_policy_resource.go b/internal/services/mssql/mssql_server_security_alert_policy_resource.go
index 95a9635019..8faaf92a24 100644
--- a/internal/services/mssql/mssql_server_security_alert_policy_resource.go
+++ b/internal/services/mssql/mssql_server_security_alert_policy_resource.go
@@ -8,6 +8,9 @@ import (
 	"log"
 	"time"
 
+	"github.com/hashicorp/terraform-provider-azurerm/internal/features"
+	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/suppress"
+
 	"github.com/Azure/azure-sdk-for-go/services/preview/sql/mgmt/v5.0/sql" // nolint: staticcheck
 	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonschema"
 	"github.com/hashicorp/terraform-provider-azurerm/internal/clients"
@@ -95,7 +98,8 @@ func resourceMsSqlServerSecurityAlertPolicy() *pluginsdk.Resource {
 					string(sql.SecurityAlertPolicyStateDisabled),
 					string(sql.SecurityAlertPolicyStateEnabled),
 					string(sql.SecurityAlertPolicyStateNew),
-				}, false),
+				}, features.CaseInsensitive()),
+				DiffSuppressFunc: suppress.CaseDifferenceV2Only,
 			},
 
 			"storage_account_access_key": {
diff --git a/internal/services/mysql/mysql_server_resource.go b/internal/services/mysql/mysql_server_resource.go
index a7553589e1..99c6655b1f 100644
--- a/internal/services/mysql/mysql_server_resource.go
+++ b/internal/services/mysql/mysql_server_resource.go
@@ -11,6 +11,9 @@ import (
 	"strings"
 	"time"
 
+	"github.com/hashicorp/terraform-provider-azurerm/internal/features"
+	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/suppress"
+
 	"github.com/hashicorp/go-azure-helpers/lang/pointer"
 	"github.com/hashicorp/go-azure-helpers/lang/response"
 	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonschema"
@@ -309,8 +312,10 @@ func resourceMySqlServer() *pluginsdk.Resource {
 				ValidateFunc: validation.StringInSlice([]string{
 					string(servers.ServerVersionFivePointSeven),
 					string(servers.ServerVersionEightPointZero),
-				}, false),
+				}, features.CaseInsensitive()),
 				ForceNew: true,
+				// FORK: Force attributes to maintain case-insensitivity to avoid breaking changes in Pulumi programs.
+				DiffSuppressFunc: suppress.CaseDifferenceV2Only,
 			},
 		},
 
diff --git a/internal/services/network/application_gateway_resource.go b/internal/services/network/application_gateway_resource.go
index 293e89acd0..30e9cf75d1 100644
--- a/internal/services/network/application_gateway_resource.go
+++ b/internal/services/network/application_gateway_resource.go
@@ -11,6 +11,9 @@ import (
 	"strings"
 	"time"
 
+	"github.com/hashicorp/terraform-provider-azurerm/internal/features"
+	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/suppress"
+
 	"github.com/hashicorp/go-azure-helpers/lang/pointer"
 	"github.com/hashicorp/go-azure-helpers/lang/response"
 	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonids"
@@ -204,7 +207,7 @@ func resourceApplicationGateway() *pluginsdk.Resource {
 							ValidateFunc: validation.StringInSlice([]string{
 								string(applicationgateways.ApplicationGatewayProtocolHTTP),
 								string(applicationgateways.ApplicationGatewayProtocolHTTPS),
-							}, false),
+							}, features.CaseInsensitive()),
 						},
 
 						"cookie_based_affinity": {
@@ -213,7 +216,7 @@ func resourceApplicationGateway() *pluginsdk.Resource {
 							ValidateFunc: validation.StringInSlice([]string{
 								string(applicationgateways.ApplicationGatewayCookieBasedAffinityEnabled),
 								string(applicationgateways.ApplicationGatewayCookieBasedAffinityDisabled),
-							}, false),
+							}, features.CaseInsensitive()),
 						},
 
 						"affinity_cookie_name": {
@@ -340,7 +343,7 @@ func resourceApplicationGateway() *pluginsdk.Resource {
 							ValidateFunc: validation.StringInSlice([]string{
 								string(applicationgateways.IPAllocationMethodDynamic),
 								string(applicationgateways.IPAllocationMethodStatic),
-							}, false),
+							}, features.CaseInsensitive()),
 						},
 
 						"private_link_configuration_name": {
@@ -455,7 +458,7 @@ func resourceApplicationGateway() *pluginsdk.Resource {
 							ValidateFunc: validation.StringInSlice([]string{
 								string(applicationgateways.ApplicationGatewayProtocolHTTP),
 								string(applicationgateways.ApplicationGatewayProtocolHTTPS),
-							}, false),
+							}, features.CaseInsensitive()),
 						},
 
 						"host_name": {
@@ -610,7 +613,8 @@ func resourceApplicationGateway() *pluginsdk.Resource {
 										ValidateFunc: validation.StringInSlice([]string{
 											string(applicationgateways.IPAllocationMethodDynamic),
 											string(applicationgateways.IPAllocationMethodStatic),
-										}, false),
+										}, features.CaseInsensitive()),
+										DiffSuppressFunc: suppress.CaseDifferenceV2Only,
 									},
 
 									"primary": {
@@ -818,7 +822,7 @@ func resourceApplicationGateway() *pluginsdk.Resource {
 								string(applicationgateways.ApplicationGatewaySkuNameWAFLarge),
 								string(applicationgateways.ApplicationGatewaySkuNameWAFMedium),
 								string(applicationgateways.ApplicationGatewaySkuNameWAFVTwo),
-							}, false),
+							}, features.CaseInsensitive()),
 						},
 
 						"tier": {
@@ -829,7 +833,7 @@ func resourceApplicationGateway() *pluginsdk.Resource {
 								string(applicationgateways.ApplicationGatewayTierStandardVTwo),
 								string(applicationgateways.ApplicationGatewayTierWAF),
 								string(applicationgateways.ApplicationGatewayTierWAFVTwo),
-							}, false),
+							}, features.CaseInsensitive()),
 						},
 
 						"capacity": {
@@ -930,7 +934,7 @@ func resourceApplicationGateway() *pluginsdk.Resource {
 							ValidateFunc: validation.StringInSlice([]string{
 								string(applicationgateways.ApplicationGatewayProtocolHTTP),
 								string(applicationgateways.ApplicationGatewayProtocolHTTPS),
-							}, false),
+							}, features.CaseInsensitive()),
 						},
 
 						"path": {
@@ -1407,7 +1411,7 @@ func resourceApplicationGateway() *pluginsdk.Resource {
 							ValidateFunc: validation.StringInSlice([]string{
 								string(applicationgateways.ApplicationGatewayFirewallModeDetection),
 								string(applicationgateways.ApplicationGatewayFirewallModePrevention),
-							}, false),
+							}, features.CaseInsensitive()),
 						},
 
 						"rule_set_type": {
diff --git a/internal/services/network/express_route_circuit_resource.go b/internal/services/network/express_route_circuit_resource.go
index 4ce5ae2dc4..8c8748d811 100644
--- a/internal/services/network/express_route_circuit_resource.go
+++ b/internal/services/network/express_route_circuit_resource.go
@@ -9,6 +9,8 @@ import (
 	"log"
 	"time"
 
+	"github.com/hashicorp/terraform-provider-azurerm/internal/features"
+
 	"github.com/hashicorp/go-azure-helpers/lang/pointer"
 	"github.com/hashicorp/go-azure-helpers/lang/response"
 	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonschema"
@@ -78,7 +80,8 @@ func resourceExpressRouteCircuit() *pluginsdk.Resource {
 								string(expressroutecircuits.ExpressRouteCircuitSkuTierLocal),
 								string(expressroutecircuits.ExpressRouteCircuitSkuTierStandard),
 								string(expressroutecircuits.ExpressRouteCircuitSkuTierPremium),
-							}, false),
+							}, features.CaseInsensitive()),
+							DiffSuppressFunc: suppress.CaseDifferenceV2Only,
 						},
 
 						"family": {
@@ -87,7 +90,8 @@ func resourceExpressRouteCircuit() *pluginsdk.Resource {
 							ValidateFunc: validation.StringInSlice([]string{
 								string(expressroutecircuits.ExpressRouteCircuitSkuFamilyMeteredData),
 								string(expressroutecircuits.ExpressRouteCircuitSkuFamilyUnlimitedData),
-							}, false),
+							}, features.CaseInsensitive()),
+							DiffSuppressFunc: suppress.CaseDifferenceV2Only,
 						},
 					},
 				},
diff --git a/internal/services/network/network_security_group_resource.go b/internal/services/network/network_security_group_resource.go
index 9a0f735389..b197d4f545 100644
--- a/internal/services/network/network_security_group_resource.go
+++ b/internal/services/network/network_security_group_resource.go
@@ -8,6 +8,8 @@ import (
 	"strings"
 	"time"
 
+	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/suppress"
+
 	"github.com/hashicorp/go-azure-helpers/lang/pointer"
 	"github.com/hashicorp/go-azure-helpers/lang/response"
 	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonschema"
@@ -83,7 +85,8 @@ func resourceNetworkSecurityGroup() *pluginsdk.Resource {
 								string(networksecuritygroups.SecurityRuleProtocolIcmp),
 								string(networksecuritygroups.SecurityRuleProtocolAh),
 								string(networksecuritygroups.SecurityRuleProtocolEsp),
-							}, false),
+							}, features.CaseInsensitive()),
+							DiffSuppressFunc: suppress.CaseDifferenceV2Only,
 						},
 
 						"source_port_range": {
@@ -154,7 +157,8 @@ func resourceNetworkSecurityGroup() *pluginsdk.Resource {
 							ValidateFunc: validation.StringInSlice([]string{
 								string(networksecuritygroups.SecurityRuleAccessAllow),
 								string(networksecuritygroups.SecurityRuleAccessDeny),
-							}, false),
+							}, features.CaseInsensitive()),
+							DiffSuppressFunc: suppress.CaseDifferenceV2Only,
 						},
 
 						"priority": {
@@ -169,7 +173,8 @@ func resourceNetworkSecurityGroup() *pluginsdk.Resource {
 							ValidateFunc: validation.StringInSlice([]string{
 								string(networksecuritygroups.SecurityRuleDirectionInbound),
 								string(networksecuritygroups.SecurityRuleDirectionOutbound),
-							}, false),
+							}, features.CaseInsensitive()),
+							DiffSuppressFunc: suppress.CaseDifferenceV2Only,
 						},
 					},
 				},
diff --git a/internal/services/network/network_security_rule_resource.go b/internal/services/network/network_security_rule_resource.go
index 9cb44ca6a8..4febc1f9b7 100644
--- a/internal/services/network/network_security_rule_resource.go
+++ b/internal/services/network/network_security_rule_resource.go
@@ -8,6 +8,9 @@ import (
 	"strings"
 	"time"
 
+	"github.com/hashicorp/terraform-provider-azurerm/internal/features"
+	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/suppress"
+
 	"github.com/hashicorp/go-azure-helpers/lang/pointer"
 	"github.com/hashicorp/go-azure-helpers/lang/response"
 	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonschema"
@@ -69,7 +72,8 @@ func resourceNetworkSecurityRule() *pluginsdk.Resource {
 					string(securityrules.SecurityRuleProtocolIcmp),
 					string(securityrules.SecurityRuleProtocolAh),
 					string(securityrules.SecurityRuleProtocolEsp),
-				}, false),
+				}, features.CaseInsensitive()),
+				DiffSuppressFunc: suppress.CaseDifferenceV2Only,
 			},
 
 			"source_port_range": {
@@ -152,7 +156,8 @@ func resourceNetworkSecurityRule() *pluginsdk.Resource {
 				ValidateFunc: validation.StringInSlice([]string{
 					string(securityrules.SecurityRuleAccessAllow),
 					string(securityrules.SecurityRuleAccessDeny),
-				}, false),
+				}, features.CaseInsensitive()),
+				DiffSuppressFunc: suppress.CaseDifferenceV2Only,
 			},
 
 			"priority": {
@@ -167,7 +172,8 @@ func resourceNetworkSecurityRule() *pluginsdk.Resource {
 				ValidateFunc: validation.StringInSlice([]string{
 					string(securityrules.SecurityRuleDirectionInbound),
 					string(securityrules.SecurityRuleDirectionOutbound),
-				}, false),
+				}, features.CaseInsensitive()),
+				DiffSuppressFunc: suppress.CaseDifferenceV2Only,
 			},
 		},
 	}
diff --git a/internal/services/network/public_ip_prefix_resource.go b/internal/services/network/public_ip_prefix_resource.go
index cac9234613..dce56995a3 100644
--- a/internal/services/network/public_ip_prefix_resource.go
+++ b/internal/services/network/public_ip_prefix_resource.go
@@ -8,6 +8,9 @@ import (
 	"log"
 	"time"
 
+	"github.com/hashicorp/terraform-provider-azurerm/internal/features"
+	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/suppress"
+
 	"github.com/hashicorp/go-azure-helpers/lang/pointer"
 	"github.com/hashicorp/go-azure-helpers/lang/response"
 	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonschema"
@@ -79,7 +82,8 @@ func resourcePublicIpPrefix() *pluginsdk.Resource {
 				ValidateFunc: validation.StringInSlice([]string{
 					string(publicipprefixes.IPVersionIPvFour),
 					string(publicipprefixes.IPVersionIPvSix),
-				}, false),
+				}, features.CaseInsensitive()),
+				DiffSuppressFunc: suppress.CaseDifferenceV2Only,
 			},
 
 			"zones": commonschema.ZonesMultipleOptionalForceNew(),
diff --git a/internal/services/network/public_ip_resource.go b/internal/services/network/public_ip_resource.go
index 1d3288f061..ecdf08af62 100644
--- a/internal/services/network/public_ip_resource.go
+++ b/internal/services/network/public_ip_resource.go
@@ -25,6 +25,7 @@ import (
 	"github.com/hashicorp/terraform-provider-azurerm/internal/features"
 	"github.com/hashicorp/terraform-provider-azurerm/internal/services/network/validate"
 	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
+	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/suppress"
 	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/validation"
 	"github.com/hashicorp/terraform-provider-azurerm/internal/timeouts"
 	"github.com/hashicorp/terraform-provider-azurerm/utils"
@@ -98,7 +99,8 @@ func resourcePublicIp() *pluginsdk.Resource {
 				ValidateFunc: validation.StringInSlice([]string{
 					string(publicipaddresses.IPVersionIPvFour),
 					string(publicipaddresses.IPVersionIPvSix),
-				}, false),
+				}, features.CaseInsensitive()),
+				DiffSuppressFunc: suppress.CaseDifferenceV2Only,
 			},
 
 			"sku": {
@@ -115,7 +117,7 @@ func resourcePublicIp() *pluginsdk.Resource {
 				ValidateFunc: validation.StringInSlice([]string{
 					string(publicipaddresses.PublicIPAddressSkuNameBasic),
 					string(publicipaddresses.PublicIPAddressSkuNameStandard),
-				}, false),
+				}, features.CaseInsensitive()),
 			},
 
 			"sku_tier": {
diff --git a/internal/services/network/route_resource.go b/internal/services/network/route_resource.go
index 6672126ad0..00d659abc8 100644
--- a/internal/services/network/route_resource.go
+++ b/internal/services/network/route_resource.go
@@ -5,6 +5,8 @@ package network
 
 import (
 	"fmt"
+	"github.com/hashicorp/terraform-provider-azurerm/internal/features"
+	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/suppress"
 	"time"
 
 	"github.com/hashicorp/go-azure-helpers/lang/pointer"
@@ -71,7 +73,8 @@ func resourceRoute() *pluginsdk.Resource {
 					string(routes.RouteNextHopTypeInternet),
 					string(routes.RouteNextHopTypeVirtualAppliance),
 					string(routes.RouteNextHopTypeNone),
-				}, false),
+				}, features.CaseInsensitive()),
+				DiffSuppressFunc: suppress.CaseDifferenceV2Only,
 			},
 
 			"next_hop_in_ip_address": {
diff --git a/internal/services/network/route_table_resource.go b/internal/services/network/route_table_resource.go
index 02bc2181dd..0f2e4506dd 100644
--- a/internal/services/network/route_table_resource.go
+++ b/internal/services/network/route_table_resource.go
@@ -7,6 +7,8 @@ import (
 	"fmt"
 	"time"
 
+	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/suppress"
+
 	"github.com/hashicorp/go-azure-helpers/lang/pointer"
 	"github.com/hashicorp/go-azure-helpers/lang/response"
 	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonschema"
@@ -82,7 +84,8 @@ func resourceRouteTable() *pluginsdk.Resource {
 								string(routetables.RouteNextHopTypeInternet),
 								string(routetables.RouteNextHopTypeVirtualAppliance),
 								string(routetables.RouteNextHopTypeNone),
-							}, false),
+							}, features.CaseInsensitive()),
+							DiffSuppressFunc: suppress.CaseDifferenceV2Only,
 						},
 
 						"next_hop_in_ip_address": {
diff --git a/internal/services/network/virtual_network_gateway_connection_resource.go b/internal/services/network/virtual_network_gateway_connection_resource.go
index 8638551554..2407f6a968 100644
--- a/internal/services/network/virtual_network_gateway_connection_resource.go
+++ b/internal/services/network/virtual_network_gateway_connection_resource.go
@@ -9,6 +9,8 @@ import (
 	"log"
 	"time"
 
+	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/suppress"
+
 	"github.com/hashicorp/go-azure-helpers/lang/pointer"
 	"github.com/hashicorp/go-azure-helpers/lang/response"
 	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonschema"
@@ -66,7 +68,8 @@ func resourceVirtualNetworkGatewayConnection() *pluginsdk.Resource {
 					string(virtualnetworkgatewayconnections.VirtualNetworkGatewayConnectionTypeExpressRoute),
 					string(virtualnetworkgatewayconnections.VirtualNetworkGatewayConnectionTypeIPsec),
 					string(virtualnetworkgatewayconnections.VirtualNetworkGatewayConnectionTypeVnetTwoVnet),
-				}, false),
+				}, features.CaseInsensitive()),
+				DiffSuppressFunc: suppress.CaseDifferenceV2Only,
 			},
 
 			"virtual_network_gateway_id": {
@@ -255,7 +258,7 @@ func resourceVirtualNetworkGatewayConnection() *pluginsdk.Resource {
 								string(virtualnetworkgatewayconnections.DhGroupECPTwoFiveSix),
 								string(virtualnetworkgatewayconnections.DhGroupECPThreeEightFour),
 								string(virtualnetworkgatewayconnections.DhGroupNone),
-							}, false),
+							}, features.CaseInsensitive()),
 						},
 
 						"ike_encryption": {
@@ -269,7 +272,7 @@ func resourceVirtualNetworkGatewayConnection() *pluginsdk.Resource {
 								string(virtualnetworkgatewayconnections.IkeEncryptionDESThree),
 								string(virtualnetworkgatewayconnections.IkeEncryptionGCMAESOneTwoEight),
 								string(virtualnetworkgatewayconnections.IkeEncryptionGCMAESTwoFiveSix),
-							}, false),
+							}, features.CaseInsensitive()),
 						},
 
 						"ike_integrity": {
@@ -282,7 +285,7 @@ func resourceVirtualNetworkGatewayConnection() *pluginsdk.Resource {
 								string(virtualnetworkgatewayconnections.IkeIntegritySHAOne),
 								string(virtualnetworkgatewayconnections.IkeIntegritySHATwoFiveSix),
 								string(virtualnetworkgatewayconnections.IkeIntegritySHAThreeEightFour),
-							}, false),
+							}, features.CaseInsensitive()),
 						},
 
 						"ipsec_encryption": {
@@ -298,7 +301,7 @@ func resourceVirtualNetworkGatewayConnection() *pluginsdk.Resource {
 								string(virtualnetworkgatewayconnections.IPsecEncryptionGCMAESOneNineTwo),
 								string(virtualnetworkgatewayconnections.IPsecEncryptionGCMAESTwoFiveSix),
 								string(virtualnetworkgatewayconnections.IPsecEncryptionNone),
-							}, false),
+							}, features.CaseInsensitive()),
 						},
 
 						"ipsec_integrity": {
@@ -311,7 +314,7 @@ func resourceVirtualNetworkGatewayConnection() *pluginsdk.Resource {
 								string(virtualnetworkgatewayconnections.IPsecIntegrityMDFive),
 								string(virtualnetworkgatewayconnections.IPsecIntegritySHAOne),
 								string(virtualnetworkgatewayconnections.IPsecIntegritySHATwoFiveSix),
-							}, false),
+							}, features.CaseInsensitive()),
 						},
 
 						"pfs_group": {
@@ -327,7 +330,7 @@ func resourceVirtualNetworkGatewayConnection() *pluginsdk.Resource {
 								string(virtualnetworkgatewayconnections.PfsGroupPFSTwoZeroFourEight),
 								string(virtualnetworkgatewayconnections.PfsGroupPFSTwoFour),
 								string(virtualnetworkgatewayconnections.PfsGroupPFSMM),
-							}, false),
+							}, features.CaseInsensitive()),
 						},
 
 						"sa_datasize": {
diff --git a/internal/services/network/virtual_network_gateway_resource.go b/internal/services/network/virtual_network_gateway_resource.go
index 6e6d6f40ee..4b63964fc1 100644
--- a/internal/services/network/virtual_network_gateway_resource.go
+++ b/internal/services/network/virtual_network_gateway_resource.go
@@ -9,6 +9,8 @@ import (
 	"log"
 	"time"
 
+	"github.com/hashicorp/terraform-provider-azurerm/internal/features"
+
 	"github.com/hashicorp/go-azure-helpers/lang/pointer"
 	"github.com/hashicorp/go-azure-helpers/lang/response"
 	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonids"
@@ -70,7 +72,7 @@ func resourceVirtualNetworkGatewaySchema() map[string]*pluginsdk.Schema {
 			ValidateFunc: validation.StringInSlice([]string{
 				string(virtualnetworkgateways.VirtualNetworkGatewayTypeExpressRoute),
 				string(virtualnetworkgateways.VirtualNetworkGatewayTypeVpn),
-			}, false),
+			}, features.CaseInsensitive()),
 		},
 
 		"vpn_type": {
@@ -81,7 +83,7 @@ func resourceVirtualNetworkGatewaySchema() map[string]*pluginsdk.Schema {
 			ValidateFunc: validation.StringInSlice([]string{
 				string(virtualnetworkgateways.VpnTypeRouteBased),
 				string(virtualnetworkgateways.VpnTypePolicyBased),
-			}, false),
+			}, features.CaseInsensitive()),
 		},
 
 		"edge_zone": commonschema.EdgeZoneOptionalForceNew(),
@@ -510,7 +512,8 @@ func resourceVirtualNetworkGatewaySchema() map[string]*pluginsdk.Schema {
 								string(virtualnetworkgateways.VpnClientProtocolIkeVTwo),
 								string(virtualnetworkgateways.VpnClientProtocolOpenVPN),
 								string(virtualnetworkgateways.VpnClientProtocolSSTP),
-							}, false),
+							}, features.CaseInsensitive()),
+							DiffSuppressFunc: suppress.CaseDifferenceV2Only,
 						},
 					},
 				},
diff --git a/internal/services/notificationhub/notification_hub_namespace_resource.go b/internal/services/notificationhub/notification_hub_namespace_resource.go
index abd8c6b3f6..55bc1b0b1d 100644
--- a/internal/services/notificationhub/notification_hub_namespace_resource.go
+++ b/internal/services/notificationhub/notification_hub_namespace_resource.go
@@ -6,6 +6,7 @@ package notificationhub
 import (
 	"context"
 	"fmt"
+	"github.com/hashicorp/terraform-provider-azurerm/internal/features"
 	"log"
 	"strconv"
 	"time"
@@ -83,7 +84,7 @@ func resourceNotificationHubNamespace() *pluginsdk.Resource {
 				ValidateFunc: validation.StringInSlice([]string{
 					string(namespaces.NamespaceTypeMessaging),
 					string(namespaces.NamespaceTypeNotificationHub),
-				}, false),
+				}, features.CaseInsensitive()),
 			},
 
 			"tags": commonschema.Tags(),
diff --git a/internal/services/policy/policy_definition_resource.go b/internal/services/policy/policy_definition_resource.go
index a6e25db8f3..99c0bd5a4d 100644
--- a/internal/services/policy/policy_definition_resource.go
+++ b/internal/services/policy/policy_definition_resource.go
@@ -6,6 +6,7 @@ package policy
 import (
 	"context"
 	"fmt"
+	"github.com/hashicorp/terraform-provider-azurerm/internal/features"
 	"log"
 	"strconv"
 	"time"
@@ -332,7 +333,7 @@ func resourceArmPolicyDefinitionSchema() map[string]*pluginsdk.Schema {
 				string(policy.TypeCustom),
 				string(policy.TypeNotSpecified),
 				string(policy.TypeStatic),
-			}, false),
+			}, features.CaseInsensitive()),
 		},
 
 		"mode": {
diff --git a/internal/services/postgres/postgresql_server_resource.go b/internal/services/postgres/postgresql_server_resource.go
index d68d5963fa..90dd2bfc33 100644
--- a/internal/services/postgres/postgresql_server_resource.go
+++ b/internal/services/postgres/postgresql_server_resource.go
@@ -11,6 +11,9 @@ import (
 	"strings"
 	"time"
 
+	"github.com/hashicorp/terraform-provider-azurerm/internal/features"
+	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/suppress"
+
 	"github.com/hashicorp/go-azure-helpers/lang/pointer"
 	"github.com/hashicorp/go-azure-helpers/lang/response"
 	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonschema"
@@ -133,10 +136,12 @@ func resourcePostgreSQLServer() *pluginsdk.Resource {
 			},
 
 			"version": {
-				Type:         pluginsdk.TypeString,
-				Required:     true,
-				ForceNew:     true,
-				ValidateFunc: validation.StringInSlice(servers.PossibleValuesForServerVersion(), false),
+				Type:     pluginsdk.TypeString,
+				Required: true,
+				ForceNew: true,
+				ValidateFunc: validation.StringInSlice(servers.PossibleValuesForServerVersion(),
+					features.CaseInsensitive()),
+				DiffSuppressFunc: suppress.CaseDifferenceV2Only,
 			},
 
 			"administrator_login": {
diff --git a/internal/services/recoveryservices/recovery_services_vault_resource.go b/internal/services/recoveryservices/recovery_services_vault_resource.go
index 0da23c1f93..bc5cf95371 100644
--- a/internal/services/recoveryservices/recovery_services_vault_resource.go
+++ b/internal/services/recoveryservices/recovery_services_vault_resource.go
@@ -10,6 +10,8 @@ import (
 	"strings"
 	"time"
 
+	"github.com/hashicorp/terraform-provider-azurerm/internal/features"
+
 	"github.com/hashicorp/go-azure-helpers/lang/pointer"
 	"github.com/hashicorp/go-azure-helpers/lang/response"
 	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonids"
@@ -121,7 +123,7 @@ func resourceRecoveryServicesVault() *pluginsdk.Resource {
 				ValidateFunc: validation.StringInSlice([]string{
 					string(vaults.SkuNameRSZero),
 					string(vaults.SkuNameStandard),
-				}, false),
+				}, features.CaseInsensitive()),
 			},
 
 			"storage_mode_type": {
diff --git a/internal/services/recoveryservices/site_recovery_replicated_vm_resource.go b/internal/services/recoveryservices/site_recovery_replicated_vm_resource.go
index 39f551a769..ed55aa52c4 100644
--- a/internal/services/recoveryservices/site_recovery_replicated_vm_resource.go
+++ b/internal/services/recoveryservices/site_recovery_replicated_vm_resource.go
@@ -227,7 +227,7 @@ func resourceSiteRecoveryReplicatedVM() *pluginsdk.Resource {
 								string(disks.DiskStorageAccountTypesPremiumLRS),
 								string(disks.DiskStorageAccountTypesStandardSSDLRS),
 								string(disks.DiskStorageAccountTypesUltraSSDLRS),
-							}, false),
+							}, features.CaseInsensitive()),
 						},
 
 						"target_replica_disk_type": {
@@ -239,7 +239,7 @@ func resourceSiteRecoveryReplicatedVM() *pluginsdk.Resource {
 								string(disks.DiskStorageAccountTypesPremiumLRS),
 								string(disks.DiskStorageAccountTypesStandardSSDLRS),
 								string(disks.DiskStorageAccountTypesUltraSSDLRS),
-							}, false),
+							}, features.CaseInsensitive()),
 						},
 
 						"target_disk_encryption_set_id": {
diff --git a/internal/services/redis/redis_cache_resource.go b/internal/services/redis/redis_cache_resource.go
index 4913e2d7d6..1ad3808d29 100644
--- a/internal/services/redis/redis_cache_resource.go
+++ b/internal/services/redis/redis_cache_resource.go
@@ -6,6 +6,7 @@ package redis
 import (
 	"context"
 	"fmt"
+	"github.com/hashicorp/terraform-provider-azurerm/internal/features"
 	"log"
 	"strconv"
 	"strings"
@@ -98,7 +99,8 @@ func resourceRedisCache() *pluginsdk.Resource {
 					string(redis.SkuNameBasic),
 					string(redis.SkuNameStandard),
 					string(redis.SkuNamePremium),
-				}, false),
+				}, features.CaseInsensitive()),
+				DiffSuppressFunc: suppress.CaseDifferenceV2Only,
 			},
 
 			"minimum_tls_version": {
diff --git a/internal/services/redis/redis_linked_server_resource.go b/internal/services/redis/redis_linked_server_resource.go
index ff302107f2..a8916e78f2 100644
--- a/internal/services/redis/redis_linked_server_resource.go
+++ b/internal/services/redis/redis_linked_server_resource.go
@@ -6,6 +6,7 @@ package redis
 import (
 	"context"
 	"fmt"
+	"github.com/hashicorp/terraform-provider-azurerm/internal/features"
 	"log"
 	"time"
 
@@ -69,7 +70,7 @@ func resourceRedisLinkedServer() *pluginsdk.Resource {
 				ValidateFunc: validation.StringInSlice([]string{
 					string(redis.ReplicationRolePrimary),
 					string(redis.ReplicationRoleSecondary),
-				}, false),
+				}, features.CaseInsensitive()),
 			},
 
 			"name": {
diff --git a/internal/services/resource/template_deployment_resource.go b/internal/services/resource/template_deployment_resource.go
index 7cb0c666d8..bedb1e8223 100644
--- a/internal/services/resource/template_deployment_resource.go
+++ b/internal/services/resource/template_deployment_resource.go
@@ -12,6 +12,9 @@ import (
 	"strings"
 	"time"
 
+	"github.com/hashicorp/terraform-provider-azurerm/internal/features"
+	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/suppress"
+
 	"github.com/Azure/azure-sdk-for-go/services/resources/mgmt/2020-06-01/resources" // nolint: staticcheck
 	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonschema"
 	"github.com/hashicorp/terraform-provider-azurerm/helpers/tf"
@@ -83,7 +86,8 @@ func resourceTemplateDeployment() *pluginsdk.Resource {
 				ValidateFunc: validation.StringInSlice([]string{
 					string(resources.DeploymentModeComplete),
 					string(resources.DeploymentModeIncremental),
-				}, false),
+				}, features.CaseInsensitive()),
+				DiffSuppressFunc: suppress.CaseDifferenceV2Only,
 			},
 
 			"outputs": {
diff --git a/internal/services/securitycenter/security_center_automation_resource.go b/internal/services/securitycenter/security_center_automation_resource.go
index 80b56994a3..b8954de4ac 100644
--- a/internal/services/securitycenter/security_center_automation_resource.go
+++ b/internal/services/securitycenter/security_center_automation_resource.go
@@ -5,6 +5,8 @@ package securitycenter
 
 import (
 	"fmt"
+	"github.com/hashicorp/terraform-provider-azurerm/internal/features"
+	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/suppress"
 	"log"
 	"strings"
 	"time"
@@ -104,7 +106,8 @@ func resourceSecurityCenterAutomation() *pluginsdk.Resource {
 								typeLogicApp,
 								typeLogAnalytics,
 								typeEventHub,
-							}, false),
+							}, features.CaseInsensitive()),
+							DiffSuppressFunc: suppress.CaseDifferenceV2Only,
 						},
 
 						"resource_id": {
@@ -185,7 +188,8 @@ func resourceSecurityCenterAutomation() *pluginsdk.Resource {
 														string(automations.OperatorLesserThanOrEqualTo),
 														string(automations.OperatorNotEquals),
 														string(automations.OperatorStartsWith),
-													}, false),
+													}, features.CaseInsensitive()),
+													DiffSuppressFunc: suppress.CaseDifferenceV2Only,
 												},
 												"property_type": {
 													Type:     pluginsdk.TypeString,
@@ -195,7 +199,8 @@ func resourceSecurityCenterAutomation() *pluginsdk.Resource {
 														string(automations.PropertyTypeString),
 														string(automations.PropertyTypeBoolean),
 														string(automations.PropertyTypeNumber),
-													}, false),
+													}, features.CaseInsensitive()),
+													DiffSuppressFunc: suppress.CaseDifferenceV2Only,
 												},
 											},
 										},
diff --git a/internal/services/servicebus/servicebus_namespace_resource.go b/internal/services/servicebus/servicebus_namespace_resource.go
index 8405a07c91..2d9ca4d9a8 100644
--- a/internal/services/servicebus/servicebus_namespace_resource.go
+++ b/internal/services/servicebus/servicebus_namespace_resource.go
@@ -87,7 +87,8 @@ func resourceServiceBusNamespace() *pluginsdk.Resource {
 					string(namespaces.SkuNameBasic),
 					string(namespaces.SkuNameStandard),
 					string(namespaces.SkuNamePremium),
-				}, false),
+				}, features.CaseInsensitive()),
+				DiffSuppressFunc: suppress.CaseDifferenceV2Only,
 			},
 
 			"capacity": {
diff --git a/internal/services/servicebus/servicebus_subscription_rule_resource.go b/internal/services/servicebus/servicebus_subscription_rule_resource.go
index a4db7728d8..d0bbf2ec2f 100644
--- a/internal/services/servicebus/servicebus_subscription_rule_resource.go
+++ b/internal/services/servicebus/servicebus_subscription_rule_resource.go
@@ -5,6 +5,7 @@ package servicebus
 
 import (
 	"fmt"
+	"github.com/hashicorp/terraform-provider-azurerm/internal/features"
 	"log"
 	"time"
 
@@ -69,7 +70,8 @@ func resourceServicebusSubscriptionRuleSchema() map[string]*pluginsdk.Schema {
 			ValidateFunc: validation.StringInSlice([]string{
 				string(subscriptions.FilterTypeSqlFilter),
 				string(subscriptions.FilterTypeCorrelationFilter),
-			}, false),
+			}, features.CaseInsensitive()),
+			DiffSuppressFunc: suppress.CaseDifferenceV2Only,
 		},
 
 		"action": {
diff --git a/internal/services/servicebus/servicebus_topic_resource.go b/internal/services/servicebus/servicebus_topic_resource.go
index a933b17947..7d8fa22219 100644
--- a/internal/services/servicebus/servicebus_topic_resource.go
+++ b/internal/services/servicebus/servicebus_topic_resource.go
@@ -8,6 +8,8 @@ import (
 	"log"
 	"time"
 
+	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/suppress"
+
 	"github.com/hashicorp/go-azure-helpers/lang/response"
 	"github.com/hashicorp/go-azure-sdk/resource-manager/servicebus/2021-06-01-preview/topics"
 	"github.com/hashicorp/go-azure-sdk/resource-manager/servicebus/2022-10-01-preview/namespaces"
@@ -69,7 +71,8 @@ func resourceServiceBusTopicSchema() map[string]*pluginsdk.Schema {
 			ValidateFunc: validation.StringInSlice([]string{
 				string(topics.EntityStatusActive),
 				string(topics.EntityStatusDisabled),
-			}, false),
+			}, features.CaseInsensitive()),
+			DiffSuppressFunc: suppress.CaseDifferenceV2Only,
 		},
 
 		"auto_delete_on_idle": {
diff --git a/internal/services/sql/sql_database_resource.go b/internal/services/sql/sql_database_resource.go
index 8fab920f07..73ffbe68b9 100644
--- a/internal/services/sql/sql_database_resource.go
+++ b/internal/services/sql/sql_database_resource.go
@@ -10,6 +10,8 @@ import (
 	"strings"
 	"time"
 
+	"github.com/hashicorp/terraform-provider-azurerm/internal/features"
+
 	"github.com/Azure/azure-sdk-for-go/services/preview/sql/mgmt/2017-03-01-preview/sql" // nolint: staticcheck
 	"github.com/Azure/go-autorest/autorest/date"
 	"github.com/gofrs/uuid"
@@ -470,7 +472,7 @@ func resourceSqlDatabaseSchema() map[string]*pluginsdk.Schema {
 				string(sql.CreateModeRecovery),
 				string(sql.CreateModeRestore),
 				string(sql.CreateModeRestoreLongTermRetentionBackup),
-			}, false),
+			}, features.CaseInsensitive()),
 		},
 
 		"import": {
@@ -494,7 +496,7 @@ func resourceSqlDatabaseSchema() map[string]*pluginsdk.Schema {
 						ValidateFunc: validation.StringInSlice([]string{
 							"StorageAccessKey",
 							"SharedAccessKey",
-						}, false),
+						}, features.CaseInsensitive()),
 					},
 					"administrator_login": {
 						Type:     pluginsdk.TypeString,
@@ -511,7 +513,7 @@ func resourceSqlDatabaseSchema() map[string]*pluginsdk.Schema {
 						ValidateFunc: validation.StringInSlice([]string{
 							"ADPassword",
 							"SQL",
-						}, false),
+						}, features.CaseInsensitive()),
 					},
 					"operation_mode": {
 						Type:     pluginsdk.TypeString,
@@ -519,7 +521,7 @@ func resourceSqlDatabaseSchema() map[string]*pluginsdk.Schema {
 						Default:  "Import",
 						ValidateFunc: validation.StringInSlice([]string{
 							"Import",
-						}, false),
+						}, features.CaseInsensitive()),
 					},
 				},
 			},
@@ -557,7 +559,7 @@ func resourceSqlDatabaseSchema() map[string]*pluginsdk.Schema {
 				string(sql.System),
 				string(sql.System2),
 				string(sql.Web),
-			}, false),
+			}, features.CaseInsensitive()),
 		},
 
 		"collation": {
@@ -642,7 +644,8 @@ func resourceSqlDatabaseSchema() map[string]*pluginsdk.Schema {
 								"Sql_Injection",
 								"Sql_Injection_Vulnerability",
 								"Access_Anomaly",
-							}, false),
+							}, features.CaseInsensitive()),
+							DiffSuppressFunc: suppress.CaseDifferenceV2Only,
 						},
 					},
 
@@ -653,7 +656,7 @@ func resourceSqlDatabaseSchema() map[string]*pluginsdk.Schema {
 						ValidateFunc: validation.StringInSlice([]string{
 							string(sql.SecurityAlertPolicyEmailAccountAdminsDisabled),
 							string(sql.SecurityAlertPolicyEmailAccountAdminsEnabled),
-						}, false),
+						}, features.CaseInsensitive()),
 					},
 
 					"email_addresses": {
@@ -679,7 +682,7 @@ func resourceSqlDatabaseSchema() map[string]*pluginsdk.Schema {
 							string(sql.SecurityAlertPolicyStateDisabled),
 							string(sql.SecurityAlertPolicyStateEnabled),
 							string(sql.SecurityAlertPolicyStateNew),
-						}, false),
+						}, features.CaseInsensitive()),
 					},
 
 					"storage_account_access_key": {
diff --git a/internal/services/sql/sql_managed_instance_resource.go b/internal/services/sql/sql_managed_instance_resource.go
index aee7ee3589..dc5c126ad2 100644
--- a/internal/services/sql/sql_managed_instance_resource.go
+++ b/internal/services/sql/sql_managed_instance_resource.go
@@ -6,6 +6,8 @@ package sql
 import (
 	"context"
 	"fmt"
+	"github.com/hashicorp/terraform-provider-azurerm/internal/features"
+	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/suppress"
 	"log"
 	"strings"
 	"time"
@@ -113,7 +115,8 @@ func resourceArmSqlMiServer() *schema.Resource {
 				ValidateFunc: validation.StringInSlice([]string{
 					"LicenseIncluded",
 					"BasePrice",
-				}, false),
+				}, features.CaseInsensitive()),
+				DiffSuppressFunc: suppress.CaseDifferenceV2Only,
 			},
 
 			"subnet_id": {
diff --git a/internal/services/sql/sql_server_resource.go b/internal/services/sql/sql_server_resource.go
index 16797800a2..6d74e94b4f 100644
--- a/internal/services/sql/sql_server_resource.go
+++ b/internal/services/sql/sql_server_resource.go
@@ -6,6 +6,8 @@ package sql
 import (
 	"context"
 	"fmt"
+	"github.com/hashicorp/terraform-provider-azurerm/internal/features"
+	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/suppress"
 	"log"
 	"strings"
 	"time"
@@ -118,7 +120,8 @@ func resourceSqlServer() *pluginsdk.Resource {
 									"Access_Anomaly",
 									"Data_Exfiltration",
 									"Unsafe_Action",
-								}, false),
+								}, features.CaseInsensitive()),
+								DiffSuppressFunc: suppress.CaseDifferenceV2Only,
 							},
 						},
 
@@ -152,7 +155,7 @@ func resourceSqlServer() *pluginsdk.Resource {
 								string(sql.SecurityAlertPolicyStateDisabled),
 								string(sql.SecurityAlertPolicyStateEnabled),
 								string(sql.SecurityAlertPolicyStateNew), // Only kept for backward compatibility - TODO investigate if we can remove this in 4.0
-							}, false),
+							}, features.CaseInsensitive()),
 						},
 
 						"storage_account_access_key": {
diff --git a/internal/services/storage/storage_account_resource.go b/internal/services/storage/storage_account_resource.go
index 04dbb3fd34..f94262e32e 100644
--- a/internal/services/storage/storage_account_resource.go
+++ b/internal/services/storage/storage_account_resource.go
@@ -11,6 +11,8 @@ import (
 	"strings"
 	"time"
 
+	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/suppress"
+
 	"github.com/hashicorp/go-azure-helpers/lang/pointer"
 	"github.com/hashicorp/go-azure-helpers/lang/response"
 	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonids"
@@ -103,17 +105,19 @@ func resourceStorageAccount() *pluginsdk.Resource {
 			"location": commonschema.Location(),
 
 			"account_kind": {
-				Type:         pluginsdk.TypeString,
-				Optional:     true,
-				ValidateFunc: validation.StringInSlice(storageaccounts.PossibleValuesForKind(), false),
-				Default:      string(storageaccounts.KindStorageVTwo),
+				Type:             pluginsdk.TypeString,
+				Optional:         true,
+				ValidateFunc:     validation.StringInSlice(storageaccounts.PossibleValuesForKind(), features.CaseInsensitive()),
+				DiffSuppressFunc: suppress.CaseDifferenceV2Only,
+				Default:          string(storageaccounts.KindStorageVTwo),
 			},
 
 			"account_tier": {
-				Type:         pluginsdk.TypeString,
-				Required:     true,
-				ForceNew:     true,
-				ValidateFunc: validation.StringInSlice(storageaccounts.PossibleValuesForSkuTier(), false),
+				Type:             pluginsdk.TypeString,
+				Required:         true,
+				ForceNew:         true,
+				ValidateFunc:     validation.StringInSlice(storageaccounts.PossibleValuesForSkuTier(), features.CaseInsensitive()),
+				DiffSuppressFunc: suppress.CaseDifferenceV2Only,
 			},
 
 			"account_replication_type": {
@@ -126,15 +130,20 @@ func resourceStorageAccount() *pluginsdk.Resource {
 					"RAGRS",
 					"GZRS",
 					"RAGZRS",
-				}, false),
+				}, features.CaseInsensitive()),
+				DiffSuppressFunc: suppress.CaseDifferenceV2Only,
 			},
 
 			// Only valid for FileStorage, BlobStorage & StorageV2 accounts, defaults to "Hot" in create function
 			"access_tier": {
-				Type:         pluginsdk.TypeString,
-				Optional:     true,
-				Computed:     true,
-				ValidateFunc: validation.StringInSlice(storageaccounts.PossibleValuesForAccessTier(), false), // TODO: docs for `Premium`
+				Type:     pluginsdk.TypeString,
+				Optional: true,
+				Computed: true,
+				ValidateFunc: validation.StringInSlice([]string{
+					string(storageaccounts.AccessTierCool),
+					string(storageaccounts.AccessTierHot),
+				}, features.CaseInsensitive()),
+				DiffSuppressFunc: suppress.CaseDifferenceV2Only,
 			},
 
 			"azure_files_authentication": {
@@ -358,8 +367,9 @@ func resourceStorageAccount() *pluginsdk.Resource {
 							Optional: true,
 							Computed: true,
 							Elem: &pluginsdk.Schema{
-								Type:         pluginsdk.TypeString,
-								ValidateFunc: validation.StringInSlice(storageaccounts.PossibleValuesForBypass(), false),
+								Type:             pluginsdk.TypeString,
+								ValidateFunc:     validation.StringInSlice(storageaccounts.PossibleValuesForBypass(), features.CaseInsensitive()),
+								DiffSuppressFunc: suppress.CaseDifferenceV2Only,
 							},
 							Set: pluginsdk.HashString,
 						},
diff --git a/internal/services/synapse/synapse_sql_pool_security_alert_policy_resource.go b/internal/services/synapse/synapse_sql_pool_security_alert_policy_resource.go
index bdbad438b2..992f5ac5ab 100644
--- a/internal/services/synapse/synapse_sql_pool_security_alert_policy_resource.go
+++ b/internal/services/synapse/synapse_sql_pool_security_alert_policy_resource.go
@@ -5,6 +5,8 @@ package synapse
 
 import (
 	"fmt"
+	"github.com/hashicorp/terraform-provider-azurerm/internal/features"
+	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/suppress"
 	"log"
 	"time"
 
@@ -90,7 +92,8 @@ func resourceSynapseSqlPoolSecurityAlertPolicy() *pluginsdk.Resource {
 					string(synapse.SecurityAlertPolicyStateDisabled),
 					string(synapse.SecurityAlertPolicyStateEnabled),
 					string(synapse.SecurityAlertPolicyStateNew),
-				}, false),
+				}, features.CaseInsensitive()),
+				DiffSuppressFunc: suppress.CaseDifferenceV2Only,
 			},
 
 			"storage_account_access_key": {
diff --git a/internal/services/synapse/synapse_workspace_security_alert_policy_resource.go b/internal/services/synapse/synapse_workspace_security_alert_policy_resource.go
index c928831ac4..0fae0d312c 100644
--- a/internal/services/synapse/synapse_workspace_security_alert_policy_resource.go
+++ b/internal/services/synapse/synapse_workspace_security_alert_policy_resource.go
@@ -5,6 +5,8 @@ package synapse
 
 import (
 	"fmt"
+	"github.com/hashicorp/terraform-provider-azurerm/internal/features"
+	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/suppress"
 	"log"
 	"time"
 
@@ -90,7 +92,8 @@ func resourceSynapseWorkspaceSecurityAlertPolicy() *pluginsdk.Resource {
 					string(synapse.SecurityAlertPolicyStateDisabled),
 					string(synapse.SecurityAlertPolicyStateEnabled),
 					string(synapse.SecurityAlertPolicyStateNew),
-				}, false),
+				}, features.CaseInsensitive()),
+				DiffSuppressFunc: suppress.CaseDifferenceV2Only,
 			},
 
 			"storage_account_access_key": {
diff --git a/internal/services/trafficmanager/traffic_manager_profile_resource.go b/internal/services/trafficmanager/traffic_manager_profile_resource.go
index a76a72520f..3d400d4fc0 100644
--- a/internal/services/trafficmanager/traffic_manager_profile_resource.go
+++ b/internal/services/trafficmanager/traffic_manager_profile_resource.go
@@ -10,6 +10,8 @@ import (
 	"strings"
 	"time"
 
+	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/suppress"
+
 	"github.com/hashicorp/go-azure-helpers/lang/response"
 	"github.com/hashicorp/go-azure-helpers/resourcemanager/commonschema"
 	"github.com/hashicorp/go-azure-helpers/resourcemanager/tags"
@@ -127,7 +129,8 @@ func resourceArmTrafficManagerProfile() *pluginsdk.Resource {
 								string(profiles.MonitorProtocolHTTP),
 								string(profiles.MonitorProtocolHTTPS),
 								string(profiles.MonitorProtocolTCP),
-							}, false),
+							}, features.CaseInsensitive()),
+							DiffSuppressFunc: suppress.CaseDifferenceV2Only,
 						},
 
 						"port": {
@@ -172,7 +175,8 @@ func resourceArmTrafficManagerProfile() *pluginsdk.Resource {
 				ValidateFunc: validation.StringInSlice([]string{
 					string(profiles.ProfileStatusEnabled),
 					string(profiles.ProfileStatusDisabled),
-				}, false),
+				}, features.CaseInsensitive()),
+				DiffSuppressFunc: suppress.CaseDifferenceV2Only,
 			},
 
 			"max_return": {
diff --git a/internal/services/web/app_service.go b/internal/services/web/app_service.go
index 9a965e035a..01b69c1c1f 100644
--- a/internal/services/web/app_service.go
+++ b/internal/services/web/app_service.go
@@ -8,6 +8,9 @@ import (
 	"log"
 	"strings"
 
+	"github.com/hashicorp/terraform-provider-azurerm/internal/features"
+	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/suppress"
+
 	"github.com/Azure/azure-sdk-for-go/services/web/mgmt/2021-02-01/web" // nolint: staticcheck
 	"github.com/hashicorp/go-azure-helpers/resourcemanager/identity"
 	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/pluginsdk"
@@ -261,7 +264,8 @@ func schemaAppServiceSiteConfig() *pluginsdk.Schema {
 						"v4.0",
 						"v5.0",
 						"v6.0",
-					}, false),
+					}, features.CaseInsensitive()),
+					DiffSuppressFunc: suppress.CaseDifferenceV2Only,
 				},
 
 				"http2_enabled": {
@@ -293,7 +297,8 @@ func schemaAppServiceSiteConfig() *pluginsdk.Schema {
 						"JAVA",
 						"JETTY",
 						"TOMCAT",
-					}, false),
+					}, features.CaseInsensitive()),
+					DiffSuppressFunc: suppress.CaseDifferenceV2Only,
 				},
 
 				"java_container_version": {
@@ -314,7 +319,8 @@ func schemaAppServiceSiteConfig() *pluginsdk.Schema {
 					ValidateFunc: validation.StringInSlice([]string{
 						string(web.ManagedPipelineModeClassic),
 						string(web.ManagedPipelineModeIntegrated),
-					}, false),
+					}, features.CaseInsensitive()),
+					DiffSuppressFunc: suppress.CaseDifferenceV2Only,
 				},
 
 				"php_version": {
@@ -355,6 +361,7 @@ func schemaAppServiceSiteConfig() *pluginsdk.Schema {
 						"VS2019",
 						"VS2022",
 					}, false),
+					DiffSuppressFunc: suppress.CaseDifferenceV2Only,
 				},
 
 				"scm_type": {
diff --git a/internal/services/web/app_service_certificate_order_resource.go b/internal/services/web/app_service_certificate_order_resource.go
index cf219be2e2..de18a1e028 100644
--- a/internal/services/web/app_service_certificate_order_resource.go
+++ b/internal/services/web/app_service_certificate_order_resource.go
@@ -5,6 +5,7 @@ package web
 
 import (
 	"fmt"
+	"github.com/hashicorp/terraform-provider-azurerm/internal/features"
 	"log"
 	"time"
 
@@ -119,7 +120,7 @@ func resourceAppServiceCertificateOrder() *pluginsdk.Resource {
 				ValidateFunc: validation.StringInSlice([]string{
 					"Standard",
 					"WildCard",
-				}, false),
+				}, features.CaseInsensitive()),
 			},
 
 			"validity_in_years": {
diff --git a/internal/services/web/function_app.go b/internal/services/web/function_app.go
index c3dfeff2cf..86a94c195d 100644
--- a/internal/services/web/function_app.go
+++ b/internal/services/web/function_app.go
@@ -6,6 +6,8 @@ package web
 import (
 	"context"
 	"fmt"
+	"github.com/hashicorp/terraform-provider-azurerm/internal/features"
+	"github.com/hashicorp/terraform-provider-azurerm/internal/tf/suppress"
 	"log"
 	"strings"
 
@@ -164,7 +166,8 @@ func schemaAppServiceFunctionAppSiteConfig() *pluginsdk.Schema {
 						"v4.0",
 						"v5.0",
 						"v6.0",
-					}, false),
+					}, features.CaseInsensitive()),
+					DiffSuppressFunc: suppress.CaseDifferenceV2Only,
 				},
 
 				"vnet_route_all_enabled": {
diff --git a/internal/tf/suppress/deprecated_soon.go b/internal/tf/suppress/deprecated_soon.go
index 926f57f880..815f6e3006 100644
--- a/internal/tf/suppress/deprecated_soon.go
+++ b/internal/tf/suppress/deprecated_soon.go
@@ -17,3 +17,9 @@ func CaseDifference(_, old, new string, _ *schema.ResourceData) bool {
 	// fields should be case-sensitive, normalize the Azure Resource ID in the Read if required
 	return strings.EqualFold(old, new)
 }
+
+// CaseDifferenceV2Only only suppress case difference for v2.0.
+func CaseDifferenceV2Only(_, old, new string, _ *schema.ResourceData) bool {
+	// FORK: Force attributes to maintain case-insensitivity to avoid breaking changes in Pulumi programs.
+	return strings.EqualFold(old, new)
+}
