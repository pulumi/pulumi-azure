# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import json
import warnings
import pulumi
import pulumi.runtime
from .. import utilities, tables

class Application(pulumi.CustomResource):
    account_name: pulumi.Output[str]
    """
    The name of the Batch account. Changing this forces a new resource to be created.
    """
    allow_updates: pulumi.Output[bool]
    """
    A value indicating whether packages within the application may be overwritten using the same version string. Defaults to `true`.
    """
    default_version: pulumi.Output[str]
    """
    The package to use if a client requests the application but does not specify a version. This property can only be set to the name of an existing package.
    """
    display_name: pulumi.Output[str]
    """
    The display name for the application.
    """
    name: pulumi.Output[str]
    """
    The name of the application. This must be unique within the account. Changing this forces a new resource to be created.
    """
    resource_group_name: pulumi.Output[str]
    """
    The name of the resource group that contains the Batch account. Changing this forces a new resource to be created.
    """
    def __init__(__self__, resource_name, opts=None, account_name=None, allow_updates=None, default_version=None, display_name=None, name=None, resource_group_name=None, __name__=None, __opts__=None):
        """
        Manage Azure Batch Application instance.
        
        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] account_name: The name of the Batch account. Changing this forces a new resource to be created.
        :param pulumi.Input[bool] allow_updates: A value indicating whether packages within the application may be overwritten using the same version string. Defaults to `true`.
        :param pulumi.Input[str] default_version: The package to use if a client requests the application but does not specify a version. This property can only be set to the name of an existing package.
        :param pulumi.Input[str] display_name: The display name for the application.
        :param pulumi.Input[str] name: The name of the application. This must be unique within the account. Changing this forces a new resource to be created.
        :param pulumi.Input[str] resource_group_name: The name of the resource group that contains the Batch account. Changing this forces a new resource to be created.

        > This content is derived from https://github.com/terraform-providers/terraform-provider-azurerm/blob/master/website/docs/r/batch_application.html.markdown.
        """
        if __name__ is not None:
            warnings.warn("explicit use of __name__ is deprecated", DeprecationWarning)
            resource_name = __name__
        if __opts__ is not None:
            warnings.warn("explicit use of __opts__ is deprecated, use 'opts' instead", DeprecationWarning)
            opts = __opts__
        if not resource_name:
            raise TypeError('Missing resource name argument (for URN creation)')
        if not isinstance(resource_name, str):
            raise TypeError('Expected resource name to be a string')
        if opts and not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')

        __props__ = dict()

        if account_name is None:
            raise TypeError("Missing required property 'account_name'")
        __props__['account_name'] = account_name

        __props__['allow_updates'] = allow_updates

        __props__['default_version'] = default_version

        __props__['display_name'] = display_name

        __props__['name'] = name

        if resource_group_name is None:
            raise TypeError("Missing required property 'resource_group_name'")
        __props__['resource_group_name'] = resource_group_name

        super(Application, __self__).__init__(
            'azure:batch/application:Application',
            resource_name,
            __props__,
            opts)


    def translate_output_property(self, prop):
        return tables._CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop

    def translate_input_property(self, prop):
        return tables._SNAKE_TO_CAMEL_CASE_TABLE.get(prop) or prop

