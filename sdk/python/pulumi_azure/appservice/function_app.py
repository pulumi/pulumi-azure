# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import pulumi
import pulumi.runtime
from .. import utilities, tables

class FunctionApp(pulumi.CustomResource):
    """
    Manages a Function App.
    """
    def __init__(__self__, __name__, __opts__=None, app_service_plan_id=None, app_settings=None, client_affinity_enabled=None, connection_strings=None, enabled=None, https_only=None, identity=None, location=None, name=None, resource_group_name=None, site_config=None, storage_connection_string=None, tags=None, version=None):
        """Create a FunctionApp resource with the given unique name, props, and options."""
        if not __name__:
            raise TypeError('Missing resource name argument (for URN creation)')
        if not isinstance(__name__, str):
            raise TypeError('Expected resource name to be a string')
        if __opts__ and not isinstance(__opts__, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')

        __props__ = dict()

        if not app_service_plan_id:
            raise TypeError('Missing required property app_service_plan_id')
        __props__['app_service_plan_id'] = app_service_plan_id

        __props__['app_settings'] = app_settings

        __props__['client_affinity_enabled'] = client_affinity_enabled

        __props__['connection_strings'] = connection_strings

        __props__['enabled'] = enabled

        __props__['https_only'] = https_only

        __props__['identity'] = identity

        if not location:
            raise TypeError('Missing required property location')
        __props__['location'] = location

        __props__['name'] = name

        if not resource_group_name:
            raise TypeError('Missing required property resource_group_name')
        __props__['resource_group_name'] = resource_group_name

        __props__['site_config'] = site_config

        if not storage_connection_string:
            raise TypeError('Missing required property storage_connection_string')
        __props__['storage_connection_string'] = storage_connection_string

        __props__['tags'] = tags

        __props__['version'] = version

        __props__['default_hostname'] = None
        __props__['outbound_ip_addresses'] = None
        __props__['site_credential'] = None

        super(FunctionApp, __self__).__init__(
            'azure:appservice/functionApp:FunctionApp',
            __name__,
            __props__,
            __opts__)


    def translate_output_property(self, prop):
        return tables._CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop

    def translate_input_property(self, prop):
        return tables._SNAKE_TO_CAMEL_CASE_TABLE.get(prop) or prop

