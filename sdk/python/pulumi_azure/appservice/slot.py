# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import json
import warnings
import pulumi
import pulumi.runtime
from typing import Union
from .. import utilities, tables

class Slot(pulumi.CustomResource):
    app_service_name: pulumi.Output[str]
    """
    The name of the App Service within which to create the App Service Slot.  Changing this forces a new resource to be created.
    """
    app_service_plan_id: pulumi.Output[str]
    """
    The ID of the App Service Plan within which to create this App Service Slot. Changing this forces a new resource to be created.
    """
    app_settings: pulumi.Output[dict]
    """
    A key-value pair of App Settings.
    """
    auth_settings: pulumi.Output[dict]
    """
    A `auth_settings` block as defined below.

      * `active_directory` (`dict`) - A `active_directory` block as defined below.
        * `allowedAudiences` (`list`) - Allowed audience values to consider when validating JWTs issued by Azure Active Directory.
        * `client_id` (`str`) - The Client ID of this relying party application. Enables OpenIDConnection authentication with Azure Active Directory.
        * `client_secret` (`str`) - The Client Secret of this relying party application. If no secret is provided, implicit flow will be used.

      * `additionalLoginParams` (`dict`) - Login parameters to send to the OpenID Connect authorization endpoint when a user logs in. Each parameter must be in the form "key=value".
      * `allowedExternalRedirectUrls` (`list`) - External URLs that can be redirected to as part of logging in or logging out of the app.
      * `defaultProvider` (`str`) - The default provider to use when multiple providers have been set up. Possible values are `AzureActiveDirectory`, `Facebook`, `Google`, `MicrosoftAccount` and `Twitter`.
      * `enabled` (`bool`) - Is Authentication enabled?
      * `facebook` (`dict`) - A `facebook` block as defined below.
        * `app_id` (`str`) - The App ID of the Facebook app used for login
        * `app_secret` (`str`) - The App Secret of the Facebook app used for Facebook Login.
        * `oauthScopes` (`list`) - The OAuth 2.0 scopes that will be requested as part of Facebook Login authentication. https://developers.facebook.com/docs/facebook-login

      * `google` (`dict`) - A `google` block as defined below.
        * `client_id` (`str`) - The OpenID Connect Client ID for the Google web application.
        * `client_secret` (`str`) - The client secret associated with the Google web application.
        * `oauthScopes` (`list`) - The OAuth 2.0 scopes that will be requested as part of Google Sign-In authentication. https://developers.google.com/identity/sign-in/web/

      * `issuer` (`str`) - Issuer URI. When using Azure Active Directory, this value is the URI of the directory tenant, e.g. https://sts.windows.net/{tenant-guid}/.
      * `microsoft` (`dict`) - A `microsoft` block as defined below.
        * `client_id` (`str`) - The OAuth 2.0 client ID that was created for the app used for authentication.
        * `client_secret` (`str`) - The OAuth 2.0 client secret that was created for the app used for authentication.
        * `oauthScopes` (`list`) - The OAuth 2.0 scopes that will be requested as part of Microsoft Account authentication. https://msdn.microsoft.com/en-us/library/dn631845.aspx

      * `runtimeVersion` (`str`) - The runtime version of the Authentication/Authorization module.
      * `tokenRefreshExtensionHours` (`float`) - The number of hours after session token expiration that a session token can be used to call the token refresh API. Defaults to 72.
      * `tokenStoreEnabled` (`bool`) - If enabled the module will durably store platform-specific security tokens that are obtained during login flows. Defaults to false.
      * `twitter` (`dict`) - A `twitter` block as defined below.
        * `consumerKey` (`str`)
        * `consumerSecret` (`str`)

      * `unauthenticatedClientAction` (`str`) - The action to take when an unauthenticated client attempts to access the app. Possible values are `AllowAnonymous` and `RedirectToLoginPage`.
    """
    client_affinity_enabled: pulumi.Output[bool]
    """
    Should the App Service Slot send session affinity cookies, which route client requests in the same session to the same instance?
    """
    connection_strings: pulumi.Output[list]
    """
    An `connection_string` block as defined below.

      * `name` (`str`) - The name of the Connection String.
      * `type` (`str`) - The type of the Connection String. Possible values are `APIHub`, `Custom`, `DocDb`, `EventHub`, `MySQL`, `NotificationHub`, `PostgreSQL`, `RedisCache`, `ServiceBus`, `SQLAzure`, and  `SQLServer`.
      * `value` (`str`) - The value for the Connection String.
    """
    default_site_hostname: pulumi.Output[str]
    """
    The Default Hostname associated with the App Service Slot - such as `mysite.azurewebsites.net`
    """
    enabled: pulumi.Output[bool]
    """
    Is the App Service Slot Enabled?
    """
    https_only: pulumi.Output[bool]
    """
    Can the App Service Slot only be accessed via HTTPS? Defaults to `false`.
    """
    identity: pulumi.Output[dict]
    """
    A Managed Service Identity block as defined below.

      * `identityIds` (`list`) - Specifies a list of user managed identity ids to be assigned. Required if `type` is `UserAssigned`.
      * `principal_id` (`str`)
      * `tenant_id` (`str`)
      * `type` (`str`) - Specifies the identity type of the App Service. Possible values are `SystemAssigned` (where Azure will generate a Service Principal for you), `UserAssigned` where you can specify the Service Principal IDs in the `identity_ids` field, and `SystemAssigned, UserAssigned` which assigns both a system managed identity as well as the specified user assigned identities.
    """
    location: pulumi.Output[str]
    """
    Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
    """
    logs: pulumi.Output[dict]
    name: pulumi.Output[str]
    """
    Specifies the name of the App Service Slot component. Changing this forces a new resource to be created.
    """
    resource_group_name: pulumi.Output[str]
    """
    The name of the resource group in which to create the App Service Slot component.
    """
    site_config: pulumi.Output[dict]
    """
    A `site_config` object as defined below.

      * `alwaysOn` (`bool`) - Should the app be loaded at all times? Defaults to `false`.
      * `appCommandLine` (`str`) - App command line to launch, e.g. `/sbin/myserver -b 0.0.0.0`.
      * `autoSwapSlotName` (`str`) - The name of the swap to automatically swap to during deployment
      * `cors` (`dict`) - A `cors` block as defined below.
        * `allowedOrigins` (`list`) - A list of origins which should be able to make cross-origin calls. `*` can be used to allow all calls.
        * `supportCredentials` (`bool`) - Are credentials supported?

      * `defaultDocuments` (`list`) - The ordering of default documents to load, if an address isn't specified.
      * `dotnetFrameworkVersion` (`str`) - The version of the .net framework's CLR used in this App Service Slot. Possible values are `v2.0` (which will use the latest version of the .net framework for the .net CLR v2 - currently `.net 3.5`) and `v4.0` (which corresponds to the latest version of the .net CLR v4 - which at the time of writing is `.net 4.7.1`). [For more information on which .net CLR version to use based on the .net framework you're targeting - please see this table](https://en.wikipedia.org/wiki/.NET_Framework_version_history#Overview). Defaults to `v4.0`.
      * `ftpsState` (`str`)
      * `healthCheckPath` (`str`)
      * `http2Enabled` (`bool`) - Is HTTP2 Enabled on this App Service? Defaults to `false`.
      * `ipRestrictions` (`list`) - A list of objects representing ip restrictions as defined below.
        * `action` (`str`)
        * `ip_address` (`str`) - The IP Address used for this IP Restriction.
        * `name` (`str`) - Specifies the name of the App Service Slot component. Changing this forces a new resource to be created.
        * `priority` (`float`)
        * `virtualNetworkSubnetId` (`str`) - (Optional.The Virtual Network Subnet ID used for this IP Restriction.

      * `javaContainer` (`str`) - The Java Container to use. If specified `java_version` and `java_container_version` must also be specified. Possible values are `JETTY` and `TOMCAT`.
      * `javaContainerVersion` (`str`) - The version of the Java Container to use. If specified `java_version` and `java_container` must also be specified.
      * `javaVersion` (`str`) - The version of Java to use. If specified `java_container` and `java_container_version` must also be specified. Possible values are `1.7`, `1.8`, and `11` and their specific versions - except for Java 11 (e.g. `1.7.0_80`, `1.8.0_181`, `11`)
      * `linuxFxVersion` (`str`)
      * `localMysqlEnabled` (`bool`) - Is "MySQL In App" Enabled? This runs a local MySQL instance with your app and shares resources from the App Service plan.
      * `managedPipelineMode` (`str`) - The Managed Pipeline Mode. Possible values are `Integrated` and `Classic`. Defaults to `Integrated`.
      * `minTlsVersion` (`str`) - The minimum supported TLS version for the app service. Possible values are `1.0`, `1.1`, and `1.2`. Defaults to `1.2` for new app services.
      * `phpVersion` (`str`) - The version of PHP to use in this App Service Slot. Possible values are `5.5`, `5.6`, `7.0`, `7.1`, `7.2`, and `7.3`.
      * `pythonVersion` (`str`) - The version of Python to use in this App Service Slot. Possible values are `2.7` and `3.4`.
      * `remoteDebuggingEnabled` (`bool`) - Is Remote Debugging Enabled? Defaults to `false`.
      * `remoteDebuggingVersion` (`str`) - Which version of Visual Studio should the Remote Debugger be compatible with? Possible values are `VS2012`, `VS2013`, `VS2015`, and `VS2017`.
      * `scmType` (`str`) - The type of Source Control enabled for this App Service Slot. Defaults to `None`. Possible values are: `BitbucketGit`, `BitbucketHg`, `CodePlexGit`, `CodePlexHg`, `Dropbox`, `ExternalGit`, `ExternalHg`, `GitHub`, `LocalGit`, `None`, `OneDrive`, `Tfs`, `VSO`, and `VSTSRM`
      * `use32BitWorkerProcess` (`bool`) - Should the App Service Slot run in 32 bit mode, rather than 64 bit mode?
      * `websocketsEnabled` (`bool`) - Should WebSockets be enabled?
      * `windowsFxVersion` (`str`)
    """
    site_credentials: pulumi.Output[list]
    """
    A `site_credential` block as defined below, which contains the site-level credentials used to publish to this App Service.

      * `password` (`str`) - The password associated with the username, which can be used to publish to this App Service.
      * `username` (`str`) - The username which can be used to publish to this App Service
    """
    tags: pulumi.Output[dict]
    """
    A mapping of tags to assign to the resource.
    """
    def __init__(__self__, resource_name, opts=None, app_service_name=None, app_service_plan_id=None, app_settings=None, auth_settings=None, client_affinity_enabled=None, connection_strings=None, enabled=None, https_only=None, identity=None, location=None, logs=None, name=None, resource_group_name=None, site_config=None, tags=None, __props__=None, __name__=None, __opts__=None):
        """
        Manages an App Service Slot (within an App Service).

        > **Note:** When using Slots - the `app_settings`, `connection_string` and `site_config` blocks on the `appservice.AppService` resource will be overwritten when promoting a Slot using the `appservice.ActiveSlot` resource.


        ## Example Usage (.net 4.x)

        ```python
        import pulumi
        import pulumi_azure as azure
        import pulumi_random as random

        server = random.RandomId("server",
            keepers={
                "azi_id": 1,
            },
            byte_length=8)
        example_resource_group = azure.core.ResourceGroup("exampleResourceGroup", location="West Europe")
        example_plan = azure.appservice.Plan("examplePlan",
            location=example_resource_group.location,
            resource_group_name=example_resource_group.name,
            sku={
                "tier": "Standard",
                "size": "S1",
            })
        example_app_service = azure.appservice.AppService("exampleAppService",
            location=example_resource_group.location,
            resource_group_name=example_resource_group.name,
            app_service_plan_id=example_plan.id,
            site_config={
                "dotnetFrameworkVersion": "v4.0",
            },
            app_settings={
                "SOME_KEY": "some-value",
            },
            connection_string=[{
                "name": "Database",
                "type": "SQLServer",
                "value": "Server=some-server.mydomain.com;Integrated Security=SSPI",
            }])
        example_slot = azure.appservice.Slot("exampleSlot",
            app_service_name=example_app_service.name,
            location=example_resource_group.location,
            resource_group_name=example_resource_group.name,
            app_service_plan_id=example_plan.id,
            site_config={
                "dotnetFrameworkVersion": "v4.0",
            },
            app_settings={
                "SOME_KEY": "some-value",
            },
            connection_string=[{
                "name": "Database",
                "type": "SQLServer",
                "value": "Server=some-server.mydomain.com;Integrated Security=SSPI",
            }])
        ```

        ## Example Usage (Java 1.8)

        ```python
        import pulumi
        import pulumi_azure as azure
        import pulumi_random as random

        server = random.RandomId("server",
            keepers={
                "azi_id": 1,
            },
            byte_length=8)
        example_resource_group = azure.core.ResourceGroup("exampleResourceGroup", location="West Europe")
        example_plan = azure.appservice.Plan("examplePlan",
            location=example_resource_group.location,
            resource_group_name=example_resource_group.name,
            sku={
                "tier": "Standard",
                "size": "S1",
            })
        example_app_service = azure.appservice.AppService("exampleAppService",
            location=example_resource_group.location,
            resource_group_name=example_resource_group.name,
            app_service_plan_id=example_plan.id,
            site_config={
                "javaVersion": "1.8",
                "javaContainer": "JETTY",
                "javaContainerVersion": "9.3",
            })
        example_slot = azure.appservice.Slot("exampleSlot",
            app_service_name=example_app_service.name,
            location=example_resource_group.location,
            resource_group_name=example_resource_group.name,
            app_service_plan_id=example_plan.id,
            site_config={
                "javaVersion": "1.8",
                "javaContainer": "JETTY",
                "javaContainerVersion": "9.3",
            })
        ```

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] app_service_name: The name of the App Service within which to create the App Service Slot.  Changing this forces a new resource to be created.
        :param pulumi.Input[str] app_service_plan_id: The ID of the App Service Plan within which to create this App Service Slot. Changing this forces a new resource to be created.
        :param pulumi.Input[dict] app_settings: A key-value pair of App Settings.
        :param pulumi.Input[dict] auth_settings: A `auth_settings` block as defined below.
        :param pulumi.Input[bool] client_affinity_enabled: Should the App Service Slot send session affinity cookies, which route client requests in the same session to the same instance?
        :param pulumi.Input[list] connection_strings: An `connection_string` block as defined below.
        :param pulumi.Input[bool] enabled: Is the App Service Slot Enabled?
        :param pulumi.Input[bool] https_only: Can the App Service Slot only be accessed via HTTPS? Defaults to `false`.
        :param pulumi.Input[dict] identity: A Managed Service Identity block as defined below.
        :param pulumi.Input[str] location: Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
        :param pulumi.Input[str] name: Specifies the name of the App Service Slot component. Changing this forces a new resource to be created.
        :param pulumi.Input[str] resource_group_name: The name of the resource group in which to create the App Service Slot component.
        :param pulumi.Input[dict] site_config: A `site_config` object as defined below.
        :param pulumi.Input[dict] tags: A mapping of tags to assign to the resource.

        The **auth_settings** object supports the following:

          * `active_directory` (`pulumi.Input[dict]`) - A `active_directory` block as defined below.
            * `allowedAudiences` (`pulumi.Input[list]`) - Allowed audience values to consider when validating JWTs issued by Azure Active Directory.
            * `client_id` (`pulumi.Input[str]`) - The Client ID of this relying party application. Enables OpenIDConnection authentication with Azure Active Directory.
            * `client_secret` (`pulumi.Input[str]`) - The Client Secret of this relying party application. If no secret is provided, implicit flow will be used.

          * `additionalLoginParams` (`pulumi.Input[dict]`) - Login parameters to send to the OpenID Connect authorization endpoint when a user logs in. Each parameter must be in the form "key=value".
          * `allowedExternalRedirectUrls` (`pulumi.Input[list]`) - External URLs that can be redirected to as part of logging in or logging out of the app.
          * `defaultProvider` (`pulumi.Input[str]`) - The default provider to use when multiple providers have been set up. Possible values are `AzureActiveDirectory`, `Facebook`, `Google`, `MicrosoftAccount` and `Twitter`.
          * `enabled` (`pulumi.Input[bool]`) - Is Authentication enabled?
          * `facebook` (`pulumi.Input[dict]`) - A `facebook` block as defined below.
            * `app_id` (`pulumi.Input[str]`) - The App ID of the Facebook app used for login
            * `app_secret` (`pulumi.Input[str]`) - The App Secret of the Facebook app used for Facebook Login.
            * `oauthScopes` (`pulumi.Input[list]`) - The OAuth 2.0 scopes that will be requested as part of Facebook Login authentication. https://developers.facebook.com/docs/facebook-login

          * `google` (`pulumi.Input[dict]`) - A `google` block as defined below.
            * `client_id` (`pulumi.Input[str]`) - The OpenID Connect Client ID for the Google web application.
            * `client_secret` (`pulumi.Input[str]`) - The client secret associated with the Google web application.
            * `oauthScopes` (`pulumi.Input[list]`) - The OAuth 2.0 scopes that will be requested as part of Google Sign-In authentication. https://developers.google.com/identity/sign-in/web/

          * `issuer` (`pulumi.Input[str]`) - Issuer URI. When using Azure Active Directory, this value is the URI of the directory tenant, e.g. https://sts.windows.net/{tenant-guid}/.
          * `microsoft` (`pulumi.Input[dict]`) - A `microsoft` block as defined below.
            * `client_id` (`pulumi.Input[str]`) - The OAuth 2.0 client ID that was created for the app used for authentication.
            * `client_secret` (`pulumi.Input[str]`) - The OAuth 2.0 client secret that was created for the app used for authentication.
            * `oauthScopes` (`pulumi.Input[list]`) - The OAuth 2.0 scopes that will be requested as part of Microsoft Account authentication. https://msdn.microsoft.com/en-us/library/dn631845.aspx

          * `runtimeVersion` (`pulumi.Input[str]`) - The runtime version of the Authentication/Authorization module.
          * `tokenRefreshExtensionHours` (`pulumi.Input[float]`) - The number of hours after session token expiration that a session token can be used to call the token refresh API. Defaults to 72.
          * `tokenStoreEnabled` (`pulumi.Input[bool]`) - If enabled the module will durably store platform-specific security tokens that are obtained during login flows. Defaults to false.
          * `twitter` (`pulumi.Input[dict]`) - A `twitter` block as defined below.
            * `consumerKey` (`pulumi.Input[str]`)
            * `consumerSecret` (`pulumi.Input[str]`)

          * `unauthenticatedClientAction` (`pulumi.Input[str]`) - The action to take when an unauthenticated client attempts to access the app. Possible values are `AllowAnonymous` and `RedirectToLoginPage`.

        The **connection_strings** object supports the following:

          * `name` (`pulumi.Input[str]`) - The name of the Connection String.
          * `type` (`pulumi.Input[str]`) - The type of the Connection String. Possible values are `APIHub`, `Custom`, `DocDb`, `EventHub`, `MySQL`, `NotificationHub`, `PostgreSQL`, `RedisCache`, `ServiceBus`, `SQLAzure`, and  `SQLServer`.
          * `value` (`pulumi.Input[str]`) - The value for the Connection String.

        The **identity** object supports the following:

          * `identityIds` (`pulumi.Input[list]`) - Specifies a list of user managed identity ids to be assigned. Required if `type` is `UserAssigned`.
          * `principal_id` (`pulumi.Input[str]`)
          * `tenant_id` (`pulumi.Input[str]`)
          * `type` (`pulumi.Input[str]`) - Specifies the identity type of the App Service. Possible values are `SystemAssigned` (where Azure will generate a Service Principal for you), `UserAssigned` where you can specify the Service Principal IDs in the `identity_ids` field, and `SystemAssigned, UserAssigned` which assigns both a system managed identity as well as the specified user assigned identities.

        The **logs** object supports the following:

          * `applicationLogs` (`pulumi.Input[dict]`) - An `application_logs` block as defined below.
            * `azureBlobStorage` (`pulumi.Input[dict]`) - An `azure_blob_storage` block as defined below.
              * `level` (`pulumi.Input[str]`) - The level at which to log. Possible values include `Error`, `Warning`, `Information`, `Verbose` and `Off`. **NOTE:** this field is not available for `http_logs`
              * `retention_in_days` (`pulumi.Input[float]`) - The number of days to retain logs for.
              * `sasUrl` (`pulumi.Input[str]`) - The URL to the storage container, with a Service SAS token appended. **NOTE:** there is currently no means of generating Service SAS tokens with the `azurerm` provider.

          * `httpLogs` (`pulumi.Input[dict]`) - An `http_logs` block as defined below.
            * `azureBlobStorage` (`pulumi.Input[dict]`) - An `azure_blob_storage` block as defined below.
              * `retention_in_days` (`pulumi.Input[float]`) - The number of days to retain logs for.
              * `sasUrl` (`pulumi.Input[str]`) - The URL to the storage container, with a Service SAS token appended. **NOTE:** there is currently no means of generating Service SAS tokens with the `azurerm` provider.

            * `fileSystem` (`pulumi.Input[dict]`) - A `file_system` block as defined below.
              * `retention_in_days` (`pulumi.Input[float]`) - The number of days to retain logs for.
              * `retentionInMb` (`pulumi.Input[float]`) - The maximum size in megabytes that http log files can use before being removed.

        The **site_config** object supports the following:

          * `alwaysOn` (`pulumi.Input[bool]`) - Should the app be loaded at all times? Defaults to `false`.
          * `appCommandLine` (`pulumi.Input[str]`) - App command line to launch, e.g. `/sbin/myserver -b 0.0.0.0`.
          * `autoSwapSlotName` (`pulumi.Input[str]`) - The name of the swap to automatically swap to during deployment
          * `cors` (`pulumi.Input[dict]`) - A `cors` block as defined below.
            * `allowedOrigins` (`pulumi.Input[list]`) - A list of origins which should be able to make cross-origin calls. `*` can be used to allow all calls.
            * `supportCredentials` (`pulumi.Input[bool]`) - Are credentials supported?

          * `defaultDocuments` (`pulumi.Input[list]`) - The ordering of default documents to load, if an address isn't specified.
          * `dotnetFrameworkVersion` (`pulumi.Input[str]`) - The version of the .net framework's CLR used in this App Service Slot. Possible values are `v2.0` (which will use the latest version of the .net framework for the .net CLR v2 - currently `.net 3.5`) and `v4.0` (which corresponds to the latest version of the .net CLR v4 - which at the time of writing is `.net 4.7.1`). [For more information on which .net CLR version to use based on the .net framework you're targeting - please see this table](https://en.wikipedia.org/wiki/.NET_Framework_version_history#Overview). Defaults to `v4.0`.
          * `ftpsState` (`pulumi.Input[str]`)
          * `healthCheckPath` (`pulumi.Input[str]`)
          * `http2Enabled` (`pulumi.Input[bool]`) - Is HTTP2 Enabled on this App Service? Defaults to `false`.
          * `ipRestrictions` (`pulumi.Input[list]`) - A list of objects representing ip restrictions as defined below.
            * `action` (`pulumi.Input[str]`)
            * `ip_address` (`pulumi.Input[str]`) - The IP Address used for this IP Restriction.
            * `name` (`pulumi.Input[str]`) - Specifies the name of the App Service Slot component. Changing this forces a new resource to be created.
            * `priority` (`pulumi.Input[float]`)
            * `virtualNetworkSubnetId` (`pulumi.Input[str]`) - (Optional.The Virtual Network Subnet ID used for this IP Restriction.

          * `javaContainer` (`pulumi.Input[str]`) - The Java Container to use. If specified `java_version` and `java_container_version` must also be specified. Possible values are `JETTY` and `TOMCAT`.
          * `javaContainerVersion` (`pulumi.Input[str]`) - The version of the Java Container to use. If specified `java_version` and `java_container` must also be specified.
          * `javaVersion` (`pulumi.Input[str]`) - The version of Java to use. If specified `java_container` and `java_container_version` must also be specified. Possible values are `1.7`, `1.8`, and `11` and their specific versions - except for Java 11 (e.g. `1.7.0_80`, `1.8.0_181`, `11`)
          * `linuxFxVersion` (`pulumi.Input[str]`)
          * `localMysqlEnabled` (`pulumi.Input[bool]`) - Is "MySQL In App" Enabled? This runs a local MySQL instance with your app and shares resources from the App Service plan.
          * `managedPipelineMode` (`pulumi.Input[str]`) - The Managed Pipeline Mode. Possible values are `Integrated` and `Classic`. Defaults to `Integrated`.
          * `minTlsVersion` (`pulumi.Input[str]`) - The minimum supported TLS version for the app service. Possible values are `1.0`, `1.1`, and `1.2`. Defaults to `1.2` for new app services.
          * `phpVersion` (`pulumi.Input[str]`) - The version of PHP to use in this App Service Slot. Possible values are `5.5`, `5.6`, `7.0`, `7.1`, `7.2`, and `7.3`.
          * `pythonVersion` (`pulumi.Input[str]`) - The version of Python to use in this App Service Slot. Possible values are `2.7` and `3.4`.
          * `remoteDebuggingEnabled` (`pulumi.Input[bool]`) - Is Remote Debugging Enabled? Defaults to `false`.
          * `remoteDebuggingVersion` (`pulumi.Input[str]`) - Which version of Visual Studio should the Remote Debugger be compatible with? Possible values are `VS2012`, `VS2013`, `VS2015`, and `VS2017`.
          * `scmType` (`pulumi.Input[str]`) - The type of Source Control enabled for this App Service Slot. Defaults to `None`. Possible values are: `BitbucketGit`, `BitbucketHg`, `CodePlexGit`, `CodePlexHg`, `Dropbox`, `ExternalGit`, `ExternalHg`, `GitHub`, `LocalGit`, `None`, `OneDrive`, `Tfs`, `VSO`, and `VSTSRM`
          * `use32BitWorkerProcess` (`pulumi.Input[bool]`) - Should the App Service Slot run in 32 bit mode, rather than 64 bit mode?
          * `websocketsEnabled` (`pulumi.Input[bool]`) - Should WebSockets be enabled?
          * `windowsFxVersion` (`pulumi.Input[str]`)
        """
        if __name__ is not None:
            warnings.warn("explicit use of __name__ is deprecated", DeprecationWarning)
            resource_name = __name__
        if __opts__ is not None:
            warnings.warn("explicit use of __opts__ is deprecated, use 'opts' instead", DeprecationWarning)
            opts = __opts__
        if opts is None:
            opts = pulumi.ResourceOptions()
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.version is None:
            opts.version = utilities.get_version()
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = dict()

            if app_service_name is None:
                raise TypeError("Missing required property 'app_service_name'")
            __props__['app_service_name'] = app_service_name
            if app_service_plan_id is None:
                raise TypeError("Missing required property 'app_service_plan_id'")
            __props__['app_service_plan_id'] = app_service_plan_id
            __props__['app_settings'] = app_settings
            __props__['auth_settings'] = auth_settings
            __props__['client_affinity_enabled'] = client_affinity_enabled
            __props__['connection_strings'] = connection_strings
            __props__['enabled'] = enabled
            __props__['https_only'] = https_only
            __props__['identity'] = identity
            __props__['location'] = location
            __props__['logs'] = logs
            __props__['name'] = name
            if resource_group_name is None:
                raise TypeError("Missing required property 'resource_group_name'")
            __props__['resource_group_name'] = resource_group_name
            __props__['site_config'] = site_config
            __props__['tags'] = tags
            __props__['default_site_hostname'] = None
            __props__['site_credentials'] = None
        super(Slot, __self__).__init__(
            'azure:appservice/slot:Slot',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name, id, opts=None, app_service_name=None, app_service_plan_id=None, app_settings=None, auth_settings=None, client_affinity_enabled=None, connection_strings=None, default_site_hostname=None, enabled=None, https_only=None, identity=None, location=None, logs=None, name=None, resource_group_name=None, site_config=None, site_credentials=None, tags=None):
        """
        Get an existing Slot resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param str id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] app_service_name: The name of the App Service within which to create the App Service Slot.  Changing this forces a new resource to be created.
        :param pulumi.Input[str] app_service_plan_id: The ID of the App Service Plan within which to create this App Service Slot. Changing this forces a new resource to be created.
        :param pulumi.Input[dict] app_settings: A key-value pair of App Settings.
        :param pulumi.Input[dict] auth_settings: A `auth_settings` block as defined below.
        :param pulumi.Input[bool] client_affinity_enabled: Should the App Service Slot send session affinity cookies, which route client requests in the same session to the same instance?
        :param pulumi.Input[list] connection_strings: An `connection_string` block as defined below.
        :param pulumi.Input[str] default_site_hostname: The Default Hostname associated with the App Service Slot - such as `mysite.azurewebsites.net`
        :param pulumi.Input[bool] enabled: Is the App Service Slot Enabled?
        :param pulumi.Input[bool] https_only: Can the App Service Slot only be accessed via HTTPS? Defaults to `false`.
        :param pulumi.Input[dict] identity: A Managed Service Identity block as defined below.
        :param pulumi.Input[str] location: Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
        :param pulumi.Input[str] name: Specifies the name of the App Service Slot component. Changing this forces a new resource to be created.
        :param pulumi.Input[str] resource_group_name: The name of the resource group in which to create the App Service Slot component.
        :param pulumi.Input[dict] site_config: A `site_config` object as defined below.
        :param pulumi.Input[list] site_credentials: A `site_credential` block as defined below, which contains the site-level credentials used to publish to this App Service.
        :param pulumi.Input[dict] tags: A mapping of tags to assign to the resource.

        The **auth_settings** object supports the following:

          * `active_directory` (`pulumi.Input[dict]`) - A `active_directory` block as defined below.
            * `allowedAudiences` (`pulumi.Input[list]`) - Allowed audience values to consider when validating JWTs issued by Azure Active Directory.
            * `client_id` (`pulumi.Input[str]`) - The Client ID of this relying party application. Enables OpenIDConnection authentication with Azure Active Directory.
            * `client_secret` (`pulumi.Input[str]`) - The Client Secret of this relying party application. If no secret is provided, implicit flow will be used.

          * `additionalLoginParams` (`pulumi.Input[dict]`) - Login parameters to send to the OpenID Connect authorization endpoint when a user logs in. Each parameter must be in the form "key=value".
          * `allowedExternalRedirectUrls` (`pulumi.Input[list]`) - External URLs that can be redirected to as part of logging in or logging out of the app.
          * `defaultProvider` (`pulumi.Input[str]`) - The default provider to use when multiple providers have been set up. Possible values are `AzureActiveDirectory`, `Facebook`, `Google`, `MicrosoftAccount` and `Twitter`.
          * `enabled` (`pulumi.Input[bool]`) - Is Authentication enabled?
          * `facebook` (`pulumi.Input[dict]`) - A `facebook` block as defined below.
            * `app_id` (`pulumi.Input[str]`) - The App ID of the Facebook app used for login
            * `app_secret` (`pulumi.Input[str]`) - The App Secret of the Facebook app used for Facebook Login.
            * `oauthScopes` (`pulumi.Input[list]`) - The OAuth 2.0 scopes that will be requested as part of Facebook Login authentication. https://developers.facebook.com/docs/facebook-login

          * `google` (`pulumi.Input[dict]`) - A `google` block as defined below.
            * `client_id` (`pulumi.Input[str]`) - The OpenID Connect Client ID for the Google web application.
            * `client_secret` (`pulumi.Input[str]`) - The client secret associated with the Google web application.
            * `oauthScopes` (`pulumi.Input[list]`) - The OAuth 2.0 scopes that will be requested as part of Google Sign-In authentication. https://developers.google.com/identity/sign-in/web/

          * `issuer` (`pulumi.Input[str]`) - Issuer URI. When using Azure Active Directory, this value is the URI of the directory tenant, e.g. https://sts.windows.net/{tenant-guid}/.
          * `microsoft` (`pulumi.Input[dict]`) - A `microsoft` block as defined below.
            * `client_id` (`pulumi.Input[str]`) - The OAuth 2.0 client ID that was created for the app used for authentication.
            * `client_secret` (`pulumi.Input[str]`) - The OAuth 2.0 client secret that was created for the app used for authentication.
            * `oauthScopes` (`pulumi.Input[list]`) - The OAuth 2.0 scopes that will be requested as part of Microsoft Account authentication. https://msdn.microsoft.com/en-us/library/dn631845.aspx

          * `runtimeVersion` (`pulumi.Input[str]`) - The runtime version of the Authentication/Authorization module.
          * `tokenRefreshExtensionHours` (`pulumi.Input[float]`) - The number of hours after session token expiration that a session token can be used to call the token refresh API. Defaults to 72.
          * `tokenStoreEnabled` (`pulumi.Input[bool]`) - If enabled the module will durably store platform-specific security tokens that are obtained during login flows. Defaults to false.
          * `twitter` (`pulumi.Input[dict]`) - A `twitter` block as defined below.
            * `consumerKey` (`pulumi.Input[str]`)
            * `consumerSecret` (`pulumi.Input[str]`)

          * `unauthenticatedClientAction` (`pulumi.Input[str]`) - The action to take when an unauthenticated client attempts to access the app. Possible values are `AllowAnonymous` and `RedirectToLoginPage`.

        The **connection_strings** object supports the following:

          * `name` (`pulumi.Input[str]`) - The name of the Connection String.
          * `type` (`pulumi.Input[str]`) - The type of the Connection String. Possible values are `APIHub`, `Custom`, `DocDb`, `EventHub`, `MySQL`, `NotificationHub`, `PostgreSQL`, `RedisCache`, `ServiceBus`, `SQLAzure`, and  `SQLServer`.
          * `value` (`pulumi.Input[str]`) - The value for the Connection String.

        The **identity** object supports the following:

          * `identityIds` (`pulumi.Input[list]`) - Specifies a list of user managed identity ids to be assigned. Required if `type` is `UserAssigned`.
          * `principal_id` (`pulumi.Input[str]`)
          * `tenant_id` (`pulumi.Input[str]`)
          * `type` (`pulumi.Input[str]`) - Specifies the identity type of the App Service. Possible values are `SystemAssigned` (where Azure will generate a Service Principal for you), `UserAssigned` where you can specify the Service Principal IDs in the `identity_ids` field, and `SystemAssigned, UserAssigned` which assigns both a system managed identity as well as the specified user assigned identities.

        The **logs** object supports the following:

          * `applicationLogs` (`pulumi.Input[dict]`) - An `application_logs` block as defined below.
            * `azureBlobStorage` (`pulumi.Input[dict]`) - An `azure_blob_storage` block as defined below.
              * `level` (`pulumi.Input[str]`) - The level at which to log. Possible values include `Error`, `Warning`, `Information`, `Verbose` and `Off`. **NOTE:** this field is not available for `http_logs`
              * `retention_in_days` (`pulumi.Input[float]`) - The number of days to retain logs for.
              * `sasUrl` (`pulumi.Input[str]`) - The URL to the storage container, with a Service SAS token appended. **NOTE:** there is currently no means of generating Service SAS tokens with the `azurerm` provider.

          * `httpLogs` (`pulumi.Input[dict]`) - An `http_logs` block as defined below.
            * `azureBlobStorage` (`pulumi.Input[dict]`) - An `azure_blob_storage` block as defined below.
              * `retention_in_days` (`pulumi.Input[float]`) - The number of days to retain logs for.
              * `sasUrl` (`pulumi.Input[str]`) - The URL to the storage container, with a Service SAS token appended. **NOTE:** there is currently no means of generating Service SAS tokens with the `azurerm` provider.

            * `fileSystem` (`pulumi.Input[dict]`) - A `file_system` block as defined below.
              * `retention_in_days` (`pulumi.Input[float]`) - The number of days to retain logs for.
              * `retentionInMb` (`pulumi.Input[float]`) - The maximum size in megabytes that http log files can use before being removed.

        The **site_config** object supports the following:

          * `alwaysOn` (`pulumi.Input[bool]`) - Should the app be loaded at all times? Defaults to `false`.
          * `appCommandLine` (`pulumi.Input[str]`) - App command line to launch, e.g. `/sbin/myserver -b 0.0.0.0`.
          * `autoSwapSlotName` (`pulumi.Input[str]`) - The name of the swap to automatically swap to during deployment
          * `cors` (`pulumi.Input[dict]`) - A `cors` block as defined below.
            * `allowedOrigins` (`pulumi.Input[list]`) - A list of origins which should be able to make cross-origin calls. `*` can be used to allow all calls.
            * `supportCredentials` (`pulumi.Input[bool]`) - Are credentials supported?

          * `defaultDocuments` (`pulumi.Input[list]`) - The ordering of default documents to load, if an address isn't specified.
          * `dotnetFrameworkVersion` (`pulumi.Input[str]`) - The version of the .net framework's CLR used in this App Service Slot. Possible values are `v2.0` (which will use the latest version of the .net framework for the .net CLR v2 - currently `.net 3.5`) and `v4.0` (which corresponds to the latest version of the .net CLR v4 - which at the time of writing is `.net 4.7.1`). [For more information on which .net CLR version to use based on the .net framework you're targeting - please see this table](https://en.wikipedia.org/wiki/.NET_Framework_version_history#Overview). Defaults to `v4.0`.
          * `ftpsState` (`pulumi.Input[str]`)
          * `healthCheckPath` (`pulumi.Input[str]`)
          * `http2Enabled` (`pulumi.Input[bool]`) - Is HTTP2 Enabled on this App Service? Defaults to `false`.
          * `ipRestrictions` (`pulumi.Input[list]`) - A list of objects representing ip restrictions as defined below.
            * `action` (`pulumi.Input[str]`)
            * `ip_address` (`pulumi.Input[str]`) - The IP Address used for this IP Restriction.
            * `name` (`pulumi.Input[str]`) - Specifies the name of the App Service Slot component. Changing this forces a new resource to be created.
            * `priority` (`pulumi.Input[float]`)
            * `virtualNetworkSubnetId` (`pulumi.Input[str]`) - (Optional.The Virtual Network Subnet ID used for this IP Restriction.

          * `javaContainer` (`pulumi.Input[str]`) - The Java Container to use. If specified `java_version` and `java_container_version` must also be specified. Possible values are `JETTY` and `TOMCAT`.
          * `javaContainerVersion` (`pulumi.Input[str]`) - The version of the Java Container to use. If specified `java_version` and `java_container` must also be specified.
          * `javaVersion` (`pulumi.Input[str]`) - The version of Java to use. If specified `java_container` and `java_container_version` must also be specified. Possible values are `1.7`, `1.8`, and `11` and their specific versions - except for Java 11 (e.g. `1.7.0_80`, `1.8.0_181`, `11`)
          * `linuxFxVersion` (`pulumi.Input[str]`)
          * `localMysqlEnabled` (`pulumi.Input[bool]`) - Is "MySQL In App" Enabled? This runs a local MySQL instance with your app and shares resources from the App Service plan.
          * `managedPipelineMode` (`pulumi.Input[str]`) - The Managed Pipeline Mode. Possible values are `Integrated` and `Classic`. Defaults to `Integrated`.
          * `minTlsVersion` (`pulumi.Input[str]`) - The minimum supported TLS version for the app service. Possible values are `1.0`, `1.1`, and `1.2`. Defaults to `1.2` for new app services.
          * `phpVersion` (`pulumi.Input[str]`) - The version of PHP to use in this App Service Slot. Possible values are `5.5`, `5.6`, `7.0`, `7.1`, `7.2`, and `7.3`.
          * `pythonVersion` (`pulumi.Input[str]`) - The version of Python to use in this App Service Slot. Possible values are `2.7` and `3.4`.
          * `remoteDebuggingEnabled` (`pulumi.Input[bool]`) - Is Remote Debugging Enabled? Defaults to `false`.
          * `remoteDebuggingVersion` (`pulumi.Input[str]`) - Which version of Visual Studio should the Remote Debugger be compatible with? Possible values are `VS2012`, `VS2013`, `VS2015`, and `VS2017`.
          * `scmType` (`pulumi.Input[str]`) - The type of Source Control enabled for this App Service Slot. Defaults to `None`. Possible values are: `BitbucketGit`, `BitbucketHg`, `CodePlexGit`, `CodePlexHg`, `Dropbox`, `ExternalGit`, `ExternalHg`, `GitHub`, `LocalGit`, `None`, `OneDrive`, `Tfs`, `VSO`, and `VSTSRM`
          * `use32BitWorkerProcess` (`pulumi.Input[bool]`) - Should the App Service Slot run in 32 bit mode, rather than 64 bit mode?
          * `websocketsEnabled` (`pulumi.Input[bool]`) - Should WebSockets be enabled?
          * `windowsFxVersion` (`pulumi.Input[str]`)

        The **site_credentials** object supports the following:

          * `password` (`pulumi.Input[str]`) - The password associated with the username, which can be used to publish to this App Service.
          * `username` (`pulumi.Input[str]`) - The username which can be used to publish to this App Service
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = dict()

        __props__["app_service_name"] = app_service_name
        __props__["app_service_plan_id"] = app_service_plan_id
        __props__["app_settings"] = app_settings
        __props__["auth_settings"] = auth_settings
        __props__["client_affinity_enabled"] = client_affinity_enabled
        __props__["connection_strings"] = connection_strings
        __props__["default_site_hostname"] = default_site_hostname
        __props__["enabled"] = enabled
        __props__["https_only"] = https_only
        __props__["identity"] = identity
        __props__["location"] = location
        __props__["logs"] = logs
        __props__["name"] = name
        __props__["resource_group_name"] = resource_group_name
        __props__["site_config"] = site_config
        __props__["site_credentials"] = site_credentials
        __props__["tags"] = tags
        return Slot(resource_name, opts=opts, __props__=__props__)
    def translate_output_property(self, prop):
        return tables._CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop

    def translate_input_property(self, prop):
        return tables._SNAKE_TO_CAMEL_CASE_TABLE.get(prop) or prop

