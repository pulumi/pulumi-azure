# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import pulumi
import pulumi.runtime
from .. import utilities, tables

class FirewallRule(pulumi.CustomResource):
    """
    Manages a Firewall Rule associated with a Premium Redis Cache.
    
    ~> **Note:** Redis Firewall Rules can only be assigned to a Redis Cache with a `Premium` SKU.
    """
    def __init__(__self__, __name__, __opts__=None, end_ip=None, name=None, redis_cache_name=None, resource_group_name=None, start_ip=None):
        """Create a FirewallRule resource with the given unique name, props, and options."""
        if not __name__:
            raise TypeError('Missing resource name argument (for URN creation)')
        if not isinstance(__name__, str):
            raise TypeError('Expected resource name to be a string')
        if __opts__ and not isinstance(__opts__, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')

        __props__ = dict()

        if not end_ip:
            raise TypeError('Missing required property end_ip')
        __props__['end_ip'] = end_ip

        __props__['name'] = name

        if not redis_cache_name:
            raise TypeError('Missing required property redis_cache_name')
        __props__['redis_cache_name'] = redis_cache_name

        if not resource_group_name:
            raise TypeError('Missing required property resource_group_name')
        __props__['resource_group_name'] = resource_group_name

        if not start_ip:
            raise TypeError('Missing required property start_ip')
        __props__['start_ip'] = start_ip

        super(FirewallRule, __self__).__init__(
            'azure:redis/firewallRule:FirewallRule',
            __name__,
            __props__,
            __opts__)


    def translate_output_property(self, prop):
        return tables._CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop

    def translate_input_property(self, prop):
        return tables._SNAKE_TO_CAMEL_CASE_TABLE.get(prop) or prop

