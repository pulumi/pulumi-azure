# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

# Export this package's modules as members:
from .cache import *
from .firewall_rule import *
from .get_cache import *
from .linked_server import *
from ._inputs import *
from . import outputs

def _register_module():
    import pulumi
    from .. import _utilities


    class Module(pulumi.runtime.ResourceModule):
        _version = _utilities.get_semver_version()

        def version(self):
            return Module._version

        def construct(self, name: str, typ: str, urn: str) -> pulumi.Resource:
            if typ == "azure:redis/cache:Cache":
                return Cache(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "azure:redis/firewallRule:FirewallRule":
                return FirewallRule(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "azure:redis/linkedServer:LinkedServer":
                return LinkedServer(name, pulumi.ResourceOptions(urn=urn))
            else:
                raise Exception(f"unknown resource type {typ}")


    _module_instance = Module()
    pulumi.runtime.register_resource_module("azure", "redis/cache", _module_instance)
    pulumi.runtime.register_resource_module("azure", "redis/firewallRule", _module_instance)
    pulumi.runtime.register_resource_module("azure", "redis/linkedServer", _module_instance)

_register_module()
