# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import pulumi
import pulumi.runtime

class SqlServer(pulumi.CustomResource):
    """
    Manages a SQL Azure Database Server.
    
    ~> **Note:** All arguments including the administrator login and password will be stored in the raw state as plain-text.
    [Read more about sensitive data in state](/docs/state/sensitive-data.html).
    """
    def __init__(__self__, __name__, __opts__=None, administrator_login=None, administrator_login_password=None, location=None, name=None, resource_group_name=None, tags=None, version=None):
        """Create a SqlServer resource with the given unique name, props, and options."""
        if not __name__:
            raise TypeError('Missing resource name argument (for URN creation)')
        if not isinstance(__name__, basestring):
            raise TypeError('Expected resource name to be a string')
        if __opts__ and not isinstance(__opts__, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')

        __props__ = dict()

        if not administrator_login:
            raise TypeError('Missing required property administrator_login')
        elif not isinstance(administrator_login, basestring):
            raise TypeError('Expected property administrator_login to be a basestring')
        __self__.administrator_login = administrator_login
        """
        The administrator login name for the new server. Changing this forces a new resource to be created.
        """
        __props__['administratorLogin'] = administrator_login

        if not administrator_login_password:
            raise TypeError('Missing required property administrator_login_password')
        elif not isinstance(administrator_login_password, basestring):
            raise TypeError('Expected property administrator_login_password to be a basestring')
        __self__.administrator_login_password = administrator_login_password
        """
        The password associated with the `administrator_login` user. Needs to comply with Azure's [Password Policy](https://msdn.microsoft.com/library/ms161959.aspx)
        """
        __props__['administratorLoginPassword'] = administrator_login_password

        if not location:
            raise TypeError('Missing required property location')
        elif not isinstance(location, basestring):
            raise TypeError('Expected property location to be a basestring')
        __self__.location = location
        """
        Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
        """
        __props__['location'] = location

        if name and not isinstance(name, basestring):
            raise TypeError('Expected property name to be a basestring')
        __self__.name = name
        """
        The name of the SQL Server. This needs to be globally unique within Azure.
        """
        __props__['name'] = name

        if not resource_group_name:
            raise TypeError('Missing required property resource_group_name')
        elif not isinstance(resource_group_name, basestring):
            raise TypeError('Expected property resource_group_name to be a basestring')
        __self__.resource_group_name = resource_group_name
        """
        The name of the resource group in which to create the SQL Server.
        """
        __props__['resourceGroupName'] = resource_group_name

        if tags and not isinstance(tags, dict):
            raise TypeError('Expected property tags to be a dict')
        __self__.tags = tags
        """
        A mapping of tags to assign to the resource.
        """
        __props__['tags'] = tags

        if not version:
            raise TypeError('Missing required property version')
        elif not isinstance(version, basestring):
            raise TypeError('Expected property version to be a basestring')
        __self__.version = version
        """
        The version for the new server. Valid values are: 2.0 (for v11 server) and 12.0 (for v12 server).
        """
        __props__['version'] = version

        __self__.fully_qualified_domain_name = pulumi.runtime.UNKNOWN
        """
        The fully qualified domain name of the Azure SQL Server (e.g. myServerName.database.windows.net)
        """

        super(SqlServer, __self__).__init__(
            'azure:sql/sqlServer:SqlServer',
            __name__,
            __props__,
            __opts__)

    def set_outputs(self, outs):
        if 'administratorLogin' in outs:
            self.administrator_login = outs['administratorLogin']
        if 'administratorLoginPassword' in outs:
            self.administrator_login_password = outs['administratorLoginPassword']
        if 'fullyQualifiedDomainName' in outs:
            self.fully_qualified_domain_name = outs['fullyQualifiedDomainName']
        if 'location' in outs:
            self.location = outs['location']
        if 'name' in outs:
            self.name = outs['name']
        if 'resourceGroupName' in outs:
            self.resource_group_name = outs['resourceGroupName']
        if 'tags' in outs:
            self.tags = outs['tags']
        if 'version' in outs:
            self.version = outs['version']
