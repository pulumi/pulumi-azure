# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import pulumi
import pulumi.runtime
from .. import utilities

class Database(pulumi.CustomResource):
    """
    Allows you to manage an Azure SQL Database
    """
    def __init__(__self__, __name__, __opts__=None, collation=None, create_mode=None, edition=None, elastic_pool_name=None, import_=None, location=None, max_size_bytes=None, name=None, requested_service_objective_id=None, requested_service_objective_name=None, resource_group_name=None, restore_point_in_time=None, server_name=None, source_database_deletion_date=None, source_database_id=None, tags=None, threat_detection_policy=None):
        """Create a Database resource with the given unique name, props, and options."""
        if not __name__:
            raise TypeError('Missing resource name argument (for URN creation)')
        if not isinstance(__name__, str):
            raise TypeError('Expected resource name to be a string')
        if __opts__ and not isinstance(__opts__, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')

        __props__ = dict()

        __props__['collation'] = collation

        __props__['createMode'] = create_mode

        __props__['edition'] = edition

        __props__['elasticPoolName'] = elastic_pool_name

        __props__['import'] = import_

        if not location:
            raise TypeError('Missing required property location')
        __props__['location'] = location

        __props__['maxSizeBytes'] = max_size_bytes

        __props__['name'] = name

        __props__['requestedServiceObjectiveId'] = requested_service_objective_id

        __props__['requestedServiceObjectiveName'] = requested_service_objective_name

        if not resource_group_name:
            raise TypeError('Missing required property resource_group_name')
        __props__['resourceGroupName'] = resource_group_name

        __props__['restorePointInTime'] = restore_point_in_time

        if not server_name:
            raise TypeError('Missing required property server_name')
        __props__['serverName'] = server_name

        __props__['sourceDatabaseDeletionDate'] = source_database_deletion_date

        __props__['sourceDatabaseId'] = source_database_id

        __props__['tags'] = tags

        __props__['threatDetectionPolicy'] = threat_detection_policy

        __props__['creation_date'] = None
        __props__['default_secondary_location'] = None
        __props__['encryption'] = None

        super(Database, __self__).__init__(
            'azure:sql/database:Database',
            __name__,
            __props__,
            __opts__)

