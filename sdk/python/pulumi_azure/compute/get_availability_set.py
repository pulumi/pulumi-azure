# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import json
import warnings
import pulumi
import pulumi.runtime
from .. import utilities, tables

class GetAvailabilitySetResult:
    """
    A collection of values returned by getAvailabilitySet.
    """
    def __init__(__self__, location=None, managed=None, platform_fault_domain_count=None, platform_update_domain_count=None, tags=None, id=None):
        if location and not isinstance(location, str):
            raise TypeError('Expected argument location to be a str')
        __self__.location = location
        """
        The supported Azure location where the Availability Set exists.
        """
        if managed and not isinstance(managed, bool):
            raise TypeError('Expected argument managed to be a bool')
        __self__.managed = managed
        """
        Whether the availability set is managed or not.
        """
        if platform_fault_domain_count and not isinstance(platform_fault_domain_count, str):
            raise TypeError('Expected argument platform_fault_domain_count to be a str')
        __self__.platform_fault_domain_count = platform_fault_domain_count
        """
        The number of fault domains that are used.
        """
        if platform_update_domain_count and not isinstance(platform_update_domain_count, str):
            raise TypeError('Expected argument platform_update_domain_count to be a str')
        __self__.platform_update_domain_count = platform_update_domain_count
        """
        The number of update domains that are used.
        """
        if tags and not isinstance(tags, dict):
            raise TypeError('Expected argument tags to be a dict')
        __self__.tags = tags
        """
        A mapping of tags assigned to the resource.
        """
        if id and not isinstance(id, str):
            raise TypeError('Expected argument id to be a str')
        __self__.id = id
        """
        id is the provider-assigned unique ID for this managed resource.
        """

async def get_availability_set(name=None,resource_group_name=None,opts=None):
    """
    Use this data source to access information about an existing Availability Set.
    """
    __args__ = dict()

    __args__['name'] = name
    __args__['resourceGroupName'] = resource_group_name
    __ret__ = await pulumi.runtime.invoke('azure:compute/getAvailabilitySet:getAvailabilitySet', __args__, opts=opts)

    return GetAvailabilitySetResult(
        location=__ret__.get('location'),
        managed=__ret__.get('managed'),
        platform_fault_domain_count=__ret__.get('platformFaultDomainCount'),
        platform_update_domain_count=__ret__.get('platformUpdateDomainCount'),
        tags=__ret__.get('tags'),
        id=__ret__.get('id'))
