# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import pulumi
import pulumi.runtime

class GetSnapshotResult(object):
    """
    A collection of values returned by getSnapshot.
    """
    def __init__(__self__, creation_option=None, disk_size_gb=None, encryption_settings=None, os_type=None, source_resource_id=None, source_uri=None, storage_account_id=None, time_created=None):
        if not creation_option:
            raise TypeError('Missing required argument creation_option')
        elif not isinstance(creation_option, basestring):
            raise TypeError('Expected argument creation_option to be a basestring')
        __self__.creation_option = creation_option
        if not disk_size_gb:
            raise TypeError('Missing required argument disk_size_gb')
        elif not isinstance(disk_size_gb, basestring):
            raise TypeError('Expected argument disk_size_gb to be a basestring')
        __self__.disk_size_gb = disk_size_gb
        """
        The size of the Snapshotted Disk in GB.
        """
        if not encryption_settings:
            raise TypeError('Missing required argument encryption_settings')
        elif not isinstance(encryption_settings, list):
            raise TypeError('Expected argument encryption_settings to be a list')
        __self__.encryption_settings = encryption_settings
        if not os_type:
            raise TypeError('Missing required argument os_type')
        elif not isinstance(os_type, basestring):
            raise TypeError('Expected argument os_type to be a basestring')
        __self__.os_type = os_type
        if not source_resource_id:
            raise TypeError('Missing required argument source_resource_id')
        elif not isinstance(source_resource_id, basestring):
            raise TypeError('Expected argument source_resource_id to be a basestring')
        __self__.source_resource_id = source_resource_id
        """
        The reference to an existing snapshot.
        """
        if not source_uri:
            raise TypeError('Missing required argument source_uri')
        elif not isinstance(source_uri, basestring):
            raise TypeError('Expected argument source_uri to be a basestring')
        __self__.source_uri = source_uri
        """
        The URI to a Managed or Unmanaged Disk.
        """
        if not storage_account_id:
            raise TypeError('Missing required argument storage_account_id')
        elif not isinstance(storage_account_id, basestring):
            raise TypeError('Expected argument storage_account_id to be a basestring')
        __self__.storage_account_id = storage_account_id
        """
        The ID of an storage account.
        """
        if not time_created:
            raise TypeError('Missing required argument time_created')
        elif not isinstance(time_created, basestring):
            raise TypeError('Expected argument time_created to be a basestring')
        __self__.time_created = time_created

def get_snapshot(name=None, resource_group_name=None):
    """
    Use this data source to access the properties of a Snapshot of an Disk.
    """
    __args__ = dict()

    __args__['name'] = name
    __args__['resourceGroupName'] = resource_group_name
    __ret__ = pulumi.runtime.invoke('azure:compute/getSnapshot:getSnapshot', __args__)

    return GetSnapshotResult(
        creation_option=__ret__['creationOption'],
        disk_size_gb=__ret__['diskSizeGb'],
        encryption_settings=__ret__['encryptionSettings'],
        os_type=__ret__['osType'],
        source_resource_id=__ret__['sourceResourceId'],
        source_uri=__ret__['sourceUri'],
        storage_account_id=__ret__['storageAccountId'],
        time_created=__ret__['timeCreated'])
