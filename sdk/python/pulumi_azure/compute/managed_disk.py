# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import pulumi
import pulumi.runtime
from .. import utilities

class ManagedDisk(pulumi.CustomResource):
    """
    Manage a managed disk.
    """
    def __init__(__self__, __name__, __opts__=None, create_option=None, disk_size_gb=None, encryption_settings=None, image_reference_id=None, location=None, name=None, os_type=None, resource_group_name=None, source_resource_id=None, source_uri=None, storage_account_type=None, tags=None, zones=None):
        """Create a ManagedDisk resource with the given unique name, props, and options."""
        if not __name__:
            raise TypeError('Missing resource name argument (for URN creation)')
        if not isinstance(__name__, str):
            raise TypeError('Expected resource name to be a string')
        if __opts__ and not isinstance(__opts__, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')

        __props__ = dict()

        if not create_option:
            raise TypeError('Missing required property create_option')
        __props__['createOption'] = create_option

        __props__['diskSizeGb'] = disk_size_gb

        __props__['encryptionSettings'] = encryption_settings

        __props__['imageReferenceId'] = image_reference_id

        if not location:
            raise TypeError('Missing required property location')
        __props__['location'] = location

        __props__['name'] = name

        __props__['osType'] = os_type

        if not resource_group_name:
            raise TypeError('Missing required property resource_group_name')
        __props__['resourceGroupName'] = resource_group_name

        __props__['sourceResourceId'] = source_resource_id

        __props__['sourceUri'] = source_uri

        if not storage_account_type:
            raise TypeError('Missing required property storage_account_type')
        __props__['storageAccountType'] = storage_account_type

        __props__['tags'] = tags

        __props__['zones'] = zones

        super(ManagedDisk, __self__).__init__(
            'azure:compute/managedDisk:ManagedDisk',
            __name__,
            __props__,
            __opts__)

