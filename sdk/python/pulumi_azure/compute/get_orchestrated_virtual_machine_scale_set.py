# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from . import outputs

__all__ = [
    'GetOrchestratedVirtualMachineScaleSetResult',
    'AwaitableGetOrchestratedVirtualMachineScaleSetResult',
    'get_orchestrated_virtual_machine_scale_set',
    'get_orchestrated_virtual_machine_scale_set_output',
]

@pulumi.output_type
class GetOrchestratedVirtualMachineScaleSetResult:
    """
    A collection of values returned by getOrchestratedVirtualMachineScaleSet.
    """
    def __init__(__self__, id=None, identities=None, location=None, name=None, network_interfaces=None, resource_group_name=None):
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if identities and not isinstance(identities, list):
            raise TypeError("Expected argument 'identities' to be a list")
        pulumi.set(__self__, "identities", identities)
        if location and not isinstance(location, str):
            raise TypeError("Expected argument 'location' to be a str")
        pulumi.set(__self__, "location", location)
        if name and not isinstance(name, str):
            raise TypeError("Expected argument 'name' to be a str")
        pulumi.set(__self__, "name", name)
        if network_interfaces and not isinstance(network_interfaces, list):
            raise TypeError("Expected argument 'network_interfaces' to be a list")
        pulumi.set(__self__, "network_interfaces", network_interfaces)
        if resource_group_name and not isinstance(resource_group_name, str):
            raise TypeError("Expected argument 'resource_group_name' to be a str")
        pulumi.set(__self__, "resource_group_name", resource_group_name)

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter
    def identities(self) -> Sequence['outputs.GetOrchestratedVirtualMachineScaleSetIdentityResult']:
        """
        A `identity` block as defined below.
        """
        return pulumi.get(self, "identities")

    @property
    @pulumi.getter
    def location(self) -> str:
        """
        The Azure Region in which this Orchestrated Virtual Machine Scale Set exists.
        """
        return pulumi.get(self, "location")

    @property
    @pulumi.getter
    def name(self) -> str:
        """
        The name of the public IP address configuration
        """
        return pulumi.get(self, "name")

    @property
    @pulumi.getter(name="networkInterfaces")
    def network_interfaces(self) -> Sequence['outputs.GetOrchestratedVirtualMachineScaleSetNetworkInterfaceResult']:
        """
        A list of `network_interface` blocks as defined below.
        """
        return pulumi.get(self, "network_interfaces")

    @property
    @pulumi.getter(name="resourceGroupName")
    def resource_group_name(self) -> str:
        return pulumi.get(self, "resource_group_name")


class AwaitableGetOrchestratedVirtualMachineScaleSetResult(GetOrchestratedVirtualMachineScaleSetResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetOrchestratedVirtualMachineScaleSetResult(
            id=self.id,
            identities=self.identities,
            location=self.location,
            name=self.name,
            network_interfaces=self.network_interfaces,
            resource_group_name=self.resource_group_name)


def get_orchestrated_virtual_machine_scale_set(name: Optional[str] = None,
                                               resource_group_name: Optional[str] = None,
                                               opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetOrchestratedVirtualMachineScaleSetResult:
    """
    Use this data source to access information about an existing Orchestrated Virtual Machine Scale Set.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_azure as azure

    example = azure.compute.get_orchestrated_virtual_machine_scale_set(name="existing",
        resource_group_name="existing")
    pulumi.export("id", example.id)
    ```


    :param str name: The name of this Orchestrated Virtual Machine Scale Set.
    :param str resource_group_name: The name of the Resource Group where the Orchestrated Virtual Machine Scale Set exists.
    """
    __args__ = dict()
    __args__['name'] = name
    __args__['resourceGroupName'] = resource_group_name
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('azure:compute/getOrchestratedVirtualMachineScaleSet:getOrchestratedVirtualMachineScaleSet', __args__, opts=opts, typ=GetOrchestratedVirtualMachineScaleSetResult).value

    return AwaitableGetOrchestratedVirtualMachineScaleSetResult(
        id=pulumi.get(__ret__, 'id'),
        identities=pulumi.get(__ret__, 'identities'),
        location=pulumi.get(__ret__, 'location'),
        name=pulumi.get(__ret__, 'name'),
        network_interfaces=pulumi.get(__ret__, 'network_interfaces'),
        resource_group_name=pulumi.get(__ret__, 'resource_group_name'))


@_utilities.lift_output_func(get_orchestrated_virtual_machine_scale_set)
def get_orchestrated_virtual_machine_scale_set_output(name: Optional[pulumi.Input[str]] = None,
                                                      resource_group_name: Optional[pulumi.Input[str]] = None,
                                                      opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetOrchestratedVirtualMachineScaleSetResult]:
    """
    Use this data source to access information about an existing Orchestrated Virtual Machine Scale Set.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_azure as azure

    example = azure.compute.get_orchestrated_virtual_machine_scale_set(name="existing",
        resource_group_name="existing")
    pulumi.export("id", example.id)
    ```


    :param str name: The name of this Orchestrated Virtual Machine Scale Set.
    :param str resource_group_name: The name of the Resource Group where the Orchestrated Virtual Machine Scale Set exists.
    """
    ...
