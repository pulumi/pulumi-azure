# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import json
import warnings
import pulumi
import pulumi.runtime
from typing import Union
from .. import utilities, tables

class LinuxVirtualMachineScaleSet(pulumi.CustomResource):
    additional_capabilities: pulumi.Output[dict]
    """
    A `additional_capabilities` block as defined below.

      * `ultraSsdEnabled` (`bool`) - Should the capacity to enable Data Disks of the `UltraSSD_LRS` storage account type be supported on this Virtual Machine Scale Set? Defaults to `false`. Changing this forces a new resource to be created.
    """
    admin_password: pulumi.Output[str]
    """
    The Password which should be used for the local-administrator on this Virtual Machine. Changing this forces a new resource to be created.
    """
    admin_ssh_keys: pulumi.Output[list]
    """
    One or more `admin_ssh_key` blocks as defined below.

      * `publicKey` (`str`) - The Public Key which should be used for authentication, which needs to be at least 2048-bit and in `ssh-rsa` format.
      * `username` (`str`) - The Username for which this Public SSH Key should be configured.
    """
    admin_username: pulumi.Output[str]
    """
    The username of the local administrator on each Virtual Machine Scale Set instance. Changing this forces a new resource to be created.
    """
    automatic_instance_repair: pulumi.Output[dict]
    """
    A `automatic_instance_repair` block as defined below. To enable the automatic instance repair, this Virtual Machine Scale Set must have a valid `health_probe_id` or an [Application Health Extension](https://docs.microsoft.com/en-us/azure/virtual-machine-scale-sets/virtual-machine-scale-sets-health-extension).

      * `enabled` (`bool`) - Should the automatic instance repair be enabled on this Virtual Machine Scale Set?
      * `gracePeriod` (`str`) - Amount of time (in minutes, between 30 and 90, defaults to 30 minutes) for which automatic repairs will be delayed. The grace period starts right after the VM is found unhealthy. The time duration should be specified in ISO 8601 format.
    """
    automatic_os_upgrade_policy: pulumi.Output[dict]
    """
    A `automatic_os_upgrade_policy` block as defined below. This is Required and can only be specified when `upgrade_mode` is set to `Automatic`.

      * `disableAutomaticRollback` (`bool`) - Should automatic rollbacks be disabled? Changing this forces a new resource to be created.
      * `enableAutomaticOsUpgrade` (`bool`) - Should OS Upgrades automatically be applied to Scale Set instances in a rolling fashion when a newer version of the OS Image becomes available? Changing this forces a new resource to be created.
    """
    boot_diagnostics: pulumi.Output[dict]
    """
    A `boot_diagnostics` block as defined below.

      * `storageAccountUri` (`str`) - The Primary/Secondary Endpoint for the Azure Storage Account which should be used to store Boot Diagnostics, including Console Output and Screenshots from the Hypervisor.
    """
    computer_name_prefix: pulumi.Output[str]
    """
    The prefix which should be used for the name of the Virtual Machines in this Scale Set. If unspecified this defaults to the value for the `name` field. If the value of the `name` field is not a valid `computer_name_prefix`, then you must specify `computer_name_prefix`.
    """
    custom_data: pulumi.Output[str]
    """
    The Base64-Encoded Custom Data which should be used for this Virtual Machine Scale Set.
    """
    data_disks: pulumi.Output[list]
    """
    One or more `data_disk` blocks as defined below.

      * `caching` (`str`) - The type of Caching which should be used for this Data Disk. Possible values are `None`, `ReadOnly` and `ReadWrite`.
      * `create_option` (`str`) - The create option which should be used for this Data Disk. Possible values are `Empty` and `FromImage`. Defaults to `Empty`. (`FromImage` should only be used if the source image includes data disks).
      * `disk_encryption_set_id` (`str`) - The ID of the Disk Encryption Set which should be used to encrypt this Data Disk.
      * `disk_size_gb` (`float`) - The size of the Data Disk which should be created.
      * `lun` (`float`) - The Logical Unit Number of the Data Disk, which must be unique within the Virtual Machine.
      * `storage_account_type` (`str`) - The Type of Storage Account which should back this Data Disk. Possible values include `Standard_LRS`, `StandardSSD_LRS`, `Premium_LRS` and `UltraSSD_LRS`.
      * `write_accelerator_enabled` (`bool`) - Should Write Accelerator be enabled for this Data Disk? Defaults to `false`.
    """
    disable_password_authentication: pulumi.Output[bool]
    """
    Should Password Authentication be disabled on this Virtual Machine Scale Set? Defaults to `true`.
    """
    do_not_run_extensions_on_overprovisioned_machines: pulumi.Output[bool]
    """
    Should Virtual Machine Extensions be run on Overprovisioned Virtual Machines in the Scale Set? Defaults to `false`.
    """
    eviction_policy: pulumi.Output[str]
    """
    The Policy which should be used Virtual Machines are Evicted from the Scale Set. Changing this forces a new resource to be created.
    """
    health_probe_id: pulumi.Output[str]
    """
    The ID of a Load Balancer Probe which should be used to determine the health of an instance. Changing this forces a new resource to be created. This is Required and can only be specified when `upgrade_mode` is set to `Automatic` or `Rolling`.
    """
    identity: pulumi.Output[dict]
    """
    A `identity` block as defined below.

      * `identityIds` (`list`) - A list of User Managed Identity ID's which should be assigned to the Linux Virtual Machine Scale Set.
      * `principal_id` (`str`) - The ID of the System Managed Service Principal.
      * `type` (`str`) - The type of Managed Identity which should be assigned to the Linux Virtual Machine Scale Set. Possible values are `SystemAssigned`, `UserAssigned` and `SystemAssigned, UserAssigned`.
    """
    instances: pulumi.Output[float]
    """
    The number of Virtual Machines in the Scale Set.
    """
    location: pulumi.Output[str]
    """
    The Azure location where the Linux Virtual Machine Scale Set should exist. Changing this forces a new resource to be created.
    """
    max_bid_price: pulumi.Output[float]
    """
    The maximum price you're willing to pay for each Virtual Machine in this Scale Set, in US Dollars; which must be greater than the current spot price. If this bid price falls below the current spot price the Virtual Machines in the Scale Set will be evicted using the `eviction_policy`. Defaults to `-1`, which means that each Virtual Machine in this Scale Set should not be evicted for price reasons.
    """
    name: pulumi.Output[str]
    """
    The name of the Linux Virtual Machine Scale Set. Changing this forces a new resource to be created.
    """
    network_interfaces: pulumi.Output[list]
    """
    One or more `network_interface` blocks as defined below.

      * `dns_servers` (`list`) - A list of IP Addresses of DNS Servers which should be assigned to the Network Interface.
      * `enable_accelerated_networking` (`bool`) - Does this Network Interface support Accelerated Networking? Defaults to `false`.
      * `enable_ip_forwarding` (`bool`) - Does this Network Interface support IP Forwarding? Defaults to `false`.
      * `ip_configurations` (`list`) - One or more `ip_configuration` blocks as defined above.
        * `applicationGatewayBackendAddressPoolIds` (`list`) - A list of Backend Address Pools ID's from a Application Gateway which this Virtual Machine Scale Set should be connected to.
        * `applicationSecurityGroupIds` (`list`) - A list of Application Security Group ID's which this Virtual Machine Scale Set should be connected to.
        * `loadBalancerBackendAddressPoolIds` (`list`) - A list of Backend Address Pools ID's from a Load Balancer which this Virtual Machine Scale Set should be connected to.
        * `loadBalancerInboundNatRulesIds` (`list`) - A list of NAT Rule ID's from a Load Balancer which this Virtual Machine Scale Set should be connected to.
        * `name` (`str`) - The Name which should be used for this IP Configuration.
        * `primary` (`bool`) - Is this the Primary IP Configuration for this Network Interface? Defaults to `false`.
        * `public_ip_addresses` (`list`) - A `public_ip_address` block as defined below.
          * `domain_name_label` (`str`) - The Prefix which should be used for the Domain Name Label for each Virtual Machine Instance. Azure concatenates the Domain Name Label and Virtual Machine Index to create a unique Domain Name Label for each Virtual Machine.
          * `idle_timeout_in_minutes` (`float`) - The Idle Timeout in Minutes for the Public IP Address. Possible values are in the range `4` to `32`.
          * `ipTags` (`list`) - One or more `ip_tag` blocks as defined above.
            * `tag` (`str`) - The IP Tag associated with the Public IP, such as `SQL` or `Storage`.
            * `type` (`str`) - The Type of IP Tag, such as `FirstPartyUsage`.

          * `name` (`str`) - The Name of the Public IP Address Configuration.
          * `public_ip_prefix_id` (`str`) - The ID of the Public IP Address Prefix from where Public IP Addresses should be allocated. Changing this forces a new resource to be created.

        * `subnet_id` (`str`) - The ID of the Subnet which this IP Configuration should be connected to.
        * `version` (`str`) - The Internet Protocol Version which should be used for this IP Configuration. Possible values are `IPv4` and `IPv6`. Defaults to `IPv4`.

      * `name` (`str`) - The Name which should be used for this Network Interface. Changing this forces a new resource to be created.
      * `network_security_group_id` (`str`) - The ID of a Network Security Group which should be assigned to this Network Interface.
      * `primary` (`bool`) - Is this the Primary IP Configuration?
    """
    os_disk: pulumi.Output[dict]
    """
    An `os_disk` block as defined below.

      * `caching` (`str`) - The Type of Caching which should be used for the Internal OS Disk. Possible values are `None`, `ReadOnly` and `ReadWrite`.
      * `diffDiskSettings` (`dict`) - A `diff_disk_settings` block as defined above. Changing this forces a new resource to be created.
        * `option` (`str`)

      * `disk_encryption_set_id` (`str`) - The ID of the Disk Encryption Set which should be used to encrypt this OS Disk.
      * `disk_size_gb` (`float`) - The Size of the Internal OS Disk in GB, if you wish to vary from the size used in the image this Virtual Machine Scale Set is sourced from.
      * `storage_account_type` (`str`) - The Type of Storage Account which should back this the Internal OS Disk. Possible values include `Standard_LRS`, `StandardSSD_LRS` and `Premium_LRS`.
      * `write_accelerator_enabled` (`bool`) - Should Write Accelerator be Enabled for this OS Disk? Defaults to `false`.
    """
    overprovision: pulumi.Output[bool]
    """
    Should Azure over-provision Virtual Machines in this Scale Set? This means that multiple Virtual Machines will be provisioned and Azure will keep the instances which become available first - which improves provisioning success rates and improves deployment time. You're not billed for these over-provisioned VM's and they don't count towards the Subscription Quota. Defaults to `false`.
    """
    plan: pulumi.Output[dict]
    priority: pulumi.Output[str]
    """
    The Priority of this Virtual Machine Scale Set. Possible values are `Regular` and `Spot`. Defaults to `Regular`. Changing this value forces a new resource.
    """
    provision_vm_agent: pulumi.Output[bool]
    """
    Should the Azure VM Agent be provisioned on each Virtual Machine in the Scale Set? Defaults to `true`. Changing this value forces a new resource to be created.
    """
    proximity_placement_group_id: pulumi.Output[str]
    """
    The ID of the Proximity Placement Group in which the Virtual Machine Scale Set should be assigned to. Changing this forces a new resource to be created.
    """
    resource_group_name: pulumi.Output[str]
    """
    The name of the Resource Group in which the Linux Virtual Machine Scale Set should be exist. Changing this forces a new resource to be created.
    """
    rolling_upgrade_policy: pulumi.Output[dict]
    """
    A `rolling_upgrade_policy` block as defined below. This is Required and can only be specified when `upgrade_mode` is set to `Automatic` or `Rolling`.

      * `maxBatchInstancePercent` (`float`) - The maximum percent of total virtual machine instances that will be upgraded simultaneously by the rolling upgrade in one batch. As this is a maximum, unhealthy instances in previous or future batches can cause the percentage of instances in a batch to decrease to ensure higher reliability. Changing this forces a new resource to be created.
      * `maxUnhealthyInstancePercent` (`float`) - The maximum percentage of the total virtual machine instances in the scale set that can be simultaneously unhealthy, either as a result of being upgraded, or by being found in an unhealthy state by the virtual machine health checks before the rolling upgrade aborts. This constraint will be checked prior to starting any batch. Changing this forces a new resource to be created.
      * `maxUnhealthyUpgradedInstancePercent` (`float`) - The maximum percentage of upgraded virtual machine instances that can be found to be in an unhealthy state. This check will happen after each batch is upgraded. If this percentage is ever exceeded, the rolling update aborts. Changing this forces a new resource to be created.
      * `pauseTimeBetweenBatches` (`str`) - The wait time between completing the update for all virtual machines in one batch and starting the next batch. The time duration should be specified in ISO 8601 format. Changing this forces a new resource to be created.
    """
    scale_in_policy: pulumi.Output[str]
    """
    The scale-in policy rule that decides which virtual machines are chosen for removal when a Virtual Machine Scale Set is scaled in. Possible values for the scale-in policy rules are `Default`, `NewestVM` and `OldestVM`, defaults to `Default`. For more information about scale in policy, please [refer to this doc](https://docs.microsoft.com/en-us/azure/virtual-machine-scale-sets/virtual-machine-scale-sets-scale-in-policy).
    """
    secrets: pulumi.Output[list]
    """
    One or more `secret` blocks as defined below.

      * `certificates` (`list`) - One or more `certificate` blocks as defined above.
        * `url` (`str`) - The Secret URL of a Key Vault Certificate.

      * `key_vault_id` (`str`) - The ID of the Key Vault from which all Secrets should be sourced.
    """
    single_placement_group: pulumi.Output[bool]
    """
    Should this Virtual Machine Scale Set be limited to a Single Placement Group, which means the number of instances will be capped at 100 Virtual Machines. Defaults to `true`.
    """
    sku: pulumi.Output[str]
    """
    The Virtual Machine SKU for the Scale Set, such as `Standard_F2`.
    """
    source_image_id: pulumi.Output[str]
    """
    The ID of an Image which each Virtual Machine in this Scale Set should be based on.
    """
    source_image_reference: pulumi.Output[dict]
    """
    A `source_image_reference` block as defined below.

      * `offer` (`str`) - Specifies the offer of the image used to create the virtual machines.
      * `publisher` (`str`) - Specifies the publisher of the image used to create the virtual machines.
      * `sku` (`str`) - Specifies the SKU of the image used to create the virtual machines.
      * `version` (`str`) - Specifies the version of the image used to create the virtual machines.
    """
    tags: pulumi.Output[dict]
    """
    A mapping of tags which should be assigned to this Virtual Machine Scale Set.
    """
    terminate_notification: pulumi.Output[dict]
    """
    A `terminate_notification` block as defined below.

      * `enabled` (`bool`) - Should the terminate notification be enabled on this Virtual Machine Scale Set? Defaults to `false`.
      * `timeout` (`str`) - Length of time (in minutes, between 5 and 15) a notification to be sent to the VM on the instance metadata server till the VM gets deleted. The time duration should be specified in ISO 8601 format.
    """
    unique_id: pulumi.Output[str]
    """
    The Unique ID for this Linux Virtual Machine Scale Set.
    """
    upgrade_mode: pulumi.Output[str]
    """
    Specifies how Upgrades (e.g. changing the Image/SKU) should be performed to Virtual Machine Instances. Possible values are `Automatic`, `Manual` and `Rolling`. Defaults to `Manual`.
    """
    zone_balance: pulumi.Output[bool]
    """
    Should the Virtual Machines in this Scale Set be strictly evenly distributed across Availability Zones? Defaults to `false`. Changing this forces a new resource to be created.
    """
    zones: pulumi.Output[list]
    """
    A list of Availability Zones in which the Virtual Machines in this Scale Set should be created in. Changing this forces a new resource to be created.
    """
    def __init__(__self__, resource_name, opts=None, additional_capabilities=None, admin_password=None, admin_ssh_keys=None, admin_username=None, automatic_instance_repair=None, automatic_os_upgrade_policy=None, boot_diagnostics=None, computer_name_prefix=None, custom_data=None, data_disks=None, disable_password_authentication=None, do_not_run_extensions_on_overprovisioned_machines=None, eviction_policy=None, health_probe_id=None, identity=None, instances=None, location=None, max_bid_price=None, name=None, network_interfaces=None, os_disk=None, overprovision=None, plan=None, priority=None, provision_vm_agent=None, proximity_placement_group_id=None, resource_group_name=None, rolling_upgrade_policy=None, scale_in_policy=None, secrets=None, single_placement_group=None, sku=None, source_image_id=None, source_image_reference=None, tags=None, terminate_notification=None, upgrade_mode=None, zone_balance=None, zones=None, __props__=None, __name__=None, __opts__=None):
        """
        Manages a Linux Virtual Machine Scale Set.

        ## Disclaimers

        > **Note** This provider will automatically update & reimage the nodes in the Scale Set (if Required) during an Update - this behaviour can be configured using the `features` configuration within the Provider configuration block.

        > **Note:** This resource does not support Unmanaged Disks. If you need to use Unmanaged Disks you can continue to use the `compute.ScaleSet` resource instead

        ## Example Usage



        ```python
        import pulumi
        import pulumi_azure as azure

        example_resource_group = azure.core.ResourceGroup("exampleResourceGroup", location="West Europe")
        example_virtual_network = azure.network.VirtualNetwork("exampleVirtualNetwork",
            resource_group_name=example_resource_group.name,
            location=example_resource_group.location,
            address_spaces=["10.0.0.0/16"])
        internal = azure.network.Subnet("internal",
            resource_group_name=example_resource_group.name,
            virtual_network_name=example_virtual_network.name,
            address_prefix="10.0.2.0/24")
        example_linux_virtual_machine_scale_set = azure.compute.LinuxVirtualMachineScaleSet("exampleLinuxVirtualMachineScaleSet",
            resource_group_name=example_resource_group.name,
            location=example_resource_group.location,
            sku="Standard_F2",
            instances=1,
            admin_username="adminuser",
            admin_ssh_key=[{
                "username": "adminuser",
                "publicKey": (lambda path: open(path).read())("~/.ssh/id_rsa.pub"),
            }],
            source_image_reference={
                "publisher": "Canonical",
                "offer": "UbuntuServer",
                "sku": "16.04-LTS",
                "version": "latest",
            },
            os_disk={
                "storageAccountType": "Standard_LRS",
                "caching": "ReadWrite",
            },
            network_interface=[{
                "name": "example",
                "primary": True,
                "ip_configuration": [{
                    "name": "internal",
                    "primary": True,
                    "subnetId": internal.id,
                }],
            }])
        ```


        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[dict] additional_capabilities: A `additional_capabilities` block as defined below.
        :param pulumi.Input[str] admin_password: The Password which should be used for the local-administrator on this Virtual Machine. Changing this forces a new resource to be created.
        :param pulumi.Input[list] admin_ssh_keys: One or more `admin_ssh_key` blocks as defined below.
        :param pulumi.Input[str] admin_username: The username of the local administrator on each Virtual Machine Scale Set instance. Changing this forces a new resource to be created.
        :param pulumi.Input[dict] automatic_instance_repair: A `automatic_instance_repair` block as defined below. To enable the automatic instance repair, this Virtual Machine Scale Set must have a valid `health_probe_id` or an [Application Health Extension](https://docs.microsoft.com/en-us/azure/virtual-machine-scale-sets/virtual-machine-scale-sets-health-extension).
        :param pulumi.Input[dict] automatic_os_upgrade_policy: A `automatic_os_upgrade_policy` block as defined below. This is Required and can only be specified when `upgrade_mode` is set to `Automatic`.
        :param pulumi.Input[dict] boot_diagnostics: A `boot_diagnostics` block as defined below.
        :param pulumi.Input[str] computer_name_prefix: The prefix which should be used for the name of the Virtual Machines in this Scale Set. If unspecified this defaults to the value for the `name` field. If the value of the `name` field is not a valid `computer_name_prefix`, then you must specify `computer_name_prefix`.
        :param pulumi.Input[str] custom_data: The Base64-Encoded Custom Data which should be used for this Virtual Machine Scale Set.
        :param pulumi.Input[list] data_disks: One or more `data_disk` blocks as defined below.
        :param pulumi.Input[bool] disable_password_authentication: Should Password Authentication be disabled on this Virtual Machine Scale Set? Defaults to `true`.
        :param pulumi.Input[bool] do_not_run_extensions_on_overprovisioned_machines: Should Virtual Machine Extensions be run on Overprovisioned Virtual Machines in the Scale Set? Defaults to `false`.
        :param pulumi.Input[str] eviction_policy: The Policy which should be used Virtual Machines are Evicted from the Scale Set. Changing this forces a new resource to be created.
        :param pulumi.Input[str] health_probe_id: The ID of a Load Balancer Probe which should be used to determine the health of an instance. Changing this forces a new resource to be created. This is Required and can only be specified when `upgrade_mode` is set to `Automatic` or `Rolling`.
        :param pulumi.Input[dict] identity: A `identity` block as defined below.
        :param pulumi.Input[float] instances: The number of Virtual Machines in the Scale Set.
        :param pulumi.Input[str] location: The Azure location where the Linux Virtual Machine Scale Set should exist. Changing this forces a new resource to be created.
        :param pulumi.Input[float] max_bid_price: The maximum price you're willing to pay for each Virtual Machine in this Scale Set, in US Dollars; which must be greater than the current spot price. If this bid price falls below the current spot price the Virtual Machines in the Scale Set will be evicted using the `eviction_policy`. Defaults to `-1`, which means that each Virtual Machine in this Scale Set should not be evicted for price reasons.
        :param pulumi.Input[str] name: The name of the Linux Virtual Machine Scale Set. Changing this forces a new resource to be created.
        :param pulumi.Input[list] network_interfaces: One or more `network_interface` blocks as defined below.
        :param pulumi.Input[dict] os_disk: An `os_disk` block as defined below.
        :param pulumi.Input[bool] overprovision: Should Azure over-provision Virtual Machines in this Scale Set? This means that multiple Virtual Machines will be provisioned and Azure will keep the instances which become available first - which improves provisioning success rates and improves deployment time. You're not billed for these over-provisioned VM's and they don't count towards the Subscription Quota. Defaults to `false`.
        :param pulumi.Input[str] priority: The Priority of this Virtual Machine Scale Set. Possible values are `Regular` and `Spot`. Defaults to `Regular`. Changing this value forces a new resource.
        :param pulumi.Input[bool] provision_vm_agent: Should the Azure VM Agent be provisioned on each Virtual Machine in the Scale Set? Defaults to `true`. Changing this value forces a new resource to be created.
        :param pulumi.Input[str] proximity_placement_group_id: The ID of the Proximity Placement Group in which the Virtual Machine Scale Set should be assigned to. Changing this forces a new resource to be created.
        :param pulumi.Input[str] resource_group_name: The name of the Resource Group in which the Linux Virtual Machine Scale Set should be exist. Changing this forces a new resource to be created.
        :param pulumi.Input[dict] rolling_upgrade_policy: A `rolling_upgrade_policy` block as defined below. This is Required and can only be specified when `upgrade_mode` is set to `Automatic` or `Rolling`.
        :param pulumi.Input[str] scale_in_policy: The scale-in policy rule that decides which virtual machines are chosen for removal when a Virtual Machine Scale Set is scaled in. Possible values for the scale-in policy rules are `Default`, `NewestVM` and `OldestVM`, defaults to `Default`. For more information about scale in policy, please [refer to this doc](https://docs.microsoft.com/en-us/azure/virtual-machine-scale-sets/virtual-machine-scale-sets-scale-in-policy).
        :param pulumi.Input[list] secrets: One or more `secret` blocks as defined below.
        :param pulumi.Input[bool] single_placement_group: Should this Virtual Machine Scale Set be limited to a Single Placement Group, which means the number of instances will be capped at 100 Virtual Machines. Defaults to `true`.
        :param pulumi.Input[str] sku: The Virtual Machine SKU for the Scale Set, such as `Standard_F2`.
        :param pulumi.Input[str] source_image_id: The ID of an Image which each Virtual Machine in this Scale Set should be based on.
        :param pulumi.Input[dict] source_image_reference: A `source_image_reference` block as defined below.
        :param pulumi.Input[dict] tags: A mapping of tags which should be assigned to this Virtual Machine Scale Set.
        :param pulumi.Input[dict] terminate_notification: A `terminate_notification` block as defined below.
        :param pulumi.Input[str] upgrade_mode: Specifies how Upgrades (e.g. changing the Image/SKU) should be performed to Virtual Machine Instances. Possible values are `Automatic`, `Manual` and `Rolling`. Defaults to `Manual`.
        :param pulumi.Input[bool] zone_balance: Should the Virtual Machines in this Scale Set be strictly evenly distributed across Availability Zones? Defaults to `false`. Changing this forces a new resource to be created.
        :param pulumi.Input[list] zones: A list of Availability Zones in which the Virtual Machines in this Scale Set should be created in. Changing this forces a new resource to be created.

        The **additional_capabilities** object supports the following:

          * `ultraSsdEnabled` (`pulumi.Input[bool]`) - Should the capacity to enable Data Disks of the `UltraSSD_LRS` storage account type be supported on this Virtual Machine Scale Set? Defaults to `false`. Changing this forces a new resource to be created.

        The **admin_ssh_keys** object supports the following:

          * `publicKey` (`pulumi.Input[str]`) - The Public Key which should be used for authentication, which needs to be at least 2048-bit and in `ssh-rsa` format.
          * `username` (`pulumi.Input[str]`) - The Username for which this Public SSH Key should be configured.

        The **automatic_instance_repair** object supports the following:

          * `enabled` (`pulumi.Input[bool]`) - Should the automatic instance repair be enabled on this Virtual Machine Scale Set?
          * `gracePeriod` (`pulumi.Input[str]`) - Amount of time (in minutes, between 30 and 90, defaults to 30 minutes) for which automatic repairs will be delayed. The grace period starts right after the VM is found unhealthy. The time duration should be specified in ISO 8601 format.

        The **automatic_os_upgrade_policy** object supports the following:

          * `disableAutomaticRollback` (`pulumi.Input[bool]`) - Should automatic rollbacks be disabled? Changing this forces a new resource to be created.
          * `enableAutomaticOsUpgrade` (`pulumi.Input[bool]`) - Should OS Upgrades automatically be applied to Scale Set instances in a rolling fashion when a newer version of the OS Image becomes available? Changing this forces a new resource to be created.

        The **boot_diagnostics** object supports the following:

          * `storageAccountUri` (`pulumi.Input[str]`) - The Primary/Secondary Endpoint for the Azure Storage Account which should be used to store Boot Diagnostics, including Console Output and Screenshots from the Hypervisor.

        The **data_disks** object supports the following:

          * `caching` (`pulumi.Input[str]`) - The type of Caching which should be used for this Data Disk. Possible values are `None`, `ReadOnly` and `ReadWrite`.
          * `create_option` (`pulumi.Input[str]`) - The create option which should be used for this Data Disk. Possible values are `Empty` and `FromImage`. Defaults to `Empty`. (`FromImage` should only be used if the source image includes data disks).
          * `disk_encryption_set_id` (`pulumi.Input[str]`) - The ID of the Disk Encryption Set which should be used to encrypt this Data Disk.
          * `disk_size_gb` (`pulumi.Input[float]`) - The size of the Data Disk which should be created.
          * `lun` (`pulumi.Input[float]`) - The Logical Unit Number of the Data Disk, which must be unique within the Virtual Machine.
          * `storage_account_type` (`pulumi.Input[str]`) - The Type of Storage Account which should back this Data Disk. Possible values include `Standard_LRS`, `StandardSSD_LRS`, `Premium_LRS` and `UltraSSD_LRS`.
          * `write_accelerator_enabled` (`pulumi.Input[bool]`) - Should Write Accelerator be enabled for this Data Disk? Defaults to `false`.

        The **identity** object supports the following:

          * `identityIds` (`pulumi.Input[list]`) - A list of User Managed Identity ID's which should be assigned to the Linux Virtual Machine Scale Set.
          * `principal_id` (`pulumi.Input[str]`) - The ID of the System Managed Service Principal.
          * `type` (`pulumi.Input[str]`) - The type of Managed Identity which should be assigned to the Linux Virtual Machine Scale Set. Possible values are `SystemAssigned`, `UserAssigned` and `SystemAssigned, UserAssigned`.

        The **network_interfaces** object supports the following:

          * `dns_servers` (`pulumi.Input[list]`) - A list of IP Addresses of DNS Servers which should be assigned to the Network Interface.
          * `enable_accelerated_networking` (`pulumi.Input[bool]`) - Does this Network Interface support Accelerated Networking? Defaults to `false`.
          * `enable_ip_forwarding` (`pulumi.Input[bool]`) - Does this Network Interface support IP Forwarding? Defaults to `false`.
          * `ip_configurations` (`pulumi.Input[list]`) - One or more `ip_configuration` blocks as defined above.
            * `applicationGatewayBackendAddressPoolIds` (`pulumi.Input[list]`) - A list of Backend Address Pools ID's from a Application Gateway which this Virtual Machine Scale Set should be connected to.
            * `applicationSecurityGroupIds` (`pulumi.Input[list]`) - A list of Application Security Group ID's which this Virtual Machine Scale Set should be connected to.
            * `loadBalancerBackendAddressPoolIds` (`pulumi.Input[list]`) - A list of Backend Address Pools ID's from a Load Balancer which this Virtual Machine Scale Set should be connected to.
            * `loadBalancerInboundNatRulesIds` (`pulumi.Input[list]`) - A list of NAT Rule ID's from a Load Balancer which this Virtual Machine Scale Set should be connected to.
            * `name` (`pulumi.Input[str]`) - The Name which should be used for this IP Configuration.
            * `primary` (`pulumi.Input[bool]`) - Is this the Primary IP Configuration for this Network Interface? Defaults to `false`.
            * `public_ip_addresses` (`pulumi.Input[list]`) - A `public_ip_address` block as defined below.
              * `domain_name_label` (`pulumi.Input[str]`) - The Prefix which should be used for the Domain Name Label for each Virtual Machine Instance. Azure concatenates the Domain Name Label and Virtual Machine Index to create a unique Domain Name Label for each Virtual Machine.
              * `idle_timeout_in_minutes` (`pulumi.Input[float]`) - The Idle Timeout in Minutes for the Public IP Address. Possible values are in the range `4` to `32`.
              * `ipTags` (`pulumi.Input[list]`) - One or more `ip_tag` blocks as defined above.
                * `tag` (`pulumi.Input[str]`) - The IP Tag associated with the Public IP, such as `SQL` or `Storage`.
                * `type` (`pulumi.Input[str]`) - The Type of IP Tag, such as `FirstPartyUsage`.

              * `name` (`pulumi.Input[str]`) - The Name of the Public IP Address Configuration.
              * `public_ip_prefix_id` (`pulumi.Input[str]`) - The ID of the Public IP Address Prefix from where Public IP Addresses should be allocated. Changing this forces a new resource to be created.

            * `subnet_id` (`pulumi.Input[str]`) - The ID of the Subnet which this IP Configuration should be connected to.
            * `version` (`pulumi.Input[str]`) - The Internet Protocol Version which should be used for this IP Configuration. Possible values are `IPv4` and `IPv6`. Defaults to `IPv4`.

          * `name` (`pulumi.Input[str]`) - The Name which should be used for this Network Interface. Changing this forces a new resource to be created.
          * `network_security_group_id` (`pulumi.Input[str]`) - The ID of a Network Security Group which should be assigned to this Network Interface.
          * `primary` (`pulumi.Input[bool]`) - Is this the Primary IP Configuration?

        The **os_disk** object supports the following:

          * `caching` (`pulumi.Input[str]`) - The Type of Caching which should be used for the Internal OS Disk. Possible values are `None`, `ReadOnly` and `ReadWrite`.
          * `diffDiskSettings` (`pulumi.Input[dict]`) - A `diff_disk_settings` block as defined above. Changing this forces a new resource to be created.
            * `option` (`pulumi.Input[str]`)

          * `disk_encryption_set_id` (`pulumi.Input[str]`) - The ID of the Disk Encryption Set which should be used to encrypt this OS Disk.
          * `disk_size_gb` (`pulumi.Input[float]`) - The Size of the Internal OS Disk in GB, if you wish to vary from the size used in the image this Virtual Machine Scale Set is sourced from.
          * `storage_account_type` (`pulumi.Input[str]`) - The Type of Storage Account which should back this the Internal OS Disk. Possible values include `Standard_LRS`, `StandardSSD_LRS` and `Premium_LRS`.
          * `write_accelerator_enabled` (`pulumi.Input[bool]`) - Should Write Accelerator be Enabled for this OS Disk? Defaults to `false`.

        The **plan** object supports the following:

          * `name` (`pulumi.Input[str]`) - The name of the Linux Virtual Machine Scale Set. Changing this forces a new resource to be created.
          * `product` (`pulumi.Input[str]`)
          * `publisher` (`pulumi.Input[str]`) - Specifies the publisher of the image used to create the virtual machines.

        The **rolling_upgrade_policy** object supports the following:

          * `maxBatchInstancePercent` (`pulumi.Input[float]`) - The maximum percent of total virtual machine instances that will be upgraded simultaneously by the rolling upgrade in one batch. As this is a maximum, unhealthy instances in previous or future batches can cause the percentage of instances in a batch to decrease to ensure higher reliability. Changing this forces a new resource to be created.
          * `maxUnhealthyInstancePercent` (`pulumi.Input[float]`) - The maximum percentage of the total virtual machine instances in the scale set that can be simultaneously unhealthy, either as a result of being upgraded, or by being found in an unhealthy state by the virtual machine health checks before the rolling upgrade aborts. This constraint will be checked prior to starting any batch. Changing this forces a new resource to be created.
          * `maxUnhealthyUpgradedInstancePercent` (`pulumi.Input[float]`) - The maximum percentage of upgraded virtual machine instances that can be found to be in an unhealthy state. This check will happen after each batch is upgraded. If this percentage is ever exceeded, the rolling update aborts. Changing this forces a new resource to be created.
          * `pauseTimeBetweenBatches` (`pulumi.Input[str]`) - The wait time between completing the update for all virtual machines in one batch and starting the next batch. The time duration should be specified in ISO 8601 format. Changing this forces a new resource to be created.

        The **secrets** object supports the following:

          * `certificates` (`pulumi.Input[list]`) - One or more `certificate` blocks as defined above.
            * `url` (`pulumi.Input[str]`) - The Secret URL of a Key Vault Certificate.

          * `key_vault_id` (`pulumi.Input[str]`) - The ID of the Key Vault from which all Secrets should be sourced.

        The **source_image_reference** object supports the following:

          * `offer` (`pulumi.Input[str]`) - Specifies the offer of the image used to create the virtual machines.
          * `publisher` (`pulumi.Input[str]`) - Specifies the publisher of the image used to create the virtual machines.
          * `sku` (`pulumi.Input[str]`) - Specifies the SKU of the image used to create the virtual machines.
          * `version` (`pulumi.Input[str]`) - Specifies the version of the image used to create the virtual machines.

        The **terminate_notification** object supports the following:

          * `enabled` (`pulumi.Input[bool]`) - Should the terminate notification be enabled on this Virtual Machine Scale Set? Defaults to `false`.
          * `timeout` (`pulumi.Input[str]`) - Length of time (in minutes, between 5 and 15) a notification to be sent to the VM on the instance metadata server till the VM gets deleted. The time duration should be specified in ISO 8601 format.
        """
        if __name__ is not None:
            warnings.warn("explicit use of __name__ is deprecated", DeprecationWarning)
            resource_name = __name__
        if __opts__ is not None:
            warnings.warn("explicit use of __opts__ is deprecated, use 'opts' instead", DeprecationWarning)
            opts = __opts__
        if opts is None:
            opts = pulumi.ResourceOptions()
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.version is None:
            opts.version = utilities.get_version()
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = dict()

            __props__['additional_capabilities'] = additional_capabilities
            __props__['admin_password'] = admin_password
            __props__['admin_ssh_keys'] = admin_ssh_keys
            if admin_username is None:
                raise TypeError("Missing required property 'admin_username'")
            __props__['admin_username'] = admin_username
            __props__['automatic_instance_repair'] = automatic_instance_repair
            __props__['automatic_os_upgrade_policy'] = automatic_os_upgrade_policy
            __props__['boot_diagnostics'] = boot_diagnostics
            __props__['computer_name_prefix'] = computer_name_prefix
            __props__['custom_data'] = custom_data
            __props__['data_disks'] = data_disks
            __props__['disable_password_authentication'] = disable_password_authentication
            __props__['do_not_run_extensions_on_overprovisioned_machines'] = do_not_run_extensions_on_overprovisioned_machines
            __props__['eviction_policy'] = eviction_policy
            __props__['health_probe_id'] = health_probe_id
            __props__['identity'] = identity
            if instances is None:
                raise TypeError("Missing required property 'instances'")
            __props__['instances'] = instances
            __props__['location'] = location
            __props__['max_bid_price'] = max_bid_price
            __props__['name'] = name
            if network_interfaces is None:
                raise TypeError("Missing required property 'network_interfaces'")
            __props__['network_interfaces'] = network_interfaces
            if os_disk is None:
                raise TypeError("Missing required property 'os_disk'")
            __props__['os_disk'] = os_disk
            __props__['overprovision'] = overprovision
            __props__['plan'] = plan
            __props__['priority'] = priority
            __props__['provision_vm_agent'] = provision_vm_agent
            __props__['proximity_placement_group_id'] = proximity_placement_group_id
            if resource_group_name is None:
                raise TypeError("Missing required property 'resource_group_name'")
            __props__['resource_group_name'] = resource_group_name
            __props__['rolling_upgrade_policy'] = rolling_upgrade_policy
            __props__['scale_in_policy'] = scale_in_policy
            __props__['secrets'] = secrets
            __props__['single_placement_group'] = single_placement_group
            if sku is None:
                raise TypeError("Missing required property 'sku'")
            __props__['sku'] = sku
            __props__['source_image_id'] = source_image_id
            __props__['source_image_reference'] = source_image_reference
            __props__['tags'] = tags
            __props__['terminate_notification'] = terminate_notification
            __props__['upgrade_mode'] = upgrade_mode
            __props__['zone_balance'] = zone_balance
            __props__['zones'] = zones
            __props__['unique_id'] = None
        super(LinuxVirtualMachineScaleSet, __self__).__init__(
            'azure:compute/linuxVirtualMachineScaleSet:LinuxVirtualMachineScaleSet',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name, id, opts=None, additional_capabilities=None, admin_password=None, admin_ssh_keys=None, admin_username=None, automatic_instance_repair=None, automatic_os_upgrade_policy=None, boot_diagnostics=None, computer_name_prefix=None, custom_data=None, data_disks=None, disable_password_authentication=None, do_not_run_extensions_on_overprovisioned_machines=None, eviction_policy=None, health_probe_id=None, identity=None, instances=None, location=None, max_bid_price=None, name=None, network_interfaces=None, os_disk=None, overprovision=None, plan=None, priority=None, provision_vm_agent=None, proximity_placement_group_id=None, resource_group_name=None, rolling_upgrade_policy=None, scale_in_policy=None, secrets=None, single_placement_group=None, sku=None, source_image_id=None, source_image_reference=None, tags=None, terminate_notification=None, unique_id=None, upgrade_mode=None, zone_balance=None, zones=None):
        """
        Get an existing LinuxVirtualMachineScaleSet resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param str id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[dict] additional_capabilities: A `additional_capabilities` block as defined below.
        :param pulumi.Input[str] admin_password: The Password which should be used for the local-administrator on this Virtual Machine. Changing this forces a new resource to be created.
        :param pulumi.Input[list] admin_ssh_keys: One or more `admin_ssh_key` blocks as defined below.
        :param pulumi.Input[str] admin_username: The username of the local administrator on each Virtual Machine Scale Set instance. Changing this forces a new resource to be created.
        :param pulumi.Input[dict] automatic_instance_repair: A `automatic_instance_repair` block as defined below. To enable the automatic instance repair, this Virtual Machine Scale Set must have a valid `health_probe_id` or an [Application Health Extension](https://docs.microsoft.com/en-us/azure/virtual-machine-scale-sets/virtual-machine-scale-sets-health-extension).
        :param pulumi.Input[dict] automatic_os_upgrade_policy: A `automatic_os_upgrade_policy` block as defined below. This is Required and can only be specified when `upgrade_mode` is set to `Automatic`.
        :param pulumi.Input[dict] boot_diagnostics: A `boot_diagnostics` block as defined below.
        :param pulumi.Input[str] computer_name_prefix: The prefix which should be used for the name of the Virtual Machines in this Scale Set. If unspecified this defaults to the value for the `name` field. If the value of the `name` field is not a valid `computer_name_prefix`, then you must specify `computer_name_prefix`.
        :param pulumi.Input[str] custom_data: The Base64-Encoded Custom Data which should be used for this Virtual Machine Scale Set.
        :param pulumi.Input[list] data_disks: One or more `data_disk` blocks as defined below.
        :param pulumi.Input[bool] disable_password_authentication: Should Password Authentication be disabled on this Virtual Machine Scale Set? Defaults to `true`.
        :param pulumi.Input[bool] do_not_run_extensions_on_overprovisioned_machines: Should Virtual Machine Extensions be run on Overprovisioned Virtual Machines in the Scale Set? Defaults to `false`.
        :param pulumi.Input[str] eviction_policy: The Policy which should be used Virtual Machines are Evicted from the Scale Set. Changing this forces a new resource to be created.
        :param pulumi.Input[str] health_probe_id: The ID of a Load Balancer Probe which should be used to determine the health of an instance. Changing this forces a new resource to be created. This is Required and can only be specified when `upgrade_mode` is set to `Automatic` or `Rolling`.
        :param pulumi.Input[dict] identity: A `identity` block as defined below.
        :param pulumi.Input[float] instances: The number of Virtual Machines in the Scale Set.
        :param pulumi.Input[str] location: The Azure location where the Linux Virtual Machine Scale Set should exist. Changing this forces a new resource to be created.
        :param pulumi.Input[float] max_bid_price: The maximum price you're willing to pay for each Virtual Machine in this Scale Set, in US Dollars; which must be greater than the current spot price. If this bid price falls below the current spot price the Virtual Machines in the Scale Set will be evicted using the `eviction_policy`. Defaults to `-1`, which means that each Virtual Machine in this Scale Set should not be evicted for price reasons.
        :param pulumi.Input[str] name: The name of the Linux Virtual Machine Scale Set. Changing this forces a new resource to be created.
        :param pulumi.Input[list] network_interfaces: One or more `network_interface` blocks as defined below.
        :param pulumi.Input[dict] os_disk: An `os_disk` block as defined below.
        :param pulumi.Input[bool] overprovision: Should Azure over-provision Virtual Machines in this Scale Set? This means that multiple Virtual Machines will be provisioned and Azure will keep the instances which become available first - which improves provisioning success rates and improves deployment time. You're not billed for these over-provisioned VM's and they don't count towards the Subscription Quota. Defaults to `false`.
        :param pulumi.Input[str] priority: The Priority of this Virtual Machine Scale Set. Possible values are `Regular` and `Spot`. Defaults to `Regular`. Changing this value forces a new resource.
        :param pulumi.Input[bool] provision_vm_agent: Should the Azure VM Agent be provisioned on each Virtual Machine in the Scale Set? Defaults to `true`. Changing this value forces a new resource to be created.
        :param pulumi.Input[str] proximity_placement_group_id: The ID of the Proximity Placement Group in which the Virtual Machine Scale Set should be assigned to. Changing this forces a new resource to be created.
        :param pulumi.Input[str] resource_group_name: The name of the Resource Group in which the Linux Virtual Machine Scale Set should be exist. Changing this forces a new resource to be created.
        :param pulumi.Input[dict] rolling_upgrade_policy: A `rolling_upgrade_policy` block as defined below. This is Required and can only be specified when `upgrade_mode` is set to `Automatic` or `Rolling`.
        :param pulumi.Input[str] scale_in_policy: The scale-in policy rule that decides which virtual machines are chosen for removal when a Virtual Machine Scale Set is scaled in. Possible values for the scale-in policy rules are `Default`, `NewestVM` and `OldestVM`, defaults to `Default`. For more information about scale in policy, please [refer to this doc](https://docs.microsoft.com/en-us/azure/virtual-machine-scale-sets/virtual-machine-scale-sets-scale-in-policy).
        :param pulumi.Input[list] secrets: One or more `secret` blocks as defined below.
        :param pulumi.Input[bool] single_placement_group: Should this Virtual Machine Scale Set be limited to a Single Placement Group, which means the number of instances will be capped at 100 Virtual Machines. Defaults to `true`.
        :param pulumi.Input[str] sku: The Virtual Machine SKU for the Scale Set, such as `Standard_F2`.
        :param pulumi.Input[str] source_image_id: The ID of an Image which each Virtual Machine in this Scale Set should be based on.
        :param pulumi.Input[dict] source_image_reference: A `source_image_reference` block as defined below.
        :param pulumi.Input[dict] tags: A mapping of tags which should be assigned to this Virtual Machine Scale Set.
        :param pulumi.Input[dict] terminate_notification: A `terminate_notification` block as defined below.
        :param pulumi.Input[str] unique_id: The Unique ID for this Linux Virtual Machine Scale Set.
        :param pulumi.Input[str] upgrade_mode: Specifies how Upgrades (e.g. changing the Image/SKU) should be performed to Virtual Machine Instances. Possible values are `Automatic`, `Manual` and `Rolling`. Defaults to `Manual`.
        :param pulumi.Input[bool] zone_balance: Should the Virtual Machines in this Scale Set be strictly evenly distributed across Availability Zones? Defaults to `false`. Changing this forces a new resource to be created.
        :param pulumi.Input[list] zones: A list of Availability Zones in which the Virtual Machines in this Scale Set should be created in. Changing this forces a new resource to be created.

        The **additional_capabilities** object supports the following:

          * `ultraSsdEnabled` (`pulumi.Input[bool]`) - Should the capacity to enable Data Disks of the `UltraSSD_LRS` storage account type be supported on this Virtual Machine Scale Set? Defaults to `false`. Changing this forces a new resource to be created.

        The **admin_ssh_keys** object supports the following:

          * `publicKey` (`pulumi.Input[str]`) - The Public Key which should be used for authentication, which needs to be at least 2048-bit and in `ssh-rsa` format.
          * `username` (`pulumi.Input[str]`) - The Username for which this Public SSH Key should be configured.

        The **automatic_instance_repair** object supports the following:

          * `enabled` (`pulumi.Input[bool]`) - Should the automatic instance repair be enabled on this Virtual Machine Scale Set?
          * `gracePeriod` (`pulumi.Input[str]`) - Amount of time (in minutes, between 30 and 90, defaults to 30 minutes) for which automatic repairs will be delayed. The grace period starts right after the VM is found unhealthy. The time duration should be specified in ISO 8601 format.

        The **automatic_os_upgrade_policy** object supports the following:

          * `disableAutomaticRollback` (`pulumi.Input[bool]`) - Should automatic rollbacks be disabled? Changing this forces a new resource to be created.
          * `enableAutomaticOsUpgrade` (`pulumi.Input[bool]`) - Should OS Upgrades automatically be applied to Scale Set instances in a rolling fashion when a newer version of the OS Image becomes available? Changing this forces a new resource to be created.

        The **boot_diagnostics** object supports the following:

          * `storageAccountUri` (`pulumi.Input[str]`) - The Primary/Secondary Endpoint for the Azure Storage Account which should be used to store Boot Diagnostics, including Console Output and Screenshots from the Hypervisor.

        The **data_disks** object supports the following:

          * `caching` (`pulumi.Input[str]`) - The type of Caching which should be used for this Data Disk. Possible values are `None`, `ReadOnly` and `ReadWrite`.
          * `create_option` (`pulumi.Input[str]`) - The create option which should be used for this Data Disk. Possible values are `Empty` and `FromImage`. Defaults to `Empty`. (`FromImage` should only be used if the source image includes data disks).
          * `disk_encryption_set_id` (`pulumi.Input[str]`) - The ID of the Disk Encryption Set which should be used to encrypt this Data Disk.
          * `disk_size_gb` (`pulumi.Input[float]`) - The size of the Data Disk which should be created.
          * `lun` (`pulumi.Input[float]`) - The Logical Unit Number of the Data Disk, which must be unique within the Virtual Machine.
          * `storage_account_type` (`pulumi.Input[str]`) - The Type of Storage Account which should back this Data Disk. Possible values include `Standard_LRS`, `StandardSSD_LRS`, `Premium_LRS` and `UltraSSD_LRS`.
          * `write_accelerator_enabled` (`pulumi.Input[bool]`) - Should Write Accelerator be enabled for this Data Disk? Defaults to `false`.

        The **identity** object supports the following:

          * `identityIds` (`pulumi.Input[list]`) - A list of User Managed Identity ID's which should be assigned to the Linux Virtual Machine Scale Set.
          * `principal_id` (`pulumi.Input[str]`) - The ID of the System Managed Service Principal.
          * `type` (`pulumi.Input[str]`) - The type of Managed Identity which should be assigned to the Linux Virtual Machine Scale Set. Possible values are `SystemAssigned`, `UserAssigned` and `SystemAssigned, UserAssigned`.

        The **network_interfaces** object supports the following:

          * `dns_servers` (`pulumi.Input[list]`) - A list of IP Addresses of DNS Servers which should be assigned to the Network Interface.
          * `enable_accelerated_networking` (`pulumi.Input[bool]`) - Does this Network Interface support Accelerated Networking? Defaults to `false`.
          * `enable_ip_forwarding` (`pulumi.Input[bool]`) - Does this Network Interface support IP Forwarding? Defaults to `false`.
          * `ip_configurations` (`pulumi.Input[list]`) - One or more `ip_configuration` blocks as defined above.
            * `applicationGatewayBackendAddressPoolIds` (`pulumi.Input[list]`) - A list of Backend Address Pools ID's from a Application Gateway which this Virtual Machine Scale Set should be connected to.
            * `applicationSecurityGroupIds` (`pulumi.Input[list]`) - A list of Application Security Group ID's which this Virtual Machine Scale Set should be connected to.
            * `loadBalancerBackendAddressPoolIds` (`pulumi.Input[list]`) - A list of Backend Address Pools ID's from a Load Balancer which this Virtual Machine Scale Set should be connected to.
            * `loadBalancerInboundNatRulesIds` (`pulumi.Input[list]`) - A list of NAT Rule ID's from a Load Balancer which this Virtual Machine Scale Set should be connected to.
            * `name` (`pulumi.Input[str]`) - The Name which should be used for this IP Configuration.
            * `primary` (`pulumi.Input[bool]`) - Is this the Primary IP Configuration for this Network Interface? Defaults to `false`.
            * `public_ip_addresses` (`pulumi.Input[list]`) - A `public_ip_address` block as defined below.
              * `domain_name_label` (`pulumi.Input[str]`) - The Prefix which should be used for the Domain Name Label for each Virtual Machine Instance. Azure concatenates the Domain Name Label and Virtual Machine Index to create a unique Domain Name Label for each Virtual Machine.
              * `idle_timeout_in_minutes` (`pulumi.Input[float]`) - The Idle Timeout in Minutes for the Public IP Address. Possible values are in the range `4` to `32`.
              * `ipTags` (`pulumi.Input[list]`) - One or more `ip_tag` blocks as defined above.
                * `tag` (`pulumi.Input[str]`) - The IP Tag associated with the Public IP, such as `SQL` or `Storage`.
                * `type` (`pulumi.Input[str]`) - The Type of IP Tag, such as `FirstPartyUsage`.

              * `name` (`pulumi.Input[str]`) - The Name of the Public IP Address Configuration.
              * `public_ip_prefix_id` (`pulumi.Input[str]`) - The ID of the Public IP Address Prefix from where Public IP Addresses should be allocated. Changing this forces a new resource to be created.

            * `subnet_id` (`pulumi.Input[str]`) - The ID of the Subnet which this IP Configuration should be connected to.
            * `version` (`pulumi.Input[str]`) - The Internet Protocol Version which should be used for this IP Configuration. Possible values are `IPv4` and `IPv6`. Defaults to `IPv4`.

          * `name` (`pulumi.Input[str]`) - The Name which should be used for this Network Interface. Changing this forces a new resource to be created.
          * `network_security_group_id` (`pulumi.Input[str]`) - The ID of a Network Security Group which should be assigned to this Network Interface.
          * `primary` (`pulumi.Input[bool]`) - Is this the Primary IP Configuration?

        The **os_disk** object supports the following:

          * `caching` (`pulumi.Input[str]`) - The Type of Caching which should be used for the Internal OS Disk. Possible values are `None`, `ReadOnly` and `ReadWrite`.
          * `diffDiskSettings` (`pulumi.Input[dict]`) - A `diff_disk_settings` block as defined above. Changing this forces a new resource to be created.
            * `option` (`pulumi.Input[str]`)

          * `disk_encryption_set_id` (`pulumi.Input[str]`) - The ID of the Disk Encryption Set which should be used to encrypt this OS Disk.
          * `disk_size_gb` (`pulumi.Input[float]`) - The Size of the Internal OS Disk in GB, if you wish to vary from the size used in the image this Virtual Machine Scale Set is sourced from.
          * `storage_account_type` (`pulumi.Input[str]`) - The Type of Storage Account which should back this the Internal OS Disk. Possible values include `Standard_LRS`, `StandardSSD_LRS` and `Premium_LRS`.
          * `write_accelerator_enabled` (`pulumi.Input[bool]`) - Should Write Accelerator be Enabled for this OS Disk? Defaults to `false`.

        The **plan** object supports the following:

          * `name` (`pulumi.Input[str]`) - The name of the Linux Virtual Machine Scale Set. Changing this forces a new resource to be created.
          * `product` (`pulumi.Input[str]`)
          * `publisher` (`pulumi.Input[str]`) - Specifies the publisher of the image used to create the virtual machines.

        The **rolling_upgrade_policy** object supports the following:

          * `maxBatchInstancePercent` (`pulumi.Input[float]`) - The maximum percent of total virtual machine instances that will be upgraded simultaneously by the rolling upgrade in one batch. As this is a maximum, unhealthy instances in previous or future batches can cause the percentage of instances in a batch to decrease to ensure higher reliability. Changing this forces a new resource to be created.
          * `maxUnhealthyInstancePercent` (`pulumi.Input[float]`) - The maximum percentage of the total virtual machine instances in the scale set that can be simultaneously unhealthy, either as a result of being upgraded, or by being found in an unhealthy state by the virtual machine health checks before the rolling upgrade aborts. This constraint will be checked prior to starting any batch. Changing this forces a new resource to be created.
          * `maxUnhealthyUpgradedInstancePercent` (`pulumi.Input[float]`) - The maximum percentage of upgraded virtual machine instances that can be found to be in an unhealthy state. This check will happen after each batch is upgraded. If this percentage is ever exceeded, the rolling update aborts. Changing this forces a new resource to be created.
          * `pauseTimeBetweenBatches` (`pulumi.Input[str]`) - The wait time between completing the update for all virtual machines in one batch and starting the next batch. The time duration should be specified in ISO 8601 format. Changing this forces a new resource to be created.

        The **secrets** object supports the following:

          * `certificates` (`pulumi.Input[list]`) - One or more `certificate` blocks as defined above.
            * `url` (`pulumi.Input[str]`) - The Secret URL of a Key Vault Certificate.

          * `key_vault_id` (`pulumi.Input[str]`) - The ID of the Key Vault from which all Secrets should be sourced.

        The **source_image_reference** object supports the following:

          * `offer` (`pulumi.Input[str]`) - Specifies the offer of the image used to create the virtual machines.
          * `publisher` (`pulumi.Input[str]`) - Specifies the publisher of the image used to create the virtual machines.
          * `sku` (`pulumi.Input[str]`) - Specifies the SKU of the image used to create the virtual machines.
          * `version` (`pulumi.Input[str]`) - Specifies the version of the image used to create the virtual machines.

        The **terminate_notification** object supports the following:

          * `enabled` (`pulumi.Input[bool]`) - Should the terminate notification be enabled on this Virtual Machine Scale Set? Defaults to `false`.
          * `timeout` (`pulumi.Input[str]`) - Length of time (in minutes, between 5 and 15) a notification to be sent to the VM on the instance metadata server till the VM gets deleted. The time duration should be specified in ISO 8601 format.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = dict()

        __props__["additional_capabilities"] = additional_capabilities
        __props__["admin_password"] = admin_password
        __props__["admin_ssh_keys"] = admin_ssh_keys
        __props__["admin_username"] = admin_username
        __props__["automatic_instance_repair"] = automatic_instance_repair
        __props__["automatic_os_upgrade_policy"] = automatic_os_upgrade_policy
        __props__["boot_diagnostics"] = boot_diagnostics
        __props__["computer_name_prefix"] = computer_name_prefix
        __props__["custom_data"] = custom_data
        __props__["data_disks"] = data_disks
        __props__["disable_password_authentication"] = disable_password_authentication
        __props__["do_not_run_extensions_on_overprovisioned_machines"] = do_not_run_extensions_on_overprovisioned_machines
        __props__["eviction_policy"] = eviction_policy
        __props__["health_probe_id"] = health_probe_id
        __props__["identity"] = identity
        __props__["instances"] = instances
        __props__["location"] = location
        __props__["max_bid_price"] = max_bid_price
        __props__["name"] = name
        __props__["network_interfaces"] = network_interfaces
        __props__["os_disk"] = os_disk
        __props__["overprovision"] = overprovision
        __props__["plan"] = plan
        __props__["priority"] = priority
        __props__["provision_vm_agent"] = provision_vm_agent
        __props__["proximity_placement_group_id"] = proximity_placement_group_id
        __props__["resource_group_name"] = resource_group_name
        __props__["rolling_upgrade_policy"] = rolling_upgrade_policy
        __props__["scale_in_policy"] = scale_in_policy
        __props__["secrets"] = secrets
        __props__["single_placement_group"] = single_placement_group
        __props__["sku"] = sku
        __props__["source_image_id"] = source_image_id
        __props__["source_image_reference"] = source_image_reference
        __props__["tags"] = tags
        __props__["terminate_notification"] = terminate_notification
        __props__["unique_id"] = unique_id
        __props__["upgrade_mode"] = upgrade_mode
        __props__["zone_balance"] = zone_balance
        __props__["zones"] = zones
        return LinuxVirtualMachineScaleSet(resource_name, opts=opts, __props__=__props__)
    def translate_output_property(self, prop):
        return tables._CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop

    def translate_input_property(self, prop):
        return tables._SNAKE_TO_CAMEL_CASE_TABLE.get(prop) or prop

