# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import json
import warnings
import pulumi
import pulumi.runtime
from typing import Union
from .. import utilities, tables

class LinuxVirtualMachineScaleSet(pulumi.CustomResource):
    additional_capabilities: pulumi.Output[dict]
    """
    A `additional_capabilities` block as defined below.

      * `ultraSsdEnabled` (`bool`)
    """
    admin_password: pulumi.Output[str]
    """
    The Password which should be used for the local-administrator on this Virtual Machine. Changing this forces a new resource to be created.
    """
    admin_ssh_keys: pulumi.Output[list]
    """
    One or more `admin_ssh_key` blocks as defined below.

      * `publicKey` (`str`)
      * `username` (`str`)
    """
    admin_username: pulumi.Output[str]
    """
    The username of the local administrator on each Virtual Machine Scale Set instance. Changing this forces a new resource to be created.
    """
    automatic_os_upgrade_policy: pulumi.Output[dict]
    """
    A `automatic_os_upgrade_policy` block as defined below. This is Required and can only be specified when `upgrade_mode` is set to `Automatic`.

      * `disableAutomaticRollback` (`bool`)
      * `enableAutomaticOsUpgrade` (`bool`)
    """
    boot_diagnostics: pulumi.Output[dict]
    """
    A `boot_diagnostics` block as defined below.

      * `storageAccountUri` (`str`)
    """
    computer_name_prefix: pulumi.Output[str]
    """
    The prefix which should be used for the name of the Virtual Machines in this Scale Set. If unspecified this defaults to the value for the `name` field.
    """
    custom_data: pulumi.Output[str]
    """
    The Base64-Encoded Custom Data which should be used for this Virtual Machine Scale Set.
    """
    data_disks: pulumi.Output[list]
    """
    One or more `data_disk` blocks as defined below.

      * `caching` (`str`)
      * `disk_encryption_set_id` (`str`)
      * `disk_size_gb` (`float`)
      * `lun` (`float`)
      * `storage_account_type` (`str`)
      * `write_accelerator_enabled` (`bool`)
    """
    disable_password_authentication: pulumi.Output[bool]
    """
    Should Password Authentication be disabled on this Virtual Machine Scale Set? Defaults to `true`.
    """
    do_not_run_extensions_on_overprovisioned_machines: pulumi.Output[bool]
    """
    Should Virtual Machine Extensions be run on Overprovisioned Virtual Machines in the Scale Set? Defaults to `false`.
    """
    eviction_policy: pulumi.Output[str]
    """
    The Policy which should be used Virtual Machines are Evicted from the Scale Set. Changing this forces a new resource to be created.
    """
    health_probe_id: pulumi.Output[str]
    """
    The ID of a Load Balancer Probe which should be used to determine the health of an instance. Changing this forces a new resource to be created. This is Required and can only be specified when `upgrade_mode` is set to `Automatic` or `Rolling`.
    """
    identity: pulumi.Output[dict]
    """
    A `identity` block as defined below.

      * `identityIds` (`list`)
      * `principal_id` (`str`) - The ID of the System Managed Service Principal.
      * `type` (`str`)
    """
    instances: pulumi.Output[float]
    """
    The number of Virtual Machines in the Scale Set.
    """
    location: pulumi.Output[str]
    """
    The Azure location where the Linux Virtual Machine Scale Set should exist. Changing this forces a new resource to be created.
    """
    max_bid_price: pulumi.Output[float]
    """
    The maximum price you're willing to pay for each Virtual Machine in this Scale Set, in US Dollars; which must be greater than the current spot price. If this bid price falls below the current spot price the Virtual Machines in the Scale Set will be evicted using the `eviction_policy`. Defaults to `-1`, which means that each Virtual Machine in this Scale Set should not be evicted for price reasons.
    """
    name: pulumi.Output[str]
    """
    The name of the Linux Virtual Machine Scale Set. Changing this forces a new resource to be created.
    """
    network_interfaces: pulumi.Output[list]
    """
    One or more `network_interface` blocks as defined below.

      * `dns_servers` (`list`)
      * `enable_accelerated_networking` (`bool`)
      * `enable_ip_forwarding` (`bool`)
      * `ip_configurations` (`list`)
        * `applicationGatewayBackendAddressPoolIds` (`list`)
        * `applicationSecurityGroupIds` (`list`)
        * `loadBalancerBackendAddressPoolIds` (`list`)
        * `loadBalancerInboundNatRulesIds` (`list`)
        * `name` (`str`) - The name of the Linux Virtual Machine Scale Set. Changing this forces a new resource to be created.
        * `primary` (`bool`)
        * `public_ip_addresses` (`list`)
          * `domain_name_label` (`str`)
          * `idle_timeout_in_minutes` (`float`)
          * `ipTags` (`list`)
            * `tag` (`str`)
            * `type` (`str`)

          * `name` (`str`) - The name of the Linux Virtual Machine Scale Set. Changing this forces a new resource to be created.
          * `public_ip_prefix_id` (`str`)

        * `subnet_id` (`str`)
        * `version` (`str`)

      * `name` (`str`) - The name of the Linux Virtual Machine Scale Set. Changing this forces a new resource to be created.
      * `network_security_group_id` (`str`)
      * `primary` (`bool`)
    """
    os_disk: pulumi.Output[dict]
    """
    An `os_disk` block as defined below.

      * `caching` (`str`)
      * `diffDiskSettings` (`dict`)
        * `option` (`str`)

      * `disk_encryption_set_id` (`str`)
      * `disk_size_gb` (`float`)
      * `storage_account_type` (`str`)
      * `write_accelerator_enabled` (`bool`)
    """
    overprovision: pulumi.Output[bool]
    """
    Should Azure over-provision Virtual Machines in this Scale Set? This means that multiple Virtual Machines will be provisioned and Azure will keep the instances which become available first - which improves provisioning success rates and improves deployment time. You're not billed for these over-provisioned VM's and they don't count towards the Subscription Quota. Defaults to `false`.
    """
    plan: pulumi.Output[dict]
    priority: pulumi.Output[str]
    """
    The Priority of this Virtual Machine Scale Set. Possible values are `Regular` and `Spot`. Defaults to `Regular`. Changing this value forces a new resource.
    """
    provision_vm_agent: pulumi.Output[bool]
    """
    Should the Azure VM Agent be provisioned on each Virtual Machine in the Scale Set? Defaults to `true`. Changing this value forces a new resource to be created.
    """
    proximity_placement_group_id: pulumi.Output[str]
    """
    The ID of the Proximity Placement Group in which the Virtual Machine Scale Set should be assigned to. Changing this forces a new resource to be created.
    """
    resource_group_name: pulumi.Output[str]
    """
    The name of the Resource Group in which the Linux Virtual Machine Scale Set should be exist. Changing this forces a new resource to be created.
    """
    rolling_upgrade_policy: pulumi.Output[dict]
    """
    A `rolling_upgrade_policy` block as defined below. This is Required and can only be specified when `upgrade_mode` is set to `Automatic` or `Rolling`.

      * `maxBatchInstancePercent` (`float`)
      * `maxUnhealthyInstancePercent` (`float`)
      * `maxUnhealthyUpgradedInstancePercent` (`float`)
      * `pauseTimeBetweenBatches` (`str`)
    """
    secrets: pulumi.Output[list]
    """
    One or more `secret` blocks as defined below.

      * `certificates` (`list`)
        * `url` (`str`)

      * `key_vault_id` (`str`)
    """
    single_placement_group: pulumi.Output[bool]
    """
    Should this Virtual Machine Scale Set be limited to a Single Placement Group, which means the number of instances will be capped at 100 Virtual Machines. Defaults to `true`.
    """
    sku: pulumi.Output[str]
    """
    The Virtual Machine SKU for the Scale Set, such as `Standard_F2`.
    """
    source_image_id: pulumi.Output[str]
    """
    The ID of an Image which each Virtual Machine in this Scale Set should be based on.
    """
    source_image_reference: pulumi.Output[dict]
    """
    A `source_image_reference` block as defined below.

      * `offer` (`str`)
      * `publisher` (`str`)
      * `sku` (`str`) - The Virtual Machine SKU for the Scale Set, such as `Standard_F2`.
      * `version` (`str`)
    """
    tags: pulumi.Output[dict]
    """
    A mapping of tags which should be assigned to this Virtual Machine Scale Set.
    """
    unique_id: pulumi.Output[str]
    """
    The Unique ID for this Linux Virtual Machine Scale Set.
    """
    upgrade_mode: pulumi.Output[str]
    """
    Specifies how Upgrades (e.g. changing the Image/SKU) should be performed to Virtual Machine Instances. Possible values are `Automatic`, `Manual` and `Rolling`. Defaults to `Manual`.
    """
    zone_balance: pulumi.Output[bool]
    """
    Should the Virtual Machines in this Scale Set be strictly evenly distributed across Availability Zones? Defaults to `false`. Changing this forces a new resource to be created.
    """
    zones: pulumi.Output[list]
    """
    A list of Availability Zones in which the Virtual Machines in this Scale Set should be created in. Changing this forces a new resource to be created.
    """
    def __init__(__self__, resource_name, opts=None, additional_capabilities=None, admin_password=None, admin_ssh_keys=None, admin_username=None, automatic_os_upgrade_policy=None, boot_diagnostics=None, computer_name_prefix=None, custom_data=None, data_disks=None, disable_password_authentication=None, do_not_run_extensions_on_overprovisioned_machines=None, eviction_policy=None, health_probe_id=None, identity=None, instances=None, location=None, max_bid_price=None, name=None, network_interfaces=None, os_disk=None, overprovision=None, plan=None, priority=None, provision_vm_agent=None, proximity_placement_group_id=None, resource_group_name=None, rolling_upgrade_policy=None, secrets=None, single_placement_group=None, sku=None, source_image_id=None, source_image_reference=None, tags=None, upgrade_mode=None, zone_balance=None, zones=None, __props__=None, __name__=None, __opts__=None):
        """
        Create a LinuxVirtualMachineScaleSet resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[dict] additional_capabilities: A `additional_capabilities` block as defined below.
        :param pulumi.Input[str] admin_password: The Password which should be used for the local-administrator on this Virtual Machine. Changing this forces a new resource to be created.
        :param pulumi.Input[list] admin_ssh_keys: One or more `admin_ssh_key` blocks as defined below.
        :param pulumi.Input[str] admin_username: The username of the local administrator on each Virtual Machine Scale Set instance. Changing this forces a new resource to be created.
        :param pulumi.Input[dict] automatic_os_upgrade_policy: A `automatic_os_upgrade_policy` block as defined below. This is Required and can only be specified when `upgrade_mode` is set to `Automatic`.
        :param pulumi.Input[dict] boot_diagnostics: A `boot_diagnostics` block as defined below.
        :param pulumi.Input[str] computer_name_prefix: The prefix which should be used for the name of the Virtual Machines in this Scale Set. If unspecified this defaults to the value for the `name` field.
        :param pulumi.Input[str] custom_data: The Base64-Encoded Custom Data which should be used for this Virtual Machine Scale Set.
        :param pulumi.Input[list] data_disks: One or more `data_disk` blocks as defined below.
        :param pulumi.Input[bool] disable_password_authentication: Should Password Authentication be disabled on this Virtual Machine Scale Set? Defaults to `true`.
        :param pulumi.Input[bool] do_not_run_extensions_on_overprovisioned_machines: Should Virtual Machine Extensions be run on Overprovisioned Virtual Machines in the Scale Set? Defaults to `false`.
        :param pulumi.Input[str] eviction_policy: The Policy which should be used Virtual Machines are Evicted from the Scale Set. Changing this forces a new resource to be created.
        :param pulumi.Input[str] health_probe_id: The ID of a Load Balancer Probe which should be used to determine the health of an instance. Changing this forces a new resource to be created. This is Required and can only be specified when `upgrade_mode` is set to `Automatic` or `Rolling`.
        :param pulumi.Input[dict] identity: A `identity` block as defined below.
        :param pulumi.Input[float] instances: The number of Virtual Machines in the Scale Set.
        :param pulumi.Input[str] location: The Azure location where the Linux Virtual Machine Scale Set should exist. Changing this forces a new resource to be created.
        :param pulumi.Input[float] max_bid_price: The maximum price you're willing to pay for each Virtual Machine in this Scale Set, in US Dollars; which must be greater than the current spot price. If this bid price falls below the current spot price the Virtual Machines in the Scale Set will be evicted using the `eviction_policy`. Defaults to `-1`, which means that each Virtual Machine in this Scale Set should not be evicted for price reasons.
        :param pulumi.Input[str] name: The name of the Linux Virtual Machine Scale Set. Changing this forces a new resource to be created.
        :param pulumi.Input[list] network_interfaces: One or more `network_interface` blocks as defined below.
        :param pulumi.Input[dict] os_disk: An `os_disk` block as defined below.
        :param pulumi.Input[bool] overprovision: Should Azure over-provision Virtual Machines in this Scale Set? This means that multiple Virtual Machines will be provisioned and Azure will keep the instances which become available first - which improves provisioning success rates and improves deployment time. You're not billed for these over-provisioned VM's and they don't count towards the Subscription Quota. Defaults to `false`.
        :param pulumi.Input[str] priority: The Priority of this Virtual Machine Scale Set. Possible values are `Regular` and `Spot`. Defaults to `Regular`. Changing this value forces a new resource.
        :param pulumi.Input[bool] provision_vm_agent: Should the Azure VM Agent be provisioned on each Virtual Machine in the Scale Set? Defaults to `true`. Changing this value forces a new resource to be created.
        :param pulumi.Input[str] proximity_placement_group_id: The ID of the Proximity Placement Group in which the Virtual Machine Scale Set should be assigned to. Changing this forces a new resource to be created.
        :param pulumi.Input[str] resource_group_name: The name of the Resource Group in which the Linux Virtual Machine Scale Set should be exist. Changing this forces a new resource to be created.
        :param pulumi.Input[dict] rolling_upgrade_policy: A `rolling_upgrade_policy` block as defined below. This is Required and can only be specified when `upgrade_mode` is set to `Automatic` or `Rolling`.
        :param pulumi.Input[list] secrets: One or more `secret` blocks as defined below.
        :param pulumi.Input[bool] single_placement_group: Should this Virtual Machine Scale Set be limited to a Single Placement Group, which means the number of instances will be capped at 100 Virtual Machines. Defaults to `true`.
        :param pulumi.Input[str] sku: The Virtual Machine SKU for the Scale Set, such as `Standard_F2`.
        :param pulumi.Input[str] source_image_id: The ID of an Image which each Virtual Machine in this Scale Set should be based on.
        :param pulumi.Input[dict] source_image_reference: A `source_image_reference` block as defined below.
        :param pulumi.Input[dict] tags: A mapping of tags which should be assigned to this Virtual Machine Scale Set.
        :param pulumi.Input[str] upgrade_mode: Specifies how Upgrades (e.g. changing the Image/SKU) should be performed to Virtual Machine Instances. Possible values are `Automatic`, `Manual` and `Rolling`. Defaults to `Manual`.
        :param pulumi.Input[bool] zone_balance: Should the Virtual Machines in this Scale Set be strictly evenly distributed across Availability Zones? Defaults to `false`. Changing this forces a new resource to be created.
        :param pulumi.Input[list] zones: A list of Availability Zones in which the Virtual Machines in this Scale Set should be created in. Changing this forces a new resource to be created.

        The **additional_capabilities** object supports the following:

          * `ultraSsdEnabled` (`pulumi.Input[bool]`)

        The **admin_ssh_keys** object supports the following:

          * `publicKey` (`pulumi.Input[str]`)
          * `username` (`pulumi.Input[str]`)

        The **automatic_os_upgrade_policy** object supports the following:

          * `disableAutomaticRollback` (`pulumi.Input[bool]`)
          * `enableAutomaticOsUpgrade` (`pulumi.Input[bool]`)

        The **boot_diagnostics** object supports the following:

          * `storageAccountUri` (`pulumi.Input[str]`)

        The **data_disks** object supports the following:

          * `caching` (`pulumi.Input[str]`)
          * `disk_encryption_set_id` (`pulumi.Input[str]`)
          * `disk_size_gb` (`pulumi.Input[float]`)
          * `lun` (`pulumi.Input[float]`)
          * `storage_account_type` (`pulumi.Input[str]`)
          * `write_accelerator_enabled` (`pulumi.Input[bool]`)

        The **identity** object supports the following:

          * `identityIds` (`pulumi.Input[list]`)
          * `principal_id` (`pulumi.Input[str]`) - The ID of the System Managed Service Principal.
          * `type` (`pulumi.Input[str]`)

        The **network_interfaces** object supports the following:

          * `dns_servers` (`pulumi.Input[list]`)
          * `enable_accelerated_networking` (`pulumi.Input[bool]`)
          * `enable_ip_forwarding` (`pulumi.Input[bool]`)
          * `ip_configurations` (`pulumi.Input[list]`)
            * `applicationGatewayBackendAddressPoolIds` (`pulumi.Input[list]`)
            * `applicationSecurityGroupIds` (`pulumi.Input[list]`)
            * `loadBalancerBackendAddressPoolIds` (`pulumi.Input[list]`)
            * `loadBalancerInboundNatRulesIds` (`pulumi.Input[list]`)
            * `name` (`pulumi.Input[str]`) - The name of the Linux Virtual Machine Scale Set. Changing this forces a new resource to be created.
            * `primary` (`pulumi.Input[bool]`)
            * `public_ip_addresses` (`pulumi.Input[list]`)
              * `domain_name_label` (`pulumi.Input[str]`)
              * `idle_timeout_in_minutes` (`pulumi.Input[float]`)
              * `ipTags` (`pulumi.Input[list]`)
                * `tag` (`pulumi.Input[str]`)
                * `type` (`pulumi.Input[str]`)

              * `name` (`pulumi.Input[str]`) - The name of the Linux Virtual Machine Scale Set. Changing this forces a new resource to be created.
              * `public_ip_prefix_id` (`pulumi.Input[str]`)

            * `subnet_id` (`pulumi.Input[str]`)
            * `version` (`pulumi.Input[str]`)

          * `name` (`pulumi.Input[str]`) - The name of the Linux Virtual Machine Scale Set. Changing this forces a new resource to be created.
          * `network_security_group_id` (`pulumi.Input[str]`)
          * `primary` (`pulumi.Input[bool]`)

        The **os_disk** object supports the following:

          * `caching` (`pulumi.Input[str]`)
          * `diffDiskSettings` (`pulumi.Input[dict]`)
            * `option` (`pulumi.Input[str]`)

          * `disk_encryption_set_id` (`pulumi.Input[str]`)
          * `disk_size_gb` (`pulumi.Input[float]`)
          * `storage_account_type` (`pulumi.Input[str]`)
          * `write_accelerator_enabled` (`pulumi.Input[bool]`)

        The **plan** object supports the following:

          * `name` (`pulumi.Input[str]`) - The name of the Linux Virtual Machine Scale Set. Changing this forces a new resource to be created.
          * `product` (`pulumi.Input[str]`)
          * `publisher` (`pulumi.Input[str]`)

        The **rolling_upgrade_policy** object supports the following:

          * `maxBatchInstancePercent` (`pulumi.Input[float]`)
          * `maxUnhealthyInstancePercent` (`pulumi.Input[float]`)
          * `maxUnhealthyUpgradedInstancePercent` (`pulumi.Input[float]`)
          * `pauseTimeBetweenBatches` (`pulumi.Input[str]`)

        The **secrets** object supports the following:

          * `certificates` (`pulumi.Input[list]`)
            * `url` (`pulumi.Input[str]`)

          * `key_vault_id` (`pulumi.Input[str]`)

        The **source_image_reference** object supports the following:

          * `offer` (`pulumi.Input[str]`)
          * `publisher` (`pulumi.Input[str]`)
          * `sku` (`pulumi.Input[str]`) - The Virtual Machine SKU for the Scale Set, such as `Standard_F2`.
          * `version` (`pulumi.Input[str]`)
        """
        if __name__ is not None:
            warnings.warn("explicit use of __name__ is deprecated", DeprecationWarning)
            resource_name = __name__
        if __opts__ is not None:
            warnings.warn("explicit use of __opts__ is deprecated, use 'opts' instead", DeprecationWarning)
            opts = __opts__
        if opts is None:
            opts = pulumi.ResourceOptions()
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.version is None:
            opts.version = utilities.get_version()
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = dict()

            __props__['additional_capabilities'] = additional_capabilities
            __props__['admin_password'] = admin_password
            __props__['admin_ssh_keys'] = admin_ssh_keys
            if admin_username is None:
                raise TypeError("Missing required property 'admin_username'")
            __props__['admin_username'] = admin_username
            __props__['automatic_os_upgrade_policy'] = automatic_os_upgrade_policy
            __props__['boot_diagnostics'] = boot_diagnostics
            __props__['computer_name_prefix'] = computer_name_prefix
            __props__['custom_data'] = custom_data
            __props__['data_disks'] = data_disks
            __props__['disable_password_authentication'] = disable_password_authentication
            __props__['do_not_run_extensions_on_overprovisioned_machines'] = do_not_run_extensions_on_overprovisioned_machines
            __props__['eviction_policy'] = eviction_policy
            __props__['health_probe_id'] = health_probe_id
            __props__['identity'] = identity
            if instances is None:
                raise TypeError("Missing required property 'instances'")
            __props__['instances'] = instances
            __props__['location'] = location
            __props__['max_bid_price'] = max_bid_price
            __props__['name'] = name
            if network_interfaces is None:
                raise TypeError("Missing required property 'network_interfaces'")
            __props__['network_interfaces'] = network_interfaces
            if os_disk is None:
                raise TypeError("Missing required property 'os_disk'")
            __props__['os_disk'] = os_disk
            __props__['overprovision'] = overprovision
            __props__['plan'] = plan
            __props__['priority'] = priority
            __props__['provision_vm_agent'] = provision_vm_agent
            __props__['proximity_placement_group_id'] = proximity_placement_group_id
            if resource_group_name is None:
                raise TypeError("Missing required property 'resource_group_name'")
            __props__['resource_group_name'] = resource_group_name
            __props__['rolling_upgrade_policy'] = rolling_upgrade_policy
            __props__['secrets'] = secrets
            __props__['single_placement_group'] = single_placement_group
            if sku is None:
                raise TypeError("Missing required property 'sku'")
            __props__['sku'] = sku
            __props__['source_image_id'] = source_image_id
            __props__['source_image_reference'] = source_image_reference
            __props__['tags'] = tags
            __props__['upgrade_mode'] = upgrade_mode
            __props__['zone_balance'] = zone_balance
            __props__['zones'] = zones
            __props__['unique_id'] = None
        super(LinuxVirtualMachineScaleSet, __self__).__init__(
            'azure:compute/linuxVirtualMachineScaleSet:LinuxVirtualMachineScaleSet',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name, id, opts=None, additional_capabilities=None, admin_password=None, admin_ssh_keys=None, admin_username=None, automatic_os_upgrade_policy=None, boot_diagnostics=None, computer_name_prefix=None, custom_data=None, data_disks=None, disable_password_authentication=None, do_not_run_extensions_on_overprovisioned_machines=None, eviction_policy=None, health_probe_id=None, identity=None, instances=None, location=None, max_bid_price=None, name=None, network_interfaces=None, os_disk=None, overprovision=None, plan=None, priority=None, provision_vm_agent=None, proximity_placement_group_id=None, resource_group_name=None, rolling_upgrade_policy=None, secrets=None, single_placement_group=None, sku=None, source_image_id=None, source_image_reference=None, tags=None, unique_id=None, upgrade_mode=None, zone_balance=None, zones=None):
        """
        Get an existing LinuxVirtualMachineScaleSet resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param str id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[dict] additional_capabilities: A `additional_capabilities` block as defined below.
        :param pulumi.Input[str] admin_password: The Password which should be used for the local-administrator on this Virtual Machine. Changing this forces a new resource to be created.
        :param pulumi.Input[list] admin_ssh_keys: One or more `admin_ssh_key` blocks as defined below.
        :param pulumi.Input[str] admin_username: The username of the local administrator on each Virtual Machine Scale Set instance. Changing this forces a new resource to be created.
        :param pulumi.Input[dict] automatic_os_upgrade_policy: A `automatic_os_upgrade_policy` block as defined below. This is Required and can only be specified when `upgrade_mode` is set to `Automatic`.
        :param pulumi.Input[dict] boot_diagnostics: A `boot_diagnostics` block as defined below.
        :param pulumi.Input[str] computer_name_prefix: The prefix which should be used for the name of the Virtual Machines in this Scale Set. If unspecified this defaults to the value for the `name` field.
        :param pulumi.Input[str] custom_data: The Base64-Encoded Custom Data which should be used for this Virtual Machine Scale Set.
        :param pulumi.Input[list] data_disks: One or more `data_disk` blocks as defined below.
        :param pulumi.Input[bool] disable_password_authentication: Should Password Authentication be disabled on this Virtual Machine Scale Set? Defaults to `true`.
        :param pulumi.Input[bool] do_not_run_extensions_on_overprovisioned_machines: Should Virtual Machine Extensions be run on Overprovisioned Virtual Machines in the Scale Set? Defaults to `false`.
        :param pulumi.Input[str] eviction_policy: The Policy which should be used Virtual Machines are Evicted from the Scale Set. Changing this forces a new resource to be created.
        :param pulumi.Input[str] health_probe_id: The ID of a Load Balancer Probe which should be used to determine the health of an instance. Changing this forces a new resource to be created. This is Required and can only be specified when `upgrade_mode` is set to `Automatic` or `Rolling`.
        :param pulumi.Input[dict] identity: A `identity` block as defined below.
        :param pulumi.Input[float] instances: The number of Virtual Machines in the Scale Set.
        :param pulumi.Input[str] location: The Azure location where the Linux Virtual Machine Scale Set should exist. Changing this forces a new resource to be created.
        :param pulumi.Input[float] max_bid_price: The maximum price you're willing to pay for each Virtual Machine in this Scale Set, in US Dollars; which must be greater than the current spot price. If this bid price falls below the current spot price the Virtual Machines in the Scale Set will be evicted using the `eviction_policy`. Defaults to `-1`, which means that each Virtual Machine in this Scale Set should not be evicted for price reasons.
        :param pulumi.Input[str] name: The name of the Linux Virtual Machine Scale Set. Changing this forces a new resource to be created.
        :param pulumi.Input[list] network_interfaces: One or more `network_interface` blocks as defined below.
        :param pulumi.Input[dict] os_disk: An `os_disk` block as defined below.
        :param pulumi.Input[bool] overprovision: Should Azure over-provision Virtual Machines in this Scale Set? This means that multiple Virtual Machines will be provisioned and Azure will keep the instances which become available first - which improves provisioning success rates and improves deployment time. You're not billed for these over-provisioned VM's and they don't count towards the Subscription Quota. Defaults to `false`.
        :param pulumi.Input[str] priority: The Priority of this Virtual Machine Scale Set. Possible values are `Regular` and `Spot`. Defaults to `Regular`. Changing this value forces a new resource.
        :param pulumi.Input[bool] provision_vm_agent: Should the Azure VM Agent be provisioned on each Virtual Machine in the Scale Set? Defaults to `true`. Changing this value forces a new resource to be created.
        :param pulumi.Input[str] proximity_placement_group_id: The ID of the Proximity Placement Group in which the Virtual Machine Scale Set should be assigned to. Changing this forces a new resource to be created.
        :param pulumi.Input[str] resource_group_name: The name of the Resource Group in which the Linux Virtual Machine Scale Set should be exist. Changing this forces a new resource to be created.
        :param pulumi.Input[dict] rolling_upgrade_policy: A `rolling_upgrade_policy` block as defined below. This is Required and can only be specified when `upgrade_mode` is set to `Automatic` or `Rolling`.
        :param pulumi.Input[list] secrets: One or more `secret` blocks as defined below.
        :param pulumi.Input[bool] single_placement_group: Should this Virtual Machine Scale Set be limited to a Single Placement Group, which means the number of instances will be capped at 100 Virtual Machines. Defaults to `true`.
        :param pulumi.Input[str] sku: The Virtual Machine SKU for the Scale Set, such as `Standard_F2`.
        :param pulumi.Input[str] source_image_id: The ID of an Image which each Virtual Machine in this Scale Set should be based on.
        :param pulumi.Input[dict] source_image_reference: A `source_image_reference` block as defined below.
        :param pulumi.Input[dict] tags: A mapping of tags which should be assigned to this Virtual Machine Scale Set.
        :param pulumi.Input[str] unique_id: The Unique ID for this Linux Virtual Machine Scale Set.
        :param pulumi.Input[str] upgrade_mode: Specifies how Upgrades (e.g. changing the Image/SKU) should be performed to Virtual Machine Instances. Possible values are `Automatic`, `Manual` and `Rolling`. Defaults to `Manual`.
        :param pulumi.Input[bool] zone_balance: Should the Virtual Machines in this Scale Set be strictly evenly distributed across Availability Zones? Defaults to `false`. Changing this forces a new resource to be created.
        :param pulumi.Input[list] zones: A list of Availability Zones in which the Virtual Machines in this Scale Set should be created in. Changing this forces a new resource to be created.

        The **additional_capabilities** object supports the following:

          * `ultraSsdEnabled` (`pulumi.Input[bool]`)

        The **admin_ssh_keys** object supports the following:

          * `publicKey` (`pulumi.Input[str]`)
          * `username` (`pulumi.Input[str]`)

        The **automatic_os_upgrade_policy** object supports the following:

          * `disableAutomaticRollback` (`pulumi.Input[bool]`)
          * `enableAutomaticOsUpgrade` (`pulumi.Input[bool]`)

        The **boot_diagnostics** object supports the following:

          * `storageAccountUri` (`pulumi.Input[str]`)

        The **data_disks** object supports the following:

          * `caching` (`pulumi.Input[str]`)
          * `disk_encryption_set_id` (`pulumi.Input[str]`)
          * `disk_size_gb` (`pulumi.Input[float]`)
          * `lun` (`pulumi.Input[float]`)
          * `storage_account_type` (`pulumi.Input[str]`)
          * `write_accelerator_enabled` (`pulumi.Input[bool]`)

        The **identity** object supports the following:

          * `identityIds` (`pulumi.Input[list]`)
          * `principal_id` (`pulumi.Input[str]`) - The ID of the System Managed Service Principal.
          * `type` (`pulumi.Input[str]`)

        The **network_interfaces** object supports the following:

          * `dns_servers` (`pulumi.Input[list]`)
          * `enable_accelerated_networking` (`pulumi.Input[bool]`)
          * `enable_ip_forwarding` (`pulumi.Input[bool]`)
          * `ip_configurations` (`pulumi.Input[list]`)
            * `applicationGatewayBackendAddressPoolIds` (`pulumi.Input[list]`)
            * `applicationSecurityGroupIds` (`pulumi.Input[list]`)
            * `loadBalancerBackendAddressPoolIds` (`pulumi.Input[list]`)
            * `loadBalancerInboundNatRulesIds` (`pulumi.Input[list]`)
            * `name` (`pulumi.Input[str]`) - The name of the Linux Virtual Machine Scale Set. Changing this forces a new resource to be created.
            * `primary` (`pulumi.Input[bool]`)
            * `public_ip_addresses` (`pulumi.Input[list]`)
              * `domain_name_label` (`pulumi.Input[str]`)
              * `idle_timeout_in_minutes` (`pulumi.Input[float]`)
              * `ipTags` (`pulumi.Input[list]`)
                * `tag` (`pulumi.Input[str]`)
                * `type` (`pulumi.Input[str]`)

              * `name` (`pulumi.Input[str]`) - The name of the Linux Virtual Machine Scale Set. Changing this forces a new resource to be created.
              * `public_ip_prefix_id` (`pulumi.Input[str]`)

            * `subnet_id` (`pulumi.Input[str]`)
            * `version` (`pulumi.Input[str]`)

          * `name` (`pulumi.Input[str]`) - The name of the Linux Virtual Machine Scale Set. Changing this forces a new resource to be created.
          * `network_security_group_id` (`pulumi.Input[str]`)
          * `primary` (`pulumi.Input[bool]`)

        The **os_disk** object supports the following:

          * `caching` (`pulumi.Input[str]`)
          * `diffDiskSettings` (`pulumi.Input[dict]`)
            * `option` (`pulumi.Input[str]`)

          * `disk_encryption_set_id` (`pulumi.Input[str]`)
          * `disk_size_gb` (`pulumi.Input[float]`)
          * `storage_account_type` (`pulumi.Input[str]`)
          * `write_accelerator_enabled` (`pulumi.Input[bool]`)

        The **plan** object supports the following:

          * `name` (`pulumi.Input[str]`) - The name of the Linux Virtual Machine Scale Set. Changing this forces a new resource to be created.
          * `product` (`pulumi.Input[str]`)
          * `publisher` (`pulumi.Input[str]`)

        The **rolling_upgrade_policy** object supports the following:

          * `maxBatchInstancePercent` (`pulumi.Input[float]`)
          * `maxUnhealthyInstancePercent` (`pulumi.Input[float]`)
          * `maxUnhealthyUpgradedInstancePercent` (`pulumi.Input[float]`)
          * `pauseTimeBetweenBatches` (`pulumi.Input[str]`)

        The **secrets** object supports the following:

          * `certificates` (`pulumi.Input[list]`)
            * `url` (`pulumi.Input[str]`)

          * `key_vault_id` (`pulumi.Input[str]`)

        The **source_image_reference** object supports the following:

          * `offer` (`pulumi.Input[str]`)
          * `publisher` (`pulumi.Input[str]`)
          * `sku` (`pulumi.Input[str]`) - The Virtual Machine SKU for the Scale Set, such as `Standard_F2`.
          * `version` (`pulumi.Input[str]`)
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = dict()

        __props__["additional_capabilities"] = additional_capabilities
        __props__["admin_password"] = admin_password
        __props__["admin_ssh_keys"] = admin_ssh_keys
        __props__["admin_username"] = admin_username
        __props__["automatic_os_upgrade_policy"] = automatic_os_upgrade_policy
        __props__["boot_diagnostics"] = boot_diagnostics
        __props__["computer_name_prefix"] = computer_name_prefix
        __props__["custom_data"] = custom_data
        __props__["data_disks"] = data_disks
        __props__["disable_password_authentication"] = disable_password_authentication
        __props__["do_not_run_extensions_on_overprovisioned_machines"] = do_not_run_extensions_on_overprovisioned_machines
        __props__["eviction_policy"] = eviction_policy
        __props__["health_probe_id"] = health_probe_id
        __props__["identity"] = identity
        __props__["instances"] = instances
        __props__["location"] = location
        __props__["max_bid_price"] = max_bid_price
        __props__["name"] = name
        __props__["network_interfaces"] = network_interfaces
        __props__["os_disk"] = os_disk
        __props__["overprovision"] = overprovision
        __props__["plan"] = plan
        __props__["priority"] = priority
        __props__["provision_vm_agent"] = provision_vm_agent
        __props__["proximity_placement_group_id"] = proximity_placement_group_id
        __props__["resource_group_name"] = resource_group_name
        __props__["rolling_upgrade_policy"] = rolling_upgrade_policy
        __props__["secrets"] = secrets
        __props__["single_placement_group"] = single_placement_group
        __props__["sku"] = sku
        __props__["source_image_id"] = source_image_id
        __props__["source_image_reference"] = source_image_reference
        __props__["tags"] = tags
        __props__["unique_id"] = unique_id
        __props__["upgrade_mode"] = upgrade_mode
        __props__["zone_balance"] = zone_balance
        __props__["zones"] = zones
        return LinuxVirtualMachineScaleSet(resource_name, opts=opts, __props__=__props__)
    def translate_output_property(self, prop):
        return tables._CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop

    def translate_input_property(self, prop):
        return tables._SNAKE_TO_CAMEL_CASE_TABLE.get(prop) or prop

