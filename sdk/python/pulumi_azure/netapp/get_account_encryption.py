# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities

__all__ = [
    'GetAccountEncryptionResult',
    'AwaitableGetAccountEncryptionResult',
    'get_account_encryption',
    'get_account_encryption_output',
]

@pulumi.output_type
class GetAccountEncryptionResult:
    """
    A collection of values returned by getAccountEncryption.
    """
    def __init__(__self__, encryption_key=None, id=None, netapp_account_id=None, system_assigned_identity_principal_id=None, user_assigned_identity_id=None):
        if encryption_key and not isinstance(encryption_key, str):
            raise TypeError("Expected argument 'encryption_key' to be a str")
        pulumi.set(__self__, "encryption_key", encryption_key)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if netapp_account_id and not isinstance(netapp_account_id, str):
            raise TypeError("Expected argument 'netapp_account_id' to be a str")
        pulumi.set(__self__, "netapp_account_id", netapp_account_id)
        if system_assigned_identity_principal_id and not isinstance(system_assigned_identity_principal_id, str):
            raise TypeError("Expected argument 'system_assigned_identity_principal_id' to be a str")
        pulumi.set(__self__, "system_assigned_identity_principal_id", system_assigned_identity_principal_id)
        if user_assigned_identity_id and not isinstance(user_assigned_identity_id, str):
            raise TypeError("Expected argument 'user_assigned_identity_id' to be a str")
        pulumi.set(__self__, "user_assigned_identity_id", user_assigned_identity_id)

    @property
    @pulumi.getter(name="encryptionKey")
    def encryption_key(self) -> Optional[str]:
        return pulumi.get(self, "encryption_key")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="netappAccountId")
    def netapp_account_id(self) -> str:
        return pulumi.get(self, "netapp_account_id")

    @property
    @pulumi.getter(name="systemAssignedIdentityPrincipalId")
    def system_assigned_identity_principal_id(self) -> Optional[str]:
        return pulumi.get(self, "system_assigned_identity_principal_id")

    @property
    @pulumi.getter(name="userAssignedIdentityId")
    def user_assigned_identity_id(self) -> Optional[str]:
        return pulumi.get(self, "user_assigned_identity_id")


class AwaitableGetAccountEncryptionResult(GetAccountEncryptionResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetAccountEncryptionResult(
            encryption_key=self.encryption_key,
            id=self.id,
            netapp_account_id=self.netapp_account_id,
            system_assigned_identity_principal_id=self.system_assigned_identity_principal_id,
            user_assigned_identity_id=self.user_assigned_identity_id)


def get_account_encryption(encryption_key: Optional[str] = None,
                           netapp_account_id: Optional[str] = None,
                           system_assigned_identity_principal_id: Optional[str] = None,
                           user_assigned_identity_id: Optional[str] = None,
                           opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetAccountEncryptionResult:
    """
    Use this data source to access information about an existing NetApp Account Encryption Resource.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_azure as azure

    example = azure.netapp.get_account_encryption(netapp_account_id="/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.NetApp/netAppAccounts/account1")
    pulumi.export("id", example.id)
    ```


    :param str encryption_key: The key vault encryption key.
    :param str netapp_account_id: The ID of the NetApp account where customer managed keys-based encryption is enabled.
    :param str system_assigned_identity_principal_id: The ID of the System Assigned Manged Identity.
    :param str user_assigned_identity_id: The ID of the User Assigned Managed Identity.
    """
    __args__ = dict()
    __args__['encryptionKey'] = encryption_key
    __args__['netappAccountId'] = netapp_account_id
    __args__['systemAssignedIdentityPrincipalId'] = system_assigned_identity_principal_id
    __args__['userAssignedIdentityId'] = user_assigned_identity_id
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('azure:netapp/getAccountEncryption:getAccountEncryption', __args__, opts=opts, typ=GetAccountEncryptionResult).value

    return AwaitableGetAccountEncryptionResult(
        encryption_key=pulumi.get(__ret__, 'encryption_key'),
        id=pulumi.get(__ret__, 'id'),
        netapp_account_id=pulumi.get(__ret__, 'netapp_account_id'),
        system_assigned_identity_principal_id=pulumi.get(__ret__, 'system_assigned_identity_principal_id'),
        user_assigned_identity_id=pulumi.get(__ret__, 'user_assigned_identity_id'))


@_utilities.lift_output_func(get_account_encryption)
def get_account_encryption_output(encryption_key: Optional[pulumi.Input[Optional[str]]] = None,
                                  netapp_account_id: Optional[pulumi.Input[str]] = None,
                                  system_assigned_identity_principal_id: Optional[pulumi.Input[Optional[str]]] = None,
                                  user_assigned_identity_id: Optional[pulumi.Input[Optional[str]]] = None,
                                  opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetAccountEncryptionResult]:
    """
    Use this data source to access information about an existing NetApp Account Encryption Resource.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_azure as azure

    example = azure.netapp.get_account_encryption(netapp_account_id="/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.NetApp/netAppAccounts/account1")
    pulumi.export("id", example.id)
    ```


    :param str encryption_key: The key vault encryption key.
    :param str netapp_account_id: The ID of the NetApp account where customer managed keys-based encryption is enabled.
    :param str system_assigned_identity_principal_id: The ID of the System Assigned Manged Identity.
    :param str user_assigned_identity_id: The ID of the User Assigned Managed Identity.
    """
    ...
