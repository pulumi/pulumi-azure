# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Callable, Mapping, Optional, Sequence, Union, overload
from .. import _utilities

__all__ = ['ServerVulnerabilityAssessmentArgs', 'ServerVulnerabilityAssessment']

@pulumi.input_type
class ServerVulnerabilityAssessmentArgs:
    def __init__(__self__, *,
                 hybrid_machine_id: Optional[pulumi.Input[str]] = None,
                 virtual_machine_id: Optional[pulumi.Input[str]] = None):
        """
        The set of arguments for constructing a ServerVulnerabilityAssessment resource.
        :param pulumi.Input[str] hybrid_machine_id: The ID of the Azure ARC server to be monitored by vulnerability assessment. Changing this forces a new resource to be created.
               
               > **NOTE:** One of either `virtual_machine_id` or `hybrid_machine_id` must be set.
        :param pulumi.Input[str] virtual_machine_id: The ID of the virtual machine to be monitored by vulnerability assessment. Changing this forces a new resource to be created.
               
               > **NOTE:** One of either `virtual_machine_id` or `hybrid_machine_id` must be set.
        """
        ServerVulnerabilityAssessmentArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            hybrid_machine_id=hybrid_machine_id,
            virtual_machine_id=virtual_machine_id,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             hybrid_machine_id: Optional[pulumi.Input[str]] = None,
             virtual_machine_id: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions] = None,
             **kwargs):
        if hybrid_machine_id is None and 'hybridMachineId' in kwargs:
            hybrid_machine_id = kwargs['hybridMachineId']
        if virtual_machine_id is None and 'virtualMachineId' in kwargs:
            virtual_machine_id = kwargs['virtualMachineId']

        if hybrid_machine_id is not None:
            _setter("hybrid_machine_id", hybrid_machine_id)
        if virtual_machine_id is not None:
            _setter("virtual_machine_id", virtual_machine_id)

    @property
    @pulumi.getter(name="hybridMachineId")
    def hybrid_machine_id(self) -> Optional[pulumi.Input[str]]:
        """
        The ID of the Azure ARC server to be monitored by vulnerability assessment. Changing this forces a new resource to be created.

        > **NOTE:** One of either `virtual_machine_id` or `hybrid_machine_id` must be set.
        """
        return pulumi.get(self, "hybrid_machine_id")

    @hybrid_machine_id.setter
    def hybrid_machine_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "hybrid_machine_id", value)

    @property
    @pulumi.getter(name="virtualMachineId")
    def virtual_machine_id(self) -> Optional[pulumi.Input[str]]:
        """
        The ID of the virtual machine to be monitored by vulnerability assessment. Changing this forces a new resource to be created.

        > **NOTE:** One of either `virtual_machine_id` or `hybrid_machine_id` must be set.
        """
        return pulumi.get(self, "virtual_machine_id")

    @virtual_machine_id.setter
    def virtual_machine_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "virtual_machine_id", value)


@pulumi.input_type
class _ServerVulnerabilityAssessmentState:
    def __init__(__self__, *,
                 hybrid_machine_id: Optional[pulumi.Input[str]] = None,
                 virtual_machine_id: Optional[pulumi.Input[str]] = None):
        """
        Input properties used for looking up and filtering ServerVulnerabilityAssessment resources.
        :param pulumi.Input[str] hybrid_machine_id: The ID of the Azure ARC server to be monitored by vulnerability assessment. Changing this forces a new resource to be created.
               
               > **NOTE:** One of either `virtual_machine_id` or `hybrid_machine_id` must be set.
        :param pulumi.Input[str] virtual_machine_id: The ID of the virtual machine to be monitored by vulnerability assessment. Changing this forces a new resource to be created.
               
               > **NOTE:** One of either `virtual_machine_id` or `hybrid_machine_id` must be set.
        """
        _ServerVulnerabilityAssessmentState._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            hybrid_machine_id=hybrid_machine_id,
            virtual_machine_id=virtual_machine_id,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             hybrid_machine_id: Optional[pulumi.Input[str]] = None,
             virtual_machine_id: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions] = None,
             **kwargs):
        if hybrid_machine_id is None and 'hybridMachineId' in kwargs:
            hybrid_machine_id = kwargs['hybridMachineId']
        if virtual_machine_id is None and 'virtualMachineId' in kwargs:
            virtual_machine_id = kwargs['virtualMachineId']

        if hybrid_machine_id is not None:
            _setter("hybrid_machine_id", hybrid_machine_id)
        if virtual_machine_id is not None:
            _setter("virtual_machine_id", virtual_machine_id)

    @property
    @pulumi.getter(name="hybridMachineId")
    def hybrid_machine_id(self) -> Optional[pulumi.Input[str]]:
        """
        The ID of the Azure ARC server to be monitored by vulnerability assessment. Changing this forces a new resource to be created.

        > **NOTE:** One of either `virtual_machine_id` or `hybrid_machine_id` must be set.
        """
        return pulumi.get(self, "hybrid_machine_id")

    @hybrid_machine_id.setter
    def hybrid_machine_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "hybrid_machine_id", value)

    @property
    @pulumi.getter(name="virtualMachineId")
    def virtual_machine_id(self) -> Optional[pulumi.Input[str]]:
        """
        The ID of the virtual machine to be monitored by vulnerability assessment. Changing this forces a new resource to be created.

        > **NOTE:** One of either `virtual_machine_id` or `hybrid_machine_id` must be set.
        """
        return pulumi.get(self, "virtual_machine_id")

    @virtual_machine_id.setter
    def virtual_machine_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "virtual_machine_id", value)


class ServerVulnerabilityAssessment(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 hybrid_machine_id: Optional[pulumi.Input[str]] = None,
                 virtual_machine_id: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        """
        Manages an Azure Server Vulnerability Assessment (Qualys) to a VM.

        > **NOTE** This resource has been deprecated in favour of the `securitycenter.ServerVulnerabilityAssessmentVirtualMachine` resource and will be removed in v4.0 of the AzureRM Provider.

        > **NOTE** Azure Defender has to be enabled on the subscription in order for this resource to work.
        See this [documentation](https://docs.microsoft.com/azure/security-center/security-center-get-started) to get started.

        ## Import

        Server Vulnerability Assessments can be imported using the `resource id`, e.g.

        ```sh
         $ pulumi import azure:securitycenter/serverVulnerabilityAssessment:ServerVulnerabilityAssessment example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resource-group-name/providers/Microsoft.Compute/virtualMachines/vm-name/providers/Microsoft.Security/serverVulnerabilityAssessments/Default
        ```

         or

        ```sh
         $ pulumi import azure:securitycenter/serverVulnerabilityAssessment:ServerVulnerabilityAssessment example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resource-group-name/providers/Microsoft.HybridCompute/machines/machine-name/providers/Microsoft.Security/serverVulnerabilityAssessments/Default
        ```

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] hybrid_machine_id: The ID of the Azure ARC server to be monitored by vulnerability assessment. Changing this forces a new resource to be created.
               
               > **NOTE:** One of either `virtual_machine_id` or `hybrid_machine_id` must be set.
        :param pulumi.Input[str] virtual_machine_id: The ID of the virtual machine to be monitored by vulnerability assessment. Changing this forces a new resource to be created.
               
               > **NOTE:** One of either `virtual_machine_id` or `hybrid_machine_id` must be set.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: Optional[ServerVulnerabilityAssessmentArgs] = None,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Manages an Azure Server Vulnerability Assessment (Qualys) to a VM.

        > **NOTE** This resource has been deprecated in favour of the `securitycenter.ServerVulnerabilityAssessmentVirtualMachine` resource and will be removed in v4.0 of the AzureRM Provider.

        > **NOTE** Azure Defender has to be enabled on the subscription in order for this resource to work.
        See this [documentation](https://docs.microsoft.com/azure/security-center/security-center-get-started) to get started.

        ## Import

        Server Vulnerability Assessments can be imported using the `resource id`, e.g.

        ```sh
         $ pulumi import azure:securitycenter/serverVulnerabilityAssessment:ServerVulnerabilityAssessment example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resource-group-name/providers/Microsoft.Compute/virtualMachines/vm-name/providers/Microsoft.Security/serverVulnerabilityAssessments/Default
        ```

         or

        ```sh
         $ pulumi import azure:securitycenter/serverVulnerabilityAssessment:ServerVulnerabilityAssessment example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resource-group-name/providers/Microsoft.HybridCompute/machines/machine-name/providers/Microsoft.Security/serverVulnerabilityAssessments/Default
        ```

        :param str resource_name: The name of the resource.
        :param ServerVulnerabilityAssessmentArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(ServerVulnerabilityAssessmentArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            kwargs = kwargs or {}
            def _setter(key, value):
                kwargs[key] = value
            ServerVulnerabilityAssessmentArgs._configure(_setter, **kwargs)
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 hybrid_machine_id: Optional[pulumi.Input[str]] = None,
                 virtual_machine_id: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = ServerVulnerabilityAssessmentArgs.__new__(ServerVulnerabilityAssessmentArgs)

            __props__.__dict__["hybrid_machine_id"] = hybrid_machine_id
            __props__.__dict__["virtual_machine_id"] = virtual_machine_id
        super(ServerVulnerabilityAssessment, __self__).__init__(
            'azure:securitycenter/serverVulnerabilityAssessment:ServerVulnerabilityAssessment',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            hybrid_machine_id: Optional[pulumi.Input[str]] = None,
            virtual_machine_id: Optional[pulumi.Input[str]] = None) -> 'ServerVulnerabilityAssessment':
        """
        Get an existing ServerVulnerabilityAssessment resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] hybrid_machine_id: The ID of the Azure ARC server to be monitored by vulnerability assessment. Changing this forces a new resource to be created.
               
               > **NOTE:** One of either `virtual_machine_id` or `hybrid_machine_id` must be set.
        :param pulumi.Input[str] virtual_machine_id: The ID of the virtual machine to be monitored by vulnerability assessment. Changing this forces a new resource to be created.
               
               > **NOTE:** One of either `virtual_machine_id` or `hybrid_machine_id` must be set.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _ServerVulnerabilityAssessmentState.__new__(_ServerVulnerabilityAssessmentState)

        __props__.__dict__["hybrid_machine_id"] = hybrid_machine_id
        __props__.__dict__["virtual_machine_id"] = virtual_machine_id
        return ServerVulnerabilityAssessment(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter(name="hybridMachineId")
    def hybrid_machine_id(self) -> pulumi.Output[Optional[str]]:
        """
        The ID of the Azure ARC server to be monitored by vulnerability assessment. Changing this forces a new resource to be created.

        > **NOTE:** One of either `virtual_machine_id` or `hybrid_machine_id` must be set.
        """
        return pulumi.get(self, "hybrid_machine_id")

    @property
    @pulumi.getter(name="virtualMachineId")
    def virtual_machine_id(self) -> pulumi.Output[Optional[str]]:
        """
        The ID of the virtual machine to be monitored by vulnerability assessment. Changing this forces a new resource to be created.

        > **NOTE:** One of either `virtual_machine_id` or `hybrid_machine_id` must be set.
        """
        return pulumi.get(self, "virtual_machine_id")

