# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from . import outputs

__all__ = [
    'GetAutonomousDatabaseBackupsResult',
    'AwaitableGetAutonomousDatabaseBackupsResult',
    'get_autonomous_database_backups',
    'get_autonomous_database_backups_output',
]

@pulumi.output_type
class GetAutonomousDatabaseBackupsResult:
    """
    A collection of values returned by getAutonomousDatabaseBackups.
    """
    def __init__(__self__, autonomous_database_backups=None, autonomous_database_id=None, id=None):
        if autonomous_database_backups and not isinstance(autonomous_database_backups, list):
            raise TypeError("Expected argument 'autonomous_database_backups' to be a list")
        pulumi.set(__self__, "autonomous_database_backups", autonomous_database_backups)
        if autonomous_database_id and not isinstance(autonomous_database_id, str):
            raise TypeError("Expected argument 'autonomous_database_id' to be a str")
        pulumi.set(__self__, "autonomous_database_id", autonomous_database_id)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)

    @_builtins.property
    @pulumi.getter(name="autonomousDatabaseBackups")
    def autonomous_database_backups(self) -> Sequence['outputs.GetAutonomousDatabaseBackupsAutonomousDatabaseBackupResult']:
        """
        An `autonomous_database_backups` block as defined below.
        """
        return pulumi.get(self, "autonomous_database_backups")

    @_builtins.property
    @pulumi.getter(name="autonomousDatabaseId")
    def autonomous_database_id(self) -> _builtins.str:
        return pulumi.get(self, "autonomous_database_id")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")


class AwaitableGetAutonomousDatabaseBackupsResult(GetAutonomousDatabaseBackupsResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetAutonomousDatabaseBackupsResult(
            autonomous_database_backups=self.autonomous_database_backups,
            autonomous_database_id=self.autonomous_database_id,
            id=self.id)


def get_autonomous_database_backups(autonomous_database_id: Optional[_builtins.str] = None,
                                    opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetAutonomousDatabaseBackupsResult:
    """
    Use this data source to access information about existing Autonomous Database Backups.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_azure as azure

    example = azure.oracle.get_autonomous_database_backups(autonomous_database_id=example_azurerm_oracle_autonomous_database["id"])
    ```

    ## API Providers

    <!-- This section is generated, changes will be overwritten -->
    This data source uses the following Azure API Providers:

    * `Oracle.Database` - 2025-03-01


    :param _builtins.str autonomous_database_id: The azureId of the Autonomous Database for which the backups will be listed.
    """
    __args__ = dict()
    __args__['autonomousDatabaseId'] = autonomous_database_id
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('azure:oracle/getAutonomousDatabaseBackups:getAutonomousDatabaseBackups', __args__, opts=opts, typ=GetAutonomousDatabaseBackupsResult).value

    return AwaitableGetAutonomousDatabaseBackupsResult(
        autonomous_database_backups=pulumi.get(__ret__, 'autonomous_database_backups'),
        autonomous_database_id=pulumi.get(__ret__, 'autonomous_database_id'),
        id=pulumi.get(__ret__, 'id'))
def get_autonomous_database_backups_output(autonomous_database_id: Optional[pulumi.Input[_builtins.str]] = None,
                                           opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetAutonomousDatabaseBackupsResult]:
    """
    Use this data source to access information about existing Autonomous Database Backups.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_azure as azure

    example = azure.oracle.get_autonomous_database_backups(autonomous_database_id=example_azurerm_oracle_autonomous_database["id"])
    ```

    ## API Providers

    <!-- This section is generated, changes will be overwritten -->
    This data source uses the following Azure API Providers:

    * `Oracle.Database` - 2025-03-01


    :param _builtins.str autonomous_database_id: The azureId of the Autonomous Database for which the backups will be listed.
    """
    __args__ = dict()
    __args__['autonomousDatabaseId'] = autonomous_database_id
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('azure:oracle/getAutonomousDatabaseBackups:getAutonomousDatabaseBackups', __args__, opts=opts, typ=GetAutonomousDatabaseBackupsResult)
    return __ret__.apply(lambda __response__: GetAutonomousDatabaseBackupsResult(
        autonomous_database_backups=pulumi.get(__response__, 'autonomous_database_backups'),
        autonomous_database_id=pulumi.get(__response__, 'autonomous_database_id'),
        id=pulumi.get(__response__, 'id')))
