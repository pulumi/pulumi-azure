# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import json
import warnings
import pulumi
import pulumi.runtime
from typing import Union
from .. import utilities, tables

class DatabaseVulnerabilityAssessmentRuleBaseline(pulumi.CustomResource):
    baseline_name: pulumi.Output[str]
    """
    The name of the vulnerability assessment rule baseline. Valid options are `default` and `master`. `default` implies a baseline on a database level rule and `master` for server level rule. Defaults to `default`. Changing this forces a new resource to be created.
    """
    baseline_results: pulumi.Output[list]
    """
    A `baseline_result` block as documented below. Multiple blocks can be defined.

      * `results` (`list`) - A list representing a result of the baseline.
    """
    database_name: pulumi.Output[str]
    """
    Specifies the name of the MS SQL Database. Changing this forces a new resource to be created.
    """
    rule_id: pulumi.Output[str]
    """
    The vulnerability assessment rule ID. Changing this forces a new resource to be created.
    """
    server_vulnerability_assessment_id: pulumi.Output[str]
    """
    The Vulnerability Assessment ID of the MS SQL Server. Changing this forces a new resource to be created.
    """
    def __init__(__self__, resource_name, opts=None, baseline_name=None, baseline_results=None, database_name=None, rule_id=None, server_vulnerability_assessment_id=None, __props__=None, __name__=None, __opts__=None):
        """
        Manages a Database Vulnerability Assessment Rule Baseline.

        > **NOTE** Database Vulnerability Assessment is currently only available for MS SQL databases.



        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] baseline_name: The name of the vulnerability assessment rule baseline. Valid options are `default` and `master`. `default` implies a baseline on a database level rule and `master` for server level rule. Defaults to `default`. Changing this forces a new resource to be created.
        :param pulumi.Input[list] baseline_results: A `baseline_result` block as documented below. Multiple blocks can be defined.
        :param pulumi.Input[str] database_name: Specifies the name of the MS SQL Database. Changing this forces a new resource to be created.
        :param pulumi.Input[str] rule_id: The vulnerability assessment rule ID. Changing this forces a new resource to be created.
        :param pulumi.Input[str] server_vulnerability_assessment_id: The Vulnerability Assessment ID of the MS SQL Server. Changing this forces a new resource to be created.

        The **baseline_results** object supports the following:

          * `results` (`pulumi.Input[list]`) - A list representing a result of the baseline.
        """
        if __name__ is not None:
            warnings.warn("explicit use of __name__ is deprecated", DeprecationWarning)
            resource_name = __name__
        if __opts__ is not None:
            warnings.warn("explicit use of __opts__ is deprecated, use 'opts' instead", DeprecationWarning)
            opts = __opts__
        if opts is None:
            opts = pulumi.ResourceOptions()
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.version is None:
            opts.version = utilities.get_version()
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = dict()

            __props__['baseline_name'] = baseline_name
            if baseline_results is None:
                raise TypeError("Missing required property 'baseline_results'")
            __props__['baseline_results'] = baseline_results
            if database_name is None:
                raise TypeError("Missing required property 'database_name'")
            __props__['database_name'] = database_name
            if rule_id is None:
                raise TypeError("Missing required property 'rule_id'")
            __props__['rule_id'] = rule_id
            if server_vulnerability_assessment_id is None:
                raise TypeError("Missing required property 'server_vulnerability_assessment_id'")
            __props__['server_vulnerability_assessment_id'] = server_vulnerability_assessment_id
        super(DatabaseVulnerabilityAssessmentRuleBaseline, __self__).__init__(
            'azure:mssql/databaseVulnerabilityAssessmentRuleBaseline:DatabaseVulnerabilityAssessmentRuleBaseline',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name, id, opts=None, baseline_name=None, baseline_results=None, database_name=None, rule_id=None, server_vulnerability_assessment_id=None):
        """
        Get an existing DatabaseVulnerabilityAssessmentRuleBaseline resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param str id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] baseline_name: The name of the vulnerability assessment rule baseline. Valid options are `default` and `master`. `default` implies a baseline on a database level rule and `master` for server level rule. Defaults to `default`. Changing this forces a new resource to be created.
        :param pulumi.Input[list] baseline_results: A `baseline_result` block as documented below. Multiple blocks can be defined.
        :param pulumi.Input[str] database_name: Specifies the name of the MS SQL Database. Changing this forces a new resource to be created.
        :param pulumi.Input[str] rule_id: The vulnerability assessment rule ID. Changing this forces a new resource to be created.
        :param pulumi.Input[str] server_vulnerability_assessment_id: The Vulnerability Assessment ID of the MS SQL Server. Changing this forces a new resource to be created.

        The **baseline_results** object supports the following:

          * `results` (`pulumi.Input[list]`) - A list representing a result of the baseline.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = dict()

        __props__["baseline_name"] = baseline_name
        __props__["baseline_results"] = baseline_results
        __props__["database_name"] = database_name
        __props__["rule_id"] = rule_id
        __props__["server_vulnerability_assessment_id"] = server_vulnerability_assessment_id
        return DatabaseVulnerabilityAssessmentRuleBaseline(resource_name, opts=opts, __props__=__props__)
    def translate_output_property(self, prop):
        return tables._CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop

    def translate_input_property(self, prop):
        return tables._SNAKE_TO_CAMEL_CASE_TABLE.get(prop) or prop

