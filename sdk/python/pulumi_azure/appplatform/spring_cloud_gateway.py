# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Callable, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from . import outputs
from ._inputs import *

__all__ = ['SpringCloudGatewayArgs', 'SpringCloudGateway']

@pulumi.input_type
class SpringCloudGatewayArgs:
    def __init__(__self__, *,
                 spring_cloud_service_id: pulumi.Input[str],
                 api_metadata: Optional[pulumi.Input['SpringCloudGatewayApiMetadataArgs']] = None,
                 application_performance_monitoring_types: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 client_authorization: Optional[pulumi.Input['SpringCloudGatewayClientAuthorizationArgs']] = None,
                 cors: Optional[pulumi.Input['SpringCloudGatewayCorsArgs']] = None,
                 environment_variables: Optional[pulumi.Input[Mapping[str, pulumi.Input[str]]]] = None,
                 https_only: Optional[pulumi.Input[bool]] = None,
                 instance_count: Optional[pulumi.Input[int]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 public_network_access_enabled: Optional[pulumi.Input[bool]] = None,
                 quota: Optional[pulumi.Input['SpringCloudGatewayQuotaArgs']] = None,
                 sensitive_environment_variables: Optional[pulumi.Input[Mapping[str, pulumi.Input[str]]]] = None,
                 sso: Optional[pulumi.Input['SpringCloudGatewaySsoArgs']] = None):
        """
        The set of arguments for constructing a SpringCloudGateway resource.
        :param pulumi.Input[str] spring_cloud_service_id: The ID of the Spring Cloud Service. Changing this forces a new Spring Cloud Gateway to be created.
        :param pulumi.Input['SpringCloudGatewayApiMetadataArgs'] api_metadata: A `api_metadata` block as defined below.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] application_performance_monitoring_types: Specifies a list of application performance monitoring types used in the Spring Cloud Gateway. The allowed values are `AppDynamics`, `ApplicationInsights`, `Dynatrace`, `ElasticAPM` and `NewRelic`.
        :param pulumi.Input['SpringCloudGatewayClientAuthorizationArgs'] client_authorization: A `client_authorization` block as defined below.
        :param pulumi.Input['SpringCloudGatewayCorsArgs'] cors: A `cors` block as defined below.
        :param pulumi.Input[Mapping[str, pulumi.Input[str]]] environment_variables: Specifies the environment variables of the Spring Cloud Gateway as a map of key-value pairs. Changing this forces a new resource to be created.
        :param pulumi.Input[bool] https_only: is only https is allowed?
        :param pulumi.Input[int] instance_count: Specifies the required instance count of the Spring Cloud Gateway. Possible Values are between `1` and `500`. Defaults to `1` if not specified.
        :param pulumi.Input[str] name: The name which should be used for this Spring Cloud Gateway. Changing this forces a new Spring Cloud Gateway to be created. The only possible value is `default`.
        :param pulumi.Input[bool] public_network_access_enabled: Indicates whether the Spring Cloud Gateway exposes endpoint.
        :param pulumi.Input['SpringCloudGatewayQuotaArgs'] quota: A `quota` block as defined below.
        :param pulumi.Input[Mapping[str, pulumi.Input[str]]] sensitive_environment_variables: Specifies the sensitive environment variables of the Spring Cloud Gateway as a map of key-value pairs. Changing this forces a new resource to be created.
        :param pulumi.Input['SpringCloudGatewaySsoArgs'] sso: A `sso` block as defined below.
        """
        SpringCloudGatewayArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            spring_cloud_service_id=spring_cloud_service_id,
            api_metadata=api_metadata,
            application_performance_monitoring_types=application_performance_monitoring_types,
            client_authorization=client_authorization,
            cors=cors,
            environment_variables=environment_variables,
            https_only=https_only,
            instance_count=instance_count,
            name=name,
            public_network_access_enabled=public_network_access_enabled,
            quota=quota,
            sensitive_environment_variables=sensitive_environment_variables,
            sso=sso,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             spring_cloud_service_id: pulumi.Input[str],
             api_metadata: Optional[pulumi.Input['SpringCloudGatewayApiMetadataArgs']] = None,
             application_performance_monitoring_types: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
             client_authorization: Optional[pulumi.Input['SpringCloudGatewayClientAuthorizationArgs']] = None,
             cors: Optional[pulumi.Input['SpringCloudGatewayCorsArgs']] = None,
             environment_variables: Optional[pulumi.Input[Mapping[str, pulumi.Input[str]]]] = None,
             https_only: Optional[pulumi.Input[bool]] = None,
             instance_count: Optional[pulumi.Input[int]] = None,
             name: Optional[pulumi.Input[str]] = None,
             public_network_access_enabled: Optional[pulumi.Input[bool]] = None,
             quota: Optional[pulumi.Input['SpringCloudGatewayQuotaArgs']] = None,
             sensitive_environment_variables: Optional[pulumi.Input[Mapping[str, pulumi.Input[str]]]] = None,
             sso: Optional[pulumi.Input['SpringCloudGatewaySsoArgs']] = None,
             opts: Optional[pulumi.ResourceOptions]=None):
        _setter("spring_cloud_service_id", spring_cloud_service_id)
        if api_metadata is not None:
            _setter("api_metadata", api_metadata)
        if application_performance_monitoring_types is not None:
            _setter("application_performance_monitoring_types", application_performance_monitoring_types)
        if client_authorization is not None:
            _setter("client_authorization", client_authorization)
        if cors is not None:
            _setter("cors", cors)
        if environment_variables is not None:
            _setter("environment_variables", environment_variables)
        if https_only is not None:
            _setter("https_only", https_only)
        if instance_count is not None:
            _setter("instance_count", instance_count)
        if name is not None:
            _setter("name", name)
        if public_network_access_enabled is not None:
            _setter("public_network_access_enabled", public_network_access_enabled)
        if quota is not None:
            _setter("quota", quota)
        if sensitive_environment_variables is not None:
            _setter("sensitive_environment_variables", sensitive_environment_variables)
        if sso is not None:
            _setter("sso", sso)

    @property
    @pulumi.getter(name="springCloudServiceId")
    def spring_cloud_service_id(self) -> pulumi.Input[str]:
        """
        The ID of the Spring Cloud Service. Changing this forces a new Spring Cloud Gateway to be created.
        """
        return pulumi.get(self, "spring_cloud_service_id")

    @spring_cloud_service_id.setter
    def spring_cloud_service_id(self, value: pulumi.Input[str]):
        pulumi.set(self, "spring_cloud_service_id", value)

    @property
    @pulumi.getter(name="apiMetadata")
    def api_metadata(self) -> Optional[pulumi.Input['SpringCloudGatewayApiMetadataArgs']]:
        """
        A `api_metadata` block as defined below.
        """
        return pulumi.get(self, "api_metadata")

    @api_metadata.setter
    def api_metadata(self, value: Optional[pulumi.Input['SpringCloudGatewayApiMetadataArgs']]):
        pulumi.set(self, "api_metadata", value)

    @property
    @pulumi.getter(name="applicationPerformanceMonitoringTypes")
    def application_performance_monitoring_types(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        """
        Specifies a list of application performance monitoring types used in the Spring Cloud Gateway. The allowed values are `AppDynamics`, `ApplicationInsights`, `Dynatrace`, `ElasticAPM` and `NewRelic`.
        """
        return pulumi.get(self, "application_performance_monitoring_types")

    @application_performance_monitoring_types.setter
    def application_performance_monitoring_types(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "application_performance_monitoring_types", value)

    @property
    @pulumi.getter(name="clientAuthorization")
    def client_authorization(self) -> Optional[pulumi.Input['SpringCloudGatewayClientAuthorizationArgs']]:
        """
        A `client_authorization` block as defined below.
        """
        return pulumi.get(self, "client_authorization")

    @client_authorization.setter
    def client_authorization(self, value: Optional[pulumi.Input['SpringCloudGatewayClientAuthorizationArgs']]):
        pulumi.set(self, "client_authorization", value)

    @property
    @pulumi.getter
    def cors(self) -> Optional[pulumi.Input['SpringCloudGatewayCorsArgs']]:
        """
        A `cors` block as defined below.
        """
        return pulumi.get(self, "cors")

    @cors.setter
    def cors(self, value: Optional[pulumi.Input['SpringCloudGatewayCorsArgs']]):
        pulumi.set(self, "cors", value)

    @property
    @pulumi.getter(name="environmentVariables")
    def environment_variables(self) -> Optional[pulumi.Input[Mapping[str, pulumi.Input[str]]]]:
        """
        Specifies the environment variables of the Spring Cloud Gateway as a map of key-value pairs. Changing this forces a new resource to be created.
        """
        return pulumi.get(self, "environment_variables")

    @environment_variables.setter
    def environment_variables(self, value: Optional[pulumi.Input[Mapping[str, pulumi.Input[str]]]]):
        pulumi.set(self, "environment_variables", value)

    @property
    @pulumi.getter(name="httpsOnly")
    def https_only(self) -> Optional[pulumi.Input[bool]]:
        """
        is only https is allowed?
        """
        return pulumi.get(self, "https_only")

    @https_only.setter
    def https_only(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "https_only", value)

    @property
    @pulumi.getter(name="instanceCount")
    def instance_count(self) -> Optional[pulumi.Input[int]]:
        """
        Specifies the required instance count of the Spring Cloud Gateway. Possible Values are between `1` and `500`. Defaults to `1` if not specified.
        """
        return pulumi.get(self, "instance_count")

    @instance_count.setter
    def instance_count(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "instance_count", value)

    @property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[str]]:
        """
        The name which should be used for this Spring Cloud Gateway. Changing this forces a new Spring Cloud Gateway to be created. The only possible value is `default`.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "name", value)

    @property
    @pulumi.getter(name="publicNetworkAccessEnabled")
    def public_network_access_enabled(self) -> Optional[pulumi.Input[bool]]:
        """
        Indicates whether the Spring Cloud Gateway exposes endpoint.
        """
        return pulumi.get(self, "public_network_access_enabled")

    @public_network_access_enabled.setter
    def public_network_access_enabled(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "public_network_access_enabled", value)

    @property
    @pulumi.getter
    def quota(self) -> Optional[pulumi.Input['SpringCloudGatewayQuotaArgs']]:
        """
        A `quota` block as defined below.
        """
        return pulumi.get(self, "quota")

    @quota.setter
    def quota(self, value: Optional[pulumi.Input['SpringCloudGatewayQuotaArgs']]):
        pulumi.set(self, "quota", value)

    @property
    @pulumi.getter(name="sensitiveEnvironmentVariables")
    def sensitive_environment_variables(self) -> Optional[pulumi.Input[Mapping[str, pulumi.Input[str]]]]:
        """
        Specifies the sensitive environment variables of the Spring Cloud Gateway as a map of key-value pairs. Changing this forces a new resource to be created.
        """
        return pulumi.get(self, "sensitive_environment_variables")

    @sensitive_environment_variables.setter
    def sensitive_environment_variables(self, value: Optional[pulumi.Input[Mapping[str, pulumi.Input[str]]]]):
        pulumi.set(self, "sensitive_environment_variables", value)

    @property
    @pulumi.getter
    def sso(self) -> Optional[pulumi.Input['SpringCloudGatewaySsoArgs']]:
        """
        A `sso` block as defined below.
        """
        return pulumi.get(self, "sso")

    @sso.setter
    def sso(self, value: Optional[pulumi.Input['SpringCloudGatewaySsoArgs']]):
        pulumi.set(self, "sso", value)


@pulumi.input_type
class _SpringCloudGatewayState:
    def __init__(__self__, *,
                 api_metadata: Optional[pulumi.Input['SpringCloudGatewayApiMetadataArgs']] = None,
                 application_performance_monitoring_types: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 client_authorization: Optional[pulumi.Input['SpringCloudGatewayClientAuthorizationArgs']] = None,
                 cors: Optional[pulumi.Input['SpringCloudGatewayCorsArgs']] = None,
                 environment_variables: Optional[pulumi.Input[Mapping[str, pulumi.Input[str]]]] = None,
                 https_only: Optional[pulumi.Input[bool]] = None,
                 instance_count: Optional[pulumi.Input[int]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 public_network_access_enabled: Optional[pulumi.Input[bool]] = None,
                 quota: Optional[pulumi.Input['SpringCloudGatewayQuotaArgs']] = None,
                 sensitive_environment_variables: Optional[pulumi.Input[Mapping[str, pulumi.Input[str]]]] = None,
                 spring_cloud_service_id: Optional[pulumi.Input[str]] = None,
                 sso: Optional[pulumi.Input['SpringCloudGatewaySsoArgs']] = None,
                 url: Optional[pulumi.Input[str]] = None):
        """
        Input properties used for looking up and filtering SpringCloudGateway resources.
        :param pulumi.Input['SpringCloudGatewayApiMetadataArgs'] api_metadata: A `api_metadata` block as defined below.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] application_performance_monitoring_types: Specifies a list of application performance monitoring types used in the Spring Cloud Gateway. The allowed values are `AppDynamics`, `ApplicationInsights`, `Dynatrace`, `ElasticAPM` and `NewRelic`.
        :param pulumi.Input['SpringCloudGatewayClientAuthorizationArgs'] client_authorization: A `client_authorization` block as defined below.
        :param pulumi.Input['SpringCloudGatewayCorsArgs'] cors: A `cors` block as defined below.
        :param pulumi.Input[Mapping[str, pulumi.Input[str]]] environment_variables: Specifies the environment variables of the Spring Cloud Gateway as a map of key-value pairs. Changing this forces a new resource to be created.
        :param pulumi.Input[bool] https_only: is only https is allowed?
        :param pulumi.Input[int] instance_count: Specifies the required instance count of the Spring Cloud Gateway. Possible Values are between `1` and `500`. Defaults to `1` if not specified.
        :param pulumi.Input[str] name: The name which should be used for this Spring Cloud Gateway. Changing this forces a new Spring Cloud Gateway to be created. The only possible value is `default`.
        :param pulumi.Input[bool] public_network_access_enabled: Indicates whether the Spring Cloud Gateway exposes endpoint.
        :param pulumi.Input['SpringCloudGatewayQuotaArgs'] quota: A `quota` block as defined below.
        :param pulumi.Input[Mapping[str, pulumi.Input[str]]] sensitive_environment_variables: Specifies the sensitive environment variables of the Spring Cloud Gateway as a map of key-value pairs. Changing this forces a new resource to be created.
        :param pulumi.Input[str] spring_cloud_service_id: The ID of the Spring Cloud Service. Changing this forces a new Spring Cloud Gateway to be created.
        :param pulumi.Input['SpringCloudGatewaySsoArgs'] sso: A `sso` block as defined below.
        :param pulumi.Input[str] url: URL of the Spring Cloud Gateway, exposed when 'public_network_access_enabled' is true.
        """
        _SpringCloudGatewayState._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            api_metadata=api_metadata,
            application_performance_monitoring_types=application_performance_monitoring_types,
            client_authorization=client_authorization,
            cors=cors,
            environment_variables=environment_variables,
            https_only=https_only,
            instance_count=instance_count,
            name=name,
            public_network_access_enabled=public_network_access_enabled,
            quota=quota,
            sensitive_environment_variables=sensitive_environment_variables,
            spring_cloud_service_id=spring_cloud_service_id,
            sso=sso,
            url=url,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             api_metadata: Optional[pulumi.Input['SpringCloudGatewayApiMetadataArgs']] = None,
             application_performance_monitoring_types: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
             client_authorization: Optional[pulumi.Input['SpringCloudGatewayClientAuthorizationArgs']] = None,
             cors: Optional[pulumi.Input['SpringCloudGatewayCorsArgs']] = None,
             environment_variables: Optional[pulumi.Input[Mapping[str, pulumi.Input[str]]]] = None,
             https_only: Optional[pulumi.Input[bool]] = None,
             instance_count: Optional[pulumi.Input[int]] = None,
             name: Optional[pulumi.Input[str]] = None,
             public_network_access_enabled: Optional[pulumi.Input[bool]] = None,
             quota: Optional[pulumi.Input['SpringCloudGatewayQuotaArgs']] = None,
             sensitive_environment_variables: Optional[pulumi.Input[Mapping[str, pulumi.Input[str]]]] = None,
             spring_cloud_service_id: Optional[pulumi.Input[str]] = None,
             sso: Optional[pulumi.Input['SpringCloudGatewaySsoArgs']] = None,
             url: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None):
        if api_metadata is not None:
            _setter("api_metadata", api_metadata)
        if application_performance_monitoring_types is not None:
            _setter("application_performance_monitoring_types", application_performance_monitoring_types)
        if client_authorization is not None:
            _setter("client_authorization", client_authorization)
        if cors is not None:
            _setter("cors", cors)
        if environment_variables is not None:
            _setter("environment_variables", environment_variables)
        if https_only is not None:
            _setter("https_only", https_only)
        if instance_count is not None:
            _setter("instance_count", instance_count)
        if name is not None:
            _setter("name", name)
        if public_network_access_enabled is not None:
            _setter("public_network_access_enabled", public_network_access_enabled)
        if quota is not None:
            _setter("quota", quota)
        if sensitive_environment_variables is not None:
            _setter("sensitive_environment_variables", sensitive_environment_variables)
        if spring_cloud_service_id is not None:
            _setter("spring_cloud_service_id", spring_cloud_service_id)
        if sso is not None:
            _setter("sso", sso)
        if url is not None:
            _setter("url", url)

    @property
    @pulumi.getter(name="apiMetadata")
    def api_metadata(self) -> Optional[pulumi.Input['SpringCloudGatewayApiMetadataArgs']]:
        """
        A `api_metadata` block as defined below.
        """
        return pulumi.get(self, "api_metadata")

    @api_metadata.setter
    def api_metadata(self, value: Optional[pulumi.Input['SpringCloudGatewayApiMetadataArgs']]):
        pulumi.set(self, "api_metadata", value)

    @property
    @pulumi.getter(name="applicationPerformanceMonitoringTypes")
    def application_performance_monitoring_types(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        """
        Specifies a list of application performance monitoring types used in the Spring Cloud Gateway. The allowed values are `AppDynamics`, `ApplicationInsights`, `Dynatrace`, `ElasticAPM` and `NewRelic`.
        """
        return pulumi.get(self, "application_performance_monitoring_types")

    @application_performance_monitoring_types.setter
    def application_performance_monitoring_types(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "application_performance_monitoring_types", value)

    @property
    @pulumi.getter(name="clientAuthorization")
    def client_authorization(self) -> Optional[pulumi.Input['SpringCloudGatewayClientAuthorizationArgs']]:
        """
        A `client_authorization` block as defined below.
        """
        return pulumi.get(self, "client_authorization")

    @client_authorization.setter
    def client_authorization(self, value: Optional[pulumi.Input['SpringCloudGatewayClientAuthorizationArgs']]):
        pulumi.set(self, "client_authorization", value)

    @property
    @pulumi.getter
    def cors(self) -> Optional[pulumi.Input['SpringCloudGatewayCorsArgs']]:
        """
        A `cors` block as defined below.
        """
        return pulumi.get(self, "cors")

    @cors.setter
    def cors(self, value: Optional[pulumi.Input['SpringCloudGatewayCorsArgs']]):
        pulumi.set(self, "cors", value)

    @property
    @pulumi.getter(name="environmentVariables")
    def environment_variables(self) -> Optional[pulumi.Input[Mapping[str, pulumi.Input[str]]]]:
        """
        Specifies the environment variables of the Spring Cloud Gateway as a map of key-value pairs. Changing this forces a new resource to be created.
        """
        return pulumi.get(self, "environment_variables")

    @environment_variables.setter
    def environment_variables(self, value: Optional[pulumi.Input[Mapping[str, pulumi.Input[str]]]]):
        pulumi.set(self, "environment_variables", value)

    @property
    @pulumi.getter(name="httpsOnly")
    def https_only(self) -> Optional[pulumi.Input[bool]]:
        """
        is only https is allowed?
        """
        return pulumi.get(self, "https_only")

    @https_only.setter
    def https_only(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "https_only", value)

    @property
    @pulumi.getter(name="instanceCount")
    def instance_count(self) -> Optional[pulumi.Input[int]]:
        """
        Specifies the required instance count of the Spring Cloud Gateway. Possible Values are between `1` and `500`. Defaults to `1` if not specified.
        """
        return pulumi.get(self, "instance_count")

    @instance_count.setter
    def instance_count(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "instance_count", value)

    @property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[str]]:
        """
        The name which should be used for this Spring Cloud Gateway. Changing this forces a new Spring Cloud Gateway to be created. The only possible value is `default`.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "name", value)

    @property
    @pulumi.getter(name="publicNetworkAccessEnabled")
    def public_network_access_enabled(self) -> Optional[pulumi.Input[bool]]:
        """
        Indicates whether the Spring Cloud Gateway exposes endpoint.
        """
        return pulumi.get(self, "public_network_access_enabled")

    @public_network_access_enabled.setter
    def public_network_access_enabled(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "public_network_access_enabled", value)

    @property
    @pulumi.getter
    def quota(self) -> Optional[pulumi.Input['SpringCloudGatewayQuotaArgs']]:
        """
        A `quota` block as defined below.
        """
        return pulumi.get(self, "quota")

    @quota.setter
    def quota(self, value: Optional[pulumi.Input['SpringCloudGatewayQuotaArgs']]):
        pulumi.set(self, "quota", value)

    @property
    @pulumi.getter(name="sensitiveEnvironmentVariables")
    def sensitive_environment_variables(self) -> Optional[pulumi.Input[Mapping[str, pulumi.Input[str]]]]:
        """
        Specifies the sensitive environment variables of the Spring Cloud Gateway as a map of key-value pairs. Changing this forces a new resource to be created.
        """
        return pulumi.get(self, "sensitive_environment_variables")

    @sensitive_environment_variables.setter
    def sensitive_environment_variables(self, value: Optional[pulumi.Input[Mapping[str, pulumi.Input[str]]]]):
        pulumi.set(self, "sensitive_environment_variables", value)

    @property
    @pulumi.getter(name="springCloudServiceId")
    def spring_cloud_service_id(self) -> Optional[pulumi.Input[str]]:
        """
        The ID of the Spring Cloud Service. Changing this forces a new Spring Cloud Gateway to be created.
        """
        return pulumi.get(self, "spring_cloud_service_id")

    @spring_cloud_service_id.setter
    def spring_cloud_service_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "spring_cloud_service_id", value)

    @property
    @pulumi.getter
    def sso(self) -> Optional[pulumi.Input['SpringCloudGatewaySsoArgs']]:
        """
        A `sso` block as defined below.
        """
        return pulumi.get(self, "sso")

    @sso.setter
    def sso(self, value: Optional[pulumi.Input['SpringCloudGatewaySsoArgs']]):
        pulumi.set(self, "sso", value)

    @property
    @pulumi.getter
    def url(self) -> Optional[pulumi.Input[str]]:
        """
        URL of the Spring Cloud Gateway, exposed when 'public_network_access_enabled' is true.
        """
        return pulumi.get(self, "url")

    @url.setter
    def url(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "url", value)


class SpringCloudGateway(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 api_metadata: Optional[pulumi.Input[pulumi.InputType['SpringCloudGatewayApiMetadataArgs']]] = None,
                 application_performance_monitoring_types: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 client_authorization: Optional[pulumi.Input[pulumi.InputType['SpringCloudGatewayClientAuthorizationArgs']]] = None,
                 cors: Optional[pulumi.Input[pulumi.InputType['SpringCloudGatewayCorsArgs']]] = None,
                 environment_variables: Optional[pulumi.Input[Mapping[str, pulumi.Input[str]]]] = None,
                 https_only: Optional[pulumi.Input[bool]] = None,
                 instance_count: Optional[pulumi.Input[int]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 public_network_access_enabled: Optional[pulumi.Input[bool]] = None,
                 quota: Optional[pulumi.Input[pulumi.InputType['SpringCloudGatewayQuotaArgs']]] = None,
                 sensitive_environment_variables: Optional[pulumi.Input[Mapping[str, pulumi.Input[str]]]] = None,
                 spring_cloud_service_id: Optional[pulumi.Input[str]] = None,
                 sso: Optional[pulumi.Input[pulumi.InputType['SpringCloudGatewaySsoArgs']]] = None,
                 __props__=None):
        """
        > **NOTE:** This resource is applicable only for Spring Cloud Service with enterprise tier.

        Manages a Spring Cloud Gateway.

        ## Example Usage

        ```python
        import pulumi
        import pulumi_azure as azure

        example_resource_group = azure.core.ResourceGroup("exampleResourceGroup", location="West Europe")
        example_spring_cloud_service = azure.appplatform.SpringCloudService("exampleSpringCloudService",
            location=example_resource_group.location,
            resource_group_name=example_resource_group.name,
            sku_name="E0")
        example_spring_cloud_gateway = azure.appplatform.SpringCloudGateway("exampleSpringCloudGateway",
            spring_cloud_service_id=example_spring_cloud_service.id,
            https_only=False,
            public_network_access_enabled=True,
            instance_count=2,
            api_metadata=azure.appplatform.SpringCloudGatewayApiMetadataArgs(
                description="example description",
                documentation_url="https://www.example.com/docs",
                server_url="https://wwww.example.com",
                title="example title",
                version="1.0",
            ),
            cors=azure.appplatform.SpringCloudGatewayCorsArgs(
                credentials_allowed=False,
                allowed_headers=["*"],
                allowed_methods=["PUT"],
                allowed_origins=["example.com"],
                exposed_headers=["x-example-header"],
                max_age_seconds=86400,
            ),
            quota=azure.appplatform.SpringCloudGatewayQuotaArgs(
                cpu="1",
                memory="2Gi",
            ),
            sso=azure.appplatform.SpringCloudGatewaySsoArgs(
                client_id="example id",
                client_secret="example secret",
                issuer_uri="https://www.test.com/issueToken",
                scopes=["read"],
            ))
        ```

        ## Import

        Spring Cloud Gateways can be imported using the `resource id`, e.g.

        ```sh
         $ pulumi import azure:appplatform/springCloudGateway:SpringCloudGateway example /subscriptions/12345678-1234-9876-4563-123456789012/resourceGroups/resourceGroup1/providers/Microsoft.AppPlatform/spring/service1/gateways/gateway1
        ```

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[pulumi.InputType['SpringCloudGatewayApiMetadataArgs']] api_metadata: A `api_metadata` block as defined below.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] application_performance_monitoring_types: Specifies a list of application performance monitoring types used in the Spring Cloud Gateway. The allowed values are `AppDynamics`, `ApplicationInsights`, `Dynatrace`, `ElasticAPM` and `NewRelic`.
        :param pulumi.Input[pulumi.InputType['SpringCloudGatewayClientAuthorizationArgs']] client_authorization: A `client_authorization` block as defined below.
        :param pulumi.Input[pulumi.InputType['SpringCloudGatewayCorsArgs']] cors: A `cors` block as defined below.
        :param pulumi.Input[Mapping[str, pulumi.Input[str]]] environment_variables: Specifies the environment variables of the Spring Cloud Gateway as a map of key-value pairs. Changing this forces a new resource to be created.
        :param pulumi.Input[bool] https_only: is only https is allowed?
        :param pulumi.Input[int] instance_count: Specifies the required instance count of the Spring Cloud Gateway. Possible Values are between `1` and `500`. Defaults to `1` if not specified.
        :param pulumi.Input[str] name: The name which should be used for this Spring Cloud Gateway. Changing this forces a new Spring Cloud Gateway to be created. The only possible value is `default`.
        :param pulumi.Input[bool] public_network_access_enabled: Indicates whether the Spring Cloud Gateway exposes endpoint.
        :param pulumi.Input[pulumi.InputType['SpringCloudGatewayQuotaArgs']] quota: A `quota` block as defined below.
        :param pulumi.Input[Mapping[str, pulumi.Input[str]]] sensitive_environment_variables: Specifies the sensitive environment variables of the Spring Cloud Gateway as a map of key-value pairs. Changing this forces a new resource to be created.
        :param pulumi.Input[str] spring_cloud_service_id: The ID of the Spring Cloud Service. Changing this forces a new Spring Cloud Gateway to be created.
        :param pulumi.Input[pulumi.InputType['SpringCloudGatewaySsoArgs']] sso: A `sso` block as defined below.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: SpringCloudGatewayArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        > **NOTE:** This resource is applicable only for Spring Cloud Service with enterprise tier.

        Manages a Spring Cloud Gateway.

        ## Example Usage

        ```python
        import pulumi
        import pulumi_azure as azure

        example_resource_group = azure.core.ResourceGroup("exampleResourceGroup", location="West Europe")
        example_spring_cloud_service = azure.appplatform.SpringCloudService("exampleSpringCloudService",
            location=example_resource_group.location,
            resource_group_name=example_resource_group.name,
            sku_name="E0")
        example_spring_cloud_gateway = azure.appplatform.SpringCloudGateway("exampleSpringCloudGateway",
            spring_cloud_service_id=example_spring_cloud_service.id,
            https_only=False,
            public_network_access_enabled=True,
            instance_count=2,
            api_metadata=azure.appplatform.SpringCloudGatewayApiMetadataArgs(
                description="example description",
                documentation_url="https://www.example.com/docs",
                server_url="https://wwww.example.com",
                title="example title",
                version="1.0",
            ),
            cors=azure.appplatform.SpringCloudGatewayCorsArgs(
                credentials_allowed=False,
                allowed_headers=["*"],
                allowed_methods=["PUT"],
                allowed_origins=["example.com"],
                exposed_headers=["x-example-header"],
                max_age_seconds=86400,
            ),
            quota=azure.appplatform.SpringCloudGatewayQuotaArgs(
                cpu="1",
                memory="2Gi",
            ),
            sso=azure.appplatform.SpringCloudGatewaySsoArgs(
                client_id="example id",
                client_secret="example secret",
                issuer_uri="https://www.test.com/issueToken",
                scopes=["read"],
            ))
        ```

        ## Import

        Spring Cloud Gateways can be imported using the `resource id`, e.g.

        ```sh
         $ pulumi import azure:appplatform/springCloudGateway:SpringCloudGateway example /subscriptions/12345678-1234-9876-4563-123456789012/resourceGroups/resourceGroup1/providers/Microsoft.AppPlatform/spring/service1/gateways/gateway1
        ```

        :param str resource_name: The name of the resource.
        :param SpringCloudGatewayArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(SpringCloudGatewayArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            kwargs = kwargs or {}
            def _setter(key, value):
                kwargs[key] = value
            SpringCloudGatewayArgs._configure(_setter, **kwargs)
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 api_metadata: Optional[pulumi.Input[pulumi.InputType['SpringCloudGatewayApiMetadataArgs']]] = None,
                 application_performance_monitoring_types: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 client_authorization: Optional[pulumi.Input[pulumi.InputType['SpringCloudGatewayClientAuthorizationArgs']]] = None,
                 cors: Optional[pulumi.Input[pulumi.InputType['SpringCloudGatewayCorsArgs']]] = None,
                 environment_variables: Optional[pulumi.Input[Mapping[str, pulumi.Input[str]]]] = None,
                 https_only: Optional[pulumi.Input[bool]] = None,
                 instance_count: Optional[pulumi.Input[int]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 public_network_access_enabled: Optional[pulumi.Input[bool]] = None,
                 quota: Optional[pulumi.Input[pulumi.InputType['SpringCloudGatewayQuotaArgs']]] = None,
                 sensitive_environment_variables: Optional[pulumi.Input[Mapping[str, pulumi.Input[str]]]] = None,
                 spring_cloud_service_id: Optional[pulumi.Input[str]] = None,
                 sso: Optional[pulumi.Input[pulumi.InputType['SpringCloudGatewaySsoArgs']]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = SpringCloudGatewayArgs.__new__(SpringCloudGatewayArgs)

            if api_metadata is not None and not isinstance(api_metadata, SpringCloudGatewayApiMetadataArgs):
                api_metadata = api_metadata or {}
                def _setter(key, value):
                    api_metadata[key] = value
                SpringCloudGatewayApiMetadataArgs._configure(_setter, **api_metadata)
            __props__.__dict__["api_metadata"] = api_metadata
            __props__.__dict__["application_performance_monitoring_types"] = application_performance_monitoring_types
            if client_authorization is not None and not isinstance(client_authorization, SpringCloudGatewayClientAuthorizationArgs):
                client_authorization = client_authorization or {}
                def _setter(key, value):
                    client_authorization[key] = value
                SpringCloudGatewayClientAuthorizationArgs._configure(_setter, **client_authorization)
            __props__.__dict__["client_authorization"] = client_authorization
            if cors is not None and not isinstance(cors, SpringCloudGatewayCorsArgs):
                cors = cors or {}
                def _setter(key, value):
                    cors[key] = value
                SpringCloudGatewayCorsArgs._configure(_setter, **cors)
            __props__.__dict__["cors"] = cors
            __props__.__dict__["environment_variables"] = environment_variables
            __props__.__dict__["https_only"] = https_only
            __props__.__dict__["instance_count"] = instance_count
            __props__.__dict__["name"] = name
            __props__.__dict__["public_network_access_enabled"] = public_network_access_enabled
            if quota is not None and not isinstance(quota, SpringCloudGatewayQuotaArgs):
                quota = quota or {}
                def _setter(key, value):
                    quota[key] = value
                SpringCloudGatewayQuotaArgs._configure(_setter, **quota)
            __props__.__dict__["quota"] = quota
            __props__.__dict__["sensitive_environment_variables"] = None if sensitive_environment_variables is None else pulumi.Output.secret(sensitive_environment_variables)
            if spring_cloud_service_id is None and not opts.urn:
                raise TypeError("Missing required property 'spring_cloud_service_id'")
            __props__.__dict__["spring_cloud_service_id"] = spring_cloud_service_id
            if sso is not None and not isinstance(sso, SpringCloudGatewaySsoArgs):
                sso = sso or {}
                def _setter(key, value):
                    sso[key] = value
                SpringCloudGatewaySsoArgs._configure(_setter, **sso)
            __props__.__dict__["sso"] = sso
            __props__.__dict__["url"] = None
        secret_opts = pulumi.ResourceOptions(additional_secret_outputs=["sensitiveEnvironmentVariables"])
        opts = pulumi.ResourceOptions.merge(opts, secret_opts)
        super(SpringCloudGateway, __self__).__init__(
            'azure:appplatform/springCloudGateway:SpringCloudGateway',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            api_metadata: Optional[pulumi.Input[pulumi.InputType['SpringCloudGatewayApiMetadataArgs']]] = None,
            application_performance_monitoring_types: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
            client_authorization: Optional[pulumi.Input[pulumi.InputType['SpringCloudGatewayClientAuthorizationArgs']]] = None,
            cors: Optional[pulumi.Input[pulumi.InputType['SpringCloudGatewayCorsArgs']]] = None,
            environment_variables: Optional[pulumi.Input[Mapping[str, pulumi.Input[str]]]] = None,
            https_only: Optional[pulumi.Input[bool]] = None,
            instance_count: Optional[pulumi.Input[int]] = None,
            name: Optional[pulumi.Input[str]] = None,
            public_network_access_enabled: Optional[pulumi.Input[bool]] = None,
            quota: Optional[pulumi.Input[pulumi.InputType['SpringCloudGatewayQuotaArgs']]] = None,
            sensitive_environment_variables: Optional[pulumi.Input[Mapping[str, pulumi.Input[str]]]] = None,
            spring_cloud_service_id: Optional[pulumi.Input[str]] = None,
            sso: Optional[pulumi.Input[pulumi.InputType['SpringCloudGatewaySsoArgs']]] = None,
            url: Optional[pulumi.Input[str]] = None) -> 'SpringCloudGateway':
        """
        Get an existing SpringCloudGateway resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[pulumi.InputType['SpringCloudGatewayApiMetadataArgs']] api_metadata: A `api_metadata` block as defined below.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] application_performance_monitoring_types: Specifies a list of application performance monitoring types used in the Spring Cloud Gateway. The allowed values are `AppDynamics`, `ApplicationInsights`, `Dynatrace`, `ElasticAPM` and `NewRelic`.
        :param pulumi.Input[pulumi.InputType['SpringCloudGatewayClientAuthorizationArgs']] client_authorization: A `client_authorization` block as defined below.
        :param pulumi.Input[pulumi.InputType['SpringCloudGatewayCorsArgs']] cors: A `cors` block as defined below.
        :param pulumi.Input[Mapping[str, pulumi.Input[str]]] environment_variables: Specifies the environment variables of the Spring Cloud Gateway as a map of key-value pairs. Changing this forces a new resource to be created.
        :param pulumi.Input[bool] https_only: is only https is allowed?
        :param pulumi.Input[int] instance_count: Specifies the required instance count of the Spring Cloud Gateway. Possible Values are between `1` and `500`. Defaults to `1` if not specified.
        :param pulumi.Input[str] name: The name which should be used for this Spring Cloud Gateway. Changing this forces a new Spring Cloud Gateway to be created. The only possible value is `default`.
        :param pulumi.Input[bool] public_network_access_enabled: Indicates whether the Spring Cloud Gateway exposes endpoint.
        :param pulumi.Input[pulumi.InputType['SpringCloudGatewayQuotaArgs']] quota: A `quota` block as defined below.
        :param pulumi.Input[Mapping[str, pulumi.Input[str]]] sensitive_environment_variables: Specifies the sensitive environment variables of the Spring Cloud Gateway as a map of key-value pairs. Changing this forces a new resource to be created.
        :param pulumi.Input[str] spring_cloud_service_id: The ID of the Spring Cloud Service. Changing this forces a new Spring Cloud Gateway to be created.
        :param pulumi.Input[pulumi.InputType['SpringCloudGatewaySsoArgs']] sso: A `sso` block as defined below.
        :param pulumi.Input[str] url: URL of the Spring Cloud Gateway, exposed when 'public_network_access_enabled' is true.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _SpringCloudGatewayState.__new__(_SpringCloudGatewayState)

        __props__.__dict__["api_metadata"] = api_metadata
        __props__.__dict__["application_performance_monitoring_types"] = application_performance_monitoring_types
        __props__.__dict__["client_authorization"] = client_authorization
        __props__.__dict__["cors"] = cors
        __props__.__dict__["environment_variables"] = environment_variables
        __props__.__dict__["https_only"] = https_only
        __props__.__dict__["instance_count"] = instance_count
        __props__.__dict__["name"] = name
        __props__.__dict__["public_network_access_enabled"] = public_network_access_enabled
        __props__.__dict__["quota"] = quota
        __props__.__dict__["sensitive_environment_variables"] = sensitive_environment_variables
        __props__.__dict__["spring_cloud_service_id"] = spring_cloud_service_id
        __props__.__dict__["sso"] = sso
        __props__.__dict__["url"] = url
        return SpringCloudGateway(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter(name="apiMetadata")
    def api_metadata(self) -> pulumi.Output[Optional['outputs.SpringCloudGatewayApiMetadata']]:
        """
        A `api_metadata` block as defined below.
        """
        return pulumi.get(self, "api_metadata")

    @property
    @pulumi.getter(name="applicationPerformanceMonitoringTypes")
    def application_performance_monitoring_types(self) -> pulumi.Output[Optional[Sequence[str]]]:
        """
        Specifies a list of application performance monitoring types used in the Spring Cloud Gateway. The allowed values are `AppDynamics`, `ApplicationInsights`, `Dynatrace`, `ElasticAPM` and `NewRelic`.
        """
        return pulumi.get(self, "application_performance_monitoring_types")

    @property
    @pulumi.getter(name="clientAuthorization")
    def client_authorization(self) -> pulumi.Output[Optional['outputs.SpringCloudGatewayClientAuthorization']]:
        """
        A `client_authorization` block as defined below.
        """
        return pulumi.get(self, "client_authorization")

    @property
    @pulumi.getter
    def cors(self) -> pulumi.Output[Optional['outputs.SpringCloudGatewayCors']]:
        """
        A `cors` block as defined below.
        """
        return pulumi.get(self, "cors")

    @property
    @pulumi.getter(name="environmentVariables")
    def environment_variables(self) -> pulumi.Output[Optional[Mapping[str, str]]]:
        """
        Specifies the environment variables of the Spring Cloud Gateway as a map of key-value pairs. Changing this forces a new resource to be created.
        """
        return pulumi.get(self, "environment_variables")

    @property
    @pulumi.getter(name="httpsOnly")
    def https_only(self) -> pulumi.Output[Optional[bool]]:
        """
        is only https is allowed?
        """
        return pulumi.get(self, "https_only")

    @property
    @pulumi.getter(name="instanceCount")
    def instance_count(self) -> pulumi.Output[Optional[int]]:
        """
        Specifies the required instance count of the Spring Cloud Gateway. Possible Values are between `1` and `500`. Defaults to `1` if not specified.
        """
        return pulumi.get(self, "instance_count")

    @property
    @pulumi.getter
    def name(self) -> pulumi.Output[str]:
        """
        The name which should be used for this Spring Cloud Gateway. Changing this forces a new Spring Cloud Gateway to be created. The only possible value is `default`.
        """
        return pulumi.get(self, "name")

    @property
    @pulumi.getter(name="publicNetworkAccessEnabled")
    def public_network_access_enabled(self) -> pulumi.Output[Optional[bool]]:
        """
        Indicates whether the Spring Cloud Gateway exposes endpoint.
        """
        return pulumi.get(self, "public_network_access_enabled")

    @property
    @pulumi.getter
    def quota(self) -> pulumi.Output['outputs.SpringCloudGatewayQuota']:
        """
        A `quota` block as defined below.
        """
        return pulumi.get(self, "quota")

    @property
    @pulumi.getter(name="sensitiveEnvironmentVariables")
    def sensitive_environment_variables(self) -> pulumi.Output[Optional[Mapping[str, str]]]:
        """
        Specifies the sensitive environment variables of the Spring Cloud Gateway as a map of key-value pairs. Changing this forces a new resource to be created.
        """
        return pulumi.get(self, "sensitive_environment_variables")

    @property
    @pulumi.getter(name="springCloudServiceId")
    def spring_cloud_service_id(self) -> pulumi.Output[str]:
        """
        The ID of the Spring Cloud Service. Changing this forces a new Spring Cloud Gateway to be created.
        """
        return pulumi.get(self, "spring_cloud_service_id")

    @property
    @pulumi.getter
    def sso(self) -> pulumi.Output[Optional['outputs.SpringCloudGatewaySso']]:
        """
        A `sso` block as defined below.
        """
        return pulumi.get(self, "sso")

    @property
    @pulumi.getter
    def url(self) -> pulumi.Output[str]:
        """
        URL of the Spring Cloud Gateway, exposed when 'public_network_access_enabled' is true.
        """
        return pulumi.get(self, "url")

