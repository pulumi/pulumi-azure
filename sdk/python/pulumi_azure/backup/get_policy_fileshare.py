# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities

__all__ = [
    'GetPolicyFileshareResult',
    'AwaitableGetPolicyFileshareResult',
    'get_policy_fileshare',
    'get_policy_fileshare_output',
]

@pulumi.output_type
class GetPolicyFileshareResult:
    """
    A collection of values returned by getPolicyFileshare.
    """
    def __init__(__self__, id=None, name=None, recovery_vault_name=None, resource_group_name=None):
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if name and not isinstance(name, str):
            raise TypeError("Expected argument 'name' to be a str")
        pulumi.set(__self__, "name", name)
        if recovery_vault_name and not isinstance(recovery_vault_name, str):
            raise TypeError("Expected argument 'recovery_vault_name' to be a str")
        pulumi.set(__self__, "recovery_vault_name", recovery_vault_name)
        if resource_group_name and not isinstance(resource_group_name, str):
            raise TypeError("Expected argument 'resource_group_name' to be a str")
        pulumi.set(__self__, "resource_group_name", resource_group_name)

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter
    def name(self) -> str:
        return pulumi.get(self, "name")

    @property
    @pulumi.getter(name="recoveryVaultName")
    def recovery_vault_name(self) -> str:
        return pulumi.get(self, "recovery_vault_name")

    @property
    @pulumi.getter(name="resourceGroupName")
    def resource_group_name(self) -> str:
        return pulumi.get(self, "resource_group_name")


class AwaitableGetPolicyFileshareResult(GetPolicyFileshareResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetPolicyFileshareResult(
            id=self.id,
            name=self.name,
            recovery_vault_name=self.recovery_vault_name,
            resource_group_name=self.resource_group_name)


def get_policy_fileshare(name: Optional[str] = None,
                         recovery_vault_name: Optional[str] = None,
                         resource_group_name: Optional[str] = None,
                         opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetPolicyFileshareResult:
    """
    Use this data source to access information about an existing File Share Backup Policy.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_azure as azure

    policy = azure.backup.get_policy_fileshare(name="policy",
        recovery_vault_name="recovery_vault",
        resource_group_name="resource_group")
    ```


    :param str name: Specifies the name of the File Share Backup Policy.
    :param str recovery_vault_name: Specifies the name of the Recovery Services Vault.
    :param str resource_group_name: The name of the resource group in which the File Share Backup Policy resides.
    """
    __args__ = dict()
    __args__['name'] = name
    __args__['recoveryVaultName'] = recovery_vault_name
    __args__['resourceGroupName'] = resource_group_name
    if opts is None:
        opts = pulumi.InvokeOptions()
    if opts.version is None:
        opts.version = _utilities.get_version()
    __ret__ = pulumi.runtime.invoke('azure:backup/getPolicyFileshare:getPolicyFileshare', __args__, opts=opts, typ=GetPolicyFileshareResult).value

    return AwaitableGetPolicyFileshareResult(
        id=__ret__.id,
        name=__ret__.name,
        recovery_vault_name=__ret__.recovery_vault_name,
        resource_group_name=__ret__.resource_group_name)


@_utilities.lift_output_func(get_policy_fileshare)
def get_policy_fileshare_output(name: Optional[pulumi.Input[str]] = None,
                                recovery_vault_name: Optional[pulumi.Input[str]] = None,
                                resource_group_name: Optional[pulumi.Input[str]] = None,
                                opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetPolicyFileshareResult]:
    """
    Use this data source to access information about an existing File Share Backup Policy.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_azure as azure

    policy = azure.backup.get_policy_fileshare(name="policy",
        recovery_vault_name="recovery_vault",
        resource_group_name="resource_group")
    ```


    :param str name: Specifies the name of the File Share Backup Policy.
    :param str recovery_vault_name: Specifies the name of the Recovery Services Vault.
    :param str resource_group_name: The name of the resource group in which the File Share Backup Policy resides.
    """
    ...
