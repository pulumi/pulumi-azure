# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import json
import warnings
import pulumi
import pulumi.runtime
from typing import Union
from .. import utilities, tables

class PolicyVM(pulumi.CustomResource):
    backup: pulumi.Output[dict]
    """
    Configures the Policy backup frequency, times & days as documented in the `backup` block below.

      * `frequency` (`str`) - Sets the backup frequency. Must be either `Daily` or`Weekly`.
      * `time` (`str`) - The time of day to perform the backup in 24hour format.
      * `weekdays` (`list`) - The weekday backups to retain . Must be one of `Sunday`, `Monday`, `Tuesday`, `Wednesday`, `Thursday`, `Friday` or `Saturday`.
    """
    name: pulumi.Output[str]
    """
    Specifies the name of the Backup Policy. Changing this forces a new resource to be created.
    """
    recovery_vault_name: pulumi.Output[str]
    """
    Specifies the name of the Recovery Services Vault to use. Changing this forces a new resource to be created.
    """
    resource_group_name: pulumi.Output[str]
    """
    The name of the resource group in which to create the policy. Changing this forces a new resource to be created.
    """
    retention_daily: pulumi.Output[dict]
    """
    Configures the policy daily retention as documented in the `retention_daily` block below. Required when backup frequency is `Daily`.

      * `count` (`float`) - The number of yearly backups to keep. Must be between `1` and `9999`
    """
    retention_monthly: pulumi.Output[dict]
    """
    Configures the policy monthly retention as documented in the `retention_monthly` block below.

      * `count` (`float`) - The number of yearly backups to keep. Must be between `1` and `9999`
      * `weekdays` (`list`) - The weekday backups to retain . Must be one of `Sunday`, `Monday`, `Tuesday`, `Wednesday`, `Thursday`, `Friday` or `Saturday`.
      * `weeks` (`list`) - The weeks of the month to retain backups of. Must be one of `First`, `Second`, `Third`, `Fourth`, `Last`.
    """
    retention_weekly: pulumi.Output[dict]
    """
    Configures the policy weekly retention as documented in the `retention_weekly` block below. Required when backup frequency is `Weekly`.

      * `count` (`float`) - The number of yearly backups to keep. Must be between `1` and `9999`
      * `weekdays` (`list`) - The weekday backups to retain . Must be one of `Sunday`, `Monday`, `Tuesday`, `Wednesday`, `Thursday`, `Friday` or `Saturday`.
    """
    retention_yearly: pulumi.Output[dict]
    """
    Configures the policy yearly retention as documented in the `retention_yearly` block below.

      * `count` (`float`) - The number of yearly backups to keep. Must be between `1` and `9999`
      * `months` (`list`) - The months of the year to retain backups of. Must be one of `January`, `February`, `March`, `April`, `May`, `June`, `July`, `Augest`, `September`, `October`, `November` and `December`.
      * `weekdays` (`list`) - The weekday backups to retain . Must be one of `Sunday`, `Monday`, `Tuesday`, `Wednesday`, `Thursday`, `Friday` or `Saturday`.
      * `weeks` (`list`) - The weeks of the month to retain backups of. Must be one of `First`, `Second`, `Third`, `Fourth`, `Last`.
    """
    tags: pulumi.Output[dict]
    """
    A mapping of tags to assign to the resource.
    """
    timezone: pulumi.Output[str]
    """
    Specifies the timezone. Defaults to `UTC`
    """
    def __init__(__self__, resource_name, opts=None, backup=None, name=None, recovery_vault_name=None, resource_group_name=None, retention_daily=None, retention_monthly=None, retention_weekly=None, retention_yearly=None, tags=None, timezone=None, __props__=None, __name__=None, __opts__=None):
        """
        Manages an Azure Backup VM Backup Policy.

        ## Example Usage



        ```python
        import pulumi
        import pulumi_azure as azure

        example_resource_group = azure.core.ResourceGroup("exampleResourceGroup", location="West US")
        example_vault = azure.recoveryservices.Vault("exampleVault",
            location=example_resource_group.location,
            resource_group_name=example_resource_group.name,
            sku="Standard")
        example_policy_vm = azure.backup.PolicyVM("examplePolicyVM",
            resource_group_name=example_resource_group.name,
            recovery_vault_name=example_vault.name,
            timezone="UTC",
            backup={
                "frequency": "Daily",
                "time": "23:00",
            },
            retention_daily={
                "count": 10,
            },
            retention_weekly={
                "count": 42,
                "weekdays": [
                    "Sunday",
                    "Wednesday",
                    "Friday",
                    "Saturday",
                ],
            },
            retention_monthly={
                "count": 7,
                "weekdays": [
                    "Sunday",
                    "Wednesday",
                ],
                "weeks": [
                    "First",
                    "Last",
                ],
            },
            retention_yearly={
                "count": 77,
                "weekdays": ["Sunday"],
                "weeks": ["Last"],
                "months": ["January"],
            })
        ```


        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[dict] backup: Configures the Policy backup frequency, times & days as documented in the `backup` block below.
        :param pulumi.Input[str] name: Specifies the name of the Backup Policy. Changing this forces a new resource to be created.
        :param pulumi.Input[str] recovery_vault_name: Specifies the name of the Recovery Services Vault to use. Changing this forces a new resource to be created.
        :param pulumi.Input[str] resource_group_name: The name of the resource group in which to create the policy. Changing this forces a new resource to be created.
        :param pulumi.Input[dict] retention_daily: Configures the policy daily retention as documented in the `retention_daily` block below. Required when backup frequency is `Daily`.
        :param pulumi.Input[dict] retention_monthly: Configures the policy monthly retention as documented in the `retention_monthly` block below.
        :param pulumi.Input[dict] retention_weekly: Configures the policy weekly retention as documented in the `retention_weekly` block below. Required when backup frequency is `Weekly`.
        :param pulumi.Input[dict] retention_yearly: Configures the policy yearly retention as documented in the `retention_yearly` block below.
        :param pulumi.Input[dict] tags: A mapping of tags to assign to the resource.
        :param pulumi.Input[str] timezone: Specifies the timezone. Defaults to `UTC`

        The **backup** object supports the following:

          * `frequency` (`pulumi.Input[str]`) - Sets the backup frequency. Must be either `Daily` or`Weekly`.
          * `time` (`pulumi.Input[str]`) - The time of day to perform the backup in 24hour format.
          * `weekdays` (`pulumi.Input[list]`) - The weekday backups to retain . Must be one of `Sunday`, `Monday`, `Tuesday`, `Wednesday`, `Thursday`, `Friday` or `Saturday`.

        The **retention_daily** object supports the following:

          * `count` (`pulumi.Input[float]`) - The number of yearly backups to keep. Must be between `1` and `9999`

        The **retention_monthly** object supports the following:

          * `count` (`pulumi.Input[float]`) - The number of yearly backups to keep. Must be between `1` and `9999`
          * `weekdays` (`pulumi.Input[list]`) - The weekday backups to retain . Must be one of `Sunday`, `Monday`, `Tuesday`, `Wednesday`, `Thursday`, `Friday` or `Saturday`.
          * `weeks` (`pulumi.Input[list]`) - The weeks of the month to retain backups of. Must be one of `First`, `Second`, `Third`, `Fourth`, `Last`.

        The **retention_weekly** object supports the following:

          * `count` (`pulumi.Input[float]`) - The number of yearly backups to keep. Must be between `1` and `9999`
          * `weekdays` (`pulumi.Input[list]`) - The weekday backups to retain . Must be one of `Sunday`, `Monday`, `Tuesday`, `Wednesday`, `Thursday`, `Friday` or `Saturday`.

        The **retention_yearly** object supports the following:

          * `count` (`pulumi.Input[float]`) - The number of yearly backups to keep. Must be between `1` and `9999`
          * `months` (`pulumi.Input[list]`) - The months of the year to retain backups of. Must be one of `January`, `February`, `March`, `April`, `May`, `June`, `July`, `Augest`, `September`, `October`, `November` and `December`.
          * `weekdays` (`pulumi.Input[list]`) - The weekday backups to retain . Must be one of `Sunday`, `Monday`, `Tuesday`, `Wednesday`, `Thursday`, `Friday` or `Saturday`.
          * `weeks` (`pulumi.Input[list]`) - The weeks of the month to retain backups of. Must be one of `First`, `Second`, `Third`, `Fourth`, `Last`.
        """
        if __name__ is not None:
            warnings.warn("explicit use of __name__ is deprecated", DeprecationWarning)
            resource_name = __name__
        if __opts__ is not None:
            warnings.warn("explicit use of __opts__ is deprecated, use 'opts' instead", DeprecationWarning)
            opts = __opts__
        if opts is None:
            opts = pulumi.ResourceOptions()
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.version is None:
            opts.version = utilities.get_version()
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = dict()

            if backup is None:
                raise TypeError("Missing required property 'backup'")
            __props__['backup'] = backup
            __props__['name'] = name
            if recovery_vault_name is None:
                raise TypeError("Missing required property 'recovery_vault_name'")
            __props__['recovery_vault_name'] = recovery_vault_name
            if resource_group_name is None:
                raise TypeError("Missing required property 'resource_group_name'")
            __props__['resource_group_name'] = resource_group_name
            __props__['retention_daily'] = retention_daily
            __props__['retention_monthly'] = retention_monthly
            __props__['retention_weekly'] = retention_weekly
            __props__['retention_yearly'] = retention_yearly
            __props__['tags'] = tags
            __props__['timezone'] = timezone
        super(PolicyVM, __self__).__init__(
            'azure:backup/policyVM:PolicyVM',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name, id, opts=None, backup=None, name=None, recovery_vault_name=None, resource_group_name=None, retention_daily=None, retention_monthly=None, retention_weekly=None, retention_yearly=None, tags=None, timezone=None):
        """
        Get an existing PolicyVM resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param str id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[dict] backup: Configures the Policy backup frequency, times & days as documented in the `backup` block below.
        :param pulumi.Input[str] name: Specifies the name of the Backup Policy. Changing this forces a new resource to be created.
        :param pulumi.Input[str] recovery_vault_name: Specifies the name of the Recovery Services Vault to use. Changing this forces a new resource to be created.
        :param pulumi.Input[str] resource_group_name: The name of the resource group in which to create the policy. Changing this forces a new resource to be created.
        :param pulumi.Input[dict] retention_daily: Configures the policy daily retention as documented in the `retention_daily` block below. Required when backup frequency is `Daily`.
        :param pulumi.Input[dict] retention_monthly: Configures the policy monthly retention as documented in the `retention_monthly` block below.
        :param pulumi.Input[dict] retention_weekly: Configures the policy weekly retention as documented in the `retention_weekly` block below. Required when backup frequency is `Weekly`.
        :param pulumi.Input[dict] retention_yearly: Configures the policy yearly retention as documented in the `retention_yearly` block below.
        :param pulumi.Input[dict] tags: A mapping of tags to assign to the resource.
        :param pulumi.Input[str] timezone: Specifies the timezone. Defaults to `UTC`

        The **backup** object supports the following:

          * `frequency` (`pulumi.Input[str]`) - Sets the backup frequency. Must be either `Daily` or`Weekly`.
          * `time` (`pulumi.Input[str]`) - The time of day to perform the backup in 24hour format.
          * `weekdays` (`pulumi.Input[list]`) - The weekday backups to retain . Must be one of `Sunday`, `Monday`, `Tuesday`, `Wednesday`, `Thursday`, `Friday` or `Saturday`.

        The **retention_daily** object supports the following:

          * `count` (`pulumi.Input[float]`) - The number of yearly backups to keep. Must be between `1` and `9999`

        The **retention_monthly** object supports the following:

          * `count` (`pulumi.Input[float]`) - The number of yearly backups to keep. Must be between `1` and `9999`
          * `weekdays` (`pulumi.Input[list]`) - The weekday backups to retain . Must be one of `Sunday`, `Monday`, `Tuesday`, `Wednesday`, `Thursday`, `Friday` or `Saturday`.
          * `weeks` (`pulumi.Input[list]`) - The weeks of the month to retain backups of. Must be one of `First`, `Second`, `Third`, `Fourth`, `Last`.

        The **retention_weekly** object supports the following:

          * `count` (`pulumi.Input[float]`) - The number of yearly backups to keep. Must be between `1` and `9999`
          * `weekdays` (`pulumi.Input[list]`) - The weekday backups to retain . Must be one of `Sunday`, `Monday`, `Tuesday`, `Wednesday`, `Thursday`, `Friday` or `Saturday`.

        The **retention_yearly** object supports the following:

          * `count` (`pulumi.Input[float]`) - The number of yearly backups to keep. Must be between `1` and `9999`
          * `months` (`pulumi.Input[list]`) - The months of the year to retain backups of. Must be one of `January`, `February`, `March`, `April`, `May`, `June`, `July`, `Augest`, `September`, `October`, `November` and `December`.
          * `weekdays` (`pulumi.Input[list]`) - The weekday backups to retain . Must be one of `Sunday`, `Monday`, `Tuesday`, `Wednesday`, `Thursday`, `Friday` or `Saturday`.
          * `weeks` (`pulumi.Input[list]`) - The weeks of the month to retain backups of. Must be one of `First`, `Second`, `Third`, `Fourth`, `Last`.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = dict()

        __props__["backup"] = backup
        __props__["name"] = name
        __props__["recovery_vault_name"] = recovery_vault_name
        __props__["resource_group_name"] = resource_group_name
        __props__["retention_daily"] = retention_daily
        __props__["retention_monthly"] = retention_monthly
        __props__["retention_weekly"] = retention_weekly
        __props__["retention_yearly"] = retention_yearly
        __props__["tags"] = tags
        __props__["timezone"] = timezone
        return PolicyVM(resource_name, opts=opts, __props__=__props__)
    def translate_output_property(self, prop):
        return tables._CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop

    def translate_input_property(self, prop):
        return tables._SNAKE_TO_CAMEL_CASE_TABLE.get(prop) or prop

