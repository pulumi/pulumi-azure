# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities

__all__ = [
    'CustomLocationAuthenticationArgs',
    'CustomLocationAuthenticationArgsDict',
]

MYPY = False

if not MYPY:
    class CustomLocationAuthenticationArgsDict(TypedDict):
        value: pulumi.Input[str]
        """
        Specifies the value of authentication.
        """
        type: NotRequired[pulumi.Input[str]]
        """
        Specifies the type of authentication.
        """
elif False:
    CustomLocationAuthenticationArgsDict: TypeAlias = Mapping[str, Any]

@pulumi.input_type
class CustomLocationAuthenticationArgs:
    def __init__(__self__, *,
                 value: pulumi.Input[str],
                 type: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] value: Specifies the value of authentication.
        :param pulumi.Input[str] type: Specifies the type of authentication.
        """
        pulumi.set(__self__, "value", value)
        if type is not None:
            pulumi.set(__self__, "type", type)

    @property
    @pulumi.getter
    def value(self) -> pulumi.Input[str]:
        """
        Specifies the value of authentication.
        """
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: pulumi.Input[str]):
        pulumi.set(self, "value", value)

    @property
    @pulumi.getter
    def type(self) -> Optional[pulumi.Input[str]]:
        """
        Specifies the type of authentication.
        """
        return pulumi.get(self, "type")

    @type.setter
    def type(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "type", value)


