# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities

__all__ = [
    'HostPoolRegistrationInfoArgs',
]

@pulumi.input_type
class HostPoolRegistrationInfoArgs:
    def __init__(__self__, *,
                 expiration_date: pulumi.Input[str],
                 reset_token: Optional[pulumi.Input[bool]] = None,
                 token: Optional[pulumi.Input[str]] = None):
        """
        :param pulumi.Input[str] expiration_date: A valid `RFC3339Time` for the expiration of the token.
        :param pulumi.Input[str] token: The registration token generated by the Virtual Desktop Host Pool.
        """
        pulumi.set(__self__, "expiration_date", expiration_date)
        if reset_token is not None:
            pulumi.set(__self__, "reset_token", reset_token)
        if token is not None:
            pulumi.set(__self__, "token", token)

    @property
    @pulumi.getter(name="expirationDate")
    def expiration_date(self) -> pulumi.Input[str]:
        """
        A valid `RFC3339Time` for the expiration of the token.
        """
        return pulumi.get(self, "expiration_date")

    @expiration_date.setter
    def expiration_date(self, value: pulumi.Input[str]):
        pulumi.set(self, "expiration_date", value)

    @property
    @pulumi.getter(name="resetToken")
    def reset_token(self) -> Optional[pulumi.Input[bool]]:
        return pulumi.get(self, "reset_token")

    @reset_token.setter
    def reset_token(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "reset_token", value)

    @property
    @pulumi.getter
    def token(self) -> Optional[pulumi.Input[str]]:
        """
        The registration token generated by the Virtual Desktop Host Pool.
        """
        return pulumi.get(self, "token")

    @token.setter
    def token(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "token", value)


