# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import pulumi
import pulumi.runtime
from .. import utilities, tables

class Group(pulumi.CustomResource):
    """
    Manage as an Azure Container Group instance.
    """
    def __init__(__self__, __name__, __opts__=None, containers=None, dns_name_label=None, image_registry_credentials=None, ip_address_type=None, location=None, name=None, os_type=None, resource_group_name=None, restart_policy=None, tags=None):
        """Create a Group resource with the given unique name, props, and options."""
        if not __name__:
            raise TypeError('Missing resource name argument (for URN creation)')
        if not isinstance(__name__, str):
            raise TypeError('Expected resource name to be a string')
        if __opts__ and not isinstance(__opts__, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')

        __props__ = dict()

        if not containers:
            raise TypeError('Missing required property containers')
        __props__['containers'] = containers

        __props__['dns_name_label'] = dns_name_label

        __props__['image_registry_credentials'] = image_registry_credentials

        __props__['ip_address_type'] = ip_address_type

        if not location:
            raise TypeError('Missing required property location')
        __props__['location'] = location

        __props__['name'] = name

        if not os_type:
            raise TypeError('Missing required property os_type')
        __props__['os_type'] = os_type

        if not resource_group_name:
            raise TypeError('Missing required property resource_group_name')
        __props__['resource_group_name'] = resource_group_name

        __props__['restart_policy'] = restart_policy

        __props__['tags'] = tags

        __props__['fqdn'] = None
        __props__['ip_address'] = None

        super(Group, __self__).__init__(
            'azure:containerservice/group:Group',
            __name__,
            __props__,
            __opts__)


    def translate_output_property(self, prop):
        return tables._CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop

    def translate_input_property(self, prop):
        return tables._SNAKE_TO_CAMEL_CASE_TABLE.get(prop) or prop

