# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import json
import warnings
import pulumi
import pulumi.runtime
from .. import utilities, tables

class ShareDirectory(pulumi.CustomResource):
    metadata: pulumi.Output[dict]
    """
    A mapping of metadata to assign to this Directory.
    """
    name: pulumi.Output[str]
    """
    The name (or path) of the Directory that should be created within this File Share. Changing this forces a new resource to be created.
    """
    share_name: pulumi.Output[str]
    """
    The name of the File Share where this Directory should be created. Changing this forces a new resource to be created.
    """
    storage_account_name: pulumi.Output[str]
    """
    The name of the Storage Account within which the File Share is located. Changing this forces a new resource to be created.
    """
    def __init__(__self__, resource_name, opts=None, metadata=None, name=None, share_name=None, storage_account_name=None, __name__=None, __opts__=None):
        """
        Manage a Directory within an Azure Storage File Share.
        
        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[dict] metadata: A mapping of metadata to assign to this Directory.
        :param pulumi.Input[str] name: The name (or path) of the Directory that should be created within this File Share. Changing this forces a new resource to be created.
        :param pulumi.Input[str] share_name: The name of the File Share where this Directory should be created. Changing this forces a new resource to be created.
        :param pulumi.Input[str] storage_account_name: The name of the Storage Account within which the File Share is located. Changing this forces a new resource to be created.

        > This content is derived from https://github.com/terraform-providers/terraform-provider-azurerm/blob/master/website/docs/r/storage_share_directory.html.markdown.
        """
        if __name__ is not None:
            warnings.warn("explicit use of __name__ is deprecated", DeprecationWarning)
            resource_name = __name__
        if __opts__ is not None:
            warnings.warn("explicit use of __opts__ is deprecated, use 'opts' instead", DeprecationWarning)
            opts = __opts__
        if not resource_name:
            raise TypeError('Missing resource name argument (for URN creation)')
        if not isinstance(resource_name, str):
            raise TypeError('Expected resource name to be a string')
        if opts and not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')

        __props__ = dict()

        __props__['metadata'] = metadata

        __props__['name'] = name

        if share_name is None:
            raise TypeError("Missing required property 'share_name'")
        __props__['share_name'] = share_name

        if storage_account_name is None:
            raise TypeError("Missing required property 'storage_account_name'")
        __props__['storage_account_name'] = storage_account_name

        super(ShareDirectory, __self__).__init__(
            'azure:storage/shareDirectory:ShareDirectory',
            resource_name,
            __props__,
            opts)


    def translate_output_property(self, prop):
        return tables._CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop

    def translate_input_property(self, prop):
        return tables._SNAKE_TO_CAMEL_CASE_TABLE.get(prop) or prop

