# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import json
import warnings
import pulumi
import pulumi.runtime
from typing import Union
from .. import utilities, tables

class Account(pulumi.CustomResource):
    access_tier: pulumi.Output[str]
    """
    Defines the access tier for `BlobStorage`, `FileStorage` and `StorageV2` accounts. Valid options are `Hot` and `Cool`, defaults to `Hot`.
    """
    account_kind: pulumi.Output[str]
    """
    Defines the Kind of account. Valid options are `BlobStorage`, `BlockBlobStorage`, `FileStorage`, `Storage` and `StorageV2`. Changing this forces a new resource to be created. Defaults to `StorageV2`.
    """
    account_replication_type: pulumi.Output[str]
    """
    Defines the type of replication to use for this storage account. Valid options are `LRS`, `GRS`, `RAGRS` and `ZRS`.
    """
    account_tier: pulumi.Output[str]
    """
    Defines the Tier to use for this storage account. Valid options are `Standard` and `Premium`. For `FileStorage` accounts only `Premium` is valid. Changing this forces a new resource to be created.
    """
    blob_properties: pulumi.Output[dict]
    """
    A `blob_properties` block as defined below.

      * `corsRules` (`list`) - A `cors_rule` block as defined below.
        * `allowedHeaders` (`list`) - A list of headers that are allowed to be a part of the cross-origin request.
        * `allowedMethods` (`list`) - A list of http headers that are allowed to be executed by the origin. Valid options are
          `DELETE`, `GET`, `HEAD`, `MERGE`, `POST`, `OPTIONS` or `PUT`.
        * `allowedOrigins` (`list`) - A list of origin domains that will be allowed by CORS.
        * `exposedHeaders` (`list`) - A list of response headers that are exposed to CORS clients.
        * `maxAgeInSeconds` (`float`) - The number of seconds the client should cache a preflight response.

      * `deleteRetentionPolicy` (`dict`) - A `delete_retention_policy` block as defined below.
        * `days` (`float`) - Specifies the number of days that the blob should be retained, between `1` and `365` days. Defaults to `7`.
    """
    custom_domain: pulumi.Output[dict]
    """
    A `custom_domain` block as documented below.

      * `name` (`str`) - The Custom Domain Name to use for the Storage Account, which will be validated by Azure.
      * `useSubdomain` (`bool`) - Should the Custom Domain Name be validated by using indirect CNAME validation?
    """
    enable_https_traffic_only: pulumi.Output[bool]
    """
    Boolean flag which forces HTTPS if enabled, see [here](https://docs.microsoft.com/en-us/azure/storage/storage-require-secure-transfer/)
    for more information. Defaults to `true`.
    """
    identity: pulumi.Output[dict]
    """
    A `identity` block as defined below.

      * `principal_id` (`str`) - The Principal ID for the Service Principal associated with the Identity of this Storage Account.
      * `tenant_id` (`str`) - The Tenant ID for the Service Principal associated with the Identity of this Storage Account.
      * `type` (`str`) - Specifies the identity type of the Storage Account. At this time the only allowed value is `SystemAssigned`.
    """
    is_hns_enabled: pulumi.Output[bool]
    """
    Is Hierarchical Namespace enabled? This can be used with Azure Data Lake Storage Gen 2 ([see here for more information](https://docs.microsoft.com/en-us/azure/storage/blobs/data-lake-storage-quickstart-create-account/)). Changing this forces a new resource to be created.
    """
    location: pulumi.Output[str]
    """
    Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
    """
    name: pulumi.Output[str]
    """
    Specifies the name of the storage account. Changing this forces a new resource to be created. This must be unique across the entire Azure service, not just within the resource group.
    """
    network_rules: pulumi.Output[dict]
    """
    A `network_rules` block as documented below.

      * `bypasses` (`list`) - Specifies whether traffic is bypassed for Logging/Metrics/AzureServices. Valid options are
        any combination of `Logging`, `Metrics`, `AzureServices`, or `None`.
      * `default_action` (`str`) - Specifies the default action of allow or deny when no other rules match. Valid options are `Deny` or `Allow`.
      * `ip_rules` (`list`) - List of public IP or IP ranges in CIDR Format. Only IPV4 addresses are allowed. Private IP address ranges (as defined in [RFC 1918](https://tools.ietf.org/html/rfc1918#section-3)) are not allowed.
      * `virtual_network_subnet_ids` (`list`) - A list of resource ids for subnets.
    """
    primary_access_key: pulumi.Output[str]
    """
    The primary access key for the storage account.
    """
    primary_blob_connection_string: pulumi.Output[str]
    """
    The connection string associated with the primary blob location.
    """
    primary_blob_endpoint: pulumi.Output[str]
    """
    The endpoint URL for blob storage in the primary location.
    """
    primary_blob_host: pulumi.Output[str]
    """
    The hostname with port if applicable for blob storage in the primary location.
    """
    primary_connection_string: pulumi.Output[str]
    """
    The connection string associated with the primary location.
    """
    primary_dfs_endpoint: pulumi.Output[str]
    """
    The endpoint URL for DFS storage in the primary location.
    """
    primary_dfs_host: pulumi.Output[str]
    """
    The hostname with port if applicable for DFS storage in the primary location.
    """
    primary_file_endpoint: pulumi.Output[str]
    """
    The endpoint URL for file storage in the primary location.
    """
    primary_file_host: pulumi.Output[str]
    """
    The hostname with port if applicable for file storage in the primary location.
    """
    primary_location: pulumi.Output[str]
    """
    The primary location of the storage account.
    """
    primary_queue_endpoint: pulumi.Output[str]
    """
    The endpoint URL for queue storage in the primary location.
    """
    primary_queue_host: pulumi.Output[str]
    """
    The hostname with port if applicable for queue storage in the primary location.
    """
    primary_table_endpoint: pulumi.Output[str]
    """
    The endpoint URL for table storage in the primary location.
    """
    primary_table_host: pulumi.Output[str]
    """
    The hostname with port if applicable for table storage in the primary location.
    """
    primary_web_endpoint: pulumi.Output[str]
    """
    The endpoint URL for web storage in the primary location.
    """
    primary_web_host: pulumi.Output[str]
    """
    The hostname with port if applicable for web storage in the primary location.
    """
    queue_properties: pulumi.Output[dict]
    """
    A `queue_properties` block as defined below.

      * `corsRules` (`list`) - A `cors_rule` block as defined above.
        * `allowedHeaders` (`list`) - A list of headers that are allowed to be a part of the cross-origin request.
        * `allowedMethods` (`list`) - A list of http headers that are allowed to be executed by the origin. Valid options are
          `DELETE`, `GET`, `HEAD`, `MERGE`, `POST`, `OPTIONS` or `PUT`.
        * `allowedOrigins` (`list`) - A list of origin domains that will be allowed by CORS.
        * `exposedHeaders` (`list`) - A list of response headers that are exposed to CORS clients.
        * `maxAgeInSeconds` (`float`) - The number of seconds the client should cache a preflight response.

      * `hourMetrics` (`dict`) - A `hour_metrics` block as defined below.
        * `enabled` (`bool`) - Indicates whether hour metrics are enabled for the Queue service. Changing this forces a new resource.
        * `includeApis` (`bool`) - Indicates whether metrics should generate summary statistics for called API operations.
        * `retentionPolicyDays` (`float`) - Specifies the number of days that logs will be retained. Changing this forces a new resource.
        * `version` (`str`) - The version of storage analytics to configure. Changing this forces a new resource.

      * `logging` (`dict`) - A `logging` block as defined below.
        * `delete` (`bool`) - Indicates whether all delete requests should be logged. Changing this forces a new resource.
        * `read` (`bool`) - Indicates whether all read requests should be logged. Changing this forces a new resource.
        * `retentionPolicyDays` (`float`) - Specifies the number of days that logs will be retained. Changing this forces a new resource.
        * `version` (`str`) - The version of storage analytics to configure. Changing this forces a new resource.
        * `write` (`bool`) - Indicates whether all write requests should be logged. Changing this forces a new resource.

      * `minuteMetrics` (`dict`) - A `minute_metrics` block as defined below.
        * `enabled` (`bool`) - Indicates whether minute metrics are enabled for the Queue service. Changing this forces a new resource.
        * `includeApis` (`bool`) - Indicates whether metrics should generate summary statistics for called API operations.
        * `retentionPolicyDays` (`float`) - Specifies the number of days that logs will be retained. Changing this forces a new resource.
        * `version` (`str`) - The version of storage analytics to configure. Changing this forces a new resource.
    """
    resource_group_name: pulumi.Output[str]
    """
    The name of the resource group in which to create the storage account. Changing this forces a new resource to be created.
    """
    secondary_access_key: pulumi.Output[str]
    """
    The secondary access key for the storage account.
    """
    secondary_blob_connection_string: pulumi.Output[str]
    """
    The connection string associated with the secondary blob location.
    """
    secondary_blob_endpoint: pulumi.Output[str]
    """
    The endpoint URL for blob storage in the secondary location.
    """
    secondary_blob_host: pulumi.Output[str]
    """
    The hostname with port if applicable for blob storage in the secondary location.
    """
    secondary_connection_string: pulumi.Output[str]
    """
    The connection string associated with the secondary location.
    """
    secondary_dfs_endpoint: pulumi.Output[str]
    """
    The endpoint URL for DFS storage in the secondary location.
    """
    secondary_dfs_host: pulumi.Output[str]
    """
    The hostname with port if applicable for DFS storage in the secondary location.
    """
    secondary_file_endpoint: pulumi.Output[str]
    """
    The endpoint URL for file storage in the secondary location.
    """
    secondary_file_host: pulumi.Output[str]
    """
    The hostname with port if applicable for file storage in the secondary location.
    """
    secondary_location: pulumi.Output[str]
    """
    The secondary location of the storage account.
    """
    secondary_queue_endpoint: pulumi.Output[str]
    """
    The endpoint URL for queue storage in the secondary location.
    """
    secondary_queue_host: pulumi.Output[str]
    """
    The hostname with port if applicable for queue storage in the secondary location.
    """
    secondary_table_endpoint: pulumi.Output[str]
    """
    The endpoint URL for table storage in the secondary location.
    """
    secondary_table_host: pulumi.Output[str]
    """
    The hostname with port if applicable for table storage in the secondary location.
    """
    secondary_web_endpoint: pulumi.Output[str]
    """
    The endpoint URL for web storage in the secondary location.
    """
    secondary_web_host: pulumi.Output[str]
    """
    The hostname with port if applicable for web storage in the secondary location.
    """
    static_website: pulumi.Output[dict]
    """
    A `static_website` block as defined below.

      * `error404Document` (`str`) - The absolute path to a custom webpage that should be used when a request is made which does not correspond to an existing file.
      * `indexDocument` (`str`) - The webpage that Azure Storage serves for requests to the root of a website or any subfolder. For example, index.html. The value is case-sensitive.
    """
    tags: pulumi.Output[dict]
    """
    A mapping of tags to assign to the resource.
    """
    def __init__(__self__, resource_name, opts=None, access_tier=None, account_kind=None, account_replication_type=None, account_tier=None, blob_properties=None, custom_domain=None, enable_https_traffic_only=None, identity=None, is_hns_enabled=None, location=None, name=None, network_rules=None, queue_properties=None, resource_group_name=None, static_website=None, tags=None, __props__=None, __name__=None, __opts__=None):
        """
        Manages an Azure Storage Account.



        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] access_tier: Defines the access tier for `BlobStorage`, `FileStorage` and `StorageV2` accounts. Valid options are `Hot` and `Cool`, defaults to `Hot`.
        :param pulumi.Input[str] account_kind: Defines the Kind of account. Valid options are `BlobStorage`, `BlockBlobStorage`, `FileStorage`, `Storage` and `StorageV2`. Changing this forces a new resource to be created. Defaults to `StorageV2`.
        :param pulumi.Input[str] account_replication_type: Defines the type of replication to use for this storage account. Valid options are `LRS`, `GRS`, `RAGRS` and `ZRS`.
        :param pulumi.Input[str] account_tier: Defines the Tier to use for this storage account. Valid options are `Standard` and `Premium`. For `FileStorage` accounts only `Premium` is valid. Changing this forces a new resource to be created.
        :param pulumi.Input[dict] blob_properties: A `blob_properties` block as defined below.
        :param pulumi.Input[dict] custom_domain: A `custom_domain` block as documented below.
        :param pulumi.Input[bool] enable_https_traffic_only: Boolean flag which forces HTTPS if enabled, see [here](https://docs.microsoft.com/en-us/azure/storage/storage-require-secure-transfer/)
               for more information. Defaults to `true`.
        :param pulumi.Input[dict] identity: A `identity` block as defined below.
        :param pulumi.Input[bool] is_hns_enabled: Is Hierarchical Namespace enabled? This can be used with Azure Data Lake Storage Gen 2 ([see here for more information](https://docs.microsoft.com/en-us/azure/storage/blobs/data-lake-storage-quickstart-create-account/)). Changing this forces a new resource to be created.
        :param pulumi.Input[str] location: Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
        :param pulumi.Input[str] name: Specifies the name of the storage account. Changing this forces a new resource to be created. This must be unique across the entire Azure service, not just within the resource group.
        :param pulumi.Input[dict] network_rules: A `network_rules` block as documented below.
        :param pulumi.Input[dict] queue_properties: A `queue_properties` block as defined below.
        :param pulumi.Input[str] resource_group_name: The name of the resource group in which to create the storage account. Changing this forces a new resource to be created.
        :param pulumi.Input[dict] static_website: A `static_website` block as defined below.
        :param pulumi.Input[dict] tags: A mapping of tags to assign to the resource.

        The **blob_properties** object supports the following:

          * `corsRules` (`pulumi.Input[list]`) - A `cors_rule` block as defined below.
            * `allowedHeaders` (`pulumi.Input[list]`) - A list of headers that are allowed to be a part of the cross-origin request.
            * `allowedMethods` (`pulumi.Input[list]`) - A list of http headers that are allowed to be executed by the origin. Valid options are
              `DELETE`, `GET`, `HEAD`, `MERGE`, `POST`, `OPTIONS` or `PUT`.
            * `allowedOrigins` (`pulumi.Input[list]`) - A list of origin domains that will be allowed by CORS.
            * `exposedHeaders` (`pulumi.Input[list]`) - A list of response headers that are exposed to CORS clients.
            * `maxAgeInSeconds` (`pulumi.Input[float]`) - The number of seconds the client should cache a preflight response.

          * `deleteRetentionPolicy` (`pulumi.Input[dict]`) - A `delete_retention_policy` block as defined below.
            * `days` (`pulumi.Input[float]`) - Specifies the number of days that the blob should be retained, between `1` and `365` days. Defaults to `7`.

        The **custom_domain** object supports the following:

          * `name` (`pulumi.Input[str]`) - The Custom Domain Name to use for the Storage Account, which will be validated by Azure.
          * `useSubdomain` (`pulumi.Input[bool]`) - Should the Custom Domain Name be validated by using indirect CNAME validation?

        The **identity** object supports the following:

          * `principal_id` (`pulumi.Input[str]`) - The Principal ID for the Service Principal associated with the Identity of this Storage Account.
          * `tenant_id` (`pulumi.Input[str]`) - The Tenant ID for the Service Principal associated with the Identity of this Storage Account.
          * `type` (`pulumi.Input[str]`) - Specifies the identity type of the Storage Account. At this time the only allowed value is `SystemAssigned`.

        The **network_rules** object supports the following:

          * `bypasses` (`pulumi.Input[list]`) - Specifies whether traffic is bypassed for Logging/Metrics/AzureServices. Valid options are
            any combination of `Logging`, `Metrics`, `AzureServices`, or `None`.
          * `default_action` (`pulumi.Input[str]`) - Specifies the default action of allow or deny when no other rules match. Valid options are `Deny` or `Allow`.
          * `ip_rules` (`pulumi.Input[list]`) - List of public IP or IP ranges in CIDR Format. Only IPV4 addresses are allowed. Private IP address ranges (as defined in [RFC 1918](https://tools.ietf.org/html/rfc1918#section-3)) are not allowed.
          * `virtual_network_subnet_ids` (`pulumi.Input[list]`) - A list of resource ids for subnets.

        The **queue_properties** object supports the following:

          * `corsRules` (`pulumi.Input[list]`) - A `cors_rule` block as defined above.
            * `allowedHeaders` (`pulumi.Input[list]`) - A list of headers that are allowed to be a part of the cross-origin request.
            * `allowedMethods` (`pulumi.Input[list]`) - A list of http headers that are allowed to be executed by the origin. Valid options are
              `DELETE`, `GET`, `HEAD`, `MERGE`, `POST`, `OPTIONS` or `PUT`.
            * `allowedOrigins` (`pulumi.Input[list]`) - A list of origin domains that will be allowed by CORS.
            * `exposedHeaders` (`pulumi.Input[list]`) - A list of response headers that are exposed to CORS clients.
            * `maxAgeInSeconds` (`pulumi.Input[float]`) - The number of seconds the client should cache a preflight response.

          * `hourMetrics` (`pulumi.Input[dict]`) - A `hour_metrics` block as defined below.
            * `enabled` (`pulumi.Input[bool]`) - Indicates whether hour metrics are enabled for the Queue service. Changing this forces a new resource.
            * `includeApis` (`pulumi.Input[bool]`) - Indicates whether metrics should generate summary statistics for called API operations.
            * `retentionPolicyDays` (`pulumi.Input[float]`) - Specifies the number of days that logs will be retained. Changing this forces a new resource.
            * `version` (`pulumi.Input[str]`) - The version of storage analytics to configure. Changing this forces a new resource.

          * `logging` (`pulumi.Input[dict]`) - A `logging` block as defined below.
            * `delete` (`pulumi.Input[bool]`) - Indicates whether all delete requests should be logged. Changing this forces a new resource.
            * `read` (`pulumi.Input[bool]`) - Indicates whether all read requests should be logged. Changing this forces a new resource.
            * `retentionPolicyDays` (`pulumi.Input[float]`) - Specifies the number of days that logs will be retained. Changing this forces a new resource.
            * `version` (`pulumi.Input[str]`) - The version of storage analytics to configure. Changing this forces a new resource.
            * `write` (`pulumi.Input[bool]`) - Indicates whether all write requests should be logged. Changing this forces a new resource.

          * `minuteMetrics` (`pulumi.Input[dict]`) - A `minute_metrics` block as defined below.
            * `enabled` (`pulumi.Input[bool]`) - Indicates whether minute metrics are enabled for the Queue service. Changing this forces a new resource.
            * `includeApis` (`pulumi.Input[bool]`) - Indicates whether metrics should generate summary statistics for called API operations.
            * `retentionPolicyDays` (`pulumi.Input[float]`) - Specifies the number of days that logs will be retained. Changing this forces a new resource.
            * `version` (`pulumi.Input[str]`) - The version of storage analytics to configure. Changing this forces a new resource.

        The **static_website** object supports the following:

          * `error404Document` (`pulumi.Input[str]`) - The absolute path to a custom webpage that should be used when a request is made which does not correspond to an existing file.
          * `indexDocument` (`pulumi.Input[str]`) - The webpage that Azure Storage serves for requests to the root of a website or any subfolder. For example, index.html. The value is case-sensitive.
        """
        if __name__ is not None:
            warnings.warn("explicit use of __name__ is deprecated", DeprecationWarning)
            resource_name = __name__
        if __opts__ is not None:
            warnings.warn("explicit use of __opts__ is deprecated, use 'opts' instead", DeprecationWarning)
            opts = __opts__
        if opts is None:
            opts = pulumi.ResourceOptions()
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.version is None:
            opts.version = utilities.get_version()
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = dict()

            __props__['access_tier'] = access_tier
            __props__['account_kind'] = account_kind
            if account_replication_type is None:
                raise TypeError("Missing required property 'account_replication_type'")
            __props__['account_replication_type'] = account_replication_type
            if account_tier is None:
                raise TypeError("Missing required property 'account_tier'")
            __props__['account_tier'] = account_tier
            __props__['blob_properties'] = blob_properties
            __props__['custom_domain'] = custom_domain
            __props__['enable_https_traffic_only'] = enable_https_traffic_only
            __props__['identity'] = identity
            __props__['is_hns_enabled'] = is_hns_enabled
            __props__['location'] = location
            __props__['name'] = name
            __props__['network_rules'] = network_rules
            __props__['queue_properties'] = queue_properties
            if resource_group_name is None:
                raise TypeError("Missing required property 'resource_group_name'")
            __props__['resource_group_name'] = resource_group_name
            __props__['static_website'] = static_website
            __props__['tags'] = tags
            __props__['primary_access_key'] = None
            __props__['primary_blob_connection_string'] = None
            __props__['primary_blob_endpoint'] = None
            __props__['primary_blob_host'] = None
            __props__['primary_connection_string'] = None
            __props__['primary_dfs_endpoint'] = None
            __props__['primary_dfs_host'] = None
            __props__['primary_file_endpoint'] = None
            __props__['primary_file_host'] = None
            __props__['primary_location'] = None
            __props__['primary_queue_endpoint'] = None
            __props__['primary_queue_host'] = None
            __props__['primary_table_endpoint'] = None
            __props__['primary_table_host'] = None
            __props__['primary_web_endpoint'] = None
            __props__['primary_web_host'] = None
            __props__['secondary_access_key'] = None
            __props__['secondary_blob_connection_string'] = None
            __props__['secondary_blob_endpoint'] = None
            __props__['secondary_blob_host'] = None
            __props__['secondary_connection_string'] = None
            __props__['secondary_dfs_endpoint'] = None
            __props__['secondary_dfs_host'] = None
            __props__['secondary_file_endpoint'] = None
            __props__['secondary_file_host'] = None
            __props__['secondary_location'] = None
            __props__['secondary_queue_endpoint'] = None
            __props__['secondary_queue_host'] = None
            __props__['secondary_table_endpoint'] = None
            __props__['secondary_table_host'] = None
            __props__['secondary_web_endpoint'] = None
            __props__['secondary_web_host'] = None
        super(Account, __self__).__init__(
            'azure:storage/account:Account',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name, id, opts=None, access_tier=None, account_kind=None, account_replication_type=None, account_tier=None, blob_properties=None, custom_domain=None, enable_https_traffic_only=None, identity=None, is_hns_enabled=None, location=None, name=None, network_rules=None, primary_access_key=None, primary_blob_connection_string=None, primary_blob_endpoint=None, primary_blob_host=None, primary_connection_string=None, primary_dfs_endpoint=None, primary_dfs_host=None, primary_file_endpoint=None, primary_file_host=None, primary_location=None, primary_queue_endpoint=None, primary_queue_host=None, primary_table_endpoint=None, primary_table_host=None, primary_web_endpoint=None, primary_web_host=None, queue_properties=None, resource_group_name=None, secondary_access_key=None, secondary_blob_connection_string=None, secondary_blob_endpoint=None, secondary_blob_host=None, secondary_connection_string=None, secondary_dfs_endpoint=None, secondary_dfs_host=None, secondary_file_endpoint=None, secondary_file_host=None, secondary_location=None, secondary_queue_endpoint=None, secondary_queue_host=None, secondary_table_endpoint=None, secondary_table_host=None, secondary_web_endpoint=None, secondary_web_host=None, static_website=None, tags=None):
        """
        Get an existing Account resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param str id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] access_tier: Defines the access tier for `BlobStorage`, `FileStorage` and `StorageV2` accounts. Valid options are `Hot` and `Cool`, defaults to `Hot`.
        :param pulumi.Input[str] account_kind: Defines the Kind of account. Valid options are `BlobStorage`, `BlockBlobStorage`, `FileStorage`, `Storage` and `StorageV2`. Changing this forces a new resource to be created. Defaults to `StorageV2`.
        :param pulumi.Input[str] account_replication_type: Defines the type of replication to use for this storage account. Valid options are `LRS`, `GRS`, `RAGRS` and `ZRS`.
        :param pulumi.Input[str] account_tier: Defines the Tier to use for this storage account. Valid options are `Standard` and `Premium`. For `FileStorage` accounts only `Premium` is valid. Changing this forces a new resource to be created.
        :param pulumi.Input[dict] blob_properties: A `blob_properties` block as defined below.
        :param pulumi.Input[dict] custom_domain: A `custom_domain` block as documented below.
        :param pulumi.Input[bool] enable_https_traffic_only: Boolean flag which forces HTTPS if enabled, see [here](https://docs.microsoft.com/en-us/azure/storage/storage-require-secure-transfer/)
               for more information. Defaults to `true`.
        :param pulumi.Input[dict] identity: A `identity` block as defined below.
        :param pulumi.Input[bool] is_hns_enabled: Is Hierarchical Namespace enabled? This can be used with Azure Data Lake Storage Gen 2 ([see here for more information](https://docs.microsoft.com/en-us/azure/storage/blobs/data-lake-storage-quickstart-create-account/)). Changing this forces a new resource to be created.
        :param pulumi.Input[str] location: Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
        :param pulumi.Input[str] name: Specifies the name of the storage account. Changing this forces a new resource to be created. This must be unique across the entire Azure service, not just within the resource group.
        :param pulumi.Input[dict] network_rules: A `network_rules` block as documented below.
        :param pulumi.Input[str] primary_access_key: The primary access key for the storage account.
        :param pulumi.Input[str] primary_blob_connection_string: The connection string associated with the primary blob location.
        :param pulumi.Input[str] primary_blob_endpoint: The endpoint URL for blob storage in the primary location.
        :param pulumi.Input[str] primary_blob_host: The hostname with port if applicable for blob storage in the primary location.
        :param pulumi.Input[str] primary_connection_string: The connection string associated with the primary location.
        :param pulumi.Input[str] primary_dfs_endpoint: The endpoint URL for DFS storage in the primary location.
        :param pulumi.Input[str] primary_dfs_host: The hostname with port if applicable for DFS storage in the primary location.
        :param pulumi.Input[str] primary_file_endpoint: The endpoint URL for file storage in the primary location.
        :param pulumi.Input[str] primary_file_host: The hostname with port if applicable for file storage in the primary location.
        :param pulumi.Input[str] primary_location: The primary location of the storage account.
        :param pulumi.Input[str] primary_queue_endpoint: The endpoint URL for queue storage in the primary location.
        :param pulumi.Input[str] primary_queue_host: The hostname with port if applicable for queue storage in the primary location.
        :param pulumi.Input[str] primary_table_endpoint: The endpoint URL for table storage in the primary location.
        :param pulumi.Input[str] primary_table_host: The hostname with port if applicable for table storage in the primary location.
        :param pulumi.Input[str] primary_web_endpoint: The endpoint URL for web storage in the primary location.
        :param pulumi.Input[str] primary_web_host: The hostname with port if applicable for web storage in the primary location.
        :param pulumi.Input[dict] queue_properties: A `queue_properties` block as defined below.
        :param pulumi.Input[str] resource_group_name: The name of the resource group in which to create the storage account. Changing this forces a new resource to be created.
        :param pulumi.Input[str] secondary_access_key: The secondary access key for the storage account.
        :param pulumi.Input[str] secondary_blob_connection_string: The connection string associated with the secondary blob location.
        :param pulumi.Input[str] secondary_blob_endpoint: The endpoint URL for blob storage in the secondary location.
        :param pulumi.Input[str] secondary_blob_host: The hostname with port if applicable for blob storage in the secondary location.
        :param pulumi.Input[str] secondary_connection_string: The connection string associated with the secondary location.
        :param pulumi.Input[str] secondary_dfs_endpoint: The endpoint URL for DFS storage in the secondary location.
        :param pulumi.Input[str] secondary_dfs_host: The hostname with port if applicable for DFS storage in the secondary location.
        :param pulumi.Input[str] secondary_file_endpoint: The endpoint URL for file storage in the secondary location.
        :param pulumi.Input[str] secondary_file_host: The hostname with port if applicable for file storage in the secondary location.
        :param pulumi.Input[str] secondary_location: The secondary location of the storage account.
        :param pulumi.Input[str] secondary_queue_endpoint: The endpoint URL for queue storage in the secondary location.
        :param pulumi.Input[str] secondary_queue_host: The hostname with port if applicable for queue storage in the secondary location.
        :param pulumi.Input[str] secondary_table_endpoint: The endpoint URL for table storage in the secondary location.
        :param pulumi.Input[str] secondary_table_host: The hostname with port if applicable for table storage in the secondary location.
        :param pulumi.Input[str] secondary_web_endpoint: The endpoint URL for web storage in the secondary location.
        :param pulumi.Input[str] secondary_web_host: The hostname with port if applicable for web storage in the secondary location.
        :param pulumi.Input[dict] static_website: A `static_website` block as defined below.
        :param pulumi.Input[dict] tags: A mapping of tags to assign to the resource.

        The **blob_properties** object supports the following:

          * `corsRules` (`pulumi.Input[list]`) - A `cors_rule` block as defined below.
            * `allowedHeaders` (`pulumi.Input[list]`) - A list of headers that are allowed to be a part of the cross-origin request.
            * `allowedMethods` (`pulumi.Input[list]`) - A list of http headers that are allowed to be executed by the origin. Valid options are
              `DELETE`, `GET`, `HEAD`, `MERGE`, `POST`, `OPTIONS` or `PUT`.
            * `allowedOrigins` (`pulumi.Input[list]`) - A list of origin domains that will be allowed by CORS.
            * `exposedHeaders` (`pulumi.Input[list]`) - A list of response headers that are exposed to CORS clients.
            * `maxAgeInSeconds` (`pulumi.Input[float]`) - The number of seconds the client should cache a preflight response.

          * `deleteRetentionPolicy` (`pulumi.Input[dict]`) - A `delete_retention_policy` block as defined below.
            * `days` (`pulumi.Input[float]`) - Specifies the number of days that the blob should be retained, between `1` and `365` days. Defaults to `7`.

        The **custom_domain** object supports the following:

          * `name` (`pulumi.Input[str]`) - The Custom Domain Name to use for the Storage Account, which will be validated by Azure.
          * `useSubdomain` (`pulumi.Input[bool]`) - Should the Custom Domain Name be validated by using indirect CNAME validation?

        The **identity** object supports the following:

          * `principal_id` (`pulumi.Input[str]`) - The Principal ID for the Service Principal associated with the Identity of this Storage Account.
          * `tenant_id` (`pulumi.Input[str]`) - The Tenant ID for the Service Principal associated with the Identity of this Storage Account.
          * `type` (`pulumi.Input[str]`) - Specifies the identity type of the Storage Account. At this time the only allowed value is `SystemAssigned`.

        The **network_rules** object supports the following:

          * `bypasses` (`pulumi.Input[list]`) - Specifies whether traffic is bypassed for Logging/Metrics/AzureServices. Valid options are
            any combination of `Logging`, `Metrics`, `AzureServices`, or `None`.
          * `default_action` (`pulumi.Input[str]`) - Specifies the default action of allow or deny when no other rules match. Valid options are `Deny` or `Allow`.
          * `ip_rules` (`pulumi.Input[list]`) - List of public IP or IP ranges in CIDR Format. Only IPV4 addresses are allowed. Private IP address ranges (as defined in [RFC 1918](https://tools.ietf.org/html/rfc1918#section-3)) are not allowed.
          * `virtual_network_subnet_ids` (`pulumi.Input[list]`) - A list of resource ids for subnets.

        The **queue_properties** object supports the following:

          * `corsRules` (`pulumi.Input[list]`) - A `cors_rule` block as defined above.
            * `allowedHeaders` (`pulumi.Input[list]`) - A list of headers that are allowed to be a part of the cross-origin request.
            * `allowedMethods` (`pulumi.Input[list]`) - A list of http headers that are allowed to be executed by the origin. Valid options are
              `DELETE`, `GET`, `HEAD`, `MERGE`, `POST`, `OPTIONS` or `PUT`.
            * `allowedOrigins` (`pulumi.Input[list]`) - A list of origin domains that will be allowed by CORS.
            * `exposedHeaders` (`pulumi.Input[list]`) - A list of response headers that are exposed to CORS clients.
            * `maxAgeInSeconds` (`pulumi.Input[float]`) - The number of seconds the client should cache a preflight response.

          * `hourMetrics` (`pulumi.Input[dict]`) - A `hour_metrics` block as defined below.
            * `enabled` (`pulumi.Input[bool]`) - Indicates whether hour metrics are enabled for the Queue service. Changing this forces a new resource.
            * `includeApis` (`pulumi.Input[bool]`) - Indicates whether metrics should generate summary statistics for called API operations.
            * `retentionPolicyDays` (`pulumi.Input[float]`) - Specifies the number of days that logs will be retained. Changing this forces a new resource.
            * `version` (`pulumi.Input[str]`) - The version of storage analytics to configure. Changing this forces a new resource.

          * `logging` (`pulumi.Input[dict]`) - A `logging` block as defined below.
            * `delete` (`pulumi.Input[bool]`) - Indicates whether all delete requests should be logged. Changing this forces a new resource.
            * `read` (`pulumi.Input[bool]`) - Indicates whether all read requests should be logged. Changing this forces a new resource.
            * `retentionPolicyDays` (`pulumi.Input[float]`) - Specifies the number of days that logs will be retained. Changing this forces a new resource.
            * `version` (`pulumi.Input[str]`) - The version of storage analytics to configure. Changing this forces a new resource.
            * `write` (`pulumi.Input[bool]`) - Indicates whether all write requests should be logged. Changing this forces a new resource.

          * `minuteMetrics` (`pulumi.Input[dict]`) - A `minute_metrics` block as defined below.
            * `enabled` (`pulumi.Input[bool]`) - Indicates whether minute metrics are enabled for the Queue service. Changing this forces a new resource.
            * `includeApis` (`pulumi.Input[bool]`) - Indicates whether metrics should generate summary statistics for called API operations.
            * `retentionPolicyDays` (`pulumi.Input[float]`) - Specifies the number of days that logs will be retained. Changing this forces a new resource.
            * `version` (`pulumi.Input[str]`) - The version of storage analytics to configure. Changing this forces a new resource.

        The **static_website** object supports the following:

          * `error404Document` (`pulumi.Input[str]`) - The absolute path to a custom webpage that should be used when a request is made which does not correspond to an existing file.
          * `indexDocument` (`pulumi.Input[str]`) - The webpage that Azure Storage serves for requests to the root of a website or any subfolder. For example, index.html. The value is case-sensitive.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = dict()

        __props__["access_tier"] = access_tier
        __props__["account_kind"] = account_kind
        __props__["account_replication_type"] = account_replication_type
        __props__["account_tier"] = account_tier
        __props__["blob_properties"] = blob_properties
        __props__["custom_domain"] = custom_domain
        __props__["enable_https_traffic_only"] = enable_https_traffic_only
        __props__["identity"] = identity
        __props__["is_hns_enabled"] = is_hns_enabled
        __props__["location"] = location
        __props__["name"] = name
        __props__["network_rules"] = network_rules
        __props__["primary_access_key"] = primary_access_key
        __props__["primary_blob_connection_string"] = primary_blob_connection_string
        __props__["primary_blob_endpoint"] = primary_blob_endpoint
        __props__["primary_blob_host"] = primary_blob_host
        __props__["primary_connection_string"] = primary_connection_string
        __props__["primary_dfs_endpoint"] = primary_dfs_endpoint
        __props__["primary_dfs_host"] = primary_dfs_host
        __props__["primary_file_endpoint"] = primary_file_endpoint
        __props__["primary_file_host"] = primary_file_host
        __props__["primary_location"] = primary_location
        __props__["primary_queue_endpoint"] = primary_queue_endpoint
        __props__["primary_queue_host"] = primary_queue_host
        __props__["primary_table_endpoint"] = primary_table_endpoint
        __props__["primary_table_host"] = primary_table_host
        __props__["primary_web_endpoint"] = primary_web_endpoint
        __props__["primary_web_host"] = primary_web_host
        __props__["queue_properties"] = queue_properties
        __props__["resource_group_name"] = resource_group_name
        __props__["secondary_access_key"] = secondary_access_key
        __props__["secondary_blob_connection_string"] = secondary_blob_connection_string
        __props__["secondary_blob_endpoint"] = secondary_blob_endpoint
        __props__["secondary_blob_host"] = secondary_blob_host
        __props__["secondary_connection_string"] = secondary_connection_string
        __props__["secondary_dfs_endpoint"] = secondary_dfs_endpoint
        __props__["secondary_dfs_host"] = secondary_dfs_host
        __props__["secondary_file_endpoint"] = secondary_file_endpoint
        __props__["secondary_file_host"] = secondary_file_host
        __props__["secondary_location"] = secondary_location
        __props__["secondary_queue_endpoint"] = secondary_queue_endpoint
        __props__["secondary_queue_host"] = secondary_queue_host
        __props__["secondary_table_endpoint"] = secondary_table_endpoint
        __props__["secondary_table_host"] = secondary_table_host
        __props__["secondary_web_endpoint"] = secondary_web_endpoint
        __props__["secondary_web_host"] = secondary_web_host
        __props__["static_website"] = static_website
        __props__["tags"] = tags
        return Account(resource_name, opts=opts, __props__=__props__)
    def translate_output_property(self, prop):
        return tables._CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop

    def translate_input_property(self, prop):
        return tables._SNAKE_TO_CAMEL_CASE_TABLE.get(prop) or prop

