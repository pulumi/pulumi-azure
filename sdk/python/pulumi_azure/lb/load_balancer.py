# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import json
import warnings
import pulumi
import pulumi.runtime
from .. import utilities, tables

class LoadBalancer(pulumi.CustomResource):
    frontend_ip_configurations: pulumi.Output[list]
    """
    One or multiple `frontend_ip_configuration` blocks as documented below.
    """
    location: pulumi.Output[str]
    """
    Specifies the supported Azure Region where the Load Balancer should be created.
    """
    name: pulumi.Output[str]
    """
    Specifies the name of the frontend ip configuration.
    """
    private_ip_address: pulumi.Output[str]
    """
    Private IP Address to assign to the Load Balancer. The last one and first four IPs in any range are reserved and cannot be manually assigned.
    """
    private_ip_addresses: pulumi.Output[list]
    """
    The list of private IP address assigned to the load balancer in `frontend_ip_configuration` blocks, if any.
    """
    resource_group_name: pulumi.Output[str]
    """
    The name of the Resource Group in which to create the Load Balancer.
    """
    sku: pulumi.Output[str]
    """
    The SKU of the Azure Load Balancer. Accepted values are `Basic` and `Standard`. Defaults to `Basic`.
    """
    tags: pulumi.Output[dict]
    """
    A mapping of tags to assign to the resource.
    """
    def __init__(__self__, resource_name, opts=None, frontend_ip_configurations=None, location=None, name=None, resource_group_name=None, sku=None, tags=None, __name__=None, __opts__=None):
        """
        Manage a Load Balancer Resource.
        
        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[list] frontend_ip_configurations: One or multiple `frontend_ip_configuration` blocks as documented below.
        :param pulumi.Input[str] location: Specifies the supported Azure Region where the Load Balancer should be created.
        :param pulumi.Input[str] name: Specifies the name of the frontend ip configuration.
        :param pulumi.Input[str] resource_group_name: The name of the Resource Group in which to create the Load Balancer.
        :param pulumi.Input[str] sku: The SKU of the Azure Load Balancer. Accepted values are `Basic` and `Standard`. Defaults to `Basic`.
        :param pulumi.Input[dict] tags: A mapping of tags to assign to the resource.

        > This content is derived from https://github.com/terraform-providers/terraform-provider-azurerm/blob/master/website/docs/r/lb.html.markdown.
        """
        if __name__ is not None:
            warnings.warn("explicit use of __name__ is deprecated", DeprecationWarning)
            resource_name = __name__
        if __opts__ is not None:
            warnings.warn("explicit use of __opts__ is deprecated, use 'opts' instead", DeprecationWarning)
            opts = __opts__
        if not resource_name:
            raise TypeError('Missing resource name argument (for URN creation)')
        if not isinstance(resource_name, str):
            raise TypeError('Expected resource name to be a string')
        if opts and not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')

        __props__ = dict()

        __props__['frontend_ip_configurations'] = frontend_ip_configurations

        __props__['location'] = location

        __props__['name'] = name

        if resource_group_name is None:
            raise TypeError("Missing required property 'resource_group_name'")
        __props__['resource_group_name'] = resource_group_name

        __props__['sku'] = sku

        __props__['tags'] = tags

        __props__['private_ip_address'] = None
        __props__['private_ip_addresses'] = None

        super(LoadBalancer, __self__).__init__(
            'azure:lb/loadBalancer:LoadBalancer',
            resource_name,
            __props__,
            opts)


    def translate_output_property(self, prop):
        return tables._CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop

    def translate_input_property(self, prop):
        return tables._SNAKE_TO_CAMEL_CASE_TABLE.get(prop) or prop

