# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Callable, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from . import outputs
from ._inputs import *

__all__ = ['CustomHttpsConfigurationArgs', 'CustomHttpsConfiguration']

@pulumi.input_type
class CustomHttpsConfigurationArgs:
    def __init__(__self__, *,
                 custom_https_provisioning_enabled: pulumi.Input[bool],
                 frontend_endpoint_id: pulumi.Input[str],
                 custom_https_configuration: Optional[pulumi.Input['CustomHttpsConfigurationCustomHttpsConfigurationArgs']] = None):
        """
        The set of arguments for constructing a CustomHttpsConfiguration resource.
        :param pulumi.Input[bool] custom_https_provisioning_enabled: Should the HTTPS protocol be enabled for this custom domain associated with the Front Door?
        :param pulumi.Input[str] frontend_endpoint_id: The ID of the Front Door Frontend Endpoint which this configuration refers to. Changing this forces a new resource to be created.
        :param pulumi.Input['CustomHttpsConfigurationCustomHttpsConfigurationArgs'] custom_https_configuration: A `custom_https_configuration` block as defined above.
        """
        CustomHttpsConfigurationArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            custom_https_provisioning_enabled=custom_https_provisioning_enabled,
            frontend_endpoint_id=frontend_endpoint_id,
            custom_https_configuration=custom_https_configuration,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             custom_https_provisioning_enabled: pulumi.Input[bool],
             frontend_endpoint_id: pulumi.Input[str],
             custom_https_configuration: Optional[pulumi.Input['CustomHttpsConfigurationCustomHttpsConfigurationArgs']] = None,
             opts: Optional[pulumi.ResourceOptions]=None):
        _setter("custom_https_provisioning_enabled", custom_https_provisioning_enabled)
        _setter("frontend_endpoint_id", frontend_endpoint_id)
        if custom_https_configuration is not None:
            _setter("custom_https_configuration", custom_https_configuration)

    @property
    @pulumi.getter(name="customHttpsProvisioningEnabled")
    def custom_https_provisioning_enabled(self) -> pulumi.Input[bool]:
        """
        Should the HTTPS protocol be enabled for this custom domain associated with the Front Door?
        """
        return pulumi.get(self, "custom_https_provisioning_enabled")

    @custom_https_provisioning_enabled.setter
    def custom_https_provisioning_enabled(self, value: pulumi.Input[bool]):
        pulumi.set(self, "custom_https_provisioning_enabled", value)

    @property
    @pulumi.getter(name="frontendEndpointId")
    def frontend_endpoint_id(self) -> pulumi.Input[str]:
        """
        The ID of the Front Door Frontend Endpoint which this configuration refers to. Changing this forces a new resource to be created.
        """
        return pulumi.get(self, "frontend_endpoint_id")

    @frontend_endpoint_id.setter
    def frontend_endpoint_id(self, value: pulumi.Input[str]):
        pulumi.set(self, "frontend_endpoint_id", value)

    @property
    @pulumi.getter(name="customHttpsConfiguration")
    def custom_https_configuration(self) -> Optional[pulumi.Input['CustomHttpsConfigurationCustomHttpsConfigurationArgs']]:
        """
        A `custom_https_configuration` block as defined above.
        """
        return pulumi.get(self, "custom_https_configuration")

    @custom_https_configuration.setter
    def custom_https_configuration(self, value: Optional[pulumi.Input['CustomHttpsConfigurationCustomHttpsConfigurationArgs']]):
        pulumi.set(self, "custom_https_configuration", value)


@pulumi.input_type
class _CustomHttpsConfigurationState:
    def __init__(__self__, *,
                 custom_https_configuration: Optional[pulumi.Input['CustomHttpsConfigurationCustomHttpsConfigurationArgs']] = None,
                 custom_https_provisioning_enabled: Optional[pulumi.Input[bool]] = None,
                 frontend_endpoint_id: Optional[pulumi.Input[str]] = None):
        """
        Input properties used for looking up and filtering CustomHttpsConfiguration resources.
        :param pulumi.Input['CustomHttpsConfigurationCustomHttpsConfigurationArgs'] custom_https_configuration: A `custom_https_configuration` block as defined above.
        :param pulumi.Input[bool] custom_https_provisioning_enabled: Should the HTTPS protocol be enabled for this custom domain associated with the Front Door?
        :param pulumi.Input[str] frontend_endpoint_id: The ID of the Front Door Frontend Endpoint which this configuration refers to. Changing this forces a new resource to be created.
        """
        _CustomHttpsConfigurationState._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            custom_https_configuration=custom_https_configuration,
            custom_https_provisioning_enabled=custom_https_provisioning_enabled,
            frontend_endpoint_id=frontend_endpoint_id,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             custom_https_configuration: Optional[pulumi.Input['CustomHttpsConfigurationCustomHttpsConfigurationArgs']] = None,
             custom_https_provisioning_enabled: Optional[pulumi.Input[bool]] = None,
             frontend_endpoint_id: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None):
        if custom_https_configuration is not None:
            _setter("custom_https_configuration", custom_https_configuration)
        if custom_https_provisioning_enabled is not None:
            _setter("custom_https_provisioning_enabled", custom_https_provisioning_enabled)
        if frontend_endpoint_id is not None:
            _setter("frontend_endpoint_id", frontend_endpoint_id)

    @property
    @pulumi.getter(name="customHttpsConfiguration")
    def custom_https_configuration(self) -> Optional[pulumi.Input['CustomHttpsConfigurationCustomHttpsConfigurationArgs']]:
        """
        A `custom_https_configuration` block as defined above.
        """
        return pulumi.get(self, "custom_https_configuration")

    @custom_https_configuration.setter
    def custom_https_configuration(self, value: Optional[pulumi.Input['CustomHttpsConfigurationCustomHttpsConfigurationArgs']]):
        pulumi.set(self, "custom_https_configuration", value)

    @property
    @pulumi.getter(name="customHttpsProvisioningEnabled")
    def custom_https_provisioning_enabled(self) -> Optional[pulumi.Input[bool]]:
        """
        Should the HTTPS protocol be enabled for this custom domain associated with the Front Door?
        """
        return pulumi.get(self, "custom_https_provisioning_enabled")

    @custom_https_provisioning_enabled.setter
    def custom_https_provisioning_enabled(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "custom_https_provisioning_enabled", value)

    @property
    @pulumi.getter(name="frontendEndpointId")
    def frontend_endpoint_id(self) -> Optional[pulumi.Input[str]]:
        """
        The ID of the Front Door Frontend Endpoint which this configuration refers to. Changing this forces a new resource to be created.
        """
        return pulumi.get(self, "frontend_endpoint_id")

    @frontend_endpoint_id.setter
    def frontend_endpoint_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "frontend_endpoint_id", value)


class CustomHttpsConfiguration(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 custom_https_configuration: Optional[pulumi.Input[pulumi.InputType['CustomHttpsConfigurationCustomHttpsConfigurationArgs']]] = None,
                 custom_https_provisioning_enabled: Optional[pulumi.Input[bool]] = None,
                 frontend_endpoint_id: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        """
        ## Import

        Front Door Custom HTTPS Configurations can be imported using the `resource id` of the Front Door Custom HTTPS Configuration, e.g.

        ```sh
         $ pulumi import azure:frontdoor/customHttpsConfiguration:CustomHttpsConfiguration example_custom_https_1 /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/mygroup1/providers/Microsoft.Network/frontDoors/frontdoor1/customHttpsConfiguration/endpoint1
        ```

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[pulumi.InputType['CustomHttpsConfigurationCustomHttpsConfigurationArgs']] custom_https_configuration: A `custom_https_configuration` block as defined above.
        :param pulumi.Input[bool] custom_https_provisioning_enabled: Should the HTTPS protocol be enabled for this custom domain associated with the Front Door?
        :param pulumi.Input[str] frontend_endpoint_id: The ID of the Front Door Frontend Endpoint which this configuration refers to. Changing this forces a new resource to be created.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: CustomHttpsConfigurationArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        ## Import

        Front Door Custom HTTPS Configurations can be imported using the `resource id` of the Front Door Custom HTTPS Configuration, e.g.

        ```sh
         $ pulumi import azure:frontdoor/customHttpsConfiguration:CustomHttpsConfiguration example_custom_https_1 /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/mygroup1/providers/Microsoft.Network/frontDoors/frontdoor1/customHttpsConfiguration/endpoint1
        ```

        :param str resource_name: The name of the resource.
        :param CustomHttpsConfigurationArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(CustomHttpsConfigurationArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            kwargs = kwargs or {}
            def _setter(key, value):
                kwargs[key] = value
            CustomHttpsConfigurationArgs._configure(_setter, **kwargs)
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 custom_https_configuration: Optional[pulumi.Input[pulumi.InputType['CustomHttpsConfigurationCustomHttpsConfigurationArgs']]] = None,
                 custom_https_provisioning_enabled: Optional[pulumi.Input[bool]] = None,
                 frontend_endpoint_id: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = CustomHttpsConfigurationArgs.__new__(CustomHttpsConfigurationArgs)

            if custom_https_configuration is not None and not isinstance(custom_https_configuration, CustomHttpsConfigurationCustomHttpsConfigurationArgs):
                custom_https_configuration = custom_https_configuration or {}
                def _setter(key, value):
                    custom_https_configuration[key] = value
                CustomHttpsConfigurationCustomHttpsConfigurationArgs._configure(_setter, **custom_https_configuration)
            __props__.__dict__["custom_https_configuration"] = custom_https_configuration
            if custom_https_provisioning_enabled is None and not opts.urn:
                raise TypeError("Missing required property 'custom_https_provisioning_enabled'")
            __props__.__dict__["custom_https_provisioning_enabled"] = custom_https_provisioning_enabled
            if frontend_endpoint_id is None and not opts.urn:
                raise TypeError("Missing required property 'frontend_endpoint_id'")
            __props__.__dict__["frontend_endpoint_id"] = frontend_endpoint_id
        super(CustomHttpsConfiguration, __self__).__init__(
            'azure:frontdoor/customHttpsConfiguration:CustomHttpsConfiguration',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            custom_https_configuration: Optional[pulumi.Input[pulumi.InputType['CustomHttpsConfigurationCustomHttpsConfigurationArgs']]] = None,
            custom_https_provisioning_enabled: Optional[pulumi.Input[bool]] = None,
            frontend_endpoint_id: Optional[pulumi.Input[str]] = None) -> 'CustomHttpsConfiguration':
        """
        Get an existing CustomHttpsConfiguration resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[pulumi.InputType['CustomHttpsConfigurationCustomHttpsConfigurationArgs']] custom_https_configuration: A `custom_https_configuration` block as defined above.
        :param pulumi.Input[bool] custom_https_provisioning_enabled: Should the HTTPS protocol be enabled for this custom domain associated with the Front Door?
        :param pulumi.Input[str] frontend_endpoint_id: The ID of the Front Door Frontend Endpoint which this configuration refers to. Changing this forces a new resource to be created.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _CustomHttpsConfigurationState.__new__(_CustomHttpsConfigurationState)

        __props__.__dict__["custom_https_configuration"] = custom_https_configuration
        __props__.__dict__["custom_https_provisioning_enabled"] = custom_https_provisioning_enabled
        __props__.__dict__["frontend_endpoint_id"] = frontend_endpoint_id
        return CustomHttpsConfiguration(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter(name="customHttpsConfiguration")
    def custom_https_configuration(self) -> pulumi.Output[Optional['outputs.CustomHttpsConfigurationCustomHttpsConfiguration']]:
        """
        A `custom_https_configuration` block as defined above.
        """
        return pulumi.get(self, "custom_https_configuration")

    @property
    @pulumi.getter(name="customHttpsProvisioningEnabled")
    def custom_https_provisioning_enabled(self) -> pulumi.Output[bool]:
        """
        Should the HTTPS protocol be enabled for this custom domain associated with the Front Door?
        """
        return pulumi.get(self, "custom_https_provisioning_enabled")

    @property
    @pulumi.getter(name="frontendEndpointId")
    def frontend_endpoint_id(self) -> pulumi.Output[str]:
        """
        The ID of the Front Door Frontend Endpoint which this configuration refers to. Changing this forces a new resource to be created.
        """
        return pulumi.get(self, "frontend_endpoint_id")

