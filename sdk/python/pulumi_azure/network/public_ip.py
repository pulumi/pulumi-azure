# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import pulumi
import pulumi.runtime
from .. import utilities, tables

class PublicIp(pulumi.CustomResource):
    """
    Manage a Public IP Address.
    """
    def __init__(__self__, __name__, __opts__=None, domain_name_label=None, idle_timeout_in_minutes=None, ip_version=None, location=None, name=None, public_ip_address_allocation=None, resource_group_name=None, reverse_fqdn=None, sku=None, tags=None, zones=None):
        """Create a PublicIp resource with the given unique name, props, and options."""
        if not __name__:
            raise TypeError('Missing resource name argument (for URN creation)')
        if not isinstance(__name__, str):
            raise TypeError('Expected resource name to be a string')
        if __opts__ and not isinstance(__opts__, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')

        __props__ = dict()

        __props__['domain_name_label'] = domain_name_label

        __props__['idle_timeout_in_minutes'] = idle_timeout_in_minutes

        __props__['ip_version'] = ip_version

        if not location:
            raise TypeError('Missing required property location')
        __props__['location'] = location

        __props__['name'] = name

        if not public_ip_address_allocation:
            raise TypeError('Missing required property public_ip_address_allocation')
        __props__['public_ip_address_allocation'] = public_ip_address_allocation

        if not resource_group_name:
            raise TypeError('Missing required property resource_group_name')
        __props__['resource_group_name'] = resource_group_name

        __props__['reverse_fqdn'] = reverse_fqdn

        __props__['sku'] = sku

        __props__['tags'] = tags

        __props__['zones'] = zones

        __props__['fqdn'] = None
        __props__['ip_address'] = None

        super(PublicIp, __self__).__init__(
            'azure:network/publicIp:PublicIp',
            __name__,
            __props__,
            __opts__)


    def translate_output_property(self, prop):
        return tables._CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop

    def translate_input_property(self, prop):
        return tables._SNAKE_TO_CAMEL_CASE_TABLE.get(prop) or prop

