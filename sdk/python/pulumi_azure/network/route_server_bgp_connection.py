# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities

__all__ = ['RouteServerBgpConnectionArgs', 'RouteServerBgpConnection']

@pulumi.input_type
class RouteServerBgpConnectionArgs:
    def __init__(__self__, *,
                 peer_asn: pulumi.Input[int],
                 peer_ip: pulumi.Input[str],
                 route_server_id: pulumi.Input[str],
                 name: Optional[pulumi.Input[str]] = None):
        """
        The set of arguments for constructing a RouteServerBgpConnection resource.
        :param pulumi.Input[int] peer_asn: The peer autonomous system number for the Route Server Bgp Connection. Changing this forces a new resource to be created.
        :param pulumi.Input[str] peer_ip: The peer ip address for the Route Server Bgp Connection. Changing this forces a new resource to be created.
        :param pulumi.Input[str] route_server_id: The ID of the Route Server within which this Bgp connection should be created. Changing this forces a new resource to be created.
        :param pulumi.Input[str] name: The name which should be used for this Route Server Bgp Connection. Changing this forces a new resource to be created.
        """
        pulumi.set(__self__, "peer_asn", peer_asn)
        pulumi.set(__self__, "peer_ip", peer_ip)
        pulumi.set(__self__, "route_server_id", route_server_id)
        if name is not None:
            pulumi.set(__self__, "name", name)

    @property
    @pulumi.getter(name="peerAsn")
    def peer_asn(self) -> pulumi.Input[int]:
        """
        The peer autonomous system number for the Route Server Bgp Connection. Changing this forces a new resource to be created.
        """
        return pulumi.get(self, "peer_asn")

    @peer_asn.setter
    def peer_asn(self, value: pulumi.Input[int]):
        pulumi.set(self, "peer_asn", value)

    @property
    @pulumi.getter(name="peerIp")
    def peer_ip(self) -> pulumi.Input[str]:
        """
        The peer ip address for the Route Server Bgp Connection. Changing this forces a new resource to be created.
        """
        return pulumi.get(self, "peer_ip")

    @peer_ip.setter
    def peer_ip(self, value: pulumi.Input[str]):
        pulumi.set(self, "peer_ip", value)

    @property
    @pulumi.getter(name="routeServerId")
    def route_server_id(self) -> pulumi.Input[str]:
        """
        The ID of the Route Server within which this Bgp connection should be created. Changing this forces a new resource to be created.
        """
        return pulumi.get(self, "route_server_id")

    @route_server_id.setter
    def route_server_id(self, value: pulumi.Input[str]):
        pulumi.set(self, "route_server_id", value)

    @property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[str]]:
        """
        The name which should be used for this Route Server Bgp Connection. Changing this forces a new resource to be created.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "name", value)


@pulumi.input_type
class _RouteServerBgpConnectionState:
    def __init__(__self__, *,
                 name: Optional[pulumi.Input[str]] = None,
                 peer_asn: Optional[pulumi.Input[int]] = None,
                 peer_ip: Optional[pulumi.Input[str]] = None,
                 route_server_id: Optional[pulumi.Input[str]] = None):
        """
        Input properties used for looking up and filtering RouteServerBgpConnection resources.
        :param pulumi.Input[str] name: The name which should be used for this Route Server Bgp Connection. Changing this forces a new resource to be created.
        :param pulumi.Input[int] peer_asn: The peer autonomous system number for the Route Server Bgp Connection. Changing this forces a new resource to be created.
        :param pulumi.Input[str] peer_ip: The peer ip address for the Route Server Bgp Connection. Changing this forces a new resource to be created.
        :param pulumi.Input[str] route_server_id: The ID of the Route Server within which this Bgp connection should be created. Changing this forces a new resource to be created.
        """
        if name is not None:
            pulumi.set(__self__, "name", name)
        if peer_asn is not None:
            pulumi.set(__self__, "peer_asn", peer_asn)
        if peer_ip is not None:
            pulumi.set(__self__, "peer_ip", peer_ip)
        if route_server_id is not None:
            pulumi.set(__self__, "route_server_id", route_server_id)

    @property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[str]]:
        """
        The name which should be used for this Route Server Bgp Connection. Changing this forces a new resource to be created.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "name", value)

    @property
    @pulumi.getter(name="peerAsn")
    def peer_asn(self) -> Optional[pulumi.Input[int]]:
        """
        The peer autonomous system number for the Route Server Bgp Connection. Changing this forces a new resource to be created.
        """
        return pulumi.get(self, "peer_asn")

    @peer_asn.setter
    def peer_asn(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "peer_asn", value)

    @property
    @pulumi.getter(name="peerIp")
    def peer_ip(self) -> Optional[pulumi.Input[str]]:
        """
        The peer ip address for the Route Server Bgp Connection. Changing this forces a new resource to be created.
        """
        return pulumi.get(self, "peer_ip")

    @peer_ip.setter
    def peer_ip(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "peer_ip", value)

    @property
    @pulumi.getter(name="routeServerId")
    def route_server_id(self) -> Optional[pulumi.Input[str]]:
        """
        The ID of the Route Server within which this Bgp connection should be created. Changing this forces a new resource to be created.
        """
        return pulumi.get(self, "route_server_id")

    @route_server_id.setter
    def route_server_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "route_server_id", value)


class RouteServerBgpConnection(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 peer_asn: Optional[pulumi.Input[int]] = None,
                 peer_ip: Optional[pulumi.Input[str]] = None,
                 route_server_id: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        """
        Manages a Bgp Connection for a Route Server

        ## Example Usage

        ```python
        import pulumi
        import pulumi_azure as azure

        example = azure.network.RouteServerBgpConnection("example",
            route_server_id=azurerm_route_server["example"]["id"],
            peer_asn=65501,
            peer_ip="169.254.21.5")
        ```

        ## Import

        Route Server Bgp Connections can be imported using the `resource id`, e.g.

        ```sh
         $ pulumi import azure:network/routeServerBgpConnection:RouteServerBgpConnection example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.Network/virtualHubs/routeServer1/bgpConnections/connection1
        ```

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] name: The name which should be used for this Route Server Bgp Connection. Changing this forces a new resource to be created.
        :param pulumi.Input[int] peer_asn: The peer autonomous system number for the Route Server Bgp Connection. Changing this forces a new resource to be created.
        :param pulumi.Input[str] peer_ip: The peer ip address for the Route Server Bgp Connection. Changing this forces a new resource to be created.
        :param pulumi.Input[str] route_server_id: The ID of the Route Server within which this Bgp connection should be created. Changing this forces a new resource to be created.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: RouteServerBgpConnectionArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Manages a Bgp Connection for a Route Server

        ## Example Usage

        ```python
        import pulumi
        import pulumi_azure as azure

        example = azure.network.RouteServerBgpConnection("example",
            route_server_id=azurerm_route_server["example"]["id"],
            peer_asn=65501,
            peer_ip="169.254.21.5")
        ```

        ## Import

        Route Server Bgp Connections can be imported using the `resource id`, e.g.

        ```sh
         $ pulumi import azure:network/routeServerBgpConnection:RouteServerBgpConnection example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.Network/virtualHubs/routeServer1/bgpConnections/connection1
        ```

        :param str resource_name: The name of the resource.
        :param RouteServerBgpConnectionArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(RouteServerBgpConnectionArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 peer_asn: Optional[pulumi.Input[int]] = None,
                 peer_ip: Optional[pulumi.Input[str]] = None,
                 route_server_id: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = RouteServerBgpConnectionArgs.__new__(RouteServerBgpConnectionArgs)

            __props__.__dict__["name"] = name
            if peer_asn is None and not opts.urn:
                raise TypeError("Missing required property 'peer_asn'")
            __props__.__dict__["peer_asn"] = peer_asn
            if peer_ip is None and not opts.urn:
                raise TypeError("Missing required property 'peer_ip'")
            __props__.__dict__["peer_ip"] = peer_ip
            if route_server_id is None and not opts.urn:
                raise TypeError("Missing required property 'route_server_id'")
            __props__.__dict__["route_server_id"] = route_server_id
        super(RouteServerBgpConnection, __self__).__init__(
            'azure:network/routeServerBgpConnection:RouteServerBgpConnection',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            name: Optional[pulumi.Input[str]] = None,
            peer_asn: Optional[pulumi.Input[int]] = None,
            peer_ip: Optional[pulumi.Input[str]] = None,
            route_server_id: Optional[pulumi.Input[str]] = None) -> 'RouteServerBgpConnection':
        """
        Get an existing RouteServerBgpConnection resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] name: The name which should be used for this Route Server Bgp Connection. Changing this forces a new resource to be created.
        :param pulumi.Input[int] peer_asn: The peer autonomous system number for the Route Server Bgp Connection. Changing this forces a new resource to be created.
        :param pulumi.Input[str] peer_ip: The peer ip address for the Route Server Bgp Connection. Changing this forces a new resource to be created.
        :param pulumi.Input[str] route_server_id: The ID of the Route Server within which this Bgp connection should be created. Changing this forces a new resource to be created.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _RouteServerBgpConnectionState.__new__(_RouteServerBgpConnectionState)

        __props__.__dict__["name"] = name
        __props__.__dict__["peer_asn"] = peer_asn
        __props__.__dict__["peer_ip"] = peer_ip
        __props__.__dict__["route_server_id"] = route_server_id
        return RouteServerBgpConnection(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter
    def name(self) -> pulumi.Output[str]:
        """
        The name which should be used for this Route Server Bgp Connection. Changing this forces a new resource to be created.
        """
        return pulumi.get(self, "name")

    @property
    @pulumi.getter(name="peerAsn")
    def peer_asn(self) -> pulumi.Output[int]:
        """
        The peer autonomous system number for the Route Server Bgp Connection. Changing this forces a new resource to be created.
        """
        return pulumi.get(self, "peer_asn")

    @property
    @pulumi.getter(name="peerIp")
    def peer_ip(self) -> pulumi.Output[str]:
        """
        The peer ip address for the Route Server Bgp Connection. Changing this forces a new resource to be created.
        """
        return pulumi.get(self, "peer_ip")

    @property
    @pulumi.getter(name="routeServerId")
    def route_server_id(self) -> pulumi.Output[str]:
        """
        The ID of the Route Server within which this Bgp connection should be created. Changing this forces a new resource to be created.
        """
        return pulumi.get(self, "route_server_id")

