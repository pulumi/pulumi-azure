# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import pulumi
import pulumi.runtime
from .. import utilities, tables

class VirtualNetworkGatewayConnection(pulumi.CustomResource):
    """
    Manages a connection in an existing Virtual Network Gateway.
    """
    def __init__(__self__, __name__, __opts__=None, authorization_key=None, enable_bgp=None, express_route_circuit_id=None, ipsec_policy=None, local_network_gateway_id=None, location=None, name=None, peer_virtual_network_gateway_id=None, resource_group_name=None, routing_weight=None, shared_key=None, tags=None, type=None, use_policy_based_traffic_selectors=None, virtual_network_gateway_id=None):
        """Create a VirtualNetworkGatewayConnection resource with the given unique name, props, and options."""
        if not __name__:
            raise TypeError('Missing resource name argument (for URN creation)')
        if not isinstance(__name__, str):
            raise TypeError('Expected resource name to be a string')
        if __opts__ and not isinstance(__opts__, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')

        __props__ = dict()

        __props__['authorization_key'] = authorization_key

        __props__['enable_bgp'] = enable_bgp

        __props__['express_route_circuit_id'] = express_route_circuit_id

        __props__['ipsec_policy'] = ipsec_policy

        __props__['local_network_gateway_id'] = local_network_gateway_id

        if not location:
            raise TypeError('Missing required property location')
        __props__['location'] = location

        __props__['name'] = name

        __props__['peer_virtual_network_gateway_id'] = peer_virtual_network_gateway_id

        if not resource_group_name:
            raise TypeError('Missing required property resource_group_name')
        __props__['resource_group_name'] = resource_group_name

        __props__['routing_weight'] = routing_weight

        __props__['shared_key'] = shared_key

        __props__['tags'] = tags

        if not type:
            raise TypeError('Missing required property type')
        __props__['type'] = type

        __props__['use_policy_based_traffic_selectors'] = use_policy_based_traffic_selectors

        if not virtual_network_gateway_id:
            raise TypeError('Missing required property virtual_network_gateway_id')
        __props__['virtual_network_gateway_id'] = virtual_network_gateway_id

        super(VirtualNetworkGatewayConnection, __self__).__init__(
            'azure:network/virtualNetworkGatewayConnection:VirtualNetworkGatewayConnection',
            __name__,
            __props__,
            __opts__)


    def translate_output_property(self, prop):
        return tables._CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop

    def translate_input_property(self, prop):
        return tables._SNAKE_TO_CAMEL_CASE_TABLE.get(prop) or prop

