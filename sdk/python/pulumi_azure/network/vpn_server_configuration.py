# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import json
import warnings
import pulumi
import pulumi.runtime
from typing import Union
from .. import utilities, tables

class VpnServerConfiguration(pulumi.CustomResource):
    azure_active_directory_authentications: pulumi.Output[list]
    """
    A `azure_active_directory_authentication` block as defined below.

      * `audience` (`str`)
      * `issuer` (`str`)
      * `tenant` (`str`)
    """
    client_revoked_certificates: pulumi.Output[list]
    """
    One or more `client_revoked_certificate` blocks as defined below.

      * `name` (`str`) - The Name which should be used for this VPN Server Configuration. Changing this forces a new resource to be created.
      * `thumbprint` (`str`)
    """
    client_root_certificates: pulumi.Output[list]
    """
    One or more `client_root_certificate` blocks as defined below.

      * `name` (`str`) - The Name which should be used for this VPN Server Configuration. Changing this forces a new resource to be created.
      * `publicCertData` (`str`)
    """
    ipsec_policy: pulumi.Output[dict]
    """
    A `ipsec_policy` block as defined below.

      * `dhGroup` (`str`)
      * `ikeEncryption` (`str`)
      * `ikeIntegrity` (`str`)
      * `ipsecEncryption` (`str`)
      * `ipsecIntegrity` (`str`)
      * `pfsGroup` (`str`)
      * `saDataSizeKilobytes` (`float`)
      * `saLifetimeSeconds` (`float`)
    """
    location: pulumi.Output[str]
    """
    The Azure location where this VPN Server Configuration should be created. Changing this forces a new resource to be created.
    """
    name: pulumi.Output[str]
    """
    The Name which should be used for this VPN Server Configuration. Changing this forces a new resource to be created.
    """
    radius_server: pulumi.Output[dict]
    """
    A `radius_server` block as defined below.

      * `address` (`str`)
      * `client_root_certificates` (`list`) - One or more `client_root_certificate` blocks as defined below.
        * `name` (`str`) - The Name which should be used for this VPN Server Configuration. Changing this forces a new resource to be created.
        * `thumbprint` (`str`)

      * `secret` (`str`)
      * `serverRootCertificates` (`list`)
        * `name` (`str`) - The Name which should be used for this VPN Server Configuration. Changing this forces a new resource to be created.
        * `publicCertData` (`str`)
    """
    resource_group_name: pulumi.Output[str]
    """
    The Name of the Resource Group in which this VPN Server Configuration should be created. Changing this forces a new resource to be created.
    """
    tags: pulumi.Output[dict]
    """
    A mapping of tags to assign to the resource.
    """
    vpn_authentication_types: pulumi.Output[str]
    """
    A list of one of more Authentication Types applicable for this VPN Server Configuration. Possible values are `AAD` (Azure Active Directory), `Certificate` and `Radius`.
    """
    vpn_protocols: pulumi.Output[list]
    """
    A list of VPN Protocols to use for this Server Configuration. Possible values are `IkeV2` and `OpenVPN`.
    """
    def __init__(__self__, resource_name, opts=None, azure_active_directory_authentications=None, client_revoked_certificates=None, client_root_certificates=None, ipsec_policy=None, location=None, name=None, radius_server=None, resource_group_name=None, tags=None, vpn_authentication_types=None, vpn_protocols=None, __props__=None, __name__=None, __opts__=None):
        """
        Manages a VPN Server Configuration.

        > This content is derived from https://github.com/terraform-providers/terraform-provider-azurerm/blob/master/website/docs/r/vpn_server_configuration.html.markdown.

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[list] azure_active_directory_authentications: A `azure_active_directory_authentication` block as defined below.
        :param pulumi.Input[list] client_revoked_certificates: One or more `client_revoked_certificate` blocks as defined below.
        :param pulumi.Input[list] client_root_certificates: One or more `client_root_certificate` blocks as defined below.
        :param pulumi.Input[dict] ipsec_policy: A `ipsec_policy` block as defined below.
        :param pulumi.Input[str] location: The Azure location where this VPN Server Configuration should be created. Changing this forces a new resource to be created.
        :param pulumi.Input[str] name: The Name which should be used for this VPN Server Configuration. Changing this forces a new resource to be created.
        :param pulumi.Input[dict] radius_server: A `radius_server` block as defined below.
        :param pulumi.Input[str] resource_group_name: The Name of the Resource Group in which this VPN Server Configuration should be created. Changing this forces a new resource to be created.
        :param pulumi.Input[dict] tags: A mapping of tags to assign to the resource.
        :param pulumi.Input[str] vpn_authentication_types: A list of one of more Authentication Types applicable for this VPN Server Configuration. Possible values are `AAD` (Azure Active Directory), `Certificate` and `Radius`.
        :param pulumi.Input[list] vpn_protocols: A list of VPN Protocols to use for this Server Configuration. Possible values are `IkeV2` and `OpenVPN`.

        The **azure_active_directory_authentications** object supports the following:

          * `audience` (`pulumi.Input[str]`)
          * `issuer` (`pulumi.Input[str]`)
          * `tenant` (`pulumi.Input[str]`)

        The **client_revoked_certificates** object supports the following:

          * `name` (`pulumi.Input[str]`) - The Name which should be used for this VPN Server Configuration. Changing this forces a new resource to be created.
          * `thumbprint` (`pulumi.Input[str]`)

        The **client_root_certificates** object supports the following:

          * `name` (`pulumi.Input[str]`) - The Name which should be used for this VPN Server Configuration. Changing this forces a new resource to be created.
          * `publicCertData` (`pulumi.Input[str]`)

        The **ipsec_policy** object supports the following:

          * `dhGroup` (`pulumi.Input[str]`)
          * `ikeEncryption` (`pulumi.Input[str]`)
          * `ikeIntegrity` (`pulumi.Input[str]`)
          * `ipsecEncryption` (`pulumi.Input[str]`)
          * `ipsecIntegrity` (`pulumi.Input[str]`)
          * `pfsGroup` (`pulumi.Input[str]`)
          * `saDataSizeKilobytes` (`pulumi.Input[float]`)
          * `saLifetimeSeconds` (`pulumi.Input[float]`)

        The **radius_server** object supports the following:

          * `address` (`pulumi.Input[str]`)
          * `client_root_certificates` (`pulumi.Input[list]`) - One or more `client_root_certificate` blocks as defined below.
            * `name` (`pulumi.Input[str]`) - The Name which should be used for this VPN Server Configuration. Changing this forces a new resource to be created.
            * `thumbprint` (`pulumi.Input[str]`)

          * `secret` (`pulumi.Input[str]`)
          * `serverRootCertificates` (`pulumi.Input[list]`)
            * `name` (`pulumi.Input[str]`) - The Name which should be used for this VPN Server Configuration. Changing this forces a new resource to be created.
            * `publicCertData` (`pulumi.Input[str]`)
        """
        if __name__ is not None:
            warnings.warn("explicit use of __name__ is deprecated", DeprecationWarning)
            resource_name = __name__
        if __opts__ is not None:
            warnings.warn("explicit use of __opts__ is deprecated, use 'opts' instead", DeprecationWarning)
            opts = __opts__
        if opts is None:
            opts = pulumi.ResourceOptions()
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.version is None:
            opts.version = utilities.get_version()
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = dict()

            __props__['azure_active_directory_authentications'] = azure_active_directory_authentications
            __props__['client_revoked_certificates'] = client_revoked_certificates
            __props__['client_root_certificates'] = client_root_certificates
            __props__['ipsec_policy'] = ipsec_policy
            __props__['location'] = location
            __props__['name'] = name
            __props__['radius_server'] = radius_server
            if resource_group_name is None:
                raise TypeError("Missing required property 'resource_group_name'")
            __props__['resource_group_name'] = resource_group_name
            __props__['tags'] = tags
            if vpn_authentication_types is None:
                raise TypeError("Missing required property 'vpn_authentication_types'")
            __props__['vpn_authentication_types'] = vpn_authentication_types
            __props__['vpn_protocols'] = vpn_protocols
        super(VpnServerConfiguration, __self__).__init__(
            'azure:network/vpnServerConfiguration:VpnServerConfiguration',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name, id, opts=None, azure_active_directory_authentications=None, client_revoked_certificates=None, client_root_certificates=None, ipsec_policy=None, location=None, name=None, radius_server=None, resource_group_name=None, tags=None, vpn_authentication_types=None, vpn_protocols=None):
        """
        Get an existing VpnServerConfiguration resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param str id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[list] azure_active_directory_authentications: A `azure_active_directory_authentication` block as defined below.
        :param pulumi.Input[list] client_revoked_certificates: One or more `client_revoked_certificate` blocks as defined below.
        :param pulumi.Input[list] client_root_certificates: One or more `client_root_certificate` blocks as defined below.
        :param pulumi.Input[dict] ipsec_policy: A `ipsec_policy` block as defined below.
        :param pulumi.Input[str] location: The Azure location where this VPN Server Configuration should be created. Changing this forces a new resource to be created.
        :param pulumi.Input[str] name: The Name which should be used for this VPN Server Configuration. Changing this forces a new resource to be created.
        :param pulumi.Input[dict] radius_server: A `radius_server` block as defined below.
        :param pulumi.Input[str] resource_group_name: The Name of the Resource Group in which this VPN Server Configuration should be created. Changing this forces a new resource to be created.
        :param pulumi.Input[dict] tags: A mapping of tags to assign to the resource.
        :param pulumi.Input[str] vpn_authentication_types: A list of one of more Authentication Types applicable for this VPN Server Configuration. Possible values are `AAD` (Azure Active Directory), `Certificate` and `Radius`.
        :param pulumi.Input[list] vpn_protocols: A list of VPN Protocols to use for this Server Configuration. Possible values are `IkeV2` and `OpenVPN`.

        The **azure_active_directory_authentications** object supports the following:

          * `audience` (`pulumi.Input[str]`)
          * `issuer` (`pulumi.Input[str]`)
          * `tenant` (`pulumi.Input[str]`)

        The **client_revoked_certificates** object supports the following:

          * `name` (`pulumi.Input[str]`) - The Name which should be used for this VPN Server Configuration. Changing this forces a new resource to be created.
          * `thumbprint` (`pulumi.Input[str]`)

        The **client_root_certificates** object supports the following:

          * `name` (`pulumi.Input[str]`) - The Name which should be used for this VPN Server Configuration. Changing this forces a new resource to be created.
          * `publicCertData` (`pulumi.Input[str]`)

        The **ipsec_policy** object supports the following:

          * `dhGroup` (`pulumi.Input[str]`)
          * `ikeEncryption` (`pulumi.Input[str]`)
          * `ikeIntegrity` (`pulumi.Input[str]`)
          * `ipsecEncryption` (`pulumi.Input[str]`)
          * `ipsecIntegrity` (`pulumi.Input[str]`)
          * `pfsGroup` (`pulumi.Input[str]`)
          * `saDataSizeKilobytes` (`pulumi.Input[float]`)
          * `saLifetimeSeconds` (`pulumi.Input[float]`)

        The **radius_server** object supports the following:

          * `address` (`pulumi.Input[str]`)
          * `client_root_certificates` (`pulumi.Input[list]`) - One or more `client_root_certificate` blocks as defined below.
            * `name` (`pulumi.Input[str]`) - The Name which should be used for this VPN Server Configuration. Changing this forces a new resource to be created.
            * `thumbprint` (`pulumi.Input[str]`)

          * `secret` (`pulumi.Input[str]`)
          * `serverRootCertificates` (`pulumi.Input[list]`)
            * `name` (`pulumi.Input[str]`) - The Name which should be used for this VPN Server Configuration. Changing this forces a new resource to be created.
            * `publicCertData` (`pulumi.Input[str]`)
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = dict()

        __props__["azure_active_directory_authentications"] = azure_active_directory_authentications
        __props__["client_revoked_certificates"] = client_revoked_certificates
        __props__["client_root_certificates"] = client_root_certificates
        __props__["ipsec_policy"] = ipsec_policy
        __props__["location"] = location
        __props__["name"] = name
        __props__["radius_server"] = radius_server
        __props__["resource_group_name"] = resource_group_name
        __props__["tags"] = tags
        __props__["vpn_authentication_types"] = vpn_authentication_types
        __props__["vpn_protocols"] = vpn_protocols
        return VpnServerConfiguration(resource_name, opts=opts, __props__=__props__)
    def translate_output_property(self, prop):
        return tables._CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop

    def translate_input_property(self, prop):
        return tables._SNAKE_TO_CAMEL_CASE_TABLE.get(prop) or prop

