# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import pulumi
import pulumi.runtime
from .. import utilities, tables

class FirewallNetworkRuleCollection(pulumi.CustomResource):
    """
    Manages a Network Rule Collection within an Azure Firewall.
    
    -> **NOTE** Azure Firewall is currently in Public Preview.
    """
    def __init__(__self__, __name__, __opts__=None, action=None, azure_firewall_name=None, name=None, priority=None, resource_group_name=None, rules=None):
        """Create a FirewallNetworkRuleCollection resource with the given unique name, props, and options."""
        if not __name__:
            raise TypeError('Missing resource name argument (for URN creation)')
        if not isinstance(__name__, str):
            raise TypeError('Expected resource name to be a string')
        if __opts__ and not isinstance(__opts__, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')

        __props__ = dict()

        if not action:
            raise TypeError('Missing required property action')
        __props__['action'] = action

        if not azure_firewall_name:
            raise TypeError('Missing required property azure_firewall_name')
        __props__['azure_firewall_name'] = azure_firewall_name

        __props__['name'] = name

        if not priority:
            raise TypeError('Missing required property priority')
        __props__['priority'] = priority

        if not resource_group_name:
            raise TypeError('Missing required property resource_group_name')
        __props__['resource_group_name'] = resource_group_name

        if not rules:
            raise TypeError('Missing required property rules')
        __props__['rules'] = rules

        super(FirewallNetworkRuleCollection, __self__).__init__(
            'azure:network/firewallNetworkRuleCollection:FirewallNetworkRuleCollection',
            __name__,
            __props__,
            __opts__)


    def translate_output_property(self, prop):
        return tables._CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop

    def translate_input_property(self, prop):
        return tables._SNAKE_TO_CAMEL_CASE_TABLE.get(prop) or prop

