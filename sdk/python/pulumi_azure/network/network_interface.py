# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import pulumi
import pulumi.runtime
from .. import utilities, tables

class NetworkInterface(pulumi.CustomResource):
    """
    Manages a Network Interface located in a Virtual Network, usually attached to a Virtual Machine.
    """
    def __init__(__self__, __name__, __opts__=None, applied_dns_servers=None, dns_servers=None, enable_accelerated_networking=None, enable_ip_forwarding=None, internal_dns_name_label=None, internal_fqdn=None, ip_configurations=None, location=None, mac_address=None, name=None, network_security_group_id=None, resource_group_name=None, tags=None, virtual_machine_id=None):
        """Create a NetworkInterface resource with the given unique name, props, and options."""
        if not __name__:
            raise TypeError('Missing resource name argument (for URN creation)')
        if not isinstance(__name__, str):
            raise TypeError('Expected resource name to be a string')
        if __opts__ and not isinstance(__opts__, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')

        __props__ = dict()

        __props__['applied_dns_servers'] = applied_dns_servers

        __props__['dns_servers'] = dns_servers

        __props__['enable_accelerated_networking'] = enable_accelerated_networking

        __props__['enable_ip_forwarding'] = enable_ip_forwarding

        __props__['internal_dns_name_label'] = internal_dns_name_label

        __props__['internal_fqdn'] = internal_fqdn

        if not ip_configurations:
            raise TypeError('Missing required property ip_configurations')
        __props__['ip_configurations'] = ip_configurations

        if not location:
            raise TypeError('Missing required property location')
        __props__['location'] = location

        __props__['mac_address'] = mac_address

        __props__['name'] = name

        __props__['network_security_group_id'] = network_security_group_id

        if not resource_group_name:
            raise TypeError('Missing required property resource_group_name')
        __props__['resource_group_name'] = resource_group_name

        __props__['tags'] = tags

        __props__['virtual_machine_id'] = virtual_machine_id

        __props__['private_ip_address'] = None
        __props__['private_ip_addresses'] = None

        super(NetworkInterface, __self__).__init__(
            'azure:network/networkInterface:NetworkInterface',
            __name__,
            __props__,
            __opts__)


    def translate_output_property(self, prop):
        return tables._CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop

    def translate_input_property(self, prop):
        return tables._SNAKE_TO_CAMEL_CASE_TABLE.get(prop) or prop

