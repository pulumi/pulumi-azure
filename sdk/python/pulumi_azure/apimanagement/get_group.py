# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import json
import warnings
import pulumi
import pulumi.runtime
from .. import utilities, tables

class GetGroupResult:
    """
    A collection of values returned by getGroup.
    """
    def __init__(__self__, description=None, display_name=None, external_id=None, type=None, id=None):
        if description and not isinstance(description, str):
            raise TypeError('Expected argument description to be a str')
        __self__.description = description
        """
        The description of this API Management Group.
        """
        if display_name and not isinstance(display_name, str):
            raise TypeError('Expected argument display_name to be a str')
        __self__.display_name = display_name
        """
        The display name of this API Management Group.
        """
        if external_id and not isinstance(external_id, str):
            raise TypeError('Expected argument external_id to be a str')
        __self__.external_id = external_id
        """
        The identifier of the external Group.
        """
        if type and not isinstance(type, str):
            raise TypeError('Expected argument type to be a str')
        __self__.type = type
        """
        The type of this API Management Group, such as `custom` or `external`.
        """
        if id and not isinstance(id, str):
            raise TypeError('Expected argument id to be a str')
        __self__.id = id
        """
        id is the provider-assigned unique ID for this managed resource.
        """

async def get_group(api_management_name=None,name=None,resource_group_name=None,opts=None):
    """
    Use this data source to access information about an existing API Management Group.
    """
    __args__ = dict()

    __args__['apiManagementName'] = api_management_name
    __args__['name'] = name
    __args__['resourceGroupName'] = resource_group_name
    __ret__ = await pulumi.runtime.invoke('azure:apimanagement/getGroup:getGroup', __args__, opts=opts)

    return GetGroupResult(
        description=__ret__.get('description'),
        display_name=__ret__.get('displayName'),
        external_id=__ret__.get('externalId'),
        type=__ret__.get('type'),
        id=__ret__.get('id'))
