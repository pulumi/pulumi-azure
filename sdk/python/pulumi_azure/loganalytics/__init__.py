# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

# Export this package's modules as members:
from .cluster import *
from .cluster_customer_managed_key import *
from .data_export_rule import *
from .data_source_windows_event import *
from .data_source_windows_performance_counter import *
from .linked_service import *
from .linked_storage_account import *
from .saved_search import *
from .storage_insights import *
from ._inputs import *
from . import outputs

def _register_module():
    import pulumi
    from .. import _utilities


    class Module(pulumi.runtime.ResourceModule):
        _version = _utilities.get_semver_version()

        def version(self):
            return Module._version

        def construct(self, name: str, typ: str, urn: str) -> pulumi.Resource:
            if typ == "azure:loganalytics/cluster:Cluster":
                return Cluster(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "azure:loganalytics/clusterCustomerManagedKey:ClusterCustomerManagedKey":
                return ClusterCustomerManagedKey(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "azure:loganalytics/dataExportRule:DataExportRule":
                return DataExportRule(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "azure:loganalytics/dataSourceWindowsEvent:DataSourceWindowsEvent":
                return DataSourceWindowsEvent(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "azure:loganalytics/dataSourceWindowsPerformanceCounter:DataSourceWindowsPerformanceCounter":
                return DataSourceWindowsPerformanceCounter(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "azure:loganalytics/linkedService:LinkedService":
                return LinkedService(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "azure:loganalytics/linkedStorageAccount:LinkedStorageAccount":
                return LinkedStorageAccount(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "azure:loganalytics/savedSearch:SavedSearch":
                return SavedSearch(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "azure:loganalytics/storageInsights:StorageInsights":
                return StorageInsights(name, pulumi.ResourceOptions(urn=urn))
            else:
                raise Exception(f"unknown resource type {typ}")


    _module_instance = Module()
    pulumi.runtime.register_resource_module("azure", "loganalytics/cluster", _module_instance)
    pulumi.runtime.register_resource_module("azure", "loganalytics/clusterCustomerManagedKey", _module_instance)
    pulumi.runtime.register_resource_module("azure", "loganalytics/dataExportRule", _module_instance)
    pulumi.runtime.register_resource_module("azure", "loganalytics/dataSourceWindowsEvent", _module_instance)
    pulumi.runtime.register_resource_module("azure", "loganalytics/dataSourceWindowsPerformanceCounter", _module_instance)
    pulumi.runtime.register_resource_module("azure", "loganalytics/linkedService", _module_instance)
    pulumi.runtime.register_resource_module("azure", "loganalytics/linkedStorageAccount", _module_instance)
    pulumi.runtime.register_resource_module("azure", "loganalytics/savedSearch", _module_instance)
    pulumi.runtime.register_resource_module("azure", "loganalytics/storageInsights", _module_instance)

_register_module()
