# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import json
import warnings
import pulumi
import pulumi.runtime
from typing import Union
from .. import utilities, tables

class Hub(pulumi.CustomResource):
    apns_credential: pulumi.Output[dict]
    """
    A `apns_credential` block as defined below.
    
      * `applicationMode` (`str`)
      * `bundleId` (`str`)
      * `key_id` (`str`)
      * `teamId` (`str`)
      * `token` (`str`)
    """
    gcm_credential: pulumi.Output[dict]
    """
    A `gcm_credential` block as defined below.
    
      * `api_key` (`str`)
    """
    location: pulumi.Output[str]
    """
    The Azure Region in which this Notification Hub Namespace exists. Changing this forces a new resource to be created.
    """
    name: pulumi.Output[str]
    """
    The name to use for this Notification Hub. Changing this forces a new resource to be created.
    """
    namespace_name: pulumi.Output[str]
    """
    The name of the Notification Hub Namespace in which to create this Notification Hub. Changing this forces a new resource to be created.
    """
    resource_group_name: pulumi.Output[str]
    """
    The name of the Resource Group in which the Notification Hub Namespace exists. Changing this forces a new resource to be created.
    """
    def __init__(__self__, resource_name, opts=None, apns_credential=None, gcm_credential=None, location=None, name=None, namespace_name=None, resource_group_name=None, __props__=None, __name__=None, __opts__=None):
        """
        Manages a Notification Hub within a Notification Hub Namespace.
        
        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[dict] apns_credential: A `apns_credential` block as defined below.
        :param pulumi.Input[dict] gcm_credential: A `gcm_credential` block as defined below.
        :param pulumi.Input[str] location: The Azure Region in which this Notification Hub Namespace exists. Changing this forces a new resource to be created.
        :param pulumi.Input[str] name: The name to use for this Notification Hub. Changing this forces a new resource to be created.
        :param pulumi.Input[str] namespace_name: The name of the Notification Hub Namespace in which to create this Notification Hub. Changing this forces a new resource to be created.
        :param pulumi.Input[str] resource_group_name: The name of the Resource Group in which the Notification Hub Namespace exists. Changing this forces a new resource to be created.
        
        The **apns_credential** object supports the following:
        
          * `applicationMode` (`pulumi.Input[str]`)
          * `bundleId` (`pulumi.Input[str]`)
          * `key_id` (`pulumi.Input[str]`)
          * `teamId` (`pulumi.Input[str]`)
          * `token` (`pulumi.Input[str]`)
        
        The **gcm_credential** object supports the following:
        
          * `api_key` (`pulumi.Input[str]`)

        > This content is derived from https://github.com/terraform-providers/terraform-provider-azurerm/blob/master/website/docs/r/notification_hub.html.markdown.
        """
        if __name__ is not None:
            warnings.warn("explicit use of __name__ is deprecated", DeprecationWarning)
            resource_name = __name__
        if __opts__ is not None:
            warnings.warn("explicit use of __opts__ is deprecated, use 'opts' instead", DeprecationWarning)
            opts = __opts__
        if opts is None:
            opts = pulumi.ResourceOptions()
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.version is None:
            opts.version = utilities.get_version()
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = dict()

            __props__['apns_credential'] = apns_credential
            __props__['gcm_credential'] = gcm_credential
            __props__['location'] = location
            __props__['name'] = name
            if namespace_name is None:
                raise TypeError("Missing required property 'namespace_name'")
            __props__['namespace_name'] = namespace_name
            if resource_group_name is None:
                raise TypeError("Missing required property 'resource_group_name'")
            __props__['resource_group_name'] = resource_group_name
        super(Hub, __self__).__init__(
            'azure:notificationhub/hub:Hub',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name, id, opts=None, apns_credential=None, gcm_credential=None, location=None, name=None, namespace_name=None, resource_group_name=None):
        """
        Get an existing Hub resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.
        
        :param str resource_name: The unique name of the resulting resource.
        :param str id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[dict] apns_credential: A `apns_credential` block as defined below.
        :param pulumi.Input[dict] gcm_credential: A `gcm_credential` block as defined below.
        :param pulumi.Input[str] location: The Azure Region in which this Notification Hub Namespace exists. Changing this forces a new resource to be created.
        :param pulumi.Input[str] name: The name to use for this Notification Hub. Changing this forces a new resource to be created.
        :param pulumi.Input[str] namespace_name: The name of the Notification Hub Namespace in which to create this Notification Hub. Changing this forces a new resource to be created.
        :param pulumi.Input[str] resource_group_name: The name of the Resource Group in which the Notification Hub Namespace exists. Changing this forces a new resource to be created.
        
        The **apns_credential** object supports the following:
        
          * `applicationMode` (`pulumi.Input[str]`)
          * `bundleId` (`pulumi.Input[str]`)
          * `key_id` (`pulumi.Input[str]`)
          * `teamId` (`pulumi.Input[str]`)
          * `token` (`pulumi.Input[str]`)
        
        The **gcm_credential** object supports the following:
        
          * `api_key` (`pulumi.Input[str]`)

        > This content is derived from https://github.com/terraform-providers/terraform-provider-azurerm/blob/master/website/docs/r/notification_hub.html.markdown.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = dict()
        __props__["apns_credential"] = apns_credential
        __props__["gcm_credential"] = gcm_credential
        __props__["location"] = location
        __props__["name"] = name
        __props__["namespace_name"] = namespace_name
        __props__["resource_group_name"] = resource_group_name
        return Hub(resource_name, opts=opts, __props__=__props__)
    def translate_output_property(self, prop):
        return tables._CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop

    def translate_input_property(self, prop):
        return tables._SNAKE_TO_CAMEL_CASE_TABLE.get(prop) or prop

