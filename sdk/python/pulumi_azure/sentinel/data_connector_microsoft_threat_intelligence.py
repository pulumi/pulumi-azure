# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Callable, Mapping, Optional, Sequence, Union, overload
from .. import _utilities

__all__ = ['DataConnectorMicrosoftThreatIntelligenceArgs', 'DataConnectorMicrosoftThreatIntelligence']

@pulumi.input_type
class DataConnectorMicrosoftThreatIntelligenceArgs:
    def __init__(__self__, *,
                 log_analytics_workspace_id: pulumi.Input[str],
                 bing_safety_phishing_url_lookback_date: Optional[pulumi.Input[str]] = None,
                 microsoft_emerging_threat_feed_lookback_date: Optional[pulumi.Input[str]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 tenant_id: Optional[pulumi.Input[str]] = None):
        """
        The set of arguments for constructing a DataConnectorMicrosoftThreatIntelligence resource.
        :param pulumi.Input[str] log_analytics_workspace_id: The ID of the Log Analytics Workspace. Changing this forces a new Data Connector to be created.
        :param pulumi.Input[str] bing_safety_phishing_url_lookback_date: The lookback date for the Bing Safety Phishing Url in RFC3339. Changing this forces a new Data Connector to be created.
               
               > **Note:** `bing_safety_phishing_url_lookback_date` has been deprecated as the API no longer supports it and will be removed in version 4.0 of the provider.
        :param pulumi.Input[str] microsoft_emerging_threat_feed_lookback_date: The lookback date for the Microsoft Emerging Threat Feed in RFC3339. Changing this forces a new Data Connector to be created.
               
               > **Note:** `microsoft_emerging_threat_feed_lookback_date` will be required in version 4.0 of the provider.
               
               > **NOTE:** At least one of `bing_safety_phishing_url_lookback_date` and `microsoft_emerging_threat_feed_lookback_date` must be specified.
        :param pulumi.Input[str] name: The name which should be used for this Microsoft Threat Intelligence Data Connector. Changing this forces a new Microsoft Threat Intelligence Data Connector to be created.
        :param pulumi.Input[str] tenant_id: The ID of the tenant that this Microsoft Threat Intelligence Data Connector connects to. Changing this forces a new Microsoft Threat Intelligence Data Connector to be created.
               
               > **NOTE** Currently, only the same tenant as the running account is allowed. Cross-tenant scenario is not supported yet.
        """
        DataConnectorMicrosoftThreatIntelligenceArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            log_analytics_workspace_id=log_analytics_workspace_id,
            bing_safety_phishing_url_lookback_date=bing_safety_phishing_url_lookback_date,
            microsoft_emerging_threat_feed_lookback_date=microsoft_emerging_threat_feed_lookback_date,
            name=name,
            tenant_id=tenant_id,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             log_analytics_workspace_id: pulumi.Input[str],
             bing_safety_phishing_url_lookback_date: Optional[pulumi.Input[str]] = None,
             microsoft_emerging_threat_feed_lookback_date: Optional[pulumi.Input[str]] = None,
             name: Optional[pulumi.Input[str]] = None,
             tenant_id: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None):
        _setter("log_analytics_workspace_id", log_analytics_workspace_id)
        if bing_safety_phishing_url_lookback_date is not None:
            warnings.warn("""This field is deprecated and will be removed in version 4.0 of the AzureRM Provider.""", DeprecationWarning)
            pulumi.log.warn("""bing_safety_phishing_url_lookback_date is deprecated: This field is deprecated and will be removed in version 4.0 of the AzureRM Provider.""")
        if bing_safety_phishing_url_lookback_date is not None:
            _setter("bing_safety_phishing_url_lookback_date", bing_safety_phishing_url_lookback_date)
        if microsoft_emerging_threat_feed_lookback_date is not None:
            _setter("microsoft_emerging_threat_feed_lookback_date", microsoft_emerging_threat_feed_lookback_date)
        if name is not None:
            _setter("name", name)
        if tenant_id is not None:
            _setter("tenant_id", tenant_id)

    @property
    @pulumi.getter(name="logAnalyticsWorkspaceId")
    def log_analytics_workspace_id(self) -> pulumi.Input[str]:
        """
        The ID of the Log Analytics Workspace. Changing this forces a new Data Connector to be created.
        """
        return pulumi.get(self, "log_analytics_workspace_id")

    @log_analytics_workspace_id.setter
    def log_analytics_workspace_id(self, value: pulumi.Input[str]):
        pulumi.set(self, "log_analytics_workspace_id", value)

    @property
    @pulumi.getter(name="bingSafetyPhishingUrlLookbackDate")
    def bing_safety_phishing_url_lookback_date(self) -> Optional[pulumi.Input[str]]:
        """
        The lookback date for the Bing Safety Phishing Url in RFC3339. Changing this forces a new Data Connector to be created.

        > **Note:** `bing_safety_phishing_url_lookback_date` has been deprecated as the API no longer supports it and will be removed in version 4.0 of the provider.
        """
        warnings.warn("""This field is deprecated and will be removed in version 4.0 of the AzureRM Provider.""", DeprecationWarning)
        pulumi.log.warn("""bing_safety_phishing_url_lookback_date is deprecated: This field is deprecated and will be removed in version 4.0 of the AzureRM Provider.""")

        return pulumi.get(self, "bing_safety_phishing_url_lookback_date")

    @bing_safety_phishing_url_lookback_date.setter
    def bing_safety_phishing_url_lookback_date(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "bing_safety_phishing_url_lookback_date", value)

    @property
    @pulumi.getter(name="microsoftEmergingThreatFeedLookbackDate")
    def microsoft_emerging_threat_feed_lookback_date(self) -> Optional[pulumi.Input[str]]:
        """
        The lookback date for the Microsoft Emerging Threat Feed in RFC3339. Changing this forces a new Data Connector to be created.

        > **Note:** `microsoft_emerging_threat_feed_lookback_date` will be required in version 4.0 of the provider.

        > **NOTE:** At least one of `bing_safety_phishing_url_lookback_date` and `microsoft_emerging_threat_feed_lookback_date` must be specified.
        """
        return pulumi.get(self, "microsoft_emerging_threat_feed_lookback_date")

    @microsoft_emerging_threat_feed_lookback_date.setter
    def microsoft_emerging_threat_feed_lookback_date(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "microsoft_emerging_threat_feed_lookback_date", value)

    @property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[str]]:
        """
        The name which should be used for this Microsoft Threat Intelligence Data Connector. Changing this forces a new Microsoft Threat Intelligence Data Connector to be created.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "name", value)

    @property
    @pulumi.getter(name="tenantId")
    def tenant_id(self) -> Optional[pulumi.Input[str]]:
        """
        The ID of the tenant that this Microsoft Threat Intelligence Data Connector connects to. Changing this forces a new Microsoft Threat Intelligence Data Connector to be created.

        > **NOTE** Currently, only the same tenant as the running account is allowed. Cross-tenant scenario is not supported yet.
        """
        return pulumi.get(self, "tenant_id")

    @tenant_id.setter
    def tenant_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "tenant_id", value)


@pulumi.input_type
class _DataConnectorMicrosoftThreatIntelligenceState:
    def __init__(__self__, *,
                 bing_safety_phishing_url_lookback_date: Optional[pulumi.Input[str]] = None,
                 log_analytics_workspace_id: Optional[pulumi.Input[str]] = None,
                 microsoft_emerging_threat_feed_lookback_date: Optional[pulumi.Input[str]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 tenant_id: Optional[pulumi.Input[str]] = None):
        """
        Input properties used for looking up and filtering DataConnectorMicrosoftThreatIntelligence resources.
        :param pulumi.Input[str] bing_safety_phishing_url_lookback_date: The lookback date for the Bing Safety Phishing Url in RFC3339. Changing this forces a new Data Connector to be created.
               
               > **Note:** `bing_safety_phishing_url_lookback_date` has been deprecated as the API no longer supports it and will be removed in version 4.0 of the provider.
        :param pulumi.Input[str] log_analytics_workspace_id: The ID of the Log Analytics Workspace. Changing this forces a new Data Connector to be created.
        :param pulumi.Input[str] microsoft_emerging_threat_feed_lookback_date: The lookback date for the Microsoft Emerging Threat Feed in RFC3339. Changing this forces a new Data Connector to be created.
               
               > **Note:** `microsoft_emerging_threat_feed_lookback_date` will be required in version 4.0 of the provider.
               
               > **NOTE:** At least one of `bing_safety_phishing_url_lookback_date` and `microsoft_emerging_threat_feed_lookback_date` must be specified.
        :param pulumi.Input[str] name: The name which should be used for this Microsoft Threat Intelligence Data Connector. Changing this forces a new Microsoft Threat Intelligence Data Connector to be created.
        :param pulumi.Input[str] tenant_id: The ID of the tenant that this Microsoft Threat Intelligence Data Connector connects to. Changing this forces a new Microsoft Threat Intelligence Data Connector to be created.
               
               > **NOTE** Currently, only the same tenant as the running account is allowed. Cross-tenant scenario is not supported yet.
        """
        _DataConnectorMicrosoftThreatIntelligenceState._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            bing_safety_phishing_url_lookback_date=bing_safety_phishing_url_lookback_date,
            log_analytics_workspace_id=log_analytics_workspace_id,
            microsoft_emerging_threat_feed_lookback_date=microsoft_emerging_threat_feed_lookback_date,
            name=name,
            tenant_id=tenant_id,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             bing_safety_phishing_url_lookback_date: Optional[pulumi.Input[str]] = None,
             log_analytics_workspace_id: Optional[pulumi.Input[str]] = None,
             microsoft_emerging_threat_feed_lookback_date: Optional[pulumi.Input[str]] = None,
             name: Optional[pulumi.Input[str]] = None,
             tenant_id: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None):
        if bing_safety_phishing_url_lookback_date is not None:
            warnings.warn("""This field is deprecated and will be removed in version 4.0 of the AzureRM Provider.""", DeprecationWarning)
            pulumi.log.warn("""bing_safety_phishing_url_lookback_date is deprecated: This field is deprecated and will be removed in version 4.0 of the AzureRM Provider.""")
        if bing_safety_phishing_url_lookback_date is not None:
            _setter("bing_safety_phishing_url_lookback_date", bing_safety_phishing_url_lookback_date)
        if log_analytics_workspace_id is not None:
            _setter("log_analytics_workspace_id", log_analytics_workspace_id)
        if microsoft_emerging_threat_feed_lookback_date is not None:
            _setter("microsoft_emerging_threat_feed_lookback_date", microsoft_emerging_threat_feed_lookback_date)
        if name is not None:
            _setter("name", name)
        if tenant_id is not None:
            _setter("tenant_id", tenant_id)

    @property
    @pulumi.getter(name="bingSafetyPhishingUrlLookbackDate")
    def bing_safety_phishing_url_lookback_date(self) -> Optional[pulumi.Input[str]]:
        """
        The lookback date for the Bing Safety Phishing Url in RFC3339. Changing this forces a new Data Connector to be created.

        > **Note:** `bing_safety_phishing_url_lookback_date` has been deprecated as the API no longer supports it and will be removed in version 4.0 of the provider.
        """
        warnings.warn("""This field is deprecated and will be removed in version 4.0 of the AzureRM Provider.""", DeprecationWarning)
        pulumi.log.warn("""bing_safety_phishing_url_lookback_date is deprecated: This field is deprecated and will be removed in version 4.0 of the AzureRM Provider.""")

        return pulumi.get(self, "bing_safety_phishing_url_lookback_date")

    @bing_safety_phishing_url_lookback_date.setter
    def bing_safety_phishing_url_lookback_date(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "bing_safety_phishing_url_lookback_date", value)

    @property
    @pulumi.getter(name="logAnalyticsWorkspaceId")
    def log_analytics_workspace_id(self) -> Optional[pulumi.Input[str]]:
        """
        The ID of the Log Analytics Workspace. Changing this forces a new Data Connector to be created.
        """
        return pulumi.get(self, "log_analytics_workspace_id")

    @log_analytics_workspace_id.setter
    def log_analytics_workspace_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "log_analytics_workspace_id", value)

    @property
    @pulumi.getter(name="microsoftEmergingThreatFeedLookbackDate")
    def microsoft_emerging_threat_feed_lookback_date(self) -> Optional[pulumi.Input[str]]:
        """
        The lookback date for the Microsoft Emerging Threat Feed in RFC3339. Changing this forces a new Data Connector to be created.

        > **Note:** `microsoft_emerging_threat_feed_lookback_date` will be required in version 4.0 of the provider.

        > **NOTE:** At least one of `bing_safety_phishing_url_lookback_date` and `microsoft_emerging_threat_feed_lookback_date` must be specified.
        """
        return pulumi.get(self, "microsoft_emerging_threat_feed_lookback_date")

    @microsoft_emerging_threat_feed_lookback_date.setter
    def microsoft_emerging_threat_feed_lookback_date(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "microsoft_emerging_threat_feed_lookback_date", value)

    @property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[str]]:
        """
        The name which should be used for this Microsoft Threat Intelligence Data Connector. Changing this forces a new Microsoft Threat Intelligence Data Connector to be created.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "name", value)

    @property
    @pulumi.getter(name="tenantId")
    def tenant_id(self) -> Optional[pulumi.Input[str]]:
        """
        The ID of the tenant that this Microsoft Threat Intelligence Data Connector connects to. Changing this forces a new Microsoft Threat Intelligence Data Connector to be created.

        > **NOTE** Currently, only the same tenant as the running account is allowed. Cross-tenant scenario is not supported yet.
        """
        return pulumi.get(self, "tenant_id")

    @tenant_id.setter
    def tenant_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "tenant_id", value)


class DataConnectorMicrosoftThreatIntelligence(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 bing_safety_phishing_url_lookback_date: Optional[pulumi.Input[str]] = None,
                 log_analytics_workspace_id: Optional[pulumi.Input[str]] = None,
                 microsoft_emerging_threat_feed_lookback_date: Optional[pulumi.Input[str]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 tenant_id: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        """
        Manages a Microsoft Threat Intelligence Data Connector.

        ## Example Usage

        ```python
        import pulumi
        import pulumi_azure as azure

        example_resource_group = azure.core.ResourceGroup("exampleResourceGroup", location="east us")
        example_analytics_workspace = azure.operationalinsights.AnalyticsWorkspace("exampleAnalyticsWorkspace",
            location=example_resource_group.location,
            resource_group_name=example_resource_group.name,
            sku="PerGB2018")
        example_log_analytics_workspace_onboarding = azure.sentinel.LogAnalyticsWorkspaceOnboarding("exampleLogAnalyticsWorkspaceOnboarding", workspace_id=example_analytics_workspace.id)
        example_data_connector_microsoft_threat_intelligence = azure.sentinel.DataConnectorMicrosoftThreatIntelligence("exampleDataConnectorMicrosoftThreatIntelligence",
            log_analytics_workspace_id=example_log_analytics_workspace_onboarding.workspace_id,
            microsoft_emerging_threat_feed_lookback_date="1970-01-01T00:00:00Z")
        ```

        ## Import

        sentinels can be imported using the `resource id`, e.g.

        ```sh
         $ pulumi import azure:sentinel/dataConnectorMicrosoftThreatIntelligence:DataConnectorMicrosoftThreatIntelligence example /subscriptions/12345678-1234-9876-4563-123456789012/resourceGroups/resGroup1/providers/Microsoft.OperationalInsights/workspaces/workspace1/providers/Microsoft.SecurityInsights/dataConnectors/dc1
        ```

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] bing_safety_phishing_url_lookback_date: The lookback date for the Bing Safety Phishing Url in RFC3339. Changing this forces a new Data Connector to be created.
               
               > **Note:** `bing_safety_phishing_url_lookback_date` has been deprecated as the API no longer supports it and will be removed in version 4.0 of the provider.
        :param pulumi.Input[str] log_analytics_workspace_id: The ID of the Log Analytics Workspace. Changing this forces a new Data Connector to be created.
        :param pulumi.Input[str] microsoft_emerging_threat_feed_lookback_date: The lookback date for the Microsoft Emerging Threat Feed in RFC3339. Changing this forces a new Data Connector to be created.
               
               > **Note:** `microsoft_emerging_threat_feed_lookback_date` will be required in version 4.0 of the provider.
               
               > **NOTE:** At least one of `bing_safety_phishing_url_lookback_date` and `microsoft_emerging_threat_feed_lookback_date` must be specified.
        :param pulumi.Input[str] name: The name which should be used for this Microsoft Threat Intelligence Data Connector. Changing this forces a new Microsoft Threat Intelligence Data Connector to be created.
        :param pulumi.Input[str] tenant_id: The ID of the tenant that this Microsoft Threat Intelligence Data Connector connects to. Changing this forces a new Microsoft Threat Intelligence Data Connector to be created.
               
               > **NOTE** Currently, only the same tenant as the running account is allowed. Cross-tenant scenario is not supported yet.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: DataConnectorMicrosoftThreatIntelligenceArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Manages a Microsoft Threat Intelligence Data Connector.

        ## Example Usage

        ```python
        import pulumi
        import pulumi_azure as azure

        example_resource_group = azure.core.ResourceGroup("exampleResourceGroup", location="east us")
        example_analytics_workspace = azure.operationalinsights.AnalyticsWorkspace("exampleAnalyticsWorkspace",
            location=example_resource_group.location,
            resource_group_name=example_resource_group.name,
            sku="PerGB2018")
        example_log_analytics_workspace_onboarding = azure.sentinel.LogAnalyticsWorkspaceOnboarding("exampleLogAnalyticsWorkspaceOnboarding", workspace_id=example_analytics_workspace.id)
        example_data_connector_microsoft_threat_intelligence = azure.sentinel.DataConnectorMicrosoftThreatIntelligence("exampleDataConnectorMicrosoftThreatIntelligence",
            log_analytics_workspace_id=example_log_analytics_workspace_onboarding.workspace_id,
            microsoft_emerging_threat_feed_lookback_date="1970-01-01T00:00:00Z")
        ```

        ## Import

        sentinels can be imported using the `resource id`, e.g.

        ```sh
         $ pulumi import azure:sentinel/dataConnectorMicrosoftThreatIntelligence:DataConnectorMicrosoftThreatIntelligence example /subscriptions/12345678-1234-9876-4563-123456789012/resourceGroups/resGroup1/providers/Microsoft.OperationalInsights/workspaces/workspace1/providers/Microsoft.SecurityInsights/dataConnectors/dc1
        ```

        :param str resource_name: The name of the resource.
        :param DataConnectorMicrosoftThreatIntelligenceArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(DataConnectorMicrosoftThreatIntelligenceArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            kwargs = kwargs or {}
            def _setter(key, value):
                kwargs[key] = value
            DataConnectorMicrosoftThreatIntelligenceArgs._configure(_setter, **kwargs)
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 bing_safety_phishing_url_lookback_date: Optional[pulumi.Input[str]] = None,
                 log_analytics_workspace_id: Optional[pulumi.Input[str]] = None,
                 microsoft_emerging_threat_feed_lookback_date: Optional[pulumi.Input[str]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 tenant_id: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = DataConnectorMicrosoftThreatIntelligenceArgs.__new__(DataConnectorMicrosoftThreatIntelligenceArgs)

            __props__.__dict__["bing_safety_phishing_url_lookback_date"] = bing_safety_phishing_url_lookback_date
            if log_analytics_workspace_id is None and not opts.urn:
                raise TypeError("Missing required property 'log_analytics_workspace_id'")
            __props__.__dict__["log_analytics_workspace_id"] = log_analytics_workspace_id
            __props__.__dict__["microsoft_emerging_threat_feed_lookback_date"] = microsoft_emerging_threat_feed_lookback_date
            __props__.__dict__["name"] = name
            __props__.__dict__["tenant_id"] = tenant_id
        super(DataConnectorMicrosoftThreatIntelligence, __self__).__init__(
            'azure:sentinel/dataConnectorMicrosoftThreatIntelligence:DataConnectorMicrosoftThreatIntelligence',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            bing_safety_phishing_url_lookback_date: Optional[pulumi.Input[str]] = None,
            log_analytics_workspace_id: Optional[pulumi.Input[str]] = None,
            microsoft_emerging_threat_feed_lookback_date: Optional[pulumi.Input[str]] = None,
            name: Optional[pulumi.Input[str]] = None,
            tenant_id: Optional[pulumi.Input[str]] = None) -> 'DataConnectorMicrosoftThreatIntelligence':
        """
        Get an existing DataConnectorMicrosoftThreatIntelligence resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] bing_safety_phishing_url_lookback_date: The lookback date for the Bing Safety Phishing Url in RFC3339. Changing this forces a new Data Connector to be created.
               
               > **Note:** `bing_safety_phishing_url_lookback_date` has been deprecated as the API no longer supports it and will be removed in version 4.0 of the provider.
        :param pulumi.Input[str] log_analytics_workspace_id: The ID of the Log Analytics Workspace. Changing this forces a new Data Connector to be created.
        :param pulumi.Input[str] microsoft_emerging_threat_feed_lookback_date: The lookback date for the Microsoft Emerging Threat Feed in RFC3339. Changing this forces a new Data Connector to be created.
               
               > **Note:** `microsoft_emerging_threat_feed_lookback_date` will be required in version 4.0 of the provider.
               
               > **NOTE:** At least one of `bing_safety_phishing_url_lookback_date` and `microsoft_emerging_threat_feed_lookback_date` must be specified.
        :param pulumi.Input[str] name: The name which should be used for this Microsoft Threat Intelligence Data Connector. Changing this forces a new Microsoft Threat Intelligence Data Connector to be created.
        :param pulumi.Input[str] tenant_id: The ID of the tenant that this Microsoft Threat Intelligence Data Connector connects to. Changing this forces a new Microsoft Threat Intelligence Data Connector to be created.
               
               > **NOTE** Currently, only the same tenant as the running account is allowed. Cross-tenant scenario is not supported yet.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _DataConnectorMicrosoftThreatIntelligenceState.__new__(_DataConnectorMicrosoftThreatIntelligenceState)

        __props__.__dict__["bing_safety_phishing_url_lookback_date"] = bing_safety_phishing_url_lookback_date
        __props__.__dict__["log_analytics_workspace_id"] = log_analytics_workspace_id
        __props__.__dict__["microsoft_emerging_threat_feed_lookback_date"] = microsoft_emerging_threat_feed_lookback_date
        __props__.__dict__["name"] = name
        __props__.__dict__["tenant_id"] = tenant_id
        return DataConnectorMicrosoftThreatIntelligence(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter(name="bingSafetyPhishingUrlLookbackDate")
    def bing_safety_phishing_url_lookback_date(self) -> pulumi.Output[Optional[str]]:
        """
        The lookback date for the Bing Safety Phishing Url in RFC3339. Changing this forces a new Data Connector to be created.

        > **Note:** `bing_safety_phishing_url_lookback_date` has been deprecated as the API no longer supports it and will be removed in version 4.0 of the provider.
        """
        warnings.warn("""This field is deprecated and will be removed in version 4.0 of the AzureRM Provider.""", DeprecationWarning)
        pulumi.log.warn("""bing_safety_phishing_url_lookback_date is deprecated: This field is deprecated and will be removed in version 4.0 of the AzureRM Provider.""")

        return pulumi.get(self, "bing_safety_phishing_url_lookback_date")

    @property
    @pulumi.getter(name="logAnalyticsWorkspaceId")
    def log_analytics_workspace_id(self) -> pulumi.Output[str]:
        """
        The ID of the Log Analytics Workspace. Changing this forces a new Data Connector to be created.
        """
        return pulumi.get(self, "log_analytics_workspace_id")

    @property
    @pulumi.getter(name="microsoftEmergingThreatFeedLookbackDate")
    def microsoft_emerging_threat_feed_lookback_date(self) -> pulumi.Output[Optional[str]]:
        """
        The lookback date for the Microsoft Emerging Threat Feed in RFC3339. Changing this forces a new Data Connector to be created.

        > **Note:** `microsoft_emerging_threat_feed_lookback_date` will be required in version 4.0 of the provider.

        > **NOTE:** At least one of `bing_safety_phishing_url_lookback_date` and `microsoft_emerging_threat_feed_lookback_date` must be specified.
        """
        return pulumi.get(self, "microsoft_emerging_threat_feed_lookback_date")

    @property
    @pulumi.getter
    def name(self) -> pulumi.Output[str]:
        """
        The name which should be used for this Microsoft Threat Intelligence Data Connector. Changing this forces a new Microsoft Threat Intelligence Data Connector to be created.
        """
        return pulumi.get(self, "name")

    @property
    @pulumi.getter(name="tenantId")
    def tenant_id(self) -> pulumi.Output[str]:
        """
        The ID of the tenant that this Microsoft Threat Intelligence Data Connector connects to. Changing this forces a new Microsoft Threat Intelligence Data Connector to be created.

        > **NOTE** Currently, only the same tenant as the running account is allowed. Cross-tenant scenario is not supported yet.
        """
        return pulumi.get(self, "tenant_id")

