# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import json
import warnings
import pulumi
import pulumi.runtime
from typing import Union
from .. import utilities, tables

class AutoscaleSetting(pulumi.CustomResource):
    enabled: pulumi.Output[bool]
    """
    Specifies whether automatic scaling is enabled for the target resource. Defaults to `true`.
    """
    location: pulumi.Output[str]
    """
    Specifies the supported Azure location where the AutoScale Setting should exist. Changing this forces a new resource to be created.
    """
    name: pulumi.Output[str]
    """
    The name of the AutoScale Setting. Changing this forces a new resource to be created.
    """
    notification: pulumi.Output[dict]
    """
    Specifies a `notification` block as defined below.
    
      * `email` (`dict`)
    
        * `customEmails` (`list`)
        * `sendToSubscriptionAdministrator` (`bool`)
        * `sendToSubscriptionCoAdministrator` (`bool`)
    
      * `webhooks` (`list`)
    
        * `properties` (`dict`)
        * `service_uri` (`str`)
    """
    profiles: pulumi.Output[list]
    """
    Specifies one or more (up to 20) `profile` blocks as defined below.
    
      * `capacity` (`dict`)
    
        * `default` (`float`)
        * `maximum` (`float`)
        * `minimum` (`float`)
    
      * `fixedDate` (`dict`)
    
        * `end` (`str`)
        * `start` (`str`)
        * `timezone` (`str`)
    
      * `name` (`str`) - The name of the AutoScale Setting. Changing this forces a new resource to be created.
      * `recurrence` (`dict`)
    
        * `days` (`list`)
        * `hours` (`float`)
        * `minutes` (`float`)
        * `timezone` (`str`)
    
      * `rules` (`list`)
    
        * `metricTrigger` (`dict`)
    
          * `metric_name` (`str`)
          * `metricResourceId` (`str`)
          * `operator` (`str`)
          * `statistic` (`str`)
          * `threshold` (`float`)
          * `timeAggregation` (`str`)
          * `timeGrain` (`str`)
          * `timeWindow` (`str`)
    
        * `scaleAction` (`dict`)
    
          * `cooldown` (`str`)
          * `direction` (`str`)
          * `type` (`str`)
          * `value` (`float`)
    """
    resource_group_name: pulumi.Output[str]
    """
    The name of the Resource Group in the AutoScale Setting should be created. Changing this forces a new resource to be created.
    """
    tags: pulumi.Output[dict]
    """
    A mapping of tags to assign to the resource.
    """
    target_resource_id: pulumi.Output[str]
    """
    Specifies the resource ID of the resource that the autoscale setting should be added to.
    """
    def __init__(__self__, resource_name, opts=None, enabled=None, location=None, name=None, notification=None, profiles=None, resource_group_name=None, tags=None, target_resource_id=None, __props__=None, __name__=None, __opts__=None):
        """
        Manages a AutoScale Setting which can be applied to Virtual Machine Scale Sets, App Services and other scalable resources.
        
        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[bool] enabled: Specifies whether automatic scaling is enabled for the target resource. Defaults to `true`.
        :param pulumi.Input[str] location: Specifies the supported Azure location where the AutoScale Setting should exist. Changing this forces a new resource to be created.
        :param pulumi.Input[str] name: The name of the AutoScale Setting. Changing this forces a new resource to be created.
        :param pulumi.Input[dict] notification: Specifies a `notification` block as defined below.
        :param pulumi.Input[list] profiles: Specifies one or more (up to 20) `profile` blocks as defined below.
        :param pulumi.Input[str] resource_group_name: The name of the Resource Group in the AutoScale Setting should be created. Changing this forces a new resource to be created.
        :param pulumi.Input[dict] tags: A mapping of tags to assign to the resource.
        :param pulumi.Input[str] target_resource_id: Specifies the resource ID of the resource that the autoscale setting should be added to.
        
        The **notification** object supports the following:
        
          * `email` (`pulumi.Input[dict]`)
        
            * `customEmails` (`pulumi.Input[list]`)
            * `sendToSubscriptionAdministrator` (`pulumi.Input[bool]`)
            * `sendToSubscriptionCoAdministrator` (`pulumi.Input[bool]`)
        
          * `webhooks` (`pulumi.Input[list]`)
        
            * `properties` (`pulumi.Input[dict]`)
            * `service_uri` (`pulumi.Input[str]`)
        
        The **profiles** object supports the following:
        
          * `capacity` (`pulumi.Input[dict]`)
        
            * `default` (`pulumi.Input[float]`)
            * `maximum` (`pulumi.Input[float]`)
            * `minimum` (`pulumi.Input[float]`)
        
          * `fixedDate` (`pulumi.Input[dict]`)
        
            * `end` (`pulumi.Input[str]`)
            * `start` (`pulumi.Input[str]`)
            * `timezone` (`pulumi.Input[str]`)
        
          * `name` (`pulumi.Input[str]`) - The name of the AutoScale Setting. Changing this forces a new resource to be created.
          * `recurrence` (`pulumi.Input[dict]`)
        
            * `days` (`pulumi.Input[list]`)
            * `hours` (`pulumi.Input[float]`)
            * `minutes` (`pulumi.Input[float]`)
            * `timezone` (`pulumi.Input[str]`)
        
          * `rules` (`pulumi.Input[list]`)
        
            * `metricTrigger` (`pulumi.Input[dict]`)
        
              * `metric_name` (`pulumi.Input[str]`)
              * `metricResourceId` (`pulumi.Input[str]`)
              * `operator` (`pulumi.Input[str]`)
              * `statistic` (`pulumi.Input[str]`)
              * `threshold` (`pulumi.Input[float]`)
              * `timeAggregation` (`pulumi.Input[str]`)
              * `timeGrain` (`pulumi.Input[str]`)
              * `timeWindow` (`pulumi.Input[str]`)
        
            * `scaleAction` (`pulumi.Input[dict]`)
        
              * `cooldown` (`pulumi.Input[str]`)
              * `direction` (`pulumi.Input[str]`)
              * `type` (`pulumi.Input[str]`)
              * `value` (`pulumi.Input[float]`)

        > This content is derived from https://github.com/terraform-providers/terraform-provider-azurerm/blob/master/website/docs/r/monitor_autoscale_setting.html.markdown.
        """
        if __name__ is not None:
            warnings.warn("explicit use of __name__ is deprecated", DeprecationWarning)
            resource_name = __name__
        if __opts__ is not None:
            warnings.warn("explicit use of __opts__ is deprecated, use 'opts' instead", DeprecationWarning)
            opts = __opts__
        if opts is None:
            opts = pulumi.ResourceOptions()
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.version is None:
            opts.version = utilities.get_version()
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = dict()

            __props__['enabled'] = enabled
            __props__['location'] = location
            __props__['name'] = name
            __props__['notification'] = notification
            if profiles is None:
                raise TypeError("Missing required property 'profiles'")
            __props__['profiles'] = profiles
            if resource_group_name is None:
                raise TypeError("Missing required property 'resource_group_name'")
            __props__['resource_group_name'] = resource_group_name
            __props__['tags'] = tags
            if target_resource_id is None:
                raise TypeError("Missing required property 'target_resource_id'")
            __props__['target_resource_id'] = target_resource_id
        super(AutoscaleSetting, __self__).__init__(
            'azure:monitoring/autoscaleSetting:AutoscaleSetting',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name, id, opts=None, enabled=None, location=None, name=None, notification=None, profiles=None, resource_group_name=None, tags=None, target_resource_id=None):
        """
        Get an existing AutoscaleSetting resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.
        
        :param str resource_name: The unique name of the resulting resource.
        :param str id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[bool] enabled: Specifies whether automatic scaling is enabled for the target resource. Defaults to `true`.
        :param pulumi.Input[str] location: Specifies the supported Azure location where the AutoScale Setting should exist. Changing this forces a new resource to be created.
        :param pulumi.Input[str] name: The name of the AutoScale Setting. Changing this forces a new resource to be created.
        :param pulumi.Input[dict] notification: Specifies a `notification` block as defined below.
        :param pulumi.Input[list] profiles: Specifies one or more (up to 20) `profile` blocks as defined below.
        :param pulumi.Input[str] resource_group_name: The name of the Resource Group in the AutoScale Setting should be created. Changing this forces a new resource to be created.
        :param pulumi.Input[dict] tags: A mapping of tags to assign to the resource.
        :param pulumi.Input[str] target_resource_id: Specifies the resource ID of the resource that the autoscale setting should be added to.
        
        The **notification** object supports the following:
        
          * `email` (`pulumi.Input[dict]`)
        
            * `customEmails` (`pulumi.Input[list]`)
            * `sendToSubscriptionAdministrator` (`pulumi.Input[bool]`)
            * `sendToSubscriptionCoAdministrator` (`pulumi.Input[bool]`)
        
          * `webhooks` (`pulumi.Input[list]`)
        
            * `properties` (`pulumi.Input[dict]`)
            * `service_uri` (`pulumi.Input[str]`)
        
        The **profiles** object supports the following:
        
          * `capacity` (`pulumi.Input[dict]`)
        
            * `default` (`pulumi.Input[float]`)
            * `maximum` (`pulumi.Input[float]`)
            * `minimum` (`pulumi.Input[float]`)
        
          * `fixedDate` (`pulumi.Input[dict]`)
        
            * `end` (`pulumi.Input[str]`)
            * `start` (`pulumi.Input[str]`)
            * `timezone` (`pulumi.Input[str]`)
        
          * `name` (`pulumi.Input[str]`) - The name of the AutoScale Setting. Changing this forces a new resource to be created.
          * `recurrence` (`pulumi.Input[dict]`)
        
            * `days` (`pulumi.Input[list]`)
            * `hours` (`pulumi.Input[float]`)
            * `minutes` (`pulumi.Input[float]`)
            * `timezone` (`pulumi.Input[str]`)
        
          * `rules` (`pulumi.Input[list]`)
        
            * `metricTrigger` (`pulumi.Input[dict]`)
        
              * `metric_name` (`pulumi.Input[str]`)
              * `metricResourceId` (`pulumi.Input[str]`)
              * `operator` (`pulumi.Input[str]`)
              * `statistic` (`pulumi.Input[str]`)
              * `threshold` (`pulumi.Input[float]`)
              * `timeAggregation` (`pulumi.Input[str]`)
              * `timeGrain` (`pulumi.Input[str]`)
              * `timeWindow` (`pulumi.Input[str]`)
        
            * `scaleAction` (`pulumi.Input[dict]`)
        
              * `cooldown` (`pulumi.Input[str]`)
              * `direction` (`pulumi.Input[str]`)
              * `type` (`pulumi.Input[str]`)
              * `value` (`pulumi.Input[float]`)

        > This content is derived from https://github.com/terraform-providers/terraform-provider-azurerm/blob/master/website/docs/r/monitor_autoscale_setting.html.markdown.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = dict()
        __props__["enabled"] = enabled
        __props__["location"] = location
        __props__["name"] = name
        __props__["notification"] = notification
        __props__["profiles"] = profiles
        __props__["resource_group_name"] = resource_group_name
        __props__["tags"] = tags
        __props__["target_resource_id"] = target_resource_id
        return AutoscaleSetting(resource_name, opts=opts, __props__=__props__)
    def translate_output_property(self, prop):
        return tables._CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop

    def translate_input_property(self, prop):
        return tables._SNAKE_TO_CAMEL_CASE_TABLE.get(prop) or prop

