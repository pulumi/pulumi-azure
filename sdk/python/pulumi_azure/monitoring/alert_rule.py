# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import pulumi
import pulumi.runtime
from .. import utilities, tables

class AlertRule(pulumi.CustomResource):
    """
    Manages a [metric-based alert rule](https://docs.microsoft.com/en-us/azure/monitoring-and-diagnostics/monitor-quick-resource-metric-alert-portal) in Azure Monitor.
    """
    def __init__(__self__, __name__, __opts__=None, aggregation=None, description=None, email_action=None, enabled=None, location=None, metric_name=None, name=None, operator=None, period=None, resource_group_name=None, resource_id=None, tags=None, threshold=None, webhook_action=None):
        """Create a AlertRule resource with the given unique name, props, and options."""
        if not __name__:
            raise TypeError('Missing resource name argument (for URN creation)')
        if not isinstance(__name__, str):
            raise TypeError('Expected resource name to be a string')
        if __opts__ and not isinstance(__opts__, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')

        __props__ = dict()

        if not aggregation:
            raise TypeError('Missing required property aggregation')
        __props__['aggregation'] = aggregation

        __props__['description'] = description

        __props__['email_action'] = email_action

        __props__['enabled'] = enabled

        if not location:
            raise TypeError('Missing required property location')
        __props__['location'] = location

        if not metric_name:
            raise TypeError('Missing required property metric_name')
        __props__['metric_name'] = metric_name

        __props__['name'] = name

        if not operator:
            raise TypeError('Missing required property operator')
        __props__['operator'] = operator

        if not period:
            raise TypeError('Missing required property period')
        __props__['period'] = period

        if not resource_group_name:
            raise TypeError('Missing required property resource_group_name')
        __props__['resource_group_name'] = resource_group_name

        if not resource_id:
            raise TypeError('Missing required property resource_id')
        __props__['resource_id'] = resource_id

        __props__['tags'] = tags

        if not threshold:
            raise TypeError('Missing required property threshold')
        __props__['threshold'] = threshold

        __props__['webhook_action'] = webhook_action

        super(AlertRule, __self__).__init__(
            'azure:monitoring/alertRule:AlertRule',
            __name__,
            __props__,
            __opts__)


    def translate_output_property(self, prop):
        return tables._CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop

    def translate_input_property(self, prop):
        return tables._SNAKE_TO_CAMEL_CASE_TABLE.get(prop) or prop

