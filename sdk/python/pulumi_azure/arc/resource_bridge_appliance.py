# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Callable, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from . import outputs
from ._inputs import *

__all__ = ['ResourceBridgeApplianceArgs', 'ResourceBridgeAppliance']

@pulumi.input_type
class ResourceBridgeApplianceArgs:
    def __init__(__self__, *,
                 distro: pulumi.Input[str],
                 identity: pulumi.Input['ResourceBridgeApplianceIdentityArgs'],
                 infrastructure_provider: pulumi.Input[str],
                 resource_group_name: pulumi.Input[str],
                 location: Optional[pulumi.Input[str]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 public_key_base64: Optional[pulumi.Input[str]] = None,
                 tags: Optional[pulumi.Input[Mapping[str, pulumi.Input[str]]]] = None):
        """
        The set of arguments for constructing a ResourceBridgeAppliance resource.
        :param pulumi.Input[str] distro: Specifies a supported Fabric/Infrastructure for this Arc Resource Bridge Appliance. The possible value is `AKSEdge`.
        :param pulumi.Input['ResourceBridgeApplianceIdentityArgs'] identity: An `identity` block as defined below. Changing this forces a new resource to be created.
        :param pulumi.Input[str] infrastructure_provider: The infrastructure provider about the connected Arc Resource Bridge Appliance. Possible values are `HCI`,`SCVMM` and `VMWare`. Changing this forces a new resource to be created.
        :param pulumi.Input[str] resource_group_name: Specifies the resource group where the Arc Resource Bridge Appliance exists. Changing this forces a new resource to be created.
        :param pulumi.Input[str] location: The Azure Region where the Arc Resource Bridge Appliance should exist. Changing this forces a new resource to be created.
        :param pulumi.Input[str] name: The Name which should be used for this Arc Resource Bridge Appliance. Changing this forces a new resource to be created.
        :param pulumi.Input[str] public_key_base64: The `public_key_base64` is an RSA public key in PKCS1 format encoded in base64. Changing this forces a new resource to be created.
        :param pulumi.Input[Mapping[str, pulumi.Input[str]]] tags: A mapping of tags which should be assigned to the Arc Resource Bridge Appliance.
        """
        ResourceBridgeApplianceArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            distro=distro,
            identity=identity,
            infrastructure_provider=infrastructure_provider,
            resource_group_name=resource_group_name,
            location=location,
            name=name,
            public_key_base64=public_key_base64,
            tags=tags,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             distro: pulumi.Input[str],
             identity: pulumi.Input['ResourceBridgeApplianceIdentityArgs'],
             infrastructure_provider: pulumi.Input[str],
             resource_group_name: pulumi.Input[str],
             location: Optional[pulumi.Input[str]] = None,
             name: Optional[pulumi.Input[str]] = None,
             public_key_base64: Optional[pulumi.Input[str]] = None,
             tags: Optional[pulumi.Input[Mapping[str, pulumi.Input[str]]]] = None,
             opts: Optional[pulumi.ResourceOptions]=None):
        _setter("distro", distro)
        _setter("identity", identity)
        _setter("infrastructure_provider", infrastructure_provider)
        _setter("resource_group_name", resource_group_name)
        if location is not None:
            _setter("location", location)
        if name is not None:
            _setter("name", name)
        if public_key_base64 is not None:
            _setter("public_key_base64", public_key_base64)
        if tags is not None:
            _setter("tags", tags)

    @property
    @pulumi.getter
    def distro(self) -> pulumi.Input[str]:
        """
        Specifies a supported Fabric/Infrastructure for this Arc Resource Bridge Appliance. The possible value is `AKSEdge`.
        """
        return pulumi.get(self, "distro")

    @distro.setter
    def distro(self, value: pulumi.Input[str]):
        pulumi.set(self, "distro", value)

    @property
    @pulumi.getter
    def identity(self) -> pulumi.Input['ResourceBridgeApplianceIdentityArgs']:
        """
        An `identity` block as defined below. Changing this forces a new resource to be created.
        """
        return pulumi.get(self, "identity")

    @identity.setter
    def identity(self, value: pulumi.Input['ResourceBridgeApplianceIdentityArgs']):
        pulumi.set(self, "identity", value)

    @property
    @pulumi.getter(name="infrastructureProvider")
    def infrastructure_provider(self) -> pulumi.Input[str]:
        """
        The infrastructure provider about the connected Arc Resource Bridge Appliance. Possible values are `HCI`,`SCVMM` and `VMWare`. Changing this forces a new resource to be created.
        """
        return pulumi.get(self, "infrastructure_provider")

    @infrastructure_provider.setter
    def infrastructure_provider(self, value: pulumi.Input[str]):
        pulumi.set(self, "infrastructure_provider", value)

    @property
    @pulumi.getter(name="resourceGroupName")
    def resource_group_name(self) -> pulumi.Input[str]:
        """
        Specifies the resource group where the Arc Resource Bridge Appliance exists. Changing this forces a new resource to be created.
        """
        return pulumi.get(self, "resource_group_name")

    @resource_group_name.setter
    def resource_group_name(self, value: pulumi.Input[str]):
        pulumi.set(self, "resource_group_name", value)

    @property
    @pulumi.getter
    def location(self) -> Optional[pulumi.Input[str]]:
        """
        The Azure Region where the Arc Resource Bridge Appliance should exist. Changing this forces a new resource to be created.
        """
        return pulumi.get(self, "location")

    @location.setter
    def location(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "location", value)

    @property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[str]]:
        """
        The Name which should be used for this Arc Resource Bridge Appliance. Changing this forces a new resource to be created.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "name", value)

    @property
    @pulumi.getter(name="publicKeyBase64")
    def public_key_base64(self) -> Optional[pulumi.Input[str]]:
        """
        The `public_key_base64` is an RSA public key in PKCS1 format encoded in base64. Changing this forces a new resource to be created.
        """
        return pulumi.get(self, "public_key_base64")

    @public_key_base64.setter
    def public_key_base64(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "public_key_base64", value)

    @property
    @pulumi.getter
    def tags(self) -> Optional[pulumi.Input[Mapping[str, pulumi.Input[str]]]]:
        """
        A mapping of tags which should be assigned to the Arc Resource Bridge Appliance.
        """
        return pulumi.get(self, "tags")

    @tags.setter
    def tags(self, value: Optional[pulumi.Input[Mapping[str, pulumi.Input[str]]]]):
        pulumi.set(self, "tags", value)


@pulumi.input_type
class _ResourceBridgeApplianceState:
    def __init__(__self__, *,
                 distro: Optional[pulumi.Input[str]] = None,
                 identity: Optional[pulumi.Input['ResourceBridgeApplianceIdentityArgs']] = None,
                 infrastructure_provider: Optional[pulumi.Input[str]] = None,
                 location: Optional[pulumi.Input[str]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 public_key_base64: Optional[pulumi.Input[str]] = None,
                 resource_group_name: Optional[pulumi.Input[str]] = None,
                 tags: Optional[pulumi.Input[Mapping[str, pulumi.Input[str]]]] = None):
        """
        Input properties used for looking up and filtering ResourceBridgeAppliance resources.
        :param pulumi.Input[str] distro: Specifies a supported Fabric/Infrastructure for this Arc Resource Bridge Appliance. The possible value is `AKSEdge`.
        :param pulumi.Input['ResourceBridgeApplianceIdentityArgs'] identity: An `identity` block as defined below. Changing this forces a new resource to be created.
        :param pulumi.Input[str] infrastructure_provider: The infrastructure provider about the connected Arc Resource Bridge Appliance. Possible values are `HCI`,`SCVMM` and `VMWare`. Changing this forces a new resource to be created.
        :param pulumi.Input[str] location: The Azure Region where the Arc Resource Bridge Appliance should exist. Changing this forces a new resource to be created.
        :param pulumi.Input[str] name: The Name which should be used for this Arc Resource Bridge Appliance. Changing this forces a new resource to be created.
        :param pulumi.Input[str] public_key_base64: The `public_key_base64` is an RSA public key in PKCS1 format encoded in base64. Changing this forces a new resource to be created.
        :param pulumi.Input[str] resource_group_name: Specifies the resource group where the Arc Resource Bridge Appliance exists. Changing this forces a new resource to be created.
        :param pulumi.Input[Mapping[str, pulumi.Input[str]]] tags: A mapping of tags which should be assigned to the Arc Resource Bridge Appliance.
        """
        _ResourceBridgeApplianceState._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            distro=distro,
            identity=identity,
            infrastructure_provider=infrastructure_provider,
            location=location,
            name=name,
            public_key_base64=public_key_base64,
            resource_group_name=resource_group_name,
            tags=tags,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             distro: Optional[pulumi.Input[str]] = None,
             identity: Optional[pulumi.Input['ResourceBridgeApplianceIdentityArgs']] = None,
             infrastructure_provider: Optional[pulumi.Input[str]] = None,
             location: Optional[pulumi.Input[str]] = None,
             name: Optional[pulumi.Input[str]] = None,
             public_key_base64: Optional[pulumi.Input[str]] = None,
             resource_group_name: Optional[pulumi.Input[str]] = None,
             tags: Optional[pulumi.Input[Mapping[str, pulumi.Input[str]]]] = None,
             opts: Optional[pulumi.ResourceOptions]=None):
        if distro is not None:
            _setter("distro", distro)
        if identity is not None:
            _setter("identity", identity)
        if infrastructure_provider is not None:
            _setter("infrastructure_provider", infrastructure_provider)
        if location is not None:
            _setter("location", location)
        if name is not None:
            _setter("name", name)
        if public_key_base64 is not None:
            _setter("public_key_base64", public_key_base64)
        if resource_group_name is not None:
            _setter("resource_group_name", resource_group_name)
        if tags is not None:
            _setter("tags", tags)

    @property
    @pulumi.getter
    def distro(self) -> Optional[pulumi.Input[str]]:
        """
        Specifies a supported Fabric/Infrastructure for this Arc Resource Bridge Appliance. The possible value is `AKSEdge`.
        """
        return pulumi.get(self, "distro")

    @distro.setter
    def distro(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "distro", value)

    @property
    @pulumi.getter
    def identity(self) -> Optional[pulumi.Input['ResourceBridgeApplianceIdentityArgs']]:
        """
        An `identity` block as defined below. Changing this forces a new resource to be created.
        """
        return pulumi.get(self, "identity")

    @identity.setter
    def identity(self, value: Optional[pulumi.Input['ResourceBridgeApplianceIdentityArgs']]):
        pulumi.set(self, "identity", value)

    @property
    @pulumi.getter(name="infrastructureProvider")
    def infrastructure_provider(self) -> Optional[pulumi.Input[str]]:
        """
        The infrastructure provider about the connected Arc Resource Bridge Appliance. Possible values are `HCI`,`SCVMM` and `VMWare`. Changing this forces a new resource to be created.
        """
        return pulumi.get(self, "infrastructure_provider")

    @infrastructure_provider.setter
    def infrastructure_provider(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "infrastructure_provider", value)

    @property
    @pulumi.getter
    def location(self) -> Optional[pulumi.Input[str]]:
        """
        The Azure Region where the Arc Resource Bridge Appliance should exist. Changing this forces a new resource to be created.
        """
        return pulumi.get(self, "location")

    @location.setter
    def location(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "location", value)

    @property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[str]]:
        """
        The Name which should be used for this Arc Resource Bridge Appliance. Changing this forces a new resource to be created.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "name", value)

    @property
    @pulumi.getter(name="publicKeyBase64")
    def public_key_base64(self) -> Optional[pulumi.Input[str]]:
        """
        The `public_key_base64` is an RSA public key in PKCS1 format encoded in base64. Changing this forces a new resource to be created.
        """
        return pulumi.get(self, "public_key_base64")

    @public_key_base64.setter
    def public_key_base64(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "public_key_base64", value)

    @property
    @pulumi.getter(name="resourceGroupName")
    def resource_group_name(self) -> Optional[pulumi.Input[str]]:
        """
        Specifies the resource group where the Arc Resource Bridge Appliance exists. Changing this forces a new resource to be created.
        """
        return pulumi.get(self, "resource_group_name")

    @resource_group_name.setter
    def resource_group_name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "resource_group_name", value)

    @property
    @pulumi.getter
    def tags(self) -> Optional[pulumi.Input[Mapping[str, pulumi.Input[str]]]]:
        """
        A mapping of tags which should be assigned to the Arc Resource Bridge Appliance.
        """
        return pulumi.get(self, "tags")

    @tags.setter
    def tags(self, value: Optional[pulumi.Input[Mapping[str, pulumi.Input[str]]]]):
        pulumi.set(self, "tags", value)


class ResourceBridgeAppliance(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 distro: Optional[pulumi.Input[str]] = None,
                 identity: Optional[pulumi.Input[pulumi.InputType['ResourceBridgeApplianceIdentityArgs']]] = None,
                 infrastructure_provider: Optional[pulumi.Input[str]] = None,
                 location: Optional[pulumi.Input[str]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 public_key_base64: Optional[pulumi.Input[str]] = None,
                 resource_group_name: Optional[pulumi.Input[str]] = None,
                 tags: Optional[pulumi.Input[Mapping[str, pulumi.Input[str]]]] = None,
                 __props__=None):
        """
        Manages an Arc Resource Bridge Appliance.

        ## Example Usage

        ```python
        import pulumi
        import pulumi_azure as azure

        example_resource_group = azure.core.ResourceGroup("exampleResourceGroup", location="West Europe")
        example_resource_bridge_appliance = azure.arc.ResourceBridgeAppliance("exampleResourceBridgeAppliance",
            location=example_resource_group.location,
            resource_group_name=example_resource_group.name,
            distro="AKSEdge",
            infrastructure_provider="VMWare",
            identity=azure.arc.ResourceBridgeApplianceIdentityArgs(
                type="SystemAssigned",
            ),
            tags={
                "hello": "world",
            })
        ```

        ## Import

        Arc Resource Bridge Appliance can be imported using the `resource id`, e.g.

        ```sh
         $ pulumi import azure:arc/resourceBridgeAppliance:ResourceBridgeAppliance example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.ResourceConnector/appliances/appliancesExample
        ```

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] distro: Specifies a supported Fabric/Infrastructure for this Arc Resource Bridge Appliance. The possible value is `AKSEdge`.
        :param pulumi.Input[pulumi.InputType['ResourceBridgeApplianceIdentityArgs']] identity: An `identity` block as defined below. Changing this forces a new resource to be created.
        :param pulumi.Input[str] infrastructure_provider: The infrastructure provider about the connected Arc Resource Bridge Appliance. Possible values are `HCI`,`SCVMM` and `VMWare`. Changing this forces a new resource to be created.
        :param pulumi.Input[str] location: The Azure Region where the Arc Resource Bridge Appliance should exist. Changing this forces a new resource to be created.
        :param pulumi.Input[str] name: The Name which should be used for this Arc Resource Bridge Appliance. Changing this forces a new resource to be created.
        :param pulumi.Input[str] public_key_base64: The `public_key_base64` is an RSA public key in PKCS1 format encoded in base64. Changing this forces a new resource to be created.
        :param pulumi.Input[str] resource_group_name: Specifies the resource group where the Arc Resource Bridge Appliance exists. Changing this forces a new resource to be created.
        :param pulumi.Input[Mapping[str, pulumi.Input[str]]] tags: A mapping of tags which should be assigned to the Arc Resource Bridge Appliance.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: ResourceBridgeApplianceArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Manages an Arc Resource Bridge Appliance.

        ## Example Usage

        ```python
        import pulumi
        import pulumi_azure as azure

        example_resource_group = azure.core.ResourceGroup("exampleResourceGroup", location="West Europe")
        example_resource_bridge_appliance = azure.arc.ResourceBridgeAppliance("exampleResourceBridgeAppliance",
            location=example_resource_group.location,
            resource_group_name=example_resource_group.name,
            distro="AKSEdge",
            infrastructure_provider="VMWare",
            identity=azure.arc.ResourceBridgeApplianceIdentityArgs(
                type="SystemAssigned",
            ),
            tags={
                "hello": "world",
            })
        ```

        ## Import

        Arc Resource Bridge Appliance can be imported using the `resource id`, e.g.

        ```sh
         $ pulumi import azure:arc/resourceBridgeAppliance:ResourceBridgeAppliance example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.ResourceConnector/appliances/appliancesExample
        ```

        :param str resource_name: The name of the resource.
        :param ResourceBridgeApplianceArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(ResourceBridgeApplianceArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            kwargs = kwargs or {}
            def _setter(key, value):
                kwargs[key] = value
            ResourceBridgeApplianceArgs._configure(_setter, **kwargs)
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 distro: Optional[pulumi.Input[str]] = None,
                 identity: Optional[pulumi.Input[pulumi.InputType['ResourceBridgeApplianceIdentityArgs']]] = None,
                 infrastructure_provider: Optional[pulumi.Input[str]] = None,
                 location: Optional[pulumi.Input[str]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 public_key_base64: Optional[pulumi.Input[str]] = None,
                 resource_group_name: Optional[pulumi.Input[str]] = None,
                 tags: Optional[pulumi.Input[Mapping[str, pulumi.Input[str]]]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = ResourceBridgeApplianceArgs.__new__(ResourceBridgeApplianceArgs)

            if distro is None and not opts.urn:
                raise TypeError("Missing required property 'distro'")
            __props__.__dict__["distro"] = distro
            if identity is not None and not isinstance(identity, ResourceBridgeApplianceIdentityArgs):
                identity = identity or {}
                def _setter(key, value):
                    identity[key] = value
                ResourceBridgeApplianceIdentityArgs._configure(_setter, **identity)
            if identity is None and not opts.urn:
                raise TypeError("Missing required property 'identity'")
            __props__.__dict__["identity"] = identity
            if infrastructure_provider is None and not opts.urn:
                raise TypeError("Missing required property 'infrastructure_provider'")
            __props__.__dict__["infrastructure_provider"] = infrastructure_provider
            __props__.__dict__["location"] = location
            __props__.__dict__["name"] = name
            __props__.__dict__["public_key_base64"] = public_key_base64
            if resource_group_name is None and not opts.urn:
                raise TypeError("Missing required property 'resource_group_name'")
            __props__.__dict__["resource_group_name"] = resource_group_name
            __props__.__dict__["tags"] = tags
        super(ResourceBridgeAppliance, __self__).__init__(
            'azure:arc/resourceBridgeAppliance:ResourceBridgeAppliance',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            distro: Optional[pulumi.Input[str]] = None,
            identity: Optional[pulumi.Input[pulumi.InputType['ResourceBridgeApplianceIdentityArgs']]] = None,
            infrastructure_provider: Optional[pulumi.Input[str]] = None,
            location: Optional[pulumi.Input[str]] = None,
            name: Optional[pulumi.Input[str]] = None,
            public_key_base64: Optional[pulumi.Input[str]] = None,
            resource_group_name: Optional[pulumi.Input[str]] = None,
            tags: Optional[pulumi.Input[Mapping[str, pulumi.Input[str]]]] = None) -> 'ResourceBridgeAppliance':
        """
        Get an existing ResourceBridgeAppliance resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] distro: Specifies a supported Fabric/Infrastructure for this Arc Resource Bridge Appliance. The possible value is `AKSEdge`.
        :param pulumi.Input[pulumi.InputType['ResourceBridgeApplianceIdentityArgs']] identity: An `identity` block as defined below. Changing this forces a new resource to be created.
        :param pulumi.Input[str] infrastructure_provider: The infrastructure provider about the connected Arc Resource Bridge Appliance. Possible values are `HCI`,`SCVMM` and `VMWare`. Changing this forces a new resource to be created.
        :param pulumi.Input[str] location: The Azure Region where the Arc Resource Bridge Appliance should exist. Changing this forces a new resource to be created.
        :param pulumi.Input[str] name: The Name which should be used for this Arc Resource Bridge Appliance. Changing this forces a new resource to be created.
        :param pulumi.Input[str] public_key_base64: The `public_key_base64` is an RSA public key in PKCS1 format encoded in base64. Changing this forces a new resource to be created.
        :param pulumi.Input[str] resource_group_name: Specifies the resource group where the Arc Resource Bridge Appliance exists. Changing this forces a new resource to be created.
        :param pulumi.Input[Mapping[str, pulumi.Input[str]]] tags: A mapping of tags which should be assigned to the Arc Resource Bridge Appliance.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _ResourceBridgeApplianceState.__new__(_ResourceBridgeApplianceState)

        __props__.__dict__["distro"] = distro
        __props__.__dict__["identity"] = identity
        __props__.__dict__["infrastructure_provider"] = infrastructure_provider
        __props__.__dict__["location"] = location
        __props__.__dict__["name"] = name
        __props__.__dict__["public_key_base64"] = public_key_base64
        __props__.__dict__["resource_group_name"] = resource_group_name
        __props__.__dict__["tags"] = tags
        return ResourceBridgeAppliance(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter
    def distro(self) -> pulumi.Output[str]:
        """
        Specifies a supported Fabric/Infrastructure for this Arc Resource Bridge Appliance. The possible value is `AKSEdge`.
        """
        return pulumi.get(self, "distro")

    @property
    @pulumi.getter
    def identity(self) -> pulumi.Output['outputs.ResourceBridgeApplianceIdentity']:
        """
        An `identity` block as defined below. Changing this forces a new resource to be created.
        """
        return pulumi.get(self, "identity")

    @property
    @pulumi.getter(name="infrastructureProvider")
    def infrastructure_provider(self) -> pulumi.Output[str]:
        """
        The infrastructure provider about the connected Arc Resource Bridge Appliance. Possible values are `HCI`,`SCVMM` and `VMWare`. Changing this forces a new resource to be created.
        """
        return pulumi.get(self, "infrastructure_provider")

    @property
    @pulumi.getter
    def location(self) -> pulumi.Output[str]:
        """
        The Azure Region where the Arc Resource Bridge Appliance should exist. Changing this forces a new resource to be created.
        """
        return pulumi.get(self, "location")

    @property
    @pulumi.getter
    def name(self) -> pulumi.Output[str]:
        """
        The Name which should be used for this Arc Resource Bridge Appliance. Changing this forces a new resource to be created.
        """
        return pulumi.get(self, "name")

    @property
    @pulumi.getter(name="publicKeyBase64")
    def public_key_base64(self) -> pulumi.Output[Optional[str]]:
        """
        The `public_key_base64` is an RSA public key in PKCS1 format encoded in base64. Changing this forces a new resource to be created.
        """
        return pulumi.get(self, "public_key_base64")

    @property
    @pulumi.getter(name="resourceGroupName")
    def resource_group_name(self) -> pulumi.Output[str]:
        """
        Specifies the resource group where the Arc Resource Bridge Appliance exists. Changing this forces a new resource to be created.
        """
        return pulumi.get(self, "resource_group_name")

    @property
    @pulumi.getter
    def tags(self) -> pulumi.Output[Optional[Mapping[str, str]]]:
        """
        A mapping of tags which should be assigned to the Arc Resource Bridge Appliance.
        """
        return pulumi.get(self, "tags")

