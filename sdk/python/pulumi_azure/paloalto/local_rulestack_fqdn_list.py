# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Callable, Mapping, Optional, Sequence, Union, overload
from .. import _utilities

__all__ = ['LocalRulestackFqdnListArgs', 'LocalRulestackFqdnList']

@pulumi.input_type
class LocalRulestackFqdnListArgs:
    def __init__(__self__, *,
                 fully_qualified_domain_names: pulumi.Input[Sequence[pulumi.Input[str]]],
                 rulestack_id: pulumi.Input[str],
                 audit_comment: Optional[pulumi.Input[str]] = None,
                 description: Optional[pulumi.Input[str]] = None,
                 name: Optional[pulumi.Input[str]] = None):
        """
        The set of arguments for constructing a LocalRulestackFqdnList resource.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] fully_qualified_domain_names: Specifies a list of Fully Qualified Domain Names.
        :param pulumi.Input[str] rulestack_id: The ID of the TODO. Changing this forces a new Palo Alto Local Rulestack FQDN List to be created.
        :param pulumi.Input[str] audit_comment: The comment for Audit purposes.
        :param pulumi.Input[str] description: The description for the FQDN List.
        :param pulumi.Input[str] name: The name which should be used for this Palo Alto Local Rulestack FQDN List.
        """
        LocalRulestackFqdnListArgs._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            fully_qualified_domain_names=fully_qualified_domain_names,
            rulestack_id=rulestack_id,
            audit_comment=audit_comment,
            description=description,
            name=name,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             fully_qualified_domain_names: pulumi.Input[Sequence[pulumi.Input[str]]],
             rulestack_id: pulumi.Input[str],
             audit_comment: Optional[pulumi.Input[str]] = None,
             description: Optional[pulumi.Input[str]] = None,
             name: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None):
        _setter("fully_qualified_domain_names", fully_qualified_domain_names)
        _setter("rulestack_id", rulestack_id)
        if audit_comment is not None:
            _setter("audit_comment", audit_comment)
        if description is not None:
            _setter("description", description)
        if name is not None:
            _setter("name", name)

    @property
    @pulumi.getter(name="fullyQualifiedDomainNames")
    def fully_qualified_domain_names(self) -> pulumi.Input[Sequence[pulumi.Input[str]]]:
        """
        Specifies a list of Fully Qualified Domain Names.
        """
        return pulumi.get(self, "fully_qualified_domain_names")

    @fully_qualified_domain_names.setter
    def fully_qualified_domain_names(self, value: pulumi.Input[Sequence[pulumi.Input[str]]]):
        pulumi.set(self, "fully_qualified_domain_names", value)

    @property
    @pulumi.getter(name="rulestackId")
    def rulestack_id(self) -> pulumi.Input[str]:
        """
        The ID of the TODO. Changing this forces a new Palo Alto Local Rulestack FQDN List to be created.
        """
        return pulumi.get(self, "rulestack_id")

    @rulestack_id.setter
    def rulestack_id(self, value: pulumi.Input[str]):
        pulumi.set(self, "rulestack_id", value)

    @property
    @pulumi.getter(name="auditComment")
    def audit_comment(self) -> Optional[pulumi.Input[str]]:
        """
        The comment for Audit purposes.
        """
        return pulumi.get(self, "audit_comment")

    @audit_comment.setter
    def audit_comment(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "audit_comment", value)

    @property
    @pulumi.getter
    def description(self) -> Optional[pulumi.Input[str]]:
        """
        The description for the FQDN List.
        """
        return pulumi.get(self, "description")

    @description.setter
    def description(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "description", value)

    @property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[str]]:
        """
        The name which should be used for this Palo Alto Local Rulestack FQDN List.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "name", value)


@pulumi.input_type
class _LocalRulestackFqdnListState:
    def __init__(__self__, *,
                 audit_comment: Optional[pulumi.Input[str]] = None,
                 description: Optional[pulumi.Input[str]] = None,
                 fully_qualified_domain_names: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 rulestack_id: Optional[pulumi.Input[str]] = None):
        """
        Input properties used for looking up and filtering LocalRulestackFqdnList resources.
        :param pulumi.Input[str] audit_comment: The comment for Audit purposes.
        :param pulumi.Input[str] description: The description for the FQDN List.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] fully_qualified_domain_names: Specifies a list of Fully Qualified Domain Names.
        :param pulumi.Input[str] name: The name which should be used for this Palo Alto Local Rulestack FQDN List.
        :param pulumi.Input[str] rulestack_id: The ID of the TODO. Changing this forces a new Palo Alto Local Rulestack FQDN List to be created.
        """
        _LocalRulestackFqdnListState._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            audit_comment=audit_comment,
            description=description,
            fully_qualified_domain_names=fully_qualified_domain_names,
            name=name,
            rulestack_id=rulestack_id,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             audit_comment: Optional[pulumi.Input[str]] = None,
             description: Optional[pulumi.Input[str]] = None,
             fully_qualified_domain_names: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
             name: Optional[pulumi.Input[str]] = None,
             rulestack_id: Optional[pulumi.Input[str]] = None,
             opts: Optional[pulumi.ResourceOptions]=None):
        if audit_comment is not None:
            _setter("audit_comment", audit_comment)
        if description is not None:
            _setter("description", description)
        if fully_qualified_domain_names is not None:
            _setter("fully_qualified_domain_names", fully_qualified_domain_names)
        if name is not None:
            _setter("name", name)
        if rulestack_id is not None:
            _setter("rulestack_id", rulestack_id)

    @property
    @pulumi.getter(name="auditComment")
    def audit_comment(self) -> Optional[pulumi.Input[str]]:
        """
        The comment for Audit purposes.
        """
        return pulumi.get(self, "audit_comment")

    @audit_comment.setter
    def audit_comment(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "audit_comment", value)

    @property
    @pulumi.getter
    def description(self) -> Optional[pulumi.Input[str]]:
        """
        The description for the FQDN List.
        """
        return pulumi.get(self, "description")

    @description.setter
    def description(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "description", value)

    @property
    @pulumi.getter(name="fullyQualifiedDomainNames")
    def fully_qualified_domain_names(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        """
        Specifies a list of Fully Qualified Domain Names.
        """
        return pulumi.get(self, "fully_qualified_domain_names")

    @fully_qualified_domain_names.setter
    def fully_qualified_domain_names(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "fully_qualified_domain_names", value)

    @property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[str]]:
        """
        The name which should be used for this Palo Alto Local Rulestack FQDN List.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "name", value)

    @property
    @pulumi.getter(name="rulestackId")
    def rulestack_id(self) -> Optional[pulumi.Input[str]]:
        """
        The ID of the TODO. Changing this forces a new Palo Alto Local Rulestack FQDN List to be created.
        """
        return pulumi.get(self, "rulestack_id")

    @rulestack_id.setter
    def rulestack_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "rulestack_id", value)


class LocalRulestackFqdnList(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 audit_comment: Optional[pulumi.Input[str]] = None,
                 description: Optional[pulumi.Input[str]] = None,
                 fully_qualified_domain_names: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 rulestack_id: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        """
        Manages a Palo Alto Local Rulestack FQDN List.

        ## Example Usage

        ```python
        import pulumi
        import pulumi_azure as azure

        example_resource_group = azure.core.ResourceGroup("exampleResourceGroup", location="West Europe")
        example_local_rulestack = azure.paloalto.LocalRulestack("exampleLocalRulestack",
            resource_group_name=azurerm_resrouce_group["example"]["name"],
            location=example_resource_group.location)
        example_local_rulestack_fqdn_list = azure.paloalto.LocalRulestackFqdnList("exampleLocalRulestackFqdnList",
            rulestack_id=example_local_rulestack.id,
            fully_qualified_domain_names=["contoso.com"])
        ```

        ## Import

        Palo Alto Local Rulestack FQDN Lists can be imported using the `resource id`, e.g.

        ```sh
         $ pulumi import azure:paloalto/localRulestackFqdnList:LocalRulestackFqdnList example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/mygroup1/providers/PaloAltoNetworks.Cloudngfw/localRulestacks/myLocalRulestack/fqdnLists/myFQDNList1
        ```

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] audit_comment: The comment for Audit purposes.
        :param pulumi.Input[str] description: The description for the FQDN List.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] fully_qualified_domain_names: Specifies a list of Fully Qualified Domain Names.
        :param pulumi.Input[str] name: The name which should be used for this Palo Alto Local Rulestack FQDN List.
        :param pulumi.Input[str] rulestack_id: The ID of the TODO. Changing this forces a new Palo Alto Local Rulestack FQDN List to be created.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: LocalRulestackFqdnListArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Manages a Palo Alto Local Rulestack FQDN List.

        ## Example Usage

        ```python
        import pulumi
        import pulumi_azure as azure

        example_resource_group = azure.core.ResourceGroup("exampleResourceGroup", location="West Europe")
        example_local_rulestack = azure.paloalto.LocalRulestack("exampleLocalRulestack",
            resource_group_name=azurerm_resrouce_group["example"]["name"],
            location=example_resource_group.location)
        example_local_rulestack_fqdn_list = azure.paloalto.LocalRulestackFqdnList("exampleLocalRulestackFqdnList",
            rulestack_id=example_local_rulestack.id,
            fully_qualified_domain_names=["contoso.com"])
        ```

        ## Import

        Palo Alto Local Rulestack FQDN Lists can be imported using the `resource id`, e.g.

        ```sh
         $ pulumi import azure:paloalto/localRulestackFqdnList:LocalRulestackFqdnList example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/mygroup1/providers/PaloAltoNetworks.Cloudngfw/localRulestacks/myLocalRulestack/fqdnLists/myFQDNList1
        ```

        :param str resource_name: The name of the resource.
        :param LocalRulestackFqdnListArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(LocalRulestackFqdnListArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            kwargs = kwargs or {}
            def _setter(key, value):
                kwargs[key] = value
            LocalRulestackFqdnListArgs._configure(_setter, **kwargs)
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 audit_comment: Optional[pulumi.Input[str]] = None,
                 description: Optional[pulumi.Input[str]] = None,
                 fully_qualified_domain_names: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 rulestack_id: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = LocalRulestackFqdnListArgs.__new__(LocalRulestackFqdnListArgs)

            __props__.__dict__["audit_comment"] = audit_comment
            __props__.__dict__["description"] = description
            if fully_qualified_domain_names is None and not opts.urn:
                raise TypeError("Missing required property 'fully_qualified_domain_names'")
            __props__.__dict__["fully_qualified_domain_names"] = fully_qualified_domain_names
            __props__.__dict__["name"] = name
            if rulestack_id is None and not opts.urn:
                raise TypeError("Missing required property 'rulestack_id'")
            __props__.__dict__["rulestack_id"] = rulestack_id
        super(LocalRulestackFqdnList, __self__).__init__(
            'azure:paloalto/localRulestackFqdnList:LocalRulestackFqdnList',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            audit_comment: Optional[pulumi.Input[str]] = None,
            description: Optional[pulumi.Input[str]] = None,
            fully_qualified_domain_names: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
            name: Optional[pulumi.Input[str]] = None,
            rulestack_id: Optional[pulumi.Input[str]] = None) -> 'LocalRulestackFqdnList':
        """
        Get an existing LocalRulestackFqdnList resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] audit_comment: The comment for Audit purposes.
        :param pulumi.Input[str] description: The description for the FQDN List.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] fully_qualified_domain_names: Specifies a list of Fully Qualified Domain Names.
        :param pulumi.Input[str] name: The name which should be used for this Palo Alto Local Rulestack FQDN List.
        :param pulumi.Input[str] rulestack_id: The ID of the TODO. Changing this forces a new Palo Alto Local Rulestack FQDN List to be created.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _LocalRulestackFqdnListState.__new__(_LocalRulestackFqdnListState)

        __props__.__dict__["audit_comment"] = audit_comment
        __props__.__dict__["description"] = description
        __props__.__dict__["fully_qualified_domain_names"] = fully_qualified_domain_names
        __props__.__dict__["name"] = name
        __props__.__dict__["rulestack_id"] = rulestack_id
        return LocalRulestackFqdnList(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter(name="auditComment")
    def audit_comment(self) -> pulumi.Output[Optional[str]]:
        """
        The comment for Audit purposes.
        """
        return pulumi.get(self, "audit_comment")

    @property
    @pulumi.getter
    def description(self) -> pulumi.Output[Optional[str]]:
        """
        The description for the FQDN List.
        """
        return pulumi.get(self, "description")

    @property
    @pulumi.getter(name="fullyQualifiedDomainNames")
    def fully_qualified_domain_names(self) -> pulumi.Output[Sequence[str]]:
        """
        Specifies a list of Fully Qualified Domain Names.
        """
        return pulumi.get(self, "fully_qualified_domain_names")

    @property
    @pulumi.getter
    def name(self) -> pulumi.Output[str]:
        """
        The name which should be used for this Palo Alto Local Rulestack FQDN List.
        """
        return pulumi.get(self, "name")

    @property
    @pulumi.getter(name="rulestackId")
    def rulestack_id(self) -> pulumi.Output[str]:
        """
        The ID of the TODO. Changing this forces a new Palo Alto Local Rulestack FQDN List to be created.
        """
        return pulumi.get(self, "rulestack_id")

