# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities

__all__ = [
    'GetSubscriptionTemplateDeploymentResult',
    'AwaitableGetSubscriptionTemplateDeploymentResult',
    'get_subscription_template_deployment',
    'get_subscription_template_deployment_output',
]

@pulumi.output_type
class GetSubscriptionTemplateDeploymentResult:
    """
    A collection of values returned by getSubscriptionTemplateDeployment.
    """
    def __init__(__self__, id=None, name=None, output_content=None):
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if name and not isinstance(name, str):
            raise TypeError("Expected argument 'name' to be a str")
        pulumi.set(__self__, "name", name)
        if output_content and not isinstance(output_content, str):
            raise TypeError("Expected argument 'output_content' to be a str")
        pulumi.set(__self__, "output_content", output_content)

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter
    def name(self) -> str:
        return pulumi.get(self, "name")

    @property
    @pulumi.getter(name="outputContent")
    def output_content(self) -> str:
        """
        The JSON Content of the Outputs of the ARM Template Deployment.
        """
        return pulumi.get(self, "output_content")


class AwaitableGetSubscriptionTemplateDeploymentResult(GetSubscriptionTemplateDeploymentResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetSubscriptionTemplateDeploymentResult(
            id=self.id,
            name=self.name,
            output_content=self.output_content)


def get_subscription_template_deployment(name: Optional[str] = None,
                                         opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetSubscriptionTemplateDeploymentResult:
    """
    Use this data source to access information about an existing Subscription Template Deployment.


    :param str name: The name of this Subscription Template Deployment.
    """
    __args__ = dict()
    __args__['name'] = name
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('azure:core/getSubscriptionTemplateDeployment:getSubscriptionTemplateDeployment', __args__, opts=opts, typ=GetSubscriptionTemplateDeploymentResult).value

    return AwaitableGetSubscriptionTemplateDeploymentResult(
        id=__ret__.id,
        name=__ret__.name,
        output_content=__ret__.output_content)


@_utilities.lift_output_func(get_subscription_template_deployment)
def get_subscription_template_deployment_output(name: Optional[pulumi.Input[str]] = None,
                                                opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetSubscriptionTemplateDeploymentResult]:
    """
    Use this data source to access information about an existing Subscription Template Deployment.


    :param str name: The name of this Subscription Template Deployment.
    """
    ...
