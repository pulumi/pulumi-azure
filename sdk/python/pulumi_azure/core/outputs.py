# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union
from .. import _utilities, _tables

__all__ = [
    'CustomProviderAction',
    'CustomProviderResourceType',
    'CustomProviderValidation',
    'GetResourcesResourceResult',
    'GetSubscriptionsSubscriptionResult',
]

@pulumi.output_type
class CustomProviderAction(dict):
    def __init__(__self__, *,
                 endpoint: str,
                 name: str):
        """
        :param str endpoint: Specifies the endpoint of the action.
        :param str name: Specifies the name of the action.
        """
        pulumi.set(__self__, "endpoint", endpoint)
        pulumi.set(__self__, "name", name)

    @property
    @pulumi.getter
    def endpoint(self) -> str:
        """
        Specifies the endpoint of the action.
        """
        return pulumi.get(self, "endpoint")

    @property
    @pulumi.getter
    def name(self) -> str:
        """
        Specifies the name of the action.
        """
        return pulumi.get(self, "name")

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class CustomProviderResourceType(dict):
    def __init__(__self__, *,
                 endpoint: str,
                 name: str,
                 routing_type: Optional[str] = None):
        """
        :param str endpoint: Specifies the endpoint of the route definition.
        :param str name: Specifies the name of the route definition.
        :param str routing_type: The routing type that is supported for the resource request. Valid values are `ResourceTypeRoutingProxy` or `ResourceTypeRoutingProxyCache`. This value defaults to `ResourceTypeRoutingProxy`.
        """
        pulumi.set(__self__, "endpoint", endpoint)
        pulumi.set(__self__, "name", name)
        if routing_type is not None:
            pulumi.set(__self__, "routing_type", routing_type)

    @property
    @pulumi.getter
    def endpoint(self) -> str:
        """
        Specifies the endpoint of the route definition.
        """
        return pulumi.get(self, "endpoint")

    @property
    @pulumi.getter
    def name(self) -> str:
        """
        Specifies the name of the route definition.
        """
        return pulumi.get(self, "name")

    @property
    @pulumi.getter(name="routingType")
    def routing_type(self) -> Optional[str]:
        """
        The routing type that is supported for the resource request. Valid values are `ResourceTypeRoutingProxy` or `ResourceTypeRoutingProxyCache`. This value defaults to `ResourceTypeRoutingProxy`.
        """
        return pulumi.get(self, "routing_type")

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class CustomProviderValidation(dict):
    def __init__(__self__, *,
                 specification: str):
        """
        :param str specification: The endpoint where the validation specification is located.
        """
        pulumi.set(__self__, "specification", specification)

    @property
    @pulumi.getter
    def specification(self) -> str:
        """
        The endpoint where the validation specification is located.
        """
        return pulumi.get(self, "specification")

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class GetResourcesResourceResult(dict):
    def __init__(__self__, *,
                 id: str,
                 location: str,
                 name: str,
                 tags: Mapping[str, str],
                 type: str):
        """
        :param str id: The ID of this Resource.
        :param str location: The Azure Region in which this Resource exists.
        :param str name: The name of the Resource.
        :param Mapping[str, str] tags: A map of tags assigned to this Resource.
        :param str type: The Resource Type of the Resources you want to list (e.g. `Microsoft.Network/virtualNetworks`). A full list of available Resource Types can be found [here](https://docs.microsoft.com/en-us/azure/azure-resource-manager/azure-services-resource-providers).
        """
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "location", location)
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "tags", tags)
        pulumi.set(__self__, "type", type)

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The ID of this Resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter
    def location(self) -> str:
        """
        The Azure Region in which this Resource exists.
        """
        return pulumi.get(self, "location")

    @property
    @pulumi.getter
    def name(self) -> str:
        """
        The name of the Resource.
        """
        return pulumi.get(self, "name")

    @property
    @pulumi.getter
    def tags(self) -> Mapping[str, str]:
        """
        A map of tags assigned to this Resource.
        """
        return pulumi.get(self, "tags")

    @property
    @pulumi.getter
    def type(self) -> str:
        """
        The Resource Type of the Resources you want to list (e.g. `Microsoft.Network/virtualNetworks`). A full list of available Resource Types can be found [here](https://docs.microsoft.com/en-us/azure/azure-resource-manager/azure-services-resource-providers).
        """
        return pulumi.get(self, "type")


@pulumi.output_type
class GetSubscriptionsSubscriptionResult(dict):
    def __init__(__self__, *,
                 display_name: str,
                 location_placement_id: str,
                 quota_id: str,
                 spending_limit: str,
                 state: str,
                 subscription_id: str,
                 tags: Mapping[str, str],
                 tenant_id: str):
        """
        :param str display_name: The subscription display name.
        :param str location_placement_id: The subscription location placement ID.
        :param str quota_id: The subscription quota ID.
        :param str spending_limit: The subscription spending limit.
        :param str state: The subscription state. Possible values are Enabled, Warned, PastDue, Disabled, and Deleted.
        :param str subscription_id: The subscription GUID.
        :param Mapping[str, str] tags: A mapping of tags assigned to the resource.
        :param str tenant_id: The subscription tenant ID.
        """
        pulumi.set(__self__, "display_name", display_name)
        pulumi.set(__self__, "location_placement_id", location_placement_id)
        pulumi.set(__self__, "quota_id", quota_id)
        pulumi.set(__self__, "spending_limit", spending_limit)
        pulumi.set(__self__, "state", state)
        pulumi.set(__self__, "subscription_id", subscription_id)
        pulumi.set(__self__, "tags", tags)
        pulumi.set(__self__, "tenant_id", tenant_id)

    @property
    @pulumi.getter(name="displayName")
    def display_name(self) -> str:
        """
        The subscription display name.
        """
        return pulumi.get(self, "display_name")

    @property
    @pulumi.getter(name="locationPlacementId")
    def location_placement_id(self) -> str:
        """
        The subscription location placement ID.
        """
        return pulumi.get(self, "location_placement_id")

    @property
    @pulumi.getter(name="quotaId")
    def quota_id(self) -> str:
        """
        The subscription quota ID.
        """
        return pulumi.get(self, "quota_id")

    @property
    @pulumi.getter(name="spendingLimit")
    def spending_limit(self) -> str:
        """
        The subscription spending limit.
        """
        return pulumi.get(self, "spending_limit")

    @property
    @pulumi.getter
    def state(self) -> str:
        """
        The subscription state. Possible values are Enabled, Warned, PastDue, Disabled, and Deleted.
        """
        return pulumi.get(self, "state")

    @property
    @pulumi.getter(name="subscriptionId")
    def subscription_id(self) -> str:
        """
        The subscription GUID.
        """
        return pulumi.get(self, "subscription_id")

    @property
    @pulumi.getter
    def tags(self) -> Mapping[str, str]:
        """
        A mapping of tags assigned to the resource.
        """
        return pulumi.get(self, "tags")

    @property
    @pulumi.getter(name="tenantId")
    def tenant_id(self) -> str:
        """
        The subscription tenant ID.
        """
        return pulumi.get(self, "tenant_id")


