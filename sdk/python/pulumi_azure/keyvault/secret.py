# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import pulumi
import pulumi.runtime

class Secret(pulumi.CustomResource):
    """
    Manages a Key Vault Secret.
    
    ~> **Note:** All arguments including the secret value will be stored in the raw state as plain-text.
    [Read more about sensitive data in state](/docs/state/sensitive-data.html).
    """
    def __init__(__self__, __name__, __opts__=None, content_type=None, name=None, tags=None, value=None, vault_uri=None):
        """Create a Secret resource with the given unique name, props, and options."""
        if not __name__:
            raise TypeError('Missing resource name argument (for URN creation)')
        if not isinstance(__name__, basestring):
            raise TypeError('Expected resource name to be a string')
        if __opts__ and not isinstance(__opts__, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')

        __props__ = dict()

        if content_type and not isinstance(content_type, basestring):
            raise TypeError('Expected property content_type to be a basestring')
        __self__.content_type = content_type
        """
        Specifies the content type for the Key Vault Secret.
        """
        __props__['contentType'] = content_type

        if name and not isinstance(name, basestring):
            raise TypeError('Expected property name to be a basestring')
        __self__.name = name
        """
        Specifies the name of the Key Vault Secret. Changing this forces a new resource to be created.
        """
        __props__['name'] = name

        if tags and not isinstance(tags, dict):
            raise TypeError('Expected property tags to be a dict')
        __self__.tags = tags
        """
        A mapping of tags to assign to the resource.
        """
        __props__['tags'] = tags

        if not value:
            raise TypeError('Missing required property value')
        elif not isinstance(value, basestring):
            raise TypeError('Expected property value to be a basestring')
        __self__.value = value
        """
        Specifies the value of the Key Vault Secret.
        """
        __props__['value'] = value

        if not vault_uri:
            raise TypeError('Missing required property vault_uri')
        elif not isinstance(vault_uri, basestring):
            raise TypeError('Expected property vault_uri to be a basestring')
        __self__.vault_uri = vault_uri
        """
        Specifies the URI used to access the Key Vault instance, available on the `azurerm_key_vault` resource.
        """
        __props__['vaultUri'] = vault_uri

        __self__.version = pulumi.runtime.UNKNOWN
        """
        The current version of the Key Vault Secret.
        """

        super(Secret, __self__).__init__(
            'azure:keyvault/secret:Secret',
            __name__,
            __props__,
            __opts__)

    def set_outputs(self, outs):
        if 'contentType' in outs:
            self.content_type = outs['contentType']
        if 'name' in outs:
            self.name = outs['name']
        if 'tags' in outs:
            self.tags = outs['tags']
        if 'value' in outs:
            self.value = outs['value']
        if 'vaultUri' in outs:
            self.vault_uri = outs['vaultUri']
        if 'version' in outs:
            self.version = outs['version']
