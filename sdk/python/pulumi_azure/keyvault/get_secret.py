# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import pulumi
import pulumi.runtime

class GetSecretResult(object):
    """
    A collection of values returned by getSecret.
    """
    def __init__(__self__, content_type=None, tags=None, value=None, version=None):
        if not content_type:
            raise TypeError('Missing required argument content_type')
        elif not isinstance(content_type, basestring):
            raise TypeError('Expected argument content_type to be a basestring')
        __self__.content_type = content_type
        """
        The content type for the Key Vault Secret.
        """
        if not tags:
            raise TypeError('Missing required argument tags')
        elif not isinstance(tags, dict):
            raise TypeError('Expected argument tags to be a dict')
        __self__.tags = tags
        """
        Any tags assigned to this resource.
        """
        if not value:
            raise TypeError('Missing required argument value')
        elif not isinstance(value, basestring):
            raise TypeError('Expected argument value to be a basestring')
        __self__.value = value
        """
        The value of the Key Vault Secret.
        """
        if not version:
            raise TypeError('Missing required argument version')
        elif not isinstance(version, basestring):
            raise TypeError('Expected argument version to be a basestring')
        __self__.version = version
        """
        The current version of the Key Vault Secret.
        """

def get_secret(name=None, vault_uri=None):
    """
    Returns information about the specified Key Vault Secret.
    
    ~> **Note:** All arguments including the secret value will be stored in the raw state as plain-text.
    [Read more about sensitive data in state](/docs/state/sensitive-data.html).
    """
    __args__ = dict()

    __args__['name'] = name
    __args__['vaultUri'] = vault_uri
    __ret__ = pulumi.runtime.invoke('azure:keyvault/getSecret:getSecret', __args__)

    return GetSecretResult(
        content_type=__ret__['contentType'],
        tags=__ret__['tags'],
        value=__ret__['value'],
        version=__ret__['version'])
