# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union
from .. import _utilities, _tables

__all__ = [
    'ConfigurationStoreIdentity',
    'ConfigurationStorePrimaryReadKey',
    'ConfigurationStorePrimaryWriteKey',
    'ConfigurationStoreSecondaryReadKey',
    'ConfigurationStoreSecondaryWriteKey',
    'GetConfigurationStorePrimaryReadKeyResult',
    'GetConfigurationStorePrimaryWriteKeyResult',
    'GetConfigurationStoreSecondaryReadKeyResult',
    'GetConfigurationStoreSecondaryWriteKeyResult',
]

@pulumi.output_type
class ConfigurationStoreIdentity(dict):
    def __init__(__self__, *,
                 type: str,
                 principal_id: Optional[str] = None,
                 tenant_id: Optional[str] = None):
        """
        :param str type: Specifies the identity type of the App Configuration. At this time the only allowed value is `SystemAssigned`.
        :param str principal_id: The ID of the Principal (Client) in Azure Active Directory.
        :param str tenant_id: The ID of the Azure Active Directory Tenant.
        """
        pulumi.set(__self__, "type", type)
        if principal_id is not None:
            pulumi.set(__self__, "principal_id", principal_id)
        if tenant_id is not None:
            pulumi.set(__self__, "tenant_id", tenant_id)

    @property
    @pulumi.getter
    def type(self) -> str:
        """
        Specifies the identity type of the App Configuration. At this time the only allowed value is `SystemAssigned`.
        """
        return pulumi.get(self, "type")

    @property
    @pulumi.getter(name="principalId")
    def principal_id(self) -> Optional[str]:
        """
        The ID of the Principal (Client) in Azure Active Directory.
        """
        return pulumi.get(self, "principal_id")

    @property
    @pulumi.getter(name="tenantId")
    def tenant_id(self) -> Optional[str]:
        """
        The ID of the Azure Active Directory Tenant.
        """
        return pulumi.get(self, "tenant_id")

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class ConfigurationStorePrimaryReadKey(dict):
    def __init__(__self__, *,
                 connection_string: Optional[str] = None,
                 id: Optional[str] = None,
                 secret: Optional[str] = None):
        """
        :param str connection_string: The Connection String for this Access Key - comprising of the Endpoint, ID and Secret.
        :param str id: The ID of the Access Key.
        :param str secret: The Secret of the Access Key.
        """
        if connection_string is not None:
            pulumi.set(__self__, "connection_string", connection_string)
        if id is not None:
            pulumi.set(__self__, "id", id)
        if secret is not None:
            pulumi.set(__self__, "secret", secret)

    @property
    @pulumi.getter(name="connectionString")
    def connection_string(self) -> Optional[str]:
        """
        The Connection String for this Access Key - comprising of the Endpoint, ID and Secret.
        """
        return pulumi.get(self, "connection_string")

    @property
    @pulumi.getter
    def id(self) -> Optional[str]:
        """
        The ID of the Access Key.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter
    def secret(self) -> Optional[str]:
        """
        The Secret of the Access Key.
        """
        return pulumi.get(self, "secret")

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class ConfigurationStorePrimaryWriteKey(dict):
    def __init__(__self__, *,
                 connection_string: Optional[str] = None,
                 id: Optional[str] = None,
                 secret: Optional[str] = None):
        """
        :param str connection_string: The Connection String for this Access Key - comprising of the Endpoint, ID and Secret.
        :param str id: The ID of the Access Key.
        :param str secret: The Secret of the Access Key.
        """
        if connection_string is not None:
            pulumi.set(__self__, "connection_string", connection_string)
        if id is not None:
            pulumi.set(__self__, "id", id)
        if secret is not None:
            pulumi.set(__self__, "secret", secret)

    @property
    @pulumi.getter(name="connectionString")
    def connection_string(self) -> Optional[str]:
        """
        The Connection String for this Access Key - comprising of the Endpoint, ID and Secret.
        """
        return pulumi.get(self, "connection_string")

    @property
    @pulumi.getter
    def id(self) -> Optional[str]:
        """
        The ID of the Access Key.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter
    def secret(self) -> Optional[str]:
        """
        The Secret of the Access Key.
        """
        return pulumi.get(self, "secret")

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class ConfigurationStoreSecondaryReadKey(dict):
    def __init__(__self__, *,
                 connection_string: Optional[str] = None,
                 id: Optional[str] = None,
                 secret: Optional[str] = None):
        """
        :param str connection_string: The Connection String for this Access Key - comprising of the Endpoint, ID and Secret.
        :param str id: The ID of the Access Key.
        :param str secret: The Secret of the Access Key.
        """
        if connection_string is not None:
            pulumi.set(__self__, "connection_string", connection_string)
        if id is not None:
            pulumi.set(__self__, "id", id)
        if secret is not None:
            pulumi.set(__self__, "secret", secret)

    @property
    @pulumi.getter(name="connectionString")
    def connection_string(self) -> Optional[str]:
        """
        The Connection String for this Access Key - comprising of the Endpoint, ID and Secret.
        """
        return pulumi.get(self, "connection_string")

    @property
    @pulumi.getter
    def id(self) -> Optional[str]:
        """
        The ID of the Access Key.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter
    def secret(self) -> Optional[str]:
        """
        The Secret of the Access Key.
        """
        return pulumi.get(self, "secret")

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class ConfigurationStoreSecondaryWriteKey(dict):
    def __init__(__self__, *,
                 connection_string: Optional[str] = None,
                 id: Optional[str] = None,
                 secret: Optional[str] = None):
        """
        :param str connection_string: The Connection String for this Access Key - comprising of the Endpoint, ID and Secret.
        :param str id: The ID of the Access Key.
        :param str secret: The Secret of the Access Key.
        """
        if connection_string is not None:
            pulumi.set(__self__, "connection_string", connection_string)
        if id is not None:
            pulumi.set(__self__, "id", id)
        if secret is not None:
            pulumi.set(__self__, "secret", secret)

    @property
    @pulumi.getter(name="connectionString")
    def connection_string(self) -> Optional[str]:
        """
        The Connection String for this Access Key - comprising of the Endpoint, ID and Secret.
        """
        return pulumi.get(self, "connection_string")

    @property
    @pulumi.getter
    def id(self) -> Optional[str]:
        """
        The ID of the Access Key.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter
    def secret(self) -> Optional[str]:
        """
        The Secret of the Access Key.
        """
        return pulumi.get(self, "secret")

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class GetConfigurationStorePrimaryReadKeyResult(dict):
    def __init__(__self__, *,
                 connection_string: str,
                 id: str,
                 secret: str):
        """
        :param str connection_string: The Connection String for this Access Key - comprising of the Endpoint, ID and Secret.
        :param str id: The ID of the Access Key.
        :param str secret: The Secret of the Access Key.
        """
        pulumi.set(__self__, "connection_string", connection_string)
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "secret", secret)

    @property
    @pulumi.getter(name="connectionString")
    def connection_string(self) -> str:
        """
        The Connection String for this Access Key - comprising of the Endpoint, ID and Secret.
        """
        return pulumi.get(self, "connection_string")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The ID of the Access Key.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter
    def secret(self) -> str:
        """
        The Secret of the Access Key.
        """
        return pulumi.get(self, "secret")


@pulumi.output_type
class GetConfigurationStorePrimaryWriteKeyResult(dict):
    def __init__(__self__, *,
                 connection_string: str,
                 id: str,
                 secret: str):
        """
        :param str connection_string: The Connection String for this Access Key - comprising of the Endpoint, ID and Secret.
        :param str id: The ID of the Access Key.
        :param str secret: The Secret of the Access Key.
        """
        pulumi.set(__self__, "connection_string", connection_string)
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "secret", secret)

    @property
    @pulumi.getter(name="connectionString")
    def connection_string(self) -> str:
        """
        The Connection String for this Access Key - comprising of the Endpoint, ID and Secret.
        """
        return pulumi.get(self, "connection_string")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The ID of the Access Key.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter
    def secret(self) -> str:
        """
        The Secret of the Access Key.
        """
        return pulumi.get(self, "secret")


@pulumi.output_type
class GetConfigurationStoreSecondaryReadKeyResult(dict):
    def __init__(__self__, *,
                 connection_string: str,
                 id: str,
                 secret: str):
        """
        :param str connection_string: The Connection String for this Access Key - comprising of the Endpoint, ID and Secret.
        :param str id: The ID of the Access Key.
        :param str secret: The Secret of the Access Key.
        """
        pulumi.set(__self__, "connection_string", connection_string)
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "secret", secret)

    @property
    @pulumi.getter(name="connectionString")
    def connection_string(self) -> str:
        """
        The Connection String for this Access Key - comprising of the Endpoint, ID and Secret.
        """
        return pulumi.get(self, "connection_string")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The ID of the Access Key.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter
    def secret(self) -> str:
        """
        The Secret of the Access Key.
        """
        return pulumi.get(self, "secret")


@pulumi.output_type
class GetConfigurationStoreSecondaryWriteKeyResult(dict):
    def __init__(__self__, *,
                 connection_string: str,
                 id: str,
                 secret: str):
        """
        :param str connection_string: The Connection String for this Access Key - comprising of the Endpoint, ID and Secret.
        :param str id: The ID of the Access Key.
        :param str secret: The Secret of the Access Key.
        """
        pulumi.set(__self__, "connection_string", connection_string)
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "secret", secret)

    @property
    @pulumi.getter(name="connectionString")
    def connection_string(self) -> str:
        """
        The Connection String for this Access Key - comprising of the Endpoint, ID and Secret.
        """
        return pulumi.get(self, "connection_string")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The ID of the Access Key.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter
    def secret(self) -> str:
        """
        The Secret of the Access Key.
        """
        return pulumi.get(self, "secret")


