# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from . import outputs

__all__ = [
    'GetConfigurationStoreResult',
    'AwaitableGetConfigurationStoreResult',
    'get_configuration_store',
    'get_configuration_store_output',
]

@pulumi.output_type
class GetConfigurationStoreResult:
    """
    A collection of values returned by getConfigurationStore.
    """
    def __init__(__self__, endpoint=None, id=None, location=None, name=None, primary_read_keys=None, primary_write_keys=None, resource_group_name=None, secondary_read_keys=None, secondary_write_keys=None, sku=None, tags=None):
        if endpoint and not isinstance(endpoint, str):
            raise TypeError("Expected argument 'endpoint' to be a str")
        pulumi.set(__self__, "endpoint", endpoint)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if location and not isinstance(location, str):
            raise TypeError("Expected argument 'location' to be a str")
        pulumi.set(__self__, "location", location)
        if name and not isinstance(name, str):
            raise TypeError("Expected argument 'name' to be a str")
        pulumi.set(__self__, "name", name)
        if primary_read_keys and not isinstance(primary_read_keys, list):
            raise TypeError("Expected argument 'primary_read_keys' to be a list")
        pulumi.set(__self__, "primary_read_keys", primary_read_keys)
        if primary_write_keys and not isinstance(primary_write_keys, list):
            raise TypeError("Expected argument 'primary_write_keys' to be a list")
        pulumi.set(__self__, "primary_write_keys", primary_write_keys)
        if resource_group_name and not isinstance(resource_group_name, str):
            raise TypeError("Expected argument 'resource_group_name' to be a str")
        pulumi.set(__self__, "resource_group_name", resource_group_name)
        if secondary_read_keys and not isinstance(secondary_read_keys, list):
            raise TypeError("Expected argument 'secondary_read_keys' to be a list")
        pulumi.set(__self__, "secondary_read_keys", secondary_read_keys)
        if secondary_write_keys and not isinstance(secondary_write_keys, list):
            raise TypeError("Expected argument 'secondary_write_keys' to be a list")
        pulumi.set(__self__, "secondary_write_keys", secondary_write_keys)
        if sku and not isinstance(sku, str):
            raise TypeError("Expected argument 'sku' to be a str")
        pulumi.set(__self__, "sku", sku)
        if tags and not isinstance(tags, dict):
            raise TypeError("Expected argument 'tags' to be a dict")
        pulumi.set(__self__, "tags", tags)

    @property
    @pulumi.getter
    def endpoint(self) -> str:
        """
        The Endpoint used to access this App Configuration.
        """
        return pulumi.get(self, "endpoint")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter
    def location(self) -> str:
        """
        The Azure Region where the App Configuration exists.
        """
        return pulumi.get(self, "location")

    @property
    @pulumi.getter
    def name(self) -> str:
        return pulumi.get(self, "name")

    @property
    @pulumi.getter(name="primaryReadKeys")
    def primary_read_keys(self) -> Sequence['outputs.GetConfigurationStorePrimaryReadKeyResult']:
        """
        A `primary_read_key` block as defined below containing the primary read access key.
        """
        return pulumi.get(self, "primary_read_keys")

    @property
    @pulumi.getter(name="primaryWriteKeys")
    def primary_write_keys(self) -> Sequence['outputs.GetConfigurationStorePrimaryWriteKeyResult']:
        """
        A `primary_write_key` block as defined below containing the primary write access key.
        """
        return pulumi.get(self, "primary_write_keys")

    @property
    @pulumi.getter(name="resourceGroupName")
    def resource_group_name(self) -> str:
        return pulumi.get(self, "resource_group_name")

    @property
    @pulumi.getter(name="secondaryReadKeys")
    def secondary_read_keys(self) -> Sequence['outputs.GetConfigurationStoreSecondaryReadKeyResult']:
        """
        A `secondary_read_key` block as defined below containing the secondary read access key.
        """
        return pulumi.get(self, "secondary_read_keys")

    @property
    @pulumi.getter(name="secondaryWriteKeys")
    def secondary_write_keys(self) -> Sequence['outputs.GetConfigurationStoreSecondaryWriteKeyResult']:
        """
        A `secondary_write_key` block as defined below containing the secondary write access key.
        """
        return pulumi.get(self, "secondary_write_keys")

    @property
    @pulumi.getter
    def sku(self) -> str:
        """
        The name of the SKU used for this App Configuration.
        """
        return pulumi.get(self, "sku")

    @property
    @pulumi.getter
    def tags(self) -> Mapping[str, str]:
        """
        A mapping of tags assigned to the App Configuration.
        """
        return pulumi.get(self, "tags")


class AwaitableGetConfigurationStoreResult(GetConfigurationStoreResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetConfigurationStoreResult(
            endpoint=self.endpoint,
            id=self.id,
            location=self.location,
            name=self.name,
            primary_read_keys=self.primary_read_keys,
            primary_write_keys=self.primary_write_keys,
            resource_group_name=self.resource_group_name,
            secondary_read_keys=self.secondary_read_keys,
            secondary_write_keys=self.secondary_write_keys,
            sku=self.sku,
            tags=self.tags)


def get_configuration_store(name: Optional[str] = None,
                            resource_group_name: Optional[str] = None,
                            opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetConfigurationStoreResult:
    """
    Use this data source to access information about an existing App Configuration.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_azure as azure

    example = azure.appconfiguration.get_configuration_store(name="existing",
        resource_group_name="existing")
    pulumi.export("id", example.id)
    ```


    :param str name: The Name of this App Configuration.
    :param str resource_group_name: The name of the Resource Group where the App Configuration exists.
    """
    __args__ = dict()
    __args__['name'] = name
    __args__['resourceGroupName'] = resource_group_name
    if opts is None:
        opts = pulumi.InvokeOptions()
    if opts.version is None:
        opts.version = _utilities.get_version()
    __ret__ = pulumi.runtime.invoke('azure:appconfiguration/getConfigurationStore:getConfigurationStore', __args__, opts=opts, typ=GetConfigurationStoreResult).value

    return AwaitableGetConfigurationStoreResult(
        endpoint=__ret__.endpoint,
        id=__ret__.id,
        location=__ret__.location,
        name=__ret__.name,
        primary_read_keys=__ret__.primary_read_keys,
        primary_write_keys=__ret__.primary_write_keys,
        resource_group_name=__ret__.resource_group_name,
        secondary_read_keys=__ret__.secondary_read_keys,
        secondary_write_keys=__ret__.secondary_write_keys,
        sku=__ret__.sku,
        tags=__ret__.tags)


@_utilities.lift_output_func(get_configuration_store)
def get_configuration_store_output(name: Optional[pulumi.Input[str]] = None,
                                   resource_group_name: Optional[pulumi.Input[str]] = None,
                                   opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetConfigurationStoreResult]:
    """
    Use this data source to access information about an existing App Configuration.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_azure as azure

    example = azure.appconfiguration.get_configuration_store(name="existing",
        resource_group_name="existing")
    pulumi.export("id", example.id)
    ```


    :param str name: The Name of this App Configuration.
    :param str resource_group_name: The name of the Resource Group where the App Configuration exists.
    """
    ...
