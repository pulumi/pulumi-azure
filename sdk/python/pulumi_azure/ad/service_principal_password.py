# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import pulumi
import pulumi.runtime
from .. import utilities, tables

class ServicePrincipalPassword(pulumi.CustomResource):
    """
    Manages a Password associated with a Service Principal within Azure Active Directory.
    
    -> **NOTE:** If you're authenticating using a Service Principal then it must have permissions to both `Read and write all applications` and `Sign in and read user profile` within the `Windows Azure Active Directory` API.
    """
    def __init__(__self__, __name__, __opts__=None, end_date=None, key_id=None, service_principal_id=None, start_date=None, value=None):
        """Create a ServicePrincipalPassword resource with the given unique name, props, and options."""
        if not __name__:
            raise TypeError('Missing resource name argument (for URN creation)')
        if not isinstance(__name__, str):
            raise TypeError('Expected resource name to be a string')
        if __opts__ and not isinstance(__opts__, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')

        __props__ = dict()

        if not end_date:
            raise TypeError('Missing required property end_date')
        __props__['end_date'] = end_date

        __props__['key_id'] = key_id

        if not service_principal_id:
            raise TypeError('Missing required property service_principal_id')
        __props__['service_principal_id'] = service_principal_id

        __props__['start_date'] = start_date

        if not value:
            raise TypeError('Missing required property value')
        __props__['value'] = value

        super(ServicePrincipalPassword, __self__).__init__(
            'azure:ad/servicePrincipalPassword:ServicePrincipalPassword',
            __name__,
            __props__,
            __opts__)


    def translate_output_property(self, prop):
        return tables._CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop

    def translate_input_property(self, prop):
        return tables._SNAKE_TO_CAMEL_CASE_TABLE.get(prop) or prop

