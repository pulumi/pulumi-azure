# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities

__all__ = [
    'ProviderPolicy',
]

@pulumi.output_type
class ProviderPolicy(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "environmentType":
            suggest = "environment_type"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in ProviderPolicy. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        ProviderPolicy.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        ProviderPolicy.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 data: str,
                 environment_type: str):
        """
        :param str data: Specifies an RFC 7519 JWT Expressing the new policy. more details see: [How-to-build-a-policy](https://learn.microsoft.com/en-us/azure/attestation/author-sign-policy).
        :param str environment_type: Specifies the type of the trusted environment to be used. Possible values are `OpenEnclave`, `SgxEnclave` and `Tpm`.
        """
        pulumi.set(__self__, "data", data)
        pulumi.set(__self__, "environment_type", environment_type)

    @property
    @pulumi.getter
    def data(self) -> str:
        """
        Specifies an RFC 7519 JWT Expressing the new policy. more details see: [How-to-build-a-policy](https://learn.microsoft.com/en-us/azure/attestation/author-sign-policy).
        """
        return pulumi.get(self, "data")

    @property
    @pulumi.getter(name="environmentType")
    def environment_type(self) -> str:
        """
        Specifies the type of the trusted environment to be used. Possible values are `OpenEnclave`, `SgxEnclave` and `Tpm`.
        """
        return pulumi.get(self, "environment_type")


