# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Callable, Mapping, Optional, Sequence, Union, overload
from .. import _utilities

__all__ = [
    'ModuleManagementNetworkProfile',
    'ModuleNetworkProfile',
]

@pulumi.output_type
class ModuleManagementNetworkProfile(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "networkInterfacePrivateIpAddresses":
            suggest = "network_interface_private_ip_addresses"
        elif key == "subnetId":
            suggest = "subnet_id"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in ModuleManagementNetworkProfile. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        ModuleManagementNetworkProfile.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        ModuleManagementNetworkProfile.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 network_interface_private_ip_addresses: Sequence[str],
                 subnet_id: str):
        """
        :param Sequence[str] network_interface_private_ip_addresses: The private IPv4 address of the network interface. Changing this forces a new Dedicated Hardware Security Module to be created.
        :param str subnet_id: The ID of the subnet. Changing this forces a new Dedicated Hardware Security Module to be created.
        """
        ModuleManagementNetworkProfile._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            network_interface_private_ip_addresses=network_interface_private_ip_addresses,
            subnet_id=subnet_id,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             network_interface_private_ip_addresses: Sequence[str],
             subnet_id: str,
             opts: Optional[pulumi.ResourceOptions]=None):
        _setter("network_interface_private_ip_addresses", network_interface_private_ip_addresses)
        _setter("subnet_id", subnet_id)

    @property
    @pulumi.getter(name="networkInterfacePrivateIpAddresses")
    def network_interface_private_ip_addresses(self) -> Sequence[str]:
        """
        The private IPv4 address of the network interface. Changing this forces a new Dedicated Hardware Security Module to be created.
        """
        return pulumi.get(self, "network_interface_private_ip_addresses")

    @property
    @pulumi.getter(name="subnetId")
    def subnet_id(self) -> str:
        """
        The ID of the subnet. Changing this forces a new Dedicated Hardware Security Module to be created.
        """
        return pulumi.get(self, "subnet_id")


@pulumi.output_type
class ModuleNetworkProfile(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "networkInterfacePrivateIpAddresses":
            suggest = "network_interface_private_ip_addresses"
        elif key == "subnetId":
            suggest = "subnet_id"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in ModuleNetworkProfile. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        ModuleNetworkProfile.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        ModuleNetworkProfile.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 network_interface_private_ip_addresses: Sequence[str],
                 subnet_id: str):
        """
        :param Sequence[str] network_interface_private_ip_addresses: The private IPv4 address of the network interface. Changing this forces a new Dedicated Hardware Security Module to be created.
        :param str subnet_id: The ID of the subnet. Changing this forces a new Dedicated Hardware Security Module to be created.
        """
        ModuleNetworkProfile._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            network_interface_private_ip_addresses=network_interface_private_ip_addresses,
            subnet_id=subnet_id,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             network_interface_private_ip_addresses: Sequence[str],
             subnet_id: str,
             opts: Optional[pulumi.ResourceOptions]=None):
        _setter("network_interface_private_ip_addresses", network_interface_private_ip_addresses)
        _setter("subnet_id", subnet_id)

    @property
    @pulumi.getter(name="networkInterfacePrivateIpAddresses")
    def network_interface_private_ip_addresses(self) -> Sequence[str]:
        """
        The private IPv4 address of the network interface. Changing this forces a new Dedicated Hardware Security Module to be created.
        """
        return pulumi.get(self, "network_interface_private_ip_addresses")

    @property
    @pulumi.getter(name="subnetId")
    def subnet_id(self) -> str:
        """
        The ID of the subnet. Changing this forces a new Dedicated Hardware Security Module to be created.
        """
        return pulumi.get(self, "subnet_id")


