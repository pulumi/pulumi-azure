// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Manages a PostgreSQL Flexible Server Backup.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = new azure.core.ResourceGroup("example", {
 *     name: "example-resources",
 *     location: "West Europe",
 * });
 * const exampleFlexibleServer = new azure.postgresql.FlexibleServer("example", {
 *     name: "example-fs",
 *     resourceGroupName: example.name,
 *     location: example.location,
 *     administratorLogin: "adminTerraform",
 *     administratorPassword: "QAZwsx123",
 *     version: "12",
 *     skuName: "GP_Standard_D2s_v3",
 *     zone: "2",
 * });
 * const exampleFlexibleServerBackup = new azure.postgresql.FlexibleServerBackup("example", {
 *     name: "example-pfsb",
 *     serverId: exampleFlexibleServer.id,
 * });
 * ```
 *
 * ## API Providers
 *
 * <!-- This section is generated, changes will be overwritten -->
 * This resource uses the following Azure API Providers:
 *
 * * `Microsoft.DBforPostgreSQL` - 2024-08-01
 *
 * ## Import
 *
 * An existing PostgreSQL Flexible Server Backup can be imported into Pulumi using the `resource id`, e.g.
 *
 * ```sh
 * $ pulumi import azure:postgresql/flexibleServerBackup:FlexibleServerBackup example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.DBforPostgreSQL/flexibleServers/fs1/backups/backup1
 * ```
 */
export class FlexibleServerBackup extends pulumi.CustomResource {
    /**
     * Get an existing FlexibleServerBackup resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: FlexibleServerBackupState, opts?: pulumi.CustomResourceOptions): FlexibleServerBackup {
        return new FlexibleServerBackup(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure:postgresql/flexibleServerBackup:FlexibleServerBackup';

    /**
     * Returns true if the given object is an instance of FlexibleServerBackup.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is FlexibleServerBackup {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === FlexibleServerBackup.__pulumiType;
    }

    /**
     * The Time (ISO8601 format) at which the backup was completed.
     */
    public /*out*/ readonly completedTime!: pulumi.Output<string>;
    /**
     * Specifies the name of this PostgreSQL Flexible Server Backup. Changing this forces a new resource to be created.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The ID of the PostgreSQL Flexible Server from which to create this PostgreSQL Flexible Server Backup. Changing this forces a new resource to be created.
     */
    public readonly serverId!: pulumi.Output<string>;

    /**
     * Create a FlexibleServerBackup resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: FlexibleServerBackupArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: FlexibleServerBackupArgs | FlexibleServerBackupState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as FlexibleServerBackupState | undefined;
            resourceInputs["completedTime"] = state ? state.completedTime : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["serverId"] = state ? state.serverId : undefined;
        } else {
            const args = argsOrState as FlexibleServerBackupArgs | undefined;
            if ((!args || args.serverId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'serverId'");
            }
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["serverId"] = args ? args.serverId : undefined;
            resourceInputs["completedTime"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(FlexibleServerBackup.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering FlexibleServerBackup resources.
 */
export interface FlexibleServerBackupState {
    /**
     * The Time (ISO8601 format) at which the backup was completed.
     */
    completedTime?: pulumi.Input<string>;
    /**
     * Specifies the name of this PostgreSQL Flexible Server Backup. Changing this forces a new resource to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * The ID of the PostgreSQL Flexible Server from which to create this PostgreSQL Flexible Server Backup. Changing this forces a new resource to be created.
     */
    serverId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a FlexibleServerBackup resource.
 */
export interface FlexibleServerBackupArgs {
    /**
     * Specifies the name of this PostgreSQL Flexible Server Backup. Changing this forces a new resource to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * The ID of the PostgreSQL Flexible Server from which to create this PostgreSQL Flexible Server Backup. Changing this forces a new resource to be created.
     */
    serverId: pulumi.Input<string>;
}
