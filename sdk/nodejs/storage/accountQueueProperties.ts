// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Manages the Queue Properties of an Azure Storage Account.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = new azure.core.ResourceGroup("example", {
 *     name: "example-resources",
 *     location: "West Europe",
 * });
 * const exampleAccount = new azure.storage.Account("example", {
 *     name: "storageaccountname",
 *     resourceGroupName: example.name,
 *     location: example.location,
 *     accountTier: "Standard",
 *     accountReplicationType: "GRS",
 *     tags: {
 *         environment: "staging",
 *     },
 * });
 * const exampleAccountQueueProperties = new azure.storage.AccountQueueProperties("example", {
 *     storageAccountId: exampleAccount.id,
 *     corsRules: [{
 *         allowedOrigins: ["http://www.example.com"],
 *         exposedHeaders: ["x-tempo-*"],
 *         allowedHeaders: ["x-tempo-*"],
 *         allowedMethods: [
 *             "GET",
 *             "PUT",
 *         ],
 *         maxAgeInSeconds: 500,
 *     }],
 *     logging: {
 *         version: "1.0",
 *         "delete": true,
 *         read: true,
 *         write: true,
 *         retentionPolicyDays: 7,
 *     },
 *     hourMetrics: {
 *         version: "1.0",
 *         retentionPolicyDays: 7,
 *     },
 *     minuteMetrics: {
 *         version: "1.0",
 *         retentionPolicyDays: 7,
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * Storage Account Queue Properties can be imported using the `resource id`, e.g.
 *
 * ```sh
 * $ pulumi import azure:storage/accountQueueProperties:AccountQueueProperties queueprops /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myresourcegroup/providers/Microsoft.Storage/storageAccounts/myaccount
 * ```
 */
export class AccountQueueProperties extends pulumi.CustomResource {
    /**
     * Get an existing AccountQueueProperties resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AccountQueuePropertiesState, opts?: pulumi.CustomResourceOptions): AccountQueueProperties {
        return new AccountQueueProperties(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure:storage/accountQueueProperties:AccountQueueProperties';

    /**
     * Returns true if the given object is an instance of AccountQueueProperties.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AccountQueueProperties {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AccountQueueProperties.__pulumiType;
    }

    /**
     * A `corsRule` block as defined above.
     */
    public readonly corsRules!: pulumi.Output<outputs.storage.AccountQueuePropertiesCorsRule[] | undefined>;
    /**
     * A `hourMetrics` block as defined below.
     *
     * > **Note:** At least one of `corsRule`, `logging`, `minuteMetrics`, or `hourMetrics` must be specified.
     */
    public readonly hourMetrics!: pulumi.Output<outputs.storage.AccountQueuePropertiesHourMetrics>;
    /**
     * A `logging` block as defined below.
     */
    public readonly logging!: pulumi.Output<outputs.storage.AccountQueuePropertiesLogging>;
    /**
     * A `minuteMetrics` block as defined below.
     */
    public readonly minuteMetrics!: pulumi.Output<outputs.storage.AccountQueuePropertiesMinuteMetrics>;
    /**
     * The ID of the Storage Account to set Queue Properties on. Changing this forces a new resource to be created.
     */
    public readonly storageAccountId!: pulumi.Output<string>;

    /**
     * Create a AccountQueueProperties resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AccountQueuePropertiesArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AccountQueuePropertiesArgs | AccountQueuePropertiesState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AccountQueuePropertiesState | undefined;
            resourceInputs["corsRules"] = state ? state.corsRules : undefined;
            resourceInputs["hourMetrics"] = state ? state.hourMetrics : undefined;
            resourceInputs["logging"] = state ? state.logging : undefined;
            resourceInputs["minuteMetrics"] = state ? state.minuteMetrics : undefined;
            resourceInputs["storageAccountId"] = state ? state.storageAccountId : undefined;
        } else {
            const args = argsOrState as AccountQueuePropertiesArgs | undefined;
            if ((!args || args.storageAccountId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'storageAccountId'");
            }
            resourceInputs["corsRules"] = args ? args.corsRules : undefined;
            resourceInputs["hourMetrics"] = args ? args.hourMetrics : undefined;
            resourceInputs["logging"] = args ? args.logging : undefined;
            resourceInputs["minuteMetrics"] = args ? args.minuteMetrics : undefined;
            resourceInputs["storageAccountId"] = args ? args.storageAccountId : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AccountQueueProperties.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering AccountQueueProperties resources.
 */
export interface AccountQueuePropertiesState {
    /**
     * A `corsRule` block as defined above.
     */
    corsRules?: pulumi.Input<pulumi.Input<inputs.storage.AccountQueuePropertiesCorsRule>[]>;
    /**
     * A `hourMetrics` block as defined below.
     *
     * > **Note:** At least one of `corsRule`, `logging`, `minuteMetrics`, or `hourMetrics` must be specified.
     */
    hourMetrics?: pulumi.Input<inputs.storage.AccountQueuePropertiesHourMetrics>;
    /**
     * A `logging` block as defined below.
     */
    logging?: pulumi.Input<inputs.storage.AccountQueuePropertiesLogging>;
    /**
     * A `minuteMetrics` block as defined below.
     */
    minuteMetrics?: pulumi.Input<inputs.storage.AccountQueuePropertiesMinuteMetrics>;
    /**
     * The ID of the Storage Account to set Queue Properties on. Changing this forces a new resource to be created.
     */
    storageAccountId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a AccountQueueProperties resource.
 */
export interface AccountQueuePropertiesArgs {
    /**
     * A `corsRule` block as defined above.
     */
    corsRules?: pulumi.Input<pulumi.Input<inputs.storage.AccountQueuePropertiesCorsRule>[]>;
    /**
     * A `hourMetrics` block as defined below.
     *
     * > **Note:** At least one of `corsRule`, `logging`, `minuteMetrics`, or `hourMetrics` must be specified.
     */
    hourMetrics?: pulumi.Input<inputs.storage.AccountQueuePropertiesHourMetrics>;
    /**
     * A `logging` block as defined below.
     */
    logging?: pulumi.Input<inputs.storage.AccountQueuePropertiesLogging>;
    /**
     * A `minuteMetrics` block as defined below.
     */
    minuteMetrics?: pulumi.Input<inputs.storage.AccountQueuePropertiesMinuteMetrics>;
    /**
     * The ID of the Storage Account to set Queue Properties on. Changing this forces a new resource to be created.
     */
    storageAccountId: pulumi.Input<string>;
}
