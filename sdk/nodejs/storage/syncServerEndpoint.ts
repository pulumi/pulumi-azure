// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Manages a Storage Sync Server Endpoint.
 *
 * > **NOTE:** The parent `azure.storage.SyncGroup` must have an `azure.storage.SyncCloudEndpoint` available before an `azure.storage.SyncServerEndpoint` resource can be created.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = new azure.core.ResourceGroup("example", {
 *     name: "example-resources",
 *     location: "West Europe",
 * });
 * const exampleSync = new azure.storage.Sync("example", {
 *     name: "example-storage-sync",
 *     resourceGroupName: example.name,
 *     location: example.location,
 * });
 * const exampleSyncGroup = new azure.storage.SyncGroup("example", {
 *     name: "example-storage-sync-group",
 *     storageSyncId: exampleSync.id,
 * });
 * const exampleAccount = new azure.storage.Account("example", {
 *     name: "example-storage-account",
 *     resourceGroupName: example.name,
 *     location: example.location,
 *     accountTier: "Standard",
 *     accountReplicationType: "LRS",
 * });
 * const exampleShare = new azure.storage.Share("example", {
 *     name: "example-storage-share",
 *     storageAccountName: exampleAccount.name,
 *     quota: 1,
 *     acls: [{
 *         id: "GhostedRecall",
 *         accessPolicies: [{
 *             permissions: "r",
 *         }],
 *     }],
 * });
 * const exampleSyncCloudEndpoint = new azure.storage.SyncCloudEndpoint("example", {
 *     name: "example-ss-ce",
 *     storageSyncGroupId: exampleSyncGroup.id,
 *     fileShareName: exampleShare.name,
 *     storageAccountId: exampleAccount.id,
 * });
 * const exampleSyncServerEndpoint = new azure.storage.SyncServerEndpoint("example", {
 *     name: "example-storage-sync-server-endpoint",
 *     storageSyncGroupId: exampleSyncGroup.id,
 *     registeredServerId: exampleSync.registeredServers[0],
 * }, {
 *     dependsOn: [exampleSyncCloudEndpoint],
 * });
 * ```
 *
 * ## Import
 *
 * Storage Sync Server Endpoints can be imported using the `resource id`, e.g.
 *
 * ```sh
 * $ pulumi import azure:storage/syncServerEndpoint:SyncServerEndpoint example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.StorageSync/storageSyncServices/sync1/syncGroups/syncGroup1/serverEndpoints/endpoint1
 * ```
 */
export class SyncServerEndpoint extends pulumi.CustomResource {
    /**
     * Get an existing SyncServerEndpoint resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SyncServerEndpointState, opts?: pulumi.CustomResourceOptions): SyncServerEndpoint {
        return new SyncServerEndpoint(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure:storage/syncServerEndpoint:SyncServerEndpoint';

    /**
     * Returns true if the given object is an instance of SyncServerEndpoint.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SyncServerEndpoint {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SyncServerEndpoint.__pulumiType;
    }

    /**
     * Is Cloud Tiering Enabled? Defaults to `false`.
     */
    public readonly cloudTieringEnabled!: pulumi.Output<boolean | undefined>;
    /**
     * Specifies how the server initially downloads the Azure file share data. Valid Values includes `NamespaceThenModifiedFiles`, `NamespaceOnly`, and `AvoidTieredFiles`. Defaults to `NamespaceThenModifiedFiles`.
     */
    public readonly initialDownloadPolicy!: pulumi.Output<string | undefined>;
    /**
     * Specifies how to handle the local cache. Valid Values include `UpdateLocallyCachedFiles` and `DownloadNewAndModifiedFiles`. Defaults to `UpdateLocallyCachedFiles`.
     */
    public readonly localCacheMode!: pulumi.Output<string | undefined>;
    /**
     * The name which should be used for this Storage Sync. Changing this forces a new Storage Sync Server Endpoint to be created.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The ID of the Registered Server that will be associate with the Storage Sync Server Endpoint. Changing this forces a new Storage Sync Server Endpoint to be created.
     *
     * > **NOTE:** The target server must already be registered with the parent `azure.storage.Sync` prior to creating this endpoint. For more information on registering a server see the [Microsoft documentation](https://learn.microsoft.com/azure/storage/file-sync/file-sync-server-registration)
     */
    public readonly registeredServerId!: pulumi.Output<string>;
    /**
     * The path on the Windows Server to be synced to the Azure file share. Changing this forces a new Storage Sync Server Endpoint to be created.
     */
    public readonly serverLocalPath!: pulumi.Output<string>;
    /**
     * The ID of the Storage Sync Group where the Storage Sync Server Endpoint should exist. Changing this forces a new Storage Sync Server Endpoint to be created.
     */
    public readonly storageSyncGroupId!: pulumi.Output<string>;
    /**
     * Files older than the specified age will be tiered to the cloud.
     */
    public readonly tierFilesOlderThanDays!: pulumi.Output<number | undefined>;
    /**
     * What percentage of free space on the volume should be preserved? Defaults to `20`.
     */
    public readonly volumeFreeSpacePercent!: pulumi.Output<number | undefined>;

    /**
     * Create a SyncServerEndpoint resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SyncServerEndpointArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SyncServerEndpointArgs | SyncServerEndpointState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SyncServerEndpointState | undefined;
            resourceInputs["cloudTieringEnabled"] = state ? state.cloudTieringEnabled : undefined;
            resourceInputs["initialDownloadPolicy"] = state ? state.initialDownloadPolicy : undefined;
            resourceInputs["localCacheMode"] = state ? state.localCacheMode : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["registeredServerId"] = state ? state.registeredServerId : undefined;
            resourceInputs["serverLocalPath"] = state ? state.serverLocalPath : undefined;
            resourceInputs["storageSyncGroupId"] = state ? state.storageSyncGroupId : undefined;
            resourceInputs["tierFilesOlderThanDays"] = state ? state.tierFilesOlderThanDays : undefined;
            resourceInputs["volumeFreeSpacePercent"] = state ? state.volumeFreeSpacePercent : undefined;
        } else {
            const args = argsOrState as SyncServerEndpointArgs | undefined;
            if ((!args || args.registeredServerId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'registeredServerId'");
            }
            if ((!args || args.serverLocalPath === undefined) && !opts.urn) {
                throw new Error("Missing required property 'serverLocalPath'");
            }
            if ((!args || args.storageSyncGroupId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'storageSyncGroupId'");
            }
            resourceInputs["cloudTieringEnabled"] = args ? args.cloudTieringEnabled : undefined;
            resourceInputs["initialDownloadPolicy"] = args ? args.initialDownloadPolicy : undefined;
            resourceInputs["localCacheMode"] = args ? args.localCacheMode : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["registeredServerId"] = args ? args.registeredServerId : undefined;
            resourceInputs["serverLocalPath"] = args ? args.serverLocalPath : undefined;
            resourceInputs["storageSyncGroupId"] = args ? args.storageSyncGroupId : undefined;
            resourceInputs["tierFilesOlderThanDays"] = args ? args.tierFilesOlderThanDays : undefined;
            resourceInputs["volumeFreeSpacePercent"] = args ? args.volumeFreeSpacePercent : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SyncServerEndpoint.__pulumiType, name, resourceInputs, opts, false /*remote*/);
    }
}

/**
 * Input properties used for looking up and filtering SyncServerEndpoint resources.
 */
export interface SyncServerEndpointState {
    /**
     * Is Cloud Tiering Enabled? Defaults to `false`.
     */
    cloudTieringEnabled?: pulumi.Input<boolean>;
    /**
     * Specifies how the server initially downloads the Azure file share data. Valid Values includes `NamespaceThenModifiedFiles`, `NamespaceOnly`, and `AvoidTieredFiles`. Defaults to `NamespaceThenModifiedFiles`.
     */
    initialDownloadPolicy?: pulumi.Input<string>;
    /**
     * Specifies how to handle the local cache. Valid Values include `UpdateLocallyCachedFiles` and `DownloadNewAndModifiedFiles`. Defaults to `UpdateLocallyCachedFiles`.
     */
    localCacheMode?: pulumi.Input<string>;
    /**
     * The name which should be used for this Storage Sync. Changing this forces a new Storage Sync Server Endpoint to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * The ID of the Registered Server that will be associate with the Storage Sync Server Endpoint. Changing this forces a new Storage Sync Server Endpoint to be created.
     *
     * > **NOTE:** The target server must already be registered with the parent `azure.storage.Sync` prior to creating this endpoint. For more information on registering a server see the [Microsoft documentation](https://learn.microsoft.com/azure/storage/file-sync/file-sync-server-registration)
     */
    registeredServerId?: pulumi.Input<string>;
    /**
     * The path on the Windows Server to be synced to the Azure file share. Changing this forces a new Storage Sync Server Endpoint to be created.
     */
    serverLocalPath?: pulumi.Input<string>;
    /**
     * The ID of the Storage Sync Group where the Storage Sync Server Endpoint should exist. Changing this forces a new Storage Sync Server Endpoint to be created.
     */
    storageSyncGroupId?: pulumi.Input<string>;
    /**
     * Files older than the specified age will be tiered to the cloud.
     */
    tierFilesOlderThanDays?: pulumi.Input<number>;
    /**
     * What percentage of free space on the volume should be preserved? Defaults to `20`.
     */
    volumeFreeSpacePercent?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a SyncServerEndpoint resource.
 */
export interface SyncServerEndpointArgs {
    /**
     * Is Cloud Tiering Enabled? Defaults to `false`.
     */
    cloudTieringEnabled?: pulumi.Input<boolean>;
    /**
     * Specifies how the server initially downloads the Azure file share data. Valid Values includes `NamespaceThenModifiedFiles`, `NamespaceOnly`, and `AvoidTieredFiles`. Defaults to `NamespaceThenModifiedFiles`.
     */
    initialDownloadPolicy?: pulumi.Input<string>;
    /**
     * Specifies how to handle the local cache. Valid Values include `UpdateLocallyCachedFiles` and `DownloadNewAndModifiedFiles`. Defaults to `UpdateLocallyCachedFiles`.
     */
    localCacheMode?: pulumi.Input<string>;
    /**
     * The name which should be used for this Storage Sync. Changing this forces a new Storage Sync Server Endpoint to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * The ID of the Registered Server that will be associate with the Storage Sync Server Endpoint. Changing this forces a new Storage Sync Server Endpoint to be created.
     *
     * > **NOTE:** The target server must already be registered with the parent `azure.storage.Sync` prior to creating this endpoint. For more information on registering a server see the [Microsoft documentation](https://learn.microsoft.com/azure/storage/file-sync/file-sync-server-registration)
     */
    registeredServerId: pulumi.Input<string>;
    /**
     * The path on the Windows Server to be synced to the Azure file share. Changing this forces a new Storage Sync Server Endpoint to be created.
     */
    serverLocalPath: pulumi.Input<string>;
    /**
     * The ID of the Storage Sync Group where the Storage Sync Server Endpoint should exist. Changing this forces a new Storage Sync Server Endpoint to be created.
     */
    storageSyncGroupId: pulumi.Input<string>;
    /**
     * Files older than the specified age will be tiered to the cloud.
     */
    tierFilesOlderThanDays?: pulumi.Input<number>;
    /**
     * What percentage of free space on the volume should be preserved? Defaults to `20`.
     */
    volumeFreeSpacePercent?: pulumi.Input<number>;
}
