// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Use this data source to obtain a Shared Access Signature (SAS Token) for an existing Storage Account Blob Container.
 *
 * Shared access signatures allow fine-grained, ephemeral access control to various aspects of an Azure Storage Account Blob Container.
 */
export function getAccountBlobContainerSAS(args: GetAccountBlobContainerSASArgs, opts?: pulumi.InvokeOptions): Promise<GetAccountBlobContainerSASResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azure:storage/getAccountBlobContainerSAS:getAccountBlobContainerSAS", {
        "cacheControl": args.cacheControl,
        "connectionString": args.connectionString,
        "containerName": args.containerName,
        "contentDisposition": args.contentDisposition,
        "contentEncoding": args.contentEncoding,
        "contentLanguage": args.contentLanguage,
        "contentType": args.contentType,
        "expiry": args.expiry,
        "httpsOnly": args.httpsOnly,
        "ipAddress": args.ipAddress,
        "permissions": args.permissions,
        "start": args.start,
    }, opts);
}

/**
 * A collection of arguments for invoking getAccountBlobContainerSAS.
 */
export interface GetAccountBlobContainerSASArgs {
    /**
     * The `Cache-Control` response header that is sent when this SAS token is used.
     */
    cacheControl?: string;
    /**
     * The connection string for the storage account to which this SAS applies. Typically directly from the `primaryConnectionString` attribute of an `azure.storage.Account` resource.
     */
    connectionString: string;
    /**
     * Name of the container.
     */
    containerName: string;
    /**
     * The `Content-Disposition` response header that is sent when this SAS token is used.
     */
    contentDisposition?: string;
    /**
     * The `Content-Encoding` response header that is sent when this SAS token is used.
     */
    contentEncoding?: string;
    /**
     * The `Content-Language` response header that is sent when this SAS token is used.
     */
    contentLanguage?: string;
    /**
     * The `Content-Type` response header that is sent when this SAS token is used.
     */
    contentType?: string;
    /**
     * The expiration time and date of this SAS. Must be a valid ISO-8601 format time/date string.
     *
     * > **NOTE:** The [ISO-8601 Time offset from UTC](https://en.wikipedia.org/wiki/ISO_8601#Time_offsets_from_UTC) is currently not supported by the service, which will result into 409 error.
     */
    expiry: string;
    /**
     * Only permit `https` access. If `false`, both `http` and `https` are permitted. Defaults to `true`.
     */
    httpsOnly?: boolean;
    /**
     * Single IPv4 address or range (connected with a dash) of IPv4 addresses.
     */
    ipAddress?: string;
    /**
     * A `permissions` block as defined below.
     */
    permissions: inputs.storage.GetAccountBlobContainerSASPermissions;
    /**
     * The starting time and date of validity of this SAS. Must be a valid ISO-8601 format time/date string.
     */
    start: string;
}

/**
 * A collection of values returned by getAccountBlobContainerSAS.
 */
export interface GetAccountBlobContainerSASResult {
    readonly cacheControl?: string;
    readonly connectionString: string;
    readonly containerName: string;
    readonly contentDisposition?: string;
    readonly contentEncoding?: string;
    readonly contentLanguage?: string;
    readonly contentType?: string;
    readonly expiry: string;
    readonly httpsOnly?: boolean;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly ipAddress?: string;
    readonly permissions: outputs.storage.GetAccountBlobContainerSASPermissions;
    /**
     * The computed Blob Container Shared Access Signature (SAS).
     */
    readonly sas: string;
    readonly start: string;
}
/**
 * Use this data source to obtain a Shared Access Signature (SAS Token) for an existing Storage Account Blob Container.
 *
 * Shared access signatures allow fine-grained, ephemeral access control to various aspects of an Azure Storage Account Blob Container.
 */
export function getAccountBlobContainerSASOutput(args: GetAccountBlobContainerSASOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAccountBlobContainerSASResult> {
    return pulumi.output(args).apply((a: any) => getAccountBlobContainerSAS(a, opts))
}

/**
 * A collection of arguments for invoking getAccountBlobContainerSAS.
 */
export interface GetAccountBlobContainerSASOutputArgs {
    /**
     * The `Cache-Control` response header that is sent when this SAS token is used.
     */
    cacheControl?: pulumi.Input<string>;
    /**
     * The connection string for the storage account to which this SAS applies. Typically directly from the `primaryConnectionString` attribute of an `azure.storage.Account` resource.
     */
    connectionString: pulumi.Input<string>;
    /**
     * Name of the container.
     */
    containerName: pulumi.Input<string>;
    /**
     * The `Content-Disposition` response header that is sent when this SAS token is used.
     */
    contentDisposition?: pulumi.Input<string>;
    /**
     * The `Content-Encoding` response header that is sent when this SAS token is used.
     */
    contentEncoding?: pulumi.Input<string>;
    /**
     * The `Content-Language` response header that is sent when this SAS token is used.
     */
    contentLanguage?: pulumi.Input<string>;
    /**
     * The `Content-Type` response header that is sent when this SAS token is used.
     */
    contentType?: pulumi.Input<string>;
    /**
     * The expiration time and date of this SAS. Must be a valid ISO-8601 format time/date string.
     *
     * > **NOTE:** The [ISO-8601 Time offset from UTC](https://en.wikipedia.org/wiki/ISO_8601#Time_offsets_from_UTC) is currently not supported by the service, which will result into 409 error.
     */
    expiry: pulumi.Input<string>;
    /**
     * Only permit `https` access. If `false`, both `http` and `https` are permitted. Defaults to `true`.
     */
    httpsOnly?: pulumi.Input<boolean>;
    /**
     * Single IPv4 address or range (connected with a dash) of IPv4 addresses.
     */
    ipAddress?: pulumi.Input<string>;
    /**
     * A `permissions` block as defined below.
     */
    permissions: pulumi.Input<inputs.storage.GetAccountBlobContainerSASPermissionsArgs>;
    /**
     * The starting time and date of validity of this SAS. Must be a valid ISO-8601 format time/date string.
     */
    start: pulumi.Input<string>;
}
