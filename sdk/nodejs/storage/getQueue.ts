// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Use this data source to access information about an existing Storage Queue.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = azure.storage.getQueue({
 *     name: "example-queue-name",
 *     storageAccountName: "example-storage-account-name",
 * });
 * ```
 */
export function getQueue(args: GetQueueArgs, opts?: pulumi.InvokeOptions): Promise<GetQueueResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azure:storage/getQueue:getQueue", {
        "metadata": args.metadata,
        "name": args.name,
        "storageAccountName": args.storageAccountName,
    }, opts);
}

/**
 * A collection of arguments for invoking getQueue.
 */
export interface GetQueueArgs {
    /**
     * A mapping of MetaData for this Queue.
     */
    metadata?: {[key: string]: string};
    /**
     * The name of the Queue.
     */
    name: string;
    /**
     * The name of the Storage Account where the Queue exists.
     */
    storageAccountName: string;
}

/**
 * A collection of values returned by getQueue.
 */
export interface GetQueueResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * A mapping of MetaData for this Queue.
     */
    readonly metadata: {[key: string]: string};
    readonly name: string;
    /**
     * The Resource Manager ID of this Storage Queue.
     */
    readonly resourceManagerId: string;
    readonly storageAccountName: string;
}
/**
 * Use this data source to access information about an existing Storage Queue.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = azure.storage.getQueue({
 *     name: "example-queue-name",
 *     storageAccountName: "example-storage-account-name",
 * });
 * ```
 */
export function getQueueOutput(args: GetQueueOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetQueueResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("azure:storage/getQueue:getQueue", {
        "metadata": args.metadata,
        "name": args.name,
        "storageAccountName": args.storageAccountName,
    }, opts);
}

/**
 * A collection of arguments for invoking getQueue.
 */
export interface GetQueueOutputArgs {
    /**
     * A mapping of MetaData for this Queue.
     */
    metadata?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The name of the Queue.
     */
    name: pulumi.Input<string>;
    /**
     * The name of the Storage Account where the Queue exists.
     */
    storageAccountName: pulumi.Input<string>;
}
