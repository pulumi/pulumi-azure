// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Use this data source to access information about an existing Storage Table.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = azure.storage.getTable({
 *     name: "example-table-name",
 *     storageAccountName: "example-storage-account-name",
 * });
 * ```
 */
export function getTable(args: GetTableArgs, opts?: pulumi.InvokeOptions): Promise<GetTableResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azure:storage/getTable:getTable", {
        "name": args.name,
        "storageAccountName": args.storageAccountName,
    }, opts);
}

/**
 * A collection of arguments for invoking getTable.
 */
export interface GetTableArgs {
    /**
     * The name of the Table.
     */
    name: string;
    /**
     * The name of the Storage Account where the Table exists.
     */
    storageAccountName: string;
}

/**
 * A collection of values returned by getTable.
 */
export interface GetTableResult {
    /**
     * A mapping of ACLs for this Table.
     */
    readonly acls: outputs.storage.GetTableAcl[];
    /**
     * The ID of the Storage Table.
     */
    readonly id: string;
    readonly name: string;
    /**
     * The Resource Manager ID of this Storage Table.
     */
    readonly resourceManagerId: string;
    readonly storageAccountName: string;
}
/**
 * Use this data source to access information about an existing Storage Table.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = azure.storage.getTable({
 *     name: "example-table-name",
 *     storageAccountName: "example-storage-account-name",
 * });
 * ```
 */
export function getTableOutput(args: GetTableOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetTableResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("azure:storage/getTable:getTable", {
        "name": args.name,
        "storageAccountName": args.storageAccountName,
    }, opts);
}

/**
 * A collection of arguments for invoking getTable.
 */
export interface GetTableOutputArgs {
    /**
     * The name of the Table.
     */
    name: pulumi.Input<string>;
    /**
     * The name of the Storage Account where the Table exists.
     */
    storageAccountName: pulumi.Input<string>;
}
