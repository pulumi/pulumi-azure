// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Use this data source to access information about an existing Storage Sync Group.
 */
export function getSyncGroup(args: GetSyncGroupArgs, opts?: pulumi.InvokeOptions): Promise<GetSyncGroupResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azure:storage/getSyncGroup:getSyncGroup", {
        "name": args.name,
        "storageSyncId": args.storageSyncId,
    }, opts);
}

/**
 * A collection of arguments for invoking getSyncGroup.
 */
export interface GetSyncGroupArgs {
    /**
     * The name of this Storage Sync Group.
     */
    name: string;
    /**
     * The resource ID of the Storage Sync where this Storage Sync Group is.
     */
    storageSyncId: string;
}

/**
 * A collection of values returned by getSyncGroup.
 */
export interface GetSyncGroupResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly name: string;
    readonly storageSyncId: string;
}
/**
 * Use this data source to access information about an existing Storage Sync Group.
 */
export function getSyncGroupOutput(args: GetSyncGroupOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSyncGroupResult> {
    return pulumi.output(args).apply((a: any) => getSyncGroup(a, opts))
}

/**
 * A collection of arguments for invoking getSyncGroup.
 */
export interface GetSyncGroupOutputArgs {
    /**
     * The name of this Storage Sync Group.
     */
    name: pulumi.Input<string>;
    /**
     * The resource ID of the Storage Sync where this Storage Sync Group is.
     */
    storageSyncId: pulumi.Input<string>;
}
