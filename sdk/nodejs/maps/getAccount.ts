// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Use this data source to access information about an existing Azure Maps Account.
 * 
 * ## Example Usage
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 * 
 * const test = azure.maps.getAccount({
 *     name: "production",
 *     resourceGroupName: "maps",
 * });
 * 
 * export const mapsAccountId = test.id;
 * ```
 *
 * > This content is derived from https://github.com/terraform-providers/terraform-provider-azurerm/blob/master/website/docs/d/maps_account.html.markdown.
 */
export function getAccount(args: GetAccountArgs, opts?: pulumi.InvokeOptions): Promise<GetAccountResult> & GetAccountResult {
    if (!opts) {
        opts = {}
    }

    if (!opts.version) {
        opts.version = utilities.getVersion();
    }
    const promise: Promise<GetAccountResult> = pulumi.runtime.invoke("azure:maps/getAccount:getAccount", {
        "name": args.name,
        "resourceGroupName": args.resourceGroupName,
        "tags": args.tags,
    }, opts);

    return pulumi.utils.liftProperties(promise, opts);
}

/**
 * A collection of arguments for invoking getAccount.
 */
export interface GetAccountArgs {
    /**
     * Specifies the name of the Maps Account.
     */
    readonly name: string;
    /**
     * Specifies the name of the Resource Group in which the Maps Account is located.
     */
    readonly resourceGroupName: string;
    readonly tags?: {[key: string]: any};
}

/**
 * A collection of values returned by getAccount.
 */
export interface GetAccountResult {
    readonly name: string;
    /**
     * The primary key used to authenticate and authorize access to the Maps REST APIs.
     */
    readonly primaryAccessKey: string;
    readonly resourceGroupName: string;
    /**
     * The primary key used to authenticate and authorize access to the Maps REST APIs. The second key is given to provide seamless key regeneration.
     */
    readonly secondaryAccessKey: string;
    /**
     * The sku of the Azure Maps Account.
     */
    readonly skuName: string;
    readonly tags: {[key: string]: any};
    /**
     * A unique identifier for the Maps Account.
     */
    readonly xMsClientId: string;
    /**
     * id is the provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
}
