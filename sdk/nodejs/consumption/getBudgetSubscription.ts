// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Use this data source to access information about an existing Consumption Budget for a specific subscription.
 */
export function getBudgetSubscription(args: GetBudgetSubscriptionArgs, opts?: pulumi.InvokeOptions): Promise<GetBudgetSubscriptionResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azure:consumption/getBudgetSubscription:getBudgetSubscription", {
        "name": args.name,
        "subscriptionId": args.subscriptionId,
    }, opts);
}

/**
 * A collection of arguments for invoking getBudgetSubscription.
 */
export interface GetBudgetSubscriptionArgs {
    /**
     * The name of this Consumption Budget.
     */
    name: string;
    /**
     * The ID of the subscription.
     */
    subscriptionId: string;
}

/**
 * A collection of values returned by getBudgetSubscription.
 */
export interface GetBudgetSubscriptionResult {
    /**
     * The total amount of cost to track with the budget.
     */
    readonly amount: number;
    /**
     * A `filter` block as defined below.
     */
    readonly filters: outputs.consumption.GetBudgetSubscriptionFilter[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The name of the tag to use for the filter.
     */
    readonly name: string;
    /**
     * A `notification` block as defined below.
     */
    readonly notifications: outputs.consumption.GetBudgetSubscriptionNotification[];
    readonly subscriptionId: string;
    /**
     * The time covered by a budget.
     */
    readonly timeGrain: string;
    /**
     * A `timePeriod` block as defined below.
     */
    readonly timePeriods: outputs.consumption.GetBudgetSubscriptionTimePeriod[];
}
/**
 * Use this data source to access information about an existing Consumption Budget for a specific subscription.
 */
export function getBudgetSubscriptionOutput(args: GetBudgetSubscriptionOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetBudgetSubscriptionResult> {
    return pulumi.output(args).apply((a: any) => getBudgetSubscription(a, opts))
}

/**
 * A collection of arguments for invoking getBudgetSubscription.
 */
export interface GetBudgetSubscriptionOutputArgs {
    /**
     * The name of this Consumption Budget.
     */
    name: pulumi.Input<string>;
    /**
     * The ID of the subscription.
     */
    subscriptionId: pulumi.Input<string>;
}
