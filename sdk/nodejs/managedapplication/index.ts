// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { ApplicationArgs, ApplicationState } from "./application";
export type Application = import("./application").Application;
export const Application: typeof import("./application").Application = null as any;
utilities.lazyLoad(exports, ["Application"], () => require("./application"));

export { DefinitionArgs, DefinitionState } from "./definition";
export type Definition = import("./definition").Definition;
export const Definition: typeof import("./definition").Definition = null as any;
utilities.lazyLoad(exports, ["Definition"], () => require("./definition"));

export { GetDefinitionArgs, GetDefinitionResult, GetDefinitionOutputArgs } from "./getDefinition";
export const getDefinition: typeof import("./getDefinition").getDefinition = null as any;
export const getDefinitionOutput: typeof import("./getDefinition").getDefinitionOutput = null as any;
utilities.lazyLoad(exports, ["getDefinition","getDefinitionOutput"], () => require("./getDefinition"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "azure:managedapplication/application:Application":
                return new Application(name, <any>undefined, { urn })
            case "azure:managedapplication/definition:Definition":
                return new Definition(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure", "managedapplication/application", _module)
pulumi.runtime.registerResourceModule("azure", "managedapplication/definition", _module)
