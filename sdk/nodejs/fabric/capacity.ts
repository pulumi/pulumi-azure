// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Manages a Fabric Capacity.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const current = azure.core.getClientConfig({});
 * const example = new azure.core.ResourceGroup("example", {
 *     name: "example-resources",
 *     location: "West Europe",
 * });
 * const exampleCapacity = new azure.fabric.Capacity("example", {
 *     name: "exampleffc",
 *     resourceGroupName: example.name,
 *     location: "West Europe",
 *     administrationMembers: [current.then(current => current.objectId)],
 *     sku: {
 *         name: "F32",
 *         tier: "Fabric",
 *     },
 *     tags: {
 *         environment: "test",
 *     },
 * });
 * ```
 *
 * ## API Providers
 *
 * <!-- This section is generated, changes will be overwritten -->
 * This resource uses the following Azure API Providers:
 *
 * * `Microsoft.Fabric` - 2023-11-01
 *
 * ## Import
 *
 * Fabric Capacities can be imported using the `resource id`, e.g.
 *
 * ```sh
 * $ pulumi import azure:fabric/capacity:Capacity example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resourceGroup1/providers/Microsoft.Fabric/capacities/capacity1
 * ```
 */
export class Capacity extends pulumi.CustomResource {
    /**
     * Get an existing Capacity resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CapacityState, opts?: pulumi.CustomResourceOptions): Capacity {
        return new Capacity(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure:fabric/capacity:Capacity';

    /**
     * Returns true if the given object is an instance of Capacity.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Capacity {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Capacity.__pulumiType;
    }

    /**
     * An array of administrator user identities. The member must be an Entra user or a service principal.
     *
     * > **Note:** If the member is an Entra user, use user principal name (UPN) format. If the user is a service principal, use object ID.
     */
    declare public readonly administrationMembers: pulumi.Output<string[] | undefined>;
    /**
     * The supported Azure location where the Fabric Capacity exists. Changing this forces a new resource to be created.
     */
    declare public readonly location: pulumi.Output<string>;
    /**
     * The name which should be used for the Fabric Capacity. Changing this forces a new resource to be created.
     */
    declare public readonly name: pulumi.Output<string>;
    /**
     * The name of the Resource Group in which to create the Fabric Capacity. Changing this forces a new resource to be created.
     */
    declare public readonly resourceGroupName: pulumi.Output<string>;
    /**
     * A `sku` block as defined below.
     */
    declare public readonly sku: pulumi.Output<outputs.fabric.CapacitySku>;
    /**
     * A mapping of tags to assign to the Fabric Capacity.
     */
    declare public readonly tags: pulumi.Output<{[key: string]: string} | undefined>;

    /**
     * Create a Capacity resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CapacityArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CapacityArgs | CapacityState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as CapacityState | undefined;
            resourceInputs["administrationMembers"] = state?.administrationMembers;
            resourceInputs["location"] = state?.location;
            resourceInputs["name"] = state?.name;
            resourceInputs["resourceGroupName"] = state?.resourceGroupName;
            resourceInputs["sku"] = state?.sku;
            resourceInputs["tags"] = state?.tags;
        } else {
            const args = argsOrState as CapacityArgs | undefined;
            if (args?.resourceGroupName === undefined && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            if (args?.sku === undefined && !opts.urn) {
                throw new Error("Missing required property 'sku'");
            }
            resourceInputs["administrationMembers"] = args?.administrationMembers;
            resourceInputs["location"] = args?.location;
            resourceInputs["name"] = args?.name;
            resourceInputs["resourceGroupName"] = args?.resourceGroupName;
            resourceInputs["sku"] = args?.sku;
            resourceInputs["tags"] = args?.tags;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Capacity.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Capacity resources.
 */
export interface CapacityState {
    /**
     * An array of administrator user identities. The member must be an Entra user or a service principal.
     *
     * > **Note:** If the member is an Entra user, use user principal name (UPN) format. If the user is a service principal, use object ID.
     */
    administrationMembers?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The supported Azure location where the Fabric Capacity exists. Changing this forces a new resource to be created.
     */
    location?: pulumi.Input<string>;
    /**
     * The name which should be used for the Fabric Capacity. Changing this forces a new resource to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * The name of the Resource Group in which to create the Fabric Capacity. Changing this forces a new resource to be created.
     */
    resourceGroupName?: pulumi.Input<string>;
    /**
     * A `sku` block as defined below.
     */
    sku?: pulumi.Input<inputs.fabric.CapacitySku>;
    /**
     * A mapping of tags to assign to the Fabric Capacity.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

/**
 * The set of arguments for constructing a Capacity resource.
 */
export interface CapacityArgs {
    /**
     * An array of administrator user identities. The member must be an Entra user or a service principal.
     *
     * > **Note:** If the member is an Entra user, use user principal name (UPN) format. If the user is a service principal, use object ID.
     */
    administrationMembers?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The supported Azure location where the Fabric Capacity exists. Changing this forces a new resource to be created.
     */
    location?: pulumi.Input<string>;
    /**
     * The name which should be used for the Fabric Capacity. Changing this forces a new resource to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * The name of the Resource Group in which to create the Fabric Capacity. Changing this forces a new resource to be created.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * A `sku` block as defined below.
     */
    sku: pulumi.Input<inputs.fabric.CapacitySku>;
    /**
     * A mapping of tags to assign to the Fabric Capacity.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
