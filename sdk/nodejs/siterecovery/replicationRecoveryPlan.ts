// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Manages an Azure Site Recovery Plan within a Recovery Services vault. A recovery plan gathers machines into recovery groups for the purpose of failover.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const sourceResourceGroup = new azure.core.ResourceGroup("sourceResourceGroup", {location: "west us"});
 * const targetResourceGroup = new azure.core.ResourceGroup("targetResourceGroup", {location: "east us"});
 * const exampleVault = new azure.recoveryservices.Vault("exampleVault", {
 *     location: targetResourceGroup.location,
 *     resourceGroupName: targetResourceGroup.name,
 *     sku: "Standard",
 * });
 * const sourceFabric = new azure.siterecovery.Fabric("sourceFabric", {
 *     resourceGroupName: azurerm_resource_group.example.name,
 *     recoveryVaultName: exampleVault.name,
 *     location: sourceResourceGroup.location,
 * });
 * const targetFabric = new azure.siterecovery.Fabric("targetFabric", {
 *     resourceGroupName: targetResourceGroup.name,
 *     recoveryVaultName: exampleVault.name,
 *     location: targetResourceGroup.location,
 * }, {
 *     dependsOn: [sourceFabric],
 * });
 * const exampleReplicationRecoveryPlan = new azure.siterecovery.ReplicationRecoveryPlan("exampleReplicationRecoveryPlan", {
 *     recoveryVaultId: azurerm_recovery_services_vault.target.id,
 *     sourceRecoveryFabricId: sourceFabric.id,
 *     targetRecoveryFabricId: targetFabric.id,
 *     recoveryGroups: [
 *         {
 *             type: "Boot",
 *             replicatedProtectedItems: [azurerm_site_recovery_replicated_vm.test.id],
 *         },
 *         {
 *             type: "Failover",
 *         },
 *         {
 *             type: "Shutdown",
 *         },
 *     ],
 * });
 * ```
 *
 * ## Import
 *
 * Site Recovery Fabric can be imported using the `resource id`, e.g.
 *
 * ```sh
 *  $ pulumi import azure:siterecovery/replicationRecoveryPlan:ReplicationRecoveryPlan RecoveryServices/vaults/vaultName/replicationRecoveryPlans/planName
 * ```
 */
export class ReplicationRecoveryPlan extends pulumi.CustomResource {
    /**
     * Get an existing ReplicationRecoveryPlan resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ReplicationRecoveryPlanState, opts?: pulumi.CustomResourceOptions): ReplicationRecoveryPlan {
        return new ReplicationRecoveryPlan(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure:siterecovery/replicationRecoveryPlan:ReplicationRecoveryPlan';

    /**
     * Returns true if the given object is an instance of ReplicationRecoveryPlan.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ReplicationRecoveryPlan {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ReplicationRecoveryPlan.__pulumiType;
    }

    /**
     * The name of the Replication Plan. The name can contain only letters, numbers, and hyphens. It should start with a letter and end with a letter or a number. Can be a maximum of 63 characters. Changing this forces a new resource to be created.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Three or more `recoveryGroup` block.
     */
    public readonly recoveryGroups!: pulumi.Output<outputs.siterecovery.ReplicationRecoveryPlanRecoveryGroup[] | undefined>;
    /**
     * The ID of the vault that should be updated. Changing this forces a new resource to be created.
     */
    public readonly recoveryVaultId!: pulumi.Output<string>;
    /**
     * ID of source fabric to be recovered from. Changing this forces a new Replication Plan to be created.
     */
    public readonly sourceRecoveryFabricId!: pulumi.Output<string>;
    /**
     * ID of target fabric to recover. Changing this forces a new Replication Plan to be created.
     */
    public readonly targetRecoveryFabricId!: pulumi.Output<string>;

    /**
     * Create a ReplicationRecoveryPlan resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ReplicationRecoveryPlanArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ReplicationRecoveryPlanArgs | ReplicationRecoveryPlanState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ReplicationRecoveryPlanState | undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["recoveryGroups"] = state ? state.recoveryGroups : undefined;
            resourceInputs["recoveryVaultId"] = state ? state.recoveryVaultId : undefined;
            resourceInputs["sourceRecoveryFabricId"] = state ? state.sourceRecoveryFabricId : undefined;
            resourceInputs["targetRecoveryFabricId"] = state ? state.targetRecoveryFabricId : undefined;
        } else {
            const args = argsOrState as ReplicationRecoveryPlanArgs | undefined;
            if ((!args || args.recoveryVaultId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'recoveryVaultId'");
            }
            if ((!args || args.sourceRecoveryFabricId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'sourceRecoveryFabricId'");
            }
            if ((!args || args.targetRecoveryFabricId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'targetRecoveryFabricId'");
            }
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["recoveryGroups"] = args ? args.recoveryGroups : undefined;
            resourceInputs["recoveryVaultId"] = args ? args.recoveryVaultId : undefined;
            resourceInputs["sourceRecoveryFabricId"] = args ? args.sourceRecoveryFabricId : undefined;
            resourceInputs["targetRecoveryFabricId"] = args ? args.targetRecoveryFabricId : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ReplicationRecoveryPlan.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ReplicationRecoveryPlan resources.
 */
export interface ReplicationRecoveryPlanState {
    /**
     * The name of the Replication Plan. The name can contain only letters, numbers, and hyphens. It should start with a letter and end with a letter or a number. Can be a maximum of 63 characters. Changing this forces a new resource to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * Three or more `recoveryGroup` block.
     */
    recoveryGroups?: pulumi.Input<pulumi.Input<inputs.siterecovery.ReplicationRecoveryPlanRecoveryGroup>[]>;
    /**
     * The ID of the vault that should be updated. Changing this forces a new resource to be created.
     */
    recoveryVaultId?: pulumi.Input<string>;
    /**
     * ID of source fabric to be recovered from. Changing this forces a new Replication Plan to be created.
     */
    sourceRecoveryFabricId?: pulumi.Input<string>;
    /**
     * ID of target fabric to recover. Changing this forces a new Replication Plan to be created.
     */
    targetRecoveryFabricId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ReplicationRecoveryPlan resource.
 */
export interface ReplicationRecoveryPlanArgs {
    /**
     * The name of the Replication Plan. The name can contain only letters, numbers, and hyphens. It should start with a letter and end with a letter or a number. Can be a maximum of 63 characters. Changing this forces a new resource to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * Three or more `recoveryGroup` block.
     */
    recoveryGroups?: pulumi.Input<pulumi.Input<inputs.siterecovery.ReplicationRecoveryPlanRecoveryGroup>[]>;
    /**
     * The ID of the vault that should be updated. Changing this forces a new resource to be created.
     */
    recoveryVaultId: pulumi.Input<string>;
    /**
     * ID of source fabric to be recovered from. Changing this forces a new Replication Plan to be created.
     */
    sourceRecoveryFabricId: pulumi.Input<string>;
    /**
     * ID of target fabric to recover. Changing this forces a new Replication Plan to be created.
     */
    targetRecoveryFabricId: pulumi.Input<string>;
}
