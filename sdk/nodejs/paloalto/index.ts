// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { GetLocalRulestackArgs, GetLocalRulestackResult, GetLocalRulestackOutputArgs } from "./getLocalRulestack";
export const getLocalRulestack: typeof import("./getLocalRulestack").getLocalRulestack = null as any;
export const getLocalRulestackOutput: typeof import("./getLocalRulestack").getLocalRulestackOutput = null as any;
utilities.lazyLoad(exports, ["getLocalRulestack","getLocalRulestackOutput"], () => require("./getLocalRulestack"));

export { LocalRulestackArgs, LocalRulestackState } from "./localRulestack";
export type LocalRulestack = import("./localRulestack").LocalRulestack;
export const LocalRulestack: typeof import("./localRulestack").LocalRulestack = null as any;
utilities.lazyLoad(exports, ["LocalRulestack"], () => require("./localRulestack"));

export { LocalRulestackCertificateArgs, LocalRulestackCertificateState } from "./localRulestackCertificate";
export type LocalRulestackCertificate = import("./localRulestackCertificate").LocalRulestackCertificate;
export const LocalRulestackCertificate: typeof import("./localRulestackCertificate").LocalRulestackCertificate = null as any;
utilities.lazyLoad(exports, ["LocalRulestackCertificate"], () => require("./localRulestackCertificate"));

export { LocalRulestackFqdnListArgs, LocalRulestackFqdnListState } from "./localRulestackFqdnList";
export type LocalRulestackFqdnList = import("./localRulestackFqdnList").LocalRulestackFqdnList;
export const LocalRulestackFqdnList: typeof import("./localRulestackFqdnList").LocalRulestackFqdnList = null as any;
utilities.lazyLoad(exports, ["LocalRulestackFqdnList"], () => require("./localRulestackFqdnList"));

export { LocalRulestackOutboundTrustCertificateAssociationArgs, LocalRulestackOutboundTrustCertificateAssociationState } from "./localRulestackOutboundTrustCertificateAssociation";
export type LocalRulestackOutboundTrustCertificateAssociation = import("./localRulestackOutboundTrustCertificateAssociation").LocalRulestackOutboundTrustCertificateAssociation;
export const LocalRulestackOutboundTrustCertificateAssociation: typeof import("./localRulestackOutboundTrustCertificateAssociation").LocalRulestackOutboundTrustCertificateAssociation = null as any;
utilities.lazyLoad(exports, ["LocalRulestackOutboundTrustCertificateAssociation"], () => require("./localRulestackOutboundTrustCertificateAssociation"));

export { LocalRulestackOutboundUntrustCertificateAssociationArgs, LocalRulestackOutboundUntrustCertificateAssociationState } from "./localRulestackOutboundUntrustCertificateAssociation";
export type LocalRulestackOutboundUntrustCertificateAssociation = import("./localRulestackOutboundUntrustCertificateAssociation").LocalRulestackOutboundUntrustCertificateAssociation;
export const LocalRulestackOutboundUntrustCertificateAssociation: typeof import("./localRulestackOutboundUntrustCertificateAssociation").LocalRulestackOutboundUntrustCertificateAssociation = null as any;
utilities.lazyLoad(exports, ["LocalRulestackOutboundUntrustCertificateAssociation"], () => require("./localRulestackOutboundUntrustCertificateAssociation"));

export { LocalRulestackPrefixListArgs, LocalRulestackPrefixListState } from "./localRulestackPrefixList";
export type LocalRulestackPrefixList = import("./localRulestackPrefixList").LocalRulestackPrefixList;
export const LocalRulestackPrefixList: typeof import("./localRulestackPrefixList").LocalRulestackPrefixList = null as any;
utilities.lazyLoad(exports, ["LocalRulestackPrefixList"], () => require("./localRulestackPrefixList"));

export { LocalRulestackRuleArgs, LocalRulestackRuleState } from "./localRulestackRule";
export type LocalRulestackRule = import("./localRulestackRule").LocalRulestackRule;
export const LocalRulestackRule: typeof import("./localRulestackRule").LocalRulestackRule = null as any;
utilities.lazyLoad(exports, ["LocalRulestackRule"], () => require("./localRulestackRule"));

export { NextGenerationFirewallVirtualHubLocalRulestackArgs, NextGenerationFirewallVirtualHubLocalRulestackState } from "./nextGenerationFirewallVirtualHubLocalRulestack";
export type NextGenerationFirewallVirtualHubLocalRulestack = import("./nextGenerationFirewallVirtualHubLocalRulestack").NextGenerationFirewallVirtualHubLocalRulestack;
export const NextGenerationFirewallVirtualHubLocalRulestack: typeof import("./nextGenerationFirewallVirtualHubLocalRulestack").NextGenerationFirewallVirtualHubLocalRulestack = null as any;
utilities.lazyLoad(exports, ["NextGenerationFirewallVirtualHubLocalRulestack"], () => require("./nextGenerationFirewallVirtualHubLocalRulestack"));

export { NextGenerationFirewallVirtualHubPanoramaArgs, NextGenerationFirewallVirtualHubPanoramaState } from "./nextGenerationFirewallVirtualHubPanorama";
export type NextGenerationFirewallVirtualHubPanorama = import("./nextGenerationFirewallVirtualHubPanorama").NextGenerationFirewallVirtualHubPanorama;
export const NextGenerationFirewallVirtualHubPanorama: typeof import("./nextGenerationFirewallVirtualHubPanorama").NextGenerationFirewallVirtualHubPanorama = null as any;
utilities.lazyLoad(exports, ["NextGenerationFirewallVirtualHubPanorama"], () => require("./nextGenerationFirewallVirtualHubPanorama"));

export { NextGenerationFirewallVirtualNetworkLocalRulestackArgs, NextGenerationFirewallVirtualNetworkLocalRulestackState } from "./nextGenerationFirewallVirtualNetworkLocalRulestack";
export type NextGenerationFirewallVirtualNetworkLocalRulestack = import("./nextGenerationFirewallVirtualNetworkLocalRulestack").NextGenerationFirewallVirtualNetworkLocalRulestack;
export const NextGenerationFirewallVirtualNetworkLocalRulestack: typeof import("./nextGenerationFirewallVirtualNetworkLocalRulestack").NextGenerationFirewallVirtualNetworkLocalRulestack = null as any;
utilities.lazyLoad(exports, ["NextGenerationFirewallVirtualNetworkLocalRulestack"], () => require("./nextGenerationFirewallVirtualNetworkLocalRulestack"));

export { NextGenerationFirewallVirtualNetworkPanoramaArgs, NextGenerationFirewallVirtualNetworkPanoramaState } from "./nextGenerationFirewallVirtualNetworkPanorama";
export type NextGenerationFirewallVirtualNetworkPanorama = import("./nextGenerationFirewallVirtualNetworkPanorama").NextGenerationFirewallVirtualNetworkPanorama;
export const NextGenerationFirewallVirtualNetworkPanorama: typeof import("./nextGenerationFirewallVirtualNetworkPanorama").NextGenerationFirewallVirtualNetworkPanorama = null as any;
utilities.lazyLoad(exports, ["NextGenerationFirewallVirtualNetworkPanorama"], () => require("./nextGenerationFirewallVirtualNetworkPanorama"));

export { VirtualNetworkApplianceArgs, VirtualNetworkApplianceState } from "./virtualNetworkAppliance";
export type VirtualNetworkAppliance = import("./virtualNetworkAppliance").VirtualNetworkAppliance;
export const VirtualNetworkAppliance: typeof import("./virtualNetworkAppliance").VirtualNetworkAppliance = null as any;
utilities.lazyLoad(exports, ["VirtualNetworkAppliance"], () => require("./virtualNetworkAppliance"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "azure:paloalto/localRulestack:LocalRulestack":
                return new LocalRulestack(name, <any>undefined, { urn })
            case "azure:paloalto/localRulestackCertificate:LocalRulestackCertificate":
                return new LocalRulestackCertificate(name, <any>undefined, { urn })
            case "azure:paloalto/localRulestackFqdnList:LocalRulestackFqdnList":
                return new LocalRulestackFqdnList(name, <any>undefined, { urn })
            case "azure:paloalto/localRulestackOutboundTrustCertificateAssociation:LocalRulestackOutboundTrustCertificateAssociation":
                return new LocalRulestackOutboundTrustCertificateAssociation(name, <any>undefined, { urn })
            case "azure:paloalto/localRulestackOutboundUntrustCertificateAssociation:LocalRulestackOutboundUntrustCertificateAssociation":
                return new LocalRulestackOutboundUntrustCertificateAssociation(name, <any>undefined, { urn })
            case "azure:paloalto/localRulestackPrefixList:LocalRulestackPrefixList":
                return new LocalRulestackPrefixList(name, <any>undefined, { urn })
            case "azure:paloalto/localRulestackRule:LocalRulestackRule":
                return new LocalRulestackRule(name, <any>undefined, { urn })
            case "azure:paloalto/nextGenerationFirewallVirtualHubLocalRulestack:NextGenerationFirewallVirtualHubLocalRulestack":
                return new NextGenerationFirewallVirtualHubLocalRulestack(name, <any>undefined, { urn })
            case "azure:paloalto/nextGenerationFirewallVirtualHubPanorama:NextGenerationFirewallVirtualHubPanorama":
                return new NextGenerationFirewallVirtualHubPanorama(name, <any>undefined, { urn })
            case "azure:paloalto/nextGenerationFirewallVirtualNetworkLocalRulestack:NextGenerationFirewallVirtualNetworkLocalRulestack":
                return new NextGenerationFirewallVirtualNetworkLocalRulestack(name, <any>undefined, { urn })
            case "azure:paloalto/nextGenerationFirewallVirtualNetworkPanorama:NextGenerationFirewallVirtualNetworkPanorama":
                return new NextGenerationFirewallVirtualNetworkPanorama(name, <any>undefined, { urn })
            case "azure:paloalto/virtualNetworkAppliance:VirtualNetworkAppliance":
                return new VirtualNetworkAppliance(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure", "paloalto/localRulestack", _module)
pulumi.runtime.registerResourceModule("azure", "paloalto/localRulestackCertificate", _module)
pulumi.runtime.registerResourceModule("azure", "paloalto/localRulestackFqdnList", _module)
pulumi.runtime.registerResourceModule("azure", "paloalto/localRulestackOutboundTrustCertificateAssociation", _module)
pulumi.runtime.registerResourceModule("azure", "paloalto/localRulestackOutboundUntrustCertificateAssociation", _module)
pulumi.runtime.registerResourceModule("azure", "paloalto/localRulestackPrefixList", _module)
pulumi.runtime.registerResourceModule("azure", "paloalto/localRulestackRule", _module)
pulumi.runtime.registerResourceModule("azure", "paloalto/nextGenerationFirewallVirtualHubLocalRulestack", _module)
pulumi.runtime.registerResourceModule("azure", "paloalto/nextGenerationFirewallVirtualHubPanorama", _module)
pulumi.runtime.registerResourceModule("azure", "paloalto/nextGenerationFirewallVirtualNetworkLocalRulestack", _module)
pulumi.runtime.registerResourceModule("azure", "paloalto/nextGenerationFirewallVirtualNetworkPanorama", _module)
pulumi.runtime.registerResourceModule("azure", "paloalto/virtualNetworkAppliance", _module)
