// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Manages a Palo Alto Local Rulestack Rule.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = new azure.core.ResourceGroup("example", {
 *     name: "rg-example",
 *     location: "West Europe",
 * });
 * const exampleLocalRulestack = new azure.paloalto.LocalRulestack("example", {
 *     name: "lrs-example",
 *     resourceGroupName: example.name,
 *     location: example.location,
 * });
 * const exampleLocalRulestackRule = new azure.paloalto.LocalRulestackRule("example", {
 *     name: "example-rule",
 *     rulestackId: exampleLocalRulestack.id,
 *     priority: 1000,
 *     action: "Allow",
 *     protocol: "application-default",
 *     applications: ["any"],
 *     source: {
 *         cidrs: ["10.0.0.0/8"],
 *     },
 *     destination: {
 *         cidrs: ["192.168.16.0/24"],
 *     },
 * });
 * ```
 *
 * ## API Providers
 *
 * <!-- This section is generated, changes will be overwritten -->
 * This resource uses the following Azure API Providers:
 *
 * * `PaloAltoNetworks.Cloudngfw` - 2022-08-29
 *
 * ## Import
 *
 * Palo Alto Local Rulestack Rules can be imported using the `resource id`, e.g.
 *
 * ```sh
 * $ pulumi import azure:paloalto/localRulestackRule:LocalRulestackRule example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/mygroup1/providers/PaloAltoNetworks.Cloudngfw/localRulestacks/myLocalRulestack/localRules/myRule1
 * ```
 */
export class LocalRulestackRule extends pulumi.CustomResource {
    /**
     * Get an existing LocalRulestackRule resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: LocalRulestackRuleState, opts?: pulumi.CustomResourceOptions): LocalRulestackRule {
        return new LocalRulestackRule(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure:paloalto/localRulestackRule:LocalRulestackRule';

    /**
     * Returns true if the given object is an instance of LocalRulestackRule.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is LocalRulestackRule {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === LocalRulestackRule.__pulumiType;
    }

    /**
     * The action to take on the rule being triggered. Possible values are `Allow`, `DenyResetBoth`, `DenyResetServer` and `DenySilent`.
     */
    declare public readonly action: pulumi.Output<string>;
    /**
     * Specifies a list of Applications.
     */
    declare public readonly applications: pulumi.Output<string[]>;
    /**
     * The comment for Audit purposes.
     */
    declare public readonly auditComment: pulumi.Output<string | undefined>;
    /**
     * A `category` block as defined below.
     */
    declare public readonly category: pulumi.Output<outputs.paloalto.LocalRulestackRuleCategory | undefined>;
    /**
     * The type of Decryption to perform on the rule. Possible values include `SSLInboundInspection`, `SSLOutboundInspection`, and `None`. Defaults to `None`.
     */
    declare public readonly decryptionRuleType: pulumi.Output<string | undefined>;
    /**
     * The description for the rule.
     */
    declare public readonly description: pulumi.Output<string | undefined>;
    /**
     * One or more `destination` blocks as defined below.
     */
    declare public readonly destination: pulumi.Output<outputs.paloalto.LocalRulestackRuleDestination>;
    /**
     * Should this Rule be enabled? Defaults to `true`.
     */
    declare public readonly enabled: pulumi.Output<boolean | undefined>;
    /**
     * The ID of the certificate for inbound inspection. Only valid when `decryptionRuleType` is set to `SSLInboundInspection`.
     */
    declare public readonly inspectionCertificateId: pulumi.Output<string | undefined>;
    /**
     * Should Logging be enabled? Defaults to `false`.
     */
    declare public readonly loggingEnabled: pulumi.Output<boolean | undefined>;
    /**
     * The name which should be used for this Palo Alto Local Rulestack Rule.
     */
    declare public readonly name: pulumi.Output<string>;
    /**
     * Should the inverse of the Destination configuration be used. Defaults to `false`.
     */
    declare public readonly negateDestination: pulumi.Output<boolean | undefined>;
    /**
     * Should the inverse of the Source configuration be used. Defaults to `false`.
     */
    declare public readonly negateSource: pulumi.Output<boolean | undefined>;
    /**
     * The Priority of this rule. Rules are executed in numerical order. Changing this forces a new Palo Alto Local Rulestack Rule to be created.
     *
     * > **Note:** This is the primary identifier of a rule, as such it is not possible to change the Priority of a rule once created.
     */
    declare public readonly priority: pulumi.Output<number>;
    /**
     * The Protocol and port to use in the form `[protocol]:[portNumber]` e.g. `TCP:8080` or `UDP:53`. Conflicts with `protocolPorts`. Defaults to `application-default`.
     *
     * > **Note:** In 4.0 or later versions, the default of `protocol` will no longer be set by provider, exactly one of `protocol` and `protocolPorts` must be specified. You need to explicitly specify `protocol="application-default"` to keep the the current default of the `protocol`.
     */
    declare public readonly protocol: pulumi.Output<string | undefined>;
    /**
     * Specifies a list of Protocol:Port entries. E.g. `[ "TCP:80", "UDP:5431" ]`. Conflicts with `protocol`.
     */
    declare public readonly protocolPorts: pulumi.Output<string[] | undefined>;
    /**
     * The ID of the Local Rulestack in which to create this Rule. Changing this forces a new Palo Alto Local Rulestack Rule to be created.
     */
    declare public readonly rulestackId: pulumi.Output<string>;
    /**
     * One or more `source` blocks as defined below.
     */
    declare public readonly source: pulumi.Output<outputs.paloalto.LocalRulestackRuleSource>;
    /**
     * A mapping of tags which should be assigned to the Palo Alto Local Rulestack Rule.
     */
    declare public readonly tags: pulumi.Output<{[key: string]: string} | undefined>;

    /**
     * Create a LocalRulestackRule resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: LocalRulestackRuleArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: LocalRulestackRuleArgs | LocalRulestackRuleState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as LocalRulestackRuleState | undefined;
            resourceInputs["action"] = state?.action;
            resourceInputs["applications"] = state?.applications;
            resourceInputs["auditComment"] = state?.auditComment;
            resourceInputs["category"] = state?.category;
            resourceInputs["decryptionRuleType"] = state?.decryptionRuleType;
            resourceInputs["description"] = state?.description;
            resourceInputs["destination"] = state?.destination;
            resourceInputs["enabled"] = state?.enabled;
            resourceInputs["inspectionCertificateId"] = state?.inspectionCertificateId;
            resourceInputs["loggingEnabled"] = state?.loggingEnabled;
            resourceInputs["name"] = state?.name;
            resourceInputs["negateDestination"] = state?.negateDestination;
            resourceInputs["negateSource"] = state?.negateSource;
            resourceInputs["priority"] = state?.priority;
            resourceInputs["protocol"] = state?.protocol;
            resourceInputs["protocolPorts"] = state?.protocolPorts;
            resourceInputs["rulestackId"] = state?.rulestackId;
            resourceInputs["source"] = state?.source;
            resourceInputs["tags"] = state?.tags;
        } else {
            const args = argsOrState as LocalRulestackRuleArgs | undefined;
            if (args?.action === undefined && !opts.urn) {
                throw new Error("Missing required property 'action'");
            }
            if (args?.applications === undefined && !opts.urn) {
                throw new Error("Missing required property 'applications'");
            }
            if (args?.destination === undefined && !opts.urn) {
                throw new Error("Missing required property 'destination'");
            }
            if (args?.priority === undefined && !opts.urn) {
                throw new Error("Missing required property 'priority'");
            }
            if (args?.rulestackId === undefined && !opts.urn) {
                throw new Error("Missing required property 'rulestackId'");
            }
            if (args?.source === undefined && !opts.urn) {
                throw new Error("Missing required property 'source'");
            }
            resourceInputs["action"] = args?.action;
            resourceInputs["applications"] = args?.applications;
            resourceInputs["auditComment"] = args?.auditComment;
            resourceInputs["category"] = args?.category;
            resourceInputs["decryptionRuleType"] = args?.decryptionRuleType;
            resourceInputs["description"] = args?.description;
            resourceInputs["destination"] = args?.destination;
            resourceInputs["enabled"] = args?.enabled;
            resourceInputs["inspectionCertificateId"] = args?.inspectionCertificateId;
            resourceInputs["loggingEnabled"] = args?.loggingEnabled;
            resourceInputs["name"] = args?.name;
            resourceInputs["negateDestination"] = args?.negateDestination;
            resourceInputs["negateSource"] = args?.negateSource;
            resourceInputs["priority"] = args?.priority;
            resourceInputs["protocol"] = args?.protocol;
            resourceInputs["protocolPorts"] = args?.protocolPorts;
            resourceInputs["rulestackId"] = args?.rulestackId;
            resourceInputs["source"] = args?.source;
            resourceInputs["tags"] = args?.tags;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(LocalRulestackRule.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering LocalRulestackRule resources.
 */
export interface LocalRulestackRuleState {
    /**
     * The action to take on the rule being triggered. Possible values are `Allow`, `DenyResetBoth`, `DenyResetServer` and `DenySilent`.
     */
    action?: pulumi.Input<string>;
    /**
     * Specifies a list of Applications.
     */
    applications?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The comment for Audit purposes.
     */
    auditComment?: pulumi.Input<string>;
    /**
     * A `category` block as defined below.
     */
    category?: pulumi.Input<inputs.paloalto.LocalRulestackRuleCategory>;
    /**
     * The type of Decryption to perform on the rule. Possible values include `SSLInboundInspection`, `SSLOutboundInspection`, and `None`. Defaults to `None`.
     */
    decryptionRuleType?: pulumi.Input<string>;
    /**
     * The description for the rule.
     */
    description?: pulumi.Input<string>;
    /**
     * One or more `destination` blocks as defined below.
     */
    destination?: pulumi.Input<inputs.paloalto.LocalRulestackRuleDestination>;
    /**
     * Should this Rule be enabled? Defaults to `true`.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * The ID of the certificate for inbound inspection. Only valid when `decryptionRuleType` is set to `SSLInboundInspection`.
     */
    inspectionCertificateId?: pulumi.Input<string>;
    /**
     * Should Logging be enabled? Defaults to `false`.
     */
    loggingEnabled?: pulumi.Input<boolean>;
    /**
     * The name which should be used for this Palo Alto Local Rulestack Rule.
     */
    name?: pulumi.Input<string>;
    /**
     * Should the inverse of the Destination configuration be used. Defaults to `false`.
     */
    negateDestination?: pulumi.Input<boolean>;
    /**
     * Should the inverse of the Source configuration be used. Defaults to `false`.
     */
    negateSource?: pulumi.Input<boolean>;
    /**
     * The Priority of this rule. Rules are executed in numerical order. Changing this forces a new Palo Alto Local Rulestack Rule to be created.
     *
     * > **Note:** This is the primary identifier of a rule, as such it is not possible to change the Priority of a rule once created.
     */
    priority?: pulumi.Input<number>;
    /**
     * The Protocol and port to use in the form `[protocol]:[portNumber]` e.g. `TCP:8080` or `UDP:53`. Conflicts with `protocolPorts`. Defaults to `application-default`.
     *
     * > **Note:** In 4.0 or later versions, the default of `protocol` will no longer be set by provider, exactly one of `protocol` and `protocolPorts` must be specified. You need to explicitly specify `protocol="application-default"` to keep the the current default of the `protocol`.
     */
    protocol?: pulumi.Input<string>;
    /**
     * Specifies a list of Protocol:Port entries. E.g. `[ "TCP:80", "UDP:5431" ]`. Conflicts with `protocol`.
     */
    protocolPorts?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The ID of the Local Rulestack in which to create this Rule. Changing this forces a new Palo Alto Local Rulestack Rule to be created.
     */
    rulestackId?: pulumi.Input<string>;
    /**
     * One or more `source` blocks as defined below.
     */
    source?: pulumi.Input<inputs.paloalto.LocalRulestackRuleSource>;
    /**
     * A mapping of tags which should be assigned to the Palo Alto Local Rulestack Rule.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

/**
 * The set of arguments for constructing a LocalRulestackRule resource.
 */
export interface LocalRulestackRuleArgs {
    /**
     * The action to take on the rule being triggered. Possible values are `Allow`, `DenyResetBoth`, `DenyResetServer` and `DenySilent`.
     */
    action: pulumi.Input<string>;
    /**
     * Specifies a list of Applications.
     */
    applications: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The comment for Audit purposes.
     */
    auditComment?: pulumi.Input<string>;
    /**
     * A `category` block as defined below.
     */
    category?: pulumi.Input<inputs.paloalto.LocalRulestackRuleCategory>;
    /**
     * The type of Decryption to perform on the rule. Possible values include `SSLInboundInspection`, `SSLOutboundInspection`, and `None`. Defaults to `None`.
     */
    decryptionRuleType?: pulumi.Input<string>;
    /**
     * The description for the rule.
     */
    description?: pulumi.Input<string>;
    /**
     * One or more `destination` blocks as defined below.
     */
    destination: pulumi.Input<inputs.paloalto.LocalRulestackRuleDestination>;
    /**
     * Should this Rule be enabled? Defaults to `true`.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * The ID of the certificate for inbound inspection. Only valid when `decryptionRuleType` is set to `SSLInboundInspection`.
     */
    inspectionCertificateId?: pulumi.Input<string>;
    /**
     * Should Logging be enabled? Defaults to `false`.
     */
    loggingEnabled?: pulumi.Input<boolean>;
    /**
     * The name which should be used for this Palo Alto Local Rulestack Rule.
     */
    name?: pulumi.Input<string>;
    /**
     * Should the inverse of the Destination configuration be used. Defaults to `false`.
     */
    negateDestination?: pulumi.Input<boolean>;
    /**
     * Should the inverse of the Source configuration be used. Defaults to `false`.
     */
    negateSource?: pulumi.Input<boolean>;
    /**
     * The Priority of this rule. Rules are executed in numerical order. Changing this forces a new Palo Alto Local Rulestack Rule to be created.
     *
     * > **Note:** This is the primary identifier of a rule, as such it is not possible to change the Priority of a rule once created.
     */
    priority: pulumi.Input<number>;
    /**
     * The Protocol and port to use in the form `[protocol]:[portNumber]` e.g. `TCP:8080` or `UDP:53`. Conflicts with `protocolPorts`. Defaults to `application-default`.
     *
     * > **Note:** In 4.0 or later versions, the default of `protocol` will no longer be set by provider, exactly one of `protocol` and `protocolPorts` must be specified. You need to explicitly specify `protocol="application-default"` to keep the the current default of the `protocol`.
     */
    protocol?: pulumi.Input<string>;
    /**
     * Specifies a list of Protocol:Port entries. E.g. `[ "TCP:80", "UDP:5431" ]`. Conflicts with `protocol`.
     */
    protocolPorts?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The ID of the Local Rulestack in which to create this Rule. Changing this forces a new Palo Alto Local Rulestack Rule to be created.
     */
    rulestackId: pulumi.Input<string>;
    /**
     * One or more `source` blocks as defined below.
     */
    source: pulumi.Input<inputs.paloalto.LocalRulestackRuleSource>;
    /**
     * A mapping of tags which should be assigned to the Palo Alto Local Rulestack Rule.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
