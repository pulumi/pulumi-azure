// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { EndpointEventGridArgs, EndpointEventGridState } from "./endpointEventGrid";
export type EndpointEventGrid = import("./endpointEventGrid").EndpointEventGrid;
export const EndpointEventGrid: typeof import("./endpointEventGrid").EndpointEventGrid = null as any;
utilities.lazyLoad(exports, ["EndpointEventGrid"], () => require("./endpointEventGrid"));

export { EndpointEventHubArgs, EndpointEventHubState } from "./endpointEventHub";
export type EndpointEventHub = import("./endpointEventHub").EndpointEventHub;
export const EndpointEventHub: typeof import("./endpointEventHub").EndpointEventHub = null as any;
utilities.lazyLoad(exports, ["EndpointEventHub"], () => require("./endpointEventHub"));

export { EndpointServicebusArgs, EndpointServicebusState } from "./endpointServicebus";
export type EndpointServicebus = import("./endpointServicebus").EndpointServicebus;
export const EndpointServicebus: typeof import("./endpointServicebus").EndpointServicebus = null as any;
utilities.lazyLoad(exports, ["EndpointServicebus"], () => require("./endpointServicebus"));

export { GetInstanceArgs, GetInstanceResult, GetInstanceOutputArgs } from "./getInstance";
export const getInstance: typeof import("./getInstance").getInstance = null as any;
export const getInstanceOutput: typeof import("./getInstance").getInstanceOutput = null as any;
utilities.lazyLoad(exports, ["getInstance","getInstanceOutput"], () => require("./getInstance"));

export { InstanceArgs, InstanceState } from "./instance";
export type Instance = import("./instance").Instance;
export const Instance: typeof import("./instance").Instance = null as any;
utilities.lazyLoad(exports, ["Instance"], () => require("./instance"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "azure:digitaltwins/endpointEventGrid:EndpointEventGrid":
                return new EndpointEventGrid(name, <any>undefined, { urn })
            case "azure:digitaltwins/endpointEventHub:EndpointEventHub":
                return new EndpointEventHub(name, <any>undefined, { urn })
            case "azure:digitaltwins/endpointServicebus:EndpointServicebus":
                return new EndpointServicebus(name, <any>undefined, { urn })
            case "azure:digitaltwins/instance:Instance":
                return new Instance(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure", "digitaltwins/endpointEventGrid", _module)
pulumi.runtime.registerResourceModule("azure", "digitaltwins/endpointEventHub", _module)
pulumi.runtime.registerResourceModule("azure", "digitaltwins/endpointServicebus", _module)
pulumi.runtime.registerResourceModule("azure", "digitaltwins/instance", _module)
