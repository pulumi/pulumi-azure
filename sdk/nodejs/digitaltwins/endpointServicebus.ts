// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Manages a Digital Twins Service Bus Endpoint.
 *
 * ## Import
 *
 * Digital Twins Service Bus Endpoints can be imported using the `resource id`, e.g.
 *
 * ```sh
 *  $ pulumi import azure:digitaltwins/endpointServicebus:EndpointServicebus example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.DigitalTwins/digitalTwinsInstances/dt1/endpoints/ep1
 * ```
 */
export class EndpointServicebus extends pulumi.CustomResource {
    /**
     * Get an existing EndpointServicebus resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: EndpointServicebusState, opts?: pulumi.CustomResourceOptions): EndpointServicebus {
        return new EndpointServicebus(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure:digitaltwins/endpointServicebus:EndpointServicebus';

    /**
     * Returns true if the given object is an instance of EndpointServicebus.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is EndpointServicebus {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === EndpointServicebus.__pulumiType;
    }

    /**
     * The storage secret of the dead-lettering, whose format is `https://<storageAccountname>.blob.core.windows.net/<containerName>?<SASToken>`. When an endpoint can't deliver an event within a certain time period or after trying to deliver the event a certain number of times, it can send the undelivered event to a storage account.
     */
    public readonly deadLetterStorageSecret!: pulumi.Output<string | undefined>;
    /**
     * The ID of the Digital Twins Instance. Changing this forces a new Digital Twins Service Bus Endpoint to be created.
     */
    public readonly digitalTwinsId!: pulumi.Output<string>;
    /**
     * The name which should be used for this Digital Twins Service Bus Endpoint. Changing this forces a new Digital Twins Service Bus Endpoint to be created.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The primary connection string of the Service Bus Topic Authorization Rule with a minimum of `send` permission. .
     */
    public readonly servicebusPrimaryConnectionString!: pulumi.Output<string>;
    /**
     * The secondary connection string of the Service Bus Topic Authorization Rule with a minimum of `send` permission.
     */
    public readonly servicebusSecondaryConnectionString!: pulumi.Output<string>;

    /**
     * Create a EndpointServicebus resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: EndpointServicebusArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: EndpointServicebusArgs | EndpointServicebusState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as EndpointServicebusState | undefined;
            resourceInputs["deadLetterStorageSecret"] = state ? state.deadLetterStorageSecret : undefined;
            resourceInputs["digitalTwinsId"] = state ? state.digitalTwinsId : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["servicebusPrimaryConnectionString"] = state ? state.servicebusPrimaryConnectionString : undefined;
            resourceInputs["servicebusSecondaryConnectionString"] = state ? state.servicebusSecondaryConnectionString : undefined;
        } else {
            const args = argsOrState as EndpointServicebusArgs | undefined;
            if ((!args || args.digitalTwinsId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'digitalTwinsId'");
            }
            if ((!args || args.servicebusPrimaryConnectionString === undefined) && !opts.urn) {
                throw new Error("Missing required property 'servicebusPrimaryConnectionString'");
            }
            if ((!args || args.servicebusSecondaryConnectionString === undefined) && !opts.urn) {
                throw new Error("Missing required property 'servicebusSecondaryConnectionString'");
            }
            resourceInputs["deadLetterStorageSecret"] = args?.deadLetterStorageSecret ? pulumi.secret(args.deadLetterStorageSecret) : undefined;
            resourceInputs["digitalTwinsId"] = args ? args.digitalTwinsId : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["servicebusPrimaryConnectionString"] = args?.servicebusPrimaryConnectionString ? pulumi.secret(args.servicebusPrimaryConnectionString) : undefined;
            resourceInputs["servicebusSecondaryConnectionString"] = args?.servicebusSecondaryConnectionString ? pulumi.secret(args.servicebusSecondaryConnectionString) : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["deadLetterStorageSecret", "servicebusPrimaryConnectionString", "servicebusSecondaryConnectionString"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(EndpointServicebus.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering EndpointServicebus resources.
 */
export interface EndpointServicebusState {
    /**
     * The storage secret of the dead-lettering, whose format is `https://<storageAccountname>.blob.core.windows.net/<containerName>?<SASToken>`. When an endpoint can't deliver an event within a certain time period or after trying to deliver the event a certain number of times, it can send the undelivered event to a storage account.
     */
    deadLetterStorageSecret?: pulumi.Input<string>;
    /**
     * The ID of the Digital Twins Instance. Changing this forces a new Digital Twins Service Bus Endpoint to be created.
     */
    digitalTwinsId?: pulumi.Input<string>;
    /**
     * The name which should be used for this Digital Twins Service Bus Endpoint. Changing this forces a new Digital Twins Service Bus Endpoint to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * The primary connection string of the Service Bus Topic Authorization Rule with a minimum of `send` permission. .
     */
    servicebusPrimaryConnectionString?: pulumi.Input<string>;
    /**
     * The secondary connection string of the Service Bus Topic Authorization Rule with a minimum of `send` permission.
     */
    servicebusSecondaryConnectionString?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a EndpointServicebus resource.
 */
export interface EndpointServicebusArgs {
    /**
     * The storage secret of the dead-lettering, whose format is `https://<storageAccountname>.blob.core.windows.net/<containerName>?<SASToken>`. When an endpoint can't deliver an event within a certain time period or after trying to deliver the event a certain number of times, it can send the undelivered event to a storage account.
     */
    deadLetterStorageSecret?: pulumi.Input<string>;
    /**
     * The ID of the Digital Twins Instance. Changing this forces a new Digital Twins Service Bus Endpoint to be created.
     */
    digitalTwinsId: pulumi.Input<string>;
    /**
     * The name which should be used for this Digital Twins Service Bus Endpoint. Changing this forces a new Digital Twins Service Bus Endpoint to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * The primary connection string of the Service Bus Topic Authorization Rule with a minimum of `send` permission. .
     */
    servicebusPrimaryConnectionString: pulumi.Input<string>;
    /**
     * The secondary connection string of the Service Bus Topic Authorization Rule with a minimum of `send` permission.
     */
    servicebusSecondaryConnectionString: pulumi.Input<string>;
}
