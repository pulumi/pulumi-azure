// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Manages a Digital Twins Time Series Database Connection.
 *
 * ## Import
 *
 * Digital Twins Time Series Database Connections can be imported using the `resource id`, e.g.
 *
 * ```sh
 *  $ pulumi import azure:digitaltwins/timeSeriesDatabaseConnection:TimeSeriesDatabaseConnection example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.DigitalTwins/digitalTwinsInstances/dt1/timeSeriesDatabaseConnections/connection1
 * ```
 */
export class TimeSeriesDatabaseConnection extends pulumi.CustomResource {
    /**
     * Get an existing TimeSeriesDatabaseConnection resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: TimeSeriesDatabaseConnectionState, opts?: pulumi.CustomResourceOptions): TimeSeriesDatabaseConnection {
        return new TimeSeriesDatabaseConnection(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure:digitaltwins/timeSeriesDatabaseConnection:TimeSeriesDatabaseConnection';

    /**
     * Returns true if the given object is an instance of TimeSeriesDatabaseConnection.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is TimeSeriesDatabaseConnection {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === TimeSeriesDatabaseConnection.__pulumiType;
    }

    /**
     * The ID of the Digital Twins. Changing this forces a new resource to be created.
     */
    public readonly digitalTwinsId!: pulumi.Output<string>;
    /**
     * Name of the Event Hub Consumer Group. Changing this forces a new resource to be created. Defaults to `$Default`.
     */
    public readonly eventhubConsumerGroupName!: pulumi.Output<string | undefined>;
    /**
     * Name of the Event Hub. Changing this forces a new resource to be created.
     */
    public readonly eventhubName!: pulumi.Output<string>;
    /**
     * URI of the Event Hub Namespace. Changing this forces a new resource to be created.
     */
    public readonly eventhubNamespaceEndpointUri!: pulumi.Output<string>;
    /**
     * The ID of the Event Hub Namespace. Changing this forces a new resource to be created.
     */
    public readonly eventhubNamespaceId!: pulumi.Output<string>;
    /**
     * The ID of the Kusto Cluster. Changing this forces a new resource to be created.
     */
    public readonly kustoClusterId!: pulumi.Output<string>;
    /**
     * URI of the Kusto Cluster. Changing this forces a new resource to be created.
     */
    public readonly kustoClusterUri!: pulumi.Output<string>;
    /**
     * Name of the Kusto Database. Changing this forces a new resource to be created.
     */
    public readonly kustoDatabaseName!: pulumi.Output<string>;
    /**
     * Name of the Kusto Table. Changing this forces a new resource to be created.
     */
    public readonly kustoTableName!: pulumi.Output<string>;
    /**
     * The name which should be used for this Digital Twins Time Series Database Connection. Changing this forces a new resource to be created.
     */
    public readonly name!: pulumi.Output<string>;

    /**
     * Create a TimeSeriesDatabaseConnection resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: TimeSeriesDatabaseConnectionArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: TimeSeriesDatabaseConnectionArgs | TimeSeriesDatabaseConnectionState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as TimeSeriesDatabaseConnectionState | undefined;
            resourceInputs["digitalTwinsId"] = state ? state.digitalTwinsId : undefined;
            resourceInputs["eventhubConsumerGroupName"] = state ? state.eventhubConsumerGroupName : undefined;
            resourceInputs["eventhubName"] = state ? state.eventhubName : undefined;
            resourceInputs["eventhubNamespaceEndpointUri"] = state ? state.eventhubNamespaceEndpointUri : undefined;
            resourceInputs["eventhubNamespaceId"] = state ? state.eventhubNamespaceId : undefined;
            resourceInputs["kustoClusterId"] = state ? state.kustoClusterId : undefined;
            resourceInputs["kustoClusterUri"] = state ? state.kustoClusterUri : undefined;
            resourceInputs["kustoDatabaseName"] = state ? state.kustoDatabaseName : undefined;
            resourceInputs["kustoTableName"] = state ? state.kustoTableName : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
        } else {
            const args = argsOrState as TimeSeriesDatabaseConnectionArgs | undefined;
            if ((!args || args.digitalTwinsId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'digitalTwinsId'");
            }
            if ((!args || args.eventhubName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'eventhubName'");
            }
            if ((!args || args.eventhubNamespaceEndpointUri === undefined) && !opts.urn) {
                throw new Error("Missing required property 'eventhubNamespaceEndpointUri'");
            }
            if ((!args || args.eventhubNamespaceId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'eventhubNamespaceId'");
            }
            if ((!args || args.kustoClusterId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'kustoClusterId'");
            }
            if ((!args || args.kustoClusterUri === undefined) && !opts.urn) {
                throw new Error("Missing required property 'kustoClusterUri'");
            }
            if ((!args || args.kustoDatabaseName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'kustoDatabaseName'");
            }
            resourceInputs["digitalTwinsId"] = args ? args.digitalTwinsId : undefined;
            resourceInputs["eventhubConsumerGroupName"] = args ? args.eventhubConsumerGroupName : undefined;
            resourceInputs["eventhubName"] = args ? args.eventhubName : undefined;
            resourceInputs["eventhubNamespaceEndpointUri"] = args ? args.eventhubNamespaceEndpointUri : undefined;
            resourceInputs["eventhubNamespaceId"] = args ? args.eventhubNamespaceId : undefined;
            resourceInputs["kustoClusterId"] = args ? args.kustoClusterId : undefined;
            resourceInputs["kustoClusterUri"] = args ? args.kustoClusterUri : undefined;
            resourceInputs["kustoDatabaseName"] = args ? args.kustoDatabaseName : undefined;
            resourceInputs["kustoTableName"] = args ? args.kustoTableName : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(TimeSeriesDatabaseConnection.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering TimeSeriesDatabaseConnection resources.
 */
export interface TimeSeriesDatabaseConnectionState {
    /**
     * The ID of the Digital Twins. Changing this forces a new resource to be created.
     */
    digitalTwinsId?: pulumi.Input<string>;
    /**
     * Name of the Event Hub Consumer Group. Changing this forces a new resource to be created. Defaults to `$Default`.
     */
    eventhubConsumerGroupName?: pulumi.Input<string>;
    /**
     * Name of the Event Hub. Changing this forces a new resource to be created.
     */
    eventhubName?: pulumi.Input<string>;
    /**
     * URI of the Event Hub Namespace. Changing this forces a new resource to be created.
     */
    eventhubNamespaceEndpointUri?: pulumi.Input<string>;
    /**
     * The ID of the Event Hub Namespace. Changing this forces a new resource to be created.
     */
    eventhubNamespaceId?: pulumi.Input<string>;
    /**
     * The ID of the Kusto Cluster. Changing this forces a new resource to be created.
     */
    kustoClusterId?: pulumi.Input<string>;
    /**
     * URI of the Kusto Cluster. Changing this forces a new resource to be created.
     */
    kustoClusterUri?: pulumi.Input<string>;
    /**
     * Name of the Kusto Database. Changing this forces a new resource to be created.
     */
    kustoDatabaseName?: pulumi.Input<string>;
    /**
     * Name of the Kusto Table. Changing this forces a new resource to be created.
     */
    kustoTableName?: pulumi.Input<string>;
    /**
     * The name which should be used for this Digital Twins Time Series Database Connection. Changing this forces a new resource to be created.
     */
    name?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a TimeSeriesDatabaseConnection resource.
 */
export interface TimeSeriesDatabaseConnectionArgs {
    /**
     * The ID of the Digital Twins. Changing this forces a new resource to be created.
     */
    digitalTwinsId: pulumi.Input<string>;
    /**
     * Name of the Event Hub Consumer Group. Changing this forces a new resource to be created. Defaults to `$Default`.
     */
    eventhubConsumerGroupName?: pulumi.Input<string>;
    /**
     * Name of the Event Hub. Changing this forces a new resource to be created.
     */
    eventhubName: pulumi.Input<string>;
    /**
     * URI of the Event Hub Namespace. Changing this forces a new resource to be created.
     */
    eventhubNamespaceEndpointUri: pulumi.Input<string>;
    /**
     * The ID of the Event Hub Namespace. Changing this forces a new resource to be created.
     */
    eventhubNamespaceId: pulumi.Input<string>;
    /**
     * The ID of the Kusto Cluster. Changing this forces a new resource to be created.
     */
    kustoClusterId: pulumi.Input<string>;
    /**
     * URI of the Kusto Cluster. Changing this forces a new resource to be created.
     */
    kustoClusterUri: pulumi.Input<string>;
    /**
     * Name of the Kusto Database. Changing this forces a new resource to be created.
     */
    kustoDatabaseName: pulumi.Input<string>;
    /**
     * Name of the Kusto Table. Changing this forces a new resource to be created.
     */
    kustoTableName?: pulumi.Input<string>;
    /**
     * The name which should be used for this Digital Twins Time Series Database Connection. Changing this forces a new resource to be created.
     */
    name?: pulumi.Input<string>;
}
