// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Manages a Standby Pool for Virtual Machine Scale Sets.
 * > **Note:** please follow the prerequisites mentioned in this [article](https://learn.microsoft.com/azure/virtual-machine-scale-sets/standby-pools-create?tabs=portal#prerequisites) before using this resource.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = new azure.core.ResourceGroup("example", {
 *     name: "example-resources",
 *     location: "West Europe",
 * });
 * const exampleOrchestratedVirtualMachineScaleSet = new azure.compute.OrchestratedVirtualMachineScaleSet("example", {
 *     name: "example-ovmss",
 *     location: example.location,
 *     resourceGroupName: example.name,
 *     platformFaultDomainCount: 1,
 *     zones: ["1"],
 * });
 * const exampleScaleSetStandbyPool = new azure.compute.ScaleSetStandbyPool("example", {
 *     name: "example-spsvmp",
 *     resourceGroupName: example.name,
 *     location: "West Europe",
 *     attachedVirtualMachineScaleSetId: exampleOrchestratedVirtualMachineScaleSet.id,
 *     virtualMachineState: "Running",
 *     elasticityProfile: {
 *         maxReadyCapacity: 10,
 *         minReadyCapacity: 5,
 *     },
 *     tags: {
 *         key: "value",
 *     },
 * });
 * ```
 *
 * ## API Providers
 *
 * <!-- This section is generated, changes will be overwritten -->
 * This resource uses the following Azure API Providers:
 *
 * * `Microsoft.StandbyPool` - 2025-03-01
 *
 * ## Import
 *
 * Standby Pool can be imported using the `resource id`, e.g.
 *
 * ```sh
 * $ pulumi import azure:compute/scaleSetStandbyPool:ScaleSetStandbyPool example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resourceGroup1/providers/Microsoft.StandbyPool/standbyVirtualMachinePools/standbyVirtualMachinePool1
 * ```
 */
export class ScaleSetStandbyPool extends pulumi.CustomResource {
    /**
     * Get an existing ScaleSetStandbyPool resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ScaleSetStandbyPoolState, opts?: pulumi.CustomResourceOptions): ScaleSetStandbyPool {
        return new ScaleSetStandbyPool(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure:compute/scaleSetStandbyPool:ScaleSetStandbyPool';

    /**
     * Returns true if the given object is an instance of ScaleSetStandbyPool.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ScaleSetStandbyPool {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ScaleSetStandbyPool.__pulumiType;
    }

    /**
     * Specifies the fully qualified resource ID of a virtual machine scale set the pool is attached to.
     */
    declare public readonly attachedVirtualMachineScaleSetId: pulumi.Output<string>;
    /**
     * An `elasticityProfile` block as defined below.
     */
    declare public readonly elasticityProfile: pulumi.Output<outputs.compute.ScaleSetStandbyPoolElasticityProfile>;
    /**
     * Specifies the Azure Region where the Standby Pool should exist. Changing this forces a new Standby Pool to be created.
     */
    declare public readonly location: pulumi.Output<string>;
    /**
     * Specifies the name which should be used for this Standby Pool. Changing this forces a new Standby Pool to be created.
     */
    declare public readonly name: pulumi.Output<string>;
    /**
     * Specifies the name of the Resource Group where the Standby Pool should exist. Changing this forces a new Standby Pool to be created.
     */
    declare public readonly resourceGroupName: pulumi.Output<string>;
    /**
     * A mapping of tags which should be assigned to the Standby Pool.
     */
    declare public readonly tags: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * Specifies the desired state of virtual machines in the pool. Possible values are `Running` and `Deallocated`.
     */
    declare public readonly virtualMachineState: pulumi.Output<string>;

    /**
     * Create a ScaleSetStandbyPool resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ScaleSetStandbyPoolArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ScaleSetStandbyPoolArgs | ScaleSetStandbyPoolState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ScaleSetStandbyPoolState | undefined;
            resourceInputs["attachedVirtualMachineScaleSetId"] = state?.attachedVirtualMachineScaleSetId;
            resourceInputs["elasticityProfile"] = state?.elasticityProfile;
            resourceInputs["location"] = state?.location;
            resourceInputs["name"] = state?.name;
            resourceInputs["resourceGroupName"] = state?.resourceGroupName;
            resourceInputs["tags"] = state?.tags;
            resourceInputs["virtualMachineState"] = state?.virtualMachineState;
        } else {
            const args = argsOrState as ScaleSetStandbyPoolArgs | undefined;
            if (args?.attachedVirtualMachineScaleSetId === undefined && !opts.urn) {
                throw new Error("Missing required property 'attachedVirtualMachineScaleSetId'");
            }
            if (args?.elasticityProfile === undefined && !opts.urn) {
                throw new Error("Missing required property 'elasticityProfile'");
            }
            if (args?.resourceGroupName === undefined && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            if (args?.virtualMachineState === undefined && !opts.urn) {
                throw new Error("Missing required property 'virtualMachineState'");
            }
            resourceInputs["attachedVirtualMachineScaleSetId"] = args?.attachedVirtualMachineScaleSetId;
            resourceInputs["elasticityProfile"] = args?.elasticityProfile;
            resourceInputs["location"] = args?.location;
            resourceInputs["name"] = args?.name;
            resourceInputs["resourceGroupName"] = args?.resourceGroupName;
            resourceInputs["tags"] = args?.tags;
            resourceInputs["virtualMachineState"] = args?.virtualMachineState;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ScaleSetStandbyPool.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ScaleSetStandbyPool resources.
 */
export interface ScaleSetStandbyPoolState {
    /**
     * Specifies the fully qualified resource ID of a virtual machine scale set the pool is attached to.
     */
    attachedVirtualMachineScaleSetId?: pulumi.Input<string>;
    /**
     * An `elasticityProfile` block as defined below.
     */
    elasticityProfile?: pulumi.Input<inputs.compute.ScaleSetStandbyPoolElasticityProfile>;
    /**
     * Specifies the Azure Region where the Standby Pool should exist. Changing this forces a new Standby Pool to be created.
     */
    location?: pulumi.Input<string>;
    /**
     * Specifies the name which should be used for this Standby Pool. Changing this forces a new Standby Pool to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * Specifies the name of the Resource Group where the Standby Pool should exist. Changing this forces a new Standby Pool to be created.
     */
    resourceGroupName?: pulumi.Input<string>;
    /**
     * A mapping of tags which should be assigned to the Standby Pool.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Specifies the desired state of virtual machines in the pool. Possible values are `Running` and `Deallocated`.
     */
    virtualMachineState?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ScaleSetStandbyPool resource.
 */
export interface ScaleSetStandbyPoolArgs {
    /**
     * Specifies the fully qualified resource ID of a virtual machine scale set the pool is attached to.
     */
    attachedVirtualMachineScaleSetId: pulumi.Input<string>;
    /**
     * An `elasticityProfile` block as defined below.
     */
    elasticityProfile: pulumi.Input<inputs.compute.ScaleSetStandbyPoolElasticityProfile>;
    /**
     * Specifies the Azure Region where the Standby Pool should exist. Changing this forces a new Standby Pool to be created.
     */
    location?: pulumi.Input<string>;
    /**
     * Specifies the name which should be used for this Standby Pool. Changing this forces a new Standby Pool to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * Specifies the name of the Resource Group where the Standby Pool should exist. Changing this forces a new Standby Pool to be created.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * A mapping of tags which should be assigned to the Standby Pool.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Specifies the desired state of virtual machines in the pool. Possible values are `Running` and `Deallocated`.
     */
    virtualMachineState: pulumi.Input<string>;
}
