// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Manages a Windows Virtual Machine Scale Set.
 *
 * ## Disclaimers
 *
 * > **NOTE:**: All arguments including the administrator login and password will be stored in the raw state as plain-text.
 *
 * > **NOTE:** This provider will automatically update & reimage the nodes in the Scale Set (if Required) during an Update - this behaviour can be configured using the `features` setting within the Provider block.
 *
 * > **NOTE:** This resource does not support Unmanaged Disks. If you need to use Unmanaged Disks you can continue to use the `azure.compute.ScaleSet` resource instead
 *
 * ## Example Usage
 *
 * This example provisions a basic Windows Virtual Machine Scale Set on an internal network.
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const exampleResourceGroup = new azure.core.ResourceGroup("exampleResourceGroup", {location: "West Europe"});
 * const exampleVirtualNetwork = new azure.network.VirtualNetwork("exampleVirtualNetwork", {
 *     resourceGroupName: exampleResourceGroup.name,
 *     location: exampleResourceGroup.location,
 *     addressSpaces: ["10.0.0.0/16"],
 * });
 * const internal = new azure.network.Subnet("internal", {
 *     resourceGroupName: exampleResourceGroup.name,
 *     virtualNetworkName: exampleVirtualNetwork.name,
 *     addressPrefixes: ["10.0.2.0/24"],
 * });
 * const exampleWindowsVirtualMachineScaleSet = new azure.compute.WindowsVirtualMachineScaleSet("exampleWindowsVirtualMachineScaleSet", {
 *     resourceGroupName: exampleResourceGroup.name,
 *     location: exampleResourceGroup.location,
 *     sku: "Standard_F2",
 *     instances: 1,
 *     adminPassword: "P@55w0rd1234!",
 *     adminUsername: "adminuser",
 *     sourceImageReference: {
 *         publisher: "MicrosoftWindowsServer",
 *         offer: "WindowsServer",
 *         sku: "2016-Datacenter-Server-Core",
 *         version: "latest",
 *     },
 *     osDisk: {
 *         storageAccountType: "Standard_LRS",
 *         caching: "ReadWrite",
 *     },
 *     networkInterfaces: [{
 *         name: "example",
 *         primary: true,
 *         ipConfigurations: [{
 *             name: "internal",
 *             primary: true,
 *             subnetId: internal.id,
 *         }],
 *     }],
 * });
 * ```
 *
 * ## Import
 *
 * Windows Virtual Machine Scale Sets can be imported using the `resource id`, e.g.
 *
 * ```sh
 *  $ pulumi import azure:compute/windowsVirtualMachineScaleSet:WindowsVirtualMachineScaleSet example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/mygroup1/providers/Microsoft.Compute/virtualMachineScaleSets/scaleset1
 * ```
 */
export class WindowsVirtualMachineScaleSet extends pulumi.CustomResource {
    /**
     * Get an existing WindowsVirtualMachineScaleSet resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: WindowsVirtualMachineScaleSetState, opts?: pulumi.CustomResourceOptions): WindowsVirtualMachineScaleSet {
        return new WindowsVirtualMachineScaleSet(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure:compute/windowsVirtualMachineScaleSet:WindowsVirtualMachineScaleSet';

    /**
     * Returns true if the given object is an instance of WindowsVirtualMachineScaleSet.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is WindowsVirtualMachineScaleSet {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === WindowsVirtualMachineScaleSet.__pulumiType;
    }

    /**
     * An `additionalCapabilities` block as defined below.
     */
    public readonly additionalCapabilities!: pulumi.Output<outputs.compute.WindowsVirtualMachineScaleSetAdditionalCapabilities | undefined>;
    /**
     * One or more `additionalUnattendContent` blocks as defined below. Changing this forces a new resource to be created.
     */
    public readonly additionalUnattendContents!: pulumi.Output<outputs.compute.WindowsVirtualMachineScaleSetAdditionalUnattendContent[] | undefined>;
    /**
     * The Password which should be used for the local-administrator on this Virtual Machine. Changing this forces a new resource to be created.
     */
    public readonly adminPassword!: pulumi.Output<string>;
    /**
     * The username of the local administrator on each Virtual Machine Scale Set instance. Changing this forces a new resource to be created.
     */
    public readonly adminUsername!: pulumi.Output<string>;
    /**
     * An `automaticInstanceRepair` block as defined below. To enable the automatic instance repair, this Virtual Machine Scale Set must have a valid `healthProbeId` or an [Application Health Extension](https://docs.microsoft.com/azure/virtual-machine-scale-sets/virtual-machine-scale-sets-health-extension).
     *
     * > **NOTE:** For more information about Automatic Instance Repair, please refer to [this doc](https://docs.microsoft.com/azure/virtual-machine-scale-sets/virtual-machine-scale-sets-automatic-instance-repairs).
     */
    public readonly automaticInstanceRepair!: pulumi.Output<outputs.compute.WindowsVirtualMachineScaleSetAutomaticInstanceRepair>;
    /**
     * An `automaticOsUpgradePolicy` block as defined below. This can only be specified when `upgradeMode` is set to either `Automatic` or `Rolling`.
     */
    public readonly automaticOsUpgradePolicy!: pulumi.Output<outputs.compute.WindowsVirtualMachineScaleSetAutomaticOsUpgradePolicy | undefined>;
    /**
     * A `bootDiagnostics` block as defined below.
     */
    public readonly bootDiagnostics!: pulumi.Output<outputs.compute.WindowsVirtualMachineScaleSetBootDiagnostics | undefined>;
    /**
     * Specifies the ID of the Capacity Reservation Group which the Virtual Machine Scale Set should be allocated to. Changing this forces a new resource to be created.
     *
     * > **NOTE:** `capacityReservationGroupId` cannot be used with `proximityPlacementGroupId`
     *
     * > **NOTE:** `singlePlacementGroup` must be set to `false` when `capacityReservationGroupId` is specified.
     */
    public readonly capacityReservationGroupId!: pulumi.Output<string | undefined>;
    /**
     * The prefix which should be used for the name of the Virtual Machines in this Scale Set. If unspecified this defaults to the value for the `name` field. If the value of the `name` field is not a valid `computerNamePrefix`, then you must specify `computerNamePrefix`. Changing this forces a new resource to be created.
     */
    public readonly computerNamePrefix!: pulumi.Output<string>;
    /**
     * The Base64-Encoded Custom Data which should be used for this Virtual Machine Scale Set.
     *
     * > **NOTE:** When Custom Data has been configured, it's not possible to remove it without tainting the Virtual Machine Scale Set, due to a limitation of the Azure API.
     */
    public readonly customData!: pulumi.Output<string | undefined>;
    /**
     * One or more `dataDisk` blocks as defined below.
     */
    public readonly dataDisks!: pulumi.Output<outputs.compute.WindowsVirtualMachineScaleSetDataDisk[] | undefined>;
    /**
     * Should Virtual Machine Extensions be run on Overprovisioned Virtual Machines in the Scale Set? Defaults to `false`.
     */
    public readonly doNotRunExtensionsOnOverprovisionedMachines!: pulumi.Output<boolean | undefined>;
    /**
     * Specifies the Edge Zone within the Azure Region where this Windows Virtual Machine Scale Set should exist. Changing this forces a new Windows Virtual Machine Scale Set to be created.
     */
    public readonly edgeZone!: pulumi.Output<string | undefined>;
    /**
     * Are automatic updates enabled for this Virtual Machine? Defaults to `true`.
     */
    public readonly enableAutomaticUpdates!: pulumi.Output<boolean | undefined>;
    /**
     * Should all of the disks (including the temp disk) attached to this Virtual Machine be encrypted by enabling Encryption at Host?
     */
    public readonly encryptionAtHostEnabled!: pulumi.Output<boolean | undefined>;
    /**
     * Specifies the eviction policy for Virtual Machines in this Scale Set. Possible values are `Deallocate` and `Delete`. Changing this forces a new resource to be created.
     *
     * > **NOTE:** This can only be configured when `priority` is set to `Spot`.
     */
    public readonly evictionPolicy!: pulumi.Output<string | undefined>;
    /**
     * Should extension operations be allowed on the Virtual Machine Scale Set? Possible values are `true` or `false`. Defaults to `true`. Changing this forces a new Windows Virtual Machine Scale Set to be created.
     *
     * > **NOTE:** `extensionOperationsEnabled` may only be set to `false` if there are no extensions defined in the `extension` field.
     */
    public readonly extensionOperationsEnabled!: pulumi.Output<boolean>;
    /**
     * One or more `extension` blocks as defined below
     */
    public readonly extensions!: pulumi.Output<outputs.compute.WindowsVirtualMachineScaleSetExtension[]>;
    /**
     * Specifies the duration allocated for all extensions to start. The time duration should be between `15` minutes and `120` minutes (inclusive) and should be specified in ISO 8601 format. Defaults to `PT1H30M`.
     */
    public readonly extensionsTimeBudget!: pulumi.Output<string | undefined>;
    /**
     * One or more `galleryApplication` blocks as defined below.
     */
    public readonly galleryApplication!: pulumi.Output<outputs.compute.WindowsVirtualMachineScaleSetGalleryApplication[]>;
    /**
     * @deprecated `gallery_applications` has been renamed to `gallery_application` and will be deprecated in 4.0
     */
    public readonly galleryApplications!: pulumi.Output<outputs.compute.WindowsVirtualMachineScaleSetGalleryApplication[]>;
    /**
     * The ID of a Load Balancer Probe which should be used to determine the health of an instance. This is Required and can only be specified when `upgradeMode` is set to `Automatic` or `Rolling`.
     */
    public readonly healthProbeId!: pulumi.Output<string | undefined>;
    /**
     * Specifies the ID of the dedicated host group that the virtual machine scale set resides in. Changing this forces a new resource to be created.
     */
    public readonly hostGroupId!: pulumi.Output<string | undefined>;
    /**
     * An `identity` block as defined below.
     */
    public readonly identity!: pulumi.Output<outputs.compute.WindowsVirtualMachineScaleSetIdentity | undefined>;
    /**
     * The number of Virtual Machines in the Scale Set.
     *
     * > **NOTE:** If you're using AutoScaling, you may wish to use [`Ignore Changes` functionality](https://www.pulumi.com/docs/intro/concepts/programming-model/#ignorechanges) to ignore changes to this field.
     */
    public readonly instances!: pulumi.Output<number>;
    /**
     * Specifies the type of on-premise license (also known as [Azure Hybrid Use Benefit](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-hybrid-use-benefit-licensing)) which should be used for this Virtual Machine Scale Set. Possible values are `None`, `Windows_Client` and `Windows_Server`.
     */
    public readonly licenseType!: pulumi.Output<string | undefined>;
    /**
     * The Azure location where the Windows Virtual Machine Scale Set should exist. Changing this forces a new resource to be created.
     */
    public readonly location!: pulumi.Output<string>;
    /**
     * The maximum price you're willing to pay for each Virtual Machine in this Scale Set, in US Dollars; which must be greater than the current spot price. If this bid price falls below the current spot price the Virtual Machines in the Scale Set will be evicted using the `evictionPolicy`. Defaults to `-1`, which means that each Virtual Machine in the Scale Set should not be evicted for price reasons.
     *
     * > **NOTE:** This can only be configured when `priority` is set to `Spot`.
     */
    public readonly maxBidPrice!: pulumi.Output<number | undefined>;
    /**
     * The name of the Windows Virtual Machine Scale Set. Changing this forces a new resource to be created.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * One or more `networkInterface` blocks as defined below.
     */
    public readonly networkInterfaces!: pulumi.Output<outputs.compute.WindowsVirtualMachineScaleSetNetworkInterface[]>;
    /**
     * An `osDisk` block as defined below.
     */
    public readonly osDisk!: pulumi.Output<outputs.compute.WindowsVirtualMachineScaleSetOsDisk>;
    /**
     * Should Azure over-provision Virtual Machines in this Scale Set? This means that multiple Virtual Machines will be provisioned and Azure will keep the instances which become available first - which improves provisioning success rates and improves deployment time. You're not billed for these over-provisioned VM's and they don't count towards the Subscription Quota. Defaults to `true`.
     */
    public readonly overprovision!: pulumi.Output<boolean | undefined>;
    /**
     * A `plan` block as defined below. Changing this forces a new resource to be created.
     *
     * > **NOTE:** When using an image from Azure Marketplace a `plan` must be specified.
     */
    public readonly plan!: pulumi.Output<outputs.compute.WindowsVirtualMachineScaleSetPlan | undefined>;
    /**
     * Specifies the number of fault domains that are used by this Linux Virtual Machine Scale Set. Changing this forces a new resource to be created.
     */
    public readonly platformFaultDomainCount!: pulumi.Output<number>;
    /**
     * The Priority of this Virtual Machine Scale Set. Possible values are `Regular` and `Spot`. Defaults to `Regular`. Changing this value forces a new resource.
     *
     * > **NOTE:** When `priority` is set to `Spot` an `evictionPolicy` must be specified.
     */
    public readonly priority!: pulumi.Output<string | undefined>;
    /**
     * Should the Azure VM Agent be provisioned on each Virtual Machine in the Scale Set? Defaults to `true`. Changing this value forces a new resource to be created.
     */
    public readonly provisionVmAgent!: pulumi.Output<boolean | undefined>;
    /**
     * The ID of the Proximity Placement Group in which the Virtual Machine Scale Set should be assigned to. Changing this forces a new resource to be created.
     */
    public readonly proximityPlacementGroupId!: pulumi.Output<string | undefined>;
    /**
     * The name of the Resource Group in which the Windows Virtual Machine Scale Set should be exist. Changing this forces a new resource to be created.
     */
    public readonly resourceGroupName!: pulumi.Output<string>;
    /**
     * A `rollingUpgradePolicy` block as defined below. This is Required and can only be specified when `upgradeMode` is set to `Automatic` or `Rolling`. Changing this forces a new resource to be created.
     */
    public readonly rollingUpgradePolicy!: pulumi.Output<outputs.compute.WindowsVirtualMachineScaleSetRollingUpgradePolicy | undefined>;
    /**
     * A `scaleIn` block as defined below.
     */
    public readonly scaleIn!: pulumi.Output<outputs.compute.WindowsVirtualMachineScaleSetScaleIn>;
    /**
     * @deprecated `scale_in_policy` will be removed in favour of the `scale_in` code block in version 4.0 of the AzureRM Provider.
     */
    public readonly scaleInPolicy!: pulumi.Output<string>;
    /**
     * One or more `secret` blocks as defined below.
     */
    public readonly secrets!: pulumi.Output<outputs.compute.WindowsVirtualMachineScaleSetSecret[] | undefined>;
    /**
     * Specifies if Secure Boot and Trusted Launch is enabled for the Virtual Machine. Changing this forces a new resource to be created.
     */
    public readonly secureBootEnabled!: pulumi.Output<boolean | undefined>;
    /**
     * Should this Virtual Machine Scale Set be limited to a Single Placement Group, which means the number of instances will be capped at 100 Virtual Machines. Defaults to `true`.
     */
    public readonly singlePlacementGroup!: pulumi.Output<boolean | undefined>;
    /**
     * The Virtual Machine SKU for the Scale Set, such as `Standard_F2`.
     */
    public readonly sku!: pulumi.Output<string>;
    /**
     * The ID of an Image which each Virtual Machine in this Scale Set should be based on. Possible Image ID types include `Image ID`, `Shared Image ID`, `Shared Image Version ID`, `Community Gallery Image ID`, `Community Gallery Image Version ID`, `Shared Gallery Image ID` and `Shared Gallery Image Version ID`.
     *
     * > **NOTE:** One of either `sourceImageId` or `sourceImageReference` must be set.
     */
    public readonly sourceImageId!: pulumi.Output<string | undefined>;
    /**
     * A `sourceImageReference` block as defined below.
     *
     * > **NOTE:** One of either `sourceImageId` or `sourceImageReference` must be set.
     */
    public readonly sourceImageReference!: pulumi.Output<outputs.compute.WindowsVirtualMachineScaleSetSourceImageReference | undefined>;
    /**
     * A `spotRestore` block as defined below.
     */
    public readonly spotRestore!: pulumi.Output<outputs.compute.WindowsVirtualMachineScaleSetSpotRestore>;
    /**
     * A mapping of tags which should be assigned to this Virtual Machine Scale Set.
     */
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * A `terminateNotification` block as defined below.
     *
     * > **Note:** This property has been deprecated in favour of the `terminationNotification` property and will be removed in version 4.0 of the provider.
     *
     * @deprecated `terminate_notification` has been renamed to `termination_notification` and will be removed in 4.0.
     */
    public readonly terminateNotification!: pulumi.Output<outputs.compute.WindowsVirtualMachineScaleSetTerminateNotification>;
    /**
     * A `terminationNotification` block as defined below.
     */
    public readonly terminationNotification!: pulumi.Output<outputs.compute.WindowsVirtualMachineScaleSetTerminationNotification>;
    /**
     * Specifies the time zone of the virtual machine, [the possible values are defined here](https://jackstromberg.com/2017/01/list-of-time-zones-consumed-by-azure/).
     */
    public readonly timezone!: pulumi.Output<string | undefined>;
    /**
     * The Unique ID for this Windows Virtual Machine Scale Set.
     */
    public /*out*/ readonly uniqueId!: pulumi.Output<string>;
    public readonly upgradeMode!: pulumi.Output<string | undefined>;
    /**
     * The Base64-Encoded User Data which should be used for this Virtual Machine Scale Set.
     */
    public readonly userData!: pulumi.Output<string | undefined>;
    /**
     * Specifies if vTPM (Virtual Trusted Platform Module) and Trusted Launch is enabled for the Virtual Machine. Changing this forces a new resource to be created.
     */
    public readonly vtpmEnabled!: pulumi.Output<boolean | undefined>;
    /**
     * One or more `winrmListener` blocks as defined below. Changing this forces a new resource to be created.
     */
    public readonly winrmListeners!: pulumi.Output<outputs.compute.WindowsVirtualMachineScaleSetWinrmListener[] | undefined>;
    /**
     * Should the Virtual Machines in this Scale Set be strictly evenly distributed across Availability Zones? Defaults to `false`. Changing this forces a new resource to be created.
     *
     * > **NOTE:** This can only be set to `true` when one or more `zones` are configured.
     */
    public readonly zoneBalance!: pulumi.Output<boolean | undefined>;
    /**
     * Specifies a list of Availability Zones in which this Windows Virtual Machine Scale Set should be located. Changing this forces a new Windows Virtual Machine Scale Set to be created.
     */
    public readonly zones!: pulumi.Output<string[] | undefined>;

    /**
     * Create a WindowsVirtualMachineScaleSet resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: WindowsVirtualMachineScaleSetArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: WindowsVirtualMachineScaleSetArgs | WindowsVirtualMachineScaleSetState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as WindowsVirtualMachineScaleSetState | undefined;
            resourceInputs["additionalCapabilities"] = state ? state.additionalCapabilities : undefined;
            resourceInputs["additionalUnattendContents"] = state ? state.additionalUnattendContents : undefined;
            resourceInputs["adminPassword"] = state ? state.adminPassword : undefined;
            resourceInputs["adminUsername"] = state ? state.adminUsername : undefined;
            resourceInputs["automaticInstanceRepair"] = state ? state.automaticInstanceRepair : undefined;
            resourceInputs["automaticOsUpgradePolicy"] = state ? state.automaticOsUpgradePolicy : undefined;
            resourceInputs["bootDiagnostics"] = state ? state.bootDiagnostics : undefined;
            resourceInputs["capacityReservationGroupId"] = state ? state.capacityReservationGroupId : undefined;
            resourceInputs["computerNamePrefix"] = state ? state.computerNamePrefix : undefined;
            resourceInputs["customData"] = state ? state.customData : undefined;
            resourceInputs["dataDisks"] = state ? state.dataDisks : undefined;
            resourceInputs["doNotRunExtensionsOnOverprovisionedMachines"] = state ? state.doNotRunExtensionsOnOverprovisionedMachines : undefined;
            resourceInputs["edgeZone"] = state ? state.edgeZone : undefined;
            resourceInputs["enableAutomaticUpdates"] = state ? state.enableAutomaticUpdates : undefined;
            resourceInputs["encryptionAtHostEnabled"] = state ? state.encryptionAtHostEnabled : undefined;
            resourceInputs["evictionPolicy"] = state ? state.evictionPolicy : undefined;
            resourceInputs["extensionOperationsEnabled"] = state ? state.extensionOperationsEnabled : undefined;
            resourceInputs["extensions"] = state ? state.extensions : undefined;
            resourceInputs["extensionsTimeBudget"] = state ? state.extensionsTimeBudget : undefined;
            resourceInputs["galleryApplication"] = state ? state.galleryApplication : undefined;
            resourceInputs["galleryApplications"] = state ? state.galleryApplications : undefined;
            resourceInputs["healthProbeId"] = state ? state.healthProbeId : undefined;
            resourceInputs["hostGroupId"] = state ? state.hostGroupId : undefined;
            resourceInputs["identity"] = state ? state.identity : undefined;
            resourceInputs["instances"] = state ? state.instances : undefined;
            resourceInputs["licenseType"] = state ? state.licenseType : undefined;
            resourceInputs["location"] = state ? state.location : undefined;
            resourceInputs["maxBidPrice"] = state ? state.maxBidPrice : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["networkInterfaces"] = state ? state.networkInterfaces : undefined;
            resourceInputs["osDisk"] = state ? state.osDisk : undefined;
            resourceInputs["overprovision"] = state ? state.overprovision : undefined;
            resourceInputs["plan"] = state ? state.plan : undefined;
            resourceInputs["platformFaultDomainCount"] = state ? state.platformFaultDomainCount : undefined;
            resourceInputs["priority"] = state ? state.priority : undefined;
            resourceInputs["provisionVmAgent"] = state ? state.provisionVmAgent : undefined;
            resourceInputs["proximityPlacementGroupId"] = state ? state.proximityPlacementGroupId : undefined;
            resourceInputs["resourceGroupName"] = state ? state.resourceGroupName : undefined;
            resourceInputs["rollingUpgradePolicy"] = state ? state.rollingUpgradePolicy : undefined;
            resourceInputs["scaleIn"] = state ? state.scaleIn : undefined;
            resourceInputs["scaleInPolicy"] = state ? state.scaleInPolicy : undefined;
            resourceInputs["secrets"] = state ? state.secrets : undefined;
            resourceInputs["secureBootEnabled"] = state ? state.secureBootEnabled : undefined;
            resourceInputs["singlePlacementGroup"] = state ? state.singlePlacementGroup : undefined;
            resourceInputs["sku"] = state ? state.sku : undefined;
            resourceInputs["sourceImageId"] = state ? state.sourceImageId : undefined;
            resourceInputs["sourceImageReference"] = state ? state.sourceImageReference : undefined;
            resourceInputs["spotRestore"] = state ? state.spotRestore : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["terminateNotification"] = state ? state.terminateNotification : undefined;
            resourceInputs["terminationNotification"] = state ? state.terminationNotification : undefined;
            resourceInputs["timezone"] = state ? state.timezone : undefined;
            resourceInputs["uniqueId"] = state ? state.uniqueId : undefined;
            resourceInputs["upgradeMode"] = state ? state.upgradeMode : undefined;
            resourceInputs["userData"] = state ? state.userData : undefined;
            resourceInputs["vtpmEnabled"] = state ? state.vtpmEnabled : undefined;
            resourceInputs["winrmListeners"] = state ? state.winrmListeners : undefined;
            resourceInputs["zoneBalance"] = state ? state.zoneBalance : undefined;
            resourceInputs["zones"] = state ? state.zones : undefined;
        } else {
            const args = argsOrState as WindowsVirtualMachineScaleSetArgs | undefined;
            if ((!args || args.adminPassword === undefined) && !opts.urn) {
                throw new Error("Missing required property 'adminPassword'");
            }
            if ((!args || args.adminUsername === undefined) && !opts.urn) {
                throw new Error("Missing required property 'adminUsername'");
            }
            if ((!args || args.instances === undefined) && !opts.urn) {
                throw new Error("Missing required property 'instances'");
            }
            if ((!args || args.networkInterfaces === undefined) && !opts.urn) {
                throw new Error("Missing required property 'networkInterfaces'");
            }
            if ((!args || args.osDisk === undefined) && !opts.urn) {
                throw new Error("Missing required property 'osDisk'");
            }
            if ((!args || args.resourceGroupName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            if ((!args || args.sku === undefined) && !opts.urn) {
                throw new Error("Missing required property 'sku'");
            }
            resourceInputs["additionalCapabilities"] = args ? args.additionalCapabilities : undefined;
            resourceInputs["additionalUnattendContents"] = args ? args.additionalUnattendContents : undefined;
            resourceInputs["adminPassword"] = args?.adminPassword ? pulumi.secret(args.adminPassword) : undefined;
            resourceInputs["adminUsername"] = args ? args.adminUsername : undefined;
            resourceInputs["automaticInstanceRepair"] = args ? args.automaticInstanceRepair : undefined;
            resourceInputs["automaticOsUpgradePolicy"] = args ? args.automaticOsUpgradePolicy : undefined;
            resourceInputs["bootDiagnostics"] = args ? args.bootDiagnostics : undefined;
            resourceInputs["capacityReservationGroupId"] = args ? args.capacityReservationGroupId : undefined;
            resourceInputs["computerNamePrefix"] = args ? args.computerNamePrefix : undefined;
            resourceInputs["customData"] = args?.customData ? pulumi.secret(args.customData) : undefined;
            resourceInputs["dataDisks"] = args ? args.dataDisks : undefined;
            resourceInputs["doNotRunExtensionsOnOverprovisionedMachines"] = args ? args.doNotRunExtensionsOnOverprovisionedMachines : undefined;
            resourceInputs["edgeZone"] = args ? args.edgeZone : undefined;
            resourceInputs["enableAutomaticUpdates"] = args ? args.enableAutomaticUpdates : undefined;
            resourceInputs["encryptionAtHostEnabled"] = args ? args.encryptionAtHostEnabled : undefined;
            resourceInputs["evictionPolicy"] = args ? args.evictionPolicy : undefined;
            resourceInputs["extensionOperationsEnabled"] = args ? args.extensionOperationsEnabled : undefined;
            resourceInputs["extensions"] = args ? args.extensions : undefined;
            resourceInputs["extensionsTimeBudget"] = args ? args.extensionsTimeBudget : undefined;
            resourceInputs["galleryApplication"] = args ? args.galleryApplication : undefined;
            resourceInputs["galleryApplications"] = args ? args.galleryApplications : undefined;
            resourceInputs["healthProbeId"] = args ? args.healthProbeId : undefined;
            resourceInputs["hostGroupId"] = args ? args.hostGroupId : undefined;
            resourceInputs["identity"] = args ? args.identity : undefined;
            resourceInputs["instances"] = args ? args.instances : undefined;
            resourceInputs["licenseType"] = args ? args.licenseType : undefined;
            resourceInputs["location"] = args ? args.location : undefined;
            resourceInputs["maxBidPrice"] = args ? args.maxBidPrice : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["networkInterfaces"] = args ? args.networkInterfaces : undefined;
            resourceInputs["osDisk"] = args ? args.osDisk : undefined;
            resourceInputs["overprovision"] = args ? args.overprovision : undefined;
            resourceInputs["plan"] = args ? args.plan : undefined;
            resourceInputs["platformFaultDomainCount"] = args ? args.platformFaultDomainCount : undefined;
            resourceInputs["priority"] = args ? args.priority : undefined;
            resourceInputs["provisionVmAgent"] = args ? args.provisionVmAgent : undefined;
            resourceInputs["proximityPlacementGroupId"] = args ? args.proximityPlacementGroupId : undefined;
            resourceInputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            resourceInputs["rollingUpgradePolicy"] = args ? args.rollingUpgradePolicy : undefined;
            resourceInputs["scaleIn"] = args ? args.scaleIn : undefined;
            resourceInputs["scaleInPolicy"] = args ? args.scaleInPolicy : undefined;
            resourceInputs["secrets"] = args ? args.secrets : undefined;
            resourceInputs["secureBootEnabled"] = args ? args.secureBootEnabled : undefined;
            resourceInputs["singlePlacementGroup"] = args ? args.singlePlacementGroup : undefined;
            resourceInputs["sku"] = args ? args.sku : undefined;
            resourceInputs["sourceImageId"] = args ? args.sourceImageId : undefined;
            resourceInputs["sourceImageReference"] = args ? args.sourceImageReference : undefined;
            resourceInputs["spotRestore"] = args ? args.spotRestore : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["terminateNotification"] = args ? args.terminateNotification : undefined;
            resourceInputs["terminationNotification"] = args ? args.terminationNotification : undefined;
            resourceInputs["timezone"] = args ? args.timezone : undefined;
            resourceInputs["upgradeMode"] = args ? args.upgradeMode : undefined;
            resourceInputs["userData"] = args ? args.userData : undefined;
            resourceInputs["vtpmEnabled"] = args ? args.vtpmEnabled : undefined;
            resourceInputs["winrmListeners"] = args ? args.winrmListeners : undefined;
            resourceInputs["zoneBalance"] = args ? args.zoneBalance : undefined;
            resourceInputs["zones"] = args ? args.zones : undefined;
            resourceInputs["uniqueId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["adminPassword", "customData"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(WindowsVirtualMachineScaleSet.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering WindowsVirtualMachineScaleSet resources.
 */
export interface WindowsVirtualMachineScaleSetState {
    /**
     * An `additionalCapabilities` block as defined below.
     */
    additionalCapabilities?: pulumi.Input<inputs.compute.WindowsVirtualMachineScaleSetAdditionalCapabilities>;
    /**
     * One or more `additionalUnattendContent` blocks as defined below. Changing this forces a new resource to be created.
     */
    additionalUnattendContents?: pulumi.Input<pulumi.Input<inputs.compute.WindowsVirtualMachineScaleSetAdditionalUnattendContent>[]>;
    /**
     * The Password which should be used for the local-administrator on this Virtual Machine. Changing this forces a new resource to be created.
     */
    adminPassword?: pulumi.Input<string>;
    /**
     * The username of the local administrator on each Virtual Machine Scale Set instance. Changing this forces a new resource to be created.
     */
    adminUsername?: pulumi.Input<string>;
    /**
     * An `automaticInstanceRepair` block as defined below. To enable the automatic instance repair, this Virtual Machine Scale Set must have a valid `healthProbeId` or an [Application Health Extension](https://docs.microsoft.com/azure/virtual-machine-scale-sets/virtual-machine-scale-sets-health-extension).
     *
     * > **NOTE:** For more information about Automatic Instance Repair, please refer to [this doc](https://docs.microsoft.com/azure/virtual-machine-scale-sets/virtual-machine-scale-sets-automatic-instance-repairs).
     */
    automaticInstanceRepair?: pulumi.Input<inputs.compute.WindowsVirtualMachineScaleSetAutomaticInstanceRepair>;
    /**
     * An `automaticOsUpgradePolicy` block as defined below. This can only be specified when `upgradeMode` is set to either `Automatic` or `Rolling`.
     */
    automaticOsUpgradePolicy?: pulumi.Input<inputs.compute.WindowsVirtualMachineScaleSetAutomaticOsUpgradePolicy>;
    /**
     * A `bootDiagnostics` block as defined below.
     */
    bootDiagnostics?: pulumi.Input<inputs.compute.WindowsVirtualMachineScaleSetBootDiagnostics>;
    /**
     * Specifies the ID of the Capacity Reservation Group which the Virtual Machine Scale Set should be allocated to. Changing this forces a new resource to be created.
     *
     * > **NOTE:** `capacityReservationGroupId` cannot be used with `proximityPlacementGroupId`
     *
     * > **NOTE:** `singlePlacementGroup` must be set to `false` when `capacityReservationGroupId` is specified.
     */
    capacityReservationGroupId?: pulumi.Input<string>;
    /**
     * The prefix which should be used for the name of the Virtual Machines in this Scale Set. If unspecified this defaults to the value for the `name` field. If the value of the `name` field is not a valid `computerNamePrefix`, then you must specify `computerNamePrefix`. Changing this forces a new resource to be created.
     */
    computerNamePrefix?: pulumi.Input<string>;
    /**
     * The Base64-Encoded Custom Data which should be used for this Virtual Machine Scale Set.
     *
     * > **NOTE:** When Custom Data has been configured, it's not possible to remove it without tainting the Virtual Machine Scale Set, due to a limitation of the Azure API.
     */
    customData?: pulumi.Input<string>;
    /**
     * One or more `dataDisk` blocks as defined below.
     */
    dataDisks?: pulumi.Input<pulumi.Input<inputs.compute.WindowsVirtualMachineScaleSetDataDisk>[]>;
    /**
     * Should Virtual Machine Extensions be run on Overprovisioned Virtual Machines in the Scale Set? Defaults to `false`.
     */
    doNotRunExtensionsOnOverprovisionedMachines?: pulumi.Input<boolean>;
    /**
     * Specifies the Edge Zone within the Azure Region where this Windows Virtual Machine Scale Set should exist. Changing this forces a new Windows Virtual Machine Scale Set to be created.
     */
    edgeZone?: pulumi.Input<string>;
    /**
     * Are automatic updates enabled for this Virtual Machine? Defaults to `true`.
     */
    enableAutomaticUpdates?: pulumi.Input<boolean>;
    /**
     * Should all of the disks (including the temp disk) attached to this Virtual Machine be encrypted by enabling Encryption at Host?
     */
    encryptionAtHostEnabled?: pulumi.Input<boolean>;
    /**
     * Specifies the eviction policy for Virtual Machines in this Scale Set. Possible values are `Deallocate` and `Delete`. Changing this forces a new resource to be created.
     *
     * > **NOTE:** This can only be configured when `priority` is set to `Spot`.
     */
    evictionPolicy?: pulumi.Input<string>;
    /**
     * Should extension operations be allowed on the Virtual Machine Scale Set? Possible values are `true` or `false`. Defaults to `true`. Changing this forces a new Windows Virtual Machine Scale Set to be created.
     *
     * > **NOTE:** `extensionOperationsEnabled` may only be set to `false` if there are no extensions defined in the `extension` field.
     */
    extensionOperationsEnabled?: pulumi.Input<boolean>;
    /**
     * One or more `extension` blocks as defined below
     */
    extensions?: pulumi.Input<pulumi.Input<inputs.compute.WindowsVirtualMachineScaleSetExtension>[]>;
    /**
     * Specifies the duration allocated for all extensions to start. The time duration should be between `15` minutes and `120` minutes (inclusive) and should be specified in ISO 8601 format. Defaults to `PT1H30M`.
     */
    extensionsTimeBudget?: pulumi.Input<string>;
    /**
     * One or more `galleryApplication` blocks as defined below.
     */
    galleryApplication?: pulumi.Input<pulumi.Input<inputs.compute.WindowsVirtualMachineScaleSetGalleryApplication>[]>;
    /**
     * @deprecated `gallery_applications` has been renamed to `gallery_application` and will be deprecated in 4.0
     */
    galleryApplications?: pulumi.Input<pulumi.Input<inputs.compute.WindowsVirtualMachineScaleSetGalleryApplication>[]>;
    /**
     * The ID of a Load Balancer Probe which should be used to determine the health of an instance. This is Required and can only be specified when `upgradeMode` is set to `Automatic` or `Rolling`.
     */
    healthProbeId?: pulumi.Input<string>;
    /**
     * Specifies the ID of the dedicated host group that the virtual machine scale set resides in. Changing this forces a new resource to be created.
     */
    hostGroupId?: pulumi.Input<string>;
    /**
     * An `identity` block as defined below.
     */
    identity?: pulumi.Input<inputs.compute.WindowsVirtualMachineScaleSetIdentity>;
    /**
     * The number of Virtual Machines in the Scale Set.
     *
     * > **NOTE:** If you're using AutoScaling, you may wish to use [`Ignore Changes` functionality](https://www.pulumi.com/docs/intro/concepts/programming-model/#ignorechanges) to ignore changes to this field.
     */
    instances?: pulumi.Input<number>;
    /**
     * Specifies the type of on-premise license (also known as [Azure Hybrid Use Benefit](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-hybrid-use-benefit-licensing)) which should be used for this Virtual Machine Scale Set. Possible values are `None`, `Windows_Client` and `Windows_Server`.
     */
    licenseType?: pulumi.Input<string>;
    /**
     * The Azure location where the Windows Virtual Machine Scale Set should exist. Changing this forces a new resource to be created.
     */
    location?: pulumi.Input<string>;
    /**
     * The maximum price you're willing to pay for each Virtual Machine in this Scale Set, in US Dollars; which must be greater than the current spot price. If this bid price falls below the current spot price the Virtual Machines in the Scale Set will be evicted using the `evictionPolicy`. Defaults to `-1`, which means that each Virtual Machine in the Scale Set should not be evicted for price reasons.
     *
     * > **NOTE:** This can only be configured when `priority` is set to `Spot`.
     */
    maxBidPrice?: pulumi.Input<number>;
    /**
     * The name of the Windows Virtual Machine Scale Set. Changing this forces a new resource to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * One or more `networkInterface` blocks as defined below.
     */
    networkInterfaces?: pulumi.Input<pulumi.Input<inputs.compute.WindowsVirtualMachineScaleSetNetworkInterface>[]>;
    /**
     * An `osDisk` block as defined below.
     */
    osDisk?: pulumi.Input<inputs.compute.WindowsVirtualMachineScaleSetOsDisk>;
    /**
     * Should Azure over-provision Virtual Machines in this Scale Set? This means that multiple Virtual Machines will be provisioned and Azure will keep the instances which become available first - which improves provisioning success rates and improves deployment time. You're not billed for these over-provisioned VM's and they don't count towards the Subscription Quota. Defaults to `true`.
     */
    overprovision?: pulumi.Input<boolean>;
    /**
     * A `plan` block as defined below. Changing this forces a new resource to be created.
     *
     * > **NOTE:** When using an image from Azure Marketplace a `plan` must be specified.
     */
    plan?: pulumi.Input<inputs.compute.WindowsVirtualMachineScaleSetPlan>;
    /**
     * Specifies the number of fault domains that are used by this Linux Virtual Machine Scale Set. Changing this forces a new resource to be created.
     */
    platformFaultDomainCount?: pulumi.Input<number>;
    /**
     * The Priority of this Virtual Machine Scale Set. Possible values are `Regular` and `Spot`. Defaults to `Regular`. Changing this value forces a new resource.
     *
     * > **NOTE:** When `priority` is set to `Spot` an `evictionPolicy` must be specified.
     */
    priority?: pulumi.Input<string>;
    /**
     * Should the Azure VM Agent be provisioned on each Virtual Machine in the Scale Set? Defaults to `true`. Changing this value forces a new resource to be created.
     */
    provisionVmAgent?: pulumi.Input<boolean>;
    /**
     * The ID of the Proximity Placement Group in which the Virtual Machine Scale Set should be assigned to. Changing this forces a new resource to be created.
     */
    proximityPlacementGroupId?: pulumi.Input<string>;
    /**
     * The name of the Resource Group in which the Windows Virtual Machine Scale Set should be exist. Changing this forces a new resource to be created.
     */
    resourceGroupName?: pulumi.Input<string>;
    /**
     * A `rollingUpgradePolicy` block as defined below. This is Required and can only be specified when `upgradeMode` is set to `Automatic` or `Rolling`. Changing this forces a new resource to be created.
     */
    rollingUpgradePolicy?: pulumi.Input<inputs.compute.WindowsVirtualMachineScaleSetRollingUpgradePolicy>;
    /**
     * A `scaleIn` block as defined below.
     */
    scaleIn?: pulumi.Input<inputs.compute.WindowsVirtualMachineScaleSetScaleIn>;
    /**
     * @deprecated `scale_in_policy` will be removed in favour of the `scale_in` code block in version 4.0 of the AzureRM Provider.
     */
    scaleInPolicy?: pulumi.Input<string>;
    /**
     * One or more `secret` blocks as defined below.
     */
    secrets?: pulumi.Input<pulumi.Input<inputs.compute.WindowsVirtualMachineScaleSetSecret>[]>;
    /**
     * Specifies if Secure Boot and Trusted Launch is enabled for the Virtual Machine. Changing this forces a new resource to be created.
     */
    secureBootEnabled?: pulumi.Input<boolean>;
    /**
     * Should this Virtual Machine Scale Set be limited to a Single Placement Group, which means the number of instances will be capped at 100 Virtual Machines. Defaults to `true`.
     */
    singlePlacementGroup?: pulumi.Input<boolean>;
    /**
     * The Virtual Machine SKU for the Scale Set, such as `Standard_F2`.
     */
    sku?: pulumi.Input<string>;
    /**
     * The ID of an Image which each Virtual Machine in this Scale Set should be based on. Possible Image ID types include `Image ID`, `Shared Image ID`, `Shared Image Version ID`, `Community Gallery Image ID`, `Community Gallery Image Version ID`, `Shared Gallery Image ID` and `Shared Gallery Image Version ID`.
     *
     * > **NOTE:** One of either `sourceImageId` or `sourceImageReference` must be set.
     */
    sourceImageId?: pulumi.Input<string>;
    /**
     * A `sourceImageReference` block as defined below.
     *
     * > **NOTE:** One of either `sourceImageId` or `sourceImageReference` must be set.
     */
    sourceImageReference?: pulumi.Input<inputs.compute.WindowsVirtualMachineScaleSetSourceImageReference>;
    /**
     * A `spotRestore` block as defined below.
     */
    spotRestore?: pulumi.Input<inputs.compute.WindowsVirtualMachineScaleSetSpotRestore>;
    /**
     * A mapping of tags which should be assigned to this Virtual Machine Scale Set.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * A `terminateNotification` block as defined below.
     *
     * > **Note:** This property has been deprecated in favour of the `terminationNotification` property and will be removed in version 4.0 of the provider.
     *
     * @deprecated `terminate_notification` has been renamed to `termination_notification` and will be removed in 4.0.
     */
    terminateNotification?: pulumi.Input<inputs.compute.WindowsVirtualMachineScaleSetTerminateNotification>;
    /**
     * A `terminationNotification` block as defined below.
     */
    terminationNotification?: pulumi.Input<inputs.compute.WindowsVirtualMachineScaleSetTerminationNotification>;
    /**
     * Specifies the time zone of the virtual machine, [the possible values are defined here](https://jackstromberg.com/2017/01/list-of-time-zones-consumed-by-azure/).
     */
    timezone?: pulumi.Input<string>;
    /**
     * The Unique ID for this Windows Virtual Machine Scale Set.
     */
    uniqueId?: pulumi.Input<string>;
    upgradeMode?: pulumi.Input<string>;
    /**
     * The Base64-Encoded User Data which should be used for this Virtual Machine Scale Set.
     */
    userData?: pulumi.Input<string>;
    /**
     * Specifies if vTPM (Virtual Trusted Platform Module) and Trusted Launch is enabled for the Virtual Machine. Changing this forces a new resource to be created.
     */
    vtpmEnabled?: pulumi.Input<boolean>;
    /**
     * One or more `winrmListener` blocks as defined below. Changing this forces a new resource to be created.
     */
    winrmListeners?: pulumi.Input<pulumi.Input<inputs.compute.WindowsVirtualMachineScaleSetWinrmListener>[]>;
    /**
     * Should the Virtual Machines in this Scale Set be strictly evenly distributed across Availability Zones? Defaults to `false`. Changing this forces a new resource to be created.
     *
     * > **NOTE:** This can only be set to `true` when one or more `zones` are configured.
     */
    zoneBalance?: pulumi.Input<boolean>;
    /**
     * Specifies a list of Availability Zones in which this Windows Virtual Machine Scale Set should be located. Changing this forces a new Windows Virtual Machine Scale Set to be created.
     */
    zones?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * The set of arguments for constructing a WindowsVirtualMachineScaleSet resource.
 */
export interface WindowsVirtualMachineScaleSetArgs {
    /**
     * An `additionalCapabilities` block as defined below.
     */
    additionalCapabilities?: pulumi.Input<inputs.compute.WindowsVirtualMachineScaleSetAdditionalCapabilities>;
    /**
     * One or more `additionalUnattendContent` blocks as defined below. Changing this forces a new resource to be created.
     */
    additionalUnattendContents?: pulumi.Input<pulumi.Input<inputs.compute.WindowsVirtualMachineScaleSetAdditionalUnattendContent>[]>;
    /**
     * The Password which should be used for the local-administrator on this Virtual Machine. Changing this forces a new resource to be created.
     */
    adminPassword: pulumi.Input<string>;
    /**
     * The username of the local administrator on each Virtual Machine Scale Set instance. Changing this forces a new resource to be created.
     */
    adminUsername: pulumi.Input<string>;
    /**
     * An `automaticInstanceRepair` block as defined below. To enable the automatic instance repair, this Virtual Machine Scale Set must have a valid `healthProbeId` or an [Application Health Extension](https://docs.microsoft.com/azure/virtual-machine-scale-sets/virtual-machine-scale-sets-health-extension).
     *
     * > **NOTE:** For more information about Automatic Instance Repair, please refer to [this doc](https://docs.microsoft.com/azure/virtual-machine-scale-sets/virtual-machine-scale-sets-automatic-instance-repairs).
     */
    automaticInstanceRepair?: pulumi.Input<inputs.compute.WindowsVirtualMachineScaleSetAutomaticInstanceRepair>;
    /**
     * An `automaticOsUpgradePolicy` block as defined below. This can only be specified when `upgradeMode` is set to either `Automatic` or `Rolling`.
     */
    automaticOsUpgradePolicy?: pulumi.Input<inputs.compute.WindowsVirtualMachineScaleSetAutomaticOsUpgradePolicy>;
    /**
     * A `bootDiagnostics` block as defined below.
     */
    bootDiagnostics?: pulumi.Input<inputs.compute.WindowsVirtualMachineScaleSetBootDiagnostics>;
    /**
     * Specifies the ID of the Capacity Reservation Group which the Virtual Machine Scale Set should be allocated to. Changing this forces a new resource to be created.
     *
     * > **NOTE:** `capacityReservationGroupId` cannot be used with `proximityPlacementGroupId`
     *
     * > **NOTE:** `singlePlacementGroup` must be set to `false` when `capacityReservationGroupId` is specified.
     */
    capacityReservationGroupId?: pulumi.Input<string>;
    /**
     * The prefix which should be used for the name of the Virtual Machines in this Scale Set. If unspecified this defaults to the value for the `name` field. If the value of the `name` field is not a valid `computerNamePrefix`, then you must specify `computerNamePrefix`. Changing this forces a new resource to be created.
     */
    computerNamePrefix?: pulumi.Input<string>;
    /**
     * The Base64-Encoded Custom Data which should be used for this Virtual Machine Scale Set.
     *
     * > **NOTE:** When Custom Data has been configured, it's not possible to remove it without tainting the Virtual Machine Scale Set, due to a limitation of the Azure API.
     */
    customData?: pulumi.Input<string>;
    /**
     * One or more `dataDisk` blocks as defined below.
     */
    dataDisks?: pulumi.Input<pulumi.Input<inputs.compute.WindowsVirtualMachineScaleSetDataDisk>[]>;
    /**
     * Should Virtual Machine Extensions be run on Overprovisioned Virtual Machines in the Scale Set? Defaults to `false`.
     */
    doNotRunExtensionsOnOverprovisionedMachines?: pulumi.Input<boolean>;
    /**
     * Specifies the Edge Zone within the Azure Region where this Windows Virtual Machine Scale Set should exist. Changing this forces a new Windows Virtual Machine Scale Set to be created.
     */
    edgeZone?: pulumi.Input<string>;
    /**
     * Are automatic updates enabled for this Virtual Machine? Defaults to `true`.
     */
    enableAutomaticUpdates?: pulumi.Input<boolean>;
    /**
     * Should all of the disks (including the temp disk) attached to this Virtual Machine be encrypted by enabling Encryption at Host?
     */
    encryptionAtHostEnabled?: pulumi.Input<boolean>;
    /**
     * Specifies the eviction policy for Virtual Machines in this Scale Set. Possible values are `Deallocate` and `Delete`. Changing this forces a new resource to be created.
     *
     * > **NOTE:** This can only be configured when `priority` is set to `Spot`.
     */
    evictionPolicy?: pulumi.Input<string>;
    /**
     * Should extension operations be allowed on the Virtual Machine Scale Set? Possible values are `true` or `false`. Defaults to `true`. Changing this forces a new Windows Virtual Machine Scale Set to be created.
     *
     * > **NOTE:** `extensionOperationsEnabled` may only be set to `false` if there are no extensions defined in the `extension` field.
     */
    extensionOperationsEnabled?: pulumi.Input<boolean>;
    /**
     * One or more `extension` blocks as defined below
     */
    extensions?: pulumi.Input<pulumi.Input<inputs.compute.WindowsVirtualMachineScaleSetExtension>[]>;
    /**
     * Specifies the duration allocated for all extensions to start. The time duration should be between `15` minutes and `120` minutes (inclusive) and should be specified in ISO 8601 format. Defaults to `PT1H30M`.
     */
    extensionsTimeBudget?: pulumi.Input<string>;
    /**
     * One or more `galleryApplication` blocks as defined below.
     */
    galleryApplication?: pulumi.Input<pulumi.Input<inputs.compute.WindowsVirtualMachineScaleSetGalleryApplication>[]>;
    /**
     * @deprecated `gallery_applications` has been renamed to `gallery_application` and will be deprecated in 4.0
     */
    galleryApplications?: pulumi.Input<pulumi.Input<inputs.compute.WindowsVirtualMachineScaleSetGalleryApplication>[]>;
    /**
     * The ID of a Load Balancer Probe which should be used to determine the health of an instance. This is Required and can only be specified when `upgradeMode` is set to `Automatic` or `Rolling`.
     */
    healthProbeId?: pulumi.Input<string>;
    /**
     * Specifies the ID of the dedicated host group that the virtual machine scale set resides in. Changing this forces a new resource to be created.
     */
    hostGroupId?: pulumi.Input<string>;
    /**
     * An `identity` block as defined below.
     */
    identity?: pulumi.Input<inputs.compute.WindowsVirtualMachineScaleSetIdentity>;
    /**
     * The number of Virtual Machines in the Scale Set.
     *
     * > **NOTE:** If you're using AutoScaling, you may wish to use [`Ignore Changes` functionality](https://www.pulumi.com/docs/intro/concepts/programming-model/#ignorechanges) to ignore changes to this field.
     */
    instances: pulumi.Input<number>;
    /**
     * Specifies the type of on-premise license (also known as [Azure Hybrid Use Benefit](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-hybrid-use-benefit-licensing)) which should be used for this Virtual Machine Scale Set. Possible values are `None`, `Windows_Client` and `Windows_Server`.
     */
    licenseType?: pulumi.Input<string>;
    /**
     * The Azure location where the Windows Virtual Machine Scale Set should exist. Changing this forces a new resource to be created.
     */
    location?: pulumi.Input<string>;
    /**
     * The maximum price you're willing to pay for each Virtual Machine in this Scale Set, in US Dollars; which must be greater than the current spot price. If this bid price falls below the current spot price the Virtual Machines in the Scale Set will be evicted using the `evictionPolicy`. Defaults to `-1`, which means that each Virtual Machine in the Scale Set should not be evicted for price reasons.
     *
     * > **NOTE:** This can only be configured when `priority` is set to `Spot`.
     */
    maxBidPrice?: pulumi.Input<number>;
    /**
     * The name of the Windows Virtual Machine Scale Set. Changing this forces a new resource to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * One or more `networkInterface` blocks as defined below.
     */
    networkInterfaces: pulumi.Input<pulumi.Input<inputs.compute.WindowsVirtualMachineScaleSetNetworkInterface>[]>;
    /**
     * An `osDisk` block as defined below.
     */
    osDisk: pulumi.Input<inputs.compute.WindowsVirtualMachineScaleSetOsDisk>;
    /**
     * Should Azure over-provision Virtual Machines in this Scale Set? This means that multiple Virtual Machines will be provisioned and Azure will keep the instances which become available first - which improves provisioning success rates and improves deployment time. You're not billed for these over-provisioned VM's and they don't count towards the Subscription Quota. Defaults to `true`.
     */
    overprovision?: pulumi.Input<boolean>;
    /**
     * A `plan` block as defined below. Changing this forces a new resource to be created.
     *
     * > **NOTE:** When using an image from Azure Marketplace a `plan` must be specified.
     */
    plan?: pulumi.Input<inputs.compute.WindowsVirtualMachineScaleSetPlan>;
    /**
     * Specifies the number of fault domains that are used by this Linux Virtual Machine Scale Set. Changing this forces a new resource to be created.
     */
    platformFaultDomainCount?: pulumi.Input<number>;
    /**
     * The Priority of this Virtual Machine Scale Set. Possible values are `Regular` and `Spot`. Defaults to `Regular`. Changing this value forces a new resource.
     *
     * > **NOTE:** When `priority` is set to `Spot` an `evictionPolicy` must be specified.
     */
    priority?: pulumi.Input<string>;
    /**
     * Should the Azure VM Agent be provisioned on each Virtual Machine in the Scale Set? Defaults to `true`. Changing this value forces a new resource to be created.
     */
    provisionVmAgent?: pulumi.Input<boolean>;
    /**
     * The ID of the Proximity Placement Group in which the Virtual Machine Scale Set should be assigned to. Changing this forces a new resource to be created.
     */
    proximityPlacementGroupId?: pulumi.Input<string>;
    /**
     * The name of the Resource Group in which the Windows Virtual Machine Scale Set should be exist. Changing this forces a new resource to be created.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * A `rollingUpgradePolicy` block as defined below. This is Required and can only be specified when `upgradeMode` is set to `Automatic` or `Rolling`. Changing this forces a new resource to be created.
     */
    rollingUpgradePolicy?: pulumi.Input<inputs.compute.WindowsVirtualMachineScaleSetRollingUpgradePolicy>;
    /**
     * A `scaleIn` block as defined below.
     */
    scaleIn?: pulumi.Input<inputs.compute.WindowsVirtualMachineScaleSetScaleIn>;
    /**
     * @deprecated `scale_in_policy` will be removed in favour of the `scale_in` code block in version 4.0 of the AzureRM Provider.
     */
    scaleInPolicy?: pulumi.Input<string>;
    /**
     * One or more `secret` blocks as defined below.
     */
    secrets?: pulumi.Input<pulumi.Input<inputs.compute.WindowsVirtualMachineScaleSetSecret>[]>;
    /**
     * Specifies if Secure Boot and Trusted Launch is enabled for the Virtual Machine. Changing this forces a new resource to be created.
     */
    secureBootEnabled?: pulumi.Input<boolean>;
    /**
     * Should this Virtual Machine Scale Set be limited to a Single Placement Group, which means the number of instances will be capped at 100 Virtual Machines. Defaults to `true`.
     */
    singlePlacementGroup?: pulumi.Input<boolean>;
    /**
     * The Virtual Machine SKU for the Scale Set, such as `Standard_F2`.
     */
    sku: pulumi.Input<string>;
    /**
     * The ID of an Image which each Virtual Machine in this Scale Set should be based on. Possible Image ID types include `Image ID`, `Shared Image ID`, `Shared Image Version ID`, `Community Gallery Image ID`, `Community Gallery Image Version ID`, `Shared Gallery Image ID` and `Shared Gallery Image Version ID`.
     *
     * > **NOTE:** One of either `sourceImageId` or `sourceImageReference` must be set.
     */
    sourceImageId?: pulumi.Input<string>;
    /**
     * A `sourceImageReference` block as defined below.
     *
     * > **NOTE:** One of either `sourceImageId` or `sourceImageReference` must be set.
     */
    sourceImageReference?: pulumi.Input<inputs.compute.WindowsVirtualMachineScaleSetSourceImageReference>;
    /**
     * A `spotRestore` block as defined below.
     */
    spotRestore?: pulumi.Input<inputs.compute.WindowsVirtualMachineScaleSetSpotRestore>;
    /**
     * A mapping of tags which should be assigned to this Virtual Machine Scale Set.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * A `terminateNotification` block as defined below.
     *
     * > **Note:** This property has been deprecated in favour of the `terminationNotification` property and will be removed in version 4.0 of the provider.
     *
     * @deprecated `terminate_notification` has been renamed to `termination_notification` and will be removed in 4.0.
     */
    terminateNotification?: pulumi.Input<inputs.compute.WindowsVirtualMachineScaleSetTerminateNotification>;
    /**
     * A `terminationNotification` block as defined below.
     */
    terminationNotification?: pulumi.Input<inputs.compute.WindowsVirtualMachineScaleSetTerminationNotification>;
    /**
     * Specifies the time zone of the virtual machine, [the possible values are defined here](https://jackstromberg.com/2017/01/list-of-time-zones-consumed-by-azure/).
     */
    timezone?: pulumi.Input<string>;
    upgradeMode?: pulumi.Input<string>;
    /**
     * The Base64-Encoded User Data which should be used for this Virtual Machine Scale Set.
     */
    userData?: pulumi.Input<string>;
    /**
     * Specifies if vTPM (Virtual Trusted Platform Module) and Trusted Launch is enabled for the Virtual Machine. Changing this forces a new resource to be created.
     */
    vtpmEnabled?: pulumi.Input<boolean>;
    /**
     * One or more `winrmListener` blocks as defined below. Changing this forces a new resource to be created.
     */
    winrmListeners?: pulumi.Input<pulumi.Input<inputs.compute.WindowsVirtualMachineScaleSetWinrmListener>[]>;
    /**
     * Should the Virtual Machines in this Scale Set be strictly evenly distributed across Availability Zones? Defaults to `false`. Changing this forces a new resource to be created.
     *
     * > **NOTE:** This can only be set to `true` when one or more `zones` are configured.
     */
    zoneBalance?: pulumi.Input<boolean>;
    /**
     * Specifies a list of Availability Zones in which this Windows Virtual Machine Scale Set should be located. Changing this forces a new Windows Virtual Machine Scale Set to be created.
     */
    zones?: pulumi.Input<pulumi.Input<string>[]>;
}
