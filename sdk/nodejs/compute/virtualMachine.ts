// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";

/**
 * Create a virtual machine.
 */
export class VirtualMachine extends pulumi.CustomResource {
    /**
     * Get an existing VirtualMachine resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: VirtualMachineState): VirtualMachine {
        return new VirtualMachine(name, <any>state, { id });
    }

    /**
     * The Id of the Availability Set in which to create the virtual machine
     */
    public readonly availabilitySetId: pulumi.Output<string>;
    /**
     * A boot diagnostics profile block as referenced below.
     */
    public readonly bootDiagnostics: pulumi.Output<{ enabled: boolean, storageUri: string } | undefined>;
    /**
     * Flag to enable deletion of storage data disk VHD blobs or managed disks when the VM is deleted, defaults to `false`
     */
    public readonly deleteDataDisksOnTermination: pulumi.Output<boolean | undefined>;
    /**
     * Flag to enable deletion of the OS disk VHD blob or managed disk when the VM is deleted, defaults to `false`
     */
    public readonly deleteOsDiskOnTermination: pulumi.Output<boolean | undefined>;
    /**
     * An identity block as documented below.
     */
    public readonly identity: pulumi.Output<{ principalId: string, type: string }>;
    /**
     * Specifies the Windows OS license type. If supplied, the only allowed values are `Windows_Client` and `Windows_Server`.
     */
    public readonly licenseType: pulumi.Output<string>;
    /**
     * Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
     */
    public readonly location: pulumi.Output<string>;
    /**
     * Specifies the name of the data disk.
     */
    public readonly name: pulumi.Output<string>;
    /**
     * Specifies the list of resource IDs for the network interfaces associated with the virtual machine.
     */
    public readonly networkInterfaceIds: pulumi.Output<string[]>;
    /**
     * An OS Profile block as documented below. Required when `create_option` in the `storage_os_disk` block is set to `FromImage`.
     */
    public readonly osProfile: pulumi.Output<{ adminPassword?: string, adminUsername: string, computerName: string, customData: string } | undefined>;
    /**
     * A Linux config block as documented below.
     */
    public readonly osProfileLinuxConfig: pulumi.Output<{ disablePasswordAuthentication: boolean, sshKeys?: { keyData?: string, path: string }[] } | undefined>;
    /**
     * A collection of Secret blocks as documented below.
     */
    public readonly osProfileSecrets: pulumi.Output<{ sourceVaultId: string, vaultCertificates?: { certificateStore?: string, certificateUrl: string }[] }[] | undefined>;
    /**
     * A Windows config block as documented below.
     */
    public readonly osProfileWindowsConfig: pulumi.Output<{ additionalUnattendConfigs?: { component: string, content: string, pass: string, settingName: string }[], enableAutomaticUpgrades?: boolean, provisionVmAgent?: boolean, winrms?: { certificateUrl?: string, protocol: string }[] } | undefined>;
    /**
     * A plan block as documented below.
     */
    public readonly plan: pulumi.Output<{ name: string, product: string, publisher: string } | undefined>;
    /**
     * Specifies the resource ID for the primary network interface associated with the virtual machine.
     */
    public readonly primaryNetworkInterfaceId: pulumi.Output<string | undefined>;
    /**
     * The name of the resource group in which to
     * create the virtual machine.
     */
    public readonly resourceGroupName: pulumi.Output<string>;
    /**
     * A list of Storage Data disk blocks as referenced below.
     */
    public readonly storageDataDisks: pulumi.Output<{ caching: string, createOption: string, diskSizeGb: number, lun: number, managedDiskId: string, managedDiskType: string, name: string, vhdUri?: string }[] | undefined>;
    /**
     * A Storage Image Reference block as documented below.
     */
    public readonly storageImageReference: pulumi.Output<{ id?: string, offer?: string, publisher?: string, sku?: string, version: string }>;
    /**
     * A Storage OS Disk block as referenced below.
     */
    public readonly storageOsDisk: pulumi.Output<{ caching: string, createOption: string, diskSizeGb: number, imageUri?: string, managedDiskId: string, managedDiskType: string, name: string, osType: string, vhdUri?: string }>;
    /**
     * A mapping of tags to assign to the resource.
     */
    public readonly tags: pulumi.Output<{[key: string]: any}>;
    /**
     * Specifies the [size of the virtual machine](https://azure.microsoft.com/en-us/documentation/articles/virtual-machines-size-specs/).
     */
    public readonly vmSize: pulumi.Output<string>;
    /**
     * A collection containing the availability zone to allocate the Virtual Machine in.
     */
    public readonly zones: pulumi.Output<string | undefined>;

    /**
     * Create a VirtualMachine resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: VirtualMachineArgs, opts?: pulumi.ResourceOptions)
    constructor(name: string, argsOrState?: VirtualMachineArgs | VirtualMachineState, opts?: pulumi.ResourceOptions) {
        let inputs: pulumi.Inputs = {};
        if (opts && opts.id) {
            const state: VirtualMachineState = argsOrState as VirtualMachineState | undefined;
            inputs["availabilitySetId"] = state ? state.availabilitySetId : undefined;
            inputs["bootDiagnostics"] = state ? state.bootDiagnostics : undefined;
            inputs["deleteDataDisksOnTermination"] = state ? state.deleteDataDisksOnTermination : undefined;
            inputs["deleteOsDiskOnTermination"] = state ? state.deleteOsDiskOnTermination : undefined;
            inputs["identity"] = state ? state.identity : undefined;
            inputs["licenseType"] = state ? state.licenseType : undefined;
            inputs["location"] = state ? state.location : undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["networkInterfaceIds"] = state ? state.networkInterfaceIds : undefined;
            inputs["osProfile"] = state ? state.osProfile : undefined;
            inputs["osProfileLinuxConfig"] = state ? state.osProfileLinuxConfig : undefined;
            inputs["osProfileSecrets"] = state ? state.osProfileSecrets : undefined;
            inputs["osProfileWindowsConfig"] = state ? state.osProfileWindowsConfig : undefined;
            inputs["plan"] = state ? state.plan : undefined;
            inputs["primaryNetworkInterfaceId"] = state ? state.primaryNetworkInterfaceId : undefined;
            inputs["resourceGroupName"] = state ? state.resourceGroupName : undefined;
            inputs["storageDataDisks"] = state ? state.storageDataDisks : undefined;
            inputs["storageImageReference"] = state ? state.storageImageReference : undefined;
            inputs["storageOsDisk"] = state ? state.storageOsDisk : undefined;
            inputs["tags"] = state ? state.tags : undefined;
            inputs["vmSize"] = state ? state.vmSize : undefined;
            inputs["zones"] = state ? state.zones : undefined;
        } else {
            const args = argsOrState as VirtualMachineArgs | undefined;
            if (!args || args.location === undefined) {
                throw new Error("Missing required property 'location'");
            }
            if (!args || args.networkInterfaceIds === undefined) {
                throw new Error("Missing required property 'networkInterfaceIds'");
            }
            if (!args || args.resourceGroupName === undefined) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            if (!args || args.storageOsDisk === undefined) {
                throw new Error("Missing required property 'storageOsDisk'");
            }
            if (!args || args.vmSize === undefined) {
                throw new Error("Missing required property 'vmSize'");
            }
            inputs["availabilitySetId"] = args ? args.availabilitySetId : undefined;
            inputs["bootDiagnostics"] = args ? args.bootDiagnostics : undefined;
            inputs["deleteDataDisksOnTermination"] = args ? args.deleteDataDisksOnTermination : undefined;
            inputs["deleteOsDiskOnTermination"] = args ? args.deleteOsDiskOnTermination : undefined;
            inputs["identity"] = args ? args.identity : undefined;
            inputs["licenseType"] = args ? args.licenseType : undefined;
            inputs["location"] = args ? args.location : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["networkInterfaceIds"] = args ? args.networkInterfaceIds : undefined;
            inputs["osProfile"] = args ? args.osProfile : undefined;
            inputs["osProfileLinuxConfig"] = args ? args.osProfileLinuxConfig : undefined;
            inputs["osProfileSecrets"] = args ? args.osProfileSecrets : undefined;
            inputs["osProfileWindowsConfig"] = args ? args.osProfileWindowsConfig : undefined;
            inputs["plan"] = args ? args.plan : undefined;
            inputs["primaryNetworkInterfaceId"] = args ? args.primaryNetworkInterfaceId : undefined;
            inputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            inputs["storageDataDisks"] = args ? args.storageDataDisks : undefined;
            inputs["storageImageReference"] = args ? args.storageImageReference : undefined;
            inputs["storageOsDisk"] = args ? args.storageOsDisk : undefined;
            inputs["tags"] = args ? args.tags : undefined;
            inputs["vmSize"] = args ? args.vmSize : undefined;
            inputs["zones"] = args ? args.zones : undefined;
        }
        super("azure:compute/virtualMachine:VirtualMachine", name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering VirtualMachine resources.
 */
export interface VirtualMachineState {
    /**
     * The Id of the Availability Set in which to create the virtual machine
     */
    readonly availabilitySetId?: pulumi.Input<string>;
    /**
     * A boot diagnostics profile block as referenced below.
     */
    readonly bootDiagnostics?: pulumi.Input<{ enabled: pulumi.Input<boolean>, storageUri: pulumi.Input<string> }>;
    /**
     * Flag to enable deletion of storage data disk VHD blobs or managed disks when the VM is deleted, defaults to `false`
     */
    readonly deleteDataDisksOnTermination?: pulumi.Input<boolean>;
    /**
     * Flag to enable deletion of the OS disk VHD blob or managed disk when the VM is deleted, defaults to `false`
     */
    readonly deleteOsDiskOnTermination?: pulumi.Input<boolean>;
    /**
     * An identity block as documented below.
     */
    readonly identity?: pulumi.Input<{ principalId?: pulumi.Input<string>, type: pulumi.Input<string> }>;
    /**
     * Specifies the Windows OS license type. If supplied, the only allowed values are `Windows_Client` and `Windows_Server`.
     */
    readonly licenseType?: pulumi.Input<string>;
    /**
     * Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
     */
    readonly location?: pulumi.Input<string>;
    /**
     * Specifies the name of the data disk.
     */
    readonly name?: pulumi.Input<string>;
    /**
     * Specifies the list of resource IDs for the network interfaces associated with the virtual machine.
     */
    readonly networkInterfaceIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * An OS Profile block as documented below. Required when `create_option` in the `storage_os_disk` block is set to `FromImage`.
     */
    readonly osProfile?: pulumi.Input<{ adminPassword?: pulumi.Input<string>, adminUsername: pulumi.Input<string>, computerName: pulumi.Input<string>, customData?: pulumi.Input<string> }>;
    /**
     * A Linux config block as documented below.
     */
    readonly osProfileLinuxConfig?: pulumi.Input<{ disablePasswordAuthentication: pulumi.Input<boolean>, sshKeys?: pulumi.Input<pulumi.Input<{ keyData?: pulumi.Input<string>, path: pulumi.Input<string> }>[]> }>;
    /**
     * A collection of Secret blocks as documented below.
     */
    readonly osProfileSecrets?: pulumi.Input<pulumi.Input<{ sourceVaultId: pulumi.Input<string>, vaultCertificates?: pulumi.Input<pulumi.Input<{ certificateStore?: pulumi.Input<string>, certificateUrl: pulumi.Input<string> }>[]> }>[]>;
    /**
     * A Windows config block as documented below.
     */
    readonly osProfileWindowsConfig?: pulumi.Input<{ additionalUnattendConfigs?: pulumi.Input<pulumi.Input<{ component: pulumi.Input<string>, content: pulumi.Input<string>, pass: pulumi.Input<string>, settingName: pulumi.Input<string> }>[]>, enableAutomaticUpgrades?: pulumi.Input<boolean>, provisionVmAgent?: pulumi.Input<boolean>, winrms?: pulumi.Input<pulumi.Input<{ certificateUrl?: pulumi.Input<string>, protocol: pulumi.Input<string> }>[]> }>;
    /**
     * A plan block as documented below.
     */
    readonly plan?: pulumi.Input<{ name: pulumi.Input<string>, product: pulumi.Input<string>, publisher: pulumi.Input<string> }>;
    /**
     * Specifies the resource ID for the primary network interface associated with the virtual machine.
     */
    readonly primaryNetworkInterfaceId?: pulumi.Input<string>;
    /**
     * The name of the resource group in which to
     * create the virtual machine.
     */
    readonly resourceGroupName?: pulumi.Input<string>;
    /**
     * A list of Storage Data disk blocks as referenced below.
     */
    readonly storageDataDisks?: pulumi.Input<pulumi.Input<{ caching?: pulumi.Input<string>, createOption: pulumi.Input<string>, diskSizeGb?: pulumi.Input<number>, lun: pulumi.Input<number>, managedDiskId?: pulumi.Input<string>, managedDiskType?: pulumi.Input<string>, name: pulumi.Input<string>, vhdUri?: pulumi.Input<string> }>[]>;
    /**
     * A Storage Image Reference block as documented below.
     */
    readonly storageImageReference?: pulumi.Input<{ id?: pulumi.Input<string>, offer?: pulumi.Input<string>, publisher?: pulumi.Input<string>, sku?: pulumi.Input<string>, version?: pulumi.Input<string> }>;
    /**
     * A Storage OS Disk block as referenced below.
     */
    readonly storageOsDisk?: pulumi.Input<{ caching?: pulumi.Input<string>, createOption: pulumi.Input<string>, diskSizeGb?: pulumi.Input<number>, imageUri?: pulumi.Input<string>, managedDiskId?: pulumi.Input<string>, managedDiskType?: pulumi.Input<string>, name: pulumi.Input<string>, osType?: pulumi.Input<string>, vhdUri?: pulumi.Input<string> }>;
    /**
     * A mapping of tags to assign to the resource.
     */
    readonly tags?: pulumi.Input<{[key: string]: any}>;
    /**
     * Specifies the [size of the virtual machine](https://azure.microsoft.com/en-us/documentation/articles/virtual-machines-size-specs/).
     */
    readonly vmSize?: pulumi.Input<string>;
    /**
     * A collection containing the availability zone to allocate the Virtual Machine in.
     */
    readonly zones?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a VirtualMachine resource.
 */
export interface VirtualMachineArgs {
    /**
     * The Id of the Availability Set in which to create the virtual machine
     */
    readonly availabilitySetId?: pulumi.Input<string>;
    /**
     * A boot diagnostics profile block as referenced below.
     */
    readonly bootDiagnostics?: pulumi.Input<{ enabled: pulumi.Input<boolean>, storageUri: pulumi.Input<string> }>;
    /**
     * Flag to enable deletion of storage data disk VHD blobs or managed disks when the VM is deleted, defaults to `false`
     */
    readonly deleteDataDisksOnTermination?: pulumi.Input<boolean>;
    /**
     * Flag to enable deletion of the OS disk VHD blob or managed disk when the VM is deleted, defaults to `false`
     */
    readonly deleteOsDiskOnTermination?: pulumi.Input<boolean>;
    /**
     * An identity block as documented below.
     */
    readonly identity?: pulumi.Input<{ principalId?: pulumi.Input<string>, type: pulumi.Input<string> }>;
    /**
     * Specifies the Windows OS license type. If supplied, the only allowed values are `Windows_Client` and `Windows_Server`.
     */
    readonly licenseType?: pulumi.Input<string>;
    /**
     * Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
     */
    readonly location: pulumi.Input<string>;
    /**
     * Specifies the name of the data disk.
     */
    readonly name?: pulumi.Input<string>;
    /**
     * Specifies the list of resource IDs for the network interfaces associated with the virtual machine.
     */
    readonly networkInterfaceIds: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * An OS Profile block as documented below. Required when `create_option` in the `storage_os_disk` block is set to `FromImage`.
     */
    readonly osProfile?: pulumi.Input<{ adminPassword?: pulumi.Input<string>, adminUsername: pulumi.Input<string>, computerName: pulumi.Input<string>, customData?: pulumi.Input<string> }>;
    /**
     * A Linux config block as documented below.
     */
    readonly osProfileLinuxConfig?: pulumi.Input<{ disablePasswordAuthentication: pulumi.Input<boolean>, sshKeys?: pulumi.Input<pulumi.Input<{ keyData?: pulumi.Input<string>, path: pulumi.Input<string> }>[]> }>;
    /**
     * A collection of Secret blocks as documented below.
     */
    readonly osProfileSecrets?: pulumi.Input<pulumi.Input<{ sourceVaultId: pulumi.Input<string>, vaultCertificates?: pulumi.Input<pulumi.Input<{ certificateStore?: pulumi.Input<string>, certificateUrl: pulumi.Input<string> }>[]> }>[]>;
    /**
     * A Windows config block as documented below.
     */
    readonly osProfileWindowsConfig?: pulumi.Input<{ additionalUnattendConfigs?: pulumi.Input<pulumi.Input<{ component: pulumi.Input<string>, content: pulumi.Input<string>, pass: pulumi.Input<string>, settingName: pulumi.Input<string> }>[]>, enableAutomaticUpgrades?: pulumi.Input<boolean>, provisionVmAgent?: pulumi.Input<boolean>, winrms?: pulumi.Input<pulumi.Input<{ certificateUrl?: pulumi.Input<string>, protocol: pulumi.Input<string> }>[]> }>;
    /**
     * A plan block as documented below.
     */
    readonly plan?: pulumi.Input<{ name: pulumi.Input<string>, product: pulumi.Input<string>, publisher: pulumi.Input<string> }>;
    /**
     * Specifies the resource ID for the primary network interface associated with the virtual machine.
     */
    readonly primaryNetworkInterfaceId?: pulumi.Input<string>;
    /**
     * The name of the resource group in which to
     * create the virtual machine.
     */
    readonly resourceGroupName: pulumi.Input<string>;
    /**
     * A list of Storage Data disk blocks as referenced below.
     */
    readonly storageDataDisks?: pulumi.Input<pulumi.Input<{ caching?: pulumi.Input<string>, createOption: pulumi.Input<string>, diskSizeGb?: pulumi.Input<number>, lun: pulumi.Input<number>, managedDiskId?: pulumi.Input<string>, managedDiskType?: pulumi.Input<string>, name: pulumi.Input<string>, vhdUri?: pulumi.Input<string> }>[]>;
    /**
     * A Storage Image Reference block as documented below.
     */
    readonly storageImageReference?: pulumi.Input<{ id?: pulumi.Input<string>, offer?: pulumi.Input<string>, publisher?: pulumi.Input<string>, sku?: pulumi.Input<string>, version?: pulumi.Input<string> }>;
    /**
     * A Storage OS Disk block as referenced below.
     */
    readonly storageOsDisk: pulumi.Input<{ caching?: pulumi.Input<string>, createOption: pulumi.Input<string>, diskSizeGb?: pulumi.Input<number>, imageUri?: pulumi.Input<string>, managedDiskId?: pulumi.Input<string>, managedDiskType?: pulumi.Input<string>, name: pulumi.Input<string>, osType?: pulumi.Input<string>, vhdUri?: pulumi.Input<string> }>;
    /**
     * A mapping of tags to assign to the resource.
     */
    readonly tags?: pulumi.Input<{[key: string]: any}>;
    /**
     * Specifies the [size of the virtual machine](https://azure.microsoft.com/en-us/documentation/articles/virtual-machines-size-specs/).
     */
    readonly vmSize: pulumi.Input<string>;
    /**
     * A collection containing the availability zone to allocate the Virtual Machine in.
     */
    readonly zones?: pulumi.Input<string>;
}
