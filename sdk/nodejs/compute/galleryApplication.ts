// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Manages a Gallery Application.
 *
 * ## Import
 *
 * Gallery Applications can be imported using the `resource id`, e.g.
 *
 * ```sh
 *  $ pulumi import azure:compute/galleryApplication:GalleryApplication example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.Compute/galleries/gallery1/applications/galleryApplication1
 * ```
 */
export class GalleryApplication extends pulumi.CustomResource {
    /**
     * Get an existing GalleryApplication resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: GalleryApplicationState, opts?: pulumi.CustomResourceOptions): GalleryApplication {
        return new GalleryApplication(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure:compute/galleryApplication:GalleryApplication';

    /**
     * Returns true if the given object is an instance of GalleryApplication.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is GalleryApplication {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === GalleryApplication.__pulumiType;
    }

    /**
     * A description of the Gallery Application.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * The end of life date in RFC3339 format of the Gallery Application.
     */
    public readonly endOfLifeDate!: pulumi.Output<string | undefined>;
    /**
     * The End User Licence Agreement of the Gallery Application.
     */
    public readonly eula!: pulumi.Output<string | undefined>;
    /**
     * The ID of the Shared Image Gallery. Changing this forces a new resource to be created.
     */
    public readonly galleryId!: pulumi.Output<string>;
    /**
     * The Azure Region where the Gallery Application exists. Changing this forces a new resource to be created.
     */
    public readonly location!: pulumi.Output<string>;
    /**
     * The name of the Gallery Application. Changing this forces a new resource to be created.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The URI containing the Privacy Statement associated with the Gallery Application.
     */
    public readonly privacyStatementUri!: pulumi.Output<string | undefined>;
    /**
     * The URI containing the Release Notes associated with the Gallery Application.
     */
    public readonly releaseNoteUri!: pulumi.Output<string | undefined>;
    /**
     * The type of the Operating System supported for the Gallery Application. Possible values are `Linux` and `Windows`. Changing this forces a new resource to be created.
     */
    public readonly supportedOsType!: pulumi.Output<string>;
    /**
     * A mapping of tags to assign to the Gallery Application.
     */
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;

    /**
     * Create a GalleryApplication resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: GalleryApplicationArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: GalleryApplicationArgs | GalleryApplicationState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as GalleryApplicationState | undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["endOfLifeDate"] = state ? state.endOfLifeDate : undefined;
            resourceInputs["eula"] = state ? state.eula : undefined;
            resourceInputs["galleryId"] = state ? state.galleryId : undefined;
            resourceInputs["location"] = state ? state.location : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["privacyStatementUri"] = state ? state.privacyStatementUri : undefined;
            resourceInputs["releaseNoteUri"] = state ? state.releaseNoteUri : undefined;
            resourceInputs["supportedOsType"] = state ? state.supportedOsType : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
        } else {
            const args = argsOrState as GalleryApplicationArgs | undefined;
            if ((!args || args.galleryId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'galleryId'");
            }
            if ((!args || args.supportedOsType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'supportedOsType'");
            }
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["endOfLifeDate"] = args ? args.endOfLifeDate : undefined;
            resourceInputs["eula"] = args ? args.eula : undefined;
            resourceInputs["galleryId"] = args ? args.galleryId : undefined;
            resourceInputs["location"] = args ? args.location : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["privacyStatementUri"] = args ? args.privacyStatementUri : undefined;
            resourceInputs["releaseNoteUri"] = args ? args.releaseNoteUri : undefined;
            resourceInputs["supportedOsType"] = args ? args.supportedOsType : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(GalleryApplication.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering GalleryApplication resources.
 */
export interface GalleryApplicationState {
    /**
     * A description of the Gallery Application.
     */
    description?: pulumi.Input<string>;
    /**
     * The end of life date in RFC3339 format of the Gallery Application.
     */
    endOfLifeDate?: pulumi.Input<string>;
    /**
     * The End User Licence Agreement of the Gallery Application.
     */
    eula?: pulumi.Input<string>;
    /**
     * The ID of the Shared Image Gallery. Changing this forces a new resource to be created.
     */
    galleryId?: pulumi.Input<string>;
    /**
     * The Azure Region where the Gallery Application exists. Changing this forces a new resource to be created.
     */
    location?: pulumi.Input<string>;
    /**
     * The name of the Gallery Application. Changing this forces a new resource to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * The URI containing the Privacy Statement associated with the Gallery Application.
     */
    privacyStatementUri?: pulumi.Input<string>;
    /**
     * The URI containing the Release Notes associated with the Gallery Application.
     */
    releaseNoteUri?: pulumi.Input<string>;
    /**
     * The type of the Operating System supported for the Gallery Application. Possible values are `Linux` and `Windows`. Changing this forces a new resource to be created.
     */
    supportedOsType?: pulumi.Input<string>;
    /**
     * A mapping of tags to assign to the Gallery Application.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

/**
 * The set of arguments for constructing a GalleryApplication resource.
 */
export interface GalleryApplicationArgs {
    /**
     * A description of the Gallery Application.
     */
    description?: pulumi.Input<string>;
    /**
     * The end of life date in RFC3339 format of the Gallery Application.
     */
    endOfLifeDate?: pulumi.Input<string>;
    /**
     * The End User Licence Agreement of the Gallery Application.
     */
    eula?: pulumi.Input<string>;
    /**
     * The ID of the Shared Image Gallery. Changing this forces a new resource to be created.
     */
    galleryId: pulumi.Input<string>;
    /**
     * The Azure Region where the Gallery Application exists. Changing this forces a new resource to be created.
     */
    location?: pulumi.Input<string>;
    /**
     * The name of the Gallery Application. Changing this forces a new resource to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * The URI containing the Privacy Statement associated with the Gallery Application.
     */
    privacyStatementUri?: pulumi.Input<string>;
    /**
     * The URI containing the Release Notes associated with the Gallery Application.
     */
    releaseNoteUri?: pulumi.Input<string>;
    /**
     * The type of the Operating System supported for the Gallery Application. Possible values are `Linux` and `Windows`. Changing this forces a new resource to be created.
     */
    supportedOsType: pulumi.Input<string>;
    /**
     * A mapping of tags to assign to the Gallery Application.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
