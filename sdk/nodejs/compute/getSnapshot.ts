// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Use this data source to access information about an existing Snapshot.
 */
export function getSnapshot(args: GetSnapshotArgs, opts?: pulumi.InvokeOptions): Promise<GetSnapshotResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azure:compute/getSnapshot:getSnapshot", {
        "name": args.name,
        "resourceGroupName": args.resourceGroupName,
    }, opts);
}

/**
 * A collection of arguments for invoking getSnapshot.
 */
export interface GetSnapshotArgs {
    /**
     * Specifies the name of the Snapshot.
     */
    name: string;
    /**
     * Specifies the name of the resource group the Snapshot is located in.
     */
    resourceGroupName: string;
}

/**
 * A collection of values returned by getSnapshot.
 */
export interface GetSnapshotResult {
    readonly creationOption: string;
    /**
     * The size of the Snapshotted Disk in GB.
     */
    readonly diskSizeGb: number;
    readonly encryptionSettings: outputs.compute.GetSnapshotEncryptionSetting[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly name: string;
    readonly osType: string;
    readonly resourceGroupName: string;
    /**
     * The reference to an existing snapshot.
     */
    readonly sourceResourceId: string;
    /**
     * The URI to a Managed or Unmanaged Disk.
     */
    readonly sourceUri: string;
    /**
     * The ID of an storage account.
     */
    readonly storageAccountId: string;
    readonly timeCreated: string;
    /**
     * Whether Trusted Launch is enabled for the Snapshot.
     */
    readonly trustedLaunchEnabled: boolean;
}
/**
 * Use this data source to access information about an existing Snapshot.
 */
export function getSnapshotOutput(args: GetSnapshotOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSnapshotResult> {
    return pulumi.output(args).apply((a: any) => getSnapshot(a, opts))
}

/**
 * A collection of arguments for invoking getSnapshot.
 */
export interface GetSnapshotOutputArgs {
    /**
     * Specifies the name of the Snapshot.
     */
    name: pulumi.Input<string>;
    /**
     * Specifies the name of the resource group the Snapshot is located in.
     */
    resourceGroupName: pulumi.Input<string>;
}
