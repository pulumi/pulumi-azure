// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Manages a Virtual Machine Run Command.
 *
 * ## Import
 *
 * An existing Virtual Machine Run Command can be imported into Terraform using the `resource id`, e.g.
 *
 * ```sh
 * $ pulumi import azure:compute/runCommand:RunCommand example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/mygroup1/providers/Microsoft.Compute/virtualMachines/vm1/runCommands/rc1
 * ```
 */
export class RunCommand extends pulumi.CustomResource {
    /**
     * Get an existing RunCommand resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: RunCommandState, opts?: pulumi.CustomResourceOptions): RunCommand {
        return new RunCommand(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure:compute/runCommand:RunCommand';

    /**
     * Returns true if the given object is an instance of RunCommand.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is RunCommand {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === RunCommand.__pulumiType;
    }

    /**
     * An `errorBlobManagedIdentity` block as defined below. User-assigned managed Identity that has access to errorBlobUri storage blob.
     */
    public readonly errorBlobManagedIdentity!: pulumi.Output<outputs.compute.RunCommandErrorBlobManagedIdentity | undefined>;
    /**
     * Specifies the Azure storage blob where script error stream will be uploaded.
     */
    public readonly errorBlobUri!: pulumi.Output<string | undefined>;
    public /*out*/ readonly instanceViews!: pulumi.Output<outputs.compute.RunCommandInstanceView[]>;
    /**
     * The Azure Region where the Virtual Machine Run Command should exist. Changing this forces a new Virtual Machine Run Command to be created.
     */
    public readonly location!: pulumi.Output<string>;
    /**
     * Specifies the name of this Virtual Machine Run Command. Changing this forces a new Virtual Machine Run Command to be created.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * An `outputBlobManagedIdentity` block as defined below. User-assigned managed Identity that has access to outputBlobUri storage blob.
     */
    public readonly outputBlobManagedIdentity!: pulumi.Output<outputs.compute.RunCommandOutputBlobManagedIdentity | undefined>;
    /**
     * Specifies the Azure storage blob where script output stream will be uploaded. It can be basic blob URI with SAS token.
     */
    public readonly outputBlobUri!: pulumi.Output<string | undefined>;
    /**
     * A list of `parameter` blocks as defined below. The parameters used by the script.
     */
    public readonly parameters!: pulumi.Output<outputs.compute.RunCommandParameter[] | undefined>;
    /**
     * A list of `protectedParameter` blocks as defined below. The protected parameters used by the script.
     */
    public readonly protectedParameters!: pulumi.Output<outputs.compute.RunCommandProtectedParameter[] | undefined>;
    /**
     * Specifies the user account password on the VM when executing the Virtual Machine Run Command.
     */
    public readonly runAsPassword!: pulumi.Output<string | undefined>;
    /**
     * Specifies the user account on the VM when executing the Virtual Machine Run Command.
     */
    public readonly runAsUser!: pulumi.Output<string | undefined>;
    /**
     * A `source` block as defined below. The source of the run command script.
     */
    public readonly source!: pulumi.Output<outputs.compute.RunCommandSource>;
    /**
     * A mapping of tags which should be assigned to the Virtual Machine Run Command.
     */
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * Specifies the Virtual Machine ID within which this Virtual Machine Run Command should exist. Changing this forces a new Virtual Machine Run Command to be created.
     */
    public readonly virtualMachineId!: pulumi.Output<string>;

    /**
     * Create a RunCommand resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: RunCommandArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: RunCommandArgs | RunCommandState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as RunCommandState | undefined;
            resourceInputs["errorBlobManagedIdentity"] = state ? state.errorBlobManagedIdentity : undefined;
            resourceInputs["errorBlobUri"] = state ? state.errorBlobUri : undefined;
            resourceInputs["instanceViews"] = state ? state.instanceViews : undefined;
            resourceInputs["location"] = state ? state.location : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["outputBlobManagedIdentity"] = state ? state.outputBlobManagedIdentity : undefined;
            resourceInputs["outputBlobUri"] = state ? state.outputBlobUri : undefined;
            resourceInputs["parameters"] = state ? state.parameters : undefined;
            resourceInputs["protectedParameters"] = state ? state.protectedParameters : undefined;
            resourceInputs["runAsPassword"] = state ? state.runAsPassword : undefined;
            resourceInputs["runAsUser"] = state ? state.runAsUser : undefined;
            resourceInputs["source"] = state ? state.source : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["virtualMachineId"] = state ? state.virtualMachineId : undefined;
        } else {
            const args = argsOrState as RunCommandArgs | undefined;
            if ((!args || args.source === undefined) && !opts.urn) {
                throw new Error("Missing required property 'source'");
            }
            if ((!args || args.virtualMachineId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'virtualMachineId'");
            }
            resourceInputs["errorBlobManagedIdentity"] = args?.errorBlobManagedIdentity ? pulumi.secret(args.errorBlobManagedIdentity) : undefined;
            resourceInputs["errorBlobUri"] = args ? args.errorBlobUri : undefined;
            resourceInputs["location"] = args ? args.location : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["outputBlobManagedIdentity"] = args?.outputBlobManagedIdentity ? pulumi.secret(args.outputBlobManagedIdentity) : undefined;
            resourceInputs["outputBlobUri"] = args ? args.outputBlobUri : undefined;
            resourceInputs["parameters"] = args ? args.parameters : undefined;
            resourceInputs["protectedParameters"] = args?.protectedParameters ? pulumi.secret(args.protectedParameters) : undefined;
            resourceInputs["runAsPassword"] = args?.runAsPassword ? pulumi.secret(args.runAsPassword) : undefined;
            resourceInputs["runAsUser"] = args ? args.runAsUser : undefined;
            resourceInputs["source"] = args ? args.source : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["virtualMachineId"] = args ? args.virtualMachineId : undefined;
            resourceInputs["instanceViews"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["errorBlobManagedIdentity", "outputBlobManagedIdentity", "protectedParameters", "runAsPassword"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(RunCommand.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering RunCommand resources.
 */
export interface RunCommandState {
    /**
     * An `errorBlobManagedIdentity` block as defined below. User-assigned managed Identity that has access to errorBlobUri storage blob.
     */
    errorBlobManagedIdentity?: pulumi.Input<inputs.compute.RunCommandErrorBlobManagedIdentity>;
    /**
     * Specifies the Azure storage blob where script error stream will be uploaded.
     */
    errorBlobUri?: pulumi.Input<string>;
    instanceViews?: pulumi.Input<pulumi.Input<inputs.compute.RunCommandInstanceView>[]>;
    /**
     * The Azure Region where the Virtual Machine Run Command should exist. Changing this forces a new Virtual Machine Run Command to be created.
     */
    location?: pulumi.Input<string>;
    /**
     * Specifies the name of this Virtual Machine Run Command. Changing this forces a new Virtual Machine Run Command to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * An `outputBlobManagedIdentity` block as defined below. User-assigned managed Identity that has access to outputBlobUri storage blob.
     */
    outputBlobManagedIdentity?: pulumi.Input<inputs.compute.RunCommandOutputBlobManagedIdentity>;
    /**
     * Specifies the Azure storage blob where script output stream will be uploaded. It can be basic blob URI with SAS token.
     */
    outputBlobUri?: pulumi.Input<string>;
    /**
     * A list of `parameter` blocks as defined below. The parameters used by the script.
     */
    parameters?: pulumi.Input<pulumi.Input<inputs.compute.RunCommandParameter>[]>;
    /**
     * A list of `protectedParameter` blocks as defined below. The protected parameters used by the script.
     */
    protectedParameters?: pulumi.Input<pulumi.Input<inputs.compute.RunCommandProtectedParameter>[]>;
    /**
     * Specifies the user account password on the VM when executing the Virtual Machine Run Command.
     */
    runAsPassword?: pulumi.Input<string>;
    /**
     * Specifies the user account on the VM when executing the Virtual Machine Run Command.
     */
    runAsUser?: pulumi.Input<string>;
    /**
     * A `source` block as defined below. The source of the run command script.
     */
    source?: pulumi.Input<inputs.compute.RunCommandSource>;
    /**
     * A mapping of tags which should be assigned to the Virtual Machine Run Command.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Specifies the Virtual Machine ID within which this Virtual Machine Run Command should exist. Changing this forces a new Virtual Machine Run Command to be created.
     */
    virtualMachineId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a RunCommand resource.
 */
export interface RunCommandArgs {
    /**
     * An `errorBlobManagedIdentity` block as defined below. User-assigned managed Identity that has access to errorBlobUri storage blob.
     */
    errorBlobManagedIdentity?: pulumi.Input<inputs.compute.RunCommandErrorBlobManagedIdentity>;
    /**
     * Specifies the Azure storage blob where script error stream will be uploaded.
     */
    errorBlobUri?: pulumi.Input<string>;
    /**
     * The Azure Region where the Virtual Machine Run Command should exist. Changing this forces a new Virtual Machine Run Command to be created.
     */
    location?: pulumi.Input<string>;
    /**
     * Specifies the name of this Virtual Machine Run Command. Changing this forces a new Virtual Machine Run Command to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * An `outputBlobManagedIdentity` block as defined below. User-assigned managed Identity that has access to outputBlobUri storage blob.
     */
    outputBlobManagedIdentity?: pulumi.Input<inputs.compute.RunCommandOutputBlobManagedIdentity>;
    /**
     * Specifies the Azure storage blob where script output stream will be uploaded. It can be basic blob URI with SAS token.
     */
    outputBlobUri?: pulumi.Input<string>;
    /**
     * A list of `parameter` blocks as defined below. The parameters used by the script.
     */
    parameters?: pulumi.Input<pulumi.Input<inputs.compute.RunCommandParameter>[]>;
    /**
     * A list of `protectedParameter` blocks as defined below. The protected parameters used by the script.
     */
    protectedParameters?: pulumi.Input<pulumi.Input<inputs.compute.RunCommandProtectedParameter>[]>;
    /**
     * Specifies the user account password on the VM when executing the Virtual Machine Run Command.
     */
    runAsPassword?: pulumi.Input<string>;
    /**
     * Specifies the user account on the VM when executing the Virtual Machine Run Command.
     */
    runAsUser?: pulumi.Input<string>;
    /**
     * A `source` block as defined below. The source of the run command script.
     */
    source: pulumi.Input<inputs.compute.RunCommandSource>;
    /**
     * A mapping of tags which should be assigned to the Virtual Machine Run Command.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Specifies the Virtual Machine ID within which this Virtual Machine Run Command should exist. Changing this forces a new Virtual Machine Run Command to be created.
     */
    virtualMachineId: pulumi.Input<string>;
}
