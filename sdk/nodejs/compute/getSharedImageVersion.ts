// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Use this data source to access information about an existing Version of a Shared Image within a Shared Image Gallery.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = azure.compute.getSharedImageVersion({
 *     name: "1.0.0",
 *     imageName: "my-image",
 *     galleryName: "my-image-gallery",
 *     resourceGroupName: "example-resources",
 * });
 * ```
 *
 * ## API Providers
 *
 * <!-- This section is generated, changes will be overwritten -->
 * This data source uses the following Azure API Providers:
 *
 * * `Microsoft.Compute`: 2023-07-03
 */
export function getSharedImageVersion(args: GetSharedImageVersionArgs, opts?: pulumi.InvokeOptions): Promise<GetSharedImageVersionResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azure:compute/getSharedImageVersion:getSharedImageVersion", {
        "galleryName": args.galleryName,
        "imageName": args.imageName,
        "name": args.name,
        "resourceGroupName": args.resourceGroupName,
        "sortVersionsBySemver": args.sortVersionsBySemver,
        "tags": args.tags,
    }, opts);
}

/**
 * A collection of arguments for invoking getSharedImageVersion.
 */
export interface GetSharedImageVersionArgs {
    /**
     * The name of the Shared Image Gallery in which the Shared Image exists.
     */
    galleryName: string;
    /**
     * The name of the Shared Image in which this Version exists.
     */
    imageName: string;
    /**
     * The name of the Image Version.
     *
     * > **Note:** You may specify `latest` to obtain the latest version or `recent` to obtain the most recently updated version.
     *
     * > **Note:** In 3.0, `latest` may return an image version with `excludeFromLatest` set to `true`. Starting from 4.0 onwards `latest` will not return image versions with `exludeFromLatest` set to `true`.
     */
    name: string;
    /**
     * The name of the Resource Group in which the Shared Image Gallery exists.
     */
    resourceGroupName: string;
    /**
     * Sort available versions taking SemVer versioning scheme into account. Defaults to `false`.
     */
    sortVersionsBySemver?: boolean;
    /**
     * A mapping of tags assigned to the Shared Image.
     */
    tags?: {[key: string]: string};
}

/**
 * A collection of values returned by getSharedImageVersion.
 */
export interface GetSharedImageVersionResult {
    /**
     * Is this Image Version excluded from the `latest` filter?
     */
    readonly excludeFromLatest: boolean;
    readonly galleryName: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly imageName: string;
    /**
     * The supported Azure location where the Shared Image Gallery exists.
     */
    readonly location: string;
    /**
     * The ID of the Managed Image which was the source of this Shared Image Version.
     */
    readonly managedImageId: string;
    /**
     * The Azure Region in which this Image Version exists.
     */
    readonly name: string;
    /**
     * The size of the OS disk snapshot (in Gigabytes) which was the source of this Shared Image Version.
     */
    readonly osDiskImageSizeGb: number;
    /**
     * The ID of the OS disk snapshot which was the source of this Shared Image Version.
     */
    readonly osDiskSnapshotId: string;
    readonly resourceGroupName: string;
    readonly sortVersionsBySemver?: boolean;
    /**
     * A mapping of tags assigned to the Shared Image.
     */
    readonly tags?: {[key: string]: string};
    /**
     * One or more `targetRegion` blocks as documented below.
     */
    readonly targetRegions: outputs.compute.GetSharedImageVersionTargetRegion[];
}
/**
 * Use this data source to access information about an existing Version of a Shared Image within a Shared Image Gallery.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = azure.compute.getSharedImageVersion({
 *     name: "1.0.0",
 *     imageName: "my-image",
 *     galleryName: "my-image-gallery",
 *     resourceGroupName: "example-resources",
 * });
 * ```
 *
 * ## API Providers
 *
 * <!-- This section is generated, changes will be overwritten -->
 * This data source uses the following Azure API Providers:
 *
 * * `Microsoft.Compute`: 2023-07-03
 */
export function getSharedImageVersionOutput(args: GetSharedImageVersionOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetSharedImageVersionResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("azure:compute/getSharedImageVersion:getSharedImageVersion", {
        "galleryName": args.galleryName,
        "imageName": args.imageName,
        "name": args.name,
        "resourceGroupName": args.resourceGroupName,
        "sortVersionsBySemver": args.sortVersionsBySemver,
        "tags": args.tags,
    }, opts);
}

/**
 * A collection of arguments for invoking getSharedImageVersion.
 */
export interface GetSharedImageVersionOutputArgs {
    /**
     * The name of the Shared Image Gallery in which the Shared Image exists.
     */
    galleryName: pulumi.Input<string>;
    /**
     * The name of the Shared Image in which this Version exists.
     */
    imageName: pulumi.Input<string>;
    /**
     * The name of the Image Version.
     *
     * > **Note:** You may specify `latest` to obtain the latest version or `recent` to obtain the most recently updated version.
     *
     * > **Note:** In 3.0, `latest` may return an image version with `excludeFromLatest` set to `true`. Starting from 4.0 onwards `latest` will not return image versions with `exludeFromLatest` set to `true`.
     */
    name: pulumi.Input<string>;
    /**
     * The name of the Resource Group in which the Shared Image Gallery exists.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * Sort available versions taking SemVer versioning scheme into account. Defaults to `false`.
     */
    sortVersionsBySemver?: pulumi.Input<boolean>;
    /**
     * A mapping of tags assigned to the Shared Image.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
