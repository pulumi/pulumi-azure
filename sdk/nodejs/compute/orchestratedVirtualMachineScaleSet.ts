// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Manages an Virtual Machine Scale Set in Flexible Orchestration Mode.
 *
 * ## Disclaimers
 *
 * > **Note:** As of the **v2.86.0** (November 19, 2021) release of the provider this resource will only create Virtual Machine Scale Sets with the **Flexible** Orchestration Mode.
 *
 * > **Note:** All arguments including the administrator login and password will be stored in the raw state as plain-text. [Read more about sensitive data in state](https://www.terraform.io/docs/state/sensitive-data.html).
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = new azure.core.ResourceGroup("example", {
 *     name: "example-resources",
 *     location: "West Europe",
 * });
 * const exampleOrchestratedVirtualMachineScaleSet = new azure.compute.OrchestratedVirtualMachineScaleSet("example", {
 *     name: "example-VMSS",
 *     location: example.location,
 *     resourceGroupName: example.name,
 *     platformFaultDomainCount: 1,
 *     zones: ["1"],
 * });
 * ```
 *
 * ## API Providers
 *
 * <!-- This section is generated, changes will be overwritten -->
 * This resource uses the following Azure API Providers:
 *
 * * `Microsoft.Compute` - 2024-11-01
 *
 * ## Import
 *
 * An Virtual Machine Scale Set can be imported using the `resource id`, e.g.
 *
 * ```sh
 * $ pulumi import azure:compute/orchestratedVirtualMachineScaleSet:OrchestratedVirtualMachineScaleSet example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.Compute/virtualMachineScaleSets/scaleset1
 * ```
 */
export class OrchestratedVirtualMachineScaleSet extends pulumi.CustomResource {
    /**
     * Get an existing OrchestratedVirtualMachineScaleSet resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: OrchestratedVirtualMachineScaleSetState, opts?: pulumi.CustomResourceOptions): OrchestratedVirtualMachineScaleSet {
        return new OrchestratedVirtualMachineScaleSet(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure:compute/orchestratedVirtualMachineScaleSet:OrchestratedVirtualMachineScaleSet';

    /**
     * Returns true if the given object is an instance of OrchestratedVirtualMachineScaleSet.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is OrchestratedVirtualMachineScaleSet {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === OrchestratedVirtualMachineScaleSet.__pulumiType;
    }

    /**
     * An `additionalCapabilities` block as defined below.
     */
    declare public readonly additionalCapabilities: pulumi.Output<outputs.compute.OrchestratedVirtualMachineScaleSetAdditionalCapabilities | undefined>;
    /**
     * An `automaticInstanceRepair` block as defined below.
     *
     * > **Note:** To enable the `automaticInstanceRepair`, the Orchestrated Virtual Machine Scale Set must have a valid [Application Health Extension](https://docs.microsoft.com/azure/virtual-machine-scale-sets/virtual-machine-scale-sets-health-extension).
     */
    declare public readonly automaticInstanceRepair: pulumi.Output<outputs.compute.OrchestratedVirtualMachineScaleSetAutomaticInstanceRepair>;
    /**
     * A `bootDiagnostics` block as defined below.
     */
    declare public readonly bootDiagnostics: pulumi.Output<outputs.compute.OrchestratedVirtualMachineScaleSetBootDiagnostics | undefined>;
    /**
     * Specifies the ID of the Capacity Reservation Group which the Virtual Machine Scale Set should be allocated to. Changing this forces a new resource to be created.
     *
     * > **Note:** `capacityReservationGroupId` cannot be specified with `proximityPlacementGroupId`
     *
     * > **Note:** If `capacityReservationGroupId` is specified the `singlePlacementGroup` must be set to `false`.
     */
    declare public readonly capacityReservationGroupId: pulumi.Output<string | undefined>;
    /**
     * One or more `dataDisk` blocks as defined below.
     */
    declare public readonly dataDisks: pulumi.Output<outputs.compute.OrchestratedVirtualMachineScaleSetDataDisk[] | undefined>;
    /**
     * Should disks attached to this Virtual Machine Scale Set be encrypted by enabling Encryption at Host?
     */
    declare public readonly encryptionAtHostEnabled: pulumi.Output<boolean | undefined>;
    /**
     * The Policy which should be used by Spot Virtual Machines that are Evicted from the Scale Set. Possible values are `Deallocate` and `Delete`. Changing this forces a new resource to be created.
     */
    declare public readonly evictionPolicy: pulumi.Output<string | undefined>;
    /**
     * Should extension operations be allowed on the Virtual Machine Scale Set? Possible values are `true` or `false`. Defaults to `true`. Changing this forces a new Virtual Machine Scale Set to be created.
     *
     * > **Note:** `extensionOperationsEnabled` may only be set to `false` if there are no extensions defined in the `extension` field.
     */
    declare public readonly extensionOperationsEnabled: pulumi.Output<boolean | undefined>;
    /**
     * One or more `extension` blocks as defined below
     */
    declare public readonly extensions: pulumi.Output<outputs.compute.OrchestratedVirtualMachineScaleSetExtension[]>;
    /**
     * Specifies the time alloted for all extensions to start. The time duration should be between 15 minutes and 120 minutes (inclusive) and should be specified in ISO 8601 format. Defaults to `PT1H30M`.
     */
    declare public readonly extensionsTimeBudget: pulumi.Output<string | undefined>;
    /**
     * An `identity` block as defined below.
     */
    declare public readonly identity: pulumi.Output<outputs.compute.OrchestratedVirtualMachineScaleSetIdentity | undefined>;
    /**
     * The number of Virtual Machines in the Virtual Machine Scale Set.
     */
    declare public readonly instances: pulumi.Output<number>;
    /**
     * Specifies the type of on-premise license (also known as Azure Hybrid Use Benefit) which should be used for this Virtual Machine Scale Set. Possible values are `None`, `Windows_Client` and `Windows_Server`.
     */
    declare public readonly licenseType: pulumi.Output<string | undefined>;
    /**
     * The Azure location where the Virtual Machine Scale Set should exist. Changing this forces a new resource to be created.
     */
    declare public readonly location: pulumi.Output<string>;
    /**
     * The maximum price you're willing to pay for each Virtual Machine in this Scale Set, in US Dollars; which must be greater than the current spot price. If this bid price falls below the current spot price the Virtual Machines in the Scale Set will be evicted using the eviction_policy. Defaults to `-1`, which means that each Virtual Machine in the Scale Set should not be evicted for price reasons.
     */
    declare public readonly maxBidPrice: pulumi.Output<number | undefined>;
    /**
     * The name of the Virtual Machine Scale Set. Changing this forces a new resource to be created.
     */
    declare public readonly name: pulumi.Output<string>;
    /**
     * Specifies the Microsoft.Network API version used when creating networking resources in the Network Interface Configurations for Virtual Machine Scale Set. Possible values are `2020-11-01` and `2022-11-01`. Defaults to `2020-11-01`.
     */
    declare public readonly networkApiVersion: pulumi.Output<string | undefined>;
    /**
     * One or more `networkInterface` blocks as defined below.
     */
    declare public readonly networkInterfaces: pulumi.Output<outputs.compute.OrchestratedVirtualMachineScaleSetNetworkInterface[] | undefined>;
    /**
     * An `osDisk` block as defined below.
     */
    declare public readonly osDisk: pulumi.Output<outputs.compute.OrchestratedVirtualMachineScaleSetOsDisk | undefined>;
    /**
     * An `osProfile` block as defined below.
     */
    declare public readonly osProfile: pulumi.Output<outputs.compute.OrchestratedVirtualMachineScaleSetOsProfile | undefined>;
    /**
     * A `plan` block as documented below. Changing this forces a new resource to be created.
     */
    declare public readonly plan: pulumi.Output<outputs.compute.OrchestratedVirtualMachineScaleSetPlan | undefined>;
    /**
     * Specifies the number of fault domains that are used by this Virtual Machine Scale Set. Changing this forces a new resource to be created.
     *
     * > **Note:** The number of Fault Domains varies depending on which Azure Region you're using. More information about update and fault domains and how they work can be found [here](https://learn.microsoft.com/en-us/azure/virtual-machines/availability-set-overview).
     */
    declare public readonly platformFaultDomainCount: pulumi.Output<number>;
    /**
     * The Priority of this Virtual Machine Scale Set. Possible values are `Regular` and `Spot`. Defaults to `Regular`. Changing this value forces a new resource.
     */
    declare public readonly priority: pulumi.Output<string | undefined>;
    /**
     * a `priorityMix` block as defined below
     */
    declare public readonly priorityMix: pulumi.Output<outputs.compute.OrchestratedVirtualMachineScaleSetPriorityMix | undefined>;
    /**
     * The ID of the Proximity Placement Group which the Virtual Machine should be assigned to. Changing this forces a new resource to be created.
     */
    declare public readonly proximityPlacementGroupId: pulumi.Output<string | undefined>;
    /**
     * The name of the Resource Group in which the Virtual Machine Scale Set should exist. Changing this forces a new resource to be created.
     */
    declare public readonly resourceGroupName: pulumi.Output<string>;
    /**
     * A `rollingUpgradePolicy` block as defined below. This is Required when `upgradeMode` is set to `Rolling` and cannot be specified when `upgradeMode` is set to `Manual`. Changing this forces a new resource to be created.
     */
    declare public readonly rollingUpgradePolicy: pulumi.Output<outputs.compute.OrchestratedVirtualMachineScaleSetRollingUpgradePolicy | undefined>;
    /**
     * Should this Virtual Machine Scale Set be limited to a Single Placement Group, which means the number of instances will be capped at 100 Virtual Machines. Possible values are `true` or `false`.
     *
     * > **Note:** `singlePlacementGroup` behaves differently for Flexible orchestration Virtual Machine Scale Sets than it does for Uniform orchestration Virtual Machine Scale Sets. It is recommended that you do not define the `singlePlacementGroup` field in your configuration file as the service will determine what this value should be based off of the value contained within the `skuName` field of your configuration file. You may set the `singlePlacementGroup` field to `true`, however once you set it to `false` you will not be able to revert it back to `true`.
     */
    declare public readonly singlePlacementGroup: pulumi.Output<boolean>;
    /**
     * The `name` of the SKU to be used by this Virtual Machine Scale Set. Valid values include: any of the [General purpose](https://docs.microsoft.com/azure/virtual-machines/sizes-general), [Compute optimized](https://docs.microsoft.com/azure/virtual-machines/sizes-compute), [Memory optimized](https://docs.microsoft.com/azure/virtual-machines/sizes-memory), [Storage optimized](https://docs.microsoft.com/azure/virtual-machines/sizes-storage), [GPU optimized](https://docs.microsoft.com/azure/virtual-machines/sizes-gpu), [FPGA optimized](https://docs.microsoft.com/azure/virtual-machines/sizes-field-programmable-gate-arrays), [High performance](https://docs.microsoft.com/azure/virtual-machines/sizes-hpc), or [Previous generation](https://docs.microsoft.com/azure/virtual-machines/sizes-previous-gen) virtual machine SKUs.
     */
    declare public readonly skuName: pulumi.Output<string | undefined>;
    /**
     * An `skuProfile` block as defined below. Changing this forces a new resource to be created.
     *
     * > **Note:** If `skuProfile` is specified the `skuName` must be set to `Mix`.
     */
    declare public readonly skuProfile: pulumi.Output<outputs.compute.OrchestratedVirtualMachineScaleSetSkuProfile | undefined>;
    /**
     * The ID of an Image which each Virtual Machine in this Scale Set should be based on. Possible Image ID types include `Image ID`s, `Shared Image ID`s, `Shared Image Version ID`s, `Community Gallery Image ID`s, `Community Gallery Image Version ID`s, `Shared Gallery Image ID`s and `Shared Gallery Image Version ID`s.
     */
    declare public readonly sourceImageId: pulumi.Output<string | undefined>;
    /**
     * A `sourceImageReference` block as defined below.
     */
    declare public readonly sourceImageReference: pulumi.Output<outputs.compute.OrchestratedVirtualMachineScaleSetSourceImageReference | undefined>;
    /**
     * A mapping of tags which should be assigned to this Virtual Machine Scale Set.
     */
    declare public readonly tags: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * A `terminationNotification` block as defined below.
     */
    declare public readonly terminationNotification: pulumi.Output<outputs.compute.OrchestratedVirtualMachineScaleSetTerminationNotification>;
    /**
     * The Unique ID for the Virtual Machine Scale Set.
     */
    declare public /*out*/ readonly uniqueId: pulumi.Output<string>;
    /**
     * Specifies how upgrades (e.g. changing the Image/SKU) should be performed to Virtual Machine Instances. Possible values are `Automatic`, `Manual` and `Rolling`. Defaults to `Manual`. Changing this forces a new resource to be created.
     */
    declare public readonly upgradeMode: pulumi.Output<string | undefined>;
    /**
     * The Base64-Encoded User Data which should be used for this Virtual Machine Scale Set.
     */
    declare public readonly userDataBase64: pulumi.Output<string | undefined>;
    /**
     * Should the Virtual Machines in this Scale Set be strictly evenly distributed across Availability Zones? Defaults to `false`. Changing this forces a new resource to be created.
     *
     * > **Note:** This can only be set to `true` when one or more `zones` are configured.
     */
    declare public readonly zoneBalance: pulumi.Output<boolean | undefined>;
    /**
     * Specifies a list of Availability Zones across which the Virtual Machine Scale Set will create instances.
     *
     * > **Note:** Updating `zones` to remove an existing zone forces a new Virtual Machine Scale Set to be created.
     *
     * > **Note:** Availability Zones are [only supported in several regions at this time](https://docs.microsoft.com/azure/availability-zones/az-overview).
     */
    declare public readonly zones: pulumi.Output<string[] | undefined>;

    /**
     * Create a OrchestratedVirtualMachineScaleSet resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: OrchestratedVirtualMachineScaleSetArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: OrchestratedVirtualMachineScaleSetArgs | OrchestratedVirtualMachineScaleSetState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as OrchestratedVirtualMachineScaleSetState | undefined;
            resourceInputs["additionalCapabilities"] = state?.additionalCapabilities;
            resourceInputs["automaticInstanceRepair"] = state?.automaticInstanceRepair;
            resourceInputs["bootDiagnostics"] = state?.bootDiagnostics;
            resourceInputs["capacityReservationGroupId"] = state?.capacityReservationGroupId;
            resourceInputs["dataDisks"] = state?.dataDisks;
            resourceInputs["encryptionAtHostEnabled"] = state?.encryptionAtHostEnabled;
            resourceInputs["evictionPolicy"] = state?.evictionPolicy;
            resourceInputs["extensionOperationsEnabled"] = state?.extensionOperationsEnabled;
            resourceInputs["extensions"] = state?.extensions;
            resourceInputs["extensionsTimeBudget"] = state?.extensionsTimeBudget;
            resourceInputs["identity"] = state?.identity;
            resourceInputs["instances"] = state?.instances;
            resourceInputs["licenseType"] = state?.licenseType;
            resourceInputs["location"] = state?.location;
            resourceInputs["maxBidPrice"] = state?.maxBidPrice;
            resourceInputs["name"] = state?.name;
            resourceInputs["networkApiVersion"] = state?.networkApiVersion;
            resourceInputs["networkInterfaces"] = state?.networkInterfaces;
            resourceInputs["osDisk"] = state?.osDisk;
            resourceInputs["osProfile"] = state?.osProfile;
            resourceInputs["plan"] = state?.plan;
            resourceInputs["platformFaultDomainCount"] = state?.platformFaultDomainCount;
            resourceInputs["priority"] = state?.priority;
            resourceInputs["priorityMix"] = state?.priorityMix;
            resourceInputs["proximityPlacementGroupId"] = state?.proximityPlacementGroupId;
            resourceInputs["resourceGroupName"] = state?.resourceGroupName;
            resourceInputs["rollingUpgradePolicy"] = state?.rollingUpgradePolicy;
            resourceInputs["singlePlacementGroup"] = state?.singlePlacementGroup;
            resourceInputs["skuName"] = state?.skuName;
            resourceInputs["skuProfile"] = state?.skuProfile;
            resourceInputs["sourceImageId"] = state?.sourceImageId;
            resourceInputs["sourceImageReference"] = state?.sourceImageReference;
            resourceInputs["tags"] = state?.tags;
            resourceInputs["terminationNotification"] = state?.terminationNotification;
            resourceInputs["uniqueId"] = state?.uniqueId;
            resourceInputs["upgradeMode"] = state?.upgradeMode;
            resourceInputs["userDataBase64"] = state?.userDataBase64;
            resourceInputs["zoneBalance"] = state?.zoneBalance;
            resourceInputs["zones"] = state?.zones;
        } else {
            const args = argsOrState as OrchestratedVirtualMachineScaleSetArgs | undefined;
            if (args?.platformFaultDomainCount === undefined && !opts.urn) {
                throw new Error("Missing required property 'platformFaultDomainCount'");
            }
            if (args?.resourceGroupName === undefined && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            resourceInputs["additionalCapabilities"] = args?.additionalCapabilities;
            resourceInputs["automaticInstanceRepair"] = args?.automaticInstanceRepair;
            resourceInputs["bootDiagnostics"] = args?.bootDiagnostics;
            resourceInputs["capacityReservationGroupId"] = args?.capacityReservationGroupId;
            resourceInputs["dataDisks"] = args?.dataDisks;
            resourceInputs["encryptionAtHostEnabled"] = args?.encryptionAtHostEnabled;
            resourceInputs["evictionPolicy"] = args?.evictionPolicy;
            resourceInputs["extensionOperationsEnabled"] = args?.extensionOperationsEnabled;
            resourceInputs["extensions"] = args?.extensions;
            resourceInputs["extensionsTimeBudget"] = args?.extensionsTimeBudget;
            resourceInputs["identity"] = args?.identity;
            resourceInputs["instances"] = args?.instances;
            resourceInputs["licenseType"] = args?.licenseType;
            resourceInputs["location"] = args?.location;
            resourceInputs["maxBidPrice"] = args?.maxBidPrice;
            resourceInputs["name"] = args?.name;
            resourceInputs["networkApiVersion"] = args?.networkApiVersion;
            resourceInputs["networkInterfaces"] = args?.networkInterfaces;
            resourceInputs["osDisk"] = args?.osDisk;
            resourceInputs["osProfile"] = args?.osProfile;
            resourceInputs["plan"] = args?.plan;
            resourceInputs["platformFaultDomainCount"] = args?.platformFaultDomainCount;
            resourceInputs["priority"] = args?.priority;
            resourceInputs["priorityMix"] = args?.priorityMix;
            resourceInputs["proximityPlacementGroupId"] = args?.proximityPlacementGroupId;
            resourceInputs["resourceGroupName"] = args?.resourceGroupName;
            resourceInputs["rollingUpgradePolicy"] = args?.rollingUpgradePolicy;
            resourceInputs["singlePlacementGroup"] = args?.singlePlacementGroup;
            resourceInputs["skuName"] = args?.skuName;
            resourceInputs["skuProfile"] = args?.skuProfile;
            resourceInputs["sourceImageId"] = args?.sourceImageId;
            resourceInputs["sourceImageReference"] = args?.sourceImageReference;
            resourceInputs["tags"] = args?.tags;
            resourceInputs["terminationNotification"] = args?.terminationNotification;
            resourceInputs["upgradeMode"] = args?.upgradeMode;
            resourceInputs["userDataBase64"] = args?.userDataBase64 ? pulumi.secret(args.userDataBase64) : undefined;
            resourceInputs["zoneBalance"] = args?.zoneBalance;
            resourceInputs["zones"] = args?.zones;
            resourceInputs["uniqueId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["userDataBase64"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(OrchestratedVirtualMachineScaleSet.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering OrchestratedVirtualMachineScaleSet resources.
 */
export interface OrchestratedVirtualMachineScaleSetState {
    /**
     * An `additionalCapabilities` block as defined below.
     */
    additionalCapabilities?: pulumi.Input<inputs.compute.OrchestratedVirtualMachineScaleSetAdditionalCapabilities>;
    /**
     * An `automaticInstanceRepair` block as defined below.
     *
     * > **Note:** To enable the `automaticInstanceRepair`, the Orchestrated Virtual Machine Scale Set must have a valid [Application Health Extension](https://docs.microsoft.com/azure/virtual-machine-scale-sets/virtual-machine-scale-sets-health-extension).
     */
    automaticInstanceRepair?: pulumi.Input<inputs.compute.OrchestratedVirtualMachineScaleSetAutomaticInstanceRepair>;
    /**
     * A `bootDiagnostics` block as defined below.
     */
    bootDiagnostics?: pulumi.Input<inputs.compute.OrchestratedVirtualMachineScaleSetBootDiagnostics>;
    /**
     * Specifies the ID of the Capacity Reservation Group which the Virtual Machine Scale Set should be allocated to. Changing this forces a new resource to be created.
     *
     * > **Note:** `capacityReservationGroupId` cannot be specified with `proximityPlacementGroupId`
     *
     * > **Note:** If `capacityReservationGroupId` is specified the `singlePlacementGroup` must be set to `false`.
     */
    capacityReservationGroupId?: pulumi.Input<string>;
    /**
     * One or more `dataDisk` blocks as defined below.
     */
    dataDisks?: pulumi.Input<pulumi.Input<inputs.compute.OrchestratedVirtualMachineScaleSetDataDisk>[]>;
    /**
     * Should disks attached to this Virtual Machine Scale Set be encrypted by enabling Encryption at Host?
     */
    encryptionAtHostEnabled?: pulumi.Input<boolean>;
    /**
     * The Policy which should be used by Spot Virtual Machines that are Evicted from the Scale Set. Possible values are `Deallocate` and `Delete`. Changing this forces a new resource to be created.
     */
    evictionPolicy?: pulumi.Input<string>;
    /**
     * Should extension operations be allowed on the Virtual Machine Scale Set? Possible values are `true` or `false`. Defaults to `true`. Changing this forces a new Virtual Machine Scale Set to be created.
     *
     * > **Note:** `extensionOperationsEnabled` may only be set to `false` if there are no extensions defined in the `extension` field.
     */
    extensionOperationsEnabled?: pulumi.Input<boolean>;
    /**
     * One or more `extension` blocks as defined below
     */
    extensions?: pulumi.Input<pulumi.Input<inputs.compute.OrchestratedVirtualMachineScaleSetExtension>[]>;
    /**
     * Specifies the time alloted for all extensions to start. The time duration should be between 15 minutes and 120 minutes (inclusive) and should be specified in ISO 8601 format. Defaults to `PT1H30M`.
     */
    extensionsTimeBudget?: pulumi.Input<string>;
    /**
     * An `identity` block as defined below.
     */
    identity?: pulumi.Input<inputs.compute.OrchestratedVirtualMachineScaleSetIdentity>;
    /**
     * The number of Virtual Machines in the Virtual Machine Scale Set.
     */
    instances?: pulumi.Input<number>;
    /**
     * Specifies the type of on-premise license (also known as Azure Hybrid Use Benefit) which should be used for this Virtual Machine Scale Set. Possible values are `None`, `Windows_Client` and `Windows_Server`.
     */
    licenseType?: pulumi.Input<string>;
    /**
     * The Azure location where the Virtual Machine Scale Set should exist. Changing this forces a new resource to be created.
     */
    location?: pulumi.Input<string>;
    /**
     * The maximum price you're willing to pay for each Virtual Machine in this Scale Set, in US Dollars; which must be greater than the current spot price. If this bid price falls below the current spot price the Virtual Machines in the Scale Set will be evicted using the eviction_policy. Defaults to `-1`, which means that each Virtual Machine in the Scale Set should not be evicted for price reasons.
     */
    maxBidPrice?: pulumi.Input<number>;
    /**
     * The name of the Virtual Machine Scale Set. Changing this forces a new resource to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * Specifies the Microsoft.Network API version used when creating networking resources in the Network Interface Configurations for Virtual Machine Scale Set. Possible values are `2020-11-01` and `2022-11-01`. Defaults to `2020-11-01`.
     */
    networkApiVersion?: pulumi.Input<string>;
    /**
     * One or more `networkInterface` blocks as defined below.
     */
    networkInterfaces?: pulumi.Input<pulumi.Input<inputs.compute.OrchestratedVirtualMachineScaleSetNetworkInterface>[]>;
    /**
     * An `osDisk` block as defined below.
     */
    osDisk?: pulumi.Input<inputs.compute.OrchestratedVirtualMachineScaleSetOsDisk>;
    /**
     * An `osProfile` block as defined below.
     */
    osProfile?: pulumi.Input<inputs.compute.OrchestratedVirtualMachineScaleSetOsProfile>;
    /**
     * A `plan` block as documented below. Changing this forces a new resource to be created.
     */
    plan?: pulumi.Input<inputs.compute.OrchestratedVirtualMachineScaleSetPlan>;
    /**
     * Specifies the number of fault domains that are used by this Virtual Machine Scale Set. Changing this forces a new resource to be created.
     *
     * > **Note:** The number of Fault Domains varies depending on which Azure Region you're using. More information about update and fault domains and how they work can be found [here](https://learn.microsoft.com/en-us/azure/virtual-machines/availability-set-overview).
     */
    platformFaultDomainCount?: pulumi.Input<number>;
    /**
     * The Priority of this Virtual Machine Scale Set. Possible values are `Regular` and `Spot`. Defaults to `Regular`. Changing this value forces a new resource.
     */
    priority?: pulumi.Input<string>;
    /**
     * a `priorityMix` block as defined below
     */
    priorityMix?: pulumi.Input<inputs.compute.OrchestratedVirtualMachineScaleSetPriorityMix>;
    /**
     * The ID of the Proximity Placement Group which the Virtual Machine should be assigned to. Changing this forces a new resource to be created.
     */
    proximityPlacementGroupId?: pulumi.Input<string>;
    /**
     * The name of the Resource Group in which the Virtual Machine Scale Set should exist. Changing this forces a new resource to be created.
     */
    resourceGroupName?: pulumi.Input<string>;
    /**
     * A `rollingUpgradePolicy` block as defined below. This is Required when `upgradeMode` is set to `Rolling` and cannot be specified when `upgradeMode` is set to `Manual`. Changing this forces a new resource to be created.
     */
    rollingUpgradePolicy?: pulumi.Input<inputs.compute.OrchestratedVirtualMachineScaleSetRollingUpgradePolicy>;
    /**
     * Should this Virtual Machine Scale Set be limited to a Single Placement Group, which means the number of instances will be capped at 100 Virtual Machines. Possible values are `true` or `false`.
     *
     * > **Note:** `singlePlacementGroup` behaves differently for Flexible orchestration Virtual Machine Scale Sets than it does for Uniform orchestration Virtual Machine Scale Sets. It is recommended that you do not define the `singlePlacementGroup` field in your configuration file as the service will determine what this value should be based off of the value contained within the `skuName` field of your configuration file. You may set the `singlePlacementGroup` field to `true`, however once you set it to `false` you will not be able to revert it back to `true`.
     */
    singlePlacementGroup?: pulumi.Input<boolean>;
    /**
     * The `name` of the SKU to be used by this Virtual Machine Scale Set. Valid values include: any of the [General purpose](https://docs.microsoft.com/azure/virtual-machines/sizes-general), [Compute optimized](https://docs.microsoft.com/azure/virtual-machines/sizes-compute), [Memory optimized](https://docs.microsoft.com/azure/virtual-machines/sizes-memory), [Storage optimized](https://docs.microsoft.com/azure/virtual-machines/sizes-storage), [GPU optimized](https://docs.microsoft.com/azure/virtual-machines/sizes-gpu), [FPGA optimized](https://docs.microsoft.com/azure/virtual-machines/sizes-field-programmable-gate-arrays), [High performance](https://docs.microsoft.com/azure/virtual-machines/sizes-hpc), or [Previous generation](https://docs.microsoft.com/azure/virtual-machines/sizes-previous-gen) virtual machine SKUs.
     */
    skuName?: pulumi.Input<string>;
    /**
     * An `skuProfile` block as defined below. Changing this forces a new resource to be created.
     *
     * > **Note:** If `skuProfile` is specified the `skuName` must be set to `Mix`.
     */
    skuProfile?: pulumi.Input<inputs.compute.OrchestratedVirtualMachineScaleSetSkuProfile>;
    /**
     * The ID of an Image which each Virtual Machine in this Scale Set should be based on. Possible Image ID types include `Image ID`s, `Shared Image ID`s, `Shared Image Version ID`s, `Community Gallery Image ID`s, `Community Gallery Image Version ID`s, `Shared Gallery Image ID`s and `Shared Gallery Image Version ID`s.
     */
    sourceImageId?: pulumi.Input<string>;
    /**
     * A `sourceImageReference` block as defined below.
     */
    sourceImageReference?: pulumi.Input<inputs.compute.OrchestratedVirtualMachineScaleSetSourceImageReference>;
    /**
     * A mapping of tags which should be assigned to this Virtual Machine Scale Set.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * A `terminationNotification` block as defined below.
     */
    terminationNotification?: pulumi.Input<inputs.compute.OrchestratedVirtualMachineScaleSetTerminationNotification>;
    /**
     * The Unique ID for the Virtual Machine Scale Set.
     */
    uniqueId?: pulumi.Input<string>;
    /**
     * Specifies how upgrades (e.g. changing the Image/SKU) should be performed to Virtual Machine Instances. Possible values are `Automatic`, `Manual` and `Rolling`. Defaults to `Manual`. Changing this forces a new resource to be created.
     */
    upgradeMode?: pulumi.Input<string>;
    /**
     * The Base64-Encoded User Data which should be used for this Virtual Machine Scale Set.
     */
    userDataBase64?: pulumi.Input<string>;
    /**
     * Should the Virtual Machines in this Scale Set be strictly evenly distributed across Availability Zones? Defaults to `false`. Changing this forces a new resource to be created.
     *
     * > **Note:** This can only be set to `true` when one or more `zones` are configured.
     */
    zoneBalance?: pulumi.Input<boolean>;
    /**
     * Specifies a list of Availability Zones across which the Virtual Machine Scale Set will create instances.
     *
     * > **Note:** Updating `zones` to remove an existing zone forces a new Virtual Machine Scale Set to be created.
     *
     * > **Note:** Availability Zones are [only supported in several regions at this time](https://docs.microsoft.com/azure/availability-zones/az-overview).
     */
    zones?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * The set of arguments for constructing a OrchestratedVirtualMachineScaleSet resource.
 */
export interface OrchestratedVirtualMachineScaleSetArgs {
    /**
     * An `additionalCapabilities` block as defined below.
     */
    additionalCapabilities?: pulumi.Input<inputs.compute.OrchestratedVirtualMachineScaleSetAdditionalCapabilities>;
    /**
     * An `automaticInstanceRepair` block as defined below.
     *
     * > **Note:** To enable the `automaticInstanceRepair`, the Orchestrated Virtual Machine Scale Set must have a valid [Application Health Extension](https://docs.microsoft.com/azure/virtual-machine-scale-sets/virtual-machine-scale-sets-health-extension).
     */
    automaticInstanceRepair?: pulumi.Input<inputs.compute.OrchestratedVirtualMachineScaleSetAutomaticInstanceRepair>;
    /**
     * A `bootDiagnostics` block as defined below.
     */
    bootDiagnostics?: pulumi.Input<inputs.compute.OrchestratedVirtualMachineScaleSetBootDiagnostics>;
    /**
     * Specifies the ID of the Capacity Reservation Group which the Virtual Machine Scale Set should be allocated to. Changing this forces a new resource to be created.
     *
     * > **Note:** `capacityReservationGroupId` cannot be specified with `proximityPlacementGroupId`
     *
     * > **Note:** If `capacityReservationGroupId` is specified the `singlePlacementGroup` must be set to `false`.
     */
    capacityReservationGroupId?: pulumi.Input<string>;
    /**
     * One or more `dataDisk` blocks as defined below.
     */
    dataDisks?: pulumi.Input<pulumi.Input<inputs.compute.OrchestratedVirtualMachineScaleSetDataDisk>[]>;
    /**
     * Should disks attached to this Virtual Machine Scale Set be encrypted by enabling Encryption at Host?
     */
    encryptionAtHostEnabled?: pulumi.Input<boolean>;
    /**
     * The Policy which should be used by Spot Virtual Machines that are Evicted from the Scale Set. Possible values are `Deallocate` and `Delete`. Changing this forces a new resource to be created.
     */
    evictionPolicy?: pulumi.Input<string>;
    /**
     * Should extension operations be allowed on the Virtual Machine Scale Set? Possible values are `true` or `false`. Defaults to `true`. Changing this forces a new Virtual Machine Scale Set to be created.
     *
     * > **Note:** `extensionOperationsEnabled` may only be set to `false` if there are no extensions defined in the `extension` field.
     */
    extensionOperationsEnabled?: pulumi.Input<boolean>;
    /**
     * One or more `extension` blocks as defined below
     */
    extensions?: pulumi.Input<pulumi.Input<inputs.compute.OrchestratedVirtualMachineScaleSetExtension>[]>;
    /**
     * Specifies the time alloted for all extensions to start. The time duration should be between 15 minutes and 120 minutes (inclusive) and should be specified in ISO 8601 format. Defaults to `PT1H30M`.
     */
    extensionsTimeBudget?: pulumi.Input<string>;
    /**
     * An `identity` block as defined below.
     */
    identity?: pulumi.Input<inputs.compute.OrchestratedVirtualMachineScaleSetIdentity>;
    /**
     * The number of Virtual Machines in the Virtual Machine Scale Set.
     */
    instances?: pulumi.Input<number>;
    /**
     * Specifies the type of on-premise license (also known as Azure Hybrid Use Benefit) which should be used for this Virtual Machine Scale Set. Possible values are `None`, `Windows_Client` and `Windows_Server`.
     */
    licenseType?: pulumi.Input<string>;
    /**
     * The Azure location where the Virtual Machine Scale Set should exist. Changing this forces a new resource to be created.
     */
    location?: pulumi.Input<string>;
    /**
     * The maximum price you're willing to pay for each Virtual Machine in this Scale Set, in US Dollars; which must be greater than the current spot price. If this bid price falls below the current spot price the Virtual Machines in the Scale Set will be evicted using the eviction_policy. Defaults to `-1`, which means that each Virtual Machine in the Scale Set should not be evicted for price reasons.
     */
    maxBidPrice?: pulumi.Input<number>;
    /**
     * The name of the Virtual Machine Scale Set. Changing this forces a new resource to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * Specifies the Microsoft.Network API version used when creating networking resources in the Network Interface Configurations for Virtual Machine Scale Set. Possible values are `2020-11-01` and `2022-11-01`. Defaults to `2020-11-01`.
     */
    networkApiVersion?: pulumi.Input<string>;
    /**
     * One or more `networkInterface` blocks as defined below.
     */
    networkInterfaces?: pulumi.Input<pulumi.Input<inputs.compute.OrchestratedVirtualMachineScaleSetNetworkInterface>[]>;
    /**
     * An `osDisk` block as defined below.
     */
    osDisk?: pulumi.Input<inputs.compute.OrchestratedVirtualMachineScaleSetOsDisk>;
    /**
     * An `osProfile` block as defined below.
     */
    osProfile?: pulumi.Input<inputs.compute.OrchestratedVirtualMachineScaleSetOsProfile>;
    /**
     * A `plan` block as documented below. Changing this forces a new resource to be created.
     */
    plan?: pulumi.Input<inputs.compute.OrchestratedVirtualMachineScaleSetPlan>;
    /**
     * Specifies the number of fault domains that are used by this Virtual Machine Scale Set. Changing this forces a new resource to be created.
     *
     * > **Note:** The number of Fault Domains varies depending on which Azure Region you're using. More information about update and fault domains and how they work can be found [here](https://learn.microsoft.com/en-us/azure/virtual-machines/availability-set-overview).
     */
    platformFaultDomainCount: pulumi.Input<number>;
    /**
     * The Priority of this Virtual Machine Scale Set. Possible values are `Regular` and `Spot`. Defaults to `Regular`. Changing this value forces a new resource.
     */
    priority?: pulumi.Input<string>;
    /**
     * a `priorityMix` block as defined below
     */
    priorityMix?: pulumi.Input<inputs.compute.OrchestratedVirtualMachineScaleSetPriorityMix>;
    /**
     * The ID of the Proximity Placement Group which the Virtual Machine should be assigned to. Changing this forces a new resource to be created.
     */
    proximityPlacementGroupId?: pulumi.Input<string>;
    /**
     * The name of the Resource Group in which the Virtual Machine Scale Set should exist. Changing this forces a new resource to be created.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * A `rollingUpgradePolicy` block as defined below. This is Required when `upgradeMode` is set to `Rolling` and cannot be specified when `upgradeMode` is set to `Manual`. Changing this forces a new resource to be created.
     */
    rollingUpgradePolicy?: pulumi.Input<inputs.compute.OrchestratedVirtualMachineScaleSetRollingUpgradePolicy>;
    /**
     * Should this Virtual Machine Scale Set be limited to a Single Placement Group, which means the number of instances will be capped at 100 Virtual Machines. Possible values are `true` or `false`.
     *
     * > **Note:** `singlePlacementGroup` behaves differently for Flexible orchestration Virtual Machine Scale Sets than it does for Uniform orchestration Virtual Machine Scale Sets. It is recommended that you do not define the `singlePlacementGroup` field in your configuration file as the service will determine what this value should be based off of the value contained within the `skuName` field of your configuration file. You may set the `singlePlacementGroup` field to `true`, however once you set it to `false` you will not be able to revert it back to `true`.
     */
    singlePlacementGroup?: pulumi.Input<boolean>;
    /**
     * The `name` of the SKU to be used by this Virtual Machine Scale Set. Valid values include: any of the [General purpose](https://docs.microsoft.com/azure/virtual-machines/sizes-general), [Compute optimized](https://docs.microsoft.com/azure/virtual-machines/sizes-compute), [Memory optimized](https://docs.microsoft.com/azure/virtual-machines/sizes-memory), [Storage optimized](https://docs.microsoft.com/azure/virtual-machines/sizes-storage), [GPU optimized](https://docs.microsoft.com/azure/virtual-machines/sizes-gpu), [FPGA optimized](https://docs.microsoft.com/azure/virtual-machines/sizes-field-programmable-gate-arrays), [High performance](https://docs.microsoft.com/azure/virtual-machines/sizes-hpc), or [Previous generation](https://docs.microsoft.com/azure/virtual-machines/sizes-previous-gen) virtual machine SKUs.
     */
    skuName?: pulumi.Input<string>;
    /**
     * An `skuProfile` block as defined below. Changing this forces a new resource to be created.
     *
     * > **Note:** If `skuProfile` is specified the `skuName` must be set to `Mix`.
     */
    skuProfile?: pulumi.Input<inputs.compute.OrchestratedVirtualMachineScaleSetSkuProfile>;
    /**
     * The ID of an Image which each Virtual Machine in this Scale Set should be based on. Possible Image ID types include `Image ID`s, `Shared Image ID`s, `Shared Image Version ID`s, `Community Gallery Image ID`s, `Community Gallery Image Version ID`s, `Shared Gallery Image ID`s and `Shared Gallery Image Version ID`s.
     */
    sourceImageId?: pulumi.Input<string>;
    /**
     * A `sourceImageReference` block as defined below.
     */
    sourceImageReference?: pulumi.Input<inputs.compute.OrchestratedVirtualMachineScaleSetSourceImageReference>;
    /**
     * A mapping of tags which should be assigned to this Virtual Machine Scale Set.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * A `terminationNotification` block as defined below.
     */
    terminationNotification?: pulumi.Input<inputs.compute.OrchestratedVirtualMachineScaleSetTerminationNotification>;
    /**
     * Specifies how upgrades (e.g. changing the Image/SKU) should be performed to Virtual Machine Instances. Possible values are `Automatic`, `Manual` and `Rolling`. Defaults to `Manual`. Changing this forces a new resource to be created.
     */
    upgradeMode?: pulumi.Input<string>;
    /**
     * The Base64-Encoded User Data which should be used for this Virtual Machine Scale Set.
     */
    userDataBase64?: pulumi.Input<string>;
    /**
     * Should the Virtual Machines in this Scale Set be strictly evenly distributed across Availability Zones? Defaults to `false`. Changing this forces a new resource to be created.
     *
     * > **Note:** This can only be set to `true` when one or more `zones` are configured.
     */
    zoneBalance?: pulumi.Input<boolean>;
    /**
     * Specifies a list of Availability Zones across which the Virtual Machine Scale Set will create instances.
     *
     * > **Note:** Updating `zones` to remove an existing zone forces a new Virtual Machine Scale Set to be created.
     *
     * > **Note:** Availability Zones are [only supported in several regions at this time](https://docs.microsoft.com/azure/availability-zones/az-overview).
     */
    zones?: pulumi.Input<pulumi.Input<string>[]>;
}
