// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Manages a SSH Public Key.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 * import * as std from "@pulumi/std";
 *
 * const example = new azure.compute.SshPublicKey("example", {
 *     name: "example",
 *     resourceGroupName: "example",
 *     location: "West Europe",
 *     publicKey: std.file({
 *         input: "~/.ssh/id_rsa.pub",
 *     }).then(invoke => invoke.result),
 * });
 * ```
 *
 * ## API Providers
 *
 * <!-- This section is generated, changes will be overwritten -->
 * This resource uses the following Azure API Providers:
 *
 * * `Microsoft.Compute` - 2024-03-01
 *
 * ## Import
 *
 * SSH Public Keys can be imported using the `resource id`, e.g.
 *
 * ```sh
 * $ pulumi import azure:compute/sshPublicKey:SshPublicKey example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.Compute/sshPublicKeys/mySshPublicKeyName1
 * ```
 */
export class SshPublicKey extends pulumi.CustomResource {
    /**
     * Get an existing SshPublicKey resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SshPublicKeyState, opts?: pulumi.CustomResourceOptions): SshPublicKey {
        return new SshPublicKey(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure:compute/sshPublicKey:SshPublicKey';

    /**
     * Returns true if the given object is an instance of SshPublicKey.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SshPublicKey {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SshPublicKey.__pulumiType;
    }

    /**
     * The Azure Region where the SSH Public Key should exist. Changing this forces a new SSH Public Key to be created.
     */
    declare public readonly location: pulumi.Output<string>;
    /**
     * The name which should be used for this SSH Public Key. Changing this forces a new SSH Public Key to be created.
     */
    declare public readonly name: pulumi.Output<string>;
    /**
     * SSH public key used to authenticate to a virtual machine through ssh. the provided public key needs to be at least 2048-bit and in ssh-rsa format.
     */
    declare public readonly publicKey: pulumi.Output<string>;
    /**
     * The name of the Resource Group where the SSH Public Key should exist. Changing this forces a new SSH Public Key to be created.
     */
    declare public readonly resourceGroupName: pulumi.Output<string>;
    /**
     * A mapping of tags which should be assigned to the SSH Public Key.
     */
    declare public readonly tags: pulumi.Output<{[key: string]: string} | undefined>;

    /**
     * Create a SshPublicKey resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SshPublicKeyArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SshPublicKeyArgs | SshPublicKeyState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SshPublicKeyState | undefined;
            resourceInputs["location"] = state?.location;
            resourceInputs["name"] = state?.name;
            resourceInputs["publicKey"] = state?.publicKey;
            resourceInputs["resourceGroupName"] = state?.resourceGroupName;
            resourceInputs["tags"] = state?.tags;
        } else {
            const args = argsOrState as SshPublicKeyArgs | undefined;
            if (args?.publicKey === undefined && !opts.urn) {
                throw new Error("Missing required property 'publicKey'");
            }
            if (args?.resourceGroupName === undefined && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            resourceInputs["location"] = args?.location;
            resourceInputs["name"] = args?.name;
            resourceInputs["publicKey"] = args?.publicKey;
            resourceInputs["resourceGroupName"] = args?.resourceGroupName;
            resourceInputs["tags"] = args?.tags;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SshPublicKey.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering SshPublicKey resources.
 */
export interface SshPublicKeyState {
    /**
     * The Azure Region where the SSH Public Key should exist. Changing this forces a new SSH Public Key to be created.
     */
    location?: pulumi.Input<string>;
    /**
     * The name which should be used for this SSH Public Key. Changing this forces a new SSH Public Key to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * SSH public key used to authenticate to a virtual machine through ssh. the provided public key needs to be at least 2048-bit and in ssh-rsa format.
     */
    publicKey?: pulumi.Input<string>;
    /**
     * The name of the Resource Group where the SSH Public Key should exist. Changing this forces a new SSH Public Key to be created.
     */
    resourceGroupName?: pulumi.Input<string>;
    /**
     * A mapping of tags which should be assigned to the SSH Public Key.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

/**
 * The set of arguments for constructing a SshPublicKey resource.
 */
export interface SshPublicKeyArgs {
    /**
     * The Azure Region where the SSH Public Key should exist. Changing this forces a new SSH Public Key to be created.
     */
    location?: pulumi.Input<string>;
    /**
     * The name which should be used for this SSH Public Key. Changing this forces a new SSH Public Key to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * SSH public key used to authenticate to a virtual machine through ssh. the provided public key needs to be at least 2048-bit and in ssh-rsa format.
     */
    publicKey: pulumi.Input<string>;
    /**
     * The name of the Resource Group where the SSH Public Key should exist. Changing this forces a new SSH Public Key to be created.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * A mapping of tags which should be assigned to the SSH Public Key.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
