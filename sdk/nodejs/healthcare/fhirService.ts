// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Manages a Healthcare FHIR (Fast Healthcare Interoperability Resources) Service
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const exampleResourceGroup = new azure.core.ResourceGroup("exampleResourceGroup", {location: "West Europe"});
 * const current = azure.core.getClientConfig({});
 * const exampleWorkspace = new azure.healthcare.Workspace("exampleWorkspace", {
 *     location: exampleResourceGroup.location,
 *     resourceGroupName: exampleResourceGroup.name,
 * });
 * const exampleFhirService = new azure.healthcare.FhirService("exampleFhirService", {
 *     location: "east us",
 *     resourceGroupName: "tfex-resource_group",
 *     workspaceId: exampleWorkspace.id,
 *     kind: "fhir-R4",
 *     authentication: {
 *         authority: "https://login.microsoftonline.com/tenantId",
 *         audience: "https://tfexfhir.fhir.azurehealthcareapis.com",
 *     },
 *     accessPolicyObjectIds: [current.then(current => current.objectId)],
 *     identity: {
 *         type: "SystemAssigned",
 *     },
 *     containerRegistryLoginServerUrls: ["tfex-container_registry_login_server"],
 *     cors: {
 *         allowedOrigins: [
 *             "https://tfex.com:123",
 *             "https://tfex1.com:3389",
 *         ],
 *         allowedHeaders: ["*"],
 *         allowedMethods: [
 *             "GET",
 *             "DELETE",
 *             "PUT",
 *         ],
 *         maxAgeInSeconds: 3600,
 *         credentialsAllowed: true,
 *     },
 *     configurationExportStorageAccountName: "storage_account_name",
 * });
 * ```
 *
 * ## Import
 *
 * Healthcare FHIR Service can be imported using the resource`id`, e.g.
 *
 * ```sh
 *  $ pulumi import azure:healthcare/fhirService:FhirService example /subscriptions/12345678-1234-9876-4563-123456789012/resourceGroups/group1/providers/Microsoft.HealthcareApis/workspaces/workspace1/fhirServices/service1
 * ```
 */
export class FhirService extends pulumi.CustomResource {
    /**
     * Get an existing FhirService resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: FhirServiceState, opts?: pulumi.CustomResourceOptions): FhirService {
        return new FhirService(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure:healthcare/fhirService:FhirService';

    /**
     * Returns true if the given object is an instance of FhirService.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is FhirService {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === FhirService.__pulumiType;
    }

    /**
     * A list of the access policies of the service instance.
     */
    public readonly accessPolicyObjectIds!: pulumi.Output<string[] | undefined>;
    /**
     * An `authentication` block as defined below.
     */
    public readonly authentication!: pulumi.Output<outputs.healthcare.FhirServiceAuthentication>;
    /**
     * Specifies the name of the storage account which the operation configuration information is exported to.
     */
    public readonly configurationExportStorageAccountName!: pulumi.Output<string | undefined>;
    /**
     * A list of azure container registry settings used for convert data operation of the service instance.
     */
    public readonly containerRegistryLoginServerUrls!: pulumi.Output<string[] | undefined>;
    /**
     * A `cors` block as defined below.
     */
    public readonly cors!: pulumi.Output<outputs.healthcare.FhirServiceCors | undefined>;
    /**
     * An `identity` block as defined below.
     */
    public readonly identity!: pulumi.Output<outputs.healthcare.FhirServiceIdentity | undefined>;
    /**
     * Specifies the kind of the Healthcare FHIR Service. Possible values are: `fhir-Stu3` and `fhir-R4`. Defaults to `fhir-R4`. Changing this forces a new Healthcare FHIR Service to be created.
     */
    public readonly kind!: pulumi.Output<string | undefined>;
    /**
     * Specifies the Azure Region where the Healthcare FHIR Service should be created. Changing this forces a new Healthcare FHIR Service to be created.
     */
    public readonly location!: pulumi.Output<string>;
    /**
     * Specifies the name of the Healthcare FHIR Service. Changing this forces a new Healthcare FHIR Service to be created.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * [A list](https://www.terraform.io/docs/configuration/attr-as-blocks.html) of `ociArtifact` objects as defined below to describe [OCI artifacts for export](https://learn.microsoft.com/en-gb/azure/healthcare-apis/fhir/de-identified-export).
     */
    public readonly ociArtifacts!: pulumi.Output<outputs.healthcare.FhirServiceOciArtifact[] | undefined>;
    /**
     * Whether public networks access is enabled.
     */
    public /*out*/ readonly publicNetworkAccessEnabled!: pulumi.Output<boolean>;
    /**
     * Specifies the name of the Resource Group in which to create the Healthcare FHIR Service. Changing this forces a new resource to be created.
     */
    public readonly resourceGroupName!: pulumi.Output<string>;
    /**
     * A mapping of tags to assign to the Healthcare FHIR Service.
     */
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * Specifies the id of the Healthcare Workspace where the Healthcare FHIR Service should exist. Changing this forces a new Healthcare FHIR Service to be created.
     */
    public readonly workspaceId!: pulumi.Output<string>;

    /**
     * Create a FhirService resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: FhirServiceArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: FhirServiceArgs | FhirServiceState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as FhirServiceState | undefined;
            resourceInputs["accessPolicyObjectIds"] = state ? state.accessPolicyObjectIds : undefined;
            resourceInputs["authentication"] = state ? state.authentication : undefined;
            resourceInputs["configurationExportStorageAccountName"] = state ? state.configurationExportStorageAccountName : undefined;
            resourceInputs["containerRegistryLoginServerUrls"] = state ? state.containerRegistryLoginServerUrls : undefined;
            resourceInputs["cors"] = state ? state.cors : undefined;
            resourceInputs["identity"] = state ? state.identity : undefined;
            resourceInputs["kind"] = state ? state.kind : undefined;
            resourceInputs["location"] = state ? state.location : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["ociArtifacts"] = state ? state.ociArtifacts : undefined;
            resourceInputs["publicNetworkAccessEnabled"] = state ? state.publicNetworkAccessEnabled : undefined;
            resourceInputs["resourceGroupName"] = state ? state.resourceGroupName : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["workspaceId"] = state ? state.workspaceId : undefined;
        } else {
            const args = argsOrState as FhirServiceArgs | undefined;
            if ((!args || args.authentication === undefined) && !opts.urn) {
                throw new Error("Missing required property 'authentication'");
            }
            if ((!args || args.resourceGroupName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            if ((!args || args.workspaceId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'workspaceId'");
            }
            resourceInputs["accessPolicyObjectIds"] = args ? args.accessPolicyObjectIds : undefined;
            resourceInputs["authentication"] = args ? args.authentication : undefined;
            resourceInputs["configurationExportStorageAccountName"] = args ? args.configurationExportStorageAccountName : undefined;
            resourceInputs["containerRegistryLoginServerUrls"] = args ? args.containerRegistryLoginServerUrls : undefined;
            resourceInputs["cors"] = args ? args.cors : undefined;
            resourceInputs["identity"] = args ? args.identity : undefined;
            resourceInputs["kind"] = args ? args.kind : undefined;
            resourceInputs["location"] = args ? args.location : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["ociArtifacts"] = args ? args.ociArtifacts : undefined;
            resourceInputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["workspaceId"] = args ? args.workspaceId : undefined;
            resourceInputs["publicNetworkAccessEnabled"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(FhirService.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering FhirService resources.
 */
export interface FhirServiceState {
    /**
     * A list of the access policies of the service instance.
     */
    accessPolicyObjectIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * An `authentication` block as defined below.
     */
    authentication?: pulumi.Input<inputs.healthcare.FhirServiceAuthentication>;
    /**
     * Specifies the name of the storage account which the operation configuration information is exported to.
     */
    configurationExportStorageAccountName?: pulumi.Input<string>;
    /**
     * A list of azure container registry settings used for convert data operation of the service instance.
     */
    containerRegistryLoginServerUrls?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A `cors` block as defined below.
     */
    cors?: pulumi.Input<inputs.healthcare.FhirServiceCors>;
    /**
     * An `identity` block as defined below.
     */
    identity?: pulumi.Input<inputs.healthcare.FhirServiceIdentity>;
    /**
     * Specifies the kind of the Healthcare FHIR Service. Possible values are: `fhir-Stu3` and `fhir-R4`. Defaults to `fhir-R4`. Changing this forces a new Healthcare FHIR Service to be created.
     */
    kind?: pulumi.Input<string>;
    /**
     * Specifies the Azure Region where the Healthcare FHIR Service should be created. Changing this forces a new Healthcare FHIR Service to be created.
     */
    location?: pulumi.Input<string>;
    /**
     * Specifies the name of the Healthcare FHIR Service. Changing this forces a new Healthcare FHIR Service to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * [A list](https://www.terraform.io/docs/configuration/attr-as-blocks.html) of `ociArtifact` objects as defined below to describe [OCI artifacts for export](https://learn.microsoft.com/en-gb/azure/healthcare-apis/fhir/de-identified-export).
     */
    ociArtifacts?: pulumi.Input<pulumi.Input<inputs.healthcare.FhirServiceOciArtifact>[]>;
    /**
     * Whether public networks access is enabled.
     */
    publicNetworkAccessEnabled?: pulumi.Input<boolean>;
    /**
     * Specifies the name of the Resource Group in which to create the Healthcare FHIR Service. Changing this forces a new resource to be created.
     */
    resourceGroupName?: pulumi.Input<string>;
    /**
     * A mapping of tags to assign to the Healthcare FHIR Service.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Specifies the id of the Healthcare Workspace where the Healthcare FHIR Service should exist. Changing this forces a new Healthcare FHIR Service to be created.
     */
    workspaceId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a FhirService resource.
 */
export interface FhirServiceArgs {
    /**
     * A list of the access policies of the service instance.
     */
    accessPolicyObjectIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * An `authentication` block as defined below.
     */
    authentication: pulumi.Input<inputs.healthcare.FhirServiceAuthentication>;
    /**
     * Specifies the name of the storage account which the operation configuration information is exported to.
     */
    configurationExportStorageAccountName?: pulumi.Input<string>;
    /**
     * A list of azure container registry settings used for convert data operation of the service instance.
     */
    containerRegistryLoginServerUrls?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A `cors` block as defined below.
     */
    cors?: pulumi.Input<inputs.healthcare.FhirServiceCors>;
    /**
     * An `identity` block as defined below.
     */
    identity?: pulumi.Input<inputs.healthcare.FhirServiceIdentity>;
    /**
     * Specifies the kind of the Healthcare FHIR Service. Possible values are: `fhir-Stu3` and `fhir-R4`. Defaults to `fhir-R4`. Changing this forces a new Healthcare FHIR Service to be created.
     */
    kind?: pulumi.Input<string>;
    /**
     * Specifies the Azure Region where the Healthcare FHIR Service should be created. Changing this forces a new Healthcare FHIR Service to be created.
     */
    location?: pulumi.Input<string>;
    /**
     * Specifies the name of the Healthcare FHIR Service. Changing this forces a new Healthcare FHIR Service to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * [A list](https://www.terraform.io/docs/configuration/attr-as-blocks.html) of `ociArtifact` objects as defined below to describe [OCI artifacts for export](https://learn.microsoft.com/en-gb/azure/healthcare-apis/fhir/de-identified-export).
     */
    ociArtifacts?: pulumi.Input<pulumi.Input<inputs.healthcare.FhirServiceOciArtifact>[]>;
    /**
     * Specifies the name of the Resource Group in which to create the Healthcare FHIR Service. Changing this forces a new resource to be created.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * A mapping of tags to assign to the Healthcare FHIR Service.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Specifies the id of the Healthcare Workspace where the Healthcare FHIR Service should exist. Changing this forces a new Healthcare FHIR Service to be created.
     */
    workspaceId: pulumi.Input<string>;
}
