// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Use this data source to access information about an existing Healthcare Med Tech Service
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = azure.healthcare.getMedtechService({
 *     name: "tfexmedtech",
 *     workspaceId: "tfexwks",
 * });
 * export const azurermHealthcareMedtechServiceId = example.then(example => example.id);
 * ```
 */
export function getMedtechService(args: GetMedtechServiceArgs, opts?: pulumi.InvokeOptions): Promise<GetMedtechServiceResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("azure:healthcare/getMedtechService:getMedtechService", {
        "name": args.name,
        "workspaceId": args.workspaceId,
    }, opts);
}

/**
 * A collection of arguments for invoking getMedtechService.
 */
export interface GetMedtechServiceArgs {
    /**
     * The name of the Healthcare Med Tech Service.
     */
    name: string;
    /**
     * The id of the Healthcare Workspace in which the Healthcare Med Tech Service exists.
     */
    workspaceId: string;
}

/**
 * A collection of values returned by getMedtechService.
 */
export interface GetMedtechServiceResult {
    /**
     * The Device Mappings of the Med Tech Service.
     */
    readonly deviceMappingJson: string;
    /**
     * The Consumer Group of the Event Hub of the Healthcare Med Tech Service.
     */
    readonly eventhubConsumerGroupName: string;
    /**
     * The name of the Event Hub of the Healthcare Med Tech Service.
     */
    readonly eventhubName: string;
    /**
     * The namespace name of the Event Hub of the Healthcare Med Tech Service.
     */
    readonly eventhubNamespaceName: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The `identity` block as defined below.
     */
    readonly identities: outputs.healthcare.GetMedtechServiceIdentity[];
    readonly name: string;
    readonly workspaceId: string;
}

export function getMedtechServiceOutput(args: GetMedtechServiceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetMedtechServiceResult> {
    return pulumi.output(args).apply(a => getMedtechService(a, opts))
}

/**
 * A collection of arguments for invoking getMedtechService.
 */
export interface GetMedtechServiceOutputArgs {
    /**
     * The name of the Healthcare Med Tech Service.
     */
    name: pulumi.Input<string>;
    /**
     * The id of the Healthcare Workspace in which the Healthcare Med Tech Service exists.
     */
    workspaceId: pulumi.Input<string>;
}
