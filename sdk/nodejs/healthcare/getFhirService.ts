// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Use this data source to access information about an existing Healthcare FHIR Service(Fast Healthcare Interoperability Resources).
 */
export function getFhirService(args: GetFhirServiceArgs, opts?: pulumi.InvokeOptions): Promise<GetFhirServiceResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azure:healthcare/getFhirService:getFhirService", {
        "name": args.name,
        "tags": args.tags,
        "workspaceId": args.workspaceId,
    }, opts);
}

/**
 * A collection of arguments for invoking getFhirService.
 */
export interface GetFhirServiceArgs {
    /**
     * The name of the Healthcare FHIR Service.
     */
    name: string;
    /**
     * The map of tags assigned to the Healthcare FHIR Service.
     */
    tags?: {[key: string]: string};
    /**
     * The id of the Healthcare Workspace in which the Healthcare FHIR Service exists.
     */
    workspaceId: string;
}

/**
 * A collection of values returned by getFhirService.
 */
export interface GetFhirServiceResult {
    /**
     * The list of the access policies of the service instance.
     */
    readonly accessPolicyObjectIds: string[];
    /**
     * The `authentication` block as defined below.
     */
    readonly authentications: outputs.healthcare.GetFhirServiceAuthentication[];
    /**
     * The name of the storage account which the operation configuration information is exported to.
     */
    readonly configurationExportStorageAccountName: string;
    /**
     * The list of azure container registry settings used for convert data operation of the service instance.
     */
    readonly containerRegistryLoginServerUrls: string[];
    /**
     * The `cors` block as defined below.
     */
    readonly cors: outputs.healthcare.GetFhirServiceCor[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The `identity` block as defined below.
     */
    readonly identities: outputs.healthcare.GetFhirServiceIdentity[];
    /**
     * The kind of the Healthcare FHIR Service.
     */
    readonly kind: string;
    /**
     * The Azure Region where the Healthcare FHIR Service is located.
     */
    readonly location: string;
    readonly name: string;
    /**
     * The map of tags assigned to the Healthcare FHIR Service.
     */
    readonly tags?: {[key: string]: string};
    readonly workspaceId: string;
}
/**
 * Use this data source to access information about an existing Healthcare FHIR Service(Fast Healthcare Interoperability Resources).
 */
export function getFhirServiceOutput(args: GetFhirServiceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetFhirServiceResult> {
    return pulumi.output(args).apply((a: any) => getFhirService(a, opts))
}

/**
 * A collection of arguments for invoking getFhirService.
 */
export interface GetFhirServiceOutputArgs {
    /**
     * The name of the Healthcare FHIR Service.
     */
    name: pulumi.Input<string>;
    /**
     * The map of tags assigned to the Healthcare FHIR Service.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The id of the Healthcare Workspace in which the Healthcare FHIR Service exists.
     */
    workspaceId: pulumi.Input<string>;
}
