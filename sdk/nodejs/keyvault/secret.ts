// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";

/**
 * Manages a Key Vault Secret.
 * 
 * ~> **Note:** All arguments including the secret value will be stored in the raw state as plain-text.
 * [Read more about sensitive data in state](/docs/state/sensitive-data.html).
 */
export class Secret extends pulumi.CustomResource {
    /**
     * Get an existing Secret resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SecretState): Secret {
        return new Secret(name, <any>state, { id });
    }

    /**
     * Specifies the content type for the Key Vault Secret.
     */
    public readonly contentType: pulumi.Output<string | undefined>;
    /**
     * Specifies the name of the Key Vault Secret. Changing this forces a new resource to be created.
     */
    public readonly name: pulumi.Output<string>;
    /**
     * A mapping of tags to assign to the resource.
     */
    public readonly tags: pulumi.Output<{[key: string]: any}>;
    /**
     * Specifies the value of the Key Vault Secret.
     */
    public readonly value: pulumi.Output<string>;
    /**
     * Specifies the URI used to access the Key Vault instance, available on the `azurerm_key_vault` resource.
     */
    public readonly vaultUri: pulumi.Output<string>;
    /**
     * The current version of the Key Vault Secret.
     */
    public /*out*/ readonly version: pulumi.Output<string>;

    /**
     * Create a Secret resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SecretArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SecretArgs | SecretState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        if (opts && opts.id) {
            const state: SecretState = argsOrState as SecretState | undefined;
            inputs["contentType"] = state ? state.contentType : undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["tags"] = state ? state.tags : undefined;
            inputs["value"] = state ? state.value : undefined;
            inputs["vaultUri"] = state ? state.vaultUri : undefined;
            inputs["version"] = state ? state.version : undefined;
        } else {
            const args = argsOrState as SecretArgs | undefined;
            if (!args || args.value === undefined) {
                throw new Error("Missing required property 'value'");
            }
            if (!args || args.vaultUri === undefined) {
                throw new Error("Missing required property 'vaultUri'");
            }
            inputs["contentType"] = args ? args.contentType : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["tags"] = args ? args.tags : undefined;
            inputs["value"] = args ? args.value : undefined;
            inputs["vaultUri"] = args ? args.vaultUri : undefined;
            inputs["version"] = undefined /*out*/;
        }
        super("azure:keyvault/secret:Secret", name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Secret resources.
 */
export interface SecretState {
    /**
     * Specifies the content type for the Key Vault Secret.
     */
    readonly contentType?: pulumi.Input<string>;
    /**
     * Specifies the name of the Key Vault Secret. Changing this forces a new resource to be created.
     */
    readonly name?: pulumi.Input<string>;
    /**
     * A mapping of tags to assign to the resource.
     */
    readonly tags?: pulumi.Input<{[key: string]: any}>;
    /**
     * Specifies the value of the Key Vault Secret.
     */
    readonly value?: pulumi.Input<string>;
    /**
     * Specifies the URI used to access the Key Vault instance, available on the `azurerm_key_vault` resource.
     */
    readonly vaultUri?: pulumi.Input<string>;
    /**
     * The current version of the Key Vault Secret.
     */
    readonly version?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Secret resource.
 */
export interface SecretArgs {
    /**
     * Specifies the content type for the Key Vault Secret.
     */
    readonly contentType?: pulumi.Input<string>;
    /**
     * Specifies the name of the Key Vault Secret. Changing this forces a new resource to be created.
     */
    readonly name?: pulumi.Input<string>;
    /**
     * A mapping of tags to assign to the resource.
     */
    readonly tags?: pulumi.Input<{[key: string]: any}>;
    /**
     * Specifies the value of the Key Vault Secret.
     */
    readonly value: pulumi.Input<string>;
    /**
     * Specifies the URI used to access the Key Vault instance, available on the `azurerm_key_vault` resource.
     */
    readonly vaultUri: pulumi.Input<string>;
}
