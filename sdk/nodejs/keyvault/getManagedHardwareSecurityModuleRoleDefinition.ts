// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Use this data source to access information about an existing KeyVault Role Definition.
 */
export function getManagedHardwareSecurityModuleRoleDefinition(args: GetManagedHardwareSecurityModuleRoleDefinitionArgs, opts?: pulumi.InvokeOptions): Promise<GetManagedHardwareSecurityModuleRoleDefinitionResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azure:keyvault/getManagedHardwareSecurityModuleRoleDefinition:getManagedHardwareSecurityModuleRoleDefinition", {
        "name": args.name,
        "vaultBaseUrl": args.vaultBaseUrl,
    }, opts);
}

/**
 * A collection of arguments for invoking getManagedHardwareSecurityModuleRoleDefinition.
 */
export interface GetManagedHardwareSecurityModuleRoleDefinitionArgs {
    /**
     * The name in UUID notation of this KeyVault Role Definition.
     */
    name: string;
    /**
     * Specify the base URL of the Managed HSM resource.
     */
    vaultBaseUrl: string;
}

/**
 * A collection of values returned by getManagedHardwareSecurityModuleRoleDefinition.
 */
export interface GetManagedHardwareSecurityModuleRoleDefinitionResult {
    /**
     * A list of assignable role scope. Possible values are `/` and `/keys`.
     */
    readonly assignableScopes: string[];
    /**
     * A text description of this role definition.
     */
    readonly description: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly name: string;
    /**
     * A `permission` block as defined below.
     */
    readonly permissions: outputs.keyvault.GetManagedHardwareSecurityModuleRoleDefinitionPermission[];
    /**
     * The ID of the role definition resource without base url.
     */
    readonly resourceManagerId: string;
    /**
     * The role name of the role definition.
     */
    readonly roleName: string;
    /**
     * The type of the role definition. Possible values are `AKVBuiltInRole` and `CustomRole`.
     */
    readonly roleType: string;
    readonly vaultBaseUrl: string;
}
/**
 * Use this data source to access information about an existing KeyVault Role Definition.
 */
export function getManagedHardwareSecurityModuleRoleDefinitionOutput(args: GetManagedHardwareSecurityModuleRoleDefinitionOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetManagedHardwareSecurityModuleRoleDefinitionResult> {
    return pulumi.output(args).apply((a: any) => getManagedHardwareSecurityModuleRoleDefinition(a, opts))
}

/**
 * A collection of arguments for invoking getManagedHardwareSecurityModuleRoleDefinition.
 */
export interface GetManagedHardwareSecurityModuleRoleDefinitionOutputArgs {
    /**
     * The name in UUID notation of this KeyVault Role Definition.
     */
    name: pulumi.Input<string>;
    /**
     * Specify the base URL of the Managed HSM resource.
     */
    vaultBaseUrl: pulumi.Input<string>;
}
