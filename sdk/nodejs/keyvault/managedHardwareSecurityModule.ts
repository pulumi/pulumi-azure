// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Manages a Key Vault Managed Hardware Security Module.
 *
 * > **Note:** The Azure Provider includes a Feature Toggle which will purge a Key Vault Managed Hardware Security Module resource on destroy, rather than the default soft-delete. See `purgeSoftDeletedHardwareSecurityModulesOnDestroy` for more information.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const current = azure.core.getClientConfig({});
 * const example = new azure.core.ResourceGroup("example", {
 *     name: "example-resources",
 *     location: "West Europe",
 * });
 * const exampleManagedHardwareSecurityModule = new azure.keyvault.ManagedHardwareSecurityModule("example", {
 *     name: "exampleKVHsm",
 *     resourceGroupName: example.name,
 *     location: example.location,
 *     skuName: "Standard_B1",
 *     purgeProtectionEnabled: false,
 *     softDeleteRetentionDays: 90,
 *     tenantId: current.then(current => current.tenantId),
 *     adminObjectIds: [current.then(current => current.objectId)],
 *     tags: {
 *         Env: "Test",
 *     },
 * });
 * ```
 *
 * ## API Providers
 *
 * <!-- This section is generated, changes will be overwritten -->
 * This resource uses the following Azure API Providers:
 *
 * * `Microsoft.KeyVault` - 2023-07-01
 *
 * ## Import
 *
 * Key Vault Managed Hardware Security Module can be imported using the `resource id`, e.g.
 *
 * ```sh
 * $ pulumi import azure:keyvault/managedHardwareSecurityModule:ManagedHardwareSecurityModule example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/mygroup1/providers/Microsoft.KeyVault/managedHSMs/hsm1
 * ```
 */
export class ManagedHardwareSecurityModule extends pulumi.CustomResource {
    /**
     * Get an existing ManagedHardwareSecurityModule resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ManagedHardwareSecurityModuleState, opts?: pulumi.CustomResourceOptions): ManagedHardwareSecurityModule {
        return new ManagedHardwareSecurityModule(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure:keyvault/managedHardwareSecurityModule:ManagedHardwareSecurityModule';

    /**
     * Returns true if the given object is an instance of ManagedHardwareSecurityModule.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ManagedHardwareSecurityModule {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ManagedHardwareSecurityModule.__pulumiType;
    }

    /**
     * Specifies a list of administrators object IDs for the key vault Managed Hardware Security Module. Changing this forces a new resource to be created.
     */
    declare public readonly adminObjectIds: pulumi.Output<string[]>;
    /**
     * The URI of the Key Vault Managed Hardware Security Module, used for performing operations on keys.
     */
    declare public /*out*/ readonly hsmUri: pulumi.Output<string>;
    /**
     * Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
     */
    declare public readonly location: pulumi.Output<string>;
    /**
     * Specifies the name of the Key Vault Managed Hardware Security Module. Changing this forces a new resource to be created.
     */
    declare public readonly name: pulumi.Output<string>;
    /**
     * A `networkAcls` block as defined below.
     */
    declare public readonly networkAcls: pulumi.Output<outputs.keyvault.ManagedHardwareSecurityModuleNetworkAcls>;
    /**
     * Whether traffic from public networks is permitted. Defaults to `true`.
     */
    declare public readonly publicNetworkAccessEnabled: pulumi.Output<boolean | undefined>;
    /**
     * Is Purge Protection enabled for this Key Vault Managed Hardware Security Module? Changing this forces a new resource to be created.
     */
    declare public readonly purgeProtectionEnabled: pulumi.Output<boolean | undefined>;
    /**
     * The name of the resource group in which to create the Key Vault Managed Hardware Security Module. Changing this forces a new resource to be created.
     */
    declare public readonly resourceGroupName: pulumi.Output<string>;
    /**
     * This attribute can be used for disaster recovery or when creating another Managed HSM that shares the same security domain.
     */
    declare public /*out*/ readonly securityDomainEncryptedData: pulumi.Output<string>;
    /**
     * A list of KeyVault certificates resource IDs (minimum of three and up to a maximum of 10) to activate this Managed HSM. More information see [activate-your-managed-hsm](https://learn.microsoft.com/azure/key-vault/managed-hsm/quick-create-cli#activate-your-managed-hsm)
     */
    declare public readonly securityDomainKeyVaultCertificateIds: pulumi.Output<string[] | undefined>;
    /**
     * Specifies the minimum number of shares required to decrypt the security domain for recovery. This is required when `securityDomainKeyVaultCertificateIds` is specified. Valid values are between 2 and 10.
     */
    declare public readonly securityDomainQuorum: pulumi.Output<number | undefined>;
    /**
     * The Name of the SKU used for this Key Vault Managed Hardware Security Module. Possible value is `Standard_B1`. Changing this forces a new resource to be created.
     */
    declare public readonly skuName: pulumi.Output<string>;
    /**
     * The number of days that items should be retained for once soft-deleted. This value can be between `7` and `90` days. Defaults to `90`. Changing this forces a new resource to be created.
     */
    declare public readonly softDeleteRetentionDays: pulumi.Output<number | undefined>;
    /**
     * A mapping of tags to assign to the resource.
     */
    declare public readonly tags: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * The Azure Active Directory Tenant ID that should be used for authenticating requests to the key vault Managed Hardware Security Module. Changing this forces a new resource to be created.
     */
    declare public readonly tenantId: pulumi.Output<string>;

    /**
     * Create a ManagedHardwareSecurityModule resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ManagedHardwareSecurityModuleArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ManagedHardwareSecurityModuleArgs | ManagedHardwareSecurityModuleState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ManagedHardwareSecurityModuleState | undefined;
            resourceInputs["adminObjectIds"] = state?.adminObjectIds;
            resourceInputs["hsmUri"] = state?.hsmUri;
            resourceInputs["location"] = state?.location;
            resourceInputs["name"] = state?.name;
            resourceInputs["networkAcls"] = state?.networkAcls;
            resourceInputs["publicNetworkAccessEnabled"] = state?.publicNetworkAccessEnabled;
            resourceInputs["purgeProtectionEnabled"] = state?.purgeProtectionEnabled;
            resourceInputs["resourceGroupName"] = state?.resourceGroupName;
            resourceInputs["securityDomainEncryptedData"] = state?.securityDomainEncryptedData;
            resourceInputs["securityDomainKeyVaultCertificateIds"] = state?.securityDomainKeyVaultCertificateIds;
            resourceInputs["securityDomainQuorum"] = state?.securityDomainQuorum;
            resourceInputs["skuName"] = state?.skuName;
            resourceInputs["softDeleteRetentionDays"] = state?.softDeleteRetentionDays;
            resourceInputs["tags"] = state?.tags;
            resourceInputs["tenantId"] = state?.tenantId;
        } else {
            const args = argsOrState as ManagedHardwareSecurityModuleArgs | undefined;
            if (args?.adminObjectIds === undefined && !opts.urn) {
                throw new Error("Missing required property 'adminObjectIds'");
            }
            if (args?.resourceGroupName === undefined && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            if (args?.skuName === undefined && !opts.urn) {
                throw new Error("Missing required property 'skuName'");
            }
            if (args?.tenantId === undefined && !opts.urn) {
                throw new Error("Missing required property 'tenantId'");
            }
            resourceInputs["adminObjectIds"] = args?.adminObjectIds;
            resourceInputs["location"] = args?.location;
            resourceInputs["name"] = args?.name;
            resourceInputs["networkAcls"] = args?.networkAcls;
            resourceInputs["publicNetworkAccessEnabled"] = args?.publicNetworkAccessEnabled;
            resourceInputs["purgeProtectionEnabled"] = args?.purgeProtectionEnabled;
            resourceInputs["resourceGroupName"] = args?.resourceGroupName;
            resourceInputs["securityDomainKeyVaultCertificateIds"] = args?.securityDomainKeyVaultCertificateIds;
            resourceInputs["securityDomainQuorum"] = args?.securityDomainQuorum;
            resourceInputs["skuName"] = args?.skuName;
            resourceInputs["softDeleteRetentionDays"] = args?.softDeleteRetentionDays;
            resourceInputs["tags"] = args?.tags;
            resourceInputs["tenantId"] = args?.tenantId;
            resourceInputs["hsmUri"] = undefined /*out*/;
            resourceInputs["securityDomainEncryptedData"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["securityDomainEncryptedData"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(ManagedHardwareSecurityModule.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ManagedHardwareSecurityModule resources.
 */
export interface ManagedHardwareSecurityModuleState {
    /**
     * Specifies a list of administrators object IDs for the key vault Managed Hardware Security Module. Changing this forces a new resource to be created.
     */
    adminObjectIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The URI of the Key Vault Managed Hardware Security Module, used for performing operations on keys.
     */
    hsmUri?: pulumi.Input<string>;
    /**
     * Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
     */
    location?: pulumi.Input<string>;
    /**
     * Specifies the name of the Key Vault Managed Hardware Security Module. Changing this forces a new resource to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * A `networkAcls` block as defined below.
     */
    networkAcls?: pulumi.Input<inputs.keyvault.ManagedHardwareSecurityModuleNetworkAcls>;
    /**
     * Whether traffic from public networks is permitted. Defaults to `true`.
     */
    publicNetworkAccessEnabled?: pulumi.Input<boolean>;
    /**
     * Is Purge Protection enabled for this Key Vault Managed Hardware Security Module? Changing this forces a new resource to be created.
     */
    purgeProtectionEnabled?: pulumi.Input<boolean>;
    /**
     * The name of the resource group in which to create the Key Vault Managed Hardware Security Module. Changing this forces a new resource to be created.
     */
    resourceGroupName?: pulumi.Input<string>;
    /**
     * This attribute can be used for disaster recovery or when creating another Managed HSM that shares the same security domain.
     */
    securityDomainEncryptedData?: pulumi.Input<string>;
    /**
     * A list of KeyVault certificates resource IDs (minimum of three and up to a maximum of 10) to activate this Managed HSM. More information see [activate-your-managed-hsm](https://learn.microsoft.com/azure/key-vault/managed-hsm/quick-create-cli#activate-your-managed-hsm)
     */
    securityDomainKeyVaultCertificateIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies the minimum number of shares required to decrypt the security domain for recovery. This is required when `securityDomainKeyVaultCertificateIds` is specified. Valid values are between 2 and 10.
     */
    securityDomainQuorum?: pulumi.Input<number>;
    /**
     * The Name of the SKU used for this Key Vault Managed Hardware Security Module. Possible value is `Standard_B1`. Changing this forces a new resource to be created.
     */
    skuName?: pulumi.Input<string>;
    /**
     * The number of days that items should be retained for once soft-deleted. This value can be between `7` and `90` days. Defaults to `90`. Changing this forces a new resource to be created.
     */
    softDeleteRetentionDays?: pulumi.Input<number>;
    /**
     * A mapping of tags to assign to the resource.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The Azure Active Directory Tenant ID that should be used for authenticating requests to the key vault Managed Hardware Security Module. Changing this forces a new resource to be created.
     */
    tenantId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ManagedHardwareSecurityModule resource.
 */
export interface ManagedHardwareSecurityModuleArgs {
    /**
     * Specifies a list of administrators object IDs for the key vault Managed Hardware Security Module. Changing this forces a new resource to be created.
     */
    adminObjectIds: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
     */
    location?: pulumi.Input<string>;
    /**
     * Specifies the name of the Key Vault Managed Hardware Security Module. Changing this forces a new resource to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * A `networkAcls` block as defined below.
     */
    networkAcls?: pulumi.Input<inputs.keyvault.ManagedHardwareSecurityModuleNetworkAcls>;
    /**
     * Whether traffic from public networks is permitted. Defaults to `true`.
     */
    publicNetworkAccessEnabled?: pulumi.Input<boolean>;
    /**
     * Is Purge Protection enabled for this Key Vault Managed Hardware Security Module? Changing this forces a new resource to be created.
     */
    purgeProtectionEnabled?: pulumi.Input<boolean>;
    /**
     * The name of the resource group in which to create the Key Vault Managed Hardware Security Module. Changing this forces a new resource to be created.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * A list of KeyVault certificates resource IDs (minimum of three and up to a maximum of 10) to activate this Managed HSM. More information see [activate-your-managed-hsm](https://learn.microsoft.com/azure/key-vault/managed-hsm/quick-create-cli#activate-your-managed-hsm)
     */
    securityDomainKeyVaultCertificateIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies the minimum number of shares required to decrypt the security domain for recovery. This is required when `securityDomainKeyVaultCertificateIds` is specified. Valid values are between 2 and 10.
     */
    securityDomainQuorum?: pulumi.Input<number>;
    /**
     * The Name of the SKU used for this Key Vault Managed Hardware Security Module. Possible value is `Standard_B1`. Changing this forces a new resource to be created.
     */
    skuName: pulumi.Input<string>;
    /**
     * The number of days that items should be retained for once soft-deleted. This value can be between `7` and `90` days. Defaults to `90`. Changing this forces a new resource to be created.
     */
    softDeleteRetentionDays?: pulumi.Input<number>;
    /**
     * A mapping of tags to assign to the resource.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The Azure Active Directory Tenant ID that should be used for authenticating requests to the key vault Managed Hardware Security Module. Changing this forces a new resource to be created.
     */
    tenantId: pulumi.Input<string>;
}
