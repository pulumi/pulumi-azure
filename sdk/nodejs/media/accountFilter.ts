// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Manages a Media Services Account Filter.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const exampleResourceGroup = new azure.core.ResourceGroup("exampleResourceGroup", {location: "West Europe"});
 * const exampleAccount = new azure.storage.Account("exampleAccount", {
 *     resourceGroupName: exampleResourceGroup.name,
 *     location: exampleResourceGroup.location,
 *     accountTier: "Standard",
 *     accountReplicationType: "GRS",
 * });
 * const exampleServiceAccount = new azure.media.ServiceAccount("exampleServiceAccount", {
 *     location: exampleResourceGroup.location,
 *     resourceGroupName: exampleResourceGroup.name,
 *     storageAccounts: [{
 *         id: exampleAccount.id,
 *         isPrimary: true,
 *     }],
 * });
 * const exampleAccountFilter = new azure.media.AccountFilter("exampleAccountFilter", {
 *     resourceGroupName: azurerm_resource_group.test.name,
 *     mediaServicesAccountName: azurerm_media_services_account.test.name,
 *     firstQualityBitrate: 128000,
 *     presentationTimeRange: {
 *         startInUnits: 0,
 *         endInUnits: 15,
 *         presentationWindowInUnits: 90,
 *         liveBackoffInUnits: 0,
 *         unitTimescaleInMilliseconds: 1000,
 *         forceEnd: false,
 *     },
 *     trackSelections: [
 *         {
 *             conditions: [
 *                 {
 *                     property: "Type",
 *                     operation: "Equal",
 *                     value: "Audio",
 *                 },
 *                 {
 *                     property: "Language",
 *                     operation: "NotEqual",
 *                     value: "en",
 *                 },
 *                 {
 *                     property: "FourCC",
 *                     operation: "NotEqual",
 *                     value: "EC-3",
 *                 },
 *             ],
 *         },
 *         {
 *             conditions: [
 *                 {
 *                     property: "Type",
 *                     operation: "Equal",
 *                     value: "Video",
 *                 },
 *                 {
 *                     property: "Bitrate",
 *                     operation: "Equal",
 *                     value: "3000000-5000000",
 *                 },
 *             ],
 *         },
 *     ],
 * });
 * ```
 *
 * ## Import
 *
 * Account Filters can be imported using the `resource id`, e.g.
 *
 * ```sh
 *  $ pulumi import azure:media/accountFilter:AccountFilter example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.Media/mediaServices/account1/accountFilters/filter1
 * ```
 */
export class AccountFilter extends pulumi.CustomResource {
    /**
     * Get an existing AccountFilter resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AccountFilterState, opts?: pulumi.CustomResourceOptions): AccountFilter {
        return new AccountFilter(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure:media/accountFilter:AccountFilter';

    /**
     * Returns true if the given object is an instance of AccountFilter.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AccountFilter {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AccountFilter.__pulumiType;
    }

    /**
     * The first quality bitrate. Sets the first video track to appear in the Live Streaming playlist to allow HLS native players to start downloading from this quality level at the beginning.
     */
    public readonly firstQualityBitrate!: pulumi.Output<number | undefined>;
    /**
     * The Media Services account name. Changing this forces a new Account Filter to be created.
     */
    public readonly mediaServicesAccountName!: pulumi.Output<string>;
    /**
     * The name which should be used for this Account Filter. Changing this forces a new Account Filter to be created.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * A `presentationTimeRange` block as defined below.
     */
    public readonly presentationTimeRange!: pulumi.Output<outputs.media.AccountFilterPresentationTimeRange | undefined>;
    /**
     * The name of the Resource Group where the Account Filter should exist. Changing this forces a new Account Filter to be created.
     */
    public readonly resourceGroupName!: pulumi.Output<string>;
    /**
     * One or more `trackSelection` blocks as defined below.
     */
    public readonly trackSelections!: pulumi.Output<outputs.media.AccountFilterTrackSelection[] | undefined>;

    /**
     * Create a AccountFilter resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AccountFilterArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AccountFilterArgs | AccountFilterState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AccountFilterState | undefined;
            resourceInputs["firstQualityBitrate"] = state ? state.firstQualityBitrate : undefined;
            resourceInputs["mediaServicesAccountName"] = state ? state.mediaServicesAccountName : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["presentationTimeRange"] = state ? state.presentationTimeRange : undefined;
            resourceInputs["resourceGroupName"] = state ? state.resourceGroupName : undefined;
            resourceInputs["trackSelections"] = state ? state.trackSelections : undefined;
        } else {
            const args = argsOrState as AccountFilterArgs | undefined;
            if ((!args || args.mediaServicesAccountName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'mediaServicesAccountName'");
            }
            if ((!args || args.resourceGroupName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            resourceInputs["firstQualityBitrate"] = args ? args.firstQualityBitrate : undefined;
            resourceInputs["mediaServicesAccountName"] = args ? args.mediaServicesAccountName : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["presentationTimeRange"] = args ? args.presentationTimeRange : undefined;
            resourceInputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            resourceInputs["trackSelections"] = args ? args.trackSelections : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AccountFilter.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering AccountFilter resources.
 */
export interface AccountFilterState {
    /**
     * The first quality bitrate. Sets the first video track to appear in the Live Streaming playlist to allow HLS native players to start downloading from this quality level at the beginning.
     */
    firstQualityBitrate?: pulumi.Input<number>;
    /**
     * The Media Services account name. Changing this forces a new Account Filter to be created.
     */
    mediaServicesAccountName?: pulumi.Input<string>;
    /**
     * The name which should be used for this Account Filter. Changing this forces a new Account Filter to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * A `presentationTimeRange` block as defined below.
     */
    presentationTimeRange?: pulumi.Input<inputs.media.AccountFilterPresentationTimeRange>;
    /**
     * The name of the Resource Group where the Account Filter should exist. Changing this forces a new Account Filter to be created.
     */
    resourceGroupName?: pulumi.Input<string>;
    /**
     * One or more `trackSelection` blocks as defined below.
     */
    trackSelections?: pulumi.Input<pulumi.Input<inputs.media.AccountFilterTrackSelection>[]>;
}

/**
 * The set of arguments for constructing a AccountFilter resource.
 */
export interface AccountFilterArgs {
    /**
     * The first quality bitrate. Sets the first video track to appear in the Live Streaming playlist to allow HLS native players to start downloading from this quality level at the beginning.
     */
    firstQualityBitrate?: pulumi.Input<number>;
    /**
     * The Media Services account name. Changing this forces a new Account Filter to be created.
     */
    mediaServicesAccountName: pulumi.Input<string>;
    /**
     * The name which should be used for this Account Filter. Changing this forces a new Account Filter to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * A `presentationTimeRange` block as defined below.
     */
    presentationTimeRange?: pulumi.Input<inputs.media.AccountFilterPresentationTimeRange>;
    /**
     * The name of the Resource Group where the Account Filter should exist. Changing this forces a new Account Filter to be created.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * One or more `trackSelection` blocks as defined below.
     */
    trackSelections?: pulumi.Input<pulumi.Input<inputs.media.AccountFilterTrackSelection>[]>;
}
