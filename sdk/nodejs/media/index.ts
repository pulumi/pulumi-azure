// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export * from "./asset";
export * from "./assetFilter";
export * from "./contentKeyPolicy";
export * from "./job";
export * from "./liveEvent";
export * from "./liveEventOutput";
export * from "./serviceAccount";
export * from "./streamingEndpoint";
export * from "./streamingLocator";
export * from "./streamingPolicy";
export * from "./transform";

// Import resources to register:
import { Asset } from "./asset";
import { AssetFilter } from "./assetFilter";
import { ContentKeyPolicy } from "./contentKeyPolicy";
import { Job } from "./job";
import { LiveEvent } from "./liveEvent";
import { LiveEventOutput } from "./liveEventOutput";
import { ServiceAccount } from "./serviceAccount";
import { StreamingEndpoint } from "./streamingEndpoint";
import { StreamingLocator } from "./streamingLocator";
import { StreamingPolicy } from "./streamingPolicy";
import { Transform } from "./transform";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "azure:media/asset:Asset":
                return new Asset(name, <any>undefined, { urn })
            case "azure:media/assetFilter:AssetFilter":
                return new AssetFilter(name, <any>undefined, { urn })
            case "azure:media/contentKeyPolicy:ContentKeyPolicy":
                return new ContentKeyPolicy(name, <any>undefined, { urn })
            case "azure:media/job:Job":
                return new Job(name, <any>undefined, { urn })
            case "azure:media/liveEvent:LiveEvent":
                return new LiveEvent(name, <any>undefined, { urn })
            case "azure:media/liveEventOutput:LiveEventOutput":
                return new LiveEventOutput(name, <any>undefined, { urn })
            case "azure:media/serviceAccount:ServiceAccount":
                return new ServiceAccount(name, <any>undefined, { urn })
            case "azure:media/streamingEndpoint:StreamingEndpoint":
                return new StreamingEndpoint(name, <any>undefined, { urn })
            case "azure:media/streamingLocator:StreamingLocator":
                return new StreamingLocator(name, <any>undefined, { urn })
            case "azure:media/streamingPolicy:StreamingPolicy":
                return new StreamingPolicy(name, <any>undefined, { urn })
            case "azure:media/transform:Transform":
                return new Transform(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure", "media/asset", _module)
pulumi.runtime.registerResourceModule("azure", "media/assetFilter", _module)
pulumi.runtime.registerResourceModule("azure", "media/contentKeyPolicy", _module)
pulumi.runtime.registerResourceModule("azure", "media/job", _module)
pulumi.runtime.registerResourceModule("azure", "media/liveEvent", _module)
pulumi.runtime.registerResourceModule("azure", "media/liveEventOutput", _module)
pulumi.runtime.registerResourceModule("azure", "media/serviceAccount", _module)
pulumi.runtime.registerResourceModule("azure", "media/streamingEndpoint", _module)
pulumi.runtime.registerResourceModule("azure", "media/streamingLocator", _module)
pulumi.runtime.registerResourceModule("azure", "media/streamingPolicy", _module)
pulumi.runtime.registerResourceModule("azure", "media/transform", _module)
