// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { AnomalyAlertArgs, AnomalyAlertState } from "./anomalyAlert";
export type AnomalyAlert = import("./anomalyAlert").AnomalyAlert;
export const AnomalyAlert: typeof import("./anomalyAlert").AnomalyAlert = null as any;
utilities.lazyLoad(exports, ["AnomalyAlert"], () => require("./anomalyAlert"));

export { ScheduledActionArgs, ScheduledActionState } from "./scheduledAction";
export type ScheduledAction = import("./scheduledAction").ScheduledAction;
export const ScheduledAction: typeof import("./scheduledAction").ScheduledAction = null as any;
utilities.lazyLoad(exports, ["ScheduledAction"], () => require("./scheduledAction"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "azure:costmanagement/anomalyAlert:AnomalyAlert":
                return new AnomalyAlert(name, <any>undefined, { urn })
            case "azure:costmanagement/scheduledAction:ScheduledAction":
                return new ScheduledAction(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure", "costmanagement/anomalyAlert", _module)
pulumi.runtime.registerResourceModule("azure", "costmanagement/scheduledAction", _module)
