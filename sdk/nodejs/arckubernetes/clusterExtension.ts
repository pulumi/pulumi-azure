// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Manages an Arc Kubernetes Cluster Extension.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 * import * as std from "@pulumi/std";
 *
 * const example = new azure.core.ResourceGroup("example", {
 *     name: "example-resources",
 *     location: "West Europe",
 * });
 * const exampleCluster = new azure.arckubernetes.Cluster("example", {
 *     name: "example-akcc",
 *     resourceGroupName: example.name,
 *     location: "West Europe",
 *     agentPublicKeyCertificate: std.filebase64({
 *         input: "testdata/public.cer",
 *     }).then(invoke => invoke.result),
 *     identity: {
 *         type: "SystemAssigned",
 *     },
 *     tags: {
 *         ENV: "Test",
 *     },
 * });
 * const exampleClusterExtension = new azure.arckubernetes.ClusterExtension("example", {
 *     name: "example-ext",
 *     clusterId: exampleCluster.id,
 *     extensionType: "microsoft.flux",
 * });
 * ```
 *
 * ## API Providers
 *
 * <!-- This section is generated, changes will be overwritten -->
 * This resource uses the following Azure API Providers:
 *
 * * `Microsoft.KubernetesConfiguration` - 2024-11-01
 *
 * ## Import
 *
 * Arc Kubernetes Cluster Extension can be imported using the `resource id` for different `cluster_resource_name`, e.g.
 *
 * ```sh
 * $ pulumi import azure:arckubernetes/clusterExtension:ClusterExtension example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resourceGroup1/providers/Microsoft.Kubernetes/connectedClusters/cluster1/providers/Microsoft.KubernetesConfiguration/extensions/extension1
 * ```
 */
export class ClusterExtension extends pulumi.CustomResource {
    /**
     * Get an existing ClusterExtension resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ClusterExtensionState, opts?: pulumi.CustomResourceOptions): ClusterExtension {
        return new ClusterExtension(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure:arckubernetes/clusterExtension:ClusterExtension';

    /**
     * Returns true if the given object is an instance of ClusterExtension.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ClusterExtension {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ClusterExtension.__pulumiType;
    }

    /**
     * Specifies the Cluster ID. Changing this forces a new Arc Kubernetes Cluster Extension to be created.
     */
    declare public readonly clusterId: pulumi.Output<string>;
    /**
     * Configuration settings that are sensitive, as name-value pairs for configuring this extension.
     */
    declare public readonly configurationProtectedSettings: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * Configuration settings, as name-value pairs for configuring this extension.
     */
    declare public readonly configurationSettings: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * The current version of the extension.
     */
    declare public /*out*/ readonly currentVersion: pulumi.Output<string>;
    /**
     * Specifies the type of extension. It must be one of the extension types registered with Microsoft.KubernetesConfiguration by the Extension publisher. For more information, please refer to [Available Extensions for Arc-enabled Kubernetes clusters](https://learn.microsoft.com/en-us/azure/azure-arc/kubernetes/extensions-release). Changing this forces a new Arc Kubernetes Cluster Extension to be created.
     */
    declare public readonly extensionType: pulumi.Output<string>;
    /**
     * An `identity` block as defined below. Changing this forces a new Arc Kubernetes Cluster Extension to be created.
     */
    declare public readonly identity: pulumi.Output<outputs.arckubernetes.ClusterExtensionIdentity>;
    /**
     * Specifies the name which should be used for this Arc Kubernetes Cluster Extension. Changing this forces a new Arc Kubernetes Cluster Extension to be created.
     */
    declare public readonly name: pulumi.Output<string>;
    /**
     * Namespace where the extension release must be placed for a cluster scoped extension. If this namespace does not exist, it will be created. Changing this forces a new Arc Kubernetes Cluster Extension to be created.
     */
    declare public readonly releaseNamespace: pulumi.Output<string>;
    /**
     * The release train used by this extension. Possible values include but are not limited to `Stable`, `Preview`. Changing this forces a new Arc Kubernetes Cluster Extension to be created.
     */
    declare public readonly releaseTrain: pulumi.Output<string>;
    /**
     * Namespace where the extension will be created for a namespace scoped extension. If this namespace does not exist, it will be created. Changing this forces a new Arc Kubernetes Cluster Extension to be created.
     */
    declare public readonly targetNamespace: pulumi.Output<string>;
    /**
     * User-specified version that the extension should pin to. If it is not set, Azure will use the latest version and auto upgrade it. Changing this forces a new Arc Kubernetes Cluster Extension to be created.
     */
    declare public readonly version: pulumi.Output<string | undefined>;

    /**
     * Create a ClusterExtension resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ClusterExtensionArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ClusterExtensionArgs | ClusterExtensionState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ClusterExtensionState | undefined;
            resourceInputs["clusterId"] = state?.clusterId;
            resourceInputs["configurationProtectedSettings"] = state?.configurationProtectedSettings;
            resourceInputs["configurationSettings"] = state?.configurationSettings;
            resourceInputs["currentVersion"] = state?.currentVersion;
            resourceInputs["extensionType"] = state?.extensionType;
            resourceInputs["identity"] = state?.identity;
            resourceInputs["name"] = state?.name;
            resourceInputs["releaseNamespace"] = state?.releaseNamespace;
            resourceInputs["releaseTrain"] = state?.releaseTrain;
            resourceInputs["targetNamespace"] = state?.targetNamespace;
            resourceInputs["version"] = state?.version;
        } else {
            const args = argsOrState as ClusterExtensionArgs | undefined;
            if (args?.clusterId === undefined && !opts.urn) {
                throw new Error("Missing required property 'clusterId'");
            }
            if (args?.extensionType === undefined && !opts.urn) {
                throw new Error("Missing required property 'extensionType'");
            }
            if (args?.identity === undefined && !opts.urn) {
                throw new Error("Missing required property 'identity'");
            }
            resourceInputs["clusterId"] = args?.clusterId;
            resourceInputs["configurationProtectedSettings"] = args?.configurationProtectedSettings;
            resourceInputs["configurationSettings"] = args?.configurationSettings;
            resourceInputs["extensionType"] = args?.extensionType;
            resourceInputs["identity"] = args?.identity;
            resourceInputs["name"] = args?.name;
            resourceInputs["releaseNamespace"] = args?.releaseNamespace;
            resourceInputs["releaseTrain"] = args?.releaseTrain;
            resourceInputs["targetNamespace"] = args?.targetNamespace;
            resourceInputs["version"] = args?.version;
            resourceInputs["currentVersion"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ClusterExtension.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ClusterExtension resources.
 */
export interface ClusterExtensionState {
    /**
     * Specifies the Cluster ID. Changing this forces a new Arc Kubernetes Cluster Extension to be created.
     */
    clusterId?: pulumi.Input<string>;
    /**
     * Configuration settings that are sensitive, as name-value pairs for configuring this extension.
     */
    configurationProtectedSettings?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Configuration settings, as name-value pairs for configuring this extension.
     */
    configurationSettings?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The current version of the extension.
     */
    currentVersion?: pulumi.Input<string>;
    /**
     * Specifies the type of extension. It must be one of the extension types registered with Microsoft.KubernetesConfiguration by the Extension publisher. For more information, please refer to [Available Extensions for Arc-enabled Kubernetes clusters](https://learn.microsoft.com/en-us/azure/azure-arc/kubernetes/extensions-release). Changing this forces a new Arc Kubernetes Cluster Extension to be created.
     */
    extensionType?: pulumi.Input<string>;
    /**
     * An `identity` block as defined below. Changing this forces a new Arc Kubernetes Cluster Extension to be created.
     */
    identity?: pulumi.Input<inputs.arckubernetes.ClusterExtensionIdentity>;
    /**
     * Specifies the name which should be used for this Arc Kubernetes Cluster Extension. Changing this forces a new Arc Kubernetes Cluster Extension to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * Namespace where the extension release must be placed for a cluster scoped extension. If this namespace does not exist, it will be created. Changing this forces a new Arc Kubernetes Cluster Extension to be created.
     */
    releaseNamespace?: pulumi.Input<string>;
    /**
     * The release train used by this extension. Possible values include but are not limited to `Stable`, `Preview`. Changing this forces a new Arc Kubernetes Cluster Extension to be created.
     */
    releaseTrain?: pulumi.Input<string>;
    /**
     * Namespace where the extension will be created for a namespace scoped extension. If this namespace does not exist, it will be created. Changing this forces a new Arc Kubernetes Cluster Extension to be created.
     */
    targetNamespace?: pulumi.Input<string>;
    /**
     * User-specified version that the extension should pin to. If it is not set, Azure will use the latest version and auto upgrade it. Changing this forces a new Arc Kubernetes Cluster Extension to be created.
     */
    version?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ClusterExtension resource.
 */
export interface ClusterExtensionArgs {
    /**
     * Specifies the Cluster ID. Changing this forces a new Arc Kubernetes Cluster Extension to be created.
     */
    clusterId: pulumi.Input<string>;
    /**
     * Configuration settings that are sensitive, as name-value pairs for configuring this extension.
     */
    configurationProtectedSettings?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Configuration settings, as name-value pairs for configuring this extension.
     */
    configurationSettings?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Specifies the type of extension. It must be one of the extension types registered with Microsoft.KubernetesConfiguration by the Extension publisher. For more information, please refer to [Available Extensions for Arc-enabled Kubernetes clusters](https://learn.microsoft.com/en-us/azure/azure-arc/kubernetes/extensions-release). Changing this forces a new Arc Kubernetes Cluster Extension to be created.
     */
    extensionType: pulumi.Input<string>;
    /**
     * An `identity` block as defined below. Changing this forces a new Arc Kubernetes Cluster Extension to be created.
     */
    identity: pulumi.Input<inputs.arckubernetes.ClusterExtensionIdentity>;
    /**
     * Specifies the name which should be used for this Arc Kubernetes Cluster Extension. Changing this forces a new Arc Kubernetes Cluster Extension to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * Namespace where the extension release must be placed for a cluster scoped extension. If this namespace does not exist, it will be created. Changing this forces a new Arc Kubernetes Cluster Extension to be created.
     */
    releaseNamespace?: pulumi.Input<string>;
    /**
     * The release train used by this extension. Possible values include but are not limited to `Stable`, `Preview`. Changing this forces a new Arc Kubernetes Cluster Extension to be created.
     */
    releaseTrain?: pulumi.Input<string>;
    /**
     * Namespace where the extension will be created for a namespace scoped extension. If this namespace does not exist, it will be created. Changing this forces a new Arc Kubernetes Cluster Extension to be created.
     */
    targetNamespace?: pulumi.Input<string>;
    /**
     * User-specified version that the extension should pin to. If it is not set, Azure will use the latest version and auto upgrade it. Changing this forces a new Arc Kubernetes Cluster Extension to be created.
     */
    version?: pulumi.Input<string>;
}
