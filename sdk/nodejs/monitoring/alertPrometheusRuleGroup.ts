// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Manages an Alert Management Prometheus Rule Group.
 *
 * ## Import
 *
 * Alert Management Prometheus Rule Group can be imported using the `resource id`, e.g.
 *
 * ```sh
 *  $ pulumi import azure:monitoring/alertPrometheusRuleGroup:AlertPrometheusRuleGroup example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resourceGroup1/providers/Microsoft.AlertsManagement/prometheusRuleGroups/ruleGroup1
 * ```
 */
export class AlertPrometheusRuleGroup extends pulumi.CustomResource {
    /**
     * Get an existing AlertPrometheusRuleGroup resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AlertPrometheusRuleGroupState, opts?: pulumi.CustomResourceOptions): AlertPrometheusRuleGroup {
        return new AlertPrometheusRuleGroup(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure:monitoring/alertPrometheusRuleGroup:AlertPrometheusRuleGroup';

    /**
     * Returns true if the given object is an instance of AlertPrometheusRuleGroup.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AlertPrometheusRuleGroup {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AlertPrometheusRuleGroup.__pulumiType;
    }

    /**
     * Specifies the name of the Managed Kubernetes Cluster.
     */
    public readonly clusterName!: pulumi.Output<string | undefined>;
    /**
     * The description of the Alert Management Prometheus Rule Group.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * Specifies the interval in which to run the Alert Management Prometheus Rule Group represented in ISO 8601 duration format. Possible values are between `PT1M` and `PT15M`.
     */
    public readonly interval!: pulumi.Output<string | undefined>;
    /**
     * Specifies the Azure Region where the Alert Management Prometheus Rule Group should exist. Changing this forces a new resource to be created.
     */
    public readonly location!: pulumi.Output<string>;
    /**
     * Specifies the name which should be used for this Alert Management Prometheus Rule Group. Changing this forces a new resource to be created.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Specifies the name of the Resource Group where the Alert Management Prometheus Rule Group should exist. Changing this forces a new resource to be created.
     */
    public readonly resourceGroupName!: pulumi.Output<string>;
    /**
     * Is this Alert Management Prometheus Rule Group enabled? Possible values are `true` and `false`.
     */
    public readonly ruleGroupEnabled!: pulumi.Output<boolean | undefined>;
    /**
     * A `rule` block as defined below.
     */
    public readonly rules!: pulumi.Output<outputs.monitoring.AlertPrometheusRuleGroupRule[]>;
    /**
     * Specifies the resource ID of the Azure Monitor Workspace.
     */
    public readonly scopes!: pulumi.Output<string[]>;
    /**
     * A mapping of tags to assign to the Alert Management Prometheus Rule Group.
     */
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;

    /**
     * Create a AlertPrometheusRuleGroup resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AlertPrometheusRuleGroupArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AlertPrometheusRuleGroupArgs | AlertPrometheusRuleGroupState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AlertPrometheusRuleGroupState | undefined;
            resourceInputs["clusterName"] = state ? state.clusterName : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["interval"] = state ? state.interval : undefined;
            resourceInputs["location"] = state ? state.location : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["resourceGroupName"] = state ? state.resourceGroupName : undefined;
            resourceInputs["ruleGroupEnabled"] = state ? state.ruleGroupEnabled : undefined;
            resourceInputs["rules"] = state ? state.rules : undefined;
            resourceInputs["scopes"] = state ? state.scopes : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
        } else {
            const args = argsOrState as AlertPrometheusRuleGroupArgs | undefined;
            if ((!args || args.resourceGroupName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            if ((!args || args.rules === undefined) && !opts.urn) {
                throw new Error("Missing required property 'rules'");
            }
            if ((!args || args.scopes === undefined) && !opts.urn) {
                throw new Error("Missing required property 'scopes'");
            }
            resourceInputs["clusterName"] = args ? args.clusterName : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["interval"] = args ? args.interval : undefined;
            resourceInputs["location"] = args ? args.location : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            resourceInputs["ruleGroupEnabled"] = args ? args.ruleGroupEnabled : undefined;
            resourceInputs["rules"] = args ? args.rules : undefined;
            resourceInputs["scopes"] = args ? args.scopes : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AlertPrometheusRuleGroup.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering AlertPrometheusRuleGroup resources.
 */
export interface AlertPrometheusRuleGroupState {
    /**
     * Specifies the name of the Managed Kubernetes Cluster.
     */
    clusterName?: pulumi.Input<string>;
    /**
     * The description of the Alert Management Prometheus Rule Group.
     */
    description?: pulumi.Input<string>;
    /**
     * Specifies the interval in which to run the Alert Management Prometheus Rule Group represented in ISO 8601 duration format. Possible values are between `PT1M` and `PT15M`.
     */
    interval?: pulumi.Input<string>;
    /**
     * Specifies the Azure Region where the Alert Management Prometheus Rule Group should exist. Changing this forces a new resource to be created.
     */
    location?: pulumi.Input<string>;
    /**
     * Specifies the name which should be used for this Alert Management Prometheus Rule Group. Changing this forces a new resource to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * Specifies the name of the Resource Group where the Alert Management Prometheus Rule Group should exist. Changing this forces a new resource to be created.
     */
    resourceGroupName?: pulumi.Input<string>;
    /**
     * Is this Alert Management Prometheus Rule Group enabled? Possible values are `true` and `false`.
     */
    ruleGroupEnabled?: pulumi.Input<boolean>;
    /**
     * A `rule` block as defined below.
     */
    rules?: pulumi.Input<pulumi.Input<inputs.monitoring.AlertPrometheusRuleGroupRule>[]>;
    /**
     * Specifies the resource ID of the Azure Monitor Workspace.
     */
    scopes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A mapping of tags to assign to the Alert Management Prometheus Rule Group.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

/**
 * The set of arguments for constructing a AlertPrometheusRuleGroup resource.
 */
export interface AlertPrometheusRuleGroupArgs {
    /**
     * Specifies the name of the Managed Kubernetes Cluster.
     */
    clusterName?: pulumi.Input<string>;
    /**
     * The description of the Alert Management Prometheus Rule Group.
     */
    description?: pulumi.Input<string>;
    /**
     * Specifies the interval in which to run the Alert Management Prometheus Rule Group represented in ISO 8601 duration format. Possible values are between `PT1M` and `PT15M`.
     */
    interval?: pulumi.Input<string>;
    /**
     * Specifies the Azure Region where the Alert Management Prometheus Rule Group should exist. Changing this forces a new resource to be created.
     */
    location?: pulumi.Input<string>;
    /**
     * Specifies the name which should be used for this Alert Management Prometheus Rule Group. Changing this forces a new resource to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * Specifies the name of the Resource Group where the Alert Management Prometheus Rule Group should exist. Changing this forces a new resource to be created.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * Is this Alert Management Prometheus Rule Group enabled? Possible values are `true` and `false`.
     */
    ruleGroupEnabled?: pulumi.Input<boolean>;
    /**
     * A `rule` block as defined below.
     */
    rules: pulumi.Input<pulumi.Input<inputs.monitoring.AlertPrometheusRuleGroupRule>[]>;
    /**
     * Specifies the resource ID of the Azure Monitor Workspace.
     */
    scopes: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A mapping of tags to assign to the Alert Management Prometheus Rule Group.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
