// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Use this data source to access information about an existing Data Collection Endpoint.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = azure.monitoring.getDataCollectionEndpoint({
 *     name: "example-mdce",
 *     resourceGroupName: azurerm_resource_group.example.name,
 * });
 * export const endpointId = example.then(example => example.id);
 * ```
 */
export function getDataCollectionEndpoint(args: GetDataCollectionEndpointArgs, opts?: pulumi.InvokeOptions): Promise<GetDataCollectionEndpointResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("azure:monitoring/getDataCollectionEndpoint:getDataCollectionEndpoint", {
        "name": args.name,
        "resourceGroupName": args.resourceGroupName,
    }, opts);
}

/**
 * A collection of arguments for invoking getDataCollectionEndpoint.
 */
export interface GetDataCollectionEndpointArgs {
    /**
     * Specifies the name of the Data Collection Endpoint.
     */
    name: string;
    /**
     * Specifies the name of the resource group the Data Collection Endpoint is located in.
     */
    resourceGroupName: string;
}

/**
 * A collection of values returned by getDataCollectionEndpoint.
 */
export interface GetDataCollectionEndpointResult {
    /**
     * The endpoint used for accessing configuration, e.g., `https://mydce-abcd.eastus-1.control.monitor.azure.com`.
     */
    readonly configurationAccessEndpoint: string;
    /**
     * Specifies a description for the Data Collection Endpoint.
     */
    readonly description: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The kind of the Data Collection Endpoint. Possible values are `Linux` and `Windows`.
     */
    readonly kind: string;
    /**
     * The Azure Region where the Data Collection Endpoint should exist.
     */
    readonly location: string;
    /**
     * The endpoint used for ingesting logs, e.g., `https://mydce-abcd.eastus-1.ingest.monitor.azure.com`.
     */
    readonly logsIngestionEndpoint: string;
    readonly name: string;
    /**
     * Whether network access from public internet to the Data Collection Endpoint are allowed. Possible values are `true` and `false`.
     */
    readonly publicNetworkAccessEnabled: boolean;
    readonly resourceGroupName: string;
    /**
     * A mapping of tags which should be assigned to the Data Collection Endpoint.
     */
    readonly tags: {[key: string]: string};
}

export function getDataCollectionEndpointOutput(args: GetDataCollectionEndpointOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDataCollectionEndpointResult> {
    return pulumi.output(args).apply(a => getDataCollectionEndpoint(a, opts))
}

/**
 * A collection of arguments for invoking getDataCollectionEndpoint.
 */
export interface GetDataCollectionEndpointOutputArgs {
    /**
     * Specifies the name of the Data Collection Endpoint.
     */
    name: pulumi.Input<string>;
    /**
     * Specifies the name of the resource group the Data Collection Endpoint is located in.
     */
    resourceGroupName: pulumi.Input<string>;
}
