// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Manages a LogToMetricAction Scheduled Query Rules resource within Azure Monitor.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const exampleResourceGroup = new azure.core.ResourceGroup("exampleResourceGroup", {location: "West Europe"});
 * const exampleAnalyticsWorkspace = new azure.operationalinsights.AnalyticsWorkspace("exampleAnalyticsWorkspace", {
 *     location: exampleResourceGroup.location,
 *     resourceGroupName: exampleResourceGroup.name,
 *     sku: "PerGB2018",
 *     retentionInDays: 30,
 * });
 * const exampleActionGroup = new azure.monitoring.ActionGroup("exampleActionGroup", {
 *     resourceGroupName: exampleResourceGroup.name,
 *     shortName: "exampleact",
 *     webhookReceivers: [{
 *         name: "callmyapi",
 *         serviceUri: "http://example.com/alert",
 *     }],
 * });
 * // Example: Creates alert using the new Scheduled Query Rules metric
 * const exampleMetricAlert = new azure.monitoring.MetricAlert("exampleMetricAlert", {
 *     resourceGroupName: exampleResourceGroup.name,
 *     scopes: [exampleAnalyticsWorkspace.id],
 *     description: "Action will be triggered when Average_% Idle Time metric is less than 10.",
 *     frequency: "PT1M",
 *     windowSize: "PT5M",
 *     criterias: [{
 *         metricNamespace: "Microsoft.OperationalInsights/workspaces",
 *         metricName: "UsedCapacity",
 *         aggregation: "Average",
 *         operator: "LessThan",
 *         threshold: 10,
 *     }],
 *     actions: [{
 *         actionGroupId: exampleActionGroup.id,
 *     }],
 * });
 * // Example: LogToMetric Action for the named Computer
 * const exampleScheduledQueryRulesLog = new azure.monitoring.ScheduledQueryRulesLog("exampleScheduledQueryRulesLog", {
 *     location: exampleResourceGroup.location,
 *     resourceGroupName: exampleResourceGroup.name,
 *     criteria: {
 *         metricName: "Average_% Idle Time",
 *         dimensions: [{
 *             name: "Computer",
 *             operator: "Include",
 *             values: ["targetVM"],
 *         }],
 *     },
 *     dataSourceId: exampleAnalyticsWorkspace.id,
 *     description: "Scheduled query rule LogToMetric example",
 *     enabled: true,
 *     tags: {
 *         foo: "bar",
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * Scheduled Query Rule Log can be imported using the `resource id`, e.g.
 *
 * ```sh
 *  $ pulumi import azure:monitoring/scheduledQueryRulesLog:ScheduledQueryRulesLog example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.Insights/scheduledQueryRules/myrulename
 * ```
 */
export class ScheduledQueryRulesLog extends pulumi.CustomResource {
    /**
     * Get an existing ScheduledQueryRulesLog resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ScheduledQueryRulesLogState, opts?: pulumi.CustomResourceOptions): ScheduledQueryRulesLog {
        return new ScheduledQueryRulesLog(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure:monitoring/scheduledQueryRulesLog:ScheduledQueryRulesLog';

    /**
     * Returns true if the given object is an instance of ScheduledQueryRulesLog.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ScheduledQueryRulesLog {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ScheduledQueryRulesLog.__pulumiType;
    }

    /**
     * A list of IDs of Resources referred into query.
     */
    public readonly authorizedResourceIds!: pulumi.Output<string[] | undefined>;
    /**
     * A `criteria` block as defined below.
     */
    public readonly criteria!: pulumi.Output<outputs.monitoring.ScheduledQueryRulesLogCriteria>;
    /**
     * The resource URI over which log search query is to be run. Changing this forces a new resource to be created.
     */
    public readonly dataSourceId!: pulumi.Output<string>;
    /**
     * The description of the scheduled query rule.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * Whether this scheduled query rule is enabled. Default is `true`.
     */
    public readonly enabled!: pulumi.Output<boolean | undefined>;
    /**
     * Specifies the Azure Region where the resource should exist. Changing this forces a new resource to be created.
     */
    public readonly location!: pulumi.Output<string>;
    /**
     * The name of the scheduled query rule. Changing this forces a new resource to be created.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The name of the resource group in which to create the scheduled query rule instance. Changing this forces a new resource to be created.
     */
    public readonly resourceGroupName!: pulumi.Output<string>;
    /**
     * A mapping of tags to assign to the resource.
     */
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;

    /**
     * Create a ScheduledQueryRulesLog resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ScheduledQueryRulesLogArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ScheduledQueryRulesLogArgs | ScheduledQueryRulesLogState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ScheduledQueryRulesLogState | undefined;
            resourceInputs["authorizedResourceIds"] = state ? state.authorizedResourceIds : undefined;
            resourceInputs["criteria"] = state ? state.criteria : undefined;
            resourceInputs["dataSourceId"] = state ? state.dataSourceId : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["enabled"] = state ? state.enabled : undefined;
            resourceInputs["location"] = state ? state.location : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["resourceGroupName"] = state ? state.resourceGroupName : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
        } else {
            const args = argsOrState as ScheduledQueryRulesLogArgs | undefined;
            if ((!args || args.criteria === undefined) && !opts.urn) {
                throw new Error("Missing required property 'criteria'");
            }
            if ((!args || args.dataSourceId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'dataSourceId'");
            }
            if ((!args || args.resourceGroupName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            resourceInputs["authorizedResourceIds"] = args ? args.authorizedResourceIds : undefined;
            resourceInputs["criteria"] = args ? args.criteria : undefined;
            resourceInputs["dataSourceId"] = args ? args.dataSourceId : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["enabled"] = args ? args.enabled : undefined;
            resourceInputs["location"] = args ? args.location : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ScheduledQueryRulesLog.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ScheduledQueryRulesLog resources.
 */
export interface ScheduledQueryRulesLogState {
    /**
     * A list of IDs of Resources referred into query.
     */
    authorizedResourceIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A `criteria` block as defined below.
     */
    criteria?: pulumi.Input<inputs.monitoring.ScheduledQueryRulesLogCriteria>;
    /**
     * The resource URI over which log search query is to be run. Changing this forces a new resource to be created.
     */
    dataSourceId?: pulumi.Input<string>;
    /**
     * The description of the scheduled query rule.
     */
    description?: pulumi.Input<string>;
    /**
     * Whether this scheduled query rule is enabled. Default is `true`.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * Specifies the Azure Region where the resource should exist. Changing this forces a new resource to be created.
     */
    location?: pulumi.Input<string>;
    /**
     * The name of the scheduled query rule. Changing this forces a new resource to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * The name of the resource group in which to create the scheduled query rule instance. Changing this forces a new resource to be created.
     */
    resourceGroupName?: pulumi.Input<string>;
    /**
     * A mapping of tags to assign to the resource.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

/**
 * The set of arguments for constructing a ScheduledQueryRulesLog resource.
 */
export interface ScheduledQueryRulesLogArgs {
    /**
     * A list of IDs of Resources referred into query.
     */
    authorizedResourceIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A `criteria` block as defined below.
     */
    criteria: pulumi.Input<inputs.monitoring.ScheduledQueryRulesLogCriteria>;
    /**
     * The resource URI over which log search query is to be run. Changing this forces a new resource to be created.
     */
    dataSourceId: pulumi.Input<string>;
    /**
     * The description of the scheduled query rule.
     */
    description?: pulumi.Input<string>;
    /**
     * Whether this scheduled query rule is enabled. Default is `true`.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * Specifies the Azure Region where the resource should exist. Changing this forces a new resource to be created.
     */
    location?: pulumi.Input<string>;
    /**
     * The name of the scheduled query rule. Changing this forces a new resource to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * The name of the resource group in which to create the scheduled query rule instance. Changing this forces a new resource to be created.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * A mapping of tags to assign to the resource.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
