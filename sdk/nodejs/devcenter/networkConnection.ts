// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Manages a Dev Center Network Connection.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = new azure.core.ResourceGroup("example", {
 *     name: "example-resources",
 *     location: "West Europe",
 * });
 * const exampleVirtualNetwork = new azure.network.VirtualNetwork("example", {
 *     name: "example-vnet",
 *     addressSpaces: ["10.0.0.0/16"],
 *     location: example.location,
 *     resourceGroupName: example.name,
 * });
 * const exampleSubnet = new azure.network.Subnet("example", {
 *     name: "internal",
 *     resourceGroupName: example.name,
 *     virtualNetworkName: exampleVirtualNetwork.name,
 *     addressPrefixes: ["10.0.2.0/24"],
 * });
 * const exampleNetworkConnection = new azure.devcenter.NetworkConnection("example", {
 *     name: "example-dcnc",
 *     resourceGroupName: example.name,
 *     location: example.location,
 *     domainJoinType: "AzureADJoin",
 *     subnetId: exampleSubnet.id,
 * });
 * ```
 *
 * ## Import
 *
 * An existing Dev Center Network Connection can be imported into Pulumi using the `resource id`, e.g.
 *
 * ```sh
 * $ pulumi import azure:devcenter/networkConnection:NetworkConnection example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.DevCenter/networkConnections/networkConnection1
 * ```
 */
export class NetworkConnection extends pulumi.CustomResource {
    /**
     * Get an existing NetworkConnection resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: NetworkConnectionState, opts?: pulumi.CustomResourceOptions): NetworkConnection {
        return new NetworkConnection(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure:devcenter/networkConnection:NetworkConnection';

    /**
     * Returns true if the given object is an instance of NetworkConnection.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is NetworkConnection {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === NetworkConnection.__pulumiType;
    }

    /**
     * The Azure Active Directory Join type. Possible values are `AzureADJoin` and `HybridAzureADJoin`. Changing this forces a new resource to be created.
     */
    public readonly domainJoinType!: pulumi.Output<string>;
    /**
     * The name of the Azure Active Directory domain.
     */
    public readonly domainName!: pulumi.Output<string | undefined>;
    /**
     * The password for the account used to join domain.
     */
    public readonly domainPassword!: pulumi.Output<string | undefined>;
    /**
     * The username of the Azure Active Directory account (user or service account) that has permissions to create computer objects in Active Directory.
     */
    public readonly domainUsername!: pulumi.Output<string | undefined>;
    /**
     * The Azure Region where the Dev Center Network Connection should exist. Changing this forces a new resource to be created.
     */
    public readonly location!: pulumi.Output<string>;
    /**
     * Specifies the name of this Dev Center Network Connection. Changing this forces a new resource to be created.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The Azure Active Directory domain Organization Unit (OU).
     */
    public readonly organizationUnit!: pulumi.Output<string | undefined>;
    /**
     * Specifies the name of the Resource Group within which this Dev Center Network Connection should exist. Changing this forces a new resource to be created.
     */
    public readonly resourceGroupName!: pulumi.Output<string>;
    /**
     * The ID of the Subnet that is used to attach Virtual Machines.
     */
    public readonly subnetId!: pulumi.Output<string>;
    /**
     * A mapping of tags which should be assigned to the Dev Center Network Connection.
     */
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;

    /**
     * Create a NetworkConnection resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: NetworkConnectionArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: NetworkConnectionArgs | NetworkConnectionState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as NetworkConnectionState | undefined;
            resourceInputs["domainJoinType"] = state ? state.domainJoinType : undefined;
            resourceInputs["domainName"] = state ? state.domainName : undefined;
            resourceInputs["domainPassword"] = state ? state.domainPassword : undefined;
            resourceInputs["domainUsername"] = state ? state.domainUsername : undefined;
            resourceInputs["location"] = state ? state.location : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["organizationUnit"] = state ? state.organizationUnit : undefined;
            resourceInputs["resourceGroupName"] = state ? state.resourceGroupName : undefined;
            resourceInputs["subnetId"] = state ? state.subnetId : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
        } else {
            const args = argsOrState as NetworkConnectionArgs | undefined;
            if ((!args || args.domainJoinType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'domainJoinType'");
            }
            if ((!args || args.resourceGroupName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            if ((!args || args.subnetId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'subnetId'");
            }
            resourceInputs["domainJoinType"] = args ? args.domainJoinType : undefined;
            resourceInputs["domainName"] = args ? args.domainName : undefined;
            resourceInputs["domainPassword"] = args?.domainPassword ? pulumi.secret(args.domainPassword) : undefined;
            resourceInputs["domainUsername"] = args ? args.domainUsername : undefined;
            resourceInputs["location"] = args ? args.location : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["organizationUnit"] = args ? args.organizationUnit : undefined;
            resourceInputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            resourceInputs["subnetId"] = args ? args.subnetId : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["domainPassword"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(NetworkConnection.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering NetworkConnection resources.
 */
export interface NetworkConnectionState {
    /**
     * The Azure Active Directory Join type. Possible values are `AzureADJoin` and `HybridAzureADJoin`. Changing this forces a new resource to be created.
     */
    domainJoinType?: pulumi.Input<string>;
    /**
     * The name of the Azure Active Directory domain.
     */
    domainName?: pulumi.Input<string>;
    /**
     * The password for the account used to join domain.
     */
    domainPassword?: pulumi.Input<string>;
    /**
     * The username of the Azure Active Directory account (user or service account) that has permissions to create computer objects in Active Directory.
     */
    domainUsername?: pulumi.Input<string>;
    /**
     * The Azure Region where the Dev Center Network Connection should exist. Changing this forces a new resource to be created.
     */
    location?: pulumi.Input<string>;
    /**
     * Specifies the name of this Dev Center Network Connection. Changing this forces a new resource to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * The Azure Active Directory domain Organization Unit (OU).
     */
    organizationUnit?: pulumi.Input<string>;
    /**
     * Specifies the name of the Resource Group within which this Dev Center Network Connection should exist. Changing this forces a new resource to be created.
     */
    resourceGroupName?: pulumi.Input<string>;
    /**
     * The ID of the Subnet that is used to attach Virtual Machines.
     */
    subnetId?: pulumi.Input<string>;
    /**
     * A mapping of tags which should be assigned to the Dev Center Network Connection.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

/**
 * The set of arguments for constructing a NetworkConnection resource.
 */
export interface NetworkConnectionArgs {
    /**
     * The Azure Active Directory Join type. Possible values are `AzureADJoin` and `HybridAzureADJoin`. Changing this forces a new resource to be created.
     */
    domainJoinType: pulumi.Input<string>;
    /**
     * The name of the Azure Active Directory domain.
     */
    domainName?: pulumi.Input<string>;
    /**
     * The password for the account used to join domain.
     */
    domainPassword?: pulumi.Input<string>;
    /**
     * The username of the Azure Active Directory account (user or service account) that has permissions to create computer objects in Active Directory.
     */
    domainUsername?: pulumi.Input<string>;
    /**
     * The Azure Region where the Dev Center Network Connection should exist. Changing this forces a new resource to be created.
     */
    location?: pulumi.Input<string>;
    /**
     * Specifies the name of this Dev Center Network Connection. Changing this forces a new resource to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * The Azure Active Directory domain Organization Unit (OU).
     */
    organizationUnit?: pulumi.Input<string>;
    /**
     * Specifies the name of the Resource Group within which this Dev Center Network Connection should exist. Changing this forces a new resource to be created.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * The ID of the Subnet that is used to attach Virtual Machines.
     */
    subnetId: pulumi.Input<string>;
    /**
     * A mapping of tags which should be assigned to the Dev Center Network Connection.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
