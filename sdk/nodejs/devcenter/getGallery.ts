// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Use this data source to access information about an existing Dev Center Gallery.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = azure.devcenter.getGallery({
 *     name: exampleAzurermDevCenterGallery.name,
 *     devCenterId: exampleAzurermDevCenterGallery.devCenterId,
 * });
 * export const id = example.then(example => example.id);
 * ```
 *
 * ## API Providers
 *
 * <!-- This section is generated, changes will be overwritten -->
 * This data source uses the following Azure API Providers:
 *
 * * `Microsoft.DevCenter` - 2025-02-01
 */
export function getGallery(args: GetGalleryArgs, opts?: pulumi.InvokeOptions): Promise<GetGalleryResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azure:devcenter/getGallery:getGallery", {
        "devCenterId": args.devCenterId,
        "name": args.name,
    }, opts);
}

/**
 * A collection of arguments for invoking getGallery.
 */
export interface GetGalleryArgs {
    /**
     * The ID of the Dev Center which contains the Dev Center Gallery.
     */
    devCenterId: string;
    /**
     * The name of this Dev Center Gallery.
     */
    name: string;
}

/**
 * A collection of values returned by getGallery.
 */
export interface GetGalleryResult {
    readonly devCenterId: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly name: string;
    /**
     * The ID of the Shared Gallery connected to the Dev Center Gallery.
     */
    readonly sharedGalleryId: string;
}
/**
 * Use this data source to access information about an existing Dev Center Gallery.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = azure.devcenter.getGallery({
 *     name: exampleAzurermDevCenterGallery.name,
 *     devCenterId: exampleAzurermDevCenterGallery.devCenterId,
 * });
 * export const id = example.then(example => example.id);
 * ```
 *
 * ## API Providers
 *
 * <!-- This section is generated, changes will be overwritten -->
 * This data source uses the following Azure API Providers:
 *
 * * `Microsoft.DevCenter` - 2025-02-01
 */
export function getGalleryOutput(args: GetGalleryOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetGalleryResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("azure:devcenter/getGallery:getGallery", {
        "devCenterId": args.devCenterId,
        "name": args.name,
    }, opts);
}

/**
 * A collection of arguments for invoking getGallery.
 */
export interface GetGalleryOutputArgs {
    /**
     * The ID of the Dev Center which contains the Dev Center Gallery.
     */
    devCenterId: pulumi.Input<string>;
    /**
     * The name of this Dev Center Gallery.
     */
    name: pulumi.Input<string>;
}
