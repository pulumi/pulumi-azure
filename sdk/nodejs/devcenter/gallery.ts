// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Manages a Dev Center Gallery.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = new azure.core.ResourceGroup("example", {
 *     name: "example-resources",
 *     location: "West Europe",
 * });
 * const testUserAssignedIdentity = new azure.authorization.UserAssignedIdentity("test", {
 *     name: "example-uai",
 *     location: testAzurermResourceGroup.location,
 *     resourceGroupName: testAzurermResourceGroup.name,
 * });
 * const test = new azure.devcenter.DevCenter("test", {
 *     name: "example-devcenter",
 *     resourceGroupName: testAzurermResourceGroup.name,
 *     location: testAzurermResourceGroup.location,
 *     identity: {
 *         type: "UserAssigned",
 *         identityIds: [testUserAssignedIdentity.id],
 *     },
 * });
 * const exampleSharedImageGallery = new azure.compute.SharedImageGallery("example", {
 *     name: "example-image-gallery",
 *     location: example.location,
 *     resourceGroupName: example.name,
 * });
 * const exampleGallery = new azure.devcenter.Gallery("example", {
 *     devCenterId: exampleAzurermDevCenter.id,
 *     sharedGalleryId: exampleSharedImageGallery.id,
 *     name: "example",
 * });
 * ```
 *
 * ## Import
 *
 * An existing Dev Center Gallery can be imported into Pulumi using the `resource id`, e.g.
 *
 * ```sh
 * $ pulumi import azure:devcenter/gallery:Gallery example /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/devCenters/{devCenterName}/galleries/{galleryName}
 * ```
 *
 * * Where `{subscriptionId}` is the ID of the Azure Subscription where the Dev Center Gallery exists. For example `12345678-1234-9876-4563-123456789012`.
 *
 * * Where `{resourceGroupName}` is the name of Resource Group where this Dev Center Gallery exists. For example `example-resource-group`.
 *
 * * Where `{devCenterName}` is the name of the Dev Center. For example `devCenterValue`.
 *
 * * Where `{galleryName}` is the name of the Gallery. For example `galleryValue`.
 */
export class Gallery extends pulumi.CustomResource {
    /**
     * Get an existing Gallery resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: GalleryState, opts?: pulumi.CustomResourceOptions): Gallery {
        return new Gallery(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure:devcenter/gallery:Gallery';

    /**
     * Returns true if the given object is an instance of Gallery.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Gallery {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Gallery.__pulumiType;
    }

    /**
     * Specifies the ID of the Dev Center within which this Dev Center Gallery should exist. Changing this forces a new Dev Center Gallery to be created.
     */
    public readonly devCenterId!: pulumi.Output<string>;
    /**
     * Specifies the name of this Dev Center Gallery. Changing this forces a new Dev Center Gallery to be created.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The ID of the Shared Gallery which should be connected to the Dev Center Gallery. Changing this forces a new Dev Center Gallery to be created.
     */
    public readonly sharedGalleryId!: pulumi.Output<string>;

    /**
     * Create a Gallery resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: GalleryArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: GalleryArgs | GalleryState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as GalleryState | undefined;
            resourceInputs["devCenterId"] = state ? state.devCenterId : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["sharedGalleryId"] = state ? state.sharedGalleryId : undefined;
        } else {
            const args = argsOrState as GalleryArgs | undefined;
            if ((!args || args.devCenterId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'devCenterId'");
            }
            if ((!args || args.sharedGalleryId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'sharedGalleryId'");
            }
            resourceInputs["devCenterId"] = args ? args.devCenterId : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["sharedGalleryId"] = args ? args.sharedGalleryId : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Gallery.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Gallery resources.
 */
export interface GalleryState {
    /**
     * Specifies the ID of the Dev Center within which this Dev Center Gallery should exist. Changing this forces a new Dev Center Gallery to be created.
     */
    devCenterId?: pulumi.Input<string>;
    /**
     * Specifies the name of this Dev Center Gallery. Changing this forces a new Dev Center Gallery to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * The ID of the Shared Gallery which should be connected to the Dev Center Gallery. Changing this forces a new Dev Center Gallery to be created.
     */
    sharedGalleryId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Gallery resource.
 */
export interface GalleryArgs {
    /**
     * Specifies the ID of the Dev Center within which this Dev Center Gallery should exist. Changing this forces a new Dev Center Gallery to be created.
     */
    devCenterId: pulumi.Input<string>;
    /**
     * Specifies the name of this Dev Center Gallery. Changing this forces a new Dev Center Gallery to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * The ID of the Shared Gallery which should be connected to the Dev Center Gallery. Changing this forces a new Dev Center Gallery to be created.
     */
    sharedGalleryId: pulumi.Input<string>;
}
