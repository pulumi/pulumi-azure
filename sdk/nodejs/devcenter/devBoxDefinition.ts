// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Manages a Dev Center Dev Box Definition.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = new azure.core.ResourceGroup("example", {
 *     name: "example-resources",
 *     location: "West Europe",
 * });
 * const exampleDevCenter = new azure.devcenter.DevCenter("example", {
 *     name: "example-dc",
 *     resourceGroupName: example.name,
 *     location: example.location,
 *     identity: {
 *         type: "SystemAssigned",
 *     },
 * });
 * const exampleDevBoxDefinition = new azure.devcenter.DevBoxDefinition("example", {
 *     name: "example-dcet",
 *     location: example.location,
 *     devCenterId: exampleDevCenter.id,
 *     imageReferenceId: pulumi.interpolate`${exampleDevCenter.id}/galleries/default/images/microsoftvisualstudio_visualstudioplustools_vs-2022-ent-general-win10-m365-gen2`,
 *     skuName: "general_i_8c32gb256ssd_v2",
 * });
 * ```
 *
 * ## API Providers
 *
 * <!-- This section is generated, changes will be overwritten -->
 * This resource uses the following Azure API Providers:
 *
 * * `Microsoft.DevCenter` - 2025-02-01
 *
 * ## Import
 *
 * An existing Dev Center Dev Box Definition can be imported into Pulumi using the `resource id`, e.g.
 *
 * ```sh
 * $ pulumi import azure:devcenter/devBoxDefinition:DevBoxDefinition example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.DevCenter/devCenters/dc1/devBoxDefinitions/et1
 * ```
 */
export class DevBoxDefinition extends pulumi.CustomResource {
    /**
     * Get an existing DevBoxDefinition resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DevBoxDefinitionState, opts?: pulumi.CustomResourceOptions): DevBoxDefinition {
        return new DevBoxDefinition(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure:devcenter/devBoxDefinition:DevBoxDefinition';

    /**
     * Returns true if the given object is an instance of DevBoxDefinition.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DevBoxDefinition {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DevBoxDefinition.__pulumiType;
    }

    /**
     * The ID of the associated Dev Center. Changing this forces a new resource to be created.
     */
    declare public readonly devCenterId: pulumi.Output<string>;
    /**
     * Whether the Dev Boxes created with this definition are capable of hibernation. Defaults to `false`.
     *
     * > **Note:** Not all images are capable of supporting hibernation, for more information see https://aka.ms/devbox/hibernate.
     */
    declare public readonly hibernateSupportEnabled: pulumi.Output<boolean | undefined>;
    /**
     * The ID of the image for the Dev Center Dev Box Definition.
     */
    declare public readonly imageReferenceId: pulumi.Output<string>;
    /**
     * The Azure Region where the Dev Center Dev Box Definition should exist. Changing this forces a new resource to be created.
     */
    declare public readonly location: pulumi.Output<string>;
    /**
     * Specifies the name of this Dev Center Dev Box Definition. Changing this forces a new resource to be created.
     */
    declare public readonly name: pulumi.Output<string>;
    /**
     * The name of the SKU for the Dev Center Dev Box Definition.
     */
    declare public readonly skuName: pulumi.Output<string>;
    /**
     * A mapping of tags which should be assigned to the Dev Center Dev Box Definition.
     */
    declare public readonly tags: pulumi.Output<{[key: string]: string} | undefined>;

    /**
     * Create a DevBoxDefinition resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DevBoxDefinitionArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DevBoxDefinitionArgs | DevBoxDefinitionState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DevBoxDefinitionState | undefined;
            resourceInputs["devCenterId"] = state?.devCenterId;
            resourceInputs["hibernateSupportEnabled"] = state?.hibernateSupportEnabled;
            resourceInputs["imageReferenceId"] = state?.imageReferenceId;
            resourceInputs["location"] = state?.location;
            resourceInputs["name"] = state?.name;
            resourceInputs["skuName"] = state?.skuName;
            resourceInputs["tags"] = state?.tags;
        } else {
            const args = argsOrState as DevBoxDefinitionArgs | undefined;
            if (args?.devCenterId === undefined && !opts.urn) {
                throw new Error("Missing required property 'devCenterId'");
            }
            if (args?.imageReferenceId === undefined && !opts.urn) {
                throw new Error("Missing required property 'imageReferenceId'");
            }
            if (args?.skuName === undefined && !opts.urn) {
                throw new Error("Missing required property 'skuName'");
            }
            resourceInputs["devCenterId"] = args?.devCenterId;
            resourceInputs["hibernateSupportEnabled"] = args?.hibernateSupportEnabled;
            resourceInputs["imageReferenceId"] = args?.imageReferenceId;
            resourceInputs["location"] = args?.location;
            resourceInputs["name"] = args?.name;
            resourceInputs["skuName"] = args?.skuName;
            resourceInputs["tags"] = args?.tags;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(DevBoxDefinition.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering DevBoxDefinition resources.
 */
export interface DevBoxDefinitionState {
    /**
     * The ID of the associated Dev Center. Changing this forces a new resource to be created.
     */
    devCenterId?: pulumi.Input<string>;
    /**
     * Whether the Dev Boxes created with this definition are capable of hibernation. Defaults to `false`.
     *
     * > **Note:** Not all images are capable of supporting hibernation, for more information see https://aka.ms/devbox/hibernate.
     */
    hibernateSupportEnabled?: pulumi.Input<boolean>;
    /**
     * The ID of the image for the Dev Center Dev Box Definition.
     */
    imageReferenceId?: pulumi.Input<string>;
    /**
     * The Azure Region where the Dev Center Dev Box Definition should exist. Changing this forces a new resource to be created.
     */
    location?: pulumi.Input<string>;
    /**
     * Specifies the name of this Dev Center Dev Box Definition. Changing this forces a new resource to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * The name of the SKU for the Dev Center Dev Box Definition.
     */
    skuName?: pulumi.Input<string>;
    /**
     * A mapping of tags which should be assigned to the Dev Center Dev Box Definition.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

/**
 * The set of arguments for constructing a DevBoxDefinition resource.
 */
export interface DevBoxDefinitionArgs {
    /**
     * The ID of the associated Dev Center. Changing this forces a new resource to be created.
     */
    devCenterId: pulumi.Input<string>;
    /**
     * Whether the Dev Boxes created with this definition are capable of hibernation. Defaults to `false`.
     *
     * > **Note:** Not all images are capable of supporting hibernation, for more information see https://aka.ms/devbox/hibernate.
     */
    hibernateSupportEnabled?: pulumi.Input<boolean>;
    /**
     * The ID of the image for the Dev Center Dev Box Definition.
     */
    imageReferenceId: pulumi.Input<string>;
    /**
     * The Azure Region where the Dev Center Dev Box Definition should exist. Changing this forces a new resource to be created.
     */
    location?: pulumi.Input<string>;
    /**
     * Specifies the name of this Dev Center Dev Box Definition. Changing this forces a new resource to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * The name of the SKU for the Dev Center Dev Box Definition.
     */
    skuName: pulumi.Input<string>;
    /**
     * A mapping of tags which should be assigned to the Dev Center Dev Box Definition.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
