// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Manages a Dev Center Attached Network.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = new azure.core.ResourceGroup("example", {
 *     name: "example-dcan",
 *     location: "West Europe",
 * });
 * const exampleVirtualNetwork = new azure.network.VirtualNetwork("example", {
 *     name: "example-vnet",
 *     addressSpaces: ["10.0.0.0/16"],
 *     location: example.location,
 *     resourceGroupName: example.name,
 * });
 * const exampleSubnet = new azure.network.Subnet("example", {
 *     name: "internal",
 *     resourceGroupName: example.name,
 *     virtualNetworkName: exampleVirtualNetwork.name,
 *     addressPrefixes: ["10.0.2.0/24"],
 * });
 * const exampleDevCenter = new azure.devcenter.DevCenter("example", {
 *     name: "example-dc",
 *     resourceGroupName: example.name,
 *     location: example.location,
 *     identity: {
 *         type: "SystemAssigned",
 *     },
 * });
 * const exampleNetworkConnection = new azure.devcenter.NetworkConnection("example", {
 *     name: "example-dcnc",
 *     resourceGroupName: example.name,
 *     location: example.location,
 *     domainJoinType: "AzureADJoin",
 *     subnetId: exampleSubnet.id,
 * });
 * const exampleAttachedNetwork = new azure.devcenter.AttachedNetwork("example", {
 *     name: "example-dcet",
 *     devCenterId: exampleDevCenter.id,
 *     networkConnectionId: exampleNetworkConnection.id,
 * });
 * ```
 *
 * ## API Providers
 *
 * <!-- This section is generated, changes will be overwritten -->
 * This resource uses the following Azure API Providers:
 *
 * * `Microsoft.DevCenter`: 2025-02-01
 *
 * ## Import
 *
 * An existing Dev Center Attached Network can be imported into Pulumi using the `resource id`, e.g.
 *
 * ```sh
 * $ pulumi import azure:devcenter/attachedNetwork:AttachedNetwork example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.DevCenter/devCenters/dc1/attachedNetworks/et1
 * ```
 */
export class AttachedNetwork extends pulumi.CustomResource {
    /**
     * Get an existing AttachedNetwork resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AttachedNetworkState, opts?: pulumi.CustomResourceOptions): AttachedNetwork {
        return new AttachedNetwork(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure:devcenter/attachedNetwork:AttachedNetwork';

    /**
     * Returns true if the given object is an instance of AttachedNetwork.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AttachedNetwork {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AttachedNetwork.__pulumiType;
    }

    /**
     * The ID of the associated Dev Center. Changing this forces a new resource to be created.
     */
    public readonly devCenterId!: pulumi.Output<string>;
    /**
     * Specifies the name of this Dev Center Attached Network. Changing this forces a new resource to be created.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The ID of the Dev Center Network Connection you want to attach. Changing this forces a new resource to be created.
     */
    public readonly networkConnectionId!: pulumi.Output<string>;

    /**
     * Create a AttachedNetwork resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AttachedNetworkArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AttachedNetworkArgs | AttachedNetworkState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AttachedNetworkState | undefined;
            resourceInputs["devCenterId"] = state ? state.devCenterId : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["networkConnectionId"] = state ? state.networkConnectionId : undefined;
        } else {
            const args = argsOrState as AttachedNetworkArgs | undefined;
            if ((!args || args.devCenterId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'devCenterId'");
            }
            if ((!args || args.networkConnectionId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'networkConnectionId'");
            }
            resourceInputs["devCenterId"] = args ? args.devCenterId : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["networkConnectionId"] = args ? args.networkConnectionId : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AttachedNetwork.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering AttachedNetwork resources.
 */
export interface AttachedNetworkState {
    /**
     * The ID of the associated Dev Center. Changing this forces a new resource to be created.
     */
    devCenterId?: pulumi.Input<string>;
    /**
     * Specifies the name of this Dev Center Attached Network. Changing this forces a new resource to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * The ID of the Dev Center Network Connection you want to attach. Changing this forces a new resource to be created.
     */
    networkConnectionId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a AttachedNetwork resource.
 */
export interface AttachedNetworkArgs {
    /**
     * The ID of the associated Dev Center. Changing this forces a new resource to be created.
     */
    devCenterId: pulumi.Input<string>;
    /**
     * Specifies the name of this Dev Center Attached Network. Changing this forces a new resource to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * The ID of the Dev Center Network Connection you want to attach. Changing this forces a new resource to be created.
     */
    networkConnectionId: pulumi.Input<string>;
}
