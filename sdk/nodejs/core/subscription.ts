// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * ## Import
 *
 * Subscriptions can be imported using the `resource id`, e.g.
 *
 * ```sh
 *  $ pulumi import azure:core/subscription:Subscription example "/providers/Microsoft.Subscription/aliases/subscription1"
 * ```
 *
 *  In this scenario, the `subscription_id` property can be completed and Terraform will assume control of the existing subscription by creating an Alias. e.g.
 */
export class Subscription extends pulumi.CustomResource {
    /**
     * Get an existing Subscription resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SubscriptionState, opts?: pulumi.CustomResourceOptions): Subscription {
        return new Subscription(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure:core/subscription:Subscription';

    /**
     * Returns true if the given object is an instance of Subscription.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Subscription {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Subscription.__pulumiType;
    }

    /**
     * The Alias Name of the subscription. If omitted a new UUID will be generated for this property.
     */
    public readonly alias!: pulumi.Output<string>;
    public readonly billingScopeId!: pulumi.Output<string | undefined>;
    /**
     * The ID of the Subscription. Cannot be specified with `billingAccount`, `billingProfile`, `enrollmentAccount`, or `invoiceSection` Changing this forces a new Subscription to be created.
     */
    public readonly subscriptionId!: pulumi.Output<string>;
    /**
     * The Name of the Subscription. This is the Display Name in the portal.
     */
    public readonly subscriptionName!: pulumi.Output<string>;
    public /*out*/ readonly tags!: pulumi.Output<{[key: string]: string}>;
    /**
     * The ID of the Tenant to which the subscription belongs.
     */
    public /*out*/ readonly tenantId!: pulumi.Output<string>;
    /**
     * The workload type of the Subscription.  Possible values are `Production` (default) and `DevTest`. Changing this forces a new Subscription to be created.
     */
    public readonly workload!: pulumi.Output<string | undefined>;

    /**
     * Create a Subscription resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SubscriptionArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SubscriptionArgs | SubscriptionState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SubscriptionState | undefined;
            inputs["alias"] = state ? state.alias : undefined;
            inputs["billingScopeId"] = state ? state.billingScopeId : undefined;
            inputs["subscriptionId"] = state ? state.subscriptionId : undefined;
            inputs["subscriptionName"] = state ? state.subscriptionName : undefined;
            inputs["tags"] = state ? state.tags : undefined;
            inputs["tenantId"] = state ? state.tenantId : undefined;
            inputs["workload"] = state ? state.workload : undefined;
        } else {
            const args = argsOrState as SubscriptionArgs | undefined;
            if ((!args || args.subscriptionName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'subscriptionName'");
            }
            inputs["alias"] = args ? args.alias : undefined;
            inputs["billingScopeId"] = args ? args.billingScopeId : undefined;
            inputs["subscriptionId"] = args ? args.subscriptionId : undefined;
            inputs["subscriptionName"] = args ? args.subscriptionName : undefined;
            inputs["workload"] = args ? args.workload : undefined;
            inputs["tags"] = undefined /*out*/;
            inputs["tenantId"] = undefined /*out*/;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        super(Subscription.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Subscription resources.
 */
export interface SubscriptionState {
    /**
     * The Alias Name of the subscription. If omitted a new UUID will be generated for this property.
     */
    readonly alias?: pulumi.Input<string>;
    readonly billingScopeId?: pulumi.Input<string>;
    /**
     * The ID of the Subscription. Cannot be specified with `billingAccount`, `billingProfile`, `enrollmentAccount`, or `invoiceSection` Changing this forces a new Subscription to be created.
     */
    readonly subscriptionId?: pulumi.Input<string>;
    /**
     * The Name of the Subscription. This is the Display Name in the portal.
     */
    readonly subscriptionName?: pulumi.Input<string>;
    readonly tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The ID of the Tenant to which the subscription belongs.
     */
    readonly tenantId?: pulumi.Input<string>;
    /**
     * The workload type of the Subscription.  Possible values are `Production` (default) and `DevTest`. Changing this forces a new Subscription to be created.
     */
    readonly workload?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Subscription resource.
 */
export interface SubscriptionArgs {
    /**
     * The Alias Name of the subscription. If omitted a new UUID will be generated for this property.
     */
    readonly alias?: pulumi.Input<string>;
    readonly billingScopeId?: pulumi.Input<string>;
    /**
     * The ID of the Subscription. Cannot be specified with `billingAccount`, `billingProfile`, `enrollmentAccount`, or `invoiceSection` Changing this forces a new Subscription to be created.
     */
    readonly subscriptionId?: pulumi.Input<string>;
    /**
     * The Name of the Subscription. This is the Display Name in the portal.
     */
    readonly subscriptionName: pulumi.Input<string>;
    /**
     * The workload type of the Subscription.  Possible values are `Production` (default) and `DevTest`. Changing this forces a new Subscription to be created.
     */
    readonly workload?: pulumi.Input<string>;
}
