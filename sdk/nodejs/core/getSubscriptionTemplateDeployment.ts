// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Use this data source to access information about an existing Subscription Template Deployment.
 */
export function getSubscriptionTemplateDeployment(args: GetSubscriptionTemplateDeploymentArgs, opts?: pulumi.InvokeOptions): Promise<GetSubscriptionTemplateDeploymentResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azure:core/getSubscriptionTemplateDeployment:getSubscriptionTemplateDeployment", {
        "name": args.name,
    }, opts);
}

/**
 * A collection of arguments for invoking getSubscriptionTemplateDeployment.
 */
export interface GetSubscriptionTemplateDeploymentArgs {
    /**
     * The name of this Subscription Template Deployment.
     */
    name: string;
}

/**
 * A collection of values returned by getSubscriptionTemplateDeployment.
 */
export interface GetSubscriptionTemplateDeploymentResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly name: string;
    /**
     * The JSON Content of the Outputs of the ARM Template Deployment.
     */
    readonly outputContent: string;
}
/**
 * Use this data source to access information about an existing Subscription Template Deployment.
 */
export function getSubscriptionTemplateDeploymentOutput(args: GetSubscriptionTemplateDeploymentOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSubscriptionTemplateDeploymentResult> {
    return pulumi.output(args).apply((a: any) => getSubscriptionTemplateDeployment(a, opts))
}

/**
 * A collection of arguments for invoking getSubscriptionTemplateDeployment.
 */
export interface GetSubscriptionTemplateDeploymentOutputArgs {
    /**
     * The name of this Subscription Template Deployment.
     */
    name: pulumi.Input<string>;
}
