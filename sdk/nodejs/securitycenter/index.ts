// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { AdvancedThreatProtectionArgs, AdvancedThreatProtectionState } from "./advancedThreatProtection";
export type AdvancedThreatProtection = import("./advancedThreatProtection").AdvancedThreatProtection;
export const AdvancedThreatProtection: typeof import("./advancedThreatProtection").AdvancedThreatProtection = null as any;
utilities.lazyLoad(exports, ["AdvancedThreatProtection"], () => require("./advancedThreatProtection"));

export { AssessmentArgs, AssessmentState } from "./assessment";
export type Assessment = import("./assessment").Assessment;
export const Assessment: typeof import("./assessment").Assessment = null as any;
utilities.lazyLoad(exports, ["Assessment"], () => require("./assessment"));

export { AssessmentPolicyArgs, AssessmentPolicyState } from "./assessmentPolicy";
export type AssessmentPolicy = import("./assessmentPolicy").AssessmentPolicy;
export const AssessmentPolicy: typeof import("./assessmentPolicy").AssessmentPolicy = null as any;
utilities.lazyLoad(exports, ["AssessmentPolicy"], () => require("./assessmentPolicy"));

export { AutoProvisioningArgs, AutoProvisioningState } from "./autoProvisioning";
export type AutoProvisioning = import("./autoProvisioning").AutoProvisioning;
export const AutoProvisioning: typeof import("./autoProvisioning").AutoProvisioning = null as any;
utilities.lazyLoad(exports, ["AutoProvisioning"], () => require("./autoProvisioning"));

export { AutomationArgs, AutomationState } from "./automation";
export type Automation = import("./automation").Automation;
export const Automation: typeof import("./automation").Automation = null as any;
utilities.lazyLoad(exports, ["Automation"], () => require("./automation"));

export { ContactArgs, ContactState } from "./contact";
export type Contact = import("./contact").Contact;
export const Contact: typeof import("./contact").Contact = null as any;
utilities.lazyLoad(exports, ["Contact"], () => require("./contact"));

export { ServerVulnerabilityAssessmentArgs, ServerVulnerabilityAssessmentState } from "./serverVulnerabilityAssessment";
export type ServerVulnerabilityAssessment = import("./serverVulnerabilityAssessment").ServerVulnerabilityAssessment;
export const ServerVulnerabilityAssessment: typeof import("./serverVulnerabilityAssessment").ServerVulnerabilityAssessment = null as any;
utilities.lazyLoad(exports, ["ServerVulnerabilityAssessment"], () => require("./serverVulnerabilityAssessment"));

export { ServerVulnerabilityAssessmentVirtualMachineArgs, ServerVulnerabilityAssessmentVirtualMachineState } from "./serverVulnerabilityAssessmentVirtualMachine";
export type ServerVulnerabilityAssessmentVirtualMachine = import("./serverVulnerabilityAssessmentVirtualMachine").ServerVulnerabilityAssessmentVirtualMachine;
export const ServerVulnerabilityAssessmentVirtualMachine: typeof import("./serverVulnerabilityAssessmentVirtualMachine").ServerVulnerabilityAssessmentVirtualMachine = null as any;
utilities.lazyLoad(exports, ["ServerVulnerabilityAssessmentVirtualMachine"], () => require("./serverVulnerabilityAssessmentVirtualMachine"));

export { ServerVulnerabilityAssessmentsSettingArgs, ServerVulnerabilityAssessmentsSettingState } from "./serverVulnerabilityAssessmentsSetting";
export type ServerVulnerabilityAssessmentsSetting = import("./serverVulnerabilityAssessmentsSetting").ServerVulnerabilityAssessmentsSetting;
export const ServerVulnerabilityAssessmentsSetting: typeof import("./serverVulnerabilityAssessmentsSetting").ServerVulnerabilityAssessmentsSetting = null as any;
utilities.lazyLoad(exports, ["ServerVulnerabilityAssessmentsSetting"], () => require("./serverVulnerabilityAssessmentsSetting"));

export { SettingArgs, SettingState } from "./setting";
export type Setting = import("./setting").Setting;
export const Setting: typeof import("./setting").Setting = null as any;
utilities.lazyLoad(exports, ["Setting"], () => require("./setting"));

export { StorageDefenderArgs, StorageDefenderState } from "./storageDefender";
export type StorageDefender = import("./storageDefender").StorageDefender;
export const StorageDefender: typeof import("./storageDefender").StorageDefender = null as any;
utilities.lazyLoad(exports, ["StorageDefender"], () => require("./storageDefender"));

export { SubscriptionPricingArgs, SubscriptionPricingState } from "./subscriptionPricing";
export type SubscriptionPricing = import("./subscriptionPricing").SubscriptionPricing;
export const SubscriptionPricing: typeof import("./subscriptionPricing").SubscriptionPricing = null as any;
utilities.lazyLoad(exports, ["SubscriptionPricing"], () => require("./subscriptionPricing"));

export { WorkspaceArgs, WorkspaceState } from "./workspace";
export type Workspace = import("./workspace").Workspace;
export const Workspace: typeof import("./workspace").Workspace = null as any;
utilities.lazyLoad(exports, ["Workspace"], () => require("./workspace"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "azure:securitycenter/advancedThreatProtection:AdvancedThreatProtection":
                return new AdvancedThreatProtection(name, <any>undefined, { urn })
            case "azure:securitycenter/assessment:Assessment":
                return new Assessment(name, <any>undefined, { urn })
            case "azure:securitycenter/assessmentPolicy:AssessmentPolicy":
                return new AssessmentPolicy(name, <any>undefined, { urn })
            case "azure:securitycenter/autoProvisioning:AutoProvisioning":
                return new AutoProvisioning(name, <any>undefined, { urn })
            case "azure:securitycenter/automation:Automation":
                return new Automation(name, <any>undefined, { urn })
            case "azure:securitycenter/contact:Contact":
                return new Contact(name, <any>undefined, { urn })
            case "azure:securitycenter/serverVulnerabilityAssessment:ServerVulnerabilityAssessment":
                return new ServerVulnerabilityAssessment(name, <any>undefined, { urn })
            case "azure:securitycenter/serverVulnerabilityAssessmentVirtualMachine:ServerVulnerabilityAssessmentVirtualMachine":
                return new ServerVulnerabilityAssessmentVirtualMachine(name, <any>undefined, { urn })
            case "azure:securitycenter/serverVulnerabilityAssessmentsSetting:ServerVulnerabilityAssessmentsSetting":
                return new ServerVulnerabilityAssessmentsSetting(name, <any>undefined, { urn })
            case "azure:securitycenter/setting:Setting":
                return new Setting(name, <any>undefined, { urn })
            case "azure:securitycenter/storageDefender:StorageDefender":
                return new StorageDefender(name, <any>undefined, { urn })
            case "azure:securitycenter/subscriptionPricing:SubscriptionPricing":
                return new SubscriptionPricing(name, <any>undefined, { urn })
            case "azure:securitycenter/workspace:Workspace":
                return new Workspace(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure", "securitycenter/advancedThreatProtection", _module)
pulumi.runtime.registerResourceModule("azure", "securitycenter/assessment", _module)
pulumi.runtime.registerResourceModule("azure", "securitycenter/assessmentPolicy", _module)
pulumi.runtime.registerResourceModule("azure", "securitycenter/autoProvisioning", _module)
pulumi.runtime.registerResourceModule("azure", "securitycenter/automation", _module)
pulumi.runtime.registerResourceModule("azure", "securitycenter/contact", _module)
pulumi.runtime.registerResourceModule("azure", "securitycenter/serverVulnerabilityAssessment", _module)
pulumi.runtime.registerResourceModule("azure", "securitycenter/serverVulnerabilityAssessmentVirtualMachine", _module)
pulumi.runtime.registerResourceModule("azure", "securitycenter/serverVulnerabilityAssessmentsSetting", _module)
pulumi.runtime.registerResourceModule("azure", "securitycenter/setting", _module)
pulumi.runtime.registerResourceModule("azure", "securitycenter/storageDefender", _module)
pulumi.runtime.registerResourceModule("azure", "securitycenter/subscriptionPricing", _module)
pulumi.runtime.registerResourceModule("azure", "securitycenter/workspace", _module)
