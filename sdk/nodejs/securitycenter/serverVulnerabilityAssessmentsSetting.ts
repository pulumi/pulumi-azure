// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Manages the Server Vulnerability Assesments Setting for Azure Security Center.
 *
 * > **NOTE:** This resource requires the `Owner` permission on the Subscription.
 *
 * > **NOTE:** Deletion of this resource disables the setting.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = new azure.securitycenter.ServerVulnerabilityAssessmentsSetting("example", {vulnerabilityAssessmentProvider: "MdeTvm"});
 * ```
 *
 * ## Import
 *
 * The setting can be imported using the `resource id`, e.g.
 *
 * ```sh
 *  $ pulumi import azure:securitycenter/serverVulnerabilityAssessmentsSetting:ServerVulnerabilityAssessmentsSetting example /subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Security/serverVulnerabilityAssessmentsSettings/AzureServersSetting
 * ```
 */
export class ServerVulnerabilityAssessmentsSetting extends pulumi.CustomResource {
    /**
     * Get an existing ServerVulnerabilityAssessmentsSetting resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ServerVulnerabilityAssessmentsSettingState, opts?: pulumi.CustomResourceOptions): ServerVulnerabilityAssessmentsSetting {
        return new ServerVulnerabilityAssessmentsSetting(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure:securitycenter/serverVulnerabilityAssessmentsSetting:ServerVulnerabilityAssessmentsSetting';

    /**
     * Returns true if the given object is an instance of ServerVulnerabilityAssessmentsSetting.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ServerVulnerabilityAssessmentsSetting {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ServerVulnerabilityAssessmentsSetting.__pulumiType;
    }

    /**
     * The vulnerability assesment provider to use. The only possible values is `MdeTvm`.
     */
    public readonly vulnerabilityAssessmentProvider!: pulumi.Output<string>;

    /**
     * Create a ServerVulnerabilityAssessmentsSetting resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ServerVulnerabilityAssessmentsSettingArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ServerVulnerabilityAssessmentsSettingArgs | ServerVulnerabilityAssessmentsSettingState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ServerVulnerabilityAssessmentsSettingState | undefined;
            resourceInputs["vulnerabilityAssessmentProvider"] = state ? state.vulnerabilityAssessmentProvider : undefined;
        } else {
            const args = argsOrState as ServerVulnerabilityAssessmentsSettingArgs | undefined;
            if ((!args || args.vulnerabilityAssessmentProvider === undefined) && !opts.urn) {
                throw new Error("Missing required property 'vulnerabilityAssessmentProvider'");
            }
            resourceInputs["vulnerabilityAssessmentProvider"] = args ? args.vulnerabilityAssessmentProvider : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ServerVulnerabilityAssessmentsSetting.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ServerVulnerabilityAssessmentsSetting resources.
 */
export interface ServerVulnerabilityAssessmentsSettingState {
    /**
     * The vulnerability assesment provider to use. The only possible values is `MdeTvm`.
     */
    vulnerabilityAssessmentProvider?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ServerVulnerabilityAssessmentsSetting resource.
 */
export interface ServerVulnerabilityAssessmentsSettingArgs {
    /**
     * The vulnerability assesment provider to use. The only possible values is `MdeTvm`.
     */
    vulnerabilityAssessmentProvider: pulumi.Input<string>;
}
