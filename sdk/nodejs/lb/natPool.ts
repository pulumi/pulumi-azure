// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Manages a Load Balancer NAT pool.
 *
 * > **Note:** This resource cannot be used with with virtual machines, instead use the `azure.lb.NatRule` resource.
 *
 * > **Note:** When using this resource, the Load Balancer needs to have a FrontEnd IP Configuration Attached
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = new azure.core.ResourceGroup("example", {
 *     name: "LoadBalancerRG",
 *     location: "West Europe",
 * });
 * const examplePublicIp = new azure.network.PublicIp("example", {
 *     name: "PublicIPForLB",
 *     location: example.location,
 *     resourceGroupName: example.name,
 *     allocationMethod: "Static",
 * });
 * const exampleLoadBalancer = new azure.lb.LoadBalancer("example", {
 *     name: "TestLoadBalancer",
 *     location: example.location,
 *     resourceGroupName: example.name,
 *     frontendIpConfigurations: [{
 *         name: "PublicIPAddress",
 *         publicIpAddressId: examplePublicIp.id,
 *     }],
 * });
 * const exampleNatPool = new azure.lb.NatPool("example", {
 *     resourceGroupName: example.name,
 *     loadbalancerId: exampleLoadBalancer.id,
 *     name: "SampleApplicationPool",
 *     protocol: "Tcp",
 *     frontendPortStart: 80,
 *     frontendPortEnd: 81,
 *     backendPort: 8080,
 *     frontendIpConfigurationName: "PublicIPAddress",
 * });
 * ```
 *
 * ## API Providers
 *
 * <!-- This section is generated, changes will be overwritten -->
 * This resource uses the following Azure API Providers:
 *
 * * `Microsoft.Network` - 2023-09-01
 *
 * ## Import
 *
 * Load Balancer NAT Pools can be imported using the `resource id`, e.g.
 *
 * ```sh
 * $ pulumi import azure:lb/natPool:NatPool example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.Network/loadBalancers/lb1/inboundNatPools/pool1
 * ```
 */
export class NatPool extends pulumi.CustomResource {
    /**
     * Get an existing NatPool resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: NatPoolState, opts?: pulumi.CustomResourceOptions): NatPool {
        return new NatPool(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure:lb/natPool:NatPool';

    /**
     * Returns true if the given object is an instance of NatPool.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is NatPool {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === NatPool.__pulumiType;
    }

    /**
     * The port used for the internal endpoint. Possible values range between 1 and 65535, inclusive.
     */
    declare public readonly backendPort: pulumi.Output<number>;
    /**
     * Are the floating IPs enabled for this Load Balancer Rule? A floating IP is reassigned to a secondary server in case the primary server fails. Required to configure a SQL AlwaysOn Availability Group.
     */
    declare public readonly floatingIpEnabled: pulumi.Output<boolean | undefined>;
    declare public /*out*/ readonly frontendIpConfigurationId: pulumi.Output<string>;
    /**
     * The name of the frontend IP configuration exposing this rule.
     */
    declare public readonly frontendIpConfigurationName: pulumi.Output<string>;
    /**
     * The last port number in the range of external ports that will be used to provide Inbound NAT to NICs associated with this Load Balancer. Possible values range between 1 and 65534, inclusive.
     */
    declare public readonly frontendPortEnd: pulumi.Output<number>;
    /**
     * The first port number in the range of external ports that will be used to provide Inbound NAT to NICs associated with this Load Balancer. Possible values range between 1 and 65534, inclusive.
     */
    declare public readonly frontendPortStart: pulumi.Output<number>;
    /**
     * Specifies the idle timeout in minutes for TCP connections. Valid values are between `4` and `30`. Defaults to `4`.
     */
    declare public readonly idleTimeoutInMinutes: pulumi.Output<number | undefined>;
    /**
     * The ID of the Load Balancer in which to create the NAT pool. Changing this forces a new resource to be created.
     */
    declare public readonly loadbalancerId: pulumi.Output<string>;
    /**
     * Specifies the name of the NAT pool. Changing this forces a new resource to be created.
     */
    declare public readonly name: pulumi.Output<string>;
    /**
     * The transport protocol for the external endpoint. Possible values are `All`, `Tcp` and `Udp`.
     */
    declare public readonly protocol: pulumi.Output<string>;
    /**
     * The name of the resource group in which to create the resource. Changing this forces a new resource to be created.
     */
    declare public readonly resourceGroupName: pulumi.Output<string>;
    /**
     * Is TCP Reset enabled for this Load Balancer Rule?
     */
    declare public readonly tcpResetEnabled: pulumi.Output<boolean | undefined>;

    /**
     * Create a NatPool resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: NatPoolArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: NatPoolArgs | NatPoolState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as NatPoolState | undefined;
            resourceInputs["backendPort"] = state?.backendPort;
            resourceInputs["floatingIpEnabled"] = state?.floatingIpEnabled;
            resourceInputs["frontendIpConfigurationId"] = state?.frontendIpConfigurationId;
            resourceInputs["frontendIpConfigurationName"] = state?.frontendIpConfigurationName;
            resourceInputs["frontendPortEnd"] = state?.frontendPortEnd;
            resourceInputs["frontendPortStart"] = state?.frontendPortStart;
            resourceInputs["idleTimeoutInMinutes"] = state?.idleTimeoutInMinutes;
            resourceInputs["loadbalancerId"] = state?.loadbalancerId;
            resourceInputs["name"] = state?.name;
            resourceInputs["protocol"] = state?.protocol;
            resourceInputs["resourceGroupName"] = state?.resourceGroupName;
            resourceInputs["tcpResetEnabled"] = state?.tcpResetEnabled;
        } else {
            const args = argsOrState as NatPoolArgs | undefined;
            if (args?.backendPort === undefined && !opts.urn) {
                throw new Error("Missing required property 'backendPort'");
            }
            if (args?.frontendIpConfigurationName === undefined && !opts.urn) {
                throw new Error("Missing required property 'frontendIpConfigurationName'");
            }
            if (args?.frontendPortEnd === undefined && !opts.urn) {
                throw new Error("Missing required property 'frontendPortEnd'");
            }
            if (args?.frontendPortStart === undefined && !opts.urn) {
                throw new Error("Missing required property 'frontendPortStart'");
            }
            if (args?.loadbalancerId === undefined && !opts.urn) {
                throw new Error("Missing required property 'loadbalancerId'");
            }
            if (args?.protocol === undefined && !opts.urn) {
                throw new Error("Missing required property 'protocol'");
            }
            if (args?.resourceGroupName === undefined && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            resourceInputs["backendPort"] = args?.backendPort;
            resourceInputs["floatingIpEnabled"] = args?.floatingIpEnabled;
            resourceInputs["frontendIpConfigurationName"] = args?.frontendIpConfigurationName;
            resourceInputs["frontendPortEnd"] = args?.frontendPortEnd;
            resourceInputs["frontendPortStart"] = args?.frontendPortStart;
            resourceInputs["idleTimeoutInMinutes"] = args?.idleTimeoutInMinutes;
            resourceInputs["loadbalancerId"] = args?.loadbalancerId;
            resourceInputs["name"] = args?.name;
            resourceInputs["protocol"] = args?.protocol;
            resourceInputs["resourceGroupName"] = args?.resourceGroupName;
            resourceInputs["tcpResetEnabled"] = args?.tcpResetEnabled;
            resourceInputs["frontendIpConfigurationId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(NatPool.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering NatPool resources.
 */
export interface NatPoolState {
    /**
     * The port used for the internal endpoint. Possible values range between 1 and 65535, inclusive.
     */
    backendPort?: pulumi.Input<number>;
    /**
     * Are the floating IPs enabled for this Load Balancer Rule? A floating IP is reassigned to a secondary server in case the primary server fails. Required to configure a SQL AlwaysOn Availability Group.
     */
    floatingIpEnabled?: pulumi.Input<boolean>;
    frontendIpConfigurationId?: pulumi.Input<string>;
    /**
     * The name of the frontend IP configuration exposing this rule.
     */
    frontendIpConfigurationName?: pulumi.Input<string>;
    /**
     * The last port number in the range of external ports that will be used to provide Inbound NAT to NICs associated with this Load Balancer. Possible values range between 1 and 65534, inclusive.
     */
    frontendPortEnd?: pulumi.Input<number>;
    /**
     * The first port number in the range of external ports that will be used to provide Inbound NAT to NICs associated with this Load Balancer. Possible values range between 1 and 65534, inclusive.
     */
    frontendPortStart?: pulumi.Input<number>;
    /**
     * Specifies the idle timeout in minutes for TCP connections. Valid values are between `4` and `30`. Defaults to `4`.
     */
    idleTimeoutInMinutes?: pulumi.Input<number>;
    /**
     * The ID of the Load Balancer in which to create the NAT pool. Changing this forces a new resource to be created.
     */
    loadbalancerId?: pulumi.Input<string>;
    /**
     * Specifies the name of the NAT pool. Changing this forces a new resource to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * The transport protocol for the external endpoint. Possible values are `All`, `Tcp` and `Udp`.
     */
    protocol?: pulumi.Input<string>;
    /**
     * The name of the resource group in which to create the resource. Changing this forces a new resource to be created.
     */
    resourceGroupName?: pulumi.Input<string>;
    /**
     * Is TCP Reset enabled for this Load Balancer Rule?
     */
    tcpResetEnabled?: pulumi.Input<boolean>;
}

/**
 * The set of arguments for constructing a NatPool resource.
 */
export interface NatPoolArgs {
    /**
     * The port used for the internal endpoint. Possible values range between 1 and 65535, inclusive.
     */
    backendPort: pulumi.Input<number>;
    /**
     * Are the floating IPs enabled for this Load Balancer Rule? A floating IP is reassigned to a secondary server in case the primary server fails. Required to configure a SQL AlwaysOn Availability Group.
     */
    floatingIpEnabled?: pulumi.Input<boolean>;
    /**
     * The name of the frontend IP configuration exposing this rule.
     */
    frontendIpConfigurationName: pulumi.Input<string>;
    /**
     * The last port number in the range of external ports that will be used to provide Inbound NAT to NICs associated with this Load Balancer. Possible values range between 1 and 65534, inclusive.
     */
    frontendPortEnd: pulumi.Input<number>;
    /**
     * The first port number in the range of external ports that will be used to provide Inbound NAT to NICs associated with this Load Balancer. Possible values range between 1 and 65534, inclusive.
     */
    frontendPortStart: pulumi.Input<number>;
    /**
     * Specifies the idle timeout in minutes for TCP connections. Valid values are between `4` and `30`. Defaults to `4`.
     */
    idleTimeoutInMinutes?: pulumi.Input<number>;
    /**
     * The ID of the Load Balancer in which to create the NAT pool. Changing this forces a new resource to be created.
     */
    loadbalancerId: pulumi.Input<string>;
    /**
     * Specifies the name of the NAT pool. Changing this forces a new resource to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * The transport protocol for the external endpoint. Possible values are `All`, `Tcp` and `Udp`.
     */
    protocol: pulumi.Input<string>;
    /**
     * The name of the resource group in which to create the resource. Changing this forces a new resource to be created.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * Is TCP Reset enabled for this Load Balancer Rule?
     */
    tcpResetEnabled?: pulumi.Input<boolean>;
}
