// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";

export namespace analysisservices {
    export interface ServerIpv4FirewallRule {
        /**
         * Specifies the name of the firewall rule.
         */
        name: pulumi.Input<string>;
        /**
         * End of the firewall rule range as IPv4 address.
         */
        rangeEnd: pulumi.Input<string>;
        /**
         * Start of the firewall rule range as IPv4 address.
         */
        rangeStart: pulumi.Input<string>;
    }
}

export namespace apimanagement {
    export interface ApiImport {
        contentFormat: pulumi.Input<string>;
        contentValue: pulumi.Input<string>;
        wsdlSelector?: pulumi.Input<inputs.apimanagement.ApiImportWsdlSelector>;
    }

    export interface ApiImportWsdlSelector {
        endpointName: pulumi.Input<string>;
        serviceName: pulumi.Input<string>;
    }

    export interface ApiOperationRequest {
        /**
         * A description for this API Operation, which may include HTML formatting tags.
         */
        description?: pulumi.Input<string>;
        headers?: pulumi.Input<pulumi.Input<inputs.apimanagement.ApiOperationRequestHeader>[]>;
        queryParameters?: pulumi.Input<pulumi.Input<inputs.apimanagement.ApiOperationRequestQueryParameter>[]>;
        representations?: pulumi.Input<pulumi.Input<inputs.apimanagement.ApiOperationRequestRepresentation>[]>;
    }

    export interface ApiOperationRequestHeader {
        defaultValue?: pulumi.Input<string>;
        /**
         * A description for this API Operation, which may include HTML formatting tags.
         */
        description?: pulumi.Input<string>;
        name: pulumi.Input<string>;
        required: pulumi.Input<boolean>;
        type: pulumi.Input<string>;
        values?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface ApiOperationRequestQueryParameter {
        defaultValue?: pulumi.Input<string>;
        /**
         * A description for this API Operation, which may include HTML formatting tags.
         */
        description?: pulumi.Input<string>;
        name: pulumi.Input<string>;
        required: pulumi.Input<boolean>;
        type: pulumi.Input<string>;
        values?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface ApiOperationRequestRepresentation {
        contentType: pulumi.Input<string>;
        formParameters?: pulumi.Input<pulumi.Input<inputs.apimanagement.ApiOperationRequestRepresentationFormParameter>[]>;
        sample?: pulumi.Input<string>;
        schemaId?: pulumi.Input<string>;
        typeName?: pulumi.Input<string>;
    }

    export interface ApiOperationRequestRepresentationFormParameter {
        defaultValue?: pulumi.Input<string>;
        /**
         * A description for this API Operation, which may include HTML formatting tags.
         */
        description?: pulumi.Input<string>;
        name: pulumi.Input<string>;
        required: pulumi.Input<boolean>;
        type: pulumi.Input<string>;
        values?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface ApiOperationResponse {
        /**
         * A description for this API Operation, which may include HTML formatting tags.
         */
        description?: pulumi.Input<string>;
        headers?: pulumi.Input<pulumi.Input<inputs.apimanagement.ApiOperationResponseHeader>[]>;
        representations?: pulumi.Input<pulumi.Input<inputs.apimanagement.ApiOperationResponseRepresentation>[]>;
        statusCode: pulumi.Input<number>;
    }

    export interface ApiOperationResponseHeader {
        defaultValue?: pulumi.Input<string>;
        /**
         * A description for this API Operation, which may include HTML formatting tags.
         */
        description?: pulumi.Input<string>;
        name: pulumi.Input<string>;
        required: pulumi.Input<boolean>;
        type: pulumi.Input<string>;
        values?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface ApiOperationResponseRepresentation {
        contentType: pulumi.Input<string>;
        formParameters?: pulumi.Input<pulumi.Input<inputs.apimanagement.ApiOperationResponseRepresentationFormParameter>[]>;
        sample?: pulumi.Input<string>;
        schemaId?: pulumi.Input<string>;
        typeName?: pulumi.Input<string>;
    }

    export interface ApiOperationResponseRepresentationFormParameter {
        defaultValue?: pulumi.Input<string>;
        /**
         * A description for this API Operation, which may include HTML formatting tags.
         */
        description?: pulumi.Input<string>;
        name: pulumi.Input<string>;
        required: pulumi.Input<boolean>;
        type: pulumi.Input<string>;
        values?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface ApiOperationTemplateParameter {
        defaultValue?: pulumi.Input<string>;
        /**
         * A description for this API Operation, which may include HTML formatting tags.
         */
        description?: pulumi.Input<string>;
        name: pulumi.Input<string>;
        required: pulumi.Input<boolean>;
        type: pulumi.Input<string>;
        values?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface ApiSubscriptionKeyParameterNames {
        header: pulumi.Input<string>;
        query: pulumi.Input<string>;
    }

    export interface AuthorizationServerTokenBodyParameter {
        /**
         * The name of this Authorization Server. Changing this forces a new resource to be created.
         */
        name: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

    export interface BackendCredentials {
        authorization?: pulumi.Input<inputs.apimanagement.BackendCredentialsAuthorization>;
        certificates?: pulumi.Input<pulumi.Input<string>[]>;
        header?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        query?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    }

    export interface BackendCredentialsAuthorization {
        parameter?: pulumi.Input<string>;
        scheme?: pulumi.Input<string>;
    }

    export interface BackendProxy {
        password?: pulumi.Input<string>;
        /**
         * The URL of the backend host.
         */
        url: pulumi.Input<string>;
        username: pulumi.Input<string>;
    }

    export interface BackendServiceFabricCluster {
        clientCertificateThumbprint: pulumi.Input<string>;
        managementEndpoints: pulumi.Input<pulumi.Input<string>[]>;
        maxPartitionResolutionRetries: pulumi.Input<number>;
        serverCertificateThumbprints?: pulumi.Input<pulumi.Input<string>[]>;
        serverX509Names?: pulumi.Input<pulumi.Input<inputs.apimanagement.BackendServiceFabricClusterServerX509Name>[]>;
    }

    export interface BackendServiceFabricClusterServerX509Name {
        issuerCertificateThumbprint: pulumi.Input<string>;
        /**
         * The name of the API Management backend. Changing this forces a new resource to be created.
         */
        name: pulumi.Input<string>;
    }

    export interface BackendTls {
        validateCertificateChain?: pulumi.Input<boolean>;
        validateCertificateName?: pulumi.Input<boolean>;
    }

    export interface LoggerApplicationInsights {
        instrumentationKey: pulumi.Input<string>;
    }

    export interface LoggerEventhub {
        connectionString: pulumi.Input<string>;
        /**
         * The name of this Logger, which must be unique within the API Management Service. Changing this forces a new resource to be created.
         */
        name: pulumi.Input<string>;
    }

    export interface ServiceAdditionalLocation {
        /**
         * The URL of the Regional Gateway for the API Management Service in the specified region.
         */
        gatewayRegionalUrl?: pulumi.Input<string>;
        /**
         * The Azure location where the API Management Service exists. Changing this forces a new resource to be created.
         */
        location: pulumi.Input<string>;
        /**
         * Public Static Load Balanced IP addresses of the API Management service in the additional location. Available only for Basic, Standard and Premium SKU.
         */
        publicIpAddresses?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface ServiceCertificate {
        certificatePassword: pulumi.Input<string>;
        encodedCertificate: pulumi.Input<string>;
        storeName: pulumi.Input<string>;
    }

    export interface ServiceHostnameConfiguration {
        managements?: pulumi.Input<pulumi.Input<inputs.apimanagement.ServiceHostnameConfigurationManagement>[]>;
        portals?: pulumi.Input<pulumi.Input<inputs.apimanagement.ServiceHostnameConfigurationPortal>[]>;
        proxies?: pulumi.Input<pulumi.Input<inputs.apimanagement.ServiceHostnameConfigurationProxy>[]>;
        scms?: pulumi.Input<pulumi.Input<inputs.apimanagement.ServiceHostnameConfigurationScm>[]>;
    }

    export interface ServiceHostnameConfigurationManagement {
        /**
         * One or more (up to 10) `certificate` blocks as defined below.
         */
        certificate?: pulumi.Input<string>;
        certificatePassword?: pulumi.Input<string>;
        hostName: pulumi.Input<string>;
        keyVaultId?: pulumi.Input<string>;
        negotiateClientCertificate?: pulumi.Input<boolean>;
    }

    export interface ServiceHostnameConfigurationPortal {
        /**
         * One or more (up to 10) `certificate` blocks as defined below.
         */
        certificate?: pulumi.Input<string>;
        certificatePassword?: pulumi.Input<string>;
        hostName: pulumi.Input<string>;
        keyVaultId?: pulumi.Input<string>;
        negotiateClientCertificate?: pulumi.Input<boolean>;
    }

    export interface ServiceHostnameConfigurationProxy {
        /**
         * One or more (up to 10) `certificate` blocks as defined below.
         */
        certificate?: pulumi.Input<string>;
        certificatePassword?: pulumi.Input<string>;
        defaultSslBinding?: pulumi.Input<boolean>;
        hostName: pulumi.Input<string>;
        keyVaultId?: pulumi.Input<string>;
        negotiateClientCertificate?: pulumi.Input<boolean>;
    }

    export interface ServiceHostnameConfigurationScm {
        /**
         * One or more (up to 10) `certificate` blocks as defined below.
         */
        certificate?: pulumi.Input<string>;
        certificatePassword?: pulumi.Input<string>;
        hostName: pulumi.Input<string>;
        keyVaultId?: pulumi.Input<string>;
        negotiateClientCertificate?: pulumi.Input<boolean>;
    }

    export interface ServiceIdentity {
        /**
         * The Principal ID associated with this Managed Service Identity.
         */
        principalId?: pulumi.Input<string>;
        /**
         * The Tenant ID associated with this Managed Service Identity.
         */
        tenantId?: pulumi.Input<string>;
        type: pulumi.Input<string>;
    }

    export interface ServicePolicy {
        xmlContent?: pulumi.Input<string>;
        xmlLink?: pulumi.Input<string>;
    }

    export interface ServiceSecurity {
        disableBackendSsl30?: pulumi.Input<boolean>;
        disableBackendTls10?: pulumi.Input<boolean>;
        disableBackendTls11?: pulumi.Input<boolean>;
        disableFrontendSsl30?: pulumi.Input<boolean>;
        disableFrontendTls10?: pulumi.Input<boolean>;
        disableFrontendTls11?: pulumi.Input<boolean>;
        disableTripleDesChipers?: pulumi.Input<boolean>;
        disableTripleDesCiphers?: pulumi.Input<boolean>;
    }

    export interface ServiceSignIn {
        enabled: pulumi.Input<boolean>;
    }

    export interface ServiceSignUp {
        enabled: pulumi.Input<boolean>;
        termsOfService: pulumi.Input<inputs.apimanagement.ServiceSignUpTermsOfService>;
    }

    export interface ServiceSignUpTermsOfService {
        consentRequired: pulumi.Input<boolean>;
        enabled: pulumi.Input<boolean>;
        text?: pulumi.Input<string>;
    }

    export interface ServiceSku {
        capacity: pulumi.Input<number>;
        /**
         * The name of the API Management Service. Changing this forces a new resource to be created.
         */
        name: pulumi.Input<string>;
    }
}

export namespace appservice {
    export interface AppServiceAuthSettings {
        activeDirectory?: pulumi.Input<inputs.appservice.AppServiceAuthSettingsActiveDirectory>;
        additionalLoginParams?: pulumi.Input<{[key: string]: any}>;
        allowedExternalRedirectUrls?: pulumi.Input<pulumi.Input<string>[]>;
        defaultProvider?: pulumi.Input<string>;
        /**
         * Is the App Service Enabled?
         */
        enabled: pulumi.Input<boolean>;
        facebook?: pulumi.Input<inputs.appservice.AppServiceAuthSettingsFacebook>;
        google?: pulumi.Input<inputs.appservice.AppServiceAuthSettingsGoogle>;
        issuer?: pulumi.Input<string>;
        microsoft?: pulumi.Input<inputs.appservice.AppServiceAuthSettingsMicrosoft>;
        runtimeVersion?: pulumi.Input<string>;
        tokenRefreshExtensionHours?: pulumi.Input<number>;
        tokenStoreEnabled?: pulumi.Input<boolean>;
        twitter?: pulumi.Input<inputs.appservice.AppServiceAuthSettingsTwitter>;
        unauthenticatedClientAction?: pulumi.Input<string>;
    }

    export interface AppServiceAuthSettingsActiveDirectory {
        allowedAudiences?: pulumi.Input<pulumi.Input<string>[]>;
        clientId: pulumi.Input<string>;
        clientSecret?: pulumi.Input<string>;
    }

    export interface AppServiceAuthSettingsFacebook {
        appId: pulumi.Input<string>;
        appSecret: pulumi.Input<string>;
        oauthScopes?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface AppServiceAuthSettingsGoogle {
        clientId: pulumi.Input<string>;
        clientSecret: pulumi.Input<string>;
        oauthScopes?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface AppServiceAuthSettingsMicrosoft {
        clientId: pulumi.Input<string>;
        clientSecret: pulumi.Input<string>;
        oauthScopes?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface AppServiceAuthSettingsTwitter {
        consumerKey: pulumi.Input<string>;
        consumerSecret: pulumi.Input<string>;
    }

    export interface AppServiceBackup {
        /**
         * Is the App Service Enabled?
         */
        enabled?: pulumi.Input<boolean>;
        /**
         * Specifies the name of the App Service. Changing this forces a new resource to be created.
         */
        name: pulumi.Input<string>;
        schedule: pulumi.Input<inputs.appservice.AppServiceBackupSchedule>;
        storageAccountUrl: pulumi.Input<string>;
    }

    export interface AppServiceBackupSchedule {
        frequencyInterval: pulumi.Input<number>;
        frequencyUnit: pulumi.Input<string>;
        keepAtLeastOneBackup?: pulumi.Input<boolean>;
        retentionPeriodInDays?: pulumi.Input<number>;
        startTime?: pulumi.Input<string>;
    }

    export interface AppServiceConnectionString {
        /**
         * Specifies the name of the App Service. Changing this forces a new resource to be created.
         */
        name: pulumi.Input<string>;
        type: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

    export interface AppServiceIdentity {
        identityIds?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The Principal ID for the Service Principal associated with the Managed Service Identity of this App Service.
         */
        principalId?: pulumi.Input<string>;
        /**
         * The Tenant ID for the Service Principal associated with the Managed Service Identity of this App Service.
         */
        tenantId?: pulumi.Input<string>;
        type: pulumi.Input<string>;
    }

    export interface AppServiceLogs {
        applicationLogs?: pulumi.Input<inputs.appservice.AppServiceLogsApplicationLogs>;
        httpLogs?: pulumi.Input<inputs.appservice.AppServiceLogsHttpLogs>;
    }

    export interface AppServiceLogsApplicationLogs {
        azureBlobStorage?: pulumi.Input<inputs.appservice.AppServiceLogsApplicationLogsAzureBlobStorage>;
    }

    export interface AppServiceLogsApplicationLogsAzureBlobStorage {
        level: pulumi.Input<string>;
        retentionInDays: pulumi.Input<number>;
        sasUrl: pulumi.Input<string>;
    }

    export interface AppServiceLogsHttpLogs {
        fileSystem?: pulumi.Input<inputs.appservice.AppServiceLogsHttpLogsFileSystem>;
    }

    export interface AppServiceLogsHttpLogsFileSystem {
        retentionInDays: pulumi.Input<number>;
        retentionInMb: pulumi.Input<number>;
    }

    export interface AppServiceSiteConfig {
        alwaysOn?: pulumi.Input<boolean>;
        appCommandLine?: pulumi.Input<string>;
        cors?: pulumi.Input<inputs.appservice.AppServiceSiteConfigCors>;
        defaultDocuments?: pulumi.Input<pulumi.Input<string>[]>;
        dotnetFrameworkVersion?: pulumi.Input<string>;
        ftpsState?: pulumi.Input<string>;
        http2Enabled?: pulumi.Input<boolean>;
        ipRestrictions?: pulumi.Input<pulumi.Input<inputs.appservice.AppServiceSiteConfigIpRestriction>[]>;
        javaContainer?: pulumi.Input<string>;
        javaContainerVersion?: pulumi.Input<string>;
        javaVersion?: pulumi.Input<string>;
        linuxFxVersion?: pulumi.Input<string>;
        localMysqlEnabled?: pulumi.Input<boolean>;
        managedPipelineMode?: pulumi.Input<string>;
        minTlsVersion?: pulumi.Input<string>;
        phpVersion?: pulumi.Input<string>;
        pythonVersion?: pulumi.Input<string>;
        remoteDebuggingEnabled?: pulumi.Input<boolean>;
        remoteDebuggingVersion?: pulumi.Input<string>;
        scmType?: pulumi.Input<string>;
        use32BitWorkerProcess?: pulumi.Input<boolean>;
        virtualNetworkName?: pulumi.Input<string>;
        websocketsEnabled?: pulumi.Input<boolean>;
        windowsFxVersion?: pulumi.Input<string>;
    }

    export interface AppServiceSiteConfigCors {
        allowedOrigins: pulumi.Input<pulumi.Input<string>[]>;
        supportCredentials?: pulumi.Input<boolean>;
    }

    export interface AppServiceSiteConfigIpRestriction {
        ipAddress: pulumi.Input<string>;
        subnetMask?: pulumi.Input<string>;
    }

    export interface AppServiceSiteCredential {
        /**
         * The password associated with the username, which can be used to publish to this App Service.
         */
        password?: pulumi.Input<string>;
        /**
         * The username which can be used to publish to this App Service
         */
        username?: pulumi.Input<string>;
    }

    export interface AppServiceSourceControl {
        /**
         * Branch name of the Git repository for this App Service.
         */
        branch?: pulumi.Input<string>;
        /**
         * URL of the Git repository for this App Service.
         */
        repoUrl?: pulumi.Input<string>;
    }

    export interface AppServiceStorageAccount {
        accessKey: pulumi.Input<string>;
        accountName: pulumi.Input<string>;
        mountPath?: pulumi.Input<string>;
        /**
         * Specifies the name of the App Service. Changing this forces a new resource to be created.
         */
        name: pulumi.Input<string>;
        shareName: pulumi.Input<string>;
        type: pulumi.Input<string>;
    }

    export interface FunctionAppAuthSettings {
        activeDirectory?: pulumi.Input<inputs.appservice.FunctionAppAuthSettingsActiveDirectory>;
        additionalLoginParams?: pulumi.Input<{[key: string]: any}>;
        allowedExternalRedirectUrls?: pulumi.Input<pulumi.Input<string>[]>;
        defaultProvider?: pulumi.Input<string>;
        /**
         * Is the Function App enabled?
         */
        enabled: pulumi.Input<boolean>;
        facebook?: pulumi.Input<inputs.appservice.FunctionAppAuthSettingsFacebook>;
        google?: pulumi.Input<inputs.appservice.FunctionAppAuthSettingsGoogle>;
        issuer?: pulumi.Input<string>;
        microsoft?: pulumi.Input<inputs.appservice.FunctionAppAuthSettingsMicrosoft>;
        runtimeVersion?: pulumi.Input<string>;
        tokenRefreshExtensionHours?: pulumi.Input<number>;
        tokenStoreEnabled?: pulumi.Input<boolean>;
        twitter?: pulumi.Input<inputs.appservice.FunctionAppAuthSettingsTwitter>;
        unauthenticatedClientAction?: pulumi.Input<string>;
    }

    export interface FunctionAppAuthSettingsActiveDirectory {
        allowedAudiences?: pulumi.Input<pulumi.Input<string>[]>;
        clientId: pulumi.Input<string>;
        clientSecret?: pulumi.Input<string>;
    }

    export interface FunctionAppAuthSettingsFacebook {
        appId: pulumi.Input<string>;
        appSecret: pulumi.Input<string>;
        oauthScopes?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface FunctionAppAuthSettingsGoogle {
        clientId: pulumi.Input<string>;
        clientSecret: pulumi.Input<string>;
        oauthScopes?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface FunctionAppAuthSettingsMicrosoft {
        clientId: pulumi.Input<string>;
        clientSecret: pulumi.Input<string>;
        oauthScopes?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface FunctionAppAuthSettingsTwitter {
        consumerKey: pulumi.Input<string>;
        consumerSecret: pulumi.Input<string>;
    }

    export interface FunctionAppConnectionString {
        /**
         * The name of the Connection String.
         */
        name: pulumi.Input<string>;
        /**
         * The type of the Connection String. Possible values are `APIHub`, `Custom`, `DocDb`, `EventHub`, `MySQL`, `NotificationHub`, `PostgreSQL`, `RedisCache`, `ServiceBus`, `SQLAzure` and  `SQLServer`.
         */
        type: pulumi.Input<string>;
        /**
         * The value for the Connection String.
         */
        value: pulumi.Input<string>;
    }

    export interface FunctionAppIdentity {
        /**
         * The Principal ID for the Service Principal associated with the Managed Service Identity of this App Service.
         */
        principalId?: pulumi.Input<string>;
        /**
         * The Tenant ID for the Service Principal associated with the Managed Service Identity of this App Service.
         */
        tenantId?: pulumi.Input<string>;
        /**
         * The type of the Connection String. Possible values are `APIHub`, `Custom`, `DocDb`, `EventHub`, `MySQL`, `NotificationHub`, `PostgreSQL`, `RedisCache`, `ServiceBus`, `SQLAzure` and  `SQLServer`.
         */
        type: pulumi.Input<string>;
    }

    export interface FunctionAppSiteConfig {
        /**
         * Should the Function App be loaded at all times? Defaults to `false`.
         */
        alwaysOn?: pulumi.Input<boolean>;
        /**
         * A `cors` block as defined below.
         */
        cors?: pulumi.Input<inputs.appservice.FunctionAppSiteConfigCors>;
        /**
         * Linux App Framework and version for the AppService, e.g. `DOCKER|(golang:latest)`.
         */
        linuxFxVersion?: pulumi.Input<string>;
        /**
         * Should the Function App run in 32 bit mode, rather than 64 bit mode? Defaults to `true`.
         */
        use32BitWorkerProcess?: pulumi.Input<boolean>;
        /**
         * The name of the Virtual Network which this App Service should be attached to.
         */
        virtualNetworkName?: pulumi.Input<string>;
        /**
         * Should WebSockets be enabled?
         */
        websocketsEnabled?: pulumi.Input<boolean>;
    }

    export interface FunctionAppSiteConfigCors {
        allowedOrigins: pulumi.Input<pulumi.Input<string>[]>;
        supportCredentials?: pulumi.Input<boolean>;
    }

    export interface FunctionAppSiteCredential {
        /**
         * The password associated with the username, which can be used to publish to this App Service.
         */
        password?: pulumi.Input<string>;
        /**
         * The username which can be used to publish to this App Service
         */
        username?: pulumi.Input<string>;
    }

    export interface PlanProperties {
        /**
         * The ID of the App Service Environment where the App Service Plan should be located. Changing forces a new resource to be created.
         */
        appServiceEnvironmentId?: pulumi.Input<string>;
        /**
         * Can Apps assigned to this App Service Plan be scaled independently? If set to `false` apps assigned to this plan will scale to all instances of the plan.  Defaults to `false`.
         */
        perSiteScaling?: pulumi.Input<boolean>;
        /**
         * Is this App Service Plan `Reserved`. Defaults to `false`.
         */
        reserved?: pulumi.Input<boolean>;
    }

    export interface PlanSku {
        /**
         * Specifies the number of workers associated with this App Service Plan.
         */
        capacity?: pulumi.Input<number>;
        /**
         * Specifies the plan's instance size.
         */
        size: pulumi.Input<string>;
        /**
         * Specifies the plan's pricing tier.
         */
        tier: pulumi.Input<string>;
    }

    export interface SlotAuthSettings {
        activeDirectory?: pulumi.Input<inputs.appservice.SlotAuthSettingsActiveDirectory>;
        additionalLoginParams?: pulumi.Input<{[key: string]: any}>;
        allowedExternalRedirectUrls?: pulumi.Input<pulumi.Input<string>[]>;
        defaultProvider?: pulumi.Input<string>;
        /**
         * Is the App Service Slot Enabled?
         */
        enabled: pulumi.Input<boolean>;
        facebook?: pulumi.Input<inputs.appservice.SlotAuthSettingsFacebook>;
        google?: pulumi.Input<inputs.appservice.SlotAuthSettingsGoogle>;
        issuer?: pulumi.Input<string>;
        microsoft?: pulumi.Input<inputs.appservice.SlotAuthSettingsMicrosoft>;
        runtimeVersion?: pulumi.Input<string>;
        tokenRefreshExtensionHours?: pulumi.Input<number>;
        tokenStoreEnabled?: pulumi.Input<boolean>;
        twitter?: pulumi.Input<inputs.appservice.SlotAuthSettingsTwitter>;
        unauthenticatedClientAction?: pulumi.Input<string>;
    }

    export interface SlotAuthSettingsActiveDirectory {
        allowedAudiences?: pulumi.Input<pulumi.Input<string>[]>;
        clientId: pulumi.Input<string>;
        clientSecret?: pulumi.Input<string>;
    }

    export interface SlotAuthSettingsFacebook {
        appId: pulumi.Input<string>;
        appSecret: pulumi.Input<string>;
        oauthScopes?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface SlotAuthSettingsGoogle {
        clientId: pulumi.Input<string>;
        clientSecret: pulumi.Input<string>;
        oauthScopes?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface SlotAuthSettingsMicrosoft {
        clientId: pulumi.Input<string>;
        clientSecret: pulumi.Input<string>;
        oauthScopes?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface SlotAuthSettingsTwitter {
        consumerKey: pulumi.Input<string>;
        consumerSecret: pulumi.Input<string>;
    }

    export interface SlotConnectionString {
        /**
         * The name of the Connection String.
         */
        name: pulumi.Input<string>;
        /**
         * The type of the Connection String. Possible values are `APIHub`, `Custom`, `DocDb`, `EventHub`, `MySQL`, `NotificationHub`, `PostgreSQL`, `RedisCache`, `ServiceBus`, `SQLAzure` and  `SQLServer`.
         */
        type: pulumi.Input<string>;
        /**
         * The value for the Connection String.
         */
        value: pulumi.Input<string>;
    }

    export interface SlotIdentity {
        identityIds?: pulumi.Input<pulumi.Input<string>[]>;
        principalId?: pulumi.Input<string>;
        tenantId?: pulumi.Input<string>;
        /**
         * The type of the Connection String. Possible values are `APIHub`, `Custom`, `DocDb`, `EventHub`, `MySQL`, `NotificationHub`, `PostgreSQL`, `RedisCache`, `ServiceBus`, `SQLAzure` and  `SQLServer`.
         */
        type: pulumi.Input<string>;
    }

    export interface SlotSiteConfig {
        /**
         * Should the app be loaded at all times? Defaults to `false`.
         */
        alwaysOn?: pulumi.Input<boolean>;
        /**
         * App command line to launch, e.g. `/sbin/myserver -b 0.0.0.0`.
         */
        appCommandLine?: pulumi.Input<string>;
        /**
         * A `cors` block as defined below.
         */
        cors?: pulumi.Input<inputs.appservice.SlotSiteConfigCors>;
        /**
         * The ordering of default documents to load, if an address isn't specified.
         */
        defaultDocuments?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The version of the .net framework's CLR used in this App Service Slot. Possible values are `v2.0` (which will use the latest version of the .net framework for the .net CLR v2 - currently `.net 3.5`) and `v4.0` (which corresponds to the latest version of the .net CLR v4 - which at the time of writing is `.net 4.7.1`). [For more information on which .net CLR version to use based on the .net framework you're targeting - please see this table](https://en.wikipedia.org/wiki/.NET_Framework_version_history#Overview). Defaults to `v4.0`.
         */
        dotnetFrameworkVersion?: pulumi.Input<string>;
        ftpsState?: pulumi.Input<string>;
        /**
         * Is HTTP2 Enabled on this App Service? Defaults to `false`.
         */
        http2Enabled?: pulumi.Input<boolean>;
        /**
         * A [List of objects](https://www.terraform.io/docs/configuration/attr-as-blocks.html) representing ip restrictions as defined below.
         */
        ipRestrictions?: pulumi.Input<pulumi.Input<inputs.appservice.SlotSiteConfigIpRestriction>[]>;
        /**
         * The Java Container to use. If specified `javaVersion` and `javaContainerVersion` must also be specified. Possible values are `JETTY` and `TOMCAT`.
         */
        javaContainer?: pulumi.Input<string>;
        /**
         * The version of the Java Container to use. If specified `javaVersion` and `javaContainer` must also be specified.
         */
        javaContainerVersion?: pulumi.Input<string>;
        /**
         * The version of Java to use. If specified `javaContainer` and `javaContainerVersion` must also be specified. Possible values are `1.7`, `1.8` and `11`.
         */
        javaVersion?: pulumi.Input<string>;
        linuxFxVersion?: pulumi.Input<string>;
        /**
         * Is "MySQL In App" Enabled? This runs a local MySQL instance with your app and shares resources from the App Service plan.
         */
        localMysqlEnabled?: pulumi.Input<boolean>;
        /**
         * The Managed Pipeline Mode. Possible values are `Integrated` and `Classic`. Defaults to `Integrated`.
         */
        managedPipelineMode?: pulumi.Input<string>;
        /**
         * The minimum supported TLS version for the app service. Possible values are `1.0`, `1.1`, and `1.2`. Defaults to `1.2` for new app services.
         */
        minTlsVersion?: pulumi.Input<string>;
        /**
         * The version of PHP to use in this App Service Slot. Possible values are `5.5`, `5.6`, `7.0`, `7.1` and `7.2`.
         */
        phpVersion?: pulumi.Input<string>;
        /**
         * The version of Python to use in this App Service Slot. Possible values are `2.7` and `3.4`.
         */
        pythonVersion?: pulumi.Input<string>;
        /**
         * Is Remote Debugging Enabled? Defaults to `false`.
         */
        remoteDebuggingEnabled?: pulumi.Input<boolean>;
        /**
         * Which version of Visual Studio should the Remote Debugger be compatible with? Possible values are `VS2012`, `VS2013`, `VS2015` and `VS2017`.
         */
        remoteDebuggingVersion?: pulumi.Input<string>;
        /**
         * The type of Source Control enabled for this App Service Slot. Defaults to `None`. Possible values are: `BitbucketGit`, `BitbucketHg`, `CodePlexGit`, `CodePlexHg`, `Dropbox`, `ExternalGit`, `ExternalHg`, `GitHub`, `LocalGit`, `None`, `OneDrive`, `Tfs`, `VSO` and `VSTSRM`
         */
        scmType?: pulumi.Input<string>;
        /**
         * Should the App Service Slot run in 32 bit mode, rather than 64 bit mode?
         */
        use32BitWorkerProcess?: pulumi.Input<boolean>;
        /**
         * The name of the Virtual Network which this App Service Slot should be attached to.
         */
        virtualNetworkName?: pulumi.Input<string>;
        /**
         * Should WebSockets be enabled?
         */
        websocketsEnabled?: pulumi.Input<boolean>;
        windowsFxVersion?: pulumi.Input<string>;
    }

    export interface SlotSiteConfigCors {
        allowedOrigins: pulumi.Input<pulumi.Input<string>[]>;
        supportCredentials?: pulumi.Input<boolean>;
    }

    export interface SlotSiteConfigIpRestriction {
        ipAddress: pulumi.Input<string>;
        subnetMask?: pulumi.Input<string>;
    }

    export interface SlotSiteCredential {
        /**
         * The password associated with the username, which can be used to publish to this App Service.
         */
        password?: pulumi.Input<string>;
        /**
         * The username which can be used to publish to this App Service
         */
        username?: pulumi.Input<string>;
    }
}

export namespace authorization {
    export interface RoleDefinitionPermission {
        actions?: pulumi.Input<pulumi.Input<string>[]>;
        dataActions?: pulumi.Input<pulumi.Input<string>[]>;
        notActions?: pulumi.Input<pulumi.Input<string>[]>;
        notDataActions?: pulumi.Input<pulumi.Input<string>[]>;
    }
}

export namespace automation {
    export interface AccountSku {
        /**
         * Specifies the name of the Automation Account. Changing this forces a new resource to be created.
         */
        name?: pulumi.Input<string>;
    }

    export interface ModuleModuleLink {
        hash?: pulumi.Input<inputs.automation.ModuleModuleLinkHash>;
        /**
         * The uri of the module content (zip or nupkg).
         */
        uri: pulumi.Input<string>;
    }

    export interface ModuleModuleLinkHash {
        algorithm: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

    export interface RunBookPublishContentLink {
        hash?: pulumi.Input<inputs.automation.RunBookPublishContentLinkHash>;
        /**
         * The uri of the runbook content.
         */
        uri: pulumi.Input<string>;
        version?: pulumi.Input<string>;
    }

    export interface RunBookPublishContentLinkHash {
        algorithm: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

    export interface ScheduleMonthlyOccurrence {
        day: pulumi.Input<string>;
        occurrence: pulumi.Input<number>;
    }
}

export namespace autoscale {
    export interface SettingNotification {
        email?: pulumi.Input<inputs.autoscale.SettingNotificationEmail>;
        webhooks?: pulumi.Input<pulumi.Input<inputs.autoscale.SettingNotificationWebhook>[]>;
    }

    export interface SettingNotificationEmail {
        customEmails?: pulumi.Input<pulumi.Input<string>[]>;
        sendToSubscriptionAdministrator?: pulumi.Input<boolean>;
        sendToSubscriptionCoAdministrator?: pulumi.Input<boolean>;
    }

    export interface SettingNotificationWebhook {
        properties?: pulumi.Input<{[key: string]: any}>;
        serviceUri: pulumi.Input<string>;
    }

    export interface SettingProfile {
        capacity: pulumi.Input<inputs.autoscale.SettingProfileCapacity>;
        fixedDate?: pulumi.Input<inputs.autoscale.SettingProfileFixedDate>;
        /**
         * The name of the AutoScale Setting. Changing this forces a new resource to be created.
         */
        name: pulumi.Input<string>;
        recurrence?: pulumi.Input<inputs.autoscale.SettingProfileRecurrence>;
        rules?: pulumi.Input<pulumi.Input<inputs.autoscale.SettingProfileRule>[]>;
    }

    export interface SettingProfileCapacity {
        default: pulumi.Input<number>;
        maximum: pulumi.Input<number>;
        minimum: pulumi.Input<number>;
    }

    export interface SettingProfileFixedDate {
        end: pulumi.Input<string>;
        start: pulumi.Input<string>;
        timezone?: pulumi.Input<string>;
    }

    export interface SettingProfileRecurrence {
        days: pulumi.Input<pulumi.Input<string>[]>;
        hours: pulumi.Input<number>;
        minutes: pulumi.Input<number>;
        timezone?: pulumi.Input<string>;
    }

    export interface SettingProfileRule {
        metricTrigger: pulumi.Input<inputs.autoscale.SettingProfileRuleMetricTrigger>;
        scaleAction: pulumi.Input<inputs.autoscale.SettingProfileRuleScaleAction>;
    }

    export interface SettingProfileRuleMetricTrigger {
        metricName: pulumi.Input<string>;
        metricResourceId: pulumi.Input<string>;
        operator: pulumi.Input<string>;
        statistic: pulumi.Input<string>;
        threshold: pulumi.Input<number>;
        timeAggregation: pulumi.Input<string>;
        timeGrain: pulumi.Input<string>;
        timeWindow: pulumi.Input<string>;
    }

    export interface SettingProfileRuleScaleAction {
        cooldown: pulumi.Input<string>;
        direction: pulumi.Input<string>;
        type: pulumi.Input<string>;
        value: pulumi.Input<number>;
    }
}

export namespace batch {
    export interface AccountKeyVaultReference {
        /**
         * The Batch account ID.
         */
        id: pulumi.Input<string>;
        url: pulumi.Input<string>;
    }

    export interface GetPoolCertificate {
        /**
         * The fully qualified ID of the certificate installed on the pool.
         */
        id: string;
        /**
         * The location of the certificate store on the compute node into which the certificate is installed, either `CurrentUser` or `LocalMachine`.
         */
        storeLocation: string;
        /**
         * The name of the certificate store on the compute node into which the certificate is installed.
         */
        storeName?: string;
        /**
         * Which user accounts on the compute node have access to the private data of the certificate.
         */
        visibilities?: string[];
    }

    export interface GetPoolStartTask {
        /**
         * The command line executed by the start task.
         */
        commandLine: string;
        /**
         * A map of strings (key,value) that represents the environment variables to set in the start task.
         */
        environment?: {[key: string]: any};
        /**
         * The number of retry count.
         */
        maxTaskRetryCount?: number;
        /**
         * (Optional) One or more `resourceFile` blocks that describe the files to be downloaded to a compute node.
         */
        resourceFiles?: inputs.batch.GetPoolStartTaskResourceFile[];
        /**
         * A `userIdentity` block that describes the user identity under which the start task runs.
         */
        userIdentities?: inputs.batch.GetPoolStartTaskUserIdentity[];
        /**
         * A flag that indicates if the Batch pool should wait for the start task to be completed.
         */
        waitForSuccess?: boolean;
    }

    export interface GetPoolStartTaskResourceFile {
        /**
         * The storage container name in the auto storage account.
         */
        autoStorageContainerName?: string;
        /**
         * The blob prefix used when downloading blobs from an Azure Storage container.
         */
        blobPrefix?: string;
        /**
         * The file permission mode attribute represented as a string in octal format (e.g. `"0644"`).
         */
        fileMode?: string;
        /**
         * The location on the compute node to which to download the file, relative to the task's working directory. If the `httpUrl` property is specified, the `filePath` is required and describes the path which the file will be downloaded to, including the filename. Otherwise, if the `autoStorageContainerName` or `storageContainerUrl` property is specified.
         */
        filePath?: string;
        /**
         * The URL of the file to download. If the URL is Azure Blob Storage, it must be readable using anonymous access.
         */
        httpUrl?: string;
        /**
         * The URL of the blob container within Azure Blob Storage.
         */
        storageContainerUrl?: string;
    }

    export interface GetPoolStartTaskUserIdentity {
        /**
         * A `autoUser` block that describes the user identity under which the start task runs.
         */
        autoUsers?: inputs.batch.GetPoolStartTaskUserIdentityAutoUser[];
        /**
         * The user name to log into the registry server.
         */
        userName?: string;
    }

    export interface GetPoolStartTaskUserIdentityAutoUser {
        /**
         * The elevation level of the user identity under which the start task runs.
         */
        elevationLevel?: string;
        /**
         * The scope of the user identity under which the start task runs.
         */
        scope?: string;
    }

    export interface PoolAutoScale {
        evaluationInterval?: pulumi.Input<string>;
        formula: pulumi.Input<string>;
    }

    export interface PoolCertificate {
        /**
         * The Batch pool ID.
         */
        id: pulumi.Input<string>;
        storeLocation: pulumi.Input<string>;
        storeName?: pulumi.Input<string>;
        visibilities?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface PoolContainerConfiguration {
        containerRegistries?: pulumi.Input<pulumi.Input<inputs.batch.PoolContainerConfigurationContainerRegistry>[]>;
        type?: pulumi.Input<string>;
    }

    export interface PoolContainerConfigurationContainerRegistry {
        password: pulumi.Input<string>;
        registryServer: pulumi.Input<string>;
        userName: pulumi.Input<string>;
    }

    export interface PoolFixedScale {
        resizeTimeout?: pulumi.Input<string>;
        targetDedicatedNodes?: pulumi.Input<number>;
        targetLowPriorityNodes?: pulumi.Input<number>;
    }

    export interface PoolStartTask {
        commandLine: pulumi.Input<string>;
        environment?: pulumi.Input<{[key: string]: any}>;
        maxTaskRetryCount?: pulumi.Input<number>;
        resourceFiles?: pulumi.Input<pulumi.Input<inputs.batch.PoolStartTaskResourceFile>[]>;
        userIdentity: pulumi.Input<inputs.batch.PoolStartTaskUserIdentity>;
        waitForSuccess?: pulumi.Input<boolean>;
    }

    export interface PoolStartTaskResourceFile {
        autoStorageContainerName?: pulumi.Input<string>;
        blobPrefix?: pulumi.Input<string>;
        fileMode?: pulumi.Input<string>;
        filePath?: pulumi.Input<string>;
        httpUrl?: pulumi.Input<string>;
        storageContainerUrl?: pulumi.Input<string>;
    }

    export interface PoolStartTaskUserIdentity {
        autoUser?: pulumi.Input<inputs.batch.PoolStartTaskUserIdentityAutoUser>;
        userName?: pulumi.Input<string>;
    }

    export interface PoolStartTaskUserIdentityAutoUser {
        elevationLevel?: pulumi.Input<string>;
        scope?: pulumi.Input<string>;
    }

    export interface PoolStorageImageReference {
        /**
         * The Batch pool ID.
         */
        id?: pulumi.Input<string>;
        offer?: pulumi.Input<string>;
        publisher?: pulumi.Input<string>;
        sku?: pulumi.Input<string>;
        version?: pulumi.Input<string>;
    }
}

export namespace cdn {
    export interface EndpointGeoFilter {
        action: pulumi.Input<string>;
        countryCodes: pulumi.Input<pulumi.Input<string>[]>;
        relativePath: pulumi.Input<string>;
    }

    export interface EndpointOrigin {
        hostName: pulumi.Input<string>;
        httpPort?: pulumi.Input<number>;
        httpsPort?: pulumi.Input<number>;
        /**
         * Specifies the name of the CDN Endpoint. Changing this forces a new resource to be created.
         */
        name: pulumi.Input<string>;
    }
}

export namespace cognitive {
    export interface AccountSku {
        /**
         * Specifies the name of the Cognitive Service Account. Changing this forces a new resource to be created.
         */
        name: pulumi.Input<string>;
        tier: pulumi.Input<string>;
    }
}

export namespace compute {
    export interface ImageDataDisk {
        /**
         * Specifies the URI in Azure storage of the blob that you want to use to create the image.
         */
        blobUri?: pulumi.Input<string>;
        /**
         * Specifies the caching mode as `ReadWrite`, `ReadOnly`, or `None`. The default is `None`.
         */
        caching?: pulumi.Input<string>;
        /**
         * Specifies the logical unit number of the data disk.
         */
        lun?: pulumi.Input<number>;
        /**
         * Specifies the ID of the managed disk resource that you want to use to create the image.
         */
        managedDiskId?: pulumi.Input<string>;
        /**
         * Specifies the size of the image to be created. The target size can't be smaller than the source size.
         */
        sizeGb?: pulumi.Input<number>;
    }

    export interface ImageOsDisk {
        /**
         * Specifies the URI in Azure storage of the blob that you want to use to create the image.
         */
        blobUri?: pulumi.Input<string>;
        /**
         * Specifies the caching mode as `ReadWrite`, `ReadOnly`, or `None`. The default is `None`.
         */
        caching?: pulumi.Input<string>;
        /**
         * Specifies the ID of the managed disk resource that you want to use to create the image.
         */
        managedDiskId?: pulumi.Input<string>;
        /**
         * Specifies the state of the operating system contained in the blob. Currently, the only value is Generalized.
         */
        osState?: pulumi.Input<string>;
        /**
         * Specifies the type of operating system contained in the the virtual machine image. Possible values are: Windows or Linux.
         */
        osType?: pulumi.Input<string>;
        /**
         * Specifies the size of the image to be created. The target size can't be smaller than the source size.
         */
        sizeGb?: pulumi.Input<number>;
    }

    export interface ManagedDiskEncryptionSettings {
        /**
         * A `diskEncryptionKey` block as defined below.
         */
        diskEncryptionKey?: pulumi.Input<inputs.compute.ManagedDiskEncryptionSettingsDiskEncryptionKey>;
        /**
         * Is Encryption enabled on this Managed Disk? Changing this forces a new resource to be created.
         */
        enabled: pulumi.Input<boolean>;
        /**
         * A `keyEncryptionKey` block as defined below.
         */
        keyEncryptionKey?: pulumi.Input<inputs.compute.ManagedDiskEncryptionSettingsKeyEncryptionKey>;
    }

    export interface ManagedDiskEncryptionSettingsDiskEncryptionKey {
        /**
         * The URL to the Key Vault Secret used as the Disk Encryption Key. This can be found as `id` on the `azure.keyvault.Secret` resource.
         */
        secretUrl: pulumi.Input<string>;
        /**
         * The URL of the Key Vault. This can be found as `vaultUri` on the `azure.keyvault.KeyVault` resource.
         */
        sourceVaultId: pulumi.Input<string>;
    }

    export interface ManagedDiskEncryptionSettingsKeyEncryptionKey {
        /**
         * The URL to the Key Vault Key used as the Key Encryption Key. This can be found as `id` on the `azure.keyvault.Secret` resource.
         */
        keyUrl: pulumi.Input<string>;
        /**
         * The URL of the Key Vault. This can be found as `vaultUri` on the `azure.keyvault.KeyVault` resource.
         */
        sourceVaultId: pulumi.Input<string>;
    }

    export interface ScaleSetBootDiagnostics {
        enabled?: pulumi.Input<boolean>;
        storageUri: pulumi.Input<string>;
    }

    export interface ScaleSetExtension {
        /**
         * Specifies whether or not to use the latest minor version available.
         */
        autoUpgradeMinorVersion?: pulumi.Input<boolean>;
        /**
         * Specifies the name of the image from the marketplace.
         */
        name: pulumi.Input<string>;
        /**
         * The protectedSettings passed to the extension, like settings, these are specified as a JSON object in a string.
         */
        protectedSettings?: pulumi.Input<string>;
        /**
         * Specifies a dependency array of extensions required to be executed before, the array stores the name of each extension.
         */
        provisionAfterExtensions?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Specifies the publisher of the image.
         */
        publisher: pulumi.Input<string>;
        /**
         * The settings passed to the extension, these are specified as a JSON object in a string.
         */
        settings?: pulumi.Input<string>;
        /**
         * The type of extension, available types for a publisher can be found using the Azure CLI.
         */
        type: pulumi.Input<string>;
        /**
         * Specifies the version of the extension to use, available versions can be found using the Azure CLI.
         */
        typeHandlerVersion: pulumi.Input<string>;
    }

    export interface ScaleSetIdentity {
        /**
         * Specifies a list of user managed identity ids to be assigned to the VMSS. Required if `type` is `UserAssigned`.
         */
        identityIds?: pulumi.Input<pulumi.Input<string>[]>;
        principalId?: pulumi.Input<string>;
        /**
         * The type of extension, available types for a publisher can be found using the Azure CLI.
         */
        type: pulumi.Input<string>;
    }

    export interface ScaleSetNetworkProfile {
        /**
         * Specifies whether to enable accelerated networking or not. Defaults to `false`.
         */
        acceleratedNetworking?: pulumi.Input<boolean>;
        /**
         * A dnsSettings block as documented below.
         */
        dnsSettings?: pulumi.Input<inputs.compute.ScaleSetNetworkProfileDnsSettings>;
        /**
         * An ipConfiguration block as documented below.
         */
        ipConfigurations: pulumi.Input<pulumi.Input<inputs.compute.ScaleSetNetworkProfileIpConfiguration>[]>;
        /**
         * Whether IP forwarding is enabled on this NIC. Defaults to `false`.
         */
        ipForwarding?: pulumi.Input<boolean>;
        /**
         * Specifies the name of the image from the marketplace.
         */
        name: pulumi.Input<string>;
        /**
         * Specifies the identifier for the network security group.
         */
        networkSecurityGroupId?: pulumi.Input<string>;
        /**
         * Specifies if this ipConfiguration is the primary one.
         */
        primary: pulumi.Input<boolean>;
    }

    export interface ScaleSetNetworkProfileDnsSettings {
        /**
         * Specifies an array of dns servers.
         */
        dnsServers: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface ScaleSetNetworkProfileIpConfiguration {
        /**
         * Specifies an array of references to backend address pools of application gateways. A scale set can reference backend address pools of one application gateway. Multiple scale sets cannot use the same application gateway.
         */
        applicationGatewayBackendAddressPoolIds?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Specifies up to `20` application security group IDs.
         */
        applicationSecurityGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Specifies an array of references to backend address pools of load balancers. A scale set can reference backend address pools of one public and one internal load balancer. Multiple scale sets cannot use the same load balancer.
         */
        loadBalancerBackendAddressPoolIds?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Specifies an array of references to inbound NAT rules for load balancers.
         */
        loadBalancerInboundNatRulesIds?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Specifies the name of the image from the marketplace.
         */
        name: pulumi.Input<string>;
        /**
         * Specifies if this ipConfiguration is the primary one.
         */
        primary: pulumi.Input<boolean>;
        /**
         * Describes a virtual machines scale set IP Configuration's PublicIPAddress configuration. The publicIpAddressConfiguration is documented below.
         */
        publicIpAddressConfiguration?: pulumi.Input<inputs.compute.ScaleSetNetworkProfileIpConfigurationPublicIpAddressConfiguration>;
        /**
         * Specifies the identifier of the subnet.
         */
        subnetId: pulumi.Input<string>;
    }

    export interface ScaleSetNetworkProfileIpConfigurationPublicIpAddressConfiguration {
        /**
         * The domain name label for the dns settings.
         */
        domainNameLabel: pulumi.Input<string>;
        /**
         * The idle timeout in minutes. This value must be between 4 and 30.
         */
        idleTimeout: pulumi.Input<number>;
        /**
         * Specifies the name of the image from the marketplace.
         */
        name: pulumi.Input<string>;
    }

    export interface ScaleSetOsProfile {
        /**
         * Specifies the administrator password to use for all the instances of virtual machines in a scale set.
         */
        adminPassword?: pulumi.Input<string>;
        /**
         * Specifies the administrator account name to use for all the instances of virtual machines in the scale set.
         */
        adminUsername: pulumi.Input<string>;
        /**
         * Specifies the computer name prefix for all of the virtual machines in the scale set. Computer name prefixes must be 1 to 9 characters long for windows images and 1 - 58 for linux. Changing this forces a new resource to be created.
         */
        computerNamePrefix: pulumi.Input<string>;
        /**
         * Specifies custom data to supply to the machine. On linux-based systems, this can be used as a cloud-init script. On other systems, this will be copied as a file on disk. Internally, this provider will base64 encode this value before sending it to the API. The maximum length of the binary array is 65535 bytes.
         */
        customData?: pulumi.Input<string>;
    }

    export interface ScaleSetOsProfileLinuxConfig {
        /**
         * Specifies whether password authentication should be disabled. Defaults to `false`. Changing this forces a new resource to be created.
         */
        disablePasswordAuthentication?: pulumi.Input<boolean>;
        /**
         * Specifies a collection of `path` and `keyData` to be placed on the virtual machine.
         */
        sshKeys?: pulumi.Input<pulumi.Input<inputs.compute.ScaleSetOsProfileLinuxConfigSshKey>[]>;
    }

    export interface ScaleSetOsProfileLinuxConfigSshKey {
        keyData?: pulumi.Input<string>;
        path: pulumi.Input<string>;
    }

    export interface ScaleSetOsProfileSecret {
        /**
         * Specifies the key vault to use.
         */
        sourceVaultId: pulumi.Input<string>;
        /**
         * A collection of Vault Certificates as documented below
         */
        vaultCertificates?: pulumi.Input<pulumi.Input<inputs.compute.ScaleSetOsProfileSecretVaultCertificate>[]>;
    }

    export interface ScaleSetOsProfileSecretVaultCertificate {
        /**
         * Specifies the certificate store on the Virtual Machine where the certificate should be added to.
         */
        certificateStore?: pulumi.Input<string>;
        /**
         * Specifies URL of the certificate with which new Virtual Machines is provisioned.
         */
        certificateUrl: pulumi.Input<string>;
    }

    export interface ScaleSetOsProfileWindowsConfig {
        /**
         * An Additional Unattended Config block as documented below.
         */
        additionalUnattendConfigs?: pulumi.Input<pulumi.Input<inputs.compute.ScaleSetOsProfileWindowsConfigAdditionalUnattendConfig>[]>;
        /**
         * Indicates whether virtual machines in the scale set are enabled for automatic updates.
         */
        enableAutomaticUpgrades?: pulumi.Input<boolean>;
        /**
         * Indicates whether virtual machine agent should be provisioned on the virtual machines in the scale set.
         */
        provisionVmAgent?: pulumi.Input<boolean>;
        /**
         * A collection of WinRM configuration blocks as documented below.
         */
        winrms?: pulumi.Input<pulumi.Input<inputs.compute.ScaleSetOsProfileWindowsConfigWinrm>[]>;
    }

    export interface ScaleSetOsProfileWindowsConfigAdditionalUnattendConfig {
        /**
         * Specifies the name of the component to configure with the added content. The only allowable value is `Microsoft-Windows-Shell-Setup`.
         */
        component: pulumi.Input<string>;
        /**
         * Specifies the base-64 encoded XML formatted content that is added to the unattend.xml file for the specified path and component.
         */
        content: pulumi.Input<string>;
        /**
         * Specifies the name of the pass that the content applies to. The only allowable value is `oobeSystem`.
         */
        pass: pulumi.Input<string>;
        /**
         * Specifies the name of the setting to which the content applies. Possible values are: `FirstLogonCommands` and `AutoLogon`.
         */
        settingName: pulumi.Input<string>;
    }

    export interface ScaleSetOsProfileWindowsConfigWinrm {
        /**
         * Specifies URL of the certificate with which new Virtual Machines is provisioned.
         */
        certificateUrl?: pulumi.Input<string>;
        /**
         * Specifies the protocol of listener
         */
        protocol: pulumi.Input<string>;
    }

    export interface ScaleSetPlan {
        /**
         * Specifies the name of the image from the marketplace.
         */
        name: pulumi.Input<string>;
        /**
         * Specifies the product of the image from the marketplace.
         */
        product: pulumi.Input<string>;
        /**
         * Specifies the publisher of the image.
         */
        publisher: pulumi.Input<string>;
    }

    export interface ScaleSetRollingUpgradePolicy {
        /**
         * The maximum percent of total virtual machine instances that will be upgraded simultaneously by the rolling upgrade in one batch. As this is a maximum, unhealthy instances in previous or future batches can cause the percentage of instances in a batch to decrease to ensure higher reliability. Defaults to `20`.
         */
        maxBatchInstancePercent?: pulumi.Input<number>;
        /**
         * The maximum percentage of the total virtual machine instances in the scale set that can be simultaneously unhealthy, either as a result of being upgraded, or by being found in an unhealthy state by the virtual machine health checks before the rolling upgrade aborts. This constraint will be checked prior to starting any batch. Defaults to `20`.
         */
        maxUnhealthyInstancePercent?: pulumi.Input<number>;
        /**
         * The maximum percentage of upgraded virtual machine instances that can be found to be in an unhealthy state. This check will happen after each batch is upgraded. If this percentage is ever exceeded, the rolling update aborts. Defaults to `20`.
         */
        maxUnhealthyUpgradedInstancePercent?: pulumi.Input<number>;
        /**
         * The wait time between completing the update for all virtual machines in one batch and starting the next batch. The time duration should be specified in ISO 8601 format for duration (https://en.wikipedia.org/wiki/ISO_8601#Durations). Defaults to `0` seconds represented as `PT0S`.
         */
        pauseTimeBetweenBatches?: pulumi.Input<string>;
    }

    export interface ScaleSetSku {
        /**
         * Specifies the number of virtual machines in the scale set.
         */
        capacity: pulumi.Input<number>;
        /**
         * Specifies the name of the image from the marketplace.
         */
        name: pulumi.Input<string>;
        /**
         * Specifies the tier of virtual machines in a scale set. Possible values, `standard` or `basic`.
         */
        tier?: pulumi.Input<string>;
    }

    export interface ScaleSetStorageProfileDataDisk {
        /**
         * Specifies the caching requirements. Possible values include: `None` (default), `ReadOnly`, `ReadWrite`.
         */
        caching?: pulumi.Input<string>;
        /**
         * Specifies how the data disk should be created. The only possible options are `FromImage` and `Empty`.
         */
        createOption: pulumi.Input<string>;
        /**
         * Specifies the size of the disk in GB. This element is required when creating an empty disk.
         */
        diskSizeGb?: pulumi.Input<number>;
        /**
         * Specifies the Logical Unit Number of the disk in each virtual machine in the scale set.
         */
        lun: pulumi.Input<number>;
        /**
         * Specifies the type of managed disk to create. Value must be either `Standard_LRS`, `StandardSSD_LRS` or `Premium_LRS`.
         */
        managedDiskType?: pulumi.Input<string>;
    }

    export interface ScaleSetStorageProfileImageReference {
        /**
         * Specifies the ID of the (custom) image to use to create the virtual
         * machine scale set, as in the example below.
         */
        id?: pulumi.Input<string>;
        /**
         * Specifies the offer of the image used to create the virtual machines.
         */
        offer?: pulumi.Input<string>;
        /**
         * Specifies the publisher of the image.
         */
        publisher?: pulumi.Input<string>;
        /**
         * Specifies the SKU of the image used to create the virtual machines.
         */
        sku?: pulumi.Input<string>;
        /**
         * Specifies the version of the image used to create the virtual machines.
         */
        version?: pulumi.Input<string>;
    }

    export interface ScaleSetStorageProfileOsDisk {
        /**
         * Specifies the caching requirements. Possible values include: `None` (default), `ReadOnly`, `ReadWrite`.
         */
        caching?: pulumi.Input<string>;
        /**
         * Specifies how the data disk should be created. The only possible options are `FromImage` and `Empty`.
         */
        createOption: pulumi.Input<string>;
        /**
         * Specifies the blob uri for user image. A virtual machine scale set creates an os disk in the same container as the user image.
         * Updating the osDisk image causes the existing disk to be deleted and a new one created with the new image. If the VM scale set is in Manual upgrade mode then the virtual machines are not updated until they have manualUpgrade applied to them.
         * When setting this field `osType` needs to be specified. Cannot be used when `vhdContainers`, `managedDiskType` or `storageProfileImageReference` are specified.
         */
        image?: pulumi.Input<string>;
        /**
         * Specifies the type of managed disk to create. Value must be either `Standard_LRS`, `StandardSSD_LRS` or `Premium_LRS`.
         */
        managedDiskType?: pulumi.Input<string>;
        /**
         * Specifies the name of the image from the marketplace.
         */
        name?: pulumi.Input<string>;
        /**
         * Specifies the operating system Type, valid values are windows, linux.
         */
        osType?: pulumi.Input<string>;
        /**
         * Specifies the vhd uri. Cannot be used when `image` or `managedDiskType` is specified.
         */
        vhdContainers?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface SharedImageIdentifier {
        offer: pulumi.Input<string>;
        publisher: pulumi.Input<string>;
        sku: pulumi.Input<string>;
    }

    export interface SharedImageVersionTargetRegion {
        /**
         * The version number for this Image Version, such as `1.0.0`. Changing this forces a new resource to be created.
         */
        name: pulumi.Input<string>;
        regionalReplicaCount: pulumi.Input<number>;
    }

    export interface SnapshotEncryptionSettings {
        diskEncryptionKey?: pulumi.Input<inputs.compute.SnapshotEncryptionSettingsDiskEncryptionKey>;
        enabled: pulumi.Input<boolean>;
        keyEncryptionKey?: pulumi.Input<inputs.compute.SnapshotEncryptionSettingsKeyEncryptionKey>;
    }

    export interface SnapshotEncryptionSettingsDiskEncryptionKey {
        secretUrl: pulumi.Input<string>;
        sourceVaultId: pulumi.Input<string>;
    }

    export interface SnapshotEncryptionSettingsKeyEncryptionKey {
        keyUrl: pulumi.Input<string>;
        sourceVaultId: pulumi.Input<string>;
    }

    export interface VirtualMachineBootDiagnostics {
        enabled: pulumi.Input<boolean>;
        storageUri: pulumi.Input<string>;
    }

    export interface VirtualMachineIdentity {
        identityIds?: pulumi.Input<pulumi.Input<string>[]>;
        principalId?: pulumi.Input<string>;
        type: pulumi.Input<string>;
    }

    export interface VirtualMachineOsProfile {
        adminPassword?: pulumi.Input<string>;
        adminUsername: pulumi.Input<string>;
        computerName: pulumi.Input<string>;
        customData?: pulumi.Input<string>;
    }

    export interface VirtualMachineOsProfileLinuxConfig {
        disablePasswordAuthentication: pulumi.Input<boolean>;
        sshKeys?: pulumi.Input<pulumi.Input<inputs.compute.VirtualMachineOsProfileLinuxConfigSshKey>[]>;
    }

    export interface VirtualMachineOsProfileLinuxConfigSshKey {
        keyData: pulumi.Input<string>;
        path: pulumi.Input<string>;
    }

    export interface VirtualMachineOsProfileSecret {
        sourceVaultId: pulumi.Input<string>;
        vaultCertificates?: pulumi.Input<pulumi.Input<inputs.compute.VirtualMachineOsProfileSecretVaultCertificate>[]>;
    }

    export interface VirtualMachineOsProfileSecretVaultCertificate {
        certificateStore?: pulumi.Input<string>;
        certificateUrl: pulumi.Input<string>;
    }

    export interface VirtualMachineOsProfileWindowsConfig {
        additionalUnattendConfigs?: pulumi.Input<pulumi.Input<inputs.compute.VirtualMachineOsProfileWindowsConfigAdditionalUnattendConfig>[]>;
        enableAutomaticUpgrades?: pulumi.Input<boolean>;
        provisionVmAgent?: pulumi.Input<boolean>;
        timezone?: pulumi.Input<string>;
        winrms?: pulumi.Input<pulumi.Input<inputs.compute.VirtualMachineOsProfileWindowsConfigWinrm>[]>;
    }

    export interface VirtualMachineOsProfileWindowsConfigAdditionalUnattendConfig {
        component: pulumi.Input<string>;
        content: pulumi.Input<string>;
        pass: pulumi.Input<string>;
        settingName: pulumi.Input<string>;
    }

    export interface VirtualMachineOsProfileWindowsConfigWinrm {
        certificateUrl?: pulumi.Input<string>;
        protocol: pulumi.Input<string>;
    }

    export interface VirtualMachinePlan {
        /**
         * Specifies the name of the Virtual Machine. Changing this forces a new resource to be created.
         */
        name: pulumi.Input<string>;
        product: pulumi.Input<string>;
        publisher: pulumi.Input<string>;
    }

    export interface VirtualMachineStorageDataDisk {
        caching?: pulumi.Input<string>;
        createOption: pulumi.Input<string>;
        diskSizeGb?: pulumi.Input<number>;
        lun: pulumi.Input<number>;
        managedDiskId?: pulumi.Input<string>;
        managedDiskType?: pulumi.Input<string>;
        /**
         * Specifies the name of the Virtual Machine. Changing this forces a new resource to be created.
         */
        name: pulumi.Input<string>;
        vhdUri?: pulumi.Input<string>;
        writeAcceleratorEnabled?: pulumi.Input<boolean>;
    }

    export interface VirtualMachineStorageImageReference {
        /**
         * The ID of the Virtual Machine.
         */
        id?: pulumi.Input<string>;
        offer?: pulumi.Input<string>;
        publisher?: pulumi.Input<string>;
        sku?: pulumi.Input<string>;
        version?: pulumi.Input<string>;
    }

    export interface VirtualMachineStorageOsDisk {
        caching?: pulumi.Input<string>;
        createOption: pulumi.Input<string>;
        diskSizeGb?: pulumi.Input<number>;
        imageUri?: pulumi.Input<string>;
        managedDiskId?: pulumi.Input<string>;
        managedDiskType?: pulumi.Input<string>;
        /**
         * Specifies the name of the Virtual Machine. Changing this forces a new resource to be created.
         */
        name: pulumi.Input<string>;
        osType?: pulumi.Input<string>;
        vhdUri?: pulumi.Input<string>;
        writeAcceleratorEnabled?: pulumi.Input<boolean>;
    }
}

export namespace containerservice {
    export interface GroupContainer {
        command?: pulumi.Input<string>;
        commands?: pulumi.Input<pulumi.Input<string>[]>;
        cpu: pulumi.Input<number>;
        environmentVariables?: pulumi.Input<{[key: string]: any}>;
        gpu?: pulumi.Input<inputs.containerservice.GroupContainerGpu>;
        image: pulumi.Input<string>;
        livenessProbe?: pulumi.Input<inputs.containerservice.GroupContainerLivenessProbe>;
        memory: pulumi.Input<number>;
        /**
         * Specifies the name of the Container Group. Changing this forces a new resource to be created.
         */
        name: pulumi.Input<string>;
        port?: pulumi.Input<number>;
        ports?: pulumi.Input<pulumi.Input<inputs.containerservice.GroupContainerPort>[]>;
        protocol?: pulumi.Input<string>;
        readinessProbe?: pulumi.Input<inputs.containerservice.GroupContainerReadinessProbe>;
        secureEnvironmentVariables?: pulumi.Input<{[key: string]: any}>;
        volumes?: pulumi.Input<pulumi.Input<inputs.containerservice.GroupContainerVolume>[]>;
    }

    export interface GroupContainerGpu {
        count?: pulumi.Input<number>;
        sku?: pulumi.Input<string>;
    }

    export interface GroupContainerLivenessProbe {
        execs?: pulumi.Input<pulumi.Input<string>[]>;
        failureThreshold?: pulumi.Input<number>;
        httpGets?: pulumi.Input<pulumi.Input<inputs.containerservice.GroupContainerLivenessProbeHttpGet>[]>;
        initialDelaySeconds?: pulumi.Input<number>;
        periodSeconds?: pulumi.Input<number>;
        successThreshold?: pulumi.Input<number>;
        timeoutSeconds?: pulumi.Input<number>;
    }

    export interface GroupContainerLivenessProbeHttpGet {
        path?: pulumi.Input<string>;
        port?: pulumi.Input<number>;
        scheme?: pulumi.Input<string>;
    }

    export interface GroupContainerPort {
        port?: pulumi.Input<number>;
        protocol?: pulumi.Input<string>;
    }

    export interface GroupContainerReadinessProbe {
        execs?: pulumi.Input<pulumi.Input<string>[]>;
        failureThreshold?: pulumi.Input<number>;
        httpGets?: pulumi.Input<pulumi.Input<inputs.containerservice.GroupContainerReadinessProbeHttpGet>[]>;
        initialDelaySeconds?: pulumi.Input<number>;
        periodSeconds?: pulumi.Input<number>;
        successThreshold?: pulumi.Input<number>;
        timeoutSeconds?: pulumi.Input<number>;
    }

    export interface GroupContainerReadinessProbeHttpGet {
        path?: pulumi.Input<string>;
        port?: pulumi.Input<number>;
        scheme?: pulumi.Input<string>;
    }

    export interface GroupContainerVolume {
        mountPath: pulumi.Input<string>;
        /**
         * Specifies the name of the Container Group. Changing this forces a new resource to be created.
         */
        name: pulumi.Input<string>;
        readOnly?: pulumi.Input<boolean>;
        shareName: pulumi.Input<string>;
        storageAccountKey: pulumi.Input<string>;
        storageAccountName: pulumi.Input<string>;
    }

    export interface GroupDiagnostics {
        logAnalytics: pulumi.Input<inputs.containerservice.GroupDiagnosticsLogAnalytics>;
    }

    export interface GroupDiagnosticsLogAnalytics {
        logType?: pulumi.Input<string>;
        metadata?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        workspaceId: pulumi.Input<string>;
        workspaceKey: pulumi.Input<string>;
    }

    export interface GroupIdentity {
        identityIds?: pulumi.Input<pulumi.Input<string>[]>;
        principalId?: pulumi.Input<string>;
        type: pulumi.Input<string>;
    }

    export interface GroupImageRegistryCredential {
        password: pulumi.Input<string>;
        server: pulumi.Input<string>;
        username: pulumi.Input<string>;
    }

    export interface KubernetesClusterAddonProfile {
        aciConnectorLinux?: pulumi.Input<inputs.containerservice.KubernetesClusterAddonProfileAciConnectorLinux>;
        /**
         * A `httpApplicationRouting` block as defined below.
         */
        httpApplicationRouting?: pulumi.Input<inputs.containerservice.KubernetesClusterAddonProfileHttpApplicationRouting>;
        omsAgent?: pulumi.Input<inputs.containerservice.KubernetesClusterAddonProfileOmsAgent>;
    }

    export interface KubernetesClusterAddonProfileAciConnectorLinux {
        enabled: pulumi.Input<boolean>;
        subnetName: pulumi.Input<string>;
    }

    export interface KubernetesClusterAddonProfileHttpApplicationRouting {
        enabled: pulumi.Input<boolean>;
        /**
         * The Zone Name of the HTTP Application Routing.
         */
        httpApplicationRoutingZoneName?: pulumi.Input<string>;
    }

    export interface KubernetesClusterAddonProfileOmsAgent {
        enabled: pulumi.Input<boolean>;
        logAnalyticsWorkspaceId: pulumi.Input<string>;
    }

    export interface KubernetesClusterAgentPoolProfile {
        availabilityZones?: pulumi.Input<pulumi.Input<string>[]>;
        count?: pulumi.Input<number>;
        /**
         * DNS prefix specified when creating the managed cluster. Changing this forces a new resource to be created.
         */
        dnsPrefix?: pulumi.Input<string>;
        enableAutoScaling?: pulumi.Input<boolean>;
        /**
         * The FQDN of the Azure Kubernetes Managed Cluster.
         */
        fqdn?: pulumi.Input<string>;
        maxCount?: pulumi.Input<number>;
        maxPods?: pulumi.Input<number>;
        minCount?: pulumi.Input<number>;
        /**
         * The name of the Managed Kubernetes Cluster to create. Changing this forces a new resource to be created.
         */
        name: pulumi.Input<string>;
        nodeTaints?: pulumi.Input<pulumi.Input<string>[]>;
        osDiskSizeGb?: pulumi.Input<number>;
        osType?: pulumi.Input<string>;
        type?: pulumi.Input<string>;
        vmSize: pulumi.Input<string>;
        vnetSubnetId?: pulumi.Input<string>;
    }

    export interface KubernetesClusterKubeAdminConfig {
        /**
         * Base64 encoded public certificate used by clients to authenticate to the Kubernetes cluster.
         */
        clientCertificate?: pulumi.Input<string>;
        /**
         * Base64 encoded private key used by clients to authenticate to the Kubernetes cluster.
         */
        clientKey?: pulumi.Input<string>;
        /**
         * Base64 encoded public CA certificate used as the root of trust for the Kubernetes cluster.
         */
        clusterCaCertificate?: pulumi.Input<string>;
        /**
         * The Kubernetes cluster server host.
         */
        host?: pulumi.Input<string>;
        /**
         * A password or token used to authenticate to the Kubernetes cluster.
         */
        password?: pulumi.Input<string>;
        /**
         * A username used to authenticate to the Kubernetes cluster.
         */
        username?: pulumi.Input<string>;
    }

    export interface KubernetesClusterKubeConfig {
        /**
         * Base64 encoded public certificate used by clients to authenticate to the Kubernetes cluster.
         */
        clientCertificate?: pulumi.Input<string>;
        /**
         * Base64 encoded private key used by clients to authenticate to the Kubernetes cluster.
         */
        clientKey?: pulumi.Input<string>;
        /**
         * Base64 encoded public CA certificate used as the root of trust for the Kubernetes cluster.
         */
        clusterCaCertificate?: pulumi.Input<string>;
        /**
         * The Kubernetes cluster server host.
         */
        host?: pulumi.Input<string>;
        /**
         * A password or token used to authenticate to the Kubernetes cluster.
         */
        password?: pulumi.Input<string>;
        /**
         * A username used to authenticate to the Kubernetes cluster.
         */
        username?: pulumi.Input<string>;
    }

    export interface KubernetesClusterLinuxProfile {
        adminUsername: pulumi.Input<string>;
        sshKey: pulumi.Input<inputs.containerservice.KubernetesClusterLinuxProfileSshKey>;
    }

    export interface KubernetesClusterLinuxProfileSshKey {
        keyData: pulumi.Input<string>;
    }

    export interface KubernetesClusterNetworkProfile {
        dnsServiceIp?: pulumi.Input<string>;
        dockerBridgeCidr?: pulumi.Input<string>;
        loadBalancerSku?: pulumi.Input<string>;
        networkPlugin: pulumi.Input<string>;
        networkPolicy?: pulumi.Input<string>;
        podCidr?: pulumi.Input<string>;
        serviceCidr?: pulumi.Input<string>;
    }

    export interface KubernetesClusterRoleBasedAccessControl {
        azureActiveDirectory?: pulumi.Input<inputs.containerservice.KubernetesClusterRoleBasedAccessControlAzureActiveDirectory>;
        enabled: pulumi.Input<boolean>;
    }

    export interface KubernetesClusterRoleBasedAccessControlAzureActiveDirectory {
        clientAppId: pulumi.Input<string>;
        serverAppId: pulumi.Input<string>;
        serverAppSecret: pulumi.Input<string>;
        tenantId?: pulumi.Input<string>;
    }

    export interface KubernetesClusterServicePrincipal {
        clientId: pulumi.Input<string>;
        clientSecret: pulumi.Input<string>;
    }

    export interface KubernetesClusterWindowsProfile {
        adminPassword?: pulumi.Input<string>;
        adminUsername: pulumi.Input<string>;
    }

    export interface RegistryNetworkRuleSet {
        /**
         * The behaviour for requests matching no rules. Either `Allow` or `Deny`. Defaults to `Allow`
         */
        defaultAction?: pulumi.Input<string>;
        /**
         * One or more `ipRule` blocks as defined below.
         */
        ipRules?: pulumi.Input<pulumi.Input<inputs.containerservice.RegistryNetworkRuleSetIpRule>[]>;
    }

    export interface RegistryNetworkRuleSetIpRule {
        /**
         * The behaviour for requests matching this rule. At this time the only supported value is `Allow`
         */
        action: pulumi.Input<string>;
        /**
         * The CIDR block from which requests will match the rule.
         */
        ipRange: pulumi.Input<string>;
    }

    export interface RegistryStorageAccount {
        accessKey: pulumi.Input<string>;
        /**
         * Specifies the name of the Container Registry. Changing this forces a new resource to be created.
         */
        name: pulumi.Input<string>;
    }

    export interface ServiceAgentPoolProfile {
        /**
         * Number of agents (VMs) to host docker containers. Allowed values must be in the range of 1 to 100 (inclusive). The default value is 1.
         */
        count?: pulumi.Input<number>;
        /**
         * The DNS Prefix given to Agents in this Agent Pool.
         */
        dnsPrefix: pulumi.Input<string>;
        fqdn?: pulumi.Input<string>;
        /**
         * Unique name of the agent pool profile in the context of the subscription and resource group.
         */
        name: pulumi.Input<string>;
        /**
         * The VM Size of each of the Agent Pool VM's (e.g. Standard_F1 / Standard_D2v2).
         */
        vmSize: pulumi.Input<string>;
    }

    export interface ServiceDiagnosticsProfile {
        /**
         * Should VM Diagnostics be enabled for the Container Service VM's
         */
        enabled: pulumi.Input<boolean>;
        storageUri?: pulumi.Input<string>;
    }

    export interface ServiceLinuxProfile {
        /**
         * The Admin Username for the Cluster.
         */
        adminUsername: pulumi.Input<string>;
        /**
         * An SSH Key block as documented below.
         */
        sshKey: pulumi.Input<inputs.containerservice.ServiceLinuxProfileSshKey>;
    }

    export interface ServiceLinuxProfileSshKey {
        /**
         * The Public SSH Key used to access the cluster.
         */
        keyData: pulumi.Input<string>;
    }

    export interface ServiceMasterProfile {
        /**
         * Number of agents (VMs) to host docker containers. Allowed values must be in the range of 1 to 100 (inclusive). The default value is 1.
         */
        count?: pulumi.Input<number>;
        /**
         * The DNS Prefix given to Agents in this Agent Pool.
         */
        dnsPrefix: pulumi.Input<string>;
        fqdn?: pulumi.Input<string>;
    }

    export interface ServiceServicePrincipal {
        /**
         * The ID for the Service Principal.
         */
        clientId: pulumi.Input<string>;
        /**
         * The secret password associated with the service principal.
         */
        clientSecret: pulumi.Input<string>;
    }
}

export namespace core {
}

export namespace cosmosdb {
    export interface AccountCapability {
        /**
         * The capability to enable - Possible values are `EnableTable`, `EnableCassandra`, and `EnableGremlin`.
         */
        name: pulumi.Input<string>;
    }

    export interface AccountConsistencyPolicy {
        /**
         * The Consistency Level to use for this CosmosDB Account - can be either `BoundedStaleness`, `Eventual`, `Session`, `Strong` or `ConsistentPrefix`.
         */
        consistencyLevel: pulumi.Input<string>;
        /**
         * When used with the Bounded Staleness consistency level, this value represents the time amount of staleness (in seconds) tolerated. Accepted range for this value is `5` - `86400` (1 day). Defaults to `5`. Required when `consistencyLevel` is set to `BoundedStaleness`.
         */
        maxIntervalInSeconds?: pulumi.Input<number>;
        /**
         * When used with the Bounded Staleness consistency level, this value represents the number of stale requests tolerated. Accepted range for this value is `10` – `2147483647`. Defaults to `100`. Required when `consistencyLevel` is set to `BoundedStaleness`.
         */
        maxStalenessPrefix?: pulumi.Input<number>;
    }

    export interface AccountFailoverPolicy {
        /**
         * The ID of the virtual network subnet.
         */
        id?: pulumi.Input<string>;
        /**
         * The name of the Azure region to host replicated data.
         */
        location: pulumi.Input<string>;
        priority: pulumi.Input<number>;
    }

    export interface AccountGeoLocation {
        /**
         * The failover priority of the region. A failover priority of `0` indicates a write region. The maximum value for a failover priority = (total number of regions - 1). Failover priority values must be unique for each of the regions in which the database account exists. Changing this causes the location to be re-provisioned and cannot be changed for the location with failover priority `0`.
         */
        failoverPriority: pulumi.Input<number>;
        /**
         * The ID of the virtual network subnet.
         */
        id?: pulumi.Input<string>;
        /**
         * The name of the Azure region to host replicated data.
         */
        location: pulumi.Input<string>;
        /**
         * The string used to generate the document endpoints for this region. If not specified it defaults to `${cosmosdb_account.name}-${location}`. Changing this causes the location to be deleted and re-provisioned and cannot be changed for the location with failover priority `0`.
         */
        prefix?: pulumi.Input<string>;
    }

    export interface AccountVirtualNetworkRule {
        /**
         * The ID of the virtual network subnet.
         */
        id: pulumi.Input<string>;
    }

    export interface MongoCollectionIndex {
        key: pulumi.Input<string>;
        unique?: pulumi.Input<boolean>;
    }

    export interface SqlContainerUniqueKey {
        paths: pulumi.Input<pulumi.Input<string>[]>;
    }
}

export namespace datafactory {
    export interface DatasetMysqlSchemaColumn {
        /**
         * The description for the Data Factory Dataset MySQL.
         */
        description?: pulumi.Input<string>;
        /**
         * Specifies the name of the Data Factory Dataset MySQL. Changing this forces a new resource to be created. Must be globally unique. See the [Microsoft documentation](https://docs.microsoft.com/en-us/azure/data-factory/naming-rules) for all restrictions.
         */
        name: pulumi.Input<string>;
        type?: pulumi.Input<string>;
    }

    export interface DatasetPostgresqlSchemaColumn {
        /**
         * The description for the Data Factory Dataset PostgreSQL.
         */
        description?: pulumi.Input<string>;
        /**
         * Specifies the name of the Data Factory Dataset PostgreSQL. Changing this forces a new resource to be created. Must be globally unique. See the [Microsoft documentation](https://docs.microsoft.com/en-us/azure/data-factory/naming-rules) for all restrictions.
         */
        name: pulumi.Input<string>;
        type?: pulumi.Input<string>;
    }

    export interface DatasetSqlServerTableSchemaColumn {
        /**
         * The description for the Data Factory Dataset SQL Server Table.
         */
        description?: pulumi.Input<string>;
        /**
         * Specifies the name of the Data Factory Dataset SQL Server Table. Changing this forces a new resource to be created. Must be globally unique. See the [Microsoft documentation](https://docs.microsoft.com/en-us/azure/data-factory/naming-rules) for all restrictions.
         */
        name: pulumi.Input<string>;
        type?: pulumi.Input<string>;
    }

    export interface FactoryGithubConfiguration {
        accountName: pulumi.Input<string>;
        branchName: pulumi.Input<string>;
        gitUrl: pulumi.Input<string>;
        repositoryName: pulumi.Input<string>;
        rootFolder: pulumi.Input<string>;
    }

    export interface FactoryIdentity {
        /**
         * The ID of the Principal (Client) in Azure Active Directory
         */
        principalId?: pulumi.Input<string>;
        /**
         * The ID of the Azure Active Directory Tenant.
         */
        tenantId?: pulumi.Input<string>;
        type: pulumi.Input<string>;
    }

    export interface FactoryVstsConfiguration {
        accountName: pulumi.Input<string>;
        branchName: pulumi.Input<string>;
        projectName: pulumi.Input<string>;
        repositoryName: pulumi.Input<string>;
        rootFolder: pulumi.Input<string>;
        /**
         * The ID of the Azure Active Directory Tenant.
         */
        tenantId: pulumi.Input<string>;
    }
}

export namespace devspace {
    export interface ControllerSku {
        /**
         * Specifies the name of the DevSpace Controller. Changing this forces a new resource to be created.
         */
        name: pulumi.Input<string>;
        tier: pulumi.Input<string>;
    }
}

export namespace devtest {
    export interface LinuxVirtualMachineGalleryImageReference {
        offer: pulumi.Input<string>;
        publisher: pulumi.Input<string>;
        sku: pulumi.Input<string>;
        version: pulumi.Input<string>;
    }

    export interface LinuxVirtualMachineInboundNatRule {
        backendPort: pulumi.Input<number>;
        /**
         * The frontend port associated with this Inbound NAT Rule.
         */
        frontendPort?: pulumi.Input<number>;
        protocol: pulumi.Input<string>;
    }

    export interface ScheduleDailyRecurrence {
        time: pulumi.Input<string>;
    }

    export interface ScheduleHourlyRecurrence {
        minute: pulumi.Input<number>;
    }

    export interface ScheduleNotificationSettings {
        status?: pulumi.Input<string>;
        timeInMinutes?: pulumi.Input<number>;
        webhookUrl?: pulumi.Input<string>;
    }

    export interface ScheduleWeeklyRecurrence {
        time: pulumi.Input<string>;
        weekDays?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface VirtualNetworkSubnet {
        /**
         * Specifies the name of the Dev Test Virtual Network. Changing this forces a new resource to be created.
         */
        name?: pulumi.Input<string>;
        useInVirtualMachineCreation?: pulumi.Input<string>;
        usePublicIpAddress?: pulumi.Input<string>;
    }

    export interface WindowsVirtualMachineGalleryImageReference {
        offer: pulumi.Input<string>;
        publisher: pulumi.Input<string>;
        sku: pulumi.Input<string>;
        version: pulumi.Input<string>;
    }

    export interface WindowsVirtualMachineInboundNatRule {
        backendPort: pulumi.Input<number>;
        /**
         * The frontend port associated with this Inbound NAT Rule.
         */
        frontendPort?: pulumi.Input<number>;
        protocol: pulumi.Input<string>;
    }
}

export namespace dns {
    export interface CaaRecordRecord {
        flags: pulumi.Input<number>;
        tag: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

    export interface MxRecordRecord {
        exchange: pulumi.Input<string>;
        preference: pulumi.Input<string>;
    }

    export interface NsRecordRecord {
        nsdname: pulumi.Input<string>;
    }

    export interface SrvRecordRecord {
        port: pulumi.Input<number>;
        priority: pulumi.Input<number>;
        target: pulumi.Input<string>;
        weight: pulumi.Input<number>;
    }

    export interface TxtRecordRecord {
        value: pulumi.Input<string>;
    }
}

export namespace eventgrid {
    export interface DomainInputMappingDefaultValues {
        /**
         * Specifies the default data version of the EventGrid Event to associate with the domain. Changing this forces a new resource to be created.
         */
        dataVersion?: pulumi.Input<string>;
        /**
         * Specifies the default event type of the EventGrid Event to associate with the domain. Changing this forces a new resource to be created.
         */
        eventType?: pulumi.Input<string>;
        /**
         * Specifies the default subject of the EventGrid Event to associate with the domain. Changing this forces a new resource to be created.
         */
        subject?: pulumi.Input<string>;
    }

    export interface DomainInputMappingFields {
        /**
         * Specifies the default data version of the EventGrid Event to associate with the domain. Changing this forces a new resource to be created.
         */
        dataVersion?: pulumi.Input<string>;
        /**
         * Specifies the event time of the EventGrid Event to associate with the domain. Changing this forces a new resource to be created.
         */
        eventTime?: pulumi.Input<string>;
        /**
         * Specifies the default event type of the EventGrid Event to associate with the domain. Changing this forces a new resource to be created.
         */
        eventType?: pulumi.Input<string>;
        /**
         * Specifies the id of the EventGrid Event to associate with the domain. Changing this forces a new resource to be created.
         */
        id?: pulumi.Input<string>;
        /**
         * Specifies the default subject of the EventGrid Event to associate with the domain. Changing this forces a new resource to be created.
         */
        subject?: pulumi.Input<string>;
        /**
         * Specifies the topic of the EventGrid Event to associate with the domain. Changing this forces a new resource to be created.
         */
        topic?: pulumi.Input<string>;
    }

    export interface EventSubscriptionEventhubEndpoint {
        /**
         * Specifies the id of the eventhub where the Event Subscription will receive events.
         */
        eventhubId: pulumi.Input<string>;
    }

    export interface EventSubscriptionHybridConnectionEndpoint {
        /**
         * Specifies the id of the hybrid connection where the Event Subscription will receive events.
         */
        hybridConnectionId: pulumi.Input<string>;
    }

    export interface EventSubscriptionRetryPolicy {
        /**
         * Specifies the time to live (in minutes) for events.
         */
        eventTimeToLive: pulumi.Input<number>;
        /**
         * Specifies the maximum number of delivery retry attempts for events.
         */
        maxDeliveryAttempts: pulumi.Input<number>;
    }

    export interface EventSubscriptionStorageBlobDeadLetterDestination {
        /**
         * Specifies the id of the storage account id where the storage blob is located. 
         */
        storageAccountId: pulumi.Input<string>;
        /**
         * Specifies the name of the Storage blob container that is the destination of the deadletter events
         */
        storageBlobContainerName: pulumi.Input<string>;
    }

    export interface EventSubscriptionStorageQueueEndpoint {
        /**
         * Specifies the name of the storage queue where the Event Subscriptio will receive events.
         */
        queueName: pulumi.Input<string>;
        /**
         * Specifies the id of the storage account id where the storage blob is located. 
         */
        storageAccountId: pulumi.Input<string>;
    }

    export interface EventSubscriptionSubjectFilter {
        /**
         * Specifies if `subjectBeginsWith` and `subjectEndsWith` case sensitive. This value defaults to `false`.
         */
        caseSensitive?: pulumi.Input<boolean>;
        /**
         * A string to filter events for an event subscription based on a resource path prefix.
         */
        subjectBeginsWith?: pulumi.Input<string>;
        /**
         * A string to filter events for an event subscription based on a resource path suffix.
         */
        subjectEndsWith?: pulumi.Input<string>;
    }

    export interface EventSubscriptionWebhookEndpoint {
        /**
         * Specifies the url of the webhook where the Event Subscription will receive events. 
         */
        url: pulumi.Input<string>;
    }
}

export namespace eventhub {
    export interface DomainInputMappingDefaultValues {
        /**
         * Specifies the default data version of the EventGrid Event to associate with the domain. Changing this forces a new resource to be created.
         */
        dataVersion?: pulumi.Input<string>;
        /**
         * Specifies the default event type of the EventGrid Event to associate with the domain. Changing this forces a new resource to be created.
         */
        eventType?: pulumi.Input<string>;
        /**
         * Specifies the default subject of the EventGrid Event to associate with the domain. Changing this forces a new resource to be created.
         */
        subject?: pulumi.Input<string>;
    }

    export interface DomainInputMappingFields {
        /**
         * Specifies the default data version of the EventGrid Event to associate with the domain. Changing this forces a new resource to be created.
         */
        dataVersion?: pulumi.Input<string>;
        /**
         * Specifies the event time of the EventGrid Event to associate with the domain. Changing this forces a new resource to be created.
         */
        eventTime?: pulumi.Input<string>;
        /**
         * Specifies the default event type of the EventGrid Event to associate with the domain. Changing this forces a new resource to be created.
         */
        eventType?: pulumi.Input<string>;
        /**
         * Specifies the id of the EventGrid Event to associate with the domain. Changing this forces a new resource to be created.
         */
        id?: pulumi.Input<string>;
        /**
         * Specifies the default subject of the EventGrid Event to associate with the domain. Changing this forces a new resource to be created.
         */
        subject?: pulumi.Input<string>;
        /**
         * Specifies the topic of the EventGrid Event to associate with the domain. Changing this forces a new resource to be created.
         */
        topic?: pulumi.Input<string>;
    }

    export interface EventHubCaptureDescription {
        destination: pulumi.Input<inputs.eventhub.EventHubCaptureDescriptionDestination>;
        enabled: pulumi.Input<boolean>;
        encoding: pulumi.Input<string>;
        intervalInSeconds?: pulumi.Input<number>;
        sizeLimitInBytes?: pulumi.Input<number>;
        skipEmptyArchives?: pulumi.Input<boolean>;
    }

    export interface EventHubCaptureDescriptionDestination {
        archiveNameFormat: pulumi.Input<string>;
        blobContainerName: pulumi.Input<string>;
        /**
         * Specifies the name of the EventHub Namespace resource. Changing this forces a new resource to be created.
         */
        name: pulumi.Input<string>;
        storageAccountId: pulumi.Input<string>;
    }

    export interface EventSubscriptionEventhubEndpoint {
        /**
         * Specifies the id of the eventhub where the Event Subscription will receive events.
         */
        eventhubId: pulumi.Input<string>;
    }

    export interface EventSubscriptionHybridConnectionEndpoint {
        /**
         * Specifies the id of the hybrid connection where the Event Subscription will receive events.
         */
        hybridConnectionId: pulumi.Input<string>;
    }

    export interface EventSubscriptionRetryPolicy {
        /**
         * Specifies the time to live (in minutes) for events.
         */
        eventTimeToLive: pulumi.Input<number>;
        /**
         * Specifies the maximum number of delivery retry attempts for events.
         */
        maxDeliveryAttempts: pulumi.Input<number>;
    }

    export interface EventSubscriptionStorageBlobDeadLetterDestination {
        /**
         * Specifies the id of the storage account id where the storage blob is located. 
         */
        storageAccountId: pulumi.Input<string>;
        /**
         * Specifies the name of the Storage blob container that is the destination of the deadletter events
         */
        storageBlobContainerName: pulumi.Input<string>;
    }

    export interface EventSubscriptionStorageQueueEndpoint {
        /**
         * Specifies the name of the storage queue where the Event Subscriptio will receive events.
         */
        queueName: pulumi.Input<string>;
        /**
         * Specifies the id of the storage account id where the storage blob is located. 
         */
        storageAccountId: pulumi.Input<string>;
    }

    export interface EventSubscriptionSubjectFilter {
        /**
         * Specifies if `subjectBeginsWith` and `subjectEndsWith` case sensitive. This value defaults to `false`.
         */
        caseSensitive?: pulumi.Input<boolean>;
        /**
         * A string to filter events for an event subscription based on a resource path prefix.
         */
        subjectBeginsWith?: pulumi.Input<string>;
        /**
         * A string to filter events for an event subscription based on a resource path suffix.
         */
        subjectEndsWith?: pulumi.Input<string>;
    }

    export interface EventSubscriptionWebhookEndpoint {
        /**
         * Specifies the url of the webhook where the Event Subscription will receive events. 
         */
        url: pulumi.Input<string>;
    }

    export interface SubscriptionRuleCorrelationFilter {
        /**
         * Content type of the message.
         */
        contentType?: pulumi.Input<string>;
        /**
         * Identifier of the correlation.
         */
        correlationId?: pulumi.Input<string>;
        /**
         * Application specific label.
         */
        label?: pulumi.Input<string>;
        /**
         * Identifier of the message.
         */
        messageId?: pulumi.Input<string>;
        /**
         * Address of the queue to reply to.
         */
        replyTo?: pulumi.Input<string>;
        /**
         * Session identifier to reply to.
         */
        replyToSessionId?: pulumi.Input<string>;
        /**
         * Session identifier.
         */
        sessionId?: pulumi.Input<string>;
        /**
         * Address to send to.
         */
        to?: pulumi.Input<string>;
    }
}

export namespace hdinsight {
    export interface HBaseClusterComponentVersion {
        hbase: pulumi.Input<string>;
    }

    export interface HBaseClusterGateway {
        enabled: pulumi.Input<boolean>;
        password: pulumi.Input<string>;
        username: pulumi.Input<string>;
    }

    export interface HBaseClusterRoles {
        headNode: pulumi.Input<inputs.hdinsight.HBaseClusterRolesHeadNode>;
        workerNode: pulumi.Input<inputs.hdinsight.HBaseClusterRolesWorkerNode>;
        zookeeperNode: pulumi.Input<inputs.hdinsight.HBaseClusterRolesZookeeperNode>;
    }

    export interface HBaseClusterRolesHeadNode {
        password?: pulumi.Input<string>;
        sshKeys?: pulumi.Input<pulumi.Input<string>[]>;
        subnetId?: pulumi.Input<string>;
        username: pulumi.Input<string>;
        virtualNetworkId?: pulumi.Input<string>;
        vmSize: pulumi.Input<string>;
    }

    export interface HBaseClusterRolesWorkerNode {
        minInstanceCount?: pulumi.Input<number>;
        password?: pulumi.Input<string>;
        sshKeys?: pulumi.Input<pulumi.Input<string>[]>;
        subnetId?: pulumi.Input<string>;
        targetInstanceCount: pulumi.Input<number>;
        username: pulumi.Input<string>;
        virtualNetworkId?: pulumi.Input<string>;
        vmSize: pulumi.Input<string>;
    }

    export interface HBaseClusterRolesZookeeperNode {
        password?: pulumi.Input<string>;
        sshKeys?: pulumi.Input<pulumi.Input<string>[]>;
        subnetId?: pulumi.Input<string>;
        username: pulumi.Input<string>;
        virtualNetworkId?: pulumi.Input<string>;
        vmSize: pulumi.Input<string>;
    }

    export interface HBaseClusterStorageAccount {
        isDefault: pulumi.Input<boolean>;
        storageAccountKey: pulumi.Input<string>;
        storageContainerId: pulumi.Input<string>;
    }

    export interface HadoopClusterComponentVersion {
        hadoop: pulumi.Input<string>;
    }

    export interface HadoopClusterGateway {
        enabled: pulumi.Input<boolean>;
        password: pulumi.Input<string>;
        username: pulumi.Input<string>;
    }

    export interface HadoopClusterRoles {
        headNode: pulumi.Input<inputs.hdinsight.HadoopClusterRolesHeadNode>;
        workerNode: pulumi.Input<inputs.hdinsight.HadoopClusterRolesWorkerNode>;
        zookeeperNode: pulumi.Input<inputs.hdinsight.HadoopClusterRolesZookeeperNode>;
    }

    export interface HadoopClusterRolesHeadNode {
        password?: pulumi.Input<string>;
        sshKeys?: pulumi.Input<pulumi.Input<string>[]>;
        subnetId?: pulumi.Input<string>;
        username: pulumi.Input<string>;
        virtualNetworkId?: pulumi.Input<string>;
        vmSize: pulumi.Input<string>;
    }

    export interface HadoopClusterRolesWorkerNode {
        minInstanceCount?: pulumi.Input<number>;
        password?: pulumi.Input<string>;
        sshKeys?: pulumi.Input<pulumi.Input<string>[]>;
        subnetId?: pulumi.Input<string>;
        targetInstanceCount: pulumi.Input<number>;
        username: pulumi.Input<string>;
        virtualNetworkId?: pulumi.Input<string>;
        vmSize: pulumi.Input<string>;
    }

    export interface HadoopClusterRolesZookeeperNode {
        password?: pulumi.Input<string>;
        sshKeys?: pulumi.Input<pulumi.Input<string>[]>;
        subnetId?: pulumi.Input<string>;
        username: pulumi.Input<string>;
        virtualNetworkId?: pulumi.Input<string>;
        vmSize: pulumi.Input<string>;
    }

    export interface HadoopClusterStorageAccount {
        isDefault: pulumi.Input<boolean>;
        storageAccountKey: pulumi.Input<string>;
        storageContainerId: pulumi.Input<string>;
    }

    export interface InteractiveQueryClusterComponentVersion {
        interactiveHive: pulumi.Input<string>;
    }

    export interface InteractiveQueryClusterGateway {
        enabled: pulumi.Input<boolean>;
        password: pulumi.Input<string>;
        username: pulumi.Input<string>;
    }

    export interface InteractiveQueryClusterRoles {
        headNode: pulumi.Input<inputs.hdinsight.InteractiveQueryClusterRolesHeadNode>;
        workerNode: pulumi.Input<inputs.hdinsight.InteractiveQueryClusterRolesWorkerNode>;
        zookeeperNode: pulumi.Input<inputs.hdinsight.InteractiveQueryClusterRolesZookeeperNode>;
    }

    export interface InteractiveQueryClusterRolesHeadNode {
        password?: pulumi.Input<string>;
        sshKeys?: pulumi.Input<pulumi.Input<string>[]>;
        subnetId?: pulumi.Input<string>;
        username: pulumi.Input<string>;
        virtualNetworkId?: pulumi.Input<string>;
        vmSize: pulumi.Input<string>;
    }

    export interface InteractiveQueryClusterRolesWorkerNode {
        minInstanceCount?: pulumi.Input<number>;
        password?: pulumi.Input<string>;
        sshKeys?: pulumi.Input<pulumi.Input<string>[]>;
        subnetId?: pulumi.Input<string>;
        targetInstanceCount: pulumi.Input<number>;
        username: pulumi.Input<string>;
        virtualNetworkId?: pulumi.Input<string>;
        vmSize: pulumi.Input<string>;
    }

    export interface InteractiveQueryClusterRolesZookeeperNode {
        password?: pulumi.Input<string>;
        sshKeys?: pulumi.Input<pulumi.Input<string>[]>;
        subnetId?: pulumi.Input<string>;
        username: pulumi.Input<string>;
        virtualNetworkId?: pulumi.Input<string>;
        vmSize: pulumi.Input<string>;
    }

    export interface InteractiveQueryClusterStorageAccount {
        isDefault: pulumi.Input<boolean>;
        storageAccountKey: pulumi.Input<string>;
        storageContainerId: pulumi.Input<string>;
    }

    export interface KafkaClusterComponentVersion {
        kafka: pulumi.Input<string>;
    }

    export interface KafkaClusterGateway {
        enabled: pulumi.Input<boolean>;
        password: pulumi.Input<string>;
        username: pulumi.Input<string>;
    }

    export interface KafkaClusterRoles {
        headNode: pulumi.Input<inputs.hdinsight.KafkaClusterRolesHeadNode>;
        workerNode: pulumi.Input<inputs.hdinsight.KafkaClusterRolesWorkerNode>;
        zookeeperNode: pulumi.Input<inputs.hdinsight.KafkaClusterRolesZookeeperNode>;
    }

    export interface KafkaClusterRolesHeadNode {
        password?: pulumi.Input<string>;
        sshKeys?: pulumi.Input<pulumi.Input<string>[]>;
        subnetId?: pulumi.Input<string>;
        username: pulumi.Input<string>;
        virtualNetworkId?: pulumi.Input<string>;
        vmSize: pulumi.Input<string>;
    }

    export interface KafkaClusterRolesWorkerNode {
        minInstanceCount?: pulumi.Input<number>;
        numberOfDisksPerNode: pulumi.Input<number>;
        password?: pulumi.Input<string>;
        sshKeys?: pulumi.Input<pulumi.Input<string>[]>;
        subnetId?: pulumi.Input<string>;
        targetInstanceCount: pulumi.Input<number>;
        username: pulumi.Input<string>;
        virtualNetworkId?: pulumi.Input<string>;
        vmSize: pulumi.Input<string>;
    }

    export interface KafkaClusterRolesZookeeperNode {
        password?: pulumi.Input<string>;
        sshKeys?: pulumi.Input<pulumi.Input<string>[]>;
        subnetId?: pulumi.Input<string>;
        username: pulumi.Input<string>;
        virtualNetworkId?: pulumi.Input<string>;
        vmSize: pulumi.Input<string>;
    }

    export interface KafkaClusterStorageAccount {
        isDefault: pulumi.Input<boolean>;
        storageAccountKey: pulumi.Input<string>;
        storageContainerId: pulumi.Input<string>;
    }

    export interface MLServicesClusterGateway {
        enabled: pulumi.Input<boolean>;
        password: pulumi.Input<string>;
        username: pulumi.Input<string>;
    }

    export interface MLServicesClusterRoles {
        edgeNode: pulumi.Input<inputs.hdinsight.MLServicesClusterRolesEdgeNode>;
        headNode: pulumi.Input<inputs.hdinsight.MLServicesClusterRolesHeadNode>;
        workerNode: pulumi.Input<inputs.hdinsight.MLServicesClusterRolesWorkerNode>;
        zookeeperNode: pulumi.Input<inputs.hdinsight.MLServicesClusterRolesZookeeperNode>;
    }

    export interface MLServicesClusterRolesEdgeNode {
        password?: pulumi.Input<string>;
        sshKeys?: pulumi.Input<pulumi.Input<string>[]>;
        subnetId?: pulumi.Input<string>;
        username: pulumi.Input<string>;
        virtualNetworkId?: pulumi.Input<string>;
        vmSize: pulumi.Input<string>;
    }

    export interface MLServicesClusterRolesHeadNode {
        password?: pulumi.Input<string>;
        sshKeys?: pulumi.Input<pulumi.Input<string>[]>;
        subnetId?: pulumi.Input<string>;
        username: pulumi.Input<string>;
        virtualNetworkId?: pulumi.Input<string>;
        vmSize: pulumi.Input<string>;
    }

    export interface MLServicesClusterRolesWorkerNode {
        minInstanceCount?: pulumi.Input<number>;
        password?: pulumi.Input<string>;
        sshKeys?: pulumi.Input<pulumi.Input<string>[]>;
        subnetId?: pulumi.Input<string>;
        targetInstanceCount: pulumi.Input<number>;
        username: pulumi.Input<string>;
        virtualNetworkId?: pulumi.Input<string>;
        vmSize: pulumi.Input<string>;
    }

    export interface MLServicesClusterRolesZookeeperNode {
        password?: pulumi.Input<string>;
        sshKeys?: pulumi.Input<pulumi.Input<string>[]>;
        subnetId?: pulumi.Input<string>;
        username: pulumi.Input<string>;
        virtualNetworkId?: pulumi.Input<string>;
        vmSize: pulumi.Input<string>;
    }

    export interface MLServicesClusterStorageAccount {
        isDefault: pulumi.Input<boolean>;
        storageAccountKey: pulumi.Input<string>;
        storageContainerId: pulumi.Input<string>;
    }

    export interface RServerClusterGateway {
        enabled: pulumi.Input<boolean>;
        password: pulumi.Input<string>;
        username: pulumi.Input<string>;
    }

    export interface RServerClusterRoles {
        edgeNode: pulumi.Input<inputs.hdinsight.RServerClusterRolesEdgeNode>;
        headNode: pulumi.Input<inputs.hdinsight.RServerClusterRolesHeadNode>;
        workerNode: pulumi.Input<inputs.hdinsight.RServerClusterRolesWorkerNode>;
        zookeeperNode: pulumi.Input<inputs.hdinsight.RServerClusterRolesZookeeperNode>;
    }

    export interface RServerClusterRolesEdgeNode {
        password?: pulumi.Input<string>;
        sshKeys?: pulumi.Input<pulumi.Input<string>[]>;
        subnetId?: pulumi.Input<string>;
        username: pulumi.Input<string>;
        virtualNetworkId?: pulumi.Input<string>;
        vmSize: pulumi.Input<string>;
    }

    export interface RServerClusterRolesHeadNode {
        password?: pulumi.Input<string>;
        sshKeys?: pulumi.Input<pulumi.Input<string>[]>;
        subnetId?: pulumi.Input<string>;
        username: pulumi.Input<string>;
        virtualNetworkId?: pulumi.Input<string>;
        vmSize: pulumi.Input<string>;
    }

    export interface RServerClusterRolesWorkerNode {
        minInstanceCount?: pulumi.Input<number>;
        password?: pulumi.Input<string>;
        sshKeys?: pulumi.Input<pulumi.Input<string>[]>;
        subnetId?: pulumi.Input<string>;
        targetInstanceCount: pulumi.Input<number>;
        username: pulumi.Input<string>;
        virtualNetworkId?: pulumi.Input<string>;
        vmSize: pulumi.Input<string>;
    }

    export interface RServerClusterRolesZookeeperNode {
        password?: pulumi.Input<string>;
        sshKeys?: pulumi.Input<pulumi.Input<string>[]>;
        subnetId?: pulumi.Input<string>;
        username: pulumi.Input<string>;
        virtualNetworkId?: pulumi.Input<string>;
        vmSize: pulumi.Input<string>;
    }

    export interface RServerClusterStorageAccount {
        isDefault: pulumi.Input<boolean>;
        storageAccountKey: pulumi.Input<string>;
        storageContainerId: pulumi.Input<string>;
    }

    export interface SparkClusterComponentVersion {
        spark: pulumi.Input<string>;
    }

    export interface SparkClusterGateway {
        enabled: pulumi.Input<boolean>;
        password: pulumi.Input<string>;
        username: pulumi.Input<string>;
    }

    export interface SparkClusterRoles {
        headNode: pulumi.Input<inputs.hdinsight.SparkClusterRolesHeadNode>;
        workerNode: pulumi.Input<inputs.hdinsight.SparkClusterRolesWorkerNode>;
        zookeeperNode: pulumi.Input<inputs.hdinsight.SparkClusterRolesZookeeperNode>;
    }

    export interface SparkClusterRolesHeadNode {
        password?: pulumi.Input<string>;
        sshKeys?: pulumi.Input<pulumi.Input<string>[]>;
        subnetId?: pulumi.Input<string>;
        username: pulumi.Input<string>;
        virtualNetworkId?: pulumi.Input<string>;
        vmSize: pulumi.Input<string>;
    }

    export interface SparkClusterRolesWorkerNode {
        minInstanceCount?: pulumi.Input<number>;
        password?: pulumi.Input<string>;
        sshKeys?: pulumi.Input<pulumi.Input<string>[]>;
        subnetId?: pulumi.Input<string>;
        targetInstanceCount: pulumi.Input<number>;
        username: pulumi.Input<string>;
        virtualNetworkId?: pulumi.Input<string>;
        vmSize: pulumi.Input<string>;
    }

    export interface SparkClusterRolesZookeeperNode {
        password?: pulumi.Input<string>;
        sshKeys?: pulumi.Input<pulumi.Input<string>[]>;
        subnetId?: pulumi.Input<string>;
        username: pulumi.Input<string>;
        virtualNetworkId?: pulumi.Input<string>;
        vmSize: pulumi.Input<string>;
    }

    export interface SparkClusterStorageAccount {
        isDefault: pulumi.Input<boolean>;
        storageAccountKey: pulumi.Input<string>;
        storageContainerId: pulumi.Input<string>;
    }

    export interface StormClusterComponentVersion {
        storm: pulumi.Input<string>;
    }

    export interface StormClusterGateway {
        enabled: pulumi.Input<boolean>;
        password: pulumi.Input<string>;
        username: pulumi.Input<string>;
    }

    export interface StormClusterRoles {
        headNode: pulumi.Input<inputs.hdinsight.StormClusterRolesHeadNode>;
        workerNode: pulumi.Input<inputs.hdinsight.StormClusterRolesWorkerNode>;
        zookeeperNode: pulumi.Input<inputs.hdinsight.StormClusterRolesZookeeperNode>;
    }

    export interface StormClusterRolesHeadNode {
        password?: pulumi.Input<string>;
        sshKeys?: pulumi.Input<pulumi.Input<string>[]>;
        subnetId?: pulumi.Input<string>;
        username: pulumi.Input<string>;
        virtualNetworkId?: pulumi.Input<string>;
        vmSize: pulumi.Input<string>;
    }

    export interface StormClusterRolesWorkerNode {
        minInstanceCount?: pulumi.Input<number>;
        password?: pulumi.Input<string>;
        sshKeys?: pulumi.Input<pulumi.Input<string>[]>;
        subnetId?: pulumi.Input<string>;
        targetInstanceCount: pulumi.Input<number>;
        username: pulumi.Input<string>;
        virtualNetworkId?: pulumi.Input<string>;
        vmSize: pulumi.Input<string>;
    }

    export interface StormClusterRolesZookeeperNode {
        password?: pulumi.Input<string>;
        sshKeys?: pulumi.Input<pulumi.Input<string>[]>;
        subnetId?: pulumi.Input<string>;
        username: pulumi.Input<string>;
        virtualNetworkId?: pulumi.Input<string>;
        vmSize: pulumi.Input<string>;
    }

    export interface StormClusterStorageAccount {
        isDefault: pulumi.Input<boolean>;
        storageAccountKey: pulumi.Input<string>;
        storageContainerId: pulumi.Input<string>;
    }
}

export namespace iot {
    export interface DpsLinkedHub {
        allocationWeight?: pulumi.Input<number>;
        applyAllocationPolicy?: pulumi.Input<boolean>;
        connectionString: pulumi.Input<string>;
        hostname?: pulumi.Input<string>;
        /**
         * Specifies the supported Azure location where the resource has to be createc. Changing this forces a new resource to be created.
         */
        location: pulumi.Input<string>;
    }

    export interface DpsSku {
        capacity: pulumi.Input<number>;
        /**
         * Specifies the name of the Iot Device Provisioning Service resource. Changing this forces a new resource to be created.
         */
        name: pulumi.Input<string>;
        tier: pulumi.Input<string>;
    }

    export interface IoTHubEndpoint {
        batchFrequencyInSeconds?: pulumi.Input<number>;
        connectionString: pulumi.Input<string>;
        containerName?: pulumi.Input<string>;
        encoding?: pulumi.Input<string>;
        fileNameFormat?: pulumi.Input<string>;
        maxChunkSizeInBytes?: pulumi.Input<number>;
        /**
         * Specifies the name of the IotHub resource. Changing this forces a new resource to be created.
         */
        name: pulumi.Input<string>;
        type: pulumi.Input<string>;
    }

    export interface IoTHubFallbackRoute {
        condition?: pulumi.Input<string>;
        enabled?: pulumi.Input<boolean>;
        endpointNames?: pulumi.Input<pulumi.Input<string>[]>;
        source?: pulumi.Input<string>;
    }

    export interface IoTHubFileUpload {
        connectionString: pulumi.Input<string>;
        containerName: pulumi.Input<string>;
        defaultTtl?: pulumi.Input<string>;
        lockDuration?: pulumi.Input<string>;
        maxDeliveryCount?: pulumi.Input<number>;
        notifications?: pulumi.Input<boolean>;
        sasTtl?: pulumi.Input<string>;
    }

    export interface IoTHubIpFilterRule {
        action: pulumi.Input<string>;
        ipMask: pulumi.Input<string>;
        /**
         * Specifies the name of the IotHub resource. Changing this forces a new resource to be created.
         */
        name: pulumi.Input<string>;
    }

    export interface IoTHubRoute {
        condition?: pulumi.Input<string>;
        enabled: pulumi.Input<boolean>;
        endpointNames: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Specifies the name of the IotHub resource. Changing this forces a new resource to be created.
         */
        name: pulumi.Input<string>;
        source: pulumi.Input<string>;
    }

    export interface IoTHubSharedAccessPolicy {
        /**
         * The name of the shared access policy.
         */
        keyName?: pulumi.Input<string>;
        /**
         * The permissions assigned to the shared access policy.
         */
        permissions?: pulumi.Input<string>;
        /**
         * The primary key.
         */
        primaryKey?: pulumi.Input<string>;
        /**
         * The secondary key.
         */
        secondaryKey?: pulumi.Input<string>;
    }

    export interface IoTHubSku {
        capacity: pulumi.Input<number>;
        /**
         * Specifies the name of the IotHub resource. Changing this forces a new resource to be created.
         */
        name: pulumi.Input<string>;
        tier: pulumi.Input<string>;
    }
}

export namespace keyvault {
    export interface CertifiateCertificate {
        /**
         * The base64-encoded certificate contents. Changing this forces a new resource to be created.
         */
        contents: pulumi.Input<string>;
        /**
         * The password associated with the certificate. Changing this forces a new resource to be created.
         */
        password?: pulumi.Input<string>;
    }

    export interface CertifiateCertificatePolicy {
        /**
         * A `issuerParameters` block as defined below.
         */
        issuerParameters: pulumi.Input<inputs.keyvault.CertifiateCertificatePolicyIssuerParameters>;
        /**
         * A `keyProperties` block as defined below.
         */
        keyProperties: pulumi.Input<inputs.keyvault.CertifiateCertificatePolicyKeyProperties>;
        /**
         * A `lifetimeAction` block as defined below.
         */
        lifetimeActions?: pulumi.Input<pulumi.Input<inputs.keyvault.CertifiateCertificatePolicyLifetimeAction>[]>;
        /**
         * A `secretProperties` block as defined below.
         */
        secretProperties: pulumi.Input<inputs.keyvault.CertifiateCertificatePolicySecretProperties>;
        /**
         * A `x509CertificateProperties` block as defined below.
         */
        x509CertificateProperties?: pulumi.Input<inputs.keyvault.CertifiateCertificatePolicyX509CertificateProperties>;
    }

    export interface CertifiateCertificatePolicyIssuerParameters {
        /**
         * The name of the Certificate Issuer. Possible values include `Self`, or the name of a certificate issuing authority supported by Azure. Changing this forces a new resource to be created.
         */
        name: pulumi.Input<string>;
    }

    export interface CertifiateCertificatePolicyKeyProperties {
        /**
         * Is this Certificate Exportable? Changing this forces a new resource to be created.
         */
        exportable: pulumi.Input<boolean>;
        /**
         * The size of the Key used in the Certificate. Possible values include `2048` and `4096`. Changing this forces a new resource to be created.
         */
        keySize: pulumi.Input<number>;
        /**
         * Specifies the Type of Key, such as `RSA`. Changing this forces a new resource to be created.
         */
        keyType: pulumi.Input<string>;
        /**
         * Is the key reusable? Changing this forces a new resource to be created.
         */
        reuseKey: pulumi.Input<boolean>;
    }

    export interface CertifiateCertificatePolicyLifetimeAction {
        /**
         * A `action` block as defined below.
         */
        action: pulumi.Input<inputs.keyvault.CertifiateCertificatePolicyLifetimeActionAction>;
        /**
         * A `trigger` block as defined below.
         */
        trigger: pulumi.Input<inputs.keyvault.CertifiateCertificatePolicyLifetimeActionTrigger>;
    }

    export interface CertifiateCertificatePolicyLifetimeActionAction {
        /**
         * The Type of action to be performed when the lifetime trigger is triggerec. Possible values include `AutoRenew` and `EmailContacts`. Changing this forces a new resource to be created.
         */
        actionType: pulumi.Input<string>;
    }

    export interface CertifiateCertificatePolicyLifetimeActionTrigger {
        /**
         * The number of days before the Certificate expires that the action associated with this Trigger should run. Changing this forces a new resource to be created. Conflicts with `lifetimePercentage`.
         */
        daysBeforeExpiry?: pulumi.Input<number>;
        /**
         * The percentage at which during the Certificates Lifetime the action associated with this Trigger should run. Changing this forces a new resource to be created. Conflicts with `daysBeforeExpiry`.
         */
        lifetimePercentage?: pulumi.Input<number>;
    }

    export interface CertifiateCertificatePolicySecretProperties {
        /**
         * The Content-Type of the Certificate, such as `application/x-pkcs12` for a PFX or `application/x-pem-file` for a PEM. Changing this forces a new resource to be created.
         */
        contentType: pulumi.Input<string>;
    }

    export interface CertifiateCertificatePolicyX509CertificateProperties {
        /**
         * A list of Extended/Enhanced Key Usages. Changing this forces a new resource to be created.
         */
        extendedKeyUsages?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * A list of uses associated with this Key. Possible values include `cRLSign`, `dataEncipherment`, `decipherOnly`, `digitalSignature`, `encipherOnly`, `keyAgreement`, `keyCertSign`, `keyEncipherment` and `nonRepudiation` and are case-sensitive. Changing this forces a new resource to be created.
         */
        keyUsages: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The Certificate's Subject. Changing this forces a new resource to be created.
         */
        subject: pulumi.Input<string>;
        /**
         * A `subjectAlternativeNames` block as defined below.
         */
        subjectAlternativeNames?: pulumi.Input<inputs.keyvault.CertifiateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNames>;
        /**
         * The Certificates Validity Period in Months. Changing this forces a new resource to be created.
         */
        validityInMonths: pulumi.Input<number>;
    }

    export interface CertifiateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNames {
        /**
         * A list of alternative DNS names (FQDNs) identified by the Certificate. Changing this forces a new resource to be created.
         */
        dnsNames?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * A list of email addresses identified by this Certificate. Changing this forces a new resource to be created.
         */
        emails?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * A list of User Principal Names identified by the Certificate. Changing this forces a new resource to be created.
         */
        upns?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface CertificateCertificate {
        /**
         * The base64-encoded certificate contents. Changing this forces a new resource to be created.
         */
        contents: pulumi.Input<string>;
        /**
         * The password associated with the certificate. Changing this forces a new resource to be created.
         */
        password?: pulumi.Input<string>;
    }

    export interface CertificateCertificatePolicy {
        /**
         * A `issuerParameters` block as defined below.
         */
        issuerParameters: pulumi.Input<inputs.keyvault.CertificateCertificatePolicyIssuerParameters>;
        /**
         * A `keyProperties` block as defined below.
         */
        keyProperties: pulumi.Input<inputs.keyvault.CertificateCertificatePolicyKeyProperties>;
        /**
         * A `lifetimeAction` block as defined below.
         */
        lifetimeActions?: pulumi.Input<pulumi.Input<inputs.keyvault.CertificateCertificatePolicyLifetimeAction>[]>;
        /**
         * A `secretProperties` block as defined below.
         */
        secretProperties: pulumi.Input<inputs.keyvault.CertificateCertificatePolicySecretProperties>;
        /**
         * A `x509CertificateProperties` block as defined below.
         */
        x509CertificateProperties?: pulumi.Input<inputs.keyvault.CertificateCertificatePolicyX509CertificateProperties>;
    }

    export interface CertificateCertificatePolicyIssuerParameters {
        /**
         * The name of the Certificate Issuer. Possible values include `Self`, or the name of a certificate issuing authority supported by Azure. Changing this forces a new resource to be created.
         */
        name: pulumi.Input<string>;
    }

    export interface CertificateCertificatePolicyKeyProperties {
        /**
         * Is this Certificate Exportable? Changing this forces a new resource to be created.
         */
        exportable: pulumi.Input<boolean>;
        /**
         * The size of the Key used in the Certificate. Possible values include `2048` and `4096`. Changing this forces a new resource to be created.
         */
        keySize: pulumi.Input<number>;
        /**
         * Specifies the Type of Key, such as `RSA`. Changing this forces a new resource to be created.
         */
        keyType: pulumi.Input<string>;
        /**
         * Is the key reusable? Changing this forces a new resource to be created.
         */
        reuseKey: pulumi.Input<boolean>;
    }

    export interface CertificateCertificatePolicyLifetimeAction {
        /**
         * A `action` block as defined below.
         */
        action: pulumi.Input<inputs.keyvault.CertificateCertificatePolicyLifetimeActionAction>;
        /**
         * A `trigger` block as defined below.
         */
        trigger: pulumi.Input<inputs.keyvault.CertificateCertificatePolicyLifetimeActionTrigger>;
    }

    export interface CertificateCertificatePolicyLifetimeActionAction {
        /**
         * The Type of action to be performed when the lifetime trigger is triggerec. Possible values include `AutoRenew` and `EmailContacts`. Changing this forces a new resource to be created.
         */
        actionType: pulumi.Input<string>;
    }

    export interface CertificateCertificatePolicyLifetimeActionTrigger {
        /**
         * The number of days before the Certificate expires that the action associated with this Trigger should run. Changing this forces a new resource to be created. Conflicts with `lifetimePercentage`.
         */
        daysBeforeExpiry?: pulumi.Input<number>;
        /**
         * The percentage at which during the Certificates Lifetime the action associated with this Trigger should run. Changing this forces a new resource to be created. Conflicts with `daysBeforeExpiry`.
         */
        lifetimePercentage?: pulumi.Input<number>;
    }

    export interface CertificateCertificatePolicySecretProperties {
        /**
         * The Content-Type of the Certificate, such as `application/x-pkcs12` for a PFX or `application/x-pem-file` for a PEM. Changing this forces a new resource to be created.
         */
        contentType: pulumi.Input<string>;
    }

    export interface CertificateCertificatePolicyX509CertificateProperties {
        /**
         * A list of Extended/Enhanced Key Usages. Changing this forces a new resource to be created.
         */
        extendedKeyUsages?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * A list of uses associated with this Key. Possible values include `cRLSign`, `dataEncipherment`, `decipherOnly`, `digitalSignature`, `encipherOnly`, `keyAgreement`, `keyCertSign`, `keyEncipherment` and `nonRepudiation` and are case-sensitive. Changing this forces a new resource to be created.
         */
        keyUsages: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The Certificate's Subject. Changing this forces a new resource to be created.
         */
        subject: pulumi.Input<string>;
        /**
         * A `subjectAlternativeNames` block as defined below.
         */
        subjectAlternativeNames?: pulumi.Input<inputs.keyvault.CertificateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNames>;
        /**
         * The Certificates Validity Period in Months. Changing this forces a new resource to be created.
         */
        validityInMonths: pulumi.Input<number>;
    }

    export interface CertificateCertificatePolicyX509CertificatePropertiesSubjectAlternativeNames {
        /**
         * A list of alternative DNS names (FQDNs) identified by the Certificate. Changing this forces a new resource to be created.
         */
        dnsNames?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * A list of email addresses identified by this Certificate. Changing this forces a new resource to be created.
         */
        emails?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * A list of User Principal Names identified by the Certificate. Changing this forces a new resource to be created.
         */
        upns?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface KeyVaultAccessPolicy {
        applicationId?: pulumi.Input<string>;
        certificatePermissions?: pulumi.Input<pulumi.Input<string>[]>;
        keyPermissions?: pulumi.Input<pulumi.Input<string>[]>;
        objectId: pulumi.Input<string>;
        secretPermissions?: pulumi.Input<pulumi.Input<string>[]>;
        storagePermissions?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The Azure Active Directory tenant ID that should be used for authenticating requests to the key vault.
         */
        tenantId: pulumi.Input<string>;
    }

    export interface KeyVaultNetworkAcls {
        bypass: pulumi.Input<string>;
        defaultAction: pulumi.Input<string>;
        ipRules?: pulumi.Input<pulumi.Input<string>[]>;
        virtualNetworkSubnetIds?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface KeyVaultSku {
        /**
         * Specifies the name of the Key Vault. Changing this forces a new resource to be created.
         */
        name?: pulumi.Input<string>;
    }
}

export namespace lb {
    export interface LoadBalancerFrontendIpConfiguration {
        inboundNatRules?: pulumi.Input<pulumi.Input<string>[]>;
        loadBalancerRules?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Specifies the name of the frontend ip configuration.
         */
        name: pulumi.Input<string>;
        outboundRules?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Private IP Address to assign to the Load Balancer. The last one and first four IPs in any range are reserved and cannot be manually assigned.
         */
        privateIpAddress?: pulumi.Input<string>;
        /**
         * The allocation method for the Private IP Address used by this Load Balancer. Possible values as `Dynamic` and `Static`.
         */
        privateIpAddressAllocation?: pulumi.Input<string>;
        /**
         * The ID of a Public IP Address which should be associated with the Load Balancer.
         */
        publicIpAddressId?: pulumi.Input<string>;
        /**
         * The ID of a Public IP Prefix which should be associated with the Load Balancer. Public IP Prefix can only be used with outbound rules.
         */
        publicIpPrefixId?: pulumi.Input<string>;
        /**
         * The ID of the Subnet which should be associated with the IP Configuration.
         */
        subnetId?: pulumi.Input<string>;
        /**
         * A list of Availability Zones which the Load Balancer's IP Addresses should be created in.
         */
        zones?: pulumi.Input<string>;
    }

    export interface OutboundRuleFrontendIpConfiguration {
        /**
         * The ID of the Load Balancer to which the resource is attached.
         */
        id?: pulumi.Input<string>;
        /**
         * Specifies the name of the Outbound Rule. Changing this forces a new resource to be created.
         */
        name: pulumi.Input<string>;
    }
}

export namespace loganalytics {
    export interface LinkedServiceLinkedServiceProperty {
        /**
         * The resource id of the resource that will be linked to the workspace. This field has been deprecated in favour of the top-level `resourceId` field and will be removed in v2.0 of the AzureRM Provider.
         */
        resourceId: pulumi.Input<string>;
    }
}

export namespace mariadb {
    export interface ServerSku {
        capacity: pulumi.Input<number>;
        family: pulumi.Input<string>;
        /**
         * Specifies the name of the MariaDB Server. Changing this forces a new resource to be created.
         */
        name: pulumi.Input<string>;
        tier: pulumi.Input<string>;
    }

    export interface ServerStorageProfile {
        backupRetentionDays?: pulumi.Input<number>;
        geoRedundantBackup?: pulumi.Input<string>;
        storageMb: pulumi.Input<number>;
    }
}

export namespace mediaservices {
    export interface AccountStorageAccount {
        /**
         * The Resource ID of the Media Services Account.
         */
        id: pulumi.Input<string>;
        isPrimary?: pulumi.Input<boolean>;
    }
}

export namespace monitoring {
    export interface ActionGroupEmailReceiver {
        /**
         * The email address of this receiver.
         */
        emailAddress: pulumi.Input<string>;
        /**
         * The name of the webhook receiver. Names must be unique (case-insensitive) across all receivers within an action group.
         */
        name: pulumi.Input<string>;
    }

    export interface ActionGroupSmsReceiver {
        /**
         * The country code of the SMS receiver.
         */
        countryCode: pulumi.Input<string>;
        /**
         * The name of the webhook receiver. Names must be unique (case-insensitive) across all receivers within an action group.
         */
        name: pulumi.Input<string>;
        /**
         * The phone number of the SMS receiver.
         */
        phoneNumber: pulumi.Input<string>;
    }

    export interface ActionGroupWebhookReceiver {
        /**
         * The name of the webhook receiver. Names must be unique (case-insensitive) across all receivers within an action group.
         */
        name: pulumi.Input<string>;
        /**
         * The URI where webhooks should be sent.
         */
        serviceUri: pulumi.Input<string>;
    }

    export interface ActivityLogAlertAction {
        actionGroupId: pulumi.Input<string>;
        webhookProperties?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    }

    export interface ActivityLogAlertCriteria {
        caller?: pulumi.Input<string>;
        category: pulumi.Input<string>;
        level?: pulumi.Input<string>;
        operationName?: pulumi.Input<string>;
        resourceGroup?: pulumi.Input<string>;
        resourceId?: pulumi.Input<string>;
        resourceProvider?: pulumi.Input<string>;
        resourceType?: pulumi.Input<string>;
        status?: pulumi.Input<string>;
        subStatus?: pulumi.Input<string>;
    }

    export interface AlertRuleEmailAction {
        /**
         * A list of email addresses to be notified when the alert is triggered.
         */
        customEmails?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * If `true`, the administrators (service and co-administrators) of the subscription are notified when the alert is triggered. Defaults to `false`.
         */
        sendToServiceOwners?: pulumi.Input<boolean>;
    }

    export interface AlertRuleWebhookAction {
        /**
         * A dictionary of custom properties to include with the webhook POST operation payload.
         */
        properties?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * The service uri of the webhook to POST the notification when the alert is triggered.
         */
        serviceUri: pulumi.Input<string>;
    }

    export interface AutoscaleSettingNotification {
        email?: pulumi.Input<inputs.monitoring.AutoscaleSettingNotificationEmail>;
        webhooks?: pulumi.Input<pulumi.Input<inputs.monitoring.AutoscaleSettingNotificationWebhook>[]>;
    }

    export interface AutoscaleSettingNotificationEmail {
        customEmails?: pulumi.Input<pulumi.Input<string>[]>;
        sendToSubscriptionAdministrator?: pulumi.Input<boolean>;
        sendToSubscriptionCoAdministrator?: pulumi.Input<boolean>;
    }

    export interface AutoscaleSettingNotificationWebhook {
        properties?: pulumi.Input<{[key: string]: any}>;
        serviceUri: pulumi.Input<string>;
    }

    export interface AutoscaleSettingProfile {
        capacity: pulumi.Input<inputs.monitoring.AutoscaleSettingProfileCapacity>;
        fixedDate?: pulumi.Input<inputs.monitoring.AutoscaleSettingProfileFixedDate>;
        /**
         * The name of the AutoScale Setting. Changing this forces a new resource to be created.
         */
        name: pulumi.Input<string>;
        recurrence?: pulumi.Input<inputs.monitoring.AutoscaleSettingProfileRecurrence>;
        rules?: pulumi.Input<pulumi.Input<inputs.monitoring.AutoscaleSettingProfileRule>[]>;
    }

    export interface AutoscaleSettingProfileCapacity {
        default: pulumi.Input<number>;
        maximum: pulumi.Input<number>;
        minimum: pulumi.Input<number>;
    }

    export interface AutoscaleSettingProfileFixedDate {
        end: pulumi.Input<string>;
        start: pulumi.Input<string>;
        timezone?: pulumi.Input<string>;
    }

    export interface AutoscaleSettingProfileRecurrence {
        days: pulumi.Input<pulumi.Input<string>[]>;
        hours: pulumi.Input<number>;
        minutes: pulumi.Input<number>;
        timezone?: pulumi.Input<string>;
    }

    export interface AutoscaleSettingProfileRule {
        metricTrigger: pulumi.Input<inputs.monitoring.AutoscaleSettingProfileRuleMetricTrigger>;
        scaleAction: pulumi.Input<inputs.monitoring.AutoscaleSettingProfileRuleScaleAction>;
    }

    export interface AutoscaleSettingProfileRuleMetricTrigger {
        metricName: pulumi.Input<string>;
        metricResourceId: pulumi.Input<string>;
        operator: pulumi.Input<string>;
        statistic: pulumi.Input<string>;
        threshold: pulumi.Input<number>;
        timeAggregation: pulumi.Input<string>;
        timeGrain: pulumi.Input<string>;
        timeWindow: pulumi.Input<string>;
    }

    export interface AutoscaleSettingProfileRuleScaleAction {
        cooldown: pulumi.Input<string>;
        direction: pulumi.Input<string>;
        type: pulumi.Input<string>;
        value: pulumi.Input<number>;
    }

    export interface DiagnosticSettingLog {
        category: pulumi.Input<string>;
        enabled?: pulumi.Input<boolean>;
        retentionPolicy: pulumi.Input<inputs.monitoring.DiagnosticSettingLogRetentionPolicy>;
    }

    export interface DiagnosticSettingLogRetentionPolicy {
        days?: pulumi.Input<number>;
        enabled: pulumi.Input<boolean>;
    }

    export interface DiagnosticSettingMetric {
        category: pulumi.Input<string>;
        enabled?: pulumi.Input<boolean>;
        retentionPolicy: pulumi.Input<inputs.monitoring.DiagnosticSettingMetricRetentionPolicy>;
    }

    export interface DiagnosticSettingMetricRetentionPolicy {
        days?: pulumi.Input<number>;
        enabled: pulumi.Input<boolean>;
    }

    export interface LogProfileRetentionPolicy {
        days?: pulumi.Input<number>;
        enabled: pulumi.Input<boolean>;
    }

    export interface MetricAlertAction {
        actionGroupId: pulumi.Input<string>;
        webhookProperties?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    }

    export interface MetricAlertCriteria {
        aggregation: pulumi.Input<string>;
        dimensions?: pulumi.Input<pulumi.Input<inputs.monitoring.MetricAlertCriteriaDimension>[]>;
        metricName: pulumi.Input<string>;
        metricNamespace: pulumi.Input<string>;
        operator: pulumi.Input<string>;
        threshold: pulumi.Input<number>;
    }

    export interface MetricAlertCriteriaDimension {
        /**
         * The name of the Metric Alert. Changing this forces a new resource to be created.
         */
        name: pulumi.Input<string>;
        operator: pulumi.Input<string>;
        values: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface MetricAlertRuleEmailAction {
        /**
         * A list of email addresses to be notified when the alert is triggered.
         */
        customEmails?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * If `true`, the administrators (service and co-administrators) of the subscription are notified when the alert is triggered. Defaults to `false`.
         */
        sendToServiceOwners?: pulumi.Input<boolean>;
    }

    export interface MetricAlertRuleWebhookAction {
        /**
         * A dictionary of custom properties to include with the webhook POST operation payload.
         */
        properties?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * The service uri of the webhook to POST the notification when the alert is triggered.
         */
        serviceUri: pulumi.Input<string>;
    }
}

export namespace mssql {
    export interface ElasticPoolElasticPoolProperties {
        creationDate?: pulumi.Input<string>;
        licenseType?: pulumi.Input<string>;
        /**
         * The max data size of the elastic pool in bytes. Conflicts with `maxSizeGb`.
         */
        maxSizeBytes?: pulumi.Input<number>;
        state?: pulumi.Input<string>;
        /**
         * Whether or not this elastic pool is zone redundant. `tier` needs to be `Premium` for `DTU` based  or `BusinessCritical` for `vCore` based `sku`. Defaults to `false`.
         */
        zoneRedundant?: pulumi.Input<boolean>;
    }

    export interface ElasticPoolPerDatabaseSettings {
        /**
         * The maximum capacity any one database can consume.
         */
        maxCapacity: pulumi.Input<number>;
        /**
         * The minimum capacity all databases are guaranteed.
         */
        minCapacity: pulumi.Input<number>;
    }

    export interface ElasticPoolSku {
        /**
         * The scale up/out capacity, representing server's compute units. For more information see the documentation for your Elasticpool configuration: [vCore-based](https://docs.microsoft.com/en-us/azure/sql-database/sql-database-vcore-resource-limits-elastic-pools) or [DTU-based](https://docs.microsoft.com/en-us/azure/sql-database/sql-database-dtu-resource-limits-elastic-pools).
         */
        capacity: pulumi.Input<number>;
        /**
         * The `family` of hardware `Gen4` or `Gen5`.
         */
        family?: pulumi.Input<string>;
        /**
         * Specifies the SKU Name for this Elasticpool. The name of the SKU, will be either `vCore` based `tier` + `family` pattern (e.g. GP_Gen4, BC_Gen5) or the `DTU` based `BasicPool`, `StandardPool`, or `PremiumPool` pattern. 
         */
        name: pulumi.Input<string>;
        /**
         * The tier of the particular SKU. Possible values are `GeneralPurpose`, `BusinessCritical`, `Basic`, `Standard`, or `Premium`. For more information see the documentation for your Elasticpool configuration: [vCore-based](https://docs.microsoft.com/en-us/azure/sql-database/sql-database-vcore-resource-limits-elastic-pools) or [DTU-based](https://docs.microsoft.com/en-us/azure/sql-database/sql-database-dtu-resource-limits-elastic-pools).
         */
        tier: pulumi.Input<string>;
    }
}

export namespace mysql {
    export interface ServerSku {
        /**
         * The scale up/out capacity, representing server's compute units.
         */
        capacity: pulumi.Input<number>;
        /**
         * The `family` of hardware `Gen4` or `Gen5`, before selecting your `family` check the [product documentation](https://docs.microsoft.com/en-us/azure/mysql/concepts-pricing-tiers#compute-generations-vcores-and-memory) for availability in your region.
         */
        family: pulumi.Input<string>;
        /**
         * Specifies the SKU Name for this MySQL Server. The name of the SKU, follows the `tier` + `family` + `cores` pattern (e.g. B_Gen4_1, GP_Gen5_8). For more information see the [product documentation](https://docs.microsoft.com/en-us/rest/api/mysql/servers/create#sku).
         */
        name: pulumi.Input<string>;
        /**
         * The tier of the particular SKU. Possible values are `Basic`, `GeneralPurpose`, and `MemoryOptimized`. For more information see the [product documentation](https://docs.microsoft.com/en-us/azure/mysql/concepts-pricing-tiers).
         */
        tier: pulumi.Input<string>;
    }

    export interface ServerStorageProfile {
        /**
         * Backup retention days for the server, supported values are between `7` and `35` days.
         */
        backupRetentionDays?: pulumi.Input<number>;
        /**
         * Enable Geo-redundant or not for server backup. Valid values for this property are `Enabled` or `Disabled`, not supported for the `basic` tier.
         */
        geoRedundantBackup?: pulumi.Input<string>;
        /**
         * Max storage allowed for a server. Possible values are between `5120` MB(5GB) and `1048576` MB(1TB) for the Basic SKU and between `5120` MB(5GB) and `4194304` MB(4TB) for General Purpose/Memory Optimized SKUs. For more information see the [product documentation](https://docs.microsoft.com/en-us/rest/api/mysql/servers/create#StorageProfile).
         */
        storageMb: pulumi.Input<number>;
    }
}

export namespace network {
    export interface ApplicationGatewayAuthenticationCertificate {
        data: pulumi.Input<string>;
        /**
         * The ID of the Rewrite Rule Set
         */
        id?: pulumi.Input<string>;
        /**
         * The name of the Application Gateway. Changing this forces a new resource to be created.
         */
        name: pulumi.Input<string>;
    }

    export interface ApplicationGatewayAutoscaleConfiguration {
        maxCapacity?: pulumi.Input<number>;
        minCapacity: pulumi.Input<number>;
    }

    export interface ApplicationGatewayBackendAddressPool {
        fqdnLists?: pulumi.Input<pulumi.Input<string>[]>;
        fqdns?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The ID of the Rewrite Rule Set
         */
        id?: pulumi.Input<string>;
        ipAddressLists?: pulumi.Input<pulumi.Input<string>[]>;
        ipAddresses?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The name of the Application Gateway. Changing this forces a new resource to be created.
         */
        name: pulumi.Input<string>;
    }

    export interface ApplicationGatewayBackendHttpSetting {
        affinityCookieName?: pulumi.Input<string>;
        /**
         * One or more `authenticationCertificate` blocks as defined below.
         */
        authenticationCertificates?: pulumi.Input<pulumi.Input<inputs.network.ApplicationGatewayBackendHttpSettingAuthenticationCertificate>[]>;
        connectionDraining?: pulumi.Input<inputs.network.ApplicationGatewayBackendHttpSettingConnectionDraining>;
        cookieBasedAffinity: pulumi.Input<string>;
        hostName?: pulumi.Input<string>;
        /**
         * The ID of the Rewrite Rule Set
         */
        id?: pulumi.Input<string>;
        /**
         * The name of the Application Gateway. Changing this forces a new resource to be created.
         */
        name: pulumi.Input<string>;
        path?: pulumi.Input<string>;
        pickHostNameFromBackendAddress?: pulumi.Input<boolean>;
        port: pulumi.Input<number>;
        /**
         * The ID of the associated Probe.
         */
        probeId?: pulumi.Input<string>;
        probeName?: pulumi.Input<string>;
        protocol: pulumi.Input<string>;
        requestTimeout?: pulumi.Input<number>;
    }

    export interface ApplicationGatewayBackendHttpSettingAuthenticationCertificate {
        /**
         * The ID of the Rewrite Rule Set
         */
        id?: pulumi.Input<string>;
        /**
         * The name of the Application Gateway. Changing this forces a new resource to be created.
         */
        name: pulumi.Input<string>;
    }

    export interface ApplicationGatewayBackendHttpSettingConnectionDraining {
        drainTimeoutSec: pulumi.Input<number>;
        enabled: pulumi.Input<boolean>;
    }

    export interface ApplicationGatewayCustomErrorConfiguration {
        customErrorPageUrl: pulumi.Input<string>;
        /**
         * The ID of the Rewrite Rule Set
         */
        id?: pulumi.Input<string>;
        statusCode: pulumi.Input<string>;
    }

    export interface ApplicationGatewayFrontendIpConfiguration {
        /**
         * The ID of the Rewrite Rule Set
         */
        id?: pulumi.Input<string>;
        /**
         * The name of the Application Gateway. Changing this forces a new resource to be created.
         */
        name: pulumi.Input<string>;
        privateIpAddress?: pulumi.Input<string>;
        privateIpAddressAllocation?: pulumi.Input<string>;
        publicIpAddressId?: pulumi.Input<string>;
        subnetId?: pulumi.Input<string>;
    }

    export interface ApplicationGatewayFrontendPort {
        /**
         * The ID of the Rewrite Rule Set
         */
        id?: pulumi.Input<string>;
        /**
         * The name of the Application Gateway. Changing this forces a new resource to be created.
         */
        name: pulumi.Input<string>;
        port: pulumi.Input<number>;
    }

    export interface ApplicationGatewayGatewayIpConfiguration {
        /**
         * The ID of the Rewrite Rule Set
         */
        id?: pulumi.Input<string>;
        /**
         * The name of the Application Gateway. Changing this forces a new resource to be created.
         */
        name: pulumi.Input<string>;
        subnetId: pulumi.Input<string>;
    }

    export interface ApplicationGatewayHttpListener {
        /**
         * One or more `customErrorConfiguration` blocks as defined below.
         */
        customErrorConfigurations?: pulumi.Input<pulumi.Input<inputs.network.ApplicationGatewayHttpListenerCustomErrorConfiguration>[]>;
        /**
         * The ID of the associated Frontend Configuration.
         */
        frontendIpConfigurationId?: pulumi.Input<string>;
        frontendIpConfigurationName: pulumi.Input<string>;
        /**
         * The ID of the associated Frontend Port.
         */
        frontendPortId?: pulumi.Input<string>;
        frontendPortName: pulumi.Input<string>;
        hostName?: pulumi.Input<string>;
        /**
         * The ID of the Rewrite Rule Set
         */
        id?: pulumi.Input<string>;
        /**
         * The name of the Application Gateway. Changing this forces a new resource to be created.
         */
        name: pulumi.Input<string>;
        protocol: pulumi.Input<string>;
        requireSni?: pulumi.Input<boolean>;
        /**
         * The ID of the associated SSL Certificate.
         */
        sslCertificateId?: pulumi.Input<string>;
        sslCertificateName?: pulumi.Input<string>;
    }

    export interface ApplicationGatewayHttpListenerCustomErrorConfiguration {
        customErrorPageUrl: pulumi.Input<string>;
        /**
         * The ID of the Rewrite Rule Set
         */
        id?: pulumi.Input<string>;
        statusCode: pulumi.Input<string>;
    }

    export interface ApplicationGatewayIdentity {
        identityIds: pulumi.Input<string>;
        type?: pulumi.Input<string>;
    }

    export interface ApplicationGatewayProbe {
        host?: pulumi.Input<string>;
        /**
         * The ID of the Rewrite Rule Set
         */
        id?: pulumi.Input<string>;
        interval: pulumi.Input<number>;
        match?: pulumi.Input<inputs.network.ApplicationGatewayProbeMatch>;
        minimumServers?: pulumi.Input<number>;
        /**
         * The name of the Application Gateway. Changing this forces a new resource to be created.
         */
        name: pulumi.Input<string>;
        path: pulumi.Input<string>;
        pickHostNameFromBackendHttpSettings?: pulumi.Input<boolean>;
        protocol: pulumi.Input<string>;
        timeout: pulumi.Input<number>;
        unhealthyThreshold: pulumi.Input<number>;
    }

    export interface ApplicationGatewayProbeMatch {
        body?: pulumi.Input<string>;
        statusCodes?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface ApplicationGatewayRedirectConfiguration {
        /**
         * The ID of the Rewrite Rule Set
         */
        id?: pulumi.Input<string>;
        includePath?: pulumi.Input<boolean>;
        includeQueryString?: pulumi.Input<boolean>;
        /**
         * The name of the Application Gateway. Changing this forces a new resource to be created.
         */
        name: pulumi.Input<string>;
        redirectType: pulumi.Input<string>;
        targetListenerId?: pulumi.Input<string>;
        targetListenerName?: pulumi.Input<string>;
        targetUrl?: pulumi.Input<string>;
    }

    export interface ApplicationGatewayRequestRoutingRule {
        /**
         * The ID of the associated Backend Address Pool.
         */
        backendAddressPoolId?: pulumi.Input<string>;
        backendAddressPoolName?: pulumi.Input<string>;
        /**
         * The ID of the associated Backend HTTP Settings Configuration.
         */
        backendHttpSettingsId?: pulumi.Input<string>;
        backendHttpSettingsName?: pulumi.Input<string>;
        /**
         * The ID of the associated HTTP Listener.
         */
        httpListenerId?: pulumi.Input<string>;
        httpListenerName: pulumi.Input<string>;
        /**
         * The ID of the Rewrite Rule Set
         */
        id?: pulumi.Input<string>;
        /**
         * The name of the Application Gateway. Changing this forces a new resource to be created.
         */
        name: pulumi.Input<string>;
        /**
         * The ID of the associated Redirect Configuration.
         */
        redirectConfigurationId?: pulumi.Input<string>;
        redirectConfigurationName?: pulumi.Input<string>;
        /**
         * The ID of the associated Rewrite Rule Set.
         */
        rewriteRuleSetId?: pulumi.Input<string>;
        rewriteRuleSetName?: pulumi.Input<string>;
        ruleType: pulumi.Input<string>;
        /**
         * The ID of the associated URL Path Map.
         */
        urlPathMapId?: pulumi.Input<string>;
        urlPathMapName?: pulumi.Input<string>;
    }

    export interface ApplicationGatewayRewriteRuleSet {
        /**
         * The ID of the Rewrite Rule Set
         */
        id?: pulumi.Input<string>;
        /**
         * The name of the Application Gateway. Changing this forces a new resource to be created.
         */
        name: pulumi.Input<string>;
        rewriteRules?: pulumi.Input<pulumi.Input<inputs.network.ApplicationGatewayRewriteRuleSetRewriteRule>[]>;
    }

    export interface ApplicationGatewayRewriteRuleSetRewriteRule {
        conditions?: pulumi.Input<pulumi.Input<inputs.network.ApplicationGatewayRewriteRuleSetRewriteRuleCondition>[]>;
        /**
         * The name of the Application Gateway. Changing this forces a new resource to be created.
         */
        name: pulumi.Input<string>;
        requestHeaderConfigurations?: pulumi.Input<pulumi.Input<inputs.network.ApplicationGatewayRewriteRuleSetRewriteRuleRequestHeaderConfiguration>[]>;
        responseHeaderConfigurations?: pulumi.Input<pulumi.Input<inputs.network.ApplicationGatewayRewriteRuleSetRewriteRuleResponseHeaderConfiguration>[]>;
        ruleSequence: pulumi.Input<number>;
    }

    export interface ApplicationGatewayRewriteRuleSetRewriteRuleCondition {
        ignoreCase?: pulumi.Input<boolean>;
        negate?: pulumi.Input<boolean>;
        pattern: pulumi.Input<string>;
        variable: pulumi.Input<string>;
    }

    export interface ApplicationGatewayRewriteRuleSetRewriteRuleRequestHeaderConfiguration {
        headerName: pulumi.Input<string>;
        headerValue: pulumi.Input<string>;
    }

    export interface ApplicationGatewayRewriteRuleSetRewriteRuleResponseHeaderConfiguration {
        headerName: pulumi.Input<string>;
        headerValue: pulumi.Input<string>;
    }

    export interface ApplicationGatewaySku {
        capacity?: pulumi.Input<number>;
        /**
         * The name of the Application Gateway. Changing this forces a new resource to be created.
         */
        name: pulumi.Input<string>;
        tier: pulumi.Input<string>;
    }

    export interface ApplicationGatewaySslCertificate {
        data: pulumi.Input<string>;
        /**
         * The ID of the Rewrite Rule Set
         */
        id?: pulumi.Input<string>;
        /**
         * The name of the Application Gateway. Changing this forces a new resource to be created.
         */
        name: pulumi.Input<string>;
        password: pulumi.Input<string>;
        /**
         * The Public Certificate Data associated with the SSL Certificate.
         */
        publicCertData?: pulumi.Input<string>;
    }

    export interface ApplicationGatewaySslPolicy {
        cipherSuites?: pulumi.Input<pulumi.Input<string>[]>;
        disabledProtocols?: pulumi.Input<pulumi.Input<string>[]>;
        minProtocolVersion?: pulumi.Input<string>;
        policyName?: pulumi.Input<string>;
        policyType?: pulumi.Input<string>;
    }

    export interface ApplicationGatewayUrlPathMap {
        /**
         * The ID of the Default Backend Address Pool.
         */
        defaultBackendAddressPoolId?: pulumi.Input<string>;
        defaultBackendAddressPoolName?: pulumi.Input<string>;
        /**
         * The ID of the Default Backend HTTP Settings Collection.
         */
        defaultBackendHttpSettingsId?: pulumi.Input<string>;
        defaultBackendHttpSettingsName?: pulumi.Input<string>;
        /**
         * The ID of the Default Redirect Configuration.
         */
        defaultRedirectConfigurationId?: pulumi.Input<string>;
        defaultRedirectConfigurationName?: pulumi.Input<string>;
        defaultRewriteRuleSetId?: pulumi.Input<string>;
        defaultRewriteRuleSetName?: pulumi.Input<string>;
        /**
         * The ID of the Rewrite Rule Set
         */
        id?: pulumi.Input<string>;
        /**
         * The name of the Application Gateway. Changing this forces a new resource to be created.
         */
        name: pulumi.Input<string>;
        /**
         * A list of `pathRule` blocks as defined above.
         */
        pathRules: pulumi.Input<pulumi.Input<inputs.network.ApplicationGatewayUrlPathMapPathRule>[]>;
    }

    export interface ApplicationGatewayUrlPathMapPathRule {
        /**
         * The ID of the associated Backend Address Pool.
         */
        backendAddressPoolId?: pulumi.Input<string>;
        backendAddressPoolName?: pulumi.Input<string>;
        /**
         * The ID of the associated Backend HTTP Settings Configuration.
         */
        backendHttpSettingsId?: pulumi.Input<string>;
        backendHttpSettingsName?: pulumi.Input<string>;
        /**
         * The ID of the Rewrite Rule Set
         */
        id?: pulumi.Input<string>;
        /**
         * The name of the Application Gateway. Changing this forces a new resource to be created.
         */
        name: pulumi.Input<string>;
        paths: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The ID of the associated Redirect Configuration.
         */
        redirectConfigurationId?: pulumi.Input<string>;
        redirectConfigurationName?: pulumi.Input<string>;
        /**
         * The ID of the associated Rewrite Rule Set.
         */
        rewriteRuleSetId?: pulumi.Input<string>;
        rewriteRuleSetName?: pulumi.Input<string>;
    }

    export interface ApplicationGatewayWafConfiguration {
        disabledRuleGroups?: pulumi.Input<pulumi.Input<inputs.network.ApplicationGatewayWafConfigurationDisabledRuleGroup>[]>;
        enabled: pulumi.Input<boolean>;
        exclusions?: pulumi.Input<pulumi.Input<inputs.network.ApplicationGatewayWafConfigurationExclusion>[]>;
        fileUploadLimitMb?: pulumi.Input<number>;
        firewallMode: pulumi.Input<string>;
        maxRequestBodySizeKb?: pulumi.Input<number>;
        requestBodyCheck?: pulumi.Input<boolean>;
        ruleSetType?: pulumi.Input<string>;
        ruleSetVersion: pulumi.Input<string>;
    }

    export interface ApplicationGatewayWafConfigurationDisabledRuleGroup {
        ruleGroupName: pulumi.Input<string>;
        rules?: pulumi.Input<pulumi.Input<number>[]>;
    }

    export interface ApplicationGatewayWafConfigurationExclusion {
        matchVariable: pulumi.Input<string>;
        selector?: pulumi.Input<string>;
        selectorMatchOperator?: pulumi.Input<string>;
    }

    export interface ConnectionMonitorDestination {
        address?: pulumi.Input<string>;
        port: pulumi.Input<number>;
        virtualMachineId?: pulumi.Input<string>;
    }

    export interface ConnectionMonitorSource {
        port?: pulumi.Input<number>;
        virtualMachineId: pulumi.Input<string>;
    }

    export interface ExpressRouteCircuitPeeringMicrosoftPeeringConfig {
        advertisedPublicPrefixes: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface ExpressRouteCircuitSku {
        /**
         * The billing mode for bandwidth. Possible values are `MeteredData` or `UnlimitedData`.
         */
        family: pulumi.Input<string>;
        /**
         * The service tier. Possible values are `Standard` or `Premium`.
         */
        tier: pulumi.Input<string>;
    }

    export interface FirewallApplicationRuleCollectionRule {
        description?: pulumi.Input<string>;
        fqdnTags?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Specifies the name of the Application Rule Collection which must be unique within the Firewall. Changing this forces a new resource to be created.
         */
        name: pulumi.Input<string>;
        protocols?: pulumi.Input<pulumi.Input<inputs.network.FirewallApplicationRuleCollectionRuleProtocol>[]>;
        sourceAddresses: pulumi.Input<pulumi.Input<string>[]>;
        targetFqdns?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface FirewallApplicationRuleCollectionRuleProtocol {
        port?: pulumi.Input<number>;
        type: pulumi.Input<string>;
    }

    export interface FirewallIpConfiguration {
        internalPublicIpAddressId?: pulumi.Input<string>;
        /**
         * Specifies the name of the Firewall. Changing this forces a new resource to be created.
         */
        name: pulumi.Input<string>;
        /**
         * The private IP address of the Azure Firewall.
         */
        privateIpAddress?: pulumi.Input<string>;
        publicIpAddressId?: pulumi.Input<string>;
        subnetId: pulumi.Input<string>;
    }

    export interface FirewallNatRuleCollectionRule {
        description?: pulumi.Input<string>;
        destinationAddresses: pulumi.Input<pulumi.Input<string>[]>;
        destinationPorts: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Specifies the name of the NAT Rule Collection which must be unique within the Firewall. Changing this forces a new resource to be created.
         */
        name: pulumi.Input<string>;
        protocols: pulumi.Input<pulumi.Input<string>[]>;
        sourceAddresses: pulumi.Input<pulumi.Input<string>[]>;
        translatedAddress: pulumi.Input<string>;
        translatedPort: pulumi.Input<string>;
    }

    export interface FirewallNetworkRuleCollectionRule {
        description?: pulumi.Input<string>;
        destinationAddresses: pulumi.Input<pulumi.Input<string>[]>;
        destinationPorts: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Specifies the name of the Network Rule Collection which must be unique within the Firewall. Changing this forces a new resource to be created.
         */
        name: pulumi.Input<string>;
        protocols: pulumi.Input<pulumi.Input<string>[]>;
        sourceAddresses: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface LocalNetworkGatewayBgpSettings {
        /**
         * The BGP speaker's ASN.
         */
        asn: pulumi.Input<number>;
        /**
         * The BGP peering address and BGP identifier
         * of this BGP speaker.
         */
        bgpPeeringAddress: pulumi.Input<string>;
        /**
         * The weight added to routes learned from this
         * BGP speaker.
         */
        peerWeight?: pulumi.Input<number>;
    }

    export interface NetworkConnectionMonitorDestination {
        address?: pulumi.Input<string>;
        port: pulumi.Input<number>;
        virtualMachineId?: pulumi.Input<string>;
    }

    export interface NetworkConnectionMonitorSource {
        port?: pulumi.Input<number>;
        virtualMachineId: pulumi.Input<string>;
    }

    export interface NetworkInterfaceIpConfiguration {
        applicationGatewayBackendAddressPoolsIds?: pulumi.Input<pulumi.Input<string>[]>;
        applicationSecurityGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
        loadBalancerBackendAddressPoolsIds?: pulumi.Input<pulumi.Input<string>[]>;
        loadBalancerInboundNatRulesIds?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The name of the network interface. Changing this forces a new resource to be created.
         */
        name: pulumi.Input<string>;
        primary?: pulumi.Input<boolean>;
        /**
         * The first private IP address of the network interface.
         */
        privateIpAddress?: pulumi.Input<string>;
        privateIpAddressAllocation: pulumi.Input<string>;
        privateIpAddressVersion?: pulumi.Input<string>;
        publicIpAddressId?: pulumi.Input<string>;
        subnetId?: pulumi.Input<string>;
    }

    export interface NetworkPacketCaptureFilter {
        localIpAddress?: pulumi.Input<string>;
        localPort?: pulumi.Input<string>;
        protocol: pulumi.Input<string>;
        remoteIpAddress?: pulumi.Input<string>;
        remotePort?: pulumi.Input<string>;
    }

    export interface NetworkPacketCaptureStorageLocation {
        filePath?: pulumi.Input<string>;
        storageAccountId?: pulumi.Input<string>;
        /**
         * The URI of the storage path to save the packet capture.
         */
        storagePath?: pulumi.Input<string>;
    }

    export interface NetworkSecurityGroupSecurityRule {
        /**
         * Specifies whether network traffic is allowed or denied. Possible values are `Allow` and `Deny`.
         */
        access: pulumi.Input<string>;
        /**
         * A description for this rule. Restricted to 140 characters.
         */
        description?: pulumi.Input<string>;
        /**
         * CIDR or destination IP range or * to match any IP. Tags such as ‘VirtualNetwork’, ‘AzureLoadBalancer’ and ‘Internet’ can also be used. This is required if `destinationAddressPrefixes` is not specified.
         */
        destinationAddressPrefix?: pulumi.Input<string>;
        /**
         * List of destination address prefixes. Tags may not be used. This is required if `destinationAddressPrefix` is not specified.
         */
        destinationAddressPrefixes?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * A List of destination Application Security Group ID's
         */
        destinationApplicationSecurityGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Destination Port or Range. Integer or range between `0` and `65535` or `*` to match any. This is required if `destinationPortRanges` is not specified.
         */
        destinationPortRange?: pulumi.Input<string>;
        /**
         * List of destination ports or port ranges. This is required if `destinationPortRange` is not specified.
         */
        destinationPortRanges?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The direction specifies if rule will be evaluated on incoming or outgoing traffic. Possible values are `Inbound` and `Outbound`.
         */
        direction: pulumi.Input<string>;
        /**
         * The name of the security rule.
         */
        name: pulumi.Input<string>;
        /**
         * Specifies the priority of the rule. The value can be between 100 and 4096. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule.
         */
        priority: pulumi.Input<number>;
        /**
         * Network protocol this rule applies to. Can be `Tcp`, `Udp` or `*` to match both.
         */
        protocol: pulumi.Input<string>;
        /**
         * CIDR or source IP range or * to match any IP. Tags such as ‘VirtualNetwork’, ‘AzureLoadBalancer’ and ‘Internet’ can also be used. This is required if `sourceAddressPrefixes` is not specified.
         */
        sourceAddressPrefix?: pulumi.Input<string>;
        /**
         * List of source address prefixes. Tags may not be used. This is required if `sourceAddressPrefix` is not specified.
         */
        sourceAddressPrefixes?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * A List of source Application Security Group ID's
         */
        sourceApplicationSecurityGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Source Port or Range. Integer or range between `0` and `65535` or `*` to match any. This is required if `sourcePortRanges` is not specified.
         */
        sourcePortRange?: pulumi.Input<string>;
        /**
         * List of source ports or port ranges. This is required if `sourcePortRange` is not specified.
         */
        sourcePortRanges?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface PacketCaptureFilter {
        localIpAddress?: pulumi.Input<string>;
        localPort?: pulumi.Input<string>;
        protocol: pulumi.Input<string>;
        remoteIpAddress?: pulumi.Input<string>;
        remotePort?: pulumi.Input<string>;
    }

    export interface PacketCaptureStorageLocation {
        filePath?: pulumi.Input<string>;
        storageAccountId?: pulumi.Input<string>;
        /**
         * The URI of the storage path to save the packet capture.
         */
        storagePath?: pulumi.Input<string>;
    }

    export interface ProfileContainerNetworkInterface {
        ipConfigurations: pulumi.Input<pulumi.Input<inputs.network.ProfileContainerNetworkInterfaceIpConfiguration>[]>;
        /**
         * Specifies the name of the Network Profile. Changing this forces a new resource to be created.
         */
        name: pulumi.Input<string>;
    }

    export interface ProfileContainerNetworkInterfaceIpConfiguration {
        /**
         * Specifies the name of the Network Profile. Changing this forces a new resource to be created.
         */
        name: pulumi.Input<string>;
        subnetId: pulumi.Input<string>;
    }

    export interface RouteTableRoute {
        /**
         * The destination CIDR to which the route applies, such as 10.1.0.0/16
         */
        addressPrefix: pulumi.Input<string>;
        /**
         * The name of the route.
         */
        name: pulumi.Input<string>;
        /**
         * Contains the IP address packets should be forwarded to. Next hop values are only allowed in routes where the next hop type is `VirtualAppliance`.
         */
        nextHopInIpAddress?: pulumi.Input<string>;
        /**
         * The type of Azure hop the packet should be sent to. Possible values are `VirtualNetworkGateway`, `VnetLocal`, `Internet`, `VirtualAppliance` and `None`.
         */
        nextHopType: pulumi.Input<string>;
    }

    export interface SubnetDelegation {
        /**
         * The name of the subnet. Changing this forces a new resource to be created.
         */
        name: pulumi.Input<string>;
        serviceDelegation: pulumi.Input<inputs.network.SubnetDelegationServiceDelegation>;
    }

    export interface SubnetDelegationServiceDelegation {
        actions?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The name of the subnet. Changing this forces a new resource to be created.
         */
        name: pulumi.Input<string>;
    }

    export interface TrafficManagerEndpointCustomHeader {
        /**
         * The name of the Traffic Manager endpoint. Changing this forces a
         * new resource to be created.
         */
        name: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

    export interface TrafficManagerEndpointSubnet {
        first: pulumi.Input<string>;
        last?: pulumi.Input<string>;
        scope?: pulumi.Input<number>;
    }

    export interface TrafficManagerProfileDnsConfig {
        relativeName: pulumi.Input<string>;
        ttl: pulumi.Input<number>;
    }

    export interface TrafficManagerProfileMonitorConfig {
        intervalInSeconds?: pulumi.Input<number>;
        path?: pulumi.Input<string>;
        port: pulumi.Input<number>;
        protocol: pulumi.Input<string>;
        timeoutInSeconds?: pulumi.Input<number>;
        toleratedNumberOfFailures?: pulumi.Input<number>;
    }

    export interface VirtualNetworkDdosProtectionPlan {
        enable: pulumi.Input<boolean>;
        /**
         * The ID of this subnet.
         */
        id: pulumi.Input<string>;
    }

    export interface VirtualNetworkGatewayBgpSettings {
        asn?: pulumi.Input<number>;
        peerWeight?: pulumi.Input<number>;
        peeringAddress?: pulumi.Input<string>;
    }

    export interface VirtualNetworkGatewayConnectionIpsecPolicy {
        dhGroup: pulumi.Input<string>;
        ikeEncryption: pulumi.Input<string>;
        ikeIntegrity: pulumi.Input<string>;
        ipsecEncryption: pulumi.Input<string>;
        ipsecIntegrity: pulumi.Input<string>;
        pfsGroup: pulumi.Input<string>;
        saDatasize?: pulumi.Input<number>;
        saLifetime?: pulumi.Input<number>;
    }

    export interface VirtualNetworkGatewayIpConfiguration {
        /**
         * The name of the Virtual Network Gateway. Changing the name
         * forces a new resource to be created.
         */
        name?: pulumi.Input<string>;
        privateIpAddressAllocation?: pulumi.Input<string>;
        publicIpAddressId?: pulumi.Input<string>;
        subnetId: pulumi.Input<string>;
    }

    export interface VirtualNetworkGatewayVpnClientConfiguration {
        addressSpaces: pulumi.Input<pulumi.Input<string>[]>;
        radiusServerAddress?: pulumi.Input<string>;
        radiusServerSecret?: pulumi.Input<string>;
        revokedCertificates?: pulumi.Input<pulumi.Input<inputs.network.VirtualNetworkGatewayVpnClientConfigurationRevokedCertificate>[]>;
        rootCertificates?: pulumi.Input<pulumi.Input<inputs.network.VirtualNetworkGatewayVpnClientConfigurationRootCertificate>[]>;
        vpnClientProtocols?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface VirtualNetworkGatewayVpnClientConfigurationRevokedCertificate {
        /**
         * The name of the Virtual Network Gateway. Changing the name
         * forces a new resource to be created.
         */
        name: pulumi.Input<string>;
        thumbprint: pulumi.Input<string>;
    }

    export interface VirtualNetworkGatewayVpnClientConfigurationRootCertificate {
        /**
         * The name of the Virtual Network Gateway. Changing the name
         * forces a new resource to be created.
         */
        name: pulumi.Input<string>;
        publicCertData: pulumi.Input<string>;
    }

    export interface VirtualNetworkSubnet {
        addressPrefix: pulumi.Input<string>;
        /**
         * The ID of this subnet.
         */
        id?: pulumi.Input<string>;
        /**
         * The name of the virtual network. Changing this forces a
         * new resource to be created.
         */
        name: pulumi.Input<string>;
        securityGroup?: pulumi.Input<string>;
    }
}

export namespace notificationhub {
    export interface HubApnsCredential {
        applicationMode: pulumi.Input<string>;
        bundleId: pulumi.Input<string>;
        keyId: pulumi.Input<string>;
        teamId: pulumi.Input<string>;
        token: pulumi.Input<string>;
    }

    export interface HubGcmCredential {
        apiKey: pulumi.Input<string>;
    }

    export interface NamespaceSku {
        /**
         * The name to use for this Notification Hub Namespace. Changing this forces a new resource to be created.
         */
        name: pulumi.Input<string>;
    }
}

export namespace operationalinsights {
    export interface AnalyticsSolutionPlan {
        name?: pulumi.Input<string>;
        product: pulumi.Input<string>;
        promotionCode?: pulumi.Input<string>;
        publisher: pulumi.Input<string>;
    }

    export interface AnalyticsWorkspaceLinkedServiceLinkedServiceProperty {
        /**
         * The resource id of the resource that will be linked to the workspace. This field has been deprecated in favour of the top-level `resourceId` field and will be removed in v2.0 of the AzureRM Provider.
         */
        resourceId: pulumi.Input<string>;
    }
}

export namespace policy {
    export interface AssignmentIdentity {
        /**
         * The Principal ID of this Policy Assignment if `type` is `SystemAssigned`.
         */
        principalId?: pulumi.Input<string>;
        /**
         * The Tenant ID of this Policy Assignment if `type` is `SystemAssigned`.
         */
        tenantId?: pulumi.Input<string>;
        type?: pulumi.Input<string>;
    }
}

export namespace postgresql {
    export interface ServerSku {
        /**
         * The scale up/out capacity, representing server's compute units.
         */
        capacity: pulumi.Input<number>;
        /**
         * The `family` of hardware `Gen4` or `Gen5`, before selecting your `family` check the [product documentation](https://docs.microsoft.com/en-us/azure/postgresql/concepts-pricing-tiers#compute-generations-vcores-and-memory) for availability in your region.
         */
        family: pulumi.Input<string>;
        /**
         * Specifies the SKU Name for this PostgreSQL Server. The name of the SKU, follows the `tier` + `family` + `cores` pattern (e.g. B_Gen4_1, GP_Gen5_8). For more information see the [product documentation](https://docs.microsoft.com/en-us/rest/api/postgresql/servers/create#sku).
         */
        name: pulumi.Input<string>;
        /**
         * The tier of the particular SKU. Possible values are `Basic`, `GeneralPurpose`, and `MemoryOptimized`. For more information see the [product documentation](https://docs.microsoft.com/en-us/azure/postgresql/concepts-pricing-tiers).
         */
        tier: pulumi.Input<string>;
    }

    export interface ServerStorageProfile {
        /**
         * Backup retention days for the server, supported values are between `7` and `35` days.
         */
        backupRetentionDays?: pulumi.Input<number>;
        /**
         * Enable/Disable Geo-redundant for server backup. Valid values for this property are `Enabled` or `Disabled`, not supported for the `basic` tier.  This allows you to choose between locally redundant or geo-redundant backup storage in the General Purpose and Memory Optimized tiers. When the backups are stored in geo-redundant backup storage, they are not only stored within the region in which your server is hosted, but are also replicated to a paired data center. This provides better protection and ability to restore your server in a different region in the event of a disaster. The Basic tier only offers locally redundant backup storage.
         */
        geoRedundantBackup?: pulumi.Input<string>;
        /**
         * Max storage allowed for a server. Possible values are between `5120` MB(5GB) and `1048576` MB(1TB) for the Basic SKU and between `5120` MB(5GB) and `4194304` MB(4TB) for General Purpose/Memory Optimized SKUs. For more information see the [product documentation](https://docs.microsoft.com/en-us/rest/api/postgresql/servers/create#StorageProfile).
         */
        storageMb: pulumi.Input<number>;
    }
}

export namespace recoveryservices {
    export interface ProtectionPolicyVMBackup {
        frequency: pulumi.Input<string>;
        time: pulumi.Input<string>;
        weekdays?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface ProtectionPolicyVMRetentionDaily {
        count: pulumi.Input<number>;
    }

    export interface ProtectionPolicyVMRetentionMonthly {
        count: pulumi.Input<number>;
        weekdays: pulumi.Input<pulumi.Input<string>[]>;
        weeks: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface ProtectionPolicyVMRetentionWeekly {
        count: pulumi.Input<number>;
        weekdays: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface ProtectionPolicyVMRetentionYearly {
        count: pulumi.Input<number>;
        months: pulumi.Input<pulumi.Input<string>[]>;
        weekdays: pulumi.Input<pulumi.Input<string>[]>;
        weeks: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface ReplicatedVmManagedDisk {
        diskId: pulumi.Input<string>;
        stagingStorageAccountId: pulumi.Input<string>;
        targetDiskType: pulumi.Input<string>;
        targetReplicaDiskType: pulumi.Input<string>;
        targetResourceGroupId: pulumi.Input<string>;
    }
}

export namespace redis {
    export interface CachePatchSchedule {
        dayOfWeek: pulumi.Input<string>;
        startHourUtc?: pulumi.Input<number>;
    }

    export interface CacheRedisConfiguration {
        aofBackupEnabled?: pulumi.Input<boolean>;
        aofStorageConnectionString0?: pulumi.Input<string>;
        aofStorageConnectionString1?: pulumi.Input<string>;
        enableAuthentication?: pulumi.Input<boolean>;
        /**
         * Returns the max number of connected clients at the same time.
         */
        maxclients?: pulumi.Input<number>;
        maxfragmentationmemoryReserved?: pulumi.Input<number>;
        maxmemoryDelta?: pulumi.Input<number>;
        maxmemoryPolicy?: pulumi.Input<string>;
        maxmemoryReserved?: pulumi.Input<number>;
        notifyKeyspaceEvents?: pulumi.Input<string>;
        rdbBackupEnabled?: pulumi.Input<boolean>;
        rdbBackupFrequency?: pulumi.Input<number>;
        rdbBackupMaxSnapshotCount?: pulumi.Input<number>;
        rdbStorageConnectionString?: pulumi.Input<string>;
    }
}

export namespace relay {
    export interface NamespaceSku {
        /**
         * Specifies the name of the Azure Relay Namespace. Changing this forces a new resource to be created.
         */
        name: pulumi.Input<string>;
    }
}

export namespace role {
    export interface DefinitionPermission {
        actions?: pulumi.Input<pulumi.Input<string>[]>;
        dataActions?: pulumi.Input<pulumi.Input<string>[]>;
        notActions?: pulumi.Input<pulumi.Input<string>[]>;
        notDataActions?: pulumi.Input<pulumi.Input<string>[]>;
    }
}

export namespace scheduler {
    export interface JobActionStorageQueue {
        message: pulumi.Input<string>;
        sasToken: pulumi.Input<string>;
        storageAccountName: pulumi.Input<string>;
        storageQueueName: pulumi.Input<string>;
    }

    export interface JobActionWeb {
        authenticationActiveDirectory?: pulumi.Input<inputs.scheduler.JobActionWebAuthenticationActiveDirectory>;
        authenticationBasic?: pulumi.Input<inputs.scheduler.JobActionWebAuthenticationBasic>;
        authenticationCertificate?: pulumi.Input<inputs.scheduler.JobActionWebAuthenticationCertificate>;
        body?: pulumi.Input<string>;
        headers?: pulumi.Input<{[key: string]: any}>;
        method: pulumi.Input<string>;
        url: pulumi.Input<string>;
    }

    export interface JobActionWebAuthenticationActiveDirectory {
        audience?: pulumi.Input<string>;
        clientId: pulumi.Input<string>;
        secret: pulumi.Input<string>;
        tenantId: pulumi.Input<string>;
    }

    export interface JobActionWebAuthenticationBasic {
        password: pulumi.Input<string>;
        username: pulumi.Input<string>;
    }

    export interface JobActionWebAuthenticationCertificate {
        /**
         * (Computed)  The certificate expiration date.
         */
        expiration?: pulumi.Input<string>;
        password: pulumi.Input<string>;
        pfx: pulumi.Input<string>;
        /**
         * (Computed) The certificate's certificate subject name.
         */
        subjectName?: pulumi.Input<string>;
        /**
         * (Computed) The certificate thumbprint.
         */
        thumbprint?: pulumi.Input<string>;
    }

    export interface JobCollectionQuota {
        maxJobCount?: pulumi.Input<number>;
        maxRecurrenceFrequency: pulumi.Input<string>;
        maxRecurrenceInterval?: pulumi.Input<number>;
        maxRetryInterval?: pulumi.Input<number>;
    }

    export interface JobErrorActionStorageQueue {
        message: pulumi.Input<string>;
        sasToken: pulumi.Input<string>;
        storageAccountName: pulumi.Input<string>;
        storageQueueName: pulumi.Input<string>;
    }

    export interface JobErrorActionWeb {
        authenticationActiveDirectory?: pulumi.Input<inputs.scheduler.JobErrorActionWebAuthenticationActiveDirectory>;
        authenticationBasic?: pulumi.Input<inputs.scheduler.JobErrorActionWebAuthenticationBasic>;
        authenticationCertificate?: pulumi.Input<inputs.scheduler.JobErrorActionWebAuthenticationCertificate>;
        body?: pulumi.Input<string>;
        headers?: pulumi.Input<{[key: string]: any}>;
        method: pulumi.Input<string>;
        url: pulumi.Input<string>;
    }

    export interface JobErrorActionWebAuthenticationActiveDirectory {
        audience?: pulumi.Input<string>;
        clientId: pulumi.Input<string>;
        secret: pulumi.Input<string>;
        tenantId: pulumi.Input<string>;
    }

    export interface JobErrorActionWebAuthenticationBasic {
        password: pulumi.Input<string>;
        username: pulumi.Input<string>;
    }

    export interface JobErrorActionWebAuthenticationCertificate {
        /**
         * (Computed)  The certificate expiration date.
         */
        expiration?: pulumi.Input<string>;
        password: pulumi.Input<string>;
        pfx: pulumi.Input<string>;
        /**
         * (Computed) The certificate's certificate subject name.
         */
        subjectName?: pulumi.Input<string>;
        /**
         * (Computed) The certificate thumbprint.
         */
        thumbprint?: pulumi.Input<string>;
    }

    export interface JobRecurrence {
        count?: pulumi.Input<number>;
        endTime?: pulumi.Input<string>;
        frequency: pulumi.Input<string>;
        hours?: pulumi.Input<pulumi.Input<number>[]>;
        interval?: pulumi.Input<number>;
        minutes?: pulumi.Input<pulumi.Input<number>[]>;
        monthDays?: pulumi.Input<pulumi.Input<number>[]>;
        monthlyOccurrences?: pulumi.Input<pulumi.Input<inputs.scheduler.JobRecurrenceMonthlyOccurrence>[]>;
        weekDays?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface JobRecurrenceMonthlyOccurrence {
        day: pulumi.Input<string>;
        occurrence: pulumi.Input<number>;
    }

    export interface JobRetry {
        count?: pulumi.Input<number>;
        interval?: pulumi.Input<string>;
    }
}

export namespace servicebus {
    export interface SubscriptionRuleCorrelationFilter {
        /**
         * Content type of the message.
         */
        contentType?: pulumi.Input<string>;
        /**
         * Identifier of the correlation.
         */
        correlationId?: pulumi.Input<string>;
        /**
         * Application specific label.
         */
        label?: pulumi.Input<string>;
        /**
         * Identifier of the message.
         */
        messageId?: pulumi.Input<string>;
        /**
         * Address of the queue to reply to.
         */
        replyTo?: pulumi.Input<string>;
        /**
         * Session identifier to reply to.
         */
        replyToSessionId?: pulumi.Input<string>;
        /**
         * Session identifier.
         */
        sessionId?: pulumi.Input<string>;
        /**
         * Address to send to.
         */
        to?: pulumi.Input<string>;
    }
}

export namespace servicefabric {
    export interface ClusterAzureActiveDirectory {
        clientApplicationId: pulumi.Input<string>;
        clusterApplicationId: pulumi.Input<string>;
        tenantId: pulumi.Input<string>;
    }

    export interface ClusterCertificate {
        thumbprint: pulumi.Input<string>;
        thumbprintSecondary?: pulumi.Input<string>;
        x509StoreName: pulumi.Input<string>;
    }

    export interface ClusterCertificateCommonNames {
        commonNames: pulumi.Input<pulumi.Input<inputs.servicefabric.ClusterCertificateCommonNamesCommonName>[]>;
        x509StoreName: pulumi.Input<string>;
    }

    export interface ClusterCertificateCommonNamesCommonName {
        certificateCommonName: pulumi.Input<string>;
        certificateIssuerThumbprint?: pulumi.Input<string>;
    }

    export interface ClusterClientCertificateThumbprint {
        isAdmin: pulumi.Input<boolean>;
        thumbprint: pulumi.Input<string>;
    }

    export interface ClusterDiagnosticsConfig {
        blobEndpoint: pulumi.Input<string>;
        protectedAccountKeyName: pulumi.Input<string>;
        queueEndpoint: pulumi.Input<string>;
        storageAccountName: pulumi.Input<string>;
        tableEndpoint: pulumi.Input<string>;
    }

    export interface ClusterFabricSetting {
        /**
         * The name of the Service Fabric Cluster. Changing this forces a new resource to be created.
         */
        name: pulumi.Input<string>;
        parameters?: pulumi.Input<{[key: string]: any}>;
    }

    export interface ClusterNodeType {
        applicationPorts?: pulumi.Input<inputs.servicefabric.ClusterNodeTypeApplicationPorts>;
        capacities?: pulumi.Input<{[key: string]: any}>;
        clientEndpointPort: pulumi.Input<number>;
        durabilityLevel?: pulumi.Input<string>;
        ephemeralPorts?: pulumi.Input<inputs.servicefabric.ClusterNodeTypeEphemeralPorts>;
        httpEndpointPort: pulumi.Input<number>;
        instanceCount: pulumi.Input<number>;
        isPrimary: pulumi.Input<boolean>;
        /**
         * The name of the Service Fabric Cluster. Changing this forces a new resource to be created.
         */
        name: pulumi.Input<string>;
        placementProperties?: pulumi.Input<{[key: string]: any}>;
        reverseProxyEndpointPort?: pulumi.Input<number>;
    }

    export interface ClusterNodeTypeApplicationPorts {
        endPort: pulumi.Input<number>;
        startPort: pulumi.Input<number>;
    }

    export interface ClusterNodeTypeEphemeralPorts {
        endPort: pulumi.Input<number>;
        startPort: pulumi.Input<number>;
    }

    export interface ClusterReverseProxyCertificate {
        thumbprint: pulumi.Input<string>;
        thumbprintSecondary?: pulumi.Input<string>;
        x509StoreName: pulumi.Input<string>;
    }
}

export namespace signalr {
    export interface ServiceSku {
        capacity: pulumi.Input<number>;
        /**
         * The name of the SignalR service. Changing this forces a new resource to be created.
         */
        name: pulumi.Input<string>;
    }
}

export namespace sql {
    export interface DatabaseImport {
        /**
         * Specifies the name of the SQL administrator.
         */
        administratorLogin: pulumi.Input<string>;
        /**
         * Specifies the password of the SQL administrator.
         */
        administratorLoginPassword: pulumi.Input<string>;
        /**
         * Specifies the type of authentication used to access the server. Valid values are `SQL` or `ADPassword`.
         */
        authenticationType: pulumi.Input<string>;
        /**
         * Specifies the type of import operation being performed. The only allowable value is `Import`.
         */
        operationMode?: pulumi.Input<string>;
        /**
         * Specifies the access key for the storage account.
         */
        storageKey: pulumi.Input<string>;
        /**
         * Specifies the type of access key for the storage account. Valid values are `StorageAccessKey` or `SharedAccessKey`.
         */
        storageKeyType: pulumi.Input<string>;
        /**
         * Specifies the blob URI of the .bacpac file.
         */
        storageUri: pulumi.Input<string>;
    }

    export interface DatabaseThreatDetectionPolicy {
        /**
         * Specifies a list of alerts which should be disabled. Possible values include `Access_Anomaly`, `Sql_Injection` and `Sql_Injection_Vulnerability`.
         */
        disabledAlerts?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Should the account administrators be emailed when this alert is triggered?
         */
        emailAccountAdmins?: pulumi.Input<string>;
        /**
         * A list of email addresses which alerts should be sent to.
         */
        emailAddresses?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Specifies the number of days to keep in the Threat Detection audit logs.
         */
        retentionDays?: pulumi.Input<number>;
        /**
         * The State of the Policy. Possible values are `Enabled`, `Disabled` or `New`.
         */
        state?: pulumi.Input<string>;
        /**
         * Specifies the identifier key of the Threat Detection audit storage account. Required if `state` is `Enabled`.
         */
        storageAccountAccessKey?: pulumi.Input<string>;
        /**
         * Specifies the blob storage endpoint (e.g. https://MyAccount.blob.core.windows.net). This blob storage will hold all Threat Detection audit logs. Required if `state` is `Enabled`.
         */
        storageEndpoint?: pulumi.Input<string>;
        /**
         * Should the default server policy be used? Defaults to `Disabled`.
         */
        useServerDefault?: pulumi.Input<string>;
    }

    export interface FailoverGroupPartnerServer {
        /**
         * the SQL server ID
         */
        id: pulumi.Input<string>;
        /**
         * the location of a SQL server in `partnerServers`
         */
        location?: pulumi.Input<string>;
        /**
         * the current role of the SQL server named in `serverName`
         */
        role?: pulumi.Input<string>;
    }

    export interface FailoverGroupReadWriteEndpointFailoverPolicy {
        /**
         * Applies only if `mode` is `Automatic`. The grace period in minutes before failover with data loss is attempted
         */
        graceMinutes?: pulumi.Input<number>;
        /**
         * Failover policy for the read-only endpoint. Possible values are `Enabled`, and `Disabled`
         */
        mode: pulumi.Input<string>;
    }

    export interface FailoverGroupReadonlyEndpointFailoverPolicy {
        /**
         * Failover policy for the read-only endpoint. Possible values are `Enabled`, and `Disabled`
         */
        mode: pulumi.Input<string>;
    }
}

export namespace storage {
    export interface AccountCustomDomain {
        /**
         * Specifies the name of the storage account. Changing this forces a new resource to be created. This must be unique across the entire Azure service, not just within the resource group.
         */
        name: pulumi.Input<string>;
        useSubdomain?: pulumi.Input<boolean>;
    }

    export interface AccountIdentity {
        /**
         * The Principal ID for the Service Principal associated with the Identity of this Storage Account.
         */
        principalId?: pulumi.Input<string>;
        /**
         * The Tenant ID for the Service Principal associated with the Identity of this Storage Account.
         */
        tenantId?: pulumi.Input<string>;
        type: pulumi.Input<string>;
    }

    export interface AccountNetworkRules {
        bypasses?: pulumi.Input<pulumi.Input<string>[]>;
        defaultAction: pulumi.Input<string>;
        ipRules?: pulumi.Input<pulumi.Input<string>[]>;
        virtualNetworkSubnetIds?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface AccountQueueProperties {
        corsRules?: pulumi.Input<pulumi.Input<inputs.storage.AccountQueuePropertiesCorsRule>[]>;
        hourMetrics?: pulumi.Input<inputs.storage.AccountQueuePropertiesHourMetrics>;
        logging?: pulumi.Input<inputs.storage.AccountQueuePropertiesLogging>;
        minuteMetrics?: pulumi.Input<inputs.storage.AccountQueuePropertiesMinuteMetrics>;
    }

    export interface AccountQueuePropertiesCorsRule {
        allowedHeaders: pulumi.Input<pulumi.Input<string>[]>;
        allowedMethods: pulumi.Input<pulumi.Input<string>[]>;
        allowedOrigins: pulumi.Input<pulumi.Input<string>[]>;
        exposedHeaders: pulumi.Input<pulumi.Input<string>[]>;
        maxAgeInSeconds: pulumi.Input<number>;
    }

    export interface AccountQueuePropertiesHourMetrics {
        enabled: pulumi.Input<boolean>;
        includeApis?: pulumi.Input<boolean>;
        retentionPolicyDays?: pulumi.Input<number>;
        version: pulumi.Input<string>;
    }

    export interface AccountQueuePropertiesLogging {
        delete: pulumi.Input<boolean>;
        read: pulumi.Input<boolean>;
        retentionPolicyDays?: pulumi.Input<number>;
        version: pulumi.Input<string>;
        write: pulumi.Input<boolean>;
    }

    export interface AccountQueuePropertiesMinuteMetrics {
        enabled: pulumi.Input<boolean>;
        includeApis?: pulumi.Input<boolean>;
        retentionPolicyDays?: pulumi.Input<number>;
        version: pulumi.Input<string>;
    }

    export interface GetAccountSASPermissions {
        add: boolean;
        create: boolean;
        delete: boolean;
        list: boolean;
        process: boolean;
        read: boolean;
        update: boolean;
        write: boolean;
    }

    export interface GetAccountSASResourceTypes {
        container: boolean;
        object: boolean;
        service: boolean;
    }

    export interface GetAccountSASServices {
        blob: boolean;
        file: boolean;
        queue: boolean;
        table: boolean;
    }

    export interface ShareAcl {
        accessPolicies?: pulumi.Input<pulumi.Input<inputs.storage.ShareAclAccessPolicy>[]>;
        /**
         * The ID of the File Share.
         */
        id: pulumi.Input<string>;
    }

    export interface ShareAclAccessPolicy {
        expiry: pulumi.Input<string>;
        permissions: pulumi.Input<string>;
        start: pulumi.Input<string>;
    }

    export interface TableAcl {
        accessPolicies?: pulumi.Input<pulumi.Input<inputs.storage.TableAclAccessPolicy>[]>;
        /**
         * The ID of the Table within the Storage Account.
         */
        id: pulumi.Input<string>;
    }

    export interface TableAclAccessPolicy {
        expiry: pulumi.Input<string>;
        permissions: pulumi.Input<string>;
        start: pulumi.Input<string>;
    }
}

export namespace streamanalytics {
    export interface FunctionJavaScriptUDFInput {
        type: pulumi.Input<string>;
    }

    export interface FunctionJavaScriptUDFOutput {
        type: pulumi.Input<string>;
    }

    export interface OutputBlobSerialization {
        encoding?: pulumi.Input<string>;
        fieldDelimiter?: pulumi.Input<string>;
        format?: pulumi.Input<string>;
        type: pulumi.Input<string>;
    }

    export interface OutputEventHubSerialization {
        encoding?: pulumi.Input<string>;
        fieldDelimiter?: pulumi.Input<string>;
        format?: pulumi.Input<string>;
        type: pulumi.Input<string>;
    }

    export interface OutputServiceBusQueueSerialization {
        encoding?: pulumi.Input<string>;
        fieldDelimiter?: pulumi.Input<string>;
        format?: pulumi.Input<string>;
        type: pulumi.Input<string>;
    }

    export interface StreamInputBlobSerialization {
        encoding?: pulumi.Input<string>;
        fieldDelimiter?: pulumi.Input<string>;
        type: pulumi.Input<string>;
    }

    export interface StreamInputEventHubSerialization {
        encoding?: pulumi.Input<string>;
        fieldDelimiter?: pulumi.Input<string>;
        type: pulumi.Input<string>;
    }

    export interface StreamInputIotHubSerialization {
        encoding?: pulumi.Input<string>;
        fieldDelimiter?: pulumi.Input<string>;
        type: pulumi.Input<string>;
    }
}

export namespace trafficmanager {
    export interface EndpointCustomHeader {
        /**
         * The name of the Traffic Manager endpoint. Changing this forces a
         * new resource to be created.
         */
        name: pulumi.Input<string>;
        value: pulumi.Input<string>;
    }

    export interface EndpointSubnet {
        first: pulumi.Input<string>;
        last?: pulumi.Input<string>;
        scope?: pulumi.Input<number>;
    }

    export interface ProfileDnsConfig {
        relativeName: pulumi.Input<string>;
        ttl: pulumi.Input<number>;
    }

    export interface ProfileMonitorConfig {
        intervalInSeconds?: pulumi.Input<number>;
        path?: pulumi.Input<string>;
        port: pulumi.Input<number>;
        protocol: pulumi.Input<string>;
        timeoutInSeconds?: pulumi.Input<number>;
        toleratedNumberOfFailures?: pulumi.Input<number>;
    }
}
