// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Use this data source to access information about an existing EventHub.
 */
export function getEventHub(args: GetEventHubArgs, opts?: pulumi.InvokeOptions): Promise<GetEventHubResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azure:eventhub/getEventHub:getEventHub", {
        "name": args.name,
        "namespaceName": args.namespaceName,
        "resourceGroupName": args.resourceGroupName,
    }, opts);
}

/**
 * A collection of arguments for invoking getEventHub.
 */
export interface GetEventHubArgs {
    /**
     * The name of this EventHub.
     */
    name: string;
    /**
     * The name of the EventHub Namespace where the EventHub exists.
     */
    namespaceName: string;
    /**
     * The name of the Resource Group where the EventHub exists.
     */
    resourceGroupName: string;
}

/**
 * A collection of values returned by getEventHub.
 */
export interface GetEventHubResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly name: string;
    readonly namespaceName: string;
    /**
     * The number of partitions in the EventHub.
     */
    readonly partitionCount: number;
    /**
     * The identifiers for the partitions of this EventHub.
     */
    readonly partitionIds: string[];
    readonly resourceGroupName: string;
}
/**
 * Use this data source to access information about an existing EventHub.
 */
export function getEventHubOutput(args: GetEventHubOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetEventHubResult> {
    return pulumi.output(args).apply((a: any) => getEventHub(a, opts))
}

/**
 * A collection of arguments for invoking getEventHub.
 */
export interface GetEventHubOutputArgs {
    /**
     * The name of this EventHub.
     */
    name: pulumi.Input<string>;
    /**
     * The name of the EventHub Namespace where the EventHub exists.
     */
    namespaceName: pulumi.Input<string>;
    /**
     * The name of the Resource Group where the EventHub exists.
     */
    resourceGroupName: pulumi.Input<string>;
}
