// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Manages a Data Share Data Lake Gen2 Dataset.
 *
 * ## Import
 *
 * Data Share Data Lake Gen2 Datasets can be imported using the `resource id`, e.g.
 *
 * ```sh
 *  $ pulumi import azure:datashare/datasetDataLakeGen2:DatasetDataLakeGen2 example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.DataShare/accounts/account1/shares/share1/dataSets/dataSet1
 * ```
 */
export class DatasetDataLakeGen2 extends pulumi.CustomResource {
    /**
     * Get an existing DatasetDataLakeGen2 resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DatasetDataLakeGen2State, opts?: pulumi.CustomResourceOptions): DatasetDataLakeGen2 {
        return new DatasetDataLakeGen2(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure:datashare/datasetDataLakeGen2:DatasetDataLakeGen2';

    /**
     * Returns true if the given object is an instance of DatasetDataLakeGen2.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DatasetDataLakeGen2 {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DatasetDataLakeGen2.__pulumiType;
    }

    /**
     * The name of the Data Share Dataset.
     */
    public /*out*/ readonly displayName!: pulumi.Output<string>;
    /**
     * The path of the file in the data lake file system to be shared with the receiver. Conflicts with `folderPath` Changing this forces a new Data Share Data Lake Gen2 Dataset to be created.
     */
    public readonly filePath!: pulumi.Output<string | undefined>;
    /**
     * The name of the data lake file system to be shared with the receiver. Changing this forces a new Data Share Data Lake Gen2 Dataset to be created.
     */
    public readonly fileSystemName!: pulumi.Output<string>;
    /**
     * The folder path in the data lake file system to be shared with the receiver. Conflicts with `filePath` Changing this forces a new Data Share Data Lake Gen2 Dataset to be created.
     */
    public readonly folderPath!: pulumi.Output<string | undefined>;
    /**
     * The name which should be used for this Data Share Data Lake Gen2 Dataset. Changing this forces a new Data Share Data Lake Gen2 Dataset to be created.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The resource ID of the Data Share where this Data Share Data Lake Gen2 Dataset should be created. Changing this forces a new Data Share Data Lake Gen2 Dataset to be created.
     */
    public readonly shareId!: pulumi.Output<string>;
    /**
     * The resource id of the storage account of the data lake file system to be shared with the receiver. Changing this forces a new Data Share Data Lake Gen2 Dataset to be created.
     */
    public readonly storageAccountId!: pulumi.Output<string>;

    /**
     * Create a DatasetDataLakeGen2 resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DatasetDataLakeGen2Args, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DatasetDataLakeGen2Args | DatasetDataLakeGen2State, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DatasetDataLakeGen2State | undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["filePath"] = state ? state.filePath : undefined;
            resourceInputs["fileSystemName"] = state ? state.fileSystemName : undefined;
            resourceInputs["folderPath"] = state ? state.folderPath : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["shareId"] = state ? state.shareId : undefined;
            resourceInputs["storageAccountId"] = state ? state.storageAccountId : undefined;
        } else {
            const args = argsOrState as DatasetDataLakeGen2Args | undefined;
            if ((!args || args.fileSystemName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'fileSystemName'");
            }
            if ((!args || args.shareId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'shareId'");
            }
            if ((!args || args.storageAccountId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'storageAccountId'");
            }
            resourceInputs["filePath"] = args ? args.filePath : undefined;
            resourceInputs["fileSystemName"] = args ? args.fileSystemName : undefined;
            resourceInputs["folderPath"] = args ? args.folderPath : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["shareId"] = args ? args.shareId : undefined;
            resourceInputs["storageAccountId"] = args ? args.storageAccountId : undefined;
            resourceInputs["displayName"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(DatasetDataLakeGen2.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering DatasetDataLakeGen2 resources.
 */
export interface DatasetDataLakeGen2State {
    /**
     * The name of the Data Share Dataset.
     */
    displayName?: pulumi.Input<string>;
    /**
     * The path of the file in the data lake file system to be shared with the receiver. Conflicts with `folderPath` Changing this forces a new Data Share Data Lake Gen2 Dataset to be created.
     */
    filePath?: pulumi.Input<string>;
    /**
     * The name of the data lake file system to be shared with the receiver. Changing this forces a new Data Share Data Lake Gen2 Dataset to be created.
     */
    fileSystemName?: pulumi.Input<string>;
    /**
     * The folder path in the data lake file system to be shared with the receiver. Conflicts with `filePath` Changing this forces a new Data Share Data Lake Gen2 Dataset to be created.
     */
    folderPath?: pulumi.Input<string>;
    /**
     * The name which should be used for this Data Share Data Lake Gen2 Dataset. Changing this forces a new Data Share Data Lake Gen2 Dataset to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * The resource ID of the Data Share where this Data Share Data Lake Gen2 Dataset should be created. Changing this forces a new Data Share Data Lake Gen2 Dataset to be created.
     */
    shareId?: pulumi.Input<string>;
    /**
     * The resource id of the storage account of the data lake file system to be shared with the receiver. Changing this forces a new Data Share Data Lake Gen2 Dataset to be created.
     */
    storageAccountId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a DatasetDataLakeGen2 resource.
 */
export interface DatasetDataLakeGen2Args {
    /**
     * The path of the file in the data lake file system to be shared with the receiver. Conflicts with `folderPath` Changing this forces a new Data Share Data Lake Gen2 Dataset to be created.
     */
    filePath?: pulumi.Input<string>;
    /**
     * The name of the data lake file system to be shared with the receiver. Changing this forces a new Data Share Data Lake Gen2 Dataset to be created.
     */
    fileSystemName: pulumi.Input<string>;
    /**
     * The folder path in the data lake file system to be shared with the receiver. Conflicts with `filePath` Changing this forces a new Data Share Data Lake Gen2 Dataset to be created.
     */
    folderPath?: pulumi.Input<string>;
    /**
     * The name which should be used for this Data Share Data Lake Gen2 Dataset. Changing this forces a new Data Share Data Lake Gen2 Dataset to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * The resource ID of the Data Share where this Data Share Data Lake Gen2 Dataset should be created. Changing this forces a new Data Share Data Lake Gen2 Dataset to be created.
     */
    shareId: pulumi.Input<string>;
    /**
     * The resource id of the storage account of the data lake file system to be shared with the receiver. Changing this forces a new Data Share Data Lake Gen2 Dataset to be created.
     */
    storageAccountId: pulumi.Input<string>;
}
