// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * Use this data source to access information about an existing Data Share Blob Storage Dataset.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = azure.datashare.getDatasetBlobStorage({
 *     name: "example-dsbsds",
 *     dataShareId: "example-share-id",
 * });
 * export const id = example.then(example => example.id);
 * ```
 */
export function getDatasetBlobStorage(args: GetDatasetBlobStorageArgs, opts?: pulumi.InvokeOptions): Promise<GetDatasetBlobStorageResult> {
    if (!opts) {
        opts = {}
    }

    if (!opts.version) {
        opts.version = utilities.getVersion();
    }
    return pulumi.runtime.invoke("azure:datashare/getDatasetBlobStorage:getDatasetBlobStorage", {
        "dataShareId": args.dataShareId,
        "name": args.name,
    }, opts);
}

/**
 * A collection of arguments for invoking getDatasetBlobStorage.
 */
export interface GetDatasetBlobStorageArgs {
    /**
     * The ID of the Data Share in which this Data Share Blob Storage Dataset should be created.
     */
    dataShareId: string;
    /**
     * The name of this Data Share Blob Storage Dataset.
     */
    name: string;
}

/**
 * A collection of values returned by getDatasetBlobStorage.
 */
export interface GetDatasetBlobStorageResult {
    /**
     * The name of the storage account container to be shared with the receiver.
     */
    readonly containerName: string;
    readonly dataShareId: string;
    /**
     * The name of the Data Share Dataset.
     */
    readonly displayName: string;
    /**
     * The path of the file in the storage container to be shared with the receiver.
     */
    readonly filePath: string;
    /**
     * The folder path of the file in the storage container to be shared with the receiver.
     */
    readonly folderPath: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The name of the storage account to be shared with the receiver.
     */
    readonly name: string;
    /**
     * A `storageAccount` block as defined below.
     */
    readonly storageAccounts: outputs.datashare.GetDatasetBlobStorageStorageAccount[];
}

export function getDatasetBlobStorageOutput(args: GetDatasetBlobStorageOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDatasetBlobStorageResult> {
    return pulumi.output(args).apply(a => getDatasetBlobStorage(a, opts))
}

/**
 * A collection of arguments for invoking getDatasetBlobStorage.
 */
export interface GetDatasetBlobStorageOutputArgs {
    /**
     * The ID of the Data Share in which this Data Share Blob Storage Dataset should be created.
     */
    dataShareId: pulumi.Input<string>;
    /**
     * The name of this Data Share Blob Storage Dataset.
     */
    name: pulumi.Input<string>;
}
