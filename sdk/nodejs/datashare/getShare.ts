// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Use this data source to access information about an existing Data Share.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = azure.datashare.getAccount({
 *     name: "example-account",
 *     resourceGroupName: "example-resource-group",
 * });
 * const exampleGetShare = example.then(example => azure.datashare.getShare({
 *     name: "existing",
 *     accountId: example.id,
 * }));
 * export const id = exampleGetShare.then(exampleGetShare => exampleGetShare.id);
 * ```
 *
 * ## API Providers
 *
 * <!-- This section is generated, changes will be overwritten -->
 * This data source uses the following Azure API Providers:
 *
 * * `Microsoft.DataShare` - 2019-11-01
 */
export function getShare(args: GetShareArgs, opts?: pulumi.InvokeOptions): Promise<GetShareResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azure:datashare/getShare:getShare", {
        "accountId": args.accountId,
        "name": args.name,
    }, opts);
}

/**
 * A collection of arguments for invoking getShare.
 */
export interface GetShareArgs {
    /**
     * The ID of the Data Share account in which the Data Share is created.
     */
    accountId: string;
    /**
     * The name of this Data Share.
     */
    name: string;
}

/**
 * A collection of values returned by getShare.
 */
export interface GetShareResult {
    readonly accountId: string;
    /**
     * The description of the Data Share.
     */
    readonly description: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The kind of the Data Share.
     */
    readonly kind: string;
    /**
     * The name of the snapshot schedule.
     */
    readonly name: string;
    /**
     * A `snapshotSchedule` block as defined below.
     */
    readonly snapshotSchedules: outputs.datashare.GetShareSnapshotSchedule[];
    /**
     * The terms of the Data Share.
     */
    readonly terms: string;
}
/**
 * Use this data source to access information about an existing Data Share.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = azure.datashare.getAccount({
 *     name: "example-account",
 *     resourceGroupName: "example-resource-group",
 * });
 * const exampleGetShare = example.then(example => azure.datashare.getShare({
 *     name: "existing",
 *     accountId: example.id,
 * }));
 * export const id = exampleGetShare.then(exampleGetShare => exampleGetShare.id);
 * ```
 *
 * ## API Providers
 *
 * <!-- This section is generated, changes will be overwritten -->
 * This data source uses the following Azure API Providers:
 *
 * * `Microsoft.DataShare` - 2019-11-01
 */
export function getShareOutput(args: GetShareOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetShareResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("azure:datashare/getShare:getShare", {
        "accountId": args.accountId,
        "name": args.name,
    }, opts);
}

/**
 * A collection of arguments for invoking getShare.
 */
export interface GetShareOutputArgs {
    /**
     * The ID of the Data Share account in which the Data Share is created.
     */
    accountId: pulumi.Input<string>;
    /**
     * The name of this Data Share.
     */
    name: pulumi.Input<string>;
}
