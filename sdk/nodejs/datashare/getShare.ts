// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * Use this data source to access information about an existing Data Share.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const exampleAccount = azure.datashare.getAccount({
 *     name: "example-account",
 *     resourceGroupName: "example-resource-group",
 * });
 * const exampleShare = exampleAccount.then(exampleAccount => azure.datashare.getShare({
 *     name: "existing",
 *     accountId: exampleAccount.id,
 * }));
 * export const id = exampleShare.then(exampleShare => exampleShare.id);
 * ```
 */
export function getShare(args: GetShareArgs, opts?: pulumi.InvokeOptions): Promise<GetShareResult> {
    if (!opts) {
        opts = {}
    }

    if (!opts.version) {
        opts.version = utilities.getVersion();
    }
    return pulumi.runtime.invoke("azure:datashare/getShare:getShare", {
        "accountId": args.accountId,
        "name": args.name,
    }, opts);
}

/**
 * A collection of arguments for invoking getShare.
 */
export interface GetShareArgs {
    /**
     * The ID of the Data Share account in which the Data Share is created.
     */
    accountId: string;
    /**
     * The name of this Data Share.
     */
    name: string;
}

/**
 * A collection of values returned by getShare.
 */
export interface GetShareResult {
    readonly accountId: string;
    /**
     * The description of the Data Share.
     */
    readonly description: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The kind of the Data Share.
     */
    readonly kind: string;
    /**
     * The name of the snapshot schedule.
     */
    readonly name: string;
    /**
     * A `snapshotSchedule` block as defined below.
     */
    readonly snapshotSchedules: outputs.datashare.GetShareSnapshotSchedule[];
    /**
     * The terms of the Data Share.
     */
    readonly terms: string;
}
