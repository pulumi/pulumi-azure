// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Manages an Elastic Job Step.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = new azure.core.ResourceGroup("example", {
 *     name: "example",
 *     location: "westeurope",
 * });
 * const exampleServer = new azure.mssql.Server("example", {
 *     name: "example-server",
 *     location: example.location,
 *     resourceGroupName: example.name,
 *     version: "12.0",
 *     administratorLogin: "4dm1n157r470r",
 *     administratorLoginPassword: "4-v3ry-53cr37-p455w0rd",
 * });
 * const exampleDatabase = new azure.mssql.Database("example", {
 *     name: "example-db",
 *     serverId: exampleServer.id,
 *     collation: "SQL_Latin1_General_CP1_CI_AS",
 *     skuName: "S1",
 * });
 * const exampleJobAgent = new azure.mssql.JobAgent("example", {
 *     name: "example-job-agent",
 *     location: example.location,
 *     databaseId: exampleDatabase.id,
 * });
 * const exampleJobCredential = new azure.mssql.JobCredential("example", {
 *     name: "example-job-credential",
 *     jobAgentId: exampleJobAgent.id,
 *     username: "testusername",
 *     password: "testpassword",
 * });
 * const exampleJobTargetGroup = new azure.mssql.JobTargetGroup("example", {
 *     name: "example-target-group",
 *     jobAgentId: exampleJobAgent.id,
 *     jobTargets: [{
 *         serverName: exampleServer.name,
 *         databaseName: exampleDatabase.name,
 *         jobCredentialId: exampleJobCredential.id,
 *     }],
 * });
 * const exampleJob = new azure.mssql.Job("example", {
 *     name: "example-job",
 *     jobAgentId: exampleJobAgent.id,
 *     description: "example description",
 * });
 * const test = new azure.mssql.JobStep("test", {
 *     name: "example-job-step",
 *     jobId: exampleJob.id,
 *     jobCredentialId: exampleJobCredential.id,
 *     jobTargetGroupId: exampleJobTargetGroup.id,
 *     jobStepIndex: 1,
 *     sqlScript: `IF NOT EXISTS (SELECT * FROM sys.objects WHERE [name] = N'Pets')
 *   CREATE TABLE Pets (
 *     Animal NVARCHAR(50),
 *     Name NVARCHAR(50),
 *   );
 * `,
 * });
 * ```
 *
 * ## API Providers
 *
 * <!-- This section is generated, changes will be overwritten -->
 * This resource uses the following Azure API Providers:
 *
 * * `Microsoft.Sql` - 2023-08-01-preview
 *
 * ## Import
 *
 * Elastic Job Steps can be imported using the `resource id`, e.g.
 *
 * ```sh
 * $ pulumi import azure:mssql/jobStep:JobStep example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/mygroup1/providers/Microsoft.Sql/servers/myserver1/jobAgents/myjobagent1/jobs/myjob1/steps/myjobstep1
 * ```
 */
export class JobStep extends pulumi.CustomResource {
    /**
     * Get an existing JobStep resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: JobStepState, opts?: pulumi.CustomResourceOptions): JobStep {
        return new JobStep(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure:mssql/jobStep:JobStep';

    /**
     * Returns true if the given object is an instance of JobStep.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is JobStep {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === JobStep.__pulumiType;
    }

    /**
     * The initial retry interval in seconds. Defaults to `1`.
     */
    public readonly initialRetryIntervalSeconds!: pulumi.Output<number | undefined>;
    /**
     * The ID of the Elastic Job Credential to use when executing this Elastic Job Step. Omit this argument to run the step under the Job Agent's managed identity (user-assigned).
     *
     * !> **Note:** Once set, `jobCredentialId` cannot be removed. Removing the credential will force a new resource to be created.
     */
    public readonly jobCredentialId!: pulumi.Output<string | undefined>;
    /**
     * The ID of the Elastic Job. Changing this forces a new Elastic Job Step to be created.
     */
    public readonly jobId!: pulumi.Output<string>;
    /**
     * The index at which to insert this Elastic Job Step into the Elastic Job.
     *
     * > **Note:** This value must be greater than or equal to 1 and less than or equal to the number of job steps in the Elastic Job.
     */
    public readonly jobStepIndex!: pulumi.Output<number>;
    /**
     * The ID of the Elastic Job Target Group.
     */
    public readonly jobTargetGroupId!: pulumi.Output<string>;
    /**
     * The maximum retry interval in seconds. Defaults to `120`.
     *
     * > **Note:** `maximumRetryIntervalSeconds` must be greater than `initialRetryIntervalSeconds`.
     */
    public readonly maximumRetryIntervalSeconds!: pulumi.Output<number | undefined>;
    /**
     * The name which should be used for this Elastic Job Step. Changing this forces a new Elastic Job Step to be created.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * An `outputTarget` block as defined below.
     */
    public readonly outputTarget!: pulumi.Output<outputs.mssql.JobStepOutputTarget | undefined>;
    /**
     * The number of retry attempts. Defaults to `10`.
     */
    public readonly retryAttempts!: pulumi.Output<number | undefined>;
    /**
     * The multiplier for time between retries. Defaults to `2`.
     */
    public readonly retryIntervalBackoffMultiplier!: pulumi.Output<number | undefined>;
    /**
     * The T-SQL script to be executed by this Elastic Job Step.
     *
     * > **Note:** While Azure places no restrictions on the script provided here, it is recommended to ensure the script is idempotent.
     */
    public readonly sqlScript!: pulumi.Output<string>;
    /**
     * The execution timeout in seconds for this Elastic Job Step. Defaults to `43200`.
     */
    public readonly timeoutSeconds!: pulumi.Output<number | undefined>;

    /**
     * Create a JobStep resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: JobStepArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: JobStepArgs | JobStepState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as JobStepState | undefined;
            resourceInputs["initialRetryIntervalSeconds"] = state ? state.initialRetryIntervalSeconds : undefined;
            resourceInputs["jobCredentialId"] = state ? state.jobCredentialId : undefined;
            resourceInputs["jobId"] = state ? state.jobId : undefined;
            resourceInputs["jobStepIndex"] = state ? state.jobStepIndex : undefined;
            resourceInputs["jobTargetGroupId"] = state ? state.jobTargetGroupId : undefined;
            resourceInputs["maximumRetryIntervalSeconds"] = state ? state.maximumRetryIntervalSeconds : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["outputTarget"] = state ? state.outputTarget : undefined;
            resourceInputs["retryAttempts"] = state ? state.retryAttempts : undefined;
            resourceInputs["retryIntervalBackoffMultiplier"] = state ? state.retryIntervalBackoffMultiplier : undefined;
            resourceInputs["sqlScript"] = state ? state.sqlScript : undefined;
            resourceInputs["timeoutSeconds"] = state ? state.timeoutSeconds : undefined;
        } else {
            const args = argsOrState as JobStepArgs | undefined;
            if ((!args || args.jobId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'jobId'");
            }
            if ((!args || args.jobStepIndex === undefined) && !opts.urn) {
                throw new Error("Missing required property 'jobStepIndex'");
            }
            if ((!args || args.jobTargetGroupId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'jobTargetGroupId'");
            }
            if ((!args || args.sqlScript === undefined) && !opts.urn) {
                throw new Error("Missing required property 'sqlScript'");
            }
            resourceInputs["initialRetryIntervalSeconds"] = args ? args.initialRetryIntervalSeconds : undefined;
            resourceInputs["jobCredentialId"] = args ? args.jobCredentialId : undefined;
            resourceInputs["jobId"] = args ? args.jobId : undefined;
            resourceInputs["jobStepIndex"] = args ? args.jobStepIndex : undefined;
            resourceInputs["jobTargetGroupId"] = args ? args.jobTargetGroupId : undefined;
            resourceInputs["maximumRetryIntervalSeconds"] = args ? args.maximumRetryIntervalSeconds : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["outputTarget"] = args ? args.outputTarget : undefined;
            resourceInputs["retryAttempts"] = args ? args.retryAttempts : undefined;
            resourceInputs["retryIntervalBackoffMultiplier"] = args ? args.retryIntervalBackoffMultiplier : undefined;
            resourceInputs["sqlScript"] = args ? args.sqlScript : undefined;
            resourceInputs["timeoutSeconds"] = args ? args.timeoutSeconds : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(JobStep.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering JobStep resources.
 */
export interface JobStepState {
    /**
     * The initial retry interval in seconds. Defaults to `1`.
     */
    initialRetryIntervalSeconds?: pulumi.Input<number>;
    /**
     * The ID of the Elastic Job Credential to use when executing this Elastic Job Step. Omit this argument to run the step under the Job Agent's managed identity (user-assigned).
     *
     * !> **Note:** Once set, `jobCredentialId` cannot be removed. Removing the credential will force a new resource to be created.
     */
    jobCredentialId?: pulumi.Input<string>;
    /**
     * The ID of the Elastic Job. Changing this forces a new Elastic Job Step to be created.
     */
    jobId?: pulumi.Input<string>;
    /**
     * The index at which to insert this Elastic Job Step into the Elastic Job.
     *
     * > **Note:** This value must be greater than or equal to 1 and less than or equal to the number of job steps in the Elastic Job.
     */
    jobStepIndex?: pulumi.Input<number>;
    /**
     * The ID of the Elastic Job Target Group.
     */
    jobTargetGroupId?: pulumi.Input<string>;
    /**
     * The maximum retry interval in seconds. Defaults to `120`.
     *
     * > **Note:** `maximumRetryIntervalSeconds` must be greater than `initialRetryIntervalSeconds`.
     */
    maximumRetryIntervalSeconds?: pulumi.Input<number>;
    /**
     * The name which should be used for this Elastic Job Step. Changing this forces a new Elastic Job Step to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * An `outputTarget` block as defined below.
     */
    outputTarget?: pulumi.Input<inputs.mssql.JobStepOutputTarget>;
    /**
     * The number of retry attempts. Defaults to `10`.
     */
    retryAttempts?: pulumi.Input<number>;
    /**
     * The multiplier for time between retries. Defaults to `2`.
     */
    retryIntervalBackoffMultiplier?: pulumi.Input<number>;
    /**
     * The T-SQL script to be executed by this Elastic Job Step.
     *
     * > **Note:** While Azure places no restrictions on the script provided here, it is recommended to ensure the script is idempotent.
     */
    sqlScript?: pulumi.Input<string>;
    /**
     * The execution timeout in seconds for this Elastic Job Step. Defaults to `43200`.
     */
    timeoutSeconds?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a JobStep resource.
 */
export interface JobStepArgs {
    /**
     * The initial retry interval in seconds. Defaults to `1`.
     */
    initialRetryIntervalSeconds?: pulumi.Input<number>;
    /**
     * The ID of the Elastic Job Credential to use when executing this Elastic Job Step. Omit this argument to run the step under the Job Agent's managed identity (user-assigned).
     *
     * !> **Note:** Once set, `jobCredentialId` cannot be removed. Removing the credential will force a new resource to be created.
     */
    jobCredentialId?: pulumi.Input<string>;
    /**
     * The ID of the Elastic Job. Changing this forces a new Elastic Job Step to be created.
     */
    jobId: pulumi.Input<string>;
    /**
     * The index at which to insert this Elastic Job Step into the Elastic Job.
     *
     * > **Note:** This value must be greater than or equal to 1 and less than or equal to the number of job steps in the Elastic Job.
     */
    jobStepIndex: pulumi.Input<number>;
    /**
     * The ID of the Elastic Job Target Group.
     */
    jobTargetGroupId: pulumi.Input<string>;
    /**
     * The maximum retry interval in seconds. Defaults to `120`.
     *
     * > **Note:** `maximumRetryIntervalSeconds` must be greater than `initialRetryIntervalSeconds`.
     */
    maximumRetryIntervalSeconds?: pulumi.Input<number>;
    /**
     * The name which should be used for this Elastic Job Step. Changing this forces a new Elastic Job Step to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * An `outputTarget` block as defined below.
     */
    outputTarget?: pulumi.Input<inputs.mssql.JobStepOutputTarget>;
    /**
     * The number of retry attempts. Defaults to `10`.
     */
    retryAttempts?: pulumi.Input<number>;
    /**
     * The multiplier for time between retries. Defaults to `2`.
     */
    retryIntervalBackoffMultiplier?: pulumi.Input<number>;
    /**
     * The T-SQL script to be executed by this Elastic Job Step.
     *
     * > **Note:** While Azure places no restrictions on the script provided here, it is recommended to ensure the script is idempotent.
     */
    sqlScript: pulumi.Input<string>;
    /**
     * The execution timeout in seconds for this Elastic Job Step. Defaults to `43200`.
     */
    timeoutSeconds?: pulumi.Input<number>;
}
