// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const exampleResourceGroup = new azure.core.ResourceGroup("exampleResourceGroup", {location: "West Europe"});
 * const exampleVirtualNetwork = new azure.network.VirtualNetwork("exampleVirtualNetwork", {
 *     location: exampleResourceGroup.location,
 *     resourceGroupName: exampleResourceGroup.name,
 *     addressSpaces: ["10.0.0.0/16"],
 * });
 * const exampleSubnet = new azure.network.Subnet("exampleSubnet", {
 *     resourceGroupName: exampleResourceGroup.name,
 *     virtualNetworkName: exampleVirtualNetwork.name,
 *     addressPrefixes: ["10.0.2.0/24"],
 * });
 * const exampleManagedInstance = new azure.mssql.ManagedInstance("exampleManagedInstance", {
 *     resourceGroupName: exampleResourceGroup.name,
 *     location: exampleResourceGroup.location,
 *     licenseType: "BasePrice",
 *     skuName: "GP_Gen5",
 *     storageSizeInGb: 32,
 *     subnetId: exampleSubnet.id,
 *     vcores: 4,
 *     administratorLogin: "msadministrator",
 *     administratorLoginPassword: "thisIsDog11",
 * });
 * const exampleManagedDatabase = new azure.mssql.ManagedDatabase("exampleManagedDatabase", {managedInstanceId: exampleManagedInstance.id});
 * ```
 *
 * ## Import
 *
 * SQL Managed Databases can be imported using the `resource id`, e.g.
 *
 * ```sh
 *  $ pulumi import azure:mssql/managedDatabase:ManagedDatabase example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myresourcegroup/providers/Microsoft.Sql/managedInstances/myserver/databases/mydatabase
 * ```
 */
export class ManagedDatabase extends pulumi.CustomResource {
    /**
     * Get an existing ManagedDatabase resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ManagedDatabaseState, opts?: pulumi.CustomResourceOptions): ManagedDatabase {
        return new ManagedDatabase(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure:mssql/managedDatabase:ManagedDatabase';

    /**
     * Returns true if the given object is an instance of ManagedDatabase.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ManagedDatabase {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ManagedDatabase.__pulumiType;
    }

    /**
     * A `longTermRetentionPolicy` block as defined below.
     */
    public readonly longTermRetentionPolicy!: pulumi.Output<outputs.mssql.ManagedDatabaseLongTermRetentionPolicy>;
    /**
     * The ID of the Azure SQL Managed Instance on which to create this Managed Database. Changing this forces a new resource to be created.
     */
    public readonly managedInstanceId!: pulumi.Output<string>;
    /**
     * The name of the Managed Database to create. Changing this forces a new resource to be created.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * A `pointInTimeRestore` block as defined below.
     */
    public readonly pointInTimeRestore!: pulumi.Output<outputs.mssql.ManagedDatabasePointInTimeRestore | undefined>;
    /**
     * The backup retention period in days. This is how many days Point-in-Time Restore will be supported.
     */
    public readonly shortTermRetentionDays!: pulumi.Output<number | undefined>;

    /**
     * Create a ManagedDatabase resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ManagedDatabaseArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ManagedDatabaseArgs | ManagedDatabaseState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ManagedDatabaseState | undefined;
            resourceInputs["longTermRetentionPolicy"] = state ? state.longTermRetentionPolicy : undefined;
            resourceInputs["managedInstanceId"] = state ? state.managedInstanceId : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["pointInTimeRestore"] = state ? state.pointInTimeRestore : undefined;
            resourceInputs["shortTermRetentionDays"] = state ? state.shortTermRetentionDays : undefined;
        } else {
            const args = argsOrState as ManagedDatabaseArgs | undefined;
            if ((!args || args.managedInstanceId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'managedInstanceId'");
            }
            resourceInputs["longTermRetentionPolicy"] = args ? args.longTermRetentionPolicy : undefined;
            resourceInputs["managedInstanceId"] = args ? args.managedInstanceId : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["pointInTimeRestore"] = args ? args.pointInTimeRestore : undefined;
            resourceInputs["shortTermRetentionDays"] = args ? args.shortTermRetentionDays : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ManagedDatabase.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ManagedDatabase resources.
 */
export interface ManagedDatabaseState {
    /**
     * A `longTermRetentionPolicy` block as defined below.
     */
    longTermRetentionPolicy?: pulumi.Input<inputs.mssql.ManagedDatabaseLongTermRetentionPolicy>;
    /**
     * The ID of the Azure SQL Managed Instance on which to create this Managed Database. Changing this forces a new resource to be created.
     */
    managedInstanceId?: pulumi.Input<string>;
    /**
     * The name of the Managed Database to create. Changing this forces a new resource to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * A `pointInTimeRestore` block as defined below.
     */
    pointInTimeRestore?: pulumi.Input<inputs.mssql.ManagedDatabasePointInTimeRestore>;
    /**
     * The backup retention period in days. This is how many days Point-in-Time Restore will be supported.
     */
    shortTermRetentionDays?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a ManagedDatabase resource.
 */
export interface ManagedDatabaseArgs {
    /**
     * A `longTermRetentionPolicy` block as defined below.
     */
    longTermRetentionPolicy?: pulumi.Input<inputs.mssql.ManagedDatabaseLongTermRetentionPolicy>;
    /**
     * The ID of the Azure SQL Managed Instance on which to create this Managed Database. Changing this forces a new resource to be created.
     */
    managedInstanceId: pulumi.Input<string>;
    /**
     * The name of the Managed Database to create. Changing this forces a new resource to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * A `pointInTimeRestore` block as defined below.
     */
    pointInTimeRestore?: pulumi.Input<inputs.mssql.ManagedDatabasePointInTimeRestore>;
    /**
     * The backup retention period in days. This is how many days Point-in-Time Restore will be supported.
     */
    shortTermRetentionDays?: pulumi.Input<number>;
}
