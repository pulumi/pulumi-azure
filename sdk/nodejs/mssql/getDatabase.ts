// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Use this data source to access information about an existing SQL database.
 *
 * ## Example Usage
 *
 *
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = azure.mssql.getDatabase({
 *     name: "example-mssql-db",
 *     serverId: "example-mssql-server-id",
 * });
 * export const databaseId = example.then(example => example.id);
 * ```
 */
export function getDatabase(args: GetDatabaseArgs, opts?: pulumi.InvokeOptions): Promise<GetDatabaseResult> {
    if (!opts) {
        opts = {}
    }

    if (!opts.version) {
        opts.version = utilities.getVersion();
    }
    return pulumi.runtime.invoke("azure:mssql/getDatabase:getDatabase", {
        "name": args.name,
        "serverId": args.serverId,
    }, opts);
}

/**
 * A collection of arguments for invoking getDatabase.
 */
export interface GetDatabaseArgs {
    /**
     * The name of the Ms SQL Database.
     */
    readonly name: string;
    /**
     * The id of the Ms SQL Server on which to create the database.
     */
    readonly serverId: string;
}

/**
 * A collection of values returned by getDatabase.
 */
export interface GetDatabaseResult {
    /**
     * The collation of the database. 
     */
    readonly collation: string;
    /**
     * The id of the elastic pool containing this database.
     */
    readonly elasticPoolId: string;
    /**
     * The license type to apply for this database.
     */
    readonly licenseType: string;
    /**
     * The max size of the database in gigabytes.
     */
    readonly maxSizeGb: number;
    readonly name: string;
    /**
     * The number of readonly secondary replicas associated with the database to which readonly application intent connections may be routed. 
     */
    readonly readReplicaCount: number;
    /**
     * If enabled, connections that have application intent set to readonly in their connection string may be routed to a readonly secondary replica.
     */
    readonly readScale: boolean;
    readonly serverId: string;
    /**
     * The name of the sku of the database.
     */
    readonly skuName: string;
    /**
     * A mapping of tags to assign to the resource.
     */
    readonly tags: {[key: string]: string};
    /**
     * Whether or not this database is zone redundant, which means the replicas of this database will be spread across multiple availability zones.
     */
    readonly zoneRedundant: boolean;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
}
