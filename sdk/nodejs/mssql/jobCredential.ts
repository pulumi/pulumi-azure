// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Manages an Elastic Job Credential.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = new azure.core.ResourceGroup("example", {
 *     name: "example",
 *     location: "northeurope",
 * });
 * const exampleServer = new azure.mssql.Server("example", {
 *     name: "example-server",
 *     resourceGroupName: example.name,
 *     location: example.location,
 *     version: "12.0",
 *     administratorLogin: "4dm1n157r470r",
 *     administratorLoginPassword: "4-v3ry-53cr37-p455w0rd",
 * });
 * const exampleDatabase = new azure.mssql.Database("example", {
 *     name: "example-db",
 *     serverId: exampleServer.id,
 *     collation: "SQL_Latin1_General_CP1_CI_AS",
 *     skuName: "S1",
 * });
 * const exampleJobAgent = new azure.mssql.JobAgent("example", {
 *     name: "example-job-agent",
 *     location: example.location,
 *     databaseId: exampleDatabase.id,
 * });
 * const exampleJobCredential = new azure.mssql.JobCredential("example", {
 *     name: "example-credential",
 *     jobAgentId: exampleJobAgent.id,
 *     username: "my-username",
 *     password: "MyP4ssw0rd!!!",
 * });
 * ```
 *
 * ## API Providers
 *
 * <!-- This section is generated, changes will be overwritten -->
 * This resource uses the following Azure API Providers:
 *
 * * `Microsoft.Sql` - 2023-08-01-preview
 *
 * ## Import
 *
 * Elastic Job Credentials can be imported using the `resource id`, e.g.
 *
 * ```sh
 * $ pulumi import azure:mssql/jobCredential:JobCredential example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/mygroup1/providers/Microsoft.Sql/servers/myserver1/jobAgents/myjobagent1/credentials/credential1
 * ```
 */
export class JobCredential extends pulumi.CustomResource {
    /**
     * Get an existing JobCredential resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: JobCredentialState, opts?: pulumi.CustomResourceOptions): JobCredential {
        return new JobCredential(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure:mssql/jobCredential:JobCredential';

    /**
     * Returns true if the given object is an instance of JobCredential.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is JobCredential {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === JobCredential.__pulumiType;
    }

    /**
     * The ID of the Elastic Job Agent. Changing this forces a new Elastic Job Credential to be created.
     */
    declare public readonly jobAgentId: pulumi.Output<string>;
    /**
     * The name which should be used for this Elastic Job Credential. Changing this forces a new Elastic Job Credential to be created.
     */
    declare public readonly name: pulumi.Output<string>;
    /**
     * The password to use for this Elastic Job credential.
     */
    declare public readonly password: pulumi.Output<string | undefined>;
    /**
     * An integer value used to trigger an update for `passwordWo`. This property should be incremented when updating `passwordWo`.
     */
    declare public readonly passwordWoVersion: pulumi.Output<number | undefined>;
    /**
     * The username to use for this Elastic Job credential.
     */
    declare public readonly username: pulumi.Output<string>;

    /**
     * Create a JobCredential resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: JobCredentialArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: JobCredentialArgs | JobCredentialState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as JobCredentialState | undefined;
            resourceInputs["jobAgentId"] = state?.jobAgentId;
            resourceInputs["name"] = state?.name;
            resourceInputs["password"] = state?.password;
            resourceInputs["passwordWoVersion"] = state?.passwordWoVersion;
            resourceInputs["username"] = state?.username;
        } else {
            const args = argsOrState as JobCredentialArgs | undefined;
            if (args?.jobAgentId === undefined && !opts.urn) {
                throw new Error("Missing required property 'jobAgentId'");
            }
            if (args?.username === undefined && !opts.urn) {
                throw new Error("Missing required property 'username'");
            }
            resourceInputs["jobAgentId"] = args?.jobAgentId;
            resourceInputs["name"] = args?.name;
            resourceInputs["password"] = args?.password ? pulumi.secret(args.password) : undefined;
            resourceInputs["passwordWoVersion"] = args?.passwordWoVersion;
            resourceInputs["username"] = args?.username;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["password"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(JobCredential.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering JobCredential resources.
 */
export interface JobCredentialState {
    /**
     * The ID of the Elastic Job Agent. Changing this forces a new Elastic Job Credential to be created.
     */
    jobAgentId?: pulumi.Input<string>;
    /**
     * The name which should be used for this Elastic Job Credential. Changing this forces a new Elastic Job Credential to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * The password to use for this Elastic Job credential.
     */
    password?: pulumi.Input<string>;
    /**
     * An integer value used to trigger an update for `passwordWo`. This property should be incremented when updating `passwordWo`.
     */
    passwordWoVersion?: pulumi.Input<number>;
    /**
     * The username to use for this Elastic Job credential.
     */
    username?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a JobCredential resource.
 */
export interface JobCredentialArgs {
    /**
     * The ID of the Elastic Job Agent. Changing this forces a new Elastic Job Credential to be created.
     */
    jobAgentId: pulumi.Input<string>;
    /**
     * The name which should be used for this Elastic Job Credential. Changing this forces a new Elastic Job Credential to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * The password to use for this Elastic Job credential.
     */
    password?: pulumi.Input<string>;
    /**
     * An integer value used to trigger an update for `passwordWo`. This property should be incremented when updating `passwordWo`.
     */
    passwordWoVersion?: pulumi.Input<number>;
    /**
     * The username to use for this Elastic Job credential.
     */
    username: pulumi.Input<string>;
}
