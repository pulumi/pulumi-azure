// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Use this data source to access information about an existing Microsoft SQL Azure Managed Instance.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = azure.mssql.getManagedInstance({
 *     name: "managedsqlinstance",
 *     resourceGroupName: azurerm_resource_group.example.name,
 * });
 * ```
 */
export function getManagedInstance(args: GetManagedInstanceArgs, opts?: pulumi.InvokeOptions): Promise<GetManagedInstanceResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azure:mssql/getManagedInstance:getManagedInstance", {
        "name": args.name,
        "resourceGroupName": args.resourceGroupName,
    }, opts);
}

/**
 * A collection of arguments for invoking getManagedInstance.
 */
export interface GetManagedInstanceArgs {
    /**
     * The name of the SQL Managed Instance.
     */
    name: string;
    /**
     * The name of the resource group where the SQL Managed Instance exists.
     */
    resourceGroupName: string;
}

/**
 * A collection of values returned by getManagedInstance.
 */
export interface GetManagedInstanceResult {
    /**
     * The administrator login name for the SQL Managed Instance.
     */
    readonly administratorLogin: string;
    /**
     * Specifies how the SQL Managed Instance will be collated.
     */
    readonly collation: string;
    readonly customerManagedKeyId: string;
    /**
     * The Dns Zone where the SQL Managed Instance is located.
     */
    readonly dnsZone: string;
    /**
     * The ID of the SQL Managed Instance which shares the DNS zone.
     */
    readonly dnsZonePartnerId: string;
    /**
     * The fully qualified domain name of the Azure Managed SQL Instance.
     */
    readonly fqdn: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * An `identity` block as defined below.
     */
    readonly identities: outputs.mssql.GetManagedInstanceIdentity[];
    /**
     * What type of license the SQL Managed Instance uses.
     */
    readonly licenseType: string;
    /**
     * Specifies the supported Azure location where the resource exists.
     */
    readonly location: string;
    /**
     * The Minimum TLS Version.
     */
    readonly minimumTlsVersion: string;
    readonly name: string;
    /**
     * Specifies how the SQL Managed Instance will be accessed.
     */
    readonly proxyOverride: string;
    /**
     * Whether the public data endpoint is enabled.
     */
    readonly publicDataEndpointEnabled: boolean;
    readonly resourceGroupName: string;
    /**
     * Specifies the SKU Name of the SQL Managed Instance.
     */
    readonly skuName: string;
    /**
     * Specifies the storage account type used to store backups for this database.
     */
    readonly storageAccountType: string;
    /**
     * Maximum storage space allocated for the SQL Managed Instance.
     */
    readonly storageSizeInGb: number;
    /**
     * The subnet resource ID that the SQL Managed Instance is associated with.
     */
    readonly subnetId: string;
    /**
     * A mapping of tags assigned to the resource.
     */
    readonly tags: {[key: string]: string};
    /**
     * The TimeZone ID that the SQL Managed Instance is running in.
     */
    readonly timezoneId: string;
    /**
     * Number of cores that are assigned to the SQL Managed Instance.
     */
    readonly vcores: number;
}
/**
 * Use this data source to access information about an existing Microsoft SQL Azure Managed Instance.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = azure.mssql.getManagedInstance({
 *     name: "managedsqlinstance",
 *     resourceGroupName: azurerm_resource_group.example.name,
 * });
 * ```
 */
export function getManagedInstanceOutput(args: GetManagedInstanceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetManagedInstanceResult> {
    return pulumi.output(args).apply((a: any) => getManagedInstance(a, opts))
}

/**
 * A collection of arguments for invoking getManagedInstance.
 */
export interface GetManagedInstanceOutputArgs {
    /**
     * The name of the SQL Managed Instance.
     */
    name: pulumi.Input<string>;
    /**
     * The name of the resource group where the SQL Managed Instance exists.
     */
    resourceGroupName: pulumi.Input<string>;
}
