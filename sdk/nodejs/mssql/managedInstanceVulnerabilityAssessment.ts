// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * Manages the Vulnerability Assessment for an MS Managed Instance.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const exampleResourceGroup = new azure.core.ResourceGroup("exampleResourceGroup", {location: "West Europe"});
 * const exampleVirtualNetwork = new azure.network.VirtualNetwork("exampleVirtualNetwork", {
 *     location: exampleResourceGroup.location,
 *     resourceGroupName: exampleResourceGroup.name,
 *     addressSpaces: ["10.0.0.0/16"],
 * });
 * const exampleSubnet = new azure.network.Subnet("exampleSubnet", {
 *     resourceGroupName: exampleResourceGroup.name,
 *     virtualNetworkName: exampleVirtualNetwork.name,
 *     addressPrefixes: ["10.0.2.0/24"],
 * });
 * const exampleManagedInstance = new azure.mssql.ManagedInstance("exampleManagedInstance", {
 *     resourceGroupName: exampleResourceGroup.name,
 *     location: exampleResourceGroup.location,
 *     licenseType: "BasePrice",
 *     skuName: "GP_Gen5",
 *     storageSizeInGb: 32,
 *     subnetId: exampleSubnet.id,
 *     vcores: 4,
 *     administratorLogin: "missadministrator",
 *     administratorLoginPassword: "NCC-1701-D",
 * });
 * const exampleAccount = new azure.storage.Account("exampleAccount", {
 *     resourceGroupName: exampleResourceGroup.name,
 *     location: exampleResourceGroup.location,
 *     accountTier: "Standard",
 *     accountReplicationType: "GRS",
 * });
 * const exampleContainer = new azure.storage.Container("exampleContainer", {
 *     storageAccountName: exampleAccount.name,
 *     containerAccessType: "private",
 * });
 * const exampleManagedInstanceVulnerabilityAssessment = new azure.mssql.ManagedInstanceVulnerabilityAssessment("exampleManagedInstanceVulnerabilityAssessment", {
 *     managedInstanceId: exampleManagedInstance.id,
 *     storageContainerPath: pulumi.interpolate`${exampleAccount.primaryBlobEndpoint}${exampleContainer.name}/`,
 *     storageAccountAccessKey: exampleAccount.primaryAccessKey,
 *     recurringScans: {
 *         enabled: true,
 *         emailSubscriptionAdmins: true,
 *         emails: [
 *             "email@example1.com",
 *             "email@example2.com",
 *         ],
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * The Vulnerability Assessment can be imported using the `resource id`, e.g.
 *
 * ```sh
 *  $ pulumi import azure:mssql/managedInstanceVulnerabilityAssessment:ManagedInstanceVulnerabilityAssessment example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/acceptanceTestResourceGroup1/providers/Microsoft.Sql/managedInstances/instance1/vulnerabilityAssessments/Default
 * ```
 */
export class ManagedInstanceVulnerabilityAssessment extends pulumi.CustomResource {
    /**
     * Get an existing ManagedInstanceVulnerabilityAssessment resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ManagedInstanceVulnerabilityAssessmentState, opts?: pulumi.CustomResourceOptions): ManagedInstanceVulnerabilityAssessment {
        return new ManagedInstanceVulnerabilityAssessment(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure:mssql/managedInstanceVulnerabilityAssessment:ManagedInstanceVulnerabilityAssessment';

    /**
     * Returns true if the given object is an instance of ManagedInstanceVulnerabilityAssessment.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ManagedInstanceVulnerabilityAssessment {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ManagedInstanceVulnerabilityAssessment.__pulumiType;
    }

    public readonly managedInstanceId!: pulumi.Output<string>;
    /**
     * The recurring scans settings. The `recurringScans` block supports fields documented below.
     */
    public readonly recurringScans!: pulumi.Output<outputs.mssql.ManagedInstanceVulnerabilityAssessmentRecurringScans>;
    /**
     * Specifies the identifier key of the storage account for vulnerability assessment scan results. If `storageContainerSasKey` isn't specified, `storageAccountAccessKey` is required.
     */
    public readonly storageAccountAccessKey!: pulumi.Output<string | undefined>;
    /**
     * A blob storage container path to hold the scan results (e.g. https://myStorage.blob.core.windows.net/VaScans/).
     */
    public readonly storageContainerPath!: pulumi.Output<string>;
    /**
     * A shared access signature (SAS Key) that has write access to the blob container specified in `storageContainerPath` parameter. If `storageAccountAccessKey` isn't specified, `storageContainerSasKey` is required.
     */
    public readonly storageContainerSasKey!: pulumi.Output<string | undefined>;

    /**
     * Create a ManagedInstanceVulnerabilityAssessment resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ManagedInstanceVulnerabilityAssessmentArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ManagedInstanceVulnerabilityAssessmentArgs | ManagedInstanceVulnerabilityAssessmentState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ManagedInstanceVulnerabilityAssessmentState | undefined;
            resourceInputs["managedInstanceId"] = state ? state.managedInstanceId : undefined;
            resourceInputs["recurringScans"] = state ? state.recurringScans : undefined;
            resourceInputs["storageAccountAccessKey"] = state ? state.storageAccountAccessKey : undefined;
            resourceInputs["storageContainerPath"] = state ? state.storageContainerPath : undefined;
            resourceInputs["storageContainerSasKey"] = state ? state.storageContainerSasKey : undefined;
        } else {
            const args = argsOrState as ManagedInstanceVulnerabilityAssessmentArgs | undefined;
            if ((!args || args.managedInstanceId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'managedInstanceId'");
            }
            if ((!args || args.storageContainerPath === undefined) && !opts.urn) {
                throw new Error("Missing required property 'storageContainerPath'");
            }
            resourceInputs["managedInstanceId"] = args ? args.managedInstanceId : undefined;
            resourceInputs["recurringScans"] = args ? args.recurringScans : undefined;
            resourceInputs["storageAccountAccessKey"] = args ? args.storageAccountAccessKey : undefined;
            resourceInputs["storageContainerPath"] = args ? args.storageContainerPath : undefined;
            resourceInputs["storageContainerSasKey"] = args ? args.storageContainerSasKey : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ManagedInstanceVulnerabilityAssessment.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ManagedInstanceVulnerabilityAssessment resources.
 */
export interface ManagedInstanceVulnerabilityAssessmentState {
    managedInstanceId?: pulumi.Input<string>;
    /**
     * The recurring scans settings. The `recurringScans` block supports fields documented below.
     */
    recurringScans?: pulumi.Input<inputs.mssql.ManagedInstanceVulnerabilityAssessmentRecurringScans>;
    /**
     * Specifies the identifier key of the storage account for vulnerability assessment scan results. If `storageContainerSasKey` isn't specified, `storageAccountAccessKey` is required.
     */
    storageAccountAccessKey?: pulumi.Input<string>;
    /**
     * A blob storage container path to hold the scan results (e.g. https://myStorage.blob.core.windows.net/VaScans/).
     */
    storageContainerPath?: pulumi.Input<string>;
    /**
     * A shared access signature (SAS Key) that has write access to the blob container specified in `storageContainerPath` parameter. If `storageAccountAccessKey` isn't specified, `storageContainerSasKey` is required.
     */
    storageContainerSasKey?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ManagedInstanceVulnerabilityAssessment resource.
 */
export interface ManagedInstanceVulnerabilityAssessmentArgs {
    managedInstanceId: pulumi.Input<string>;
    /**
     * The recurring scans settings. The `recurringScans` block supports fields documented below.
     */
    recurringScans?: pulumi.Input<inputs.mssql.ManagedInstanceVulnerabilityAssessmentRecurringScans>;
    /**
     * Specifies the identifier key of the storage account for vulnerability assessment scan results. If `storageContainerSasKey` isn't specified, `storageAccountAccessKey` is required.
     */
    storageAccountAccessKey?: pulumi.Input<string>;
    /**
     * A blob storage container path to hold the scan results (e.g. https://myStorage.blob.core.windows.net/VaScans/).
     */
    storageContainerPath: pulumi.Input<string>;
    /**
     * A shared access signature (SAS Key) that has write access to the blob container specified in `storageContainerPath` parameter. If `storageAccountAccessKey` isn't specified, `storageContainerSasKey` is required.
     */
    storageContainerSasKey?: pulumi.Input<string>;
}
