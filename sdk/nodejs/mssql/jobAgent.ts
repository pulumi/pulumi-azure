// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Manages an Elastic Job Agent.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const exampleResourceGroup = new azure.core.ResourceGroup("exampleResourceGroup", {location: "northeurope"});
 * const exampleServer = new azure.mssql.Server("exampleServer", {
 *     resourceGroupName: exampleResourceGroup.name,
 *     location: exampleResourceGroup.location,
 *     version: "12.0",
 *     administratorLogin: "4dm1n157r470r",
 *     administratorLoginPassword: "4-v3ry-53cr37-p455w0rd",
 * });
 * const exampleDatabase = new azure.mssql.Database("exampleDatabase", {
 *     serverId: exampleServer.id,
 *     collation: "SQL_Latin1_General_CP1_CI_AS",
 *     skuName: "S1",
 * });
 * const exampleJobAgent = new azure.mssql.JobAgent("exampleJobAgent", {
 *     location: exampleResourceGroup.location,
 *     databaseId: exampleDatabase.id,
 * });
 * ```
 *
 * ## Import
 *
 * Elastic Job Agents can be imported using the `id`, e.g.
 *
 * ```sh
 *  $ pulumi import azure:mssql/jobAgent:JobAgent example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/mygroup1/providers/Microsoft.Sql/servers/myserver1/jobAgents/myjobagent1
 * ```
 */
export class JobAgent extends pulumi.CustomResource {
    /**
     * Get an existing JobAgent resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: JobAgentState, opts?: pulumi.CustomResourceOptions): JobAgent {
        return new JobAgent(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure:mssql/jobAgent:JobAgent';

    /**
     * Returns true if the given object is an instance of JobAgent.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is JobAgent {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === JobAgent.__pulumiType;
    }

    /**
     * The ID of the database to store metadata for the Elastic Job Agent. Changing this forces a new Elastic Job Agent to be created.
     */
    public readonly databaseId!: pulumi.Output<string>;
    /**
     * The Azure Region where the Elastic Job Agent should exist. Changing this forces a new Elastic Job Agent to be created.
     */
    public readonly location!: pulumi.Output<string>;
    /**
     * The name which should be used for this Elastic Job Agent. Changing this forces a new Elastic Job Agent to be created.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * A mapping of tags which should be assigned to the Database.
     */
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;

    /**
     * Create a JobAgent resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: JobAgentArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: JobAgentArgs | JobAgentState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as JobAgentState | undefined;
            inputs["databaseId"] = state ? state.databaseId : undefined;
            inputs["location"] = state ? state.location : undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["tags"] = state ? state.tags : undefined;
        } else {
            const args = argsOrState as JobAgentArgs | undefined;
            if ((!args || args.databaseId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'databaseId'");
            }
            inputs["databaseId"] = args ? args.databaseId : undefined;
            inputs["location"] = args ? args.location : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["tags"] = args ? args.tags : undefined;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        super(JobAgent.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering JobAgent resources.
 */
export interface JobAgentState {
    /**
     * The ID of the database to store metadata for the Elastic Job Agent. Changing this forces a new Elastic Job Agent to be created.
     */
    databaseId?: pulumi.Input<string>;
    /**
     * The Azure Region where the Elastic Job Agent should exist. Changing this forces a new Elastic Job Agent to be created.
     */
    location?: pulumi.Input<string>;
    /**
     * The name which should be used for this Elastic Job Agent. Changing this forces a new Elastic Job Agent to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * A mapping of tags which should be assigned to the Database.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

/**
 * The set of arguments for constructing a JobAgent resource.
 */
export interface JobAgentArgs {
    /**
     * The ID of the database to store metadata for the Elastic Job Agent. Changing this forces a new Elastic Job Agent to be created.
     */
    databaseId: pulumi.Input<string>;
    /**
     * The Azure Region where the Elastic Job Agent should exist. Changing this forces a new Elastic Job Agent to be created.
     */
    location?: pulumi.Input<string>;
    /**
     * The name which should be used for this Elastic Job Agent. Changing this forces a new Elastic Job Agent to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * A mapping of tags which should be assigned to the Database.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
