// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Use this data source to access information about an existing SQL elastic pool.
 * 
 * ## Example Usage
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 * 
 * const example = pulumi.output(azure.mssql.getElasticpool({
 *     name: "mssqlelasticpoolname",
 *     resourceGroupName: "example-resources",
 *     serverName: "example-sql-server",
 * }));
 * 
 * export const elasticpoolId = example.id;
 * ```
 *
 * > This content is derived from https://github.com/terraform-providers/terraform-provider-azurerm/blob/master/website/docs/d/mssql_elasticpool.html.markdown.
 */
export function getElasticpool(args: GetElasticpoolArgs, opts?: pulumi.InvokeOptions): Promise<GetElasticpoolResult> & GetElasticpoolResult {
    if (!opts) {
        opts = {}
    }

    if (!opts.version) {
        opts.version = utilities.getVersion();
    }
    const promise: Promise<GetElasticpoolResult> = pulumi.runtime.invoke("azure:mssql/getElasticpool:getElasticpool", {
        "name": args.name,
        "resourceGroupName": args.resourceGroupName,
        "serverName": args.serverName,
    }, opts);

    return pulumi.utils.liftProperties(promise, opts);
}

/**
 * A collection of arguments for invoking getElasticpool.
 */
export interface GetElasticpoolArgs {
    /**
     * The name of the elastic pool.
     */
    readonly name: string;
    /**
     * The name of the resource group which contains the elastic pool.
     */
    readonly resourceGroupName: string;
    /**
     * The name of the SQL Server which contains the elastic pool.
     */
    readonly serverName: string;
}

/**
 * A collection of values returned by getElasticpool.
 */
export interface GetElasticpoolResult {
    /**
     * Specifies the supported Azure location where the resource exists.
     */
    readonly location: string;
    /**
     * The max data size of the elastic pool in bytes.
     */
    readonly maxSizeBytes: number;
    /**
     * The max data size of the elastic pool in gigabytes.
     */
    readonly maxSizeGb: number;
    readonly name: string;
    /**
     * The maximum capacity any one database can consume.
     */
    readonly perDbMaxCapacity: number;
    /**
     * The minimum capacity all databases are guaranteed.
     */
    readonly perDbMinCapacity: number;
    readonly resourceGroupName: string;
    readonly serverName: string;
    /**
     * A mapping of tags to assign to the resource.
     */
    readonly tags: {[key: string]: any};
    /**
     * Whether or not this elastic pool is zone redundant.
     */
    readonly zoneRedundant: boolean;
    /**
     * id is the provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
}
