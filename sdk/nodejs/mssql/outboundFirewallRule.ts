// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Allows you to manage an Azure SQL Outbound Firewall Rule.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const exampleResourceGroup = new azure.core.ResourceGroup("exampleResourceGroup", {location: "West Europe"});
 * const exampleServer = new azure.mssql.Server("exampleServer", {
 *     resourceGroupName: exampleResourceGroup.name,
 *     location: "West US",
 *     version: "12.0",
 *     administratorLogin: "4dm1n157r470r",
 *     administratorLoginPassword: "4-v3ry-53cr37-p455w0rd",
 *     outboundNetworkRestrictionEnabled: true,
 * });
 * const exampleOutboundFirewallRule = new azure.mssql.OutboundFirewallRule("exampleOutboundFirewallRule", {serverId: exampleServer.id});
 * ```
 *
 * ## Import
 *
 * SQL Outbound Firewall Rules can be imported using the `resource id`, e.g.
 *
 * ```sh
 *  $ pulumi import azure:mssql/outboundFirewallRule:OutboundFirewallRule rule1 /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myresourcegroup/providers/Microsoft.Sql/servers/myserver/outboundFirewallRules/fqdn1
 * ```
 */
export class OutboundFirewallRule extends pulumi.CustomResource {
    /**
     * Get an existing OutboundFirewallRule resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: OutboundFirewallRuleState, opts?: pulumi.CustomResourceOptions): OutboundFirewallRule {
        return new OutboundFirewallRule(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure:mssql/outboundFirewallRule:OutboundFirewallRule';

    /**
     * Returns true if the given object is an instance of OutboundFirewallRule.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is OutboundFirewallRule {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === OutboundFirewallRule.__pulumiType;
    }

    /**
     * The name of the outbound firewall rule. This should be a FQDN.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The resource ID of the SQL Server on which to create the Outbound Firewall Rule.
     */
    public readonly serverId!: pulumi.Output<string>;

    /**
     * Create a OutboundFirewallRule resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: OutboundFirewallRuleArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: OutboundFirewallRuleArgs | OutboundFirewallRuleState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as OutboundFirewallRuleState | undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["serverId"] = state ? state.serverId : undefined;
        } else {
            const args = argsOrState as OutboundFirewallRuleArgs | undefined;
            if ((!args || args.serverId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'serverId'");
            }
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["serverId"] = args ? args.serverId : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(OutboundFirewallRule.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering OutboundFirewallRule resources.
 */
export interface OutboundFirewallRuleState {
    /**
     * The name of the outbound firewall rule. This should be a FQDN.
     */
    name?: pulumi.Input<string>;
    /**
     * The resource ID of the SQL Server on which to create the Outbound Firewall Rule.
     */
    serverId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a OutboundFirewallRule resource.
 */
export interface OutboundFirewallRuleArgs {
    /**
     * The name of the outbound firewall rule. This should be a FQDN.
     */
    name?: pulumi.Input<string>;
    /**
     * The resource ID of the SQL Server on which to create the Outbound Firewall Rule.
     */
    serverId: pulumi.Input<string>;
}
