// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { AuthorizationRuleArgs, AuthorizationRuleState } from "./authorizationRule";
export type AuthorizationRule = import("./authorizationRule").AuthorizationRule;
export const AuthorizationRule: typeof import("./authorizationRule").AuthorizationRule = null as any;
utilities.lazyLoad(exports, ["AuthorizationRule"], () => require("./authorizationRule"));

export { GetHubArgs, GetHubResult, GetHubOutputArgs } from "./getHub";
export const getHub: typeof import("./getHub").getHub = null as any;
export const getHubOutput: typeof import("./getHub").getHubOutput = null as any;
utilities.lazyLoad(exports, ["getHub","getHubOutput"], () => require("./getHub"));

export { GetNamespaceArgs, GetNamespaceResult, GetNamespaceOutputArgs } from "./getNamespace";
export const getNamespace: typeof import("./getNamespace").getNamespace = null as any;
export const getNamespaceOutput: typeof import("./getNamespace").getNamespaceOutput = null as any;
utilities.lazyLoad(exports, ["getNamespace","getNamespaceOutput"], () => require("./getNamespace"));

export { HubArgs, HubState } from "./hub";
export type Hub = import("./hub").Hub;
export const Hub: typeof import("./hub").Hub = null as any;
utilities.lazyLoad(exports, ["Hub"], () => require("./hub"));

export { NamespaceArgs, NamespaceState } from "./namespace";
export type Namespace = import("./namespace").Namespace;
export const Namespace: typeof import("./namespace").Namespace = null as any;
utilities.lazyLoad(exports, ["Namespace"], () => require("./namespace"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "azure:notificationhub/authorizationRule:AuthorizationRule":
                return new AuthorizationRule(name, <any>undefined, { urn })
            case "azure:notificationhub/hub:Hub":
                return new Hub(name, <any>undefined, { urn })
            case "azure:notificationhub/namespace:Namespace":
                return new Namespace(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure", "notificationhub/authorizationRule", _module)
pulumi.runtime.registerResourceModule("azure", "notificationhub/hub", _module)
pulumi.runtime.registerResourceModule("azure", "notificationhub/namespace", _module)
