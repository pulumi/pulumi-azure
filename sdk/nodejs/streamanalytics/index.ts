// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { ClusterArgs, ClusterState } from "./cluster";
export type Cluster = import("./cluster").Cluster;
export const Cluster: typeof import("./cluster").Cluster = null as any;
utilities.lazyLoad(exports, ["Cluster"], () => require("./cluster"));

export { FunctionJavaScriptUDFArgs, FunctionJavaScriptUDFState } from "./functionJavaScriptUDF";
export type FunctionJavaScriptUDF = import("./functionJavaScriptUDF").FunctionJavaScriptUDF;
export const FunctionJavaScriptUDF: typeof import("./functionJavaScriptUDF").FunctionJavaScriptUDF = null as any;
utilities.lazyLoad(exports, ["FunctionJavaScriptUDF"], () => require("./functionJavaScriptUDF"));

export { FunctionJavascriptUdaArgs, FunctionJavascriptUdaState } from "./functionJavascriptUda";
export type FunctionJavascriptUda = import("./functionJavascriptUda").FunctionJavascriptUda;
export const FunctionJavascriptUda: typeof import("./functionJavascriptUda").FunctionJavascriptUda = null as any;
utilities.lazyLoad(exports, ["FunctionJavascriptUda"], () => require("./functionJavascriptUda"));

export { GetJobArgs, GetJobResult, GetJobOutputArgs } from "./getJob";
export const getJob: typeof import("./getJob").getJob = null as any;
export const getJobOutput: typeof import("./getJob").getJobOutput = null as any;
utilities.lazyLoad(exports, ["getJob","getJobOutput"], () => require("./getJob"));

export { JobArgs, JobState } from "./job";
export type Job = import("./job").Job;
export const Job: typeof import("./job").Job = null as any;
utilities.lazyLoad(exports, ["Job"], () => require("./job"));

export { JobScheduleArgs, JobScheduleState } from "./jobSchedule";
export type JobSchedule = import("./jobSchedule").JobSchedule;
export const JobSchedule: typeof import("./jobSchedule").JobSchedule = null as any;
utilities.lazyLoad(exports, ["JobSchedule"], () => require("./jobSchedule"));

export { ManagedPrivateEndpointArgs, ManagedPrivateEndpointState } from "./managedPrivateEndpoint";
export type ManagedPrivateEndpoint = import("./managedPrivateEndpoint").ManagedPrivateEndpoint;
export const ManagedPrivateEndpoint: typeof import("./managedPrivateEndpoint").ManagedPrivateEndpoint = null as any;
utilities.lazyLoad(exports, ["ManagedPrivateEndpoint"], () => require("./managedPrivateEndpoint"));

export { OutputBlobArgs, OutputBlobState } from "./outputBlob";
export type OutputBlob = import("./outputBlob").OutputBlob;
export const OutputBlob: typeof import("./outputBlob").OutputBlob = null as any;
utilities.lazyLoad(exports, ["OutputBlob"], () => require("./outputBlob"));

export { OutputCosmosdbArgs, OutputCosmosdbState } from "./outputCosmosdb";
export type OutputCosmosdb = import("./outputCosmosdb").OutputCosmosdb;
export const OutputCosmosdb: typeof import("./outputCosmosdb").OutputCosmosdb = null as any;
utilities.lazyLoad(exports, ["OutputCosmosdb"], () => require("./outputCosmosdb"));

export { OutputEventHubArgs, OutputEventHubState } from "./outputEventHub";
export type OutputEventHub = import("./outputEventHub").OutputEventHub;
export const OutputEventHub: typeof import("./outputEventHub").OutputEventHub = null as any;
utilities.lazyLoad(exports, ["OutputEventHub"], () => require("./outputEventHub"));

export { OutputFunctionArgs, OutputFunctionState } from "./outputFunction";
export type OutputFunction = import("./outputFunction").OutputFunction;
export const OutputFunction: typeof import("./outputFunction").OutputFunction = null as any;
utilities.lazyLoad(exports, ["OutputFunction"], () => require("./outputFunction"));

export { OutputMssqlArgs, OutputMssqlState } from "./outputMssql";
export type OutputMssql = import("./outputMssql").OutputMssql;
export const OutputMssql: typeof import("./outputMssql").OutputMssql = null as any;
utilities.lazyLoad(exports, ["OutputMssql"], () => require("./outputMssql"));

export { OutputPowerbiArgs, OutputPowerbiState } from "./outputPowerbi";
export type OutputPowerbi = import("./outputPowerbi").OutputPowerbi;
export const OutputPowerbi: typeof import("./outputPowerbi").OutputPowerbi = null as any;
utilities.lazyLoad(exports, ["OutputPowerbi"], () => require("./outputPowerbi"));

export { OutputServiceBusQueueArgs, OutputServiceBusQueueState } from "./outputServiceBusQueue";
export type OutputServiceBusQueue = import("./outputServiceBusQueue").OutputServiceBusQueue;
export const OutputServiceBusQueue: typeof import("./outputServiceBusQueue").OutputServiceBusQueue = null as any;
utilities.lazyLoad(exports, ["OutputServiceBusQueue"], () => require("./outputServiceBusQueue"));

export { OutputServicebusTopicArgs, OutputServicebusTopicState } from "./outputServicebusTopic";
export type OutputServicebusTopic = import("./outputServicebusTopic").OutputServicebusTopic;
export const OutputServicebusTopic: typeof import("./outputServicebusTopic").OutputServicebusTopic = null as any;
utilities.lazyLoad(exports, ["OutputServicebusTopic"], () => require("./outputServicebusTopic"));

export { OutputSynapseArgs, OutputSynapseState } from "./outputSynapse";
export type OutputSynapse = import("./outputSynapse").OutputSynapse;
export const OutputSynapse: typeof import("./outputSynapse").OutputSynapse = null as any;
utilities.lazyLoad(exports, ["OutputSynapse"], () => require("./outputSynapse"));

export { OutputTableArgs, OutputTableState } from "./outputTable";
export type OutputTable = import("./outputTable").OutputTable;
export const OutputTable: typeof import("./outputTable").OutputTable = null as any;
utilities.lazyLoad(exports, ["OutputTable"], () => require("./outputTable"));

export { ReferenceInputBlobArgs, ReferenceInputBlobState } from "./referenceInputBlob";
export type ReferenceInputBlob = import("./referenceInputBlob").ReferenceInputBlob;
export const ReferenceInputBlob: typeof import("./referenceInputBlob").ReferenceInputBlob = null as any;
utilities.lazyLoad(exports, ["ReferenceInputBlob"], () => require("./referenceInputBlob"));

export { ReferenceInputMssqlArgs, ReferenceInputMssqlState } from "./referenceInputMssql";
export type ReferenceInputMssql = import("./referenceInputMssql").ReferenceInputMssql;
export const ReferenceInputMssql: typeof import("./referenceInputMssql").ReferenceInputMssql = null as any;
utilities.lazyLoad(exports, ["ReferenceInputMssql"], () => require("./referenceInputMssql"));

export { StreamInputBlobArgs, StreamInputBlobState } from "./streamInputBlob";
export type StreamInputBlob = import("./streamInputBlob").StreamInputBlob;
export const StreamInputBlob: typeof import("./streamInputBlob").StreamInputBlob = null as any;
utilities.lazyLoad(exports, ["StreamInputBlob"], () => require("./streamInputBlob"));

export { StreamInputEventHubArgs, StreamInputEventHubState } from "./streamInputEventHub";
export type StreamInputEventHub = import("./streamInputEventHub").StreamInputEventHub;
export const StreamInputEventHub: typeof import("./streamInputEventHub").StreamInputEventHub = null as any;
utilities.lazyLoad(exports, ["StreamInputEventHub"], () => require("./streamInputEventHub"));

export { StreamInputEventHubV2Args, StreamInputEventHubV2State } from "./streamInputEventHubV2";
export type StreamInputEventHubV2 = import("./streamInputEventHubV2").StreamInputEventHubV2;
export const StreamInputEventHubV2: typeof import("./streamInputEventHubV2").StreamInputEventHubV2 = null as any;
utilities.lazyLoad(exports, ["StreamInputEventHubV2"], () => require("./streamInputEventHubV2"));

export { StreamInputIotHubArgs, StreamInputIotHubState } from "./streamInputIotHub";
export type StreamInputIotHub = import("./streamInputIotHub").StreamInputIotHub;
export const StreamInputIotHub: typeof import("./streamInputIotHub").StreamInputIotHub = null as any;
utilities.lazyLoad(exports, ["StreamInputIotHub"], () => require("./streamInputIotHub"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "azure:streamanalytics/cluster:Cluster":
                return new Cluster(name, <any>undefined, { urn })
            case "azure:streamanalytics/functionJavaScriptUDF:FunctionJavaScriptUDF":
                return new FunctionJavaScriptUDF(name, <any>undefined, { urn })
            case "azure:streamanalytics/functionJavascriptUda:FunctionJavascriptUda":
                return new FunctionJavascriptUda(name, <any>undefined, { urn })
            case "azure:streamanalytics/job:Job":
                return new Job(name, <any>undefined, { urn })
            case "azure:streamanalytics/jobSchedule:JobSchedule":
                return new JobSchedule(name, <any>undefined, { urn })
            case "azure:streamanalytics/managedPrivateEndpoint:ManagedPrivateEndpoint":
                return new ManagedPrivateEndpoint(name, <any>undefined, { urn })
            case "azure:streamanalytics/outputBlob:OutputBlob":
                return new OutputBlob(name, <any>undefined, { urn })
            case "azure:streamanalytics/outputCosmosdb:OutputCosmosdb":
                return new OutputCosmosdb(name, <any>undefined, { urn })
            case "azure:streamanalytics/outputEventHub:OutputEventHub":
                return new OutputEventHub(name, <any>undefined, { urn })
            case "azure:streamanalytics/outputFunction:OutputFunction":
                return new OutputFunction(name, <any>undefined, { urn })
            case "azure:streamanalytics/outputMssql:OutputMssql":
                return new OutputMssql(name, <any>undefined, { urn })
            case "azure:streamanalytics/outputPowerbi:OutputPowerbi":
                return new OutputPowerbi(name, <any>undefined, { urn })
            case "azure:streamanalytics/outputServiceBusQueue:OutputServiceBusQueue":
                return new OutputServiceBusQueue(name, <any>undefined, { urn })
            case "azure:streamanalytics/outputServicebusTopic:OutputServicebusTopic":
                return new OutputServicebusTopic(name, <any>undefined, { urn })
            case "azure:streamanalytics/outputSynapse:OutputSynapse":
                return new OutputSynapse(name, <any>undefined, { urn })
            case "azure:streamanalytics/outputTable:OutputTable":
                return new OutputTable(name, <any>undefined, { urn })
            case "azure:streamanalytics/referenceInputBlob:ReferenceInputBlob":
                return new ReferenceInputBlob(name, <any>undefined, { urn })
            case "azure:streamanalytics/referenceInputMssql:ReferenceInputMssql":
                return new ReferenceInputMssql(name, <any>undefined, { urn })
            case "azure:streamanalytics/streamInputBlob:StreamInputBlob":
                return new StreamInputBlob(name, <any>undefined, { urn })
            case "azure:streamanalytics/streamInputEventHub:StreamInputEventHub":
                return new StreamInputEventHub(name, <any>undefined, { urn })
            case "azure:streamanalytics/streamInputEventHubV2:StreamInputEventHubV2":
                return new StreamInputEventHubV2(name, <any>undefined, { urn })
            case "azure:streamanalytics/streamInputIotHub:StreamInputIotHub":
                return new StreamInputIotHub(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure", "streamanalytics/cluster", _module)
pulumi.runtime.registerResourceModule("azure", "streamanalytics/functionJavaScriptUDF", _module)
pulumi.runtime.registerResourceModule("azure", "streamanalytics/functionJavascriptUda", _module)
pulumi.runtime.registerResourceModule("azure", "streamanalytics/job", _module)
pulumi.runtime.registerResourceModule("azure", "streamanalytics/jobSchedule", _module)
pulumi.runtime.registerResourceModule("azure", "streamanalytics/managedPrivateEndpoint", _module)
pulumi.runtime.registerResourceModule("azure", "streamanalytics/outputBlob", _module)
pulumi.runtime.registerResourceModule("azure", "streamanalytics/outputCosmosdb", _module)
pulumi.runtime.registerResourceModule("azure", "streamanalytics/outputEventHub", _module)
pulumi.runtime.registerResourceModule("azure", "streamanalytics/outputFunction", _module)
pulumi.runtime.registerResourceModule("azure", "streamanalytics/outputMssql", _module)
pulumi.runtime.registerResourceModule("azure", "streamanalytics/outputPowerbi", _module)
pulumi.runtime.registerResourceModule("azure", "streamanalytics/outputServiceBusQueue", _module)
pulumi.runtime.registerResourceModule("azure", "streamanalytics/outputServicebusTopic", _module)
pulumi.runtime.registerResourceModule("azure", "streamanalytics/outputSynapse", _module)
pulumi.runtime.registerResourceModule("azure", "streamanalytics/outputTable", _module)
pulumi.runtime.registerResourceModule("azure", "streamanalytics/referenceInputBlob", _module)
pulumi.runtime.registerResourceModule("azure", "streamanalytics/referenceInputMssql", _module)
pulumi.runtime.registerResourceModule("azure", "streamanalytics/streamInputBlob", _module)
pulumi.runtime.registerResourceModule("azure", "streamanalytics/streamInputEventHub", _module)
pulumi.runtime.registerResourceModule("azure", "streamanalytics/streamInputEventHubV2", _module)
pulumi.runtime.registerResourceModule("azure", "streamanalytics/streamInputIotHub", _module)
