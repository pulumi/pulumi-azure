// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Manages a Stream Analytics Reference Input Blob. Reference data (also known as a lookup table) is a finite data set that is static or slowly changing in nature, used to perform a lookup or to correlate with your data stream. Learn more [here](https://docs.microsoft.com/azure/stream-analytics/stream-analytics-use-reference-data#azure-blob-storage).
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const exampleResourceGroup = new azure.core.ResourceGroup("example", {
 *     name: "example-resources",
 *     location: "West Europe",
 * });
 * const example = azure.streamanalytics.getJobOutput({
 *     name: "example-job",
 *     resourceGroupName: exampleResourceGroup.name,
 * });
 * const exampleAccount = new azure.storage.Account("example", {
 *     name: "examplestoracc",
 *     resourceGroupName: exampleResourceGroup.name,
 *     location: exampleResourceGroup.location,
 *     accountTier: "Standard",
 *     accountReplicationType: "LRS",
 * });
 * const exampleContainer = new azure.storage.Container("example", {
 *     name: "example",
 *     storageAccountName: exampleAccount.name,
 *     containerAccessType: "private",
 * });
 * const test = new azure.streamanalytics.ReferenceInputBlob("test", {
 *     name: "blob-reference-input",
 *     streamAnalyticsJobName: example.apply(example => example.name),
 *     resourceGroupName: example.apply(example => example.resourceGroupName),
 *     storageAccountName: exampleAccount.name,
 *     storageAccountKey: exampleAccount.primaryAccessKey,
 *     storageContainerName: exampleContainer.name,
 *     pathPattern: "some-random-pattern",
 *     dateFormat: "yyyy/MM/dd",
 *     timeFormat: "HH",
 *     serialization: {
 *         type: "Json",
 *         encoding: "UTF8",
 *     },
 * });
 * ```
 *
 * ## API Providers
 *
 * <!-- This section is generated, changes will be overwritten -->
 * This resource uses the following Azure API Providers:
 *
 * * `Microsoft.StreamAnalytics` - 2020-03-01
 *
 * ## Import
 *
 * Stream Analytics Reference Input Blob's can be imported using the `resource id`, e.g.
 *
 * ```sh
 * $ pulumi import azure:streamanalytics/referenceInputBlob:ReferenceInputBlob example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.StreamAnalytics/streamingJobs/job1/inputs/input1
 * ```
 */
export class ReferenceInputBlob extends pulumi.CustomResource {
    /**
     * Get an existing ReferenceInputBlob resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ReferenceInputBlobState, opts?: pulumi.CustomResourceOptions): ReferenceInputBlob {
        return new ReferenceInputBlob(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure:streamanalytics/referenceInputBlob:ReferenceInputBlob';

    /**
     * Returns true if the given object is an instance of ReferenceInputBlob.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ReferenceInputBlob {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ReferenceInputBlob.__pulumiType;
    }

    /**
     * The authentication mode for the Stream Analytics Reference Input. Possible values are `Msi` and `ConnectionString`. Defaults to `ConnectionString`.
     */
    declare public readonly authenticationMode: pulumi.Output<string | undefined>;
    /**
     * The date format. Wherever `{date}` appears in `pathPattern`, the value of this property is used as the date format instead.
     */
    declare public readonly dateFormat: pulumi.Output<string>;
    /**
     * The name of the Reference Input Blob. Changing this forces a new resource to be created.
     */
    declare public readonly name: pulumi.Output<string>;
    /**
     * The blob path pattern. Not a regular expression. It represents a pattern against which blob names will be matched to determine whether or not they should be included as input or output to the job.
     */
    declare public readonly pathPattern: pulumi.Output<string>;
    /**
     * The name of the Resource Group where the Stream Analytics Job exists. Changing this forces a new resource to be created.
     */
    declare public readonly resourceGroupName: pulumi.Output<string>;
    /**
     * A `serialization` block as defined below.
     */
    declare public readonly serialization: pulumi.Output<outputs.streamanalytics.ReferenceInputBlobSerialization>;
    /**
     * The Access Key which should be used to connect to this Storage Account. Required if `authenticationMode` is `ConnectionString`.
     */
    declare public readonly storageAccountKey: pulumi.Output<string | undefined>;
    /**
     * The name of the Storage Account that has the blob container with reference data.
     */
    declare public readonly storageAccountName: pulumi.Output<string>;
    /**
     * The name of the Container within the Storage Account.
     */
    declare public readonly storageContainerName: pulumi.Output<string>;
    /**
     * The name of the Stream Analytics Job. Changing this forces a new resource to be created.
     */
    declare public readonly streamAnalyticsJobName: pulumi.Output<string>;
    /**
     * The time format. Wherever `{time}` appears in `pathPattern`, the value of this property is used as the time format instead.
     */
    declare public readonly timeFormat: pulumi.Output<string>;

    /**
     * Create a ReferenceInputBlob resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ReferenceInputBlobArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ReferenceInputBlobArgs | ReferenceInputBlobState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ReferenceInputBlobState | undefined;
            resourceInputs["authenticationMode"] = state?.authenticationMode;
            resourceInputs["dateFormat"] = state?.dateFormat;
            resourceInputs["name"] = state?.name;
            resourceInputs["pathPattern"] = state?.pathPattern;
            resourceInputs["resourceGroupName"] = state?.resourceGroupName;
            resourceInputs["serialization"] = state?.serialization;
            resourceInputs["storageAccountKey"] = state?.storageAccountKey;
            resourceInputs["storageAccountName"] = state?.storageAccountName;
            resourceInputs["storageContainerName"] = state?.storageContainerName;
            resourceInputs["streamAnalyticsJobName"] = state?.streamAnalyticsJobName;
            resourceInputs["timeFormat"] = state?.timeFormat;
        } else {
            const args = argsOrState as ReferenceInputBlobArgs | undefined;
            if (args?.dateFormat === undefined && !opts.urn) {
                throw new Error("Missing required property 'dateFormat'");
            }
            if (args?.pathPattern === undefined && !opts.urn) {
                throw new Error("Missing required property 'pathPattern'");
            }
            if (args?.resourceGroupName === undefined && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            if (args?.serialization === undefined && !opts.urn) {
                throw new Error("Missing required property 'serialization'");
            }
            if (args?.storageAccountName === undefined && !opts.urn) {
                throw new Error("Missing required property 'storageAccountName'");
            }
            if (args?.storageContainerName === undefined && !opts.urn) {
                throw new Error("Missing required property 'storageContainerName'");
            }
            if (args?.streamAnalyticsJobName === undefined && !opts.urn) {
                throw new Error("Missing required property 'streamAnalyticsJobName'");
            }
            if (args?.timeFormat === undefined && !opts.urn) {
                throw new Error("Missing required property 'timeFormat'");
            }
            resourceInputs["authenticationMode"] = args?.authenticationMode;
            resourceInputs["dateFormat"] = args?.dateFormat;
            resourceInputs["name"] = args?.name;
            resourceInputs["pathPattern"] = args?.pathPattern;
            resourceInputs["resourceGroupName"] = args?.resourceGroupName;
            resourceInputs["serialization"] = args?.serialization;
            resourceInputs["storageAccountKey"] = args?.storageAccountKey ? pulumi.secret(args.storageAccountKey) : undefined;
            resourceInputs["storageAccountName"] = args?.storageAccountName;
            resourceInputs["storageContainerName"] = args?.storageContainerName;
            resourceInputs["streamAnalyticsJobName"] = args?.streamAnalyticsJobName;
            resourceInputs["timeFormat"] = args?.timeFormat;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["storageAccountKey"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(ReferenceInputBlob.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ReferenceInputBlob resources.
 */
export interface ReferenceInputBlobState {
    /**
     * The authentication mode for the Stream Analytics Reference Input. Possible values are `Msi` and `ConnectionString`. Defaults to `ConnectionString`.
     */
    authenticationMode?: pulumi.Input<string>;
    /**
     * The date format. Wherever `{date}` appears in `pathPattern`, the value of this property is used as the date format instead.
     */
    dateFormat?: pulumi.Input<string>;
    /**
     * The name of the Reference Input Blob. Changing this forces a new resource to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * The blob path pattern. Not a regular expression. It represents a pattern against which blob names will be matched to determine whether or not they should be included as input or output to the job.
     */
    pathPattern?: pulumi.Input<string>;
    /**
     * The name of the Resource Group where the Stream Analytics Job exists. Changing this forces a new resource to be created.
     */
    resourceGroupName?: pulumi.Input<string>;
    /**
     * A `serialization` block as defined below.
     */
    serialization?: pulumi.Input<inputs.streamanalytics.ReferenceInputBlobSerialization>;
    /**
     * The Access Key which should be used to connect to this Storage Account. Required if `authenticationMode` is `ConnectionString`.
     */
    storageAccountKey?: pulumi.Input<string>;
    /**
     * The name of the Storage Account that has the blob container with reference data.
     */
    storageAccountName?: pulumi.Input<string>;
    /**
     * The name of the Container within the Storage Account.
     */
    storageContainerName?: pulumi.Input<string>;
    /**
     * The name of the Stream Analytics Job. Changing this forces a new resource to be created.
     */
    streamAnalyticsJobName?: pulumi.Input<string>;
    /**
     * The time format. Wherever `{time}` appears in `pathPattern`, the value of this property is used as the time format instead.
     */
    timeFormat?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ReferenceInputBlob resource.
 */
export interface ReferenceInputBlobArgs {
    /**
     * The authentication mode for the Stream Analytics Reference Input. Possible values are `Msi` and `ConnectionString`. Defaults to `ConnectionString`.
     */
    authenticationMode?: pulumi.Input<string>;
    /**
     * The date format. Wherever `{date}` appears in `pathPattern`, the value of this property is used as the date format instead.
     */
    dateFormat: pulumi.Input<string>;
    /**
     * The name of the Reference Input Blob. Changing this forces a new resource to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * The blob path pattern. Not a regular expression. It represents a pattern against which blob names will be matched to determine whether or not they should be included as input or output to the job.
     */
    pathPattern: pulumi.Input<string>;
    /**
     * The name of the Resource Group where the Stream Analytics Job exists. Changing this forces a new resource to be created.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * A `serialization` block as defined below.
     */
    serialization: pulumi.Input<inputs.streamanalytics.ReferenceInputBlobSerialization>;
    /**
     * The Access Key which should be used to connect to this Storage Account. Required if `authenticationMode` is `ConnectionString`.
     */
    storageAccountKey?: pulumi.Input<string>;
    /**
     * The name of the Storage Account that has the blob container with reference data.
     */
    storageAccountName: pulumi.Input<string>;
    /**
     * The name of the Container within the Storage Account.
     */
    storageContainerName: pulumi.Input<string>;
    /**
     * The name of the Stream Analytics Job. Changing this forces a new resource to be created.
     */
    streamAnalyticsJobName: pulumi.Input<string>;
    /**
     * The time format. Wherever `{time}` appears in `pathPattern`, the value of this property is used as the time format instead.
     */
    timeFormat: pulumi.Input<string>;
}
