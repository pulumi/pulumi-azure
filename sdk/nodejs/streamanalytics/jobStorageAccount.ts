// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Manages a Stream Analytics Job Storage Account. Use this resource for managing the Job Storage Account using `Msi` authentication with a `SystemAssigned` identity.
 *
 * > **Note:** The Job Storage Account for a Stream Analytics Job can be managed on the `azure.streamanalytics.Job` resource with the `jobStorageAccount` block, or with this resource. We do not recommend managing the Job Storage Account through both means as this can lead to conflicts.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = new azure.core.ResourceGroup("example", {
 *     name: "example-resources",
 *     location: "West Europe",
 * });
 * const exampleJob = new azure.streamanalytics.Job("example", {
 *     name: "example-job",
 *     resourceGroupName: example.name,
 *     location: example.location,
 *     compatibilityLevel: "1.2",
 *     dataLocale: "en-GB",
 *     eventsLateArrivalMaxDelayInSeconds: 60,
 *     eventsOutOfOrderMaxDelayInSeconds: 50,
 *     eventsOutOfOrderPolicy: "Adjust",
 *     outputErrorPolicy: "Drop",
 *     streamingUnits: 3,
 *     skuName: "StandardV2",
 *     identity: {
 *         type: "SystemAssigned",
 *     },
 *     tags: {
 *         environment: "Example",
 *     },
 *     transformationQuery: `    SELECT *
 *     INTO [YourOutputAlias]
 *     FROM [YourInputAlias]
 * `,
 * });
 * const exampleAccount = new azure.storage.Account("example", {
 *     name: "exampleaccount",
 *     resourceGroupName: example.name,
 *     location: example.location,
 *     accountTier: "Standard",
 *     accountReplicationType: "LRS",
 * });
 * const exampleJobStorageAccount = new azure.streamanalytics.JobStorageAccount("example", {
 *     streamAnalyticsJobId: exampleJob.id,
 *     storageAccountName: exampleAccount.name,
 *     authenticationMode: "Msi",
 * });
 * ```
 *
 * ## API Providers
 *
 * <!-- This section is generated, changes will be overwritten -->
 * This resource uses the following Azure API Providers:
 *
 * * `Microsoft.StreamAnalytics`: 2021-10-01-preview
 *
 * ## Import
 *
 * Stream Analytics Job Storage Accounts can be imported using the `resource id`, e.g.
 *
 * ```sh
 * $ pulumi import azure:streamanalytics/jobStorageAccount:JobStorageAccount example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.StreamAnalytics/streamingJobs/job1
 * ```
 */
export class JobStorageAccount extends pulumi.CustomResource {
    /**
     * Get an existing JobStorageAccount resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: JobStorageAccountState, opts?: pulumi.CustomResourceOptions): JobStorageAccount {
        return new JobStorageAccount(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure:streamanalytics/jobStorageAccount:JobStorageAccount';

    /**
     * Returns true if the given object is an instance of JobStorageAccount.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is JobStorageAccount {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === JobStorageAccount.__pulumiType;
    }

    /**
     * The authentication mode for the Stream Analytics Job's Storage Account. Possible values are `ConnectionString`, and `Msi`.
     */
    public readonly authenticationMode!: pulumi.Output<string>;
    public readonly storageAccountKey!: pulumi.Output<string | undefined>;
    public readonly storageAccountName!: pulumi.Output<string>;
    /**
     * The ID of the Stream Analytics Job. Changing this forces a new resource to be created.
     */
    public readonly streamAnalyticsJobId!: pulumi.Output<string>;

    /**
     * Create a JobStorageAccount resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: JobStorageAccountArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: JobStorageAccountArgs | JobStorageAccountState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as JobStorageAccountState | undefined;
            resourceInputs["authenticationMode"] = state ? state.authenticationMode : undefined;
            resourceInputs["storageAccountKey"] = state ? state.storageAccountKey : undefined;
            resourceInputs["storageAccountName"] = state ? state.storageAccountName : undefined;
            resourceInputs["streamAnalyticsJobId"] = state ? state.streamAnalyticsJobId : undefined;
        } else {
            const args = argsOrState as JobStorageAccountArgs | undefined;
            if ((!args || args.authenticationMode === undefined) && !opts.urn) {
                throw new Error("Missing required property 'authenticationMode'");
            }
            if ((!args || args.storageAccountName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'storageAccountName'");
            }
            if ((!args || args.streamAnalyticsJobId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'streamAnalyticsJobId'");
            }
            resourceInputs["authenticationMode"] = args ? args.authenticationMode : undefined;
            resourceInputs["storageAccountKey"] = args?.storageAccountKey ? pulumi.secret(args.storageAccountKey) : undefined;
            resourceInputs["storageAccountName"] = args ? args.storageAccountName : undefined;
            resourceInputs["streamAnalyticsJobId"] = args ? args.streamAnalyticsJobId : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["storageAccountKey"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(JobStorageAccount.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering JobStorageAccount resources.
 */
export interface JobStorageAccountState {
    /**
     * The authentication mode for the Stream Analytics Job's Storage Account. Possible values are `ConnectionString`, and `Msi`.
     */
    authenticationMode?: pulumi.Input<string>;
    storageAccountKey?: pulumi.Input<string>;
    storageAccountName?: pulumi.Input<string>;
    /**
     * The ID of the Stream Analytics Job. Changing this forces a new resource to be created.
     */
    streamAnalyticsJobId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a JobStorageAccount resource.
 */
export interface JobStorageAccountArgs {
    /**
     * The authentication mode for the Stream Analytics Job's Storage Account. Possible values are `ConnectionString`, and `Msi`.
     */
    authenticationMode: pulumi.Input<string>;
    storageAccountKey?: pulumi.Input<string>;
    storageAccountName: pulumi.Input<string>;
    /**
     * The ID of the Stream Analytics Job. Changing this forces a new resource to be created.
     */
    streamAnalyticsJobId: pulumi.Input<string>;
}
