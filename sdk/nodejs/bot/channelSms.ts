// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Manages a SMS integration for a Bot Channel
 *
 * > **Note** A bot can only have a single SMS Channel associated with it.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const current = azure.core.getClientConfig({});
 * const exampleResourceGroup = new azure.core.ResourceGroup("exampleResourceGroup", {location: "West Europe"});
 * const exampleChannelsRegistration = new azure.bot.ChannelsRegistration("exampleChannelsRegistration", {
 *     location: "global",
 *     resourceGroupName: exampleResourceGroup.name,
 *     sku: "F0",
 *     microsoftAppId: current.then(current => current.clientId),
 * });
 * const exampleChannelSms = new azure.bot.ChannelSms("exampleChannelSms", {
 *     botName: exampleChannelsRegistration.name,
 *     location: exampleChannelsRegistration.location,
 *     resourceGroupName: exampleResourceGroup.name,
 *     smsChannelAccountSecurityId: "BG61f7cf5157f439b084e98256409c2815",
 *     smsChannelAuthToken: "jh8980432610052ed4e29565c5e232f",
 *     phoneNumber: "+12313803556",
 * });
 * ```
 *
 * ## Import
 *
 * The SMS Integration for a Bot Channel can be imported using the `resource id`, e.g.
 *
 * ```sh
 *  $ pulumi import azure:bot/channelSms:ChannelSms example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.BotService/botServices/botService1/channels/SmsChannel
 * ```
 */
export class ChannelSms extends pulumi.CustomResource {
    /**
     * Get an existing ChannelSms resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ChannelSmsState, opts?: pulumi.CustomResourceOptions): ChannelSms {
        return new ChannelSms(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure:bot/channelSms:ChannelSms';

    /**
     * Returns true if the given object is an instance of ChannelSms.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ChannelSms {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ChannelSms.__pulumiType;
    }

    /**
     * The name of the Bot Resource this channel will be associated with. Changing this forces a new resource to be created.
     */
    public readonly botName!: pulumi.Output<string>;
    /**
     * Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
     */
    public readonly location!: pulumi.Output<string>;
    /**
     * The phone number for the SMS Channel.
     */
    public readonly phoneNumber!: pulumi.Output<string>;
    /**
     * The name of the resource group where the SMS Channel should be created. Changing this forces a new resource to be created.
     */
    public readonly resourceGroupName!: pulumi.Output<string>;
    /**
     * The account security identifier (SID) for the SMS Channel.
     */
    public readonly smsChannelAccountSecurityId!: pulumi.Output<string>;
    /**
     * The authorization token for the SMS Channel.
     */
    public readonly smsChannelAuthToken!: pulumi.Output<string>;

    /**
     * Create a ChannelSms resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ChannelSmsArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ChannelSmsArgs | ChannelSmsState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ChannelSmsState | undefined;
            resourceInputs["botName"] = state ? state.botName : undefined;
            resourceInputs["location"] = state ? state.location : undefined;
            resourceInputs["phoneNumber"] = state ? state.phoneNumber : undefined;
            resourceInputs["resourceGroupName"] = state ? state.resourceGroupName : undefined;
            resourceInputs["smsChannelAccountSecurityId"] = state ? state.smsChannelAccountSecurityId : undefined;
            resourceInputs["smsChannelAuthToken"] = state ? state.smsChannelAuthToken : undefined;
        } else {
            const args = argsOrState as ChannelSmsArgs | undefined;
            if ((!args || args.botName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'botName'");
            }
            if ((!args || args.phoneNumber === undefined) && !opts.urn) {
                throw new Error("Missing required property 'phoneNumber'");
            }
            if ((!args || args.resourceGroupName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            if ((!args || args.smsChannelAccountSecurityId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'smsChannelAccountSecurityId'");
            }
            if ((!args || args.smsChannelAuthToken === undefined) && !opts.urn) {
                throw new Error("Missing required property 'smsChannelAuthToken'");
            }
            resourceInputs["botName"] = args ? args.botName : undefined;
            resourceInputs["location"] = args ? args.location : undefined;
            resourceInputs["phoneNumber"] = args ? args.phoneNumber : undefined;
            resourceInputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            resourceInputs["smsChannelAccountSecurityId"] = args ? args.smsChannelAccountSecurityId : undefined;
            resourceInputs["smsChannelAuthToken"] = args?.smsChannelAuthToken ? pulumi.secret(args.smsChannelAuthToken) : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["smsChannelAuthToken"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(ChannelSms.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ChannelSms resources.
 */
export interface ChannelSmsState {
    /**
     * The name of the Bot Resource this channel will be associated with. Changing this forces a new resource to be created.
     */
    botName?: pulumi.Input<string>;
    /**
     * Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
     */
    location?: pulumi.Input<string>;
    /**
     * The phone number for the SMS Channel.
     */
    phoneNumber?: pulumi.Input<string>;
    /**
     * The name of the resource group where the SMS Channel should be created. Changing this forces a new resource to be created.
     */
    resourceGroupName?: pulumi.Input<string>;
    /**
     * The account security identifier (SID) for the SMS Channel.
     */
    smsChannelAccountSecurityId?: pulumi.Input<string>;
    /**
     * The authorization token for the SMS Channel.
     */
    smsChannelAuthToken?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ChannelSms resource.
 */
export interface ChannelSmsArgs {
    /**
     * The name of the Bot Resource this channel will be associated with. Changing this forces a new resource to be created.
     */
    botName: pulumi.Input<string>;
    /**
     * Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
     */
    location?: pulumi.Input<string>;
    /**
     * The phone number for the SMS Channel.
     */
    phoneNumber: pulumi.Input<string>;
    /**
     * The name of the resource group where the SMS Channel should be created. Changing this forces a new resource to be created.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * The account security identifier (SID) for the SMS Channel.
     */
    smsChannelAccountSecurityId: pulumi.Input<string>;
    /**
     * The authorization token for the SMS Channel.
     */
    smsChannelAuthToken: pulumi.Input<string>;
}
