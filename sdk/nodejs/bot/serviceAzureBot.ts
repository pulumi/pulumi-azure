// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Manages an Azure Bot Service.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const exampleResourceGroup = new azure.core.ResourceGroup("exampleResourceGroup", {location: "West Europe"});
 * const exampleInsights = new azure.appinsights.Insights("exampleInsights", {
 *     location: exampleResourceGroup.location,
 *     resourceGroupName: exampleResourceGroup.name,
 *     applicationType: "web",
 * });
 * const exampleApiKey = new azure.appinsights.ApiKey("exampleApiKey", {
 *     applicationInsightsId: exampleInsights.id,
 *     readPermissions: [
 *         "aggregate",
 *         "api",
 *         "draft",
 *         "extendqueries",
 *         "search",
 *     ],
 * });
 * const current = azure.core.getClientConfig({});
 * const exampleServiceAzureBot = new azure.bot.ServiceAzureBot("exampleServiceAzureBot", {
 *     resourceGroupName: exampleResourceGroup.name,
 *     location: "global",
 *     microsoftAppId: current.then(current => current.clientId),
 *     sku: "F0",
 *     endpoint: "https://example.com",
 *     developerAppInsightsApiKey: exampleApiKey.apiKey,
 *     developerAppInsightsApplicationId: exampleInsights.appId,
 *     tags: {
 *         environment: "test",
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * Azure Bot Services can be imported using the `resource id`, e.g.
 *
 * ```sh
 *  $ pulumi import azure:bot/serviceAzureBot:ServiceAzureBot example /subscriptions/12345678-1234-9876-4563-123456789012/resourceGroups/resGroup1/providers/Microsoft.BotService/botServices/botService1
 * ```
 */
export class ServiceAzureBot extends pulumi.CustomResource {
    /**
     * Get an existing ServiceAzureBot resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ServiceAzureBotState, opts?: pulumi.CustomResourceOptions): ServiceAzureBot {
        return new ServiceAzureBot(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure:bot/serviceAzureBot:ServiceAzureBot';

    /**
     * Returns true if the given object is an instance of ServiceAzureBot.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ServiceAzureBot {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ServiceAzureBot.__pulumiType;
    }

    /**
     * The Application Insights API Key to associate with this Azure Bot Service.
     */
    public readonly developerAppInsightsApiKey!: pulumi.Output<string | undefined>;
    /**
     * The resource ID of the Application Insights instance to associate with this Azure Bot Service.
     */
    public readonly developerAppInsightsApplicationId!: pulumi.Output<string | undefined>;
    /**
     * The Application Insight Key to associate with this Azure Bot Service.
     */
    public readonly developerAppInsightsKey!: pulumi.Output<string | undefined>;
    /**
     * The name that the Azure Bot Service will be displayed as. This defaults to the value set for `name` if not specified.
     */
    public readonly displayName!: pulumi.Output<string>;
    /**
     * The Azure Bot Service endpoint.
     */
    public readonly endpoint!: pulumi.Output<string | undefined>;
    /**
     * The Icon Url of the Azure Bot Service. Defaults to `https://docs.botframework.com/static/devportal/client/images/bot-framework-default.png`.
     */
    public readonly iconUrl!: pulumi.Output<string | undefined>;
    /**
     * Is local authentication enabled? Defaults to `true`.
     */
    public readonly localAuthenticationEnabled!: pulumi.Output<boolean | undefined>;
    /**
     * The supported Azure location where the Azure Bot Service should exist. Changing this forces a new resource to be created.
     */
    public readonly location!: pulumi.Output<string>;
    /**
     * A list of LUIS App IDs to associate with this Azure Bot Service.
     */
    public readonly luisAppIds!: pulumi.Output<string[] | undefined>;
    /**
     * The LUIS key to associate with this Azure Bot Service.
     */
    public readonly luisKey!: pulumi.Output<string | undefined>;
    /**
     * The Microsoft Application ID for the Azure Bot Service. Changing this forces a new resource to be created.
     */
    public readonly microsoftAppId!: pulumi.Output<string>;
    /**
     * The ID of the Microsoft App Managed Identity for this Azure Bot Service. Changing this forces a new resource to be created.
     */
    public readonly microsoftAppMsiId!: pulumi.Output<string | undefined>;
    /**
     * The Tenant ID of the Microsoft App for this Azure Bot Service. Changing this forces a new resource to be created.
     */
    public readonly microsoftAppTenantId!: pulumi.Output<string | undefined>;
    /**
     * The Microsoft App Type for this Azure Bot Service. Possible values are `MultiTenant`, `SingleTenant` and `UserAssignedMSI`. Changing this forces a new resource to be created.
     */
    public readonly microsoftAppType!: pulumi.Output<string | undefined>;
    /**
     * The name which should be used for this Azure Bot Service. Changing this forces a new resource to be created.
     */
    public readonly name!: pulumi.Output<string>;
    public readonly publicNetworkAccessEnabled!: pulumi.Output<boolean | undefined>;
    /**
     * The name of the Resource Group where the Azure Bot Service should exist. Changing this forces a new resource to be created.
     */
    public readonly resourceGroupName!: pulumi.Output<string>;
    /**
     * The SKU of the Azure Bot Service. Accepted values are `F0` or `S1`. Changing this forces a new resource to be created.
     */
    public readonly sku!: pulumi.Output<string>;
    /**
     * Is the streaming endpoint enabled for this Azure Bot Service. Defaults to `false`.
     */
    public readonly streamingEndpointEnabled!: pulumi.Output<boolean | undefined>;
    /**
     * A mapping of tags which should be assigned to this Azure Bot Service.
     */
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;

    /**
     * Create a ServiceAzureBot resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ServiceAzureBotArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ServiceAzureBotArgs | ServiceAzureBotState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ServiceAzureBotState | undefined;
            resourceInputs["developerAppInsightsApiKey"] = state ? state.developerAppInsightsApiKey : undefined;
            resourceInputs["developerAppInsightsApplicationId"] = state ? state.developerAppInsightsApplicationId : undefined;
            resourceInputs["developerAppInsightsKey"] = state ? state.developerAppInsightsKey : undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["endpoint"] = state ? state.endpoint : undefined;
            resourceInputs["iconUrl"] = state ? state.iconUrl : undefined;
            resourceInputs["localAuthenticationEnabled"] = state ? state.localAuthenticationEnabled : undefined;
            resourceInputs["location"] = state ? state.location : undefined;
            resourceInputs["luisAppIds"] = state ? state.luisAppIds : undefined;
            resourceInputs["luisKey"] = state ? state.luisKey : undefined;
            resourceInputs["microsoftAppId"] = state ? state.microsoftAppId : undefined;
            resourceInputs["microsoftAppMsiId"] = state ? state.microsoftAppMsiId : undefined;
            resourceInputs["microsoftAppTenantId"] = state ? state.microsoftAppTenantId : undefined;
            resourceInputs["microsoftAppType"] = state ? state.microsoftAppType : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["publicNetworkAccessEnabled"] = state ? state.publicNetworkAccessEnabled : undefined;
            resourceInputs["resourceGroupName"] = state ? state.resourceGroupName : undefined;
            resourceInputs["sku"] = state ? state.sku : undefined;
            resourceInputs["streamingEndpointEnabled"] = state ? state.streamingEndpointEnabled : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
        } else {
            const args = argsOrState as ServiceAzureBotArgs | undefined;
            if ((!args || args.microsoftAppId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'microsoftAppId'");
            }
            if ((!args || args.resourceGroupName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            if ((!args || args.sku === undefined) && !opts.urn) {
                throw new Error("Missing required property 'sku'");
            }
            resourceInputs["developerAppInsightsApiKey"] = args?.developerAppInsightsApiKey ? pulumi.secret(args.developerAppInsightsApiKey) : undefined;
            resourceInputs["developerAppInsightsApplicationId"] = args ? args.developerAppInsightsApplicationId : undefined;
            resourceInputs["developerAppInsightsKey"] = args ? args.developerAppInsightsKey : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["endpoint"] = args ? args.endpoint : undefined;
            resourceInputs["iconUrl"] = args ? args.iconUrl : undefined;
            resourceInputs["localAuthenticationEnabled"] = args ? args.localAuthenticationEnabled : undefined;
            resourceInputs["location"] = args ? args.location : undefined;
            resourceInputs["luisAppIds"] = args ? args.luisAppIds : undefined;
            resourceInputs["luisKey"] = args?.luisKey ? pulumi.secret(args.luisKey) : undefined;
            resourceInputs["microsoftAppId"] = args ? args.microsoftAppId : undefined;
            resourceInputs["microsoftAppMsiId"] = args ? args.microsoftAppMsiId : undefined;
            resourceInputs["microsoftAppTenantId"] = args ? args.microsoftAppTenantId : undefined;
            resourceInputs["microsoftAppType"] = args ? args.microsoftAppType : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["publicNetworkAccessEnabled"] = args ? args.publicNetworkAccessEnabled : undefined;
            resourceInputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            resourceInputs["sku"] = args ? args.sku : undefined;
            resourceInputs["streamingEndpointEnabled"] = args ? args.streamingEndpointEnabled : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["developerAppInsightsApiKey", "luisKey"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(ServiceAzureBot.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ServiceAzureBot resources.
 */
export interface ServiceAzureBotState {
    /**
     * The Application Insights API Key to associate with this Azure Bot Service.
     */
    developerAppInsightsApiKey?: pulumi.Input<string>;
    /**
     * The resource ID of the Application Insights instance to associate with this Azure Bot Service.
     */
    developerAppInsightsApplicationId?: pulumi.Input<string>;
    /**
     * The Application Insight Key to associate with this Azure Bot Service.
     */
    developerAppInsightsKey?: pulumi.Input<string>;
    /**
     * The name that the Azure Bot Service will be displayed as. This defaults to the value set for `name` if not specified.
     */
    displayName?: pulumi.Input<string>;
    /**
     * The Azure Bot Service endpoint.
     */
    endpoint?: pulumi.Input<string>;
    /**
     * The Icon Url of the Azure Bot Service. Defaults to `https://docs.botframework.com/static/devportal/client/images/bot-framework-default.png`.
     */
    iconUrl?: pulumi.Input<string>;
    /**
     * Is local authentication enabled? Defaults to `true`.
     */
    localAuthenticationEnabled?: pulumi.Input<boolean>;
    /**
     * The supported Azure location where the Azure Bot Service should exist. Changing this forces a new resource to be created.
     */
    location?: pulumi.Input<string>;
    /**
     * A list of LUIS App IDs to associate with this Azure Bot Service.
     */
    luisAppIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The LUIS key to associate with this Azure Bot Service.
     */
    luisKey?: pulumi.Input<string>;
    /**
     * The Microsoft Application ID for the Azure Bot Service. Changing this forces a new resource to be created.
     */
    microsoftAppId?: pulumi.Input<string>;
    /**
     * The ID of the Microsoft App Managed Identity for this Azure Bot Service. Changing this forces a new resource to be created.
     */
    microsoftAppMsiId?: pulumi.Input<string>;
    /**
     * The Tenant ID of the Microsoft App for this Azure Bot Service. Changing this forces a new resource to be created.
     */
    microsoftAppTenantId?: pulumi.Input<string>;
    /**
     * The Microsoft App Type for this Azure Bot Service. Possible values are `MultiTenant`, `SingleTenant` and `UserAssignedMSI`. Changing this forces a new resource to be created.
     */
    microsoftAppType?: pulumi.Input<string>;
    /**
     * The name which should be used for this Azure Bot Service. Changing this forces a new resource to be created.
     */
    name?: pulumi.Input<string>;
    publicNetworkAccessEnabled?: pulumi.Input<boolean>;
    /**
     * The name of the Resource Group where the Azure Bot Service should exist. Changing this forces a new resource to be created.
     */
    resourceGroupName?: pulumi.Input<string>;
    /**
     * The SKU of the Azure Bot Service. Accepted values are `F0` or `S1`. Changing this forces a new resource to be created.
     */
    sku?: pulumi.Input<string>;
    /**
     * Is the streaming endpoint enabled for this Azure Bot Service. Defaults to `false`.
     */
    streamingEndpointEnabled?: pulumi.Input<boolean>;
    /**
     * A mapping of tags which should be assigned to this Azure Bot Service.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

/**
 * The set of arguments for constructing a ServiceAzureBot resource.
 */
export interface ServiceAzureBotArgs {
    /**
     * The Application Insights API Key to associate with this Azure Bot Service.
     */
    developerAppInsightsApiKey?: pulumi.Input<string>;
    /**
     * The resource ID of the Application Insights instance to associate with this Azure Bot Service.
     */
    developerAppInsightsApplicationId?: pulumi.Input<string>;
    /**
     * The Application Insight Key to associate with this Azure Bot Service.
     */
    developerAppInsightsKey?: pulumi.Input<string>;
    /**
     * The name that the Azure Bot Service will be displayed as. This defaults to the value set for `name` if not specified.
     */
    displayName?: pulumi.Input<string>;
    /**
     * The Azure Bot Service endpoint.
     */
    endpoint?: pulumi.Input<string>;
    /**
     * The Icon Url of the Azure Bot Service. Defaults to `https://docs.botframework.com/static/devportal/client/images/bot-framework-default.png`.
     */
    iconUrl?: pulumi.Input<string>;
    /**
     * Is local authentication enabled? Defaults to `true`.
     */
    localAuthenticationEnabled?: pulumi.Input<boolean>;
    /**
     * The supported Azure location where the Azure Bot Service should exist. Changing this forces a new resource to be created.
     */
    location?: pulumi.Input<string>;
    /**
     * A list of LUIS App IDs to associate with this Azure Bot Service.
     */
    luisAppIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The LUIS key to associate with this Azure Bot Service.
     */
    luisKey?: pulumi.Input<string>;
    /**
     * The Microsoft Application ID for the Azure Bot Service. Changing this forces a new resource to be created.
     */
    microsoftAppId: pulumi.Input<string>;
    /**
     * The ID of the Microsoft App Managed Identity for this Azure Bot Service. Changing this forces a new resource to be created.
     */
    microsoftAppMsiId?: pulumi.Input<string>;
    /**
     * The Tenant ID of the Microsoft App for this Azure Bot Service. Changing this forces a new resource to be created.
     */
    microsoftAppTenantId?: pulumi.Input<string>;
    /**
     * The Microsoft App Type for this Azure Bot Service. Possible values are `MultiTenant`, `SingleTenant` and `UserAssignedMSI`. Changing this forces a new resource to be created.
     */
    microsoftAppType?: pulumi.Input<string>;
    /**
     * The name which should be used for this Azure Bot Service. Changing this forces a new resource to be created.
     */
    name?: pulumi.Input<string>;
    publicNetworkAccessEnabled?: pulumi.Input<boolean>;
    /**
     * The name of the Resource Group where the Azure Bot Service should exist. Changing this forces a new resource to be created.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * The SKU of the Azure Bot Service. Accepted values are `F0` or `S1`. Changing this forces a new resource to be created.
     */
    sku: pulumi.Input<string>;
    /**
     * Is the streaming endpoint enabled for this Azure Bot Service. Defaults to `false`.
     */
    streamingEndpointEnabled?: pulumi.Input<boolean>;
    /**
     * A mapping of tags which should be assigned to this Azure Bot Service.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
