// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { ChannelAlexaArgs, ChannelAlexaState } from "./channelAlexa";
export type ChannelAlexa = import("./channelAlexa").ChannelAlexa;
export const ChannelAlexa: typeof import("./channelAlexa").ChannelAlexa = null as any;
utilities.lazyLoad(exports, ["ChannelAlexa"], () => require("./channelAlexa"));

export { ChannelDirectLineArgs, ChannelDirectLineState } from "./channelDirectLine";
export type ChannelDirectLine = import("./channelDirectLine").ChannelDirectLine;
export const ChannelDirectLine: typeof import("./channelDirectLine").ChannelDirectLine = null as any;
utilities.lazyLoad(exports, ["ChannelDirectLine"], () => require("./channelDirectLine"));

export { ChannelDirectLineSpeechArgs, ChannelDirectLineSpeechState } from "./channelDirectLineSpeech";
export type ChannelDirectLineSpeech = import("./channelDirectLineSpeech").ChannelDirectLineSpeech;
export const ChannelDirectLineSpeech: typeof import("./channelDirectLineSpeech").ChannelDirectLineSpeech = null as any;
utilities.lazyLoad(exports, ["ChannelDirectLineSpeech"], () => require("./channelDirectLineSpeech"));

export { ChannelEmailArgs, ChannelEmailState } from "./channelEmail";
export type ChannelEmail = import("./channelEmail").ChannelEmail;
export const ChannelEmail: typeof import("./channelEmail").ChannelEmail = null as any;
utilities.lazyLoad(exports, ["ChannelEmail"], () => require("./channelEmail"));

export { ChannelFacebookArgs, ChannelFacebookState } from "./channelFacebook";
export type ChannelFacebook = import("./channelFacebook").ChannelFacebook;
export const ChannelFacebook: typeof import("./channelFacebook").ChannelFacebook = null as any;
utilities.lazyLoad(exports, ["ChannelFacebook"], () => require("./channelFacebook"));

export { ChannelLineArgs, ChannelLineState } from "./channelLine";
export type ChannelLine = import("./channelLine").ChannelLine;
export const ChannelLine: typeof import("./channelLine").ChannelLine = null as any;
utilities.lazyLoad(exports, ["ChannelLine"], () => require("./channelLine"));

export { ChannelSlackArgs, ChannelSlackState } from "./channelSlack";
export type ChannelSlack = import("./channelSlack").ChannelSlack;
export const ChannelSlack: typeof import("./channelSlack").ChannelSlack = null as any;
utilities.lazyLoad(exports, ["ChannelSlack"], () => require("./channelSlack"));

export { ChannelSmsArgs, ChannelSmsState } from "./channelSms";
export type ChannelSms = import("./channelSms").ChannelSms;
export const ChannelSms: typeof import("./channelSms").ChannelSms = null as any;
utilities.lazyLoad(exports, ["ChannelSms"], () => require("./channelSms"));

export { ChannelTeamsArgs, ChannelTeamsState } from "./channelTeams";
export type ChannelTeams = import("./channelTeams").ChannelTeams;
export const ChannelTeams: typeof import("./channelTeams").ChannelTeams = null as any;
utilities.lazyLoad(exports, ["ChannelTeams"], () => require("./channelTeams"));

export { ChannelWebChatArgs, ChannelWebChatState } from "./channelWebChat";
export type ChannelWebChat = import("./channelWebChat").ChannelWebChat;
export const ChannelWebChat: typeof import("./channelWebChat").ChannelWebChat = null as any;
utilities.lazyLoad(exports, ["ChannelWebChat"], () => require("./channelWebChat"));

export { ChannelsRegistrationArgs, ChannelsRegistrationState } from "./channelsRegistration";
export type ChannelsRegistration = import("./channelsRegistration").ChannelsRegistration;
export const ChannelsRegistration: typeof import("./channelsRegistration").ChannelsRegistration = null as any;
utilities.lazyLoad(exports, ["ChannelsRegistration"], () => require("./channelsRegistration"));

export { ConnectionArgs, ConnectionState } from "./connection";
export type Connection = import("./connection").Connection;
export const Connection: typeof import("./connection").Connection = null as any;
utilities.lazyLoad(exports, ["Connection"], () => require("./connection"));

export { HealthbotArgs, HealthbotState } from "./healthbot";
export type Healthbot = import("./healthbot").Healthbot;
export const Healthbot: typeof import("./healthbot").Healthbot = null as any;
utilities.lazyLoad(exports, ["Healthbot"], () => require("./healthbot"));

export { ServiceAzureBotArgs, ServiceAzureBotState } from "./serviceAzureBot";
export type ServiceAzureBot = import("./serviceAzureBot").ServiceAzureBot;
export const ServiceAzureBot: typeof import("./serviceAzureBot").ServiceAzureBot = null as any;
utilities.lazyLoad(exports, ["ServiceAzureBot"], () => require("./serviceAzureBot"));

export { WebAppArgs, WebAppState } from "./webApp";
export type WebApp = import("./webApp").WebApp;
export const WebApp: typeof import("./webApp").WebApp = null as any;
utilities.lazyLoad(exports, ["WebApp"], () => require("./webApp"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "azure:bot/channelAlexa:ChannelAlexa":
                return new ChannelAlexa(name, <any>undefined, { urn })
            case "azure:bot/channelDirectLine:ChannelDirectLine":
                return new ChannelDirectLine(name, <any>undefined, { urn })
            case "azure:bot/channelDirectLineSpeech:ChannelDirectLineSpeech":
                return new ChannelDirectLineSpeech(name, <any>undefined, { urn })
            case "azure:bot/channelEmail:ChannelEmail":
                return new ChannelEmail(name, <any>undefined, { urn })
            case "azure:bot/channelFacebook:ChannelFacebook":
                return new ChannelFacebook(name, <any>undefined, { urn })
            case "azure:bot/channelLine:ChannelLine":
                return new ChannelLine(name, <any>undefined, { urn })
            case "azure:bot/channelSlack:ChannelSlack":
                return new ChannelSlack(name, <any>undefined, { urn })
            case "azure:bot/channelSms:ChannelSms":
                return new ChannelSms(name, <any>undefined, { urn })
            case "azure:bot/channelTeams:ChannelTeams":
                return new ChannelTeams(name, <any>undefined, { urn })
            case "azure:bot/channelWebChat:ChannelWebChat":
                return new ChannelWebChat(name, <any>undefined, { urn })
            case "azure:bot/channelsRegistration:ChannelsRegistration":
                return new ChannelsRegistration(name, <any>undefined, { urn })
            case "azure:bot/connection:Connection":
                return new Connection(name, <any>undefined, { urn })
            case "azure:bot/healthbot:Healthbot":
                return new Healthbot(name, <any>undefined, { urn })
            case "azure:bot/serviceAzureBot:ServiceAzureBot":
                return new ServiceAzureBot(name, <any>undefined, { urn })
            case "azure:bot/webApp:WebApp":
                return new WebApp(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure", "bot/channelAlexa", _module)
pulumi.runtime.registerResourceModule("azure", "bot/channelDirectLine", _module)
pulumi.runtime.registerResourceModule("azure", "bot/channelDirectLineSpeech", _module)
pulumi.runtime.registerResourceModule("azure", "bot/channelEmail", _module)
pulumi.runtime.registerResourceModule("azure", "bot/channelFacebook", _module)
pulumi.runtime.registerResourceModule("azure", "bot/channelLine", _module)
pulumi.runtime.registerResourceModule("azure", "bot/channelSlack", _module)
pulumi.runtime.registerResourceModule("azure", "bot/channelSms", _module)
pulumi.runtime.registerResourceModule("azure", "bot/channelTeams", _module)
pulumi.runtime.registerResourceModule("azure", "bot/channelWebChat", _module)
pulumi.runtime.registerResourceModule("azure", "bot/channelsRegistration", _module)
pulumi.runtime.registerResourceModule("azure", "bot/connection", _module)
pulumi.runtime.registerResourceModule("azure", "bot/healthbot", _module)
pulumi.runtime.registerResourceModule("azure", "bot/serviceAzureBot", _module)
pulumi.runtime.registerResourceModule("azure", "bot/webApp", _module)
