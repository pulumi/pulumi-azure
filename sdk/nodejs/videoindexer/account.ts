// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Manages a Video Indexer Account
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = new azure.core.ResourceGroup("example", {
 *     name: "example",
 *     location: "West Europe",
 * });
 * const exampleAccount = new azure.storage.Account("example", {
 *     name: "example",
 *     resourceGroupName: example.name,
 *     location: example.location,
 *     accountTier: "Standard",
 *     accountReplicationType: "LRS",
 * });
 * const exampleAccount2 = new azure.videoindexer.Account("example", {
 *     name: "example",
 *     resourceGroupName: example.name,
 *     location: "West Europe",
 *     storage: {
 *         storageAccountId: exampleAccount.id,
 *     },
 *     identity: {
 *         type: "SystemAssigned",
 *     },
 * });
 * ```
 *
 * ## API Providers
 *
 * <!-- This section is generated, changes will be overwritten -->
 * This resource uses the following Azure API Providers:
 *
 * * `Microsoft.VideoIndexer` - 2025-04-01
 *
 * ## Import
 *
 * Video Indexer Accounts can be imported using the `resource id`, e.g.
 *
 * ```sh
 * $ pulumi import azure:videoindexer/account:Account example /subscriptions/12345678-1234-9876-4563-123456789012/resourceGroups/example-resource-group/providers/Microsoft.VideoIndexer/accounts/example-account-name
 * ```
 */
export class Account extends pulumi.CustomResource {
    /**
     * Get an existing Account resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AccountState, opts?: pulumi.CustomResourceOptions): Account {
        return new Account(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure:videoindexer/account:Account';

    /**
     * Returns true if the given object is an instance of Account.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Account {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Account.__pulumiType;
    }

    /**
     * An `identity` block as defined below.
     */
    declare public readonly identity: pulumi.Output<outputs.videoindexer.AccountIdentity>;
    /**
     * The Azure location where the Video Indexer Account exists. Changing this forces a new resource to be created.
     */
    declare public readonly location: pulumi.Output<string>;
    /**
     * The name of the Video Indexer Account. Changing the name forces a new resource to be created.
     */
    declare public readonly name: pulumi.Output<string>;
    /**
     * The public network access for the Video Indexer Account. Possible values are `Enabled` and `Disabled`. Defaults to `Enabled`.
     */
    declare public readonly publicNetworkAccess: pulumi.Output<string | undefined>;
    /**
     * The name of the Resource Group that the Video Indexer Account will be associated with. Changing the name forces a new resource to be created.
     */
    declare public readonly resourceGroupName: pulumi.Output<string>;
    /**
     * A `storage` block as defined below.
     */
    declare public readonly storage: pulumi.Output<outputs.videoindexer.AccountStorage>;
    /**
     * A mapping of tags to assign to the resource.
     */
    declare public readonly tags: pulumi.Output<{[key: string]: string} | undefined>;

    /**
     * Create a Account resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AccountArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AccountArgs | AccountState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AccountState | undefined;
            resourceInputs["identity"] = state?.identity;
            resourceInputs["location"] = state?.location;
            resourceInputs["name"] = state?.name;
            resourceInputs["publicNetworkAccess"] = state?.publicNetworkAccess;
            resourceInputs["resourceGroupName"] = state?.resourceGroupName;
            resourceInputs["storage"] = state?.storage;
            resourceInputs["tags"] = state?.tags;
        } else {
            const args = argsOrState as AccountArgs | undefined;
            if (args?.identity === undefined && !opts.urn) {
                throw new Error("Missing required property 'identity'");
            }
            if (args?.resourceGroupName === undefined && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            if (args?.storage === undefined && !opts.urn) {
                throw new Error("Missing required property 'storage'");
            }
            resourceInputs["identity"] = args?.identity;
            resourceInputs["location"] = args?.location;
            resourceInputs["name"] = args?.name;
            resourceInputs["publicNetworkAccess"] = args?.publicNetworkAccess;
            resourceInputs["resourceGroupName"] = args?.resourceGroupName;
            resourceInputs["storage"] = args?.storage;
            resourceInputs["tags"] = args?.tags;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Account.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Account resources.
 */
export interface AccountState {
    /**
     * An `identity` block as defined below.
     */
    identity?: pulumi.Input<inputs.videoindexer.AccountIdentity>;
    /**
     * The Azure location where the Video Indexer Account exists. Changing this forces a new resource to be created.
     */
    location?: pulumi.Input<string>;
    /**
     * The name of the Video Indexer Account. Changing the name forces a new resource to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * The public network access for the Video Indexer Account. Possible values are `Enabled` and `Disabled`. Defaults to `Enabled`.
     */
    publicNetworkAccess?: pulumi.Input<string>;
    /**
     * The name of the Resource Group that the Video Indexer Account will be associated with. Changing the name forces a new resource to be created.
     */
    resourceGroupName?: pulumi.Input<string>;
    /**
     * A `storage` block as defined below.
     */
    storage?: pulumi.Input<inputs.videoindexer.AccountStorage>;
    /**
     * A mapping of tags to assign to the resource.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

/**
 * The set of arguments for constructing a Account resource.
 */
export interface AccountArgs {
    /**
     * An `identity` block as defined below.
     */
    identity: pulumi.Input<inputs.videoindexer.AccountIdentity>;
    /**
     * The Azure location where the Video Indexer Account exists. Changing this forces a new resource to be created.
     */
    location?: pulumi.Input<string>;
    /**
     * The name of the Video Indexer Account. Changing the name forces a new resource to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * The public network access for the Video Indexer Account. Possible values are `Enabled` and `Disabled`. Defaults to `Enabled`.
     */
    publicNetworkAccess?: pulumi.Input<string>;
    /**
     * The name of the Resource Group that the Video Indexer Account will be associated with. Changing the name forces a new resource to be created.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * A `storage` block as defined below.
     */
    storage: pulumi.Input<inputs.videoindexer.AccountStorage>;
    /**
     * A mapping of tags to assign to the resource.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
