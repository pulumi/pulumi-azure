// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Uses this data source to access information about an existing NetApp Account.
 *
 * ## NetApp Account Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = azure.netapp.getAccount({
 *     resourceGroupName: "acctestRG",
 *     name: "acctestnetappaccount",
 * });
 * export const netappAccountId = example.then(example => example.id);
 * ```
 */
export function getAccount(args: GetAccountArgs, opts?: pulumi.InvokeOptions): Promise<GetAccountResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azure:netapp/getAccount:getAccount", {
        "identity": args.identity,
        "name": args.name,
        "resourceGroupName": args.resourceGroupName,
    }, opts);
}

/**
 * A collection of arguments for invoking getAccount.
 */
export interface GetAccountArgs {
    identity?: inputs.netapp.GetAccountIdentity;
    /**
     * The name of the NetApp Account.
     */
    name: string;
    /**
     * The Name of the Resource Group where the NetApp Account exists.
     */
    resourceGroupName: string;
}

/**
 * A collection of values returned by getAccount.
 */
export interface GetAccountResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly identity?: outputs.netapp.GetAccountIdentity;
    /**
     * The Azure Region where the NetApp Account exists.
     */
    readonly location: string;
    readonly name: string;
    readonly resourceGroupName: string;
    readonly tags: {[key: string]: string};
}
/**
 * Uses this data source to access information about an existing NetApp Account.
 *
 * ## NetApp Account Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = azure.netapp.getAccount({
 *     resourceGroupName: "acctestRG",
 *     name: "acctestnetappaccount",
 * });
 * export const netappAccountId = example.then(example => example.id);
 * ```
 */
export function getAccountOutput(args: GetAccountOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAccountResult> {
    return pulumi.output(args).apply((a: any) => getAccount(a, opts))
}

/**
 * A collection of arguments for invoking getAccount.
 */
export interface GetAccountOutputArgs {
    identity?: pulumi.Input<inputs.netapp.GetAccountIdentityArgs>;
    /**
     * The name of the NetApp Account.
     */
    name: pulumi.Input<string>;
    /**
     * The Name of the Resource Group where the NetApp Account exists.
     */
    resourceGroupName: pulumi.Input<string>;
}
