// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Uses this data source to access information about an existing NetApp Snapshot Policy.
 */
export function getSnapshotPolicy(args: GetSnapshotPolicyArgs, opts?: pulumi.InvokeOptions): Promise<GetSnapshotPolicyResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azure:netapp/getSnapshotPolicy:getSnapshotPolicy", {
        "accountName": args.accountName,
        "name": args.name,
        "resourceGroupName": args.resourceGroupName,
    }, opts);
}

/**
 * A collection of arguments for invoking getSnapshotPolicy.
 */
export interface GetSnapshotPolicyArgs {
    /**
     * The name of the NetApp account where the NetApp Snapshot Policy exists.
     */
    accountName: string;
    /**
     * The name of the NetApp Snapshot Policy.
     */
    name: string;
    /**
     * The Name of the Resource Group where the NetApp Snapshot Policy exists.
     */
    resourceGroupName: string;
}

/**
 * A collection of values returned by getSnapshotPolicy.
 */
export interface GetSnapshotPolicyResult {
    /**
     * The name of the NetApp Account in which the NetApp Snapshot Policy was created.
     */
    readonly accountName: string;
    /**
     * Daily snapshot schedule.
     */
    readonly dailySchedules: outputs.netapp.GetSnapshotPolicyDailySchedule[];
    /**
     * Defines that the NetApp Snapshot Policy is enabled or not.
     */
    readonly enabled: boolean;
    /**
     * Hourly snapshot schedule.
     */
    readonly hourlySchedules: outputs.netapp.GetSnapshotPolicyHourlySchedule[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * Specifies the supported Azure location where the resource exists.
     */
    readonly location: string;
    /**
     * List of the days of the month when the snapshots will be created.
     */
    readonly monthlySchedules: outputs.netapp.GetSnapshotPolicyMonthlySchedule[];
    /**
     * The name of the NetApp Snapshot Policy.
     */
    readonly name: string;
    /**
     * The name of the resource group where the NetApp Snapshot Policy should be created.
     */
    readonly resourceGroupName: string;
    readonly tags: {[key: string]: string};
    /**
     * Weekly snapshot schedule.
     */
    readonly weeklySchedules: outputs.netapp.GetSnapshotPolicyWeeklySchedule[];
}
/**
 * Uses this data source to access information about an existing NetApp Snapshot Policy.
 */
export function getSnapshotPolicyOutput(args: GetSnapshotPolicyOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSnapshotPolicyResult> {
    return pulumi.output(args).apply((a: any) => getSnapshotPolicy(a, opts))
}

/**
 * A collection of arguments for invoking getSnapshotPolicy.
 */
export interface GetSnapshotPolicyOutputArgs {
    /**
     * The name of the NetApp account where the NetApp Snapshot Policy exists.
     */
    accountName: pulumi.Input<string>;
    /**
     * The name of the NetApp Snapshot Policy.
     */
    name: pulumi.Input<string>;
    /**
     * The Name of the Resource Group where the NetApp Snapshot Policy exists.
     */
    resourceGroupName: pulumi.Input<string>;
}
