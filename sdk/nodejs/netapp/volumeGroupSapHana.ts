// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * ## Import
 *
 * Application Volume Groups can be imported using the `resource id`, e.g.
 *
 * ```sh
 *  $ pulumi import azure:netapp/volumeGroupSapHana:VolumeGroupSapHana example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/mytest-rg/providers/Microsoft.NetApp/netAppAccounts/netapp-account-test/volumeGroups/netapp-volumegroup-test
 * ```
 */
export class VolumeGroupSapHana extends pulumi.CustomResource {
    /**
     * Get an existing VolumeGroupSapHana resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: VolumeGroupSapHanaState, opts?: pulumi.CustomResourceOptions): VolumeGroupSapHana {
        return new VolumeGroupSapHana(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure:netapp/volumeGroupSapHana:VolumeGroupSapHana';

    /**
     * Returns true if the given object is an instance of VolumeGroupSapHana.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is VolumeGroupSapHana {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === VolumeGroupSapHana.__pulumiType;
    }

    /**
     * Name of the account where the application volume group belong to. Changing this forces a new Application Volume Group to be created and data will be lost.
     */
    public readonly accountName!: pulumi.Output<string>;
    /**
     * The SAP System ID, maximum 3 characters, e.g. `SH9`. Changing this forces a new Application Volume Group to be created and data will be lost.
     */
    public readonly applicationIdentifier!: pulumi.Output<string>;
    /**
     * Volume group description. Changing this forces a new Application Volume Group to be created and data will be lost.
     */
    public readonly groupDescription!: pulumi.Output<string>;
    /**
     * The Azure Region where the Application Volume Group should exist. Changing this forces a new Application Volume Group to be created and data will be lost.
     */
    public readonly location!: pulumi.Output<string>;
    /**
     * The name which should be used for this Application Volume Group. Changing this forces a new Application Volume Group to be created and data will be lost.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The name of the Resource Group where the Application Volume Group should exist. Changing this forces a new Application Volume Group to be created and data will be lost.
     */
    public readonly resourceGroupName!: pulumi.Output<string>;
    /**
     * One or more `volume` blocks as defined below.
     */
    public readonly volumes!: pulumi.Output<outputs.netapp.VolumeGroupSapHanaVolume[]>;

    /**
     * Create a VolumeGroupSapHana resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: VolumeGroupSapHanaArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: VolumeGroupSapHanaArgs | VolumeGroupSapHanaState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as VolumeGroupSapHanaState | undefined;
            resourceInputs["accountName"] = state ? state.accountName : undefined;
            resourceInputs["applicationIdentifier"] = state ? state.applicationIdentifier : undefined;
            resourceInputs["groupDescription"] = state ? state.groupDescription : undefined;
            resourceInputs["location"] = state ? state.location : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["resourceGroupName"] = state ? state.resourceGroupName : undefined;
            resourceInputs["volumes"] = state ? state.volumes : undefined;
        } else {
            const args = argsOrState as VolumeGroupSapHanaArgs | undefined;
            if ((!args || args.accountName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'accountName'");
            }
            if ((!args || args.applicationIdentifier === undefined) && !opts.urn) {
                throw new Error("Missing required property 'applicationIdentifier'");
            }
            if ((!args || args.groupDescription === undefined) && !opts.urn) {
                throw new Error("Missing required property 'groupDescription'");
            }
            if ((!args || args.resourceGroupName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            if ((!args || args.volumes === undefined) && !opts.urn) {
                throw new Error("Missing required property 'volumes'");
            }
            resourceInputs["accountName"] = args ? args.accountName : undefined;
            resourceInputs["applicationIdentifier"] = args ? args.applicationIdentifier : undefined;
            resourceInputs["groupDescription"] = args ? args.groupDescription : undefined;
            resourceInputs["location"] = args ? args.location : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            resourceInputs["volumes"] = args ? args.volumes : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(VolumeGroupSapHana.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering VolumeGroupSapHana resources.
 */
export interface VolumeGroupSapHanaState {
    /**
     * Name of the account where the application volume group belong to. Changing this forces a new Application Volume Group to be created and data will be lost.
     */
    accountName?: pulumi.Input<string>;
    /**
     * The SAP System ID, maximum 3 characters, e.g. `SH9`. Changing this forces a new Application Volume Group to be created and data will be lost.
     */
    applicationIdentifier?: pulumi.Input<string>;
    /**
     * Volume group description. Changing this forces a new Application Volume Group to be created and data will be lost.
     */
    groupDescription?: pulumi.Input<string>;
    /**
     * The Azure Region where the Application Volume Group should exist. Changing this forces a new Application Volume Group to be created and data will be lost.
     */
    location?: pulumi.Input<string>;
    /**
     * The name which should be used for this Application Volume Group. Changing this forces a new Application Volume Group to be created and data will be lost.
     */
    name?: pulumi.Input<string>;
    /**
     * The name of the Resource Group where the Application Volume Group should exist. Changing this forces a new Application Volume Group to be created and data will be lost.
     */
    resourceGroupName?: pulumi.Input<string>;
    /**
     * One or more `volume` blocks as defined below.
     */
    volumes?: pulumi.Input<pulumi.Input<inputs.netapp.VolumeGroupSapHanaVolume>[]>;
}

/**
 * The set of arguments for constructing a VolumeGroupSapHana resource.
 */
export interface VolumeGroupSapHanaArgs {
    /**
     * Name of the account where the application volume group belong to. Changing this forces a new Application Volume Group to be created and data will be lost.
     */
    accountName: pulumi.Input<string>;
    /**
     * The SAP System ID, maximum 3 characters, e.g. `SH9`. Changing this forces a new Application Volume Group to be created and data will be lost.
     */
    applicationIdentifier: pulumi.Input<string>;
    /**
     * Volume group description. Changing this forces a new Application Volume Group to be created and data will be lost.
     */
    groupDescription: pulumi.Input<string>;
    /**
     * The Azure Region where the Application Volume Group should exist. Changing this forces a new Application Volume Group to be created and data will be lost.
     */
    location?: pulumi.Input<string>;
    /**
     * The name which should be used for this Application Volume Group. Changing this forces a new Application Volume Group to be created and data will be lost.
     */
    name?: pulumi.Input<string>;
    /**
     * The name of the Resource Group where the Application Volume Group should exist. Changing this forces a new Application Volume Group to be created and data will be lost.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * One or more `volume` blocks as defined below.
     */
    volumes: pulumi.Input<pulumi.Input<inputs.netapp.VolumeGroupSapHanaVolume>[]>;
}
