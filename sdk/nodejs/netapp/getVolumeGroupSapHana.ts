// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Use this data source to access information about an existing Application Volume Group for SAP HANA application.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = azure.netapp.getVolumeGroupSapHana({
 *     name: "existing application volume group name",
 *     resourceGroupName: "resource group name where the account and volume group belong to",
 *     accountName: "existing account where the application volume group belong to",
 * });
 * export const id = example.then(example => example.id);
 * ```
 */
export function getVolumeGroupSapHana(args: GetVolumeGroupSapHanaArgs, opts?: pulumi.InvokeOptions): Promise<GetVolumeGroupSapHanaResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azure:netapp/getVolumeGroupSapHana:getVolumeGroupSapHana", {
        "accountName": args.accountName,
        "name": args.name,
        "resourceGroupName": args.resourceGroupName,
    }, opts);
}

/**
 * A collection of arguments for invoking getVolumeGroupSapHana.
 */
export interface GetVolumeGroupSapHanaArgs {
    /**
     * Name of the account where the application volume group belong to.
     */
    accountName: string;
    /**
     * The name of this Application Volume Group for SAP HANA application.
     */
    name: string;
    /**
     * The name of the Resource Group where the Application Volume Group exists.
     */
    resourceGroupName: string;
}

/**
 * A collection of values returned by getVolumeGroupSapHana.
 */
export interface GetVolumeGroupSapHanaResult {
    readonly accountName: string;
    /**
     * The application identifier.
     */
    readonly applicationIdentifier: string;
    /**
     * Volume group description.
     */
    readonly groupDescription: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The Azure Region where the Application Volume Group exists.
     */
    readonly location: string;
    /**
     * The name of this volume.
     */
    readonly name: string;
    readonly resourceGroupName: string;
    /**
     * A `volume` block as defined below.
     */
    readonly volumes: outputs.netapp.GetVolumeGroupSapHanaVolume[];
}
/**
 * Use this data source to access information about an existing Application Volume Group for SAP HANA application.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = azure.netapp.getVolumeGroupSapHana({
 *     name: "existing application volume group name",
 *     resourceGroupName: "resource group name where the account and volume group belong to",
 *     accountName: "existing account where the application volume group belong to",
 * });
 * export const id = example.then(example => example.id);
 * ```
 */
export function getVolumeGroupSapHanaOutput(args: GetVolumeGroupSapHanaOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetVolumeGroupSapHanaResult> {
    return pulumi.output(args).apply((a: any) => getVolumeGroupSapHana(a, opts))
}

/**
 * A collection of arguments for invoking getVolumeGroupSapHana.
 */
export interface GetVolumeGroupSapHanaOutputArgs {
    /**
     * Name of the account where the application volume group belong to.
     */
    accountName: pulumi.Input<string>;
    /**
     * The name of this Application Volume Group for SAP HANA application.
     */
    name: pulumi.Input<string>;
    /**
     * The name of the Resource Group where the Application Volume Group exists.
     */
    resourceGroupName: pulumi.Input<string>;
}
