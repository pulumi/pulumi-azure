// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Use this data source to access information about an existing NetApp Account Encryption Resource.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = azure.netapp.getAccountEncryption({
 *     netappAccountId: "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.NetApp/netAppAccounts/account1",
 * });
 * export const id = example.then(example => example.id);
 * ```
 */
export function getAccountEncryption(args: GetAccountEncryptionArgs, opts?: pulumi.InvokeOptions): Promise<GetAccountEncryptionResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azure:netapp/getAccountEncryption:getAccountEncryption", {
        "encryptionKey": args.encryptionKey,
        "netappAccountId": args.netappAccountId,
        "systemAssignedIdentityPrincipalId": args.systemAssignedIdentityPrincipalId,
        "userAssignedIdentityId": args.userAssignedIdentityId,
    }, opts);
}

/**
 * A collection of arguments for invoking getAccountEncryption.
 */
export interface GetAccountEncryptionArgs {
    /**
     * The key vault encryption key.
     */
    encryptionKey?: string;
    /**
     * The ID of the NetApp account where customer managed keys-based encryption is enabled.
     */
    netappAccountId: string;
    /**
     * The ID of the System Assigned Manged Identity.
     */
    systemAssignedIdentityPrincipalId?: string;
    /**
     * The ID of the User Assigned Managed Identity.
     */
    userAssignedIdentityId?: string;
}

/**
 * A collection of values returned by getAccountEncryption.
 */
export interface GetAccountEncryptionResult {
    readonly encryptionKey?: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly netappAccountId: string;
    readonly systemAssignedIdentityPrincipalId?: string;
    readonly userAssignedIdentityId?: string;
}
/**
 * Use this data source to access information about an existing NetApp Account Encryption Resource.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = azure.netapp.getAccountEncryption({
 *     netappAccountId: "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.NetApp/netAppAccounts/account1",
 * });
 * export const id = example.then(example => example.id);
 * ```
 */
export function getAccountEncryptionOutput(args: GetAccountEncryptionOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAccountEncryptionResult> {
    return pulumi.output(args).apply((a: any) => getAccountEncryption(a, opts))
}

/**
 * A collection of arguments for invoking getAccountEncryption.
 */
export interface GetAccountEncryptionOutputArgs {
    /**
     * The key vault encryption key.
     */
    encryptionKey?: pulumi.Input<string>;
    /**
     * The ID of the NetApp account where customer managed keys-based encryption is enabled.
     */
    netappAccountId: pulumi.Input<string>;
    /**
     * The ID of the System Assigned Manged Identity.
     */
    systemAssignedIdentityPrincipalId?: pulumi.Input<string>;
    /**
     * The ID of the User Assigned Managed Identity.
     */
    userAssignedIdentityId?: pulumi.Input<string>;
}
