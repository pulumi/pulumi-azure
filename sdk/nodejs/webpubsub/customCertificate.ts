// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Manages an Azure Web PubSub Custom Certificate.
 *
 * ## Import
 *
 * Custom Certificate for a Web PubSub service can be imported using the `resource id`, e.g.
 *
 * ```sh
 *  $ pulumi import azure:webpubsub/customCertificate:CustomCertificate example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.SignalRService/webPubSub/WebPubsub1/customCertificates/cert1
 * ```
 */
export class CustomCertificate extends pulumi.CustomResource {
    /**
     * Get an existing CustomCertificate resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CustomCertificateState, opts?: pulumi.CustomResourceOptions): CustomCertificate {
        return new CustomCertificate(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure:webpubsub/customCertificate:CustomCertificate';

    /**
     * Returns true if the given object is an instance of CustomCertificate.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CustomCertificate {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CustomCertificate.__pulumiType;
    }

    /**
     * The certificate version of the Web PubSub Custom Certificate.
     */
    public /*out*/ readonly certificateVersion!: pulumi.Output<string>;
    /**
     * The certificate ID of the Web PubSub Custom Certificate. Changing this forces a new resource to be created.
     *
     * > **Note:** Self assigned certificate is not supported and the provisioning status will fail.
     */
    public readonly customCertificateId!: pulumi.Output<string>;
    /**
     * The name of the Web PubSub Custom Certificate. Changing this forces a new resource to be created.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The Web PubSub ID of the Web PubSub Custom Certificate. Changing this forces a new resource to be created.
     *
     * > **Note:** custom certificate is only available for Web PubSub Premium tier. Please enable managed identity in the corresponding Web PubSub Service and give the managed identity access to the key vault, the required permission is Get Certificate and Secret.
     */
    public readonly webPubsubId!: pulumi.Output<string>;

    /**
     * Create a CustomCertificate resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CustomCertificateArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CustomCertificateArgs | CustomCertificateState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as CustomCertificateState | undefined;
            resourceInputs["certificateVersion"] = state ? state.certificateVersion : undefined;
            resourceInputs["customCertificateId"] = state ? state.customCertificateId : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["webPubsubId"] = state ? state.webPubsubId : undefined;
        } else {
            const args = argsOrState as CustomCertificateArgs | undefined;
            if ((!args || args.customCertificateId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'customCertificateId'");
            }
            if ((!args || args.webPubsubId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'webPubsubId'");
            }
            resourceInputs["customCertificateId"] = args ? args.customCertificateId : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["webPubsubId"] = args ? args.webPubsubId : undefined;
            resourceInputs["certificateVersion"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(CustomCertificate.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering CustomCertificate resources.
 */
export interface CustomCertificateState {
    /**
     * The certificate version of the Web PubSub Custom Certificate.
     */
    certificateVersion?: pulumi.Input<string>;
    /**
     * The certificate ID of the Web PubSub Custom Certificate. Changing this forces a new resource to be created.
     *
     * > **Note:** Self assigned certificate is not supported and the provisioning status will fail.
     */
    customCertificateId?: pulumi.Input<string>;
    /**
     * The name of the Web PubSub Custom Certificate. Changing this forces a new resource to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * The Web PubSub ID of the Web PubSub Custom Certificate. Changing this forces a new resource to be created.
     *
     * > **Note:** custom certificate is only available for Web PubSub Premium tier. Please enable managed identity in the corresponding Web PubSub Service and give the managed identity access to the key vault, the required permission is Get Certificate and Secret.
     */
    webPubsubId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a CustomCertificate resource.
 */
export interface CustomCertificateArgs {
    /**
     * The certificate ID of the Web PubSub Custom Certificate. Changing this forces a new resource to be created.
     *
     * > **Note:** Self assigned certificate is not supported and the provisioning status will fail.
     */
    customCertificateId: pulumi.Input<string>;
    /**
     * The name of the Web PubSub Custom Certificate. Changing this forces a new resource to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * The Web PubSub ID of the Web PubSub Custom Certificate. Changing this forces a new resource to be created.
     *
     * > **Note:** custom certificate is only available for Web PubSub Premium tier. Please enable managed identity in the corresponding Web PubSub Service and give the managed identity access to the key vault, the required permission is Get Certificate and Secret.
     */
    webPubsubId: pulumi.Input<string>;
}
