// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Manages the Network ACL for a Web Pubsub.
 *
 * ## Example Usage
 *
 * ## API Providers
 *
 * <!-- This section is generated, changes will be overwritten -->
 * This resource uses the following Azure API Providers:
 *
 * * `Microsoft.SignalRService` - 2024-03-01
 *
 * ## Import
 *
 * Network ACLs for a Web Pubsub service can be imported using the `resource id`, e.g.
 *
 * ```sh
 * $ pulumi import azure:webpubsub/networkAcl:NetworkAcl example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.SignalRService/webPubSub/webpubsub1
 * ```
 */
export class NetworkAcl extends pulumi.CustomResource {
    /**
     * Get an existing NetworkAcl resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: NetworkAclState, opts?: pulumi.CustomResourceOptions): NetworkAcl {
        return new NetworkAcl(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure:webpubsub/networkAcl:NetworkAcl';

    /**
     * Returns true if the given object is an instance of NetworkAcl.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is NetworkAcl {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === NetworkAcl.__pulumiType;
    }

    /**
     * The default action to control the network access when no other rule matches. Possible values are `Allow` and `Deny`. Defaults to `Deny`.
     */
    declare public readonly defaultAction: pulumi.Output<string | undefined>;
    /**
     * A `privateEndpoint` block as defined below.
     */
    declare public readonly privateEndpoints: pulumi.Output<outputs.webpubsub.NetworkAclPrivateEndpoint[] | undefined>;
    /**
     * A `publicNetwork` block as defined below.
     */
    declare public readonly publicNetwork: pulumi.Output<outputs.webpubsub.NetworkAclPublicNetwork>;
    /**
     * The ID of the Web Pubsub service. Changing this forces a new resource to be created.
     */
    declare public readonly webPubsubId: pulumi.Output<string>;

    /**
     * Create a NetworkAcl resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: NetworkAclArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: NetworkAclArgs | NetworkAclState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as NetworkAclState | undefined;
            resourceInputs["defaultAction"] = state?.defaultAction;
            resourceInputs["privateEndpoints"] = state?.privateEndpoints;
            resourceInputs["publicNetwork"] = state?.publicNetwork;
            resourceInputs["webPubsubId"] = state?.webPubsubId;
        } else {
            const args = argsOrState as NetworkAclArgs | undefined;
            if (args?.publicNetwork === undefined && !opts.urn) {
                throw new Error("Missing required property 'publicNetwork'");
            }
            if (args?.webPubsubId === undefined && !opts.urn) {
                throw new Error("Missing required property 'webPubsubId'");
            }
            resourceInputs["defaultAction"] = args?.defaultAction;
            resourceInputs["privateEndpoints"] = args?.privateEndpoints;
            resourceInputs["publicNetwork"] = args?.publicNetwork;
            resourceInputs["webPubsubId"] = args?.webPubsubId;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(NetworkAcl.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering NetworkAcl resources.
 */
export interface NetworkAclState {
    /**
     * The default action to control the network access when no other rule matches. Possible values are `Allow` and `Deny`. Defaults to `Deny`.
     */
    defaultAction?: pulumi.Input<string>;
    /**
     * A `privateEndpoint` block as defined below.
     */
    privateEndpoints?: pulumi.Input<pulumi.Input<inputs.webpubsub.NetworkAclPrivateEndpoint>[]>;
    /**
     * A `publicNetwork` block as defined below.
     */
    publicNetwork?: pulumi.Input<inputs.webpubsub.NetworkAclPublicNetwork>;
    /**
     * The ID of the Web Pubsub service. Changing this forces a new resource to be created.
     */
    webPubsubId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a NetworkAcl resource.
 */
export interface NetworkAclArgs {
    /**
     * The default action to control the network access when no other rule matches. Possible values are `Allow` and `Deny`. Defaults to `Deny`.
     */
    defaultAction?: pulumi.Input<string>;
    /**
     * A `privateEndpoint` block as defined below.
     */
    privateEndpoints?: pulumi.Input<pulumi.Input<inputs.webpubsub.NetworkAclPrivateEndpoint>[]>;
    /**
     * A `publicNetwork` block as defined below.
     */
    publicNetwork: pulumi.Input<inputs.webpubsub.NetworkAclPublicNetwork>;
    /**
     * The ID of the Web Pubsub service. Changing this forces a new resource to be created.
     */
    webPubsubId: pulumi.Input<string>;
}
