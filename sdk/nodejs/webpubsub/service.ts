// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Manages an Azure Web PubSub Service.
 *
 * ## Import
 *
 * Web PubSub services can be imported using the `resource id`, e.g.
 *
 * ```sh
 *  $ pulumi import azure:webpubsub/service:Service example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.SignalRService/webPubSub/pubsub1
 * ```
 */
export class Service extends pulumi.CustomResource {
    /**
     * Get an existing Service resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ServiceState, opts?: pulumi.CustomResourceOptions): Service {
        return new Service(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure:webpubsub/service:Service';

    /**
     * Returns true if the given object is an instance of Service.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Service {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Service.__pulumiType;
    }

    /**
     * Whether to enable AAD auth? Defaults to `true`.
     */
    public readonly aadAuthEnabled!: pulumi.Output<boolean | undefined>;
    /**
     * Specifies the number of units associated with this Web PubSub resource. Valid values are: Free: `1`, Standard: `1`, `2`, `5`, `10`, `20`, `50`, `100`.
     */
    public readonly capacity!: pulumi.Output<number | undefined>;
    /**
     * The publicly accessible IP of the Web PubSub service.
     */
    public /*out*/ readonly externalIp!: pulumi.Output<string>;
    /**
     * The FQDN of the Web PubSub service.
     */
    public /*out*/ readonly hostname!: pulumi.Output<string>;
    /**
     * An `identity` block as defined below.
     */
    public readonly identity!: pulumi.Output<outputs.webpubsub.ServiceIdentity | undefined>;
    /**
     * A `liveTrace` block as defined below.
     */
    public readonly liveTrace!: pulumi.Output<outputs.webpubsub.ServiceLiveTrace | undefined>;
    /**
     * Whether to enable local auth? Defaults to `true`.
     */
    public readonly localAuthEnabled!: pulumi.Output<boolean | undefined>;
    /**
     * Specifies the supported Azure location where the Web PubSub service exists. Changing this forces a new resource to be created.
     */
    public readonly location!: pulumi.Output<string>;
    /**
     * The name of the Web PubSub service. Changing this forces a new resource to be created.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The primary access key for the Web PubSub service.
     */
    public /*out*/ readonly primaryAccessKey!: pulumi.Output<string>;
    /**
     * The primary connection string for the Web PubSub service.
     */
    public /*out*/ readonly primaryConnectionString!: pulumi.Output<string>;
    /**
     * Whether to enable public network access? Defaults to `true`.
     */
    public readonly publicNetworkAccessEnabled!: pulumi.Output<boolean | undefined>;
    /**
     * The publicly accessible port of the Web PubSub service which is designed for browser/client use.
     */
    public /*out*/ readonly publicPort!: pulumi.Output<number>;
    /**
     * The name of the resource group in which to create the Web PubSub service. Changing this forces a new resource to be created.
     */
    public readonly resourceGroupName!: pulumi.Output<string>;
    /**
     * The secondary access key for the Web PubSub service.
     */
    public /*out*/ readonly secondaryAccessKey!: pulumi.Output<string>;
    /**
     * The secondary connection string for the Web PubSub service.
     */
    public /*out*/ readonly secondaryConnectionString!: pulumi.Output<string>;
    /**
     * The publicly accessible port of the Web PubSub service which is designed for customer server side use.
     */
    public /*out*/ readonly serverPort!: pulumi.Output<number>;
    /**
     * Specifies which SKU to use. Possible values are `Free_F1`, `Standard_S1`, and `Premium_P1`.
     */
    public readonly sku!: pulumi.Output<string>;
    /**
     * A mapping of tags to assign to the resource.
     */
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * Whether to request client certificate during TLS handshake? Defaults to `false`.
     */
    public readonly tlsClientCertEnabled!: pulumi.Output<boolean | undefined>;
    public /*out*/ readonly version!: pulumi.Output<string>;

    /**
     * Create a Service resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ServiceArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ServiceArgs | ServiceState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ServiceState | undefined;
            resourceInputs["aadAuthEnabled"] = state ? state.aadAuthEnabled : undefined;
            resourceInputs["capacity"] = state ? state.capacity : undefined;
            resourceInputs["externalIp"] = state ? state.externalIp : undefined;
            resourceInputs["hostname"] = state ? state.hostname : undefined;
            resourceInputs["identity"] = state ? state.identity : undefined;
            resourceInputs["liveTrace"] = state ? state.liveTrace : undefined;
            resourceInputs["localAuthEnabled"] = state ? state.localAuthEnabled : undefined;
            resourceInputs["location"] = state ? state.location : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["primaryAccessKey"] = state ? state.primaryAccessKey : undefined;
            resourceInputs["primaryConnectionString"] = state ? state.primaryConnectionString : undefined;
            resourceInputs["publicNetworkAccessEnabled"] = state ? state.publicNetworkAccessEnabled : undefined;
            resourceInputs["publicPort"] = state ? state.publicPort : undefined;
            resourceInputs["resourceGroupName"] = state ? state.resourceGroupName : undefined;
            resourceInputs["secondaryAccessKey"] = state ? state.secondaryAccessKey : undefined;
            resourceInputs["secondaryConnectionString"] = state ? state.secondaryConnectionString : undefined;
            resourceInputs["serverPort"] = state ? state.serverPort : undefined;
            resourceInputs["sku"] = state ? state.sku : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["tlsClientCertEnabled"] = state ? state.tlsClientCertEnabled : undefined;
            resourceInputs["version"] = state ? state.version : undefined;
        } else {
            const args = argsOrState as ServiceArgs | undefined;
            if ((!args || args.resourceGroupName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            if ((!args || args.sku === undefined) && !opts.urn) {
                throw new Error("Missing required property 'sku'");
            }
            resourceInputs["aadAuthEnabled"] = args ? args.aadAuthEnabled : undefined;
            resourceInputs["capacity"] = args ? args.capacity : undefined;
            resourceInputs["identity"] = args ? args.identity : undefined;
            resourceInputs["liveTrace"] = args ? args.liveTrace : undefined;
            resourceInputs["localAuthEnabled"] = args ? args.localAuthEnabled : undefined;
            resourceInputs["location"] = args ? args.location : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["publicNetworkAccessEnabled"] = args ? args.publicNetworkAccessEnabled : undefined;
            resourceInputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            resourceInputs["sku"] = args ? args.sku : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["tlsClientCertEnabled"] = args ? args.tlsClientCertEnabled : undefined;
            resourceInputs["externalIp"] = undefined /*out*/;
            resourceInputs["hostname"] = undefined /*out*/;
            resourceInputs["primaryAccessKey"] = undefined /*out*/;
            resourceInputs["primaryConnectionString"] = undefined /*out*/;
            resourceInputs["publicPort"] = undefined /*out*/;
            resourceInputs["secondaryAccessKey"] = undefined /*out*/;
            resourceInputs["secondaryConnectionString"] = undefined /*out*/;
            resourceInputs["serverPort"] = undefined /*out*/;
            resourceInputs["version"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["primaryAccessKey", "primaryConnectionString", "secondaryAccessKey", "secondaryConnectionString"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(Service.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Service resources.
 */
export interface ServiceState {
    /**
     * Whether to enable AAD auth? Defaults to `true`.
     */
    aadAuthEnabled?: pulumi.Input<boolean>;
    /**
     * Specifies the number of units associated with this Web PubSub resource. Valid values are: Free: `1`, Standard: `1`, `2`, `5`, `10`, `20`, `50`, `100`.
     */
    capacity?: pulumi.Input<number>;
    /**
     * The publicly accessible IP of the Web PubSub service.
     */
    externalIp?: pulumi.Input<string>;
    /**
     * The FQDN of the Web PubSub service.
     */
    hostname?: pulumi.Input<string>;
    /**
     * An `identity` block as defined below.
     */
    identity?: pulumi.Input<inputs.webpubsub.ServiceIdentity>;
    /**
     * A `liveTrace` block as defined below.
     */
    liveTrace?: pulumi.Input<inputs.webpubsub.ServiceLiveTrace>;
    /**
     * Whether to enable local auth? Defaults to `true`.
     */
    localAuthEnabled?: pulumi.Input<boolean>;
    /**
     * Specifies the supported Azure location where the Web PubSub service exists. Changing this forces a new resource to be created.
     */
    location?: pulumi.Input<string>;
    /**
     * The name of the Web PubSub service. Changing this forces a new resource to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * The primary access key for the Web PubSub service.
     */
    primaryAccessKey?: pulumi.Input<string>;
    /**
     * The primary connection string for the Web PubSub service.
     */
    primaryConnectionString?: pulumi.Input<string>;
    /**
     * Whether to enable public network access? Defaults to `true`.
     */
    publicNetworkAccessEnabled?: pulumi.Input<boolean>;
    /**
     * The publicly accessible port of the Web PubSub service which is designed for browser/client use.
     */
    publicPort?: pulumi.Input<number>;
    /**
     * The name of the resource group in which to create the Web PubSub service. Changing this forces a new resource to be created.
     */
    resourceGroupName?: pulumi.Input<string>;
    /**
     * The secondary access key for the Web PubSub service.
     */
    secondaryAccessKey?: pulumi.Input<string>;
    /**
     * The secondary connection string for the Web PubSub service.
     */
    secondaryConnectionString?: pulumi.Input<string>;
    /**
     * The publicly accessible port of the Web PubSub service which is designed for customer server side use.
     */
    serverPort?: pulumi.Input<number>;
    /**
     * Specifies which SKU to use. Possible values are `Free_F1`, `Standard_S1`, and `Premium_P1`.
     */
    sku?: pulumi.Input<string>;
    /**
     * A mapping of tags to assign to the resource.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Whether to request client certificate during TLS handshake? Defaults to `false`.
     */
    tlsClientCertEnabled?: pulumi.Input<boolean>;
    version?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Service resource.
 */
export interface ServiceArgs {
    /**
     * Whether to enable AAD auth? Defaults to `true`.
     */
    aadAuthEnabled?: pulumi.Input<boolean>;
    /**
     * Specifies the number of units associated with this Web PubSub resource. Valid values are: Free: `1`, Standard: `1`, `2`, `5`, `10`, `20`, `50`, `100`.
     */
    capacity?: pulumi.Input<number>;
    /**
     * An `identity` block as defined below.
     */
    identity?: pulumi.Input<inputs.webpubsub.ServiceIdentity>;
    /**
     * A `liveTrace` block as defined below.
     */
    liveTrace?: pulumi.Input<inputs.webpubsub.ServiceLiveTrace>;
    /**
     * Whether to enable local auth? Defaults to `true`.
     */
    localAuthEnabled?: pulumi.Input<boolean>;
    /**
     * Specifies the supported Azure location where the Web PubSub service exists. Changing this forces a new resource to be created.
     */
    location?: pulumi.Input<string>;
    /**
     * The name of the Web PubSub service. Changing this forces a new resource to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * Whether to enable public network access? Defaults to `true`.
     */
    publicNetworkAccessEnabled?: pulumi.Input<boolean>;
    /**
     * The name of the resource group in which to create the Web PubSub service. Changing this forces a new resource to be created.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * Specifies which SKU to use. Possible values are `Free_F1`, `Standard_S1`, and `Premium_P1`.
     */
    sku: pulumi.Input<string>;
    /**
     * A mapping of tags to assign to the resource.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Whether to request client certificate during TLS handshake? Defaults to `false`.
     */
    tlsClientCertEnabled?: pulumi.Input<boolean>;
}
