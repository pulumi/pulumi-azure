// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { CustomCertificateArgs, CustomCertificateState } from "./customCertificate";
export type CustomCertificate = import("./customCertificate").CustomCertificate;
export const CustomCertificate: typeof import("./customCertificate").CustomCertificate = null as any;
utilities.lazyLoad(exports, ["CustomCertificate"], () => require("./customCertificate"));

export { CustomDomainArgs, CustomDomainState } from "./customDomain";
export type CustomDomain = import("./customDomain").CustomDomain;
export const CustomDomain: typeof import("./customDomain").CustomDomain = null as any;
utilities.lazyLoad(exports, ["CustomDomain"], () => require("./customDomain"));

export { GetPrivateLinkResourceArgs, GetPrivateLinkResourceResult, GetPrivateLinkResourceOutputArgs } from "./getPrivateLinkResource";
export const getPrivateLinkResource: typeof import("./getPrivateLinkResource").getPrivateLinkResource = null as any;
export const getPrivateLinkResourceOutput: typeof import("./getPrivateLinkResource").getPrivateLinkResourceOutput = null as any;
utilities.lazyLoad(exports, ["getPrivateLinkResource","getPrivateLinkResourceOutput"], () => require("./getPrivateLinkResource"));

export { GetServiceArgs, GetServiceResult, GetServiceOutputArgs } from "./getService";
export const getService: typeof import("./getService").getService = null as any;
export const getServiceOutput: typeof import("./getService").getServiceOutput = null as any;
utilities.lazyLoad(exports, ["getService","getServiceOutput"], () => require("./getService"));

export { HubArgs, HubState } from "./hub";
export type Hub = import("./hub").Hub;
export const Hub: typeof import("./hub").Hub = null as any;
utilities.lazyLoad(exports, ["Hub"], () => require("./hub"));

export { NetworkAclArgs, NetworkAclState } from "./networkAcl";
export type NetworkAcl = import("./networkAcl").NetworkAcl;
export const NetworkAcl: typeof import("./networkAcl").NetworkAcl = null as any;
utilities.lazyLoad(exports, ["NetworkAcl"], () => require("./networkAcl"));

export { ServiceArgs, ServiceState } from "./service";
export type Service = import("./service").Service;
export const Service: typeof import("./service").Service = null as any;
utilities.lazyLoad(exports, ["Service"], () => require("./service"));

export { SharedPrivateLinkResourceArgs, SharedPrivateLinkResourceState } from "./sharedPrivateLinkResource";
export type SharedPrivateLinkResource = import("./sharedPrivateLinkResource").SharedPrivateLinkResource;
export const SharedPrivateLinkResource: typeof import("./sharedPrivateLinkResource").SharedPrivateLinkResource = null as any;
utilities.lazyLoad(exports, ["SharedPrivateLinkResource"], () => require("./sharedPrivateLinkResource"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "azure:webpubsub/customCertificate:CustomCertificate":
                return new CustomCertificate(name, <any>undefined, { urn })
            case "azure:webpubsub/customDomain:CustomDomain":
                return new CustomDomain(name, <any>undefined, { urn })
            case "azure:webpubsub/hub:Hub":
                return new Hub(name, <any>undefined, { urn })
            case "azure:webpubsub/networkAcl:NetworkAcl":
                return new NetworkAcl(name, <any>undefined, { urn })
            case "azure:webpubsub/service:Service":
                return new Service(name, <any>undefined, { urn })
            case "azure:webpubsub/sharedPrivateLinkResource:SharedPrivateLinkResource":
                return new SharedPrivateLinkResource(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure", "webpubsub/customCertificate", _module)
pulumi.runtime.registerResourceModule("azure", "webpubsub/customDomain", _module)
pulumi.runtime.registerResourceModule("azure", "webpubsub/hub", _module)
pulumi.runtime.registerResourceModule("azure", "webpubsub/networkAcl", _module)
pulumi.runtime.registerResourceModule("azure", "webpubsub/service", _module)
pulumi.runtime.registerResourceModule("azure", "webpubsub/sharedPrivateLinkResource", _module)
