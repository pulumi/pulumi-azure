// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * > **NOTE:** This resource is only applicable for Spring Cloud Service enterprise tier
 *
 * Manages a Spring Cloud Application Performance Monitoring resource for Dynatrace.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const exampleResourceGroup = new azure.core.ResourceGroup("exampleResourceGroup", {location: "West Europe"});
 * const exampleSpringCloudService = new azure.appplatform.SpringCloudService("exampleSpringCloudService", {
 *     location: exampleResourceGroup.location,
 *     resourceGroupName: exampleResourceGroup.name,
 *     skuName: "E0",
 * });
 * const exampleSpringCloudDynatraceApplicationPerformanceMonitoring = new azure.appplatform.SpringCloudDynatraceApplicationPerformanceMonitoring("exampleSpringCloudDynatraceApplicationPerformanceMonitoring", {
 *     springCloudServiceId: exampleSpringCloudService.id,
 *     globallyEnabled: true,
 *     apiUrl: "https://example-api-url.com",
 *     apiToken: "dt0s01.AAAAAAAAAAAAAAAAAAAAAAAA.BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB",
 *     environmentId: "example-environment-id",
 *     tenant: "example-tenant",
 *     tenantToken: "dt0s01.AAAAAAAAAAAAAAAAAAAAAAAA.BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB",
 *     connectionPoint: "https://example.live.dynatrace.com:443",
 * });
 * ```
 *
 * ## Import
 *
 * Spring Cloud Application Performance Monitoring resource for Dynatrace can be imported using the `resource id`, e.g.
 *
 * ```sh
 *  $ pulumi import azure:appplatform/springCloudDynatraceApplicationPerformanceMonitoring:SpringCloudDynatraceApplicationPerformanceMonitoring example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/mygroup1/providers/Microsoft.AppPlatform/spring/service1/apms/apm1
 * ```
 */
export class SpringCloudDynatraceApplicationPerformanceMonitoring extends pulumi.CustomResource {
    /**
     * Get an existing SpringCloudDynatraceApplicationPerformanceMonitoring resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SpringCloudDynatraceApplicationPerformanceMonitoringState, opts?: pulumi.CustomResourceOptions): SpringCloudDynatraceApplicationPerformanceMonitoring {
        return new SpringCloudDynatraceApplicationPerformanceMonitoring(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure:appplatform/springCloudDynatraceApplicationPerformanceMonitoring:SpringCloudDynatraceApplicationPerformanceMonitoring';

    /**
     * Returns true if the given object is an instance of SpringCloudDynatraceApplicationPerformanceMonitoring.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SpringCloudDynatraceApplicationPerformanceMonitoring {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SpringCloudDynatraceApplicationPerformanceMonitoring.__pulumiType;
    }

    /**
     * Specifies the API token of the Dynatrace environment.
     */
    public readonly apiToken!: pulumi.Output<string | undefined>;
    /**
     * Specifies the API Url of the Dynatrace environment.
     */
    public readonly apiUrl!: pulumi.Output<string | undefined>;
    /**
     * Specifies the endpoint to connect to the Dynatrace environment.
     */
    public readonly connectionPoint!: pulumi.Output<string>;
    /**
     * Specifies the Dynatrace environment ID.
     */
    public readonly environmentId!: pulumi.Output<string | undefined>;
    /**
     * Specifies whether the Spring Cloud Application Performance Monitoring resource for Application Insights is enabled globally. Defaults to `false`.
     */
    public readonly globallyEnabled!: pulumi.Output<boolean | undefined>;
    /**
     * The name which should be used for this Spring Cloud Application Performance Monitoring resource for Dynatrace. Changing this forces a new resource to be created.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The ID of the Spring Cloud Service. Changing this forces a new resource to be created.
     */
    public readonly springCloudServiceId!: pulumi.Output<string>;
    /**
     * Specifies the Dynatrace tenant.
     */
    public readonly tenant!: pulumi.Output<string>;
    /**
     * Specifies the internal token that is used for authentication when OneAgent connects to the Dynatrace cluster to send data.
     */
    public readonly tenantToken!: pulumi.Output<string>;

    /**
     * Create a SpringCloudDynatraceApplicationPerformanceMonitoring resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SpringCloudDynatraceApplicationPerformanceMonitoringArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SpringCloudDynatraceApplicationPerformanceMonitoringArgs | SpringCloudDynatraceApplicationPerformanceMonitoringState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SpringCloudDynatraceApplicationPerformanceMonitoringState | undefined;
            resourceInputs["apiToken"] = state ? state.apiToken : undefined;
            resourceInputs["apiUrl"] = state ? state.apiUrl : undefined;
            resourceInputs["connectionPoint"] = state ? state.connectionPoint : undefined;
            resourceInputs["environmentId"] = state ? state.environmentId : undefined;
            resourceInputs["globallyEnabled"] = state ? state.globallyEnabled : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["springCloudServiceId"] = state ? state.springCloudServiceId : undefined;
            resourceInputs["tenant"] = state ? state.tenant : undefined;
            resourceInputs["tenantToken"] = state ? state.tenantToken : undefined;
        } else {
            const args = argsOrState as SpringCloudDynatraceApplicationPerformanceMonitoringArgs | undefined;
            if ((!args || args.connectionPoint === undefined) && !opts.urn) {
                throw new Error("Missing required property 'connectionPoint'");
            }
            if ((!args || args.springCloudServiceId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'springCloudServiceId'");
            }
            if ((!args || args.tenant === undefined) && !opts.urn) {
                throw new Error("Missing required property 'tenant'");
            }
            if ((!args || args.tenantToken === undefined) && !opts.urn) {
                throw new Error("Missing required property 'tenantToken'");
            }
            resourceInputs["apiToken"] = args?.apiToken ? pulumi.secret(args.apiToken) : undefined;
            resourceInputs["apiUrl"] = args ? args.apiUrl : undefined;
            resourceInputs["connectionPoint"] = args ? args.connectionPoint : undefined;
            resourceInputs["environmentId"] = args ? args.environmentId : undefined;
            resourceInputs["globallyEnabled"] = args ? args.globallyEnabled : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["springCloudServiceId"] = args ? args.springCloudServiceId : undefined;
            resourceInputs["tenant"] = args?.tenant ? pulumi.secret(args.tenant) : undefined;
            resourceInputs["tenantToken"] = args?.tenantToken ? pulumi.secret(args.tenantToken) : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["apiToken", "tenant", "tenantToken"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(SpringCloudDynatraceApplicationPerformanceMonitoring.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering SpringCloudDynatraceApplicationPerformanceMonitoring resources.
 */
export interface SpringCloudDynatraceApplicationPerformanceMonitoringState {
    /**
     * Specifies the API token of the Dynatrace environment.
     */
    apiToken?: pulumi.Input<string>;
    /**
     * Specifies the API Url of the Dynatrace environment.
     */
    apiUrl?: pulumi.Input<string>;
    /**
     * Specifies the endpoint to connect to the Dynatrace environment.
     */
    connectionPoint?: pulumi.Input<string>;
    /**
     * Specifies the Dynatrace environment ID.
     */
    environmentId?: pulumi.Input<string>;
    /**
     * Specifies whether the Spring Cloud Application Performance Monitoring resource for Application Insights is enabled globally. Defaults to `false`.
     */
    globallyEnabled?: pulumi.Input<boolean>;
    /**
     * The name which should be used for this Spring Cloud Application Performance Monitoring resource for Dynatrace. Changing this forces a new resource to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * The ID of the Spring Cloud Service. Changing this forces a new resource to be created.
     */
    springCloudServiceId?: pulumi.Input<string>;
    /**
     * Specifies the Dynatrace tenant.
     */
    tenant?: pulumi.Input<string>;
    /**
     * Specifies the internal token that is used for authentication when OneAgent connects to the Dynatrace cluster to send data.
     */
    tenantToken?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a SpringCloudDynatraceApplicationPerformanceMonitoring resource.
 */
export interface SpringCloudDynatraceApplicationPerformanceMonitoringArgs {
    /**
     * Specifies the API token of the Dynatrace environment.
     */
    apiToken?: pulumi.Input<string>;
    /**
     * Specifies the API Url of the Dynatrace environment.
     */
    apiUrl?: pulumi.Input<string>;
    /**
     * Specifies the endpoint to connect to the Dynatrace environment.
     */
    connectionPoint: pulumi.Input<string>;
    /**
     * Specifies the Dynatrace environment ID.
     */
    environmentId?: pulumi.Input<string>;
    /**
     * Specifies whether the Spring Cloud Application Performance Monitoring resource for Application Insights is enabled globally. Defaults to `false`.
     */
    globallyEnabled?: pulumi.Input<boolean>;
    /**
     * The name which should be used for this Spring Cloud Application Performance Monitoring resource for Dynatrace. Changing this forces a new resource to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * The ID of the Spring Cloud Service. Changing this forces a new resource to be created.
     */
    springCloudServiceId: pulumi.Input<string>;
    /**
     * Specifies the Dynatrace tenant.
     */
    tenant: pulumi.Input<string>;
    /**
     * Specifies the internal token that is used for authentication when OneAgent connects to the Dynatrace cluster to send data.
     */
    tenantToken: pulumi.Input<string>;
}
