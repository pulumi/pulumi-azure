// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Use this data source to access information about an existing Spring Cloud Application.
 *
 * !> **Note:** Azure Spring Apps is now deprecated and will be retired on 2028-05-31 - as such the `azure.appplatform.SpringCloudApp` data source is deprecated and will be removed in a future major version of the AzureRM Provider. See https://aka.ms/asaretirement for more information.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = azure.appplatform.getSpringCloudApp({
 *     name: exampleAzurermSpringCloudApp.name,
 *     resourceGroupName: exampleAzurermSpringCloudApp.resourceGroupName,
 *     serviceName: exampleAzurermSpringCloudApp.serviceName,
 * });
 * export const springCloudAppId = example.then(example => example.id);
 * ```
 */
export function getSpringCloudApp(args: GetSpringCloudAppArgs, opts?: pulumi.InvokeOptions): Promise<GetSpringCloudAppResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azure:appplatform/getSpringCloudApp:getSpringCloudApp", {
        "name": args.name,
        "resourceGroupName": args.resourceGroupName,
        "serviceName": args.serviceName,
    }, opts);
}

/**
 * A collection of arguments for invoking getSpringCloudApp.
 */
export interface GetSpringCloudAppArgs {
    /**
     * The name of the Spring Cloud Application.
     */
    name: string;
    /**
     * The name of the Resource Group where the Spring Cloud Application exists.
     */
    resourceGroupName: string;
    /**
     * The name of the Spring Cloud Service.
     */
    serviceName: string;
}

/**
 * A collection of values returned by getSpringCloudApp.
 */
export interface GetSpringCloudAppResult {
    /**
     * The Fully Qualified DNS Name.
     */
    readonly fqdn: string;
    /**
     * Is only HTTPS allowed?
     */
    readonly httpsOnly: boolean;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * An `identity` block as defined below.
     */
    readonly identities: outputs.appplatform.GetSpringCloudAppIdentity[];
    /**
     * Does the Spring Cloud Application have public endpoint?
     */
    readonly isPublic: boolean;
    readonly name: string;
    /**
     * A `persistentDisk` block as defined below.
     */
    readonly persistentDisks: outputs.appplatform.GetSpringCloudAppPersistentDisk[];
    readonly resourceGroupName: string;
    readonly serviceName: string;
    /**
     * Is End to End TLS Enabled?
     */
    readonly tlsEnabled: boolean;
    /**
     * The public endpoint of the Spring Cloud Application.
     */
    readonly url: string;
}
/**
 * Use this data source to access information about an existing Spring Cloud Application.
 *
 * !> **Note:** Azure Spring Apps is now deprecated and will be retired on 2028-05-31 - as such the `azure.appplatform.SpringCloudApp` data source is deprecated and will be removed in a future major version of the AzureRM Provider. See https://aka.ms/asaretirement for more information.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = azure.appplatform.getSpringCloudApp({
 *     name: exampleAzurermSpringCloudApp.name,
 *     resourceGroupName: exampleAzurermSpringCloudApp.resourceGroupName,
 *     serviceName: exampleAzurermSpringCloudApp.serviceName,
 * });
 * export const springCloudAppId = example.then(example => example.id);
 * ```
 */
export function getSpringCloudAppOutput(args: GetSpringCloudAppOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetSpringCloudAppResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("azure:appplatform/getSpringCloudApp:getSpringCloudApp", {
        "name": args.name,
        "resourceGroupName": args.resourceGroupName,
        "serviceName": args.serviceName,
    }, opts);
}

/**
 * A collection of arguments for invoking getSpringCloudApp.
 */
export interface GetSpringCloudAppOutputArgs {
    /**
     * The name of the Spring Cloud Application.
     */
    name: pulumi.Input<string>;
    /**
     * The name of the Resource Group where the Spring Cloud Application exists.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * The name of the Spring Cloud Service.
     */
    serviceName: pulumi.Input<string>;
}
