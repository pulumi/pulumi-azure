// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Manages a Spring Cloud Builder.
 *
 * > **NOTE:** This resource is applicable only for Spring Cloud Service with enterprise tier.
 *
 * ## Import
 *
 * Spring Cloud Builders can be imported using the `resource id`, e.g.
 *
 * ```sh
 *  $ pulumi import azure:appplatform/springCloudBuilder:SpringCloudBuilder example /subscriptions/12345678-1234-9876-4563-123456789012/resourceGroups/resourceGroup1/providers/Microsoft.AppPlatform/spring/service1/buildServices/buildService1/builders/builder1
 * ```
 */
export class SpringCloudBuilder extends pulumi.CustomResource {
    /**
     * Get an existing SpringCloudBuilder resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SpringCloudBuilderState, opts?: pulumi.CustomResourceOptions): SpringCloudBuilder {
        return new SpringCloudBuilder(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure:appplatform/springCloudBuilder:SpringCloudBuilder';

    /**
     * Returns true if the given object is an instance of SpringCloudBuilder.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SpringCloudBuilder {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SpringCloudBuilder.__pulumiType;
    }

    /**
     * One or more `buildPackGroup` blocks as defined below.
     */
    public readonly buildPackGroups!: pulumi.Output<outputs.appplatform.SpringCloudBuilderBuildPackGroup[]>;
    /**
     * The name which should be used for this Spring Cloud Builder. Changing this forces a new Spring Cloud Builder to be created.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The ID of the Spring Cloud Service. Changing this forces a new Spring Cloud Builder to be created.
     */
    public readonly springCloudServiceId!: pulumi.Output<string>;
    /**
     * A `stack` block as defined below.
     */
    public readonly stack!: pulumi.Output<outputs.appplatform.SpringCloudBuilderStack>;

    /**
     * Create a SpringCloudBuilder resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SpringCloudBuilderArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SpringCloudBuilderArgs | SpringCloudBuilderState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SpringCloudBuilderState | undefined;
            resourceInputs["buildPackGroups"] = state ? state.buildPackGroups : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["springCloudServiceId"] = state ? state.springCloudServiceId : undefined;
            resourceInputs["stack"] = state ? state.stack : undefined;
        } else {
            const args = argsOrState as SpringCloudBuilderArgs | undefined;
            if ((!args || args.buildPackGroups === undefined) && !opts.urn) {
                throw new Error("Missing required property 'buildPackGroups'");
            }
            if ((!args || args.springCloudServiceId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'springCloudServiceId'");
            }
            if ((!args || args.stack === undefined) && !opts.urn) {
                throw new Error("Missing required property 'stack'");
            }
            resourceInputs["buildPackGroups"] = args ? args.buildPackGroups : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["springCloudServiceId"] = args ? args.springCloudServiceId : undefined;
            resourceInputs["stack"] = args ? args.stack : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SpringCloudBuilder.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering SpringCloudBuilder resources.
 */
export interface SpringCloudBuilderState {
    /**
     * One or more `buildPackGroup` blocks as defined below.
     */
    buildPackGroups?: pulumi.Input<pulumi.Input<inputs.appplatform.SpringCloudBuilderBuildPackGroup>[]>;
    /**
     * The name which should be used for this Spring Cloud Builder. Changing this forces a new Spring Cloud Builder to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * The ID of the Spring Cloud Service. Changing this forces a new Spring Cloud Builder to be created.
     */
    springCloudServiceId?: pulumi.Input<string>;
    /**
     * A `stack` block as defined below.
     */
    stack?: pulumi.Input<inputs.appplatform.SpringCloudBuilderStack>;
}

/**
 * The set of arguments for constructing a SpringCloudBuilder resource.
 */
export interface SpringCloudBuilderArgs {
    /**
     * One or more `buildPackGroup` blocks as defined below.
     */
    buildPackGroups: pulumi.Input<pulumi.Input<inputs.appplatform.SpringCloudBuilderBuildPackGroup>[]>;
    /**
     * The name which should be used for this Spring Cloud Builder. Changing this forces a new Spring Cloud Builder to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * The ID of the Spring Cloud Service. Changing this forces a new Spring Cloud Builder to be created.
     */
    springCloudServiceId: pulumi.Input<string>;
    /**
     * A `stack` block as defined below.
     */
    stack: pulumi.Input<inputs.appplatform.SpringCloudBuilderStack>;
}
