// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Manages a Spring Cloud Gateway Route Config.
 *
 * > **Note:** This resource is applicable only for Spring Cloud Service with enterprise tier.
 *
 * !> **Note:** Azure Spring Apps is now deprecated and will be retired on 2028-05-31 - as such the `azure.appplatform.SpringCloudGatewayRouteConfig` resource is deprecated and will be removed in a future major version of the AzureRM Provider. See https://aka.ms/asaretirement for more information.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = new azure.core.ResourceGroup("example", {
 *     name: "example",
 *     location: "West Europe",
 * });
 * const exampleSpringCloudService = new azure.appplatform.SpringCloudService("example", {
 *     name: "example",
 *     location: example.location,
 *     resourceGroupName: example.name,
 *     skuName: "E0",
 * });
 * const exampleSpringCloudApp = new azure.appplatform.SpringCloudApp("example", {
 *     name: "example",
 *     resourceGroupName: example.name,
 *     serviceName: exampleSpringCloudService.name,
 * });
 * const exampleSpringCloudGateway = new azure.appplatform.SpringCloudGateway("example", {
 *     name: "default",
 *     springCloudServiceId: exampleSpringCloudService.id,
 * });
 * const exampleSpringCloudGatewayRouteConfig = new azure.appplatform.SpringCloudGatewayRouteConfig("example", {
 *     name: "example",
 *     springCloudGatewayId: exampleSpringCloudGateway.id,
 *     springCloudAppId: exampleSpringCloudApp.id,
 *     protocol: "HTTPS",
 *     routes: [{
 *         description: "example description",
 *         filters: [
 *             "StripPrefix=2",
 *             "RateLimit=1,1s",
 *         ],
 *         order: 1,
 *         predicates: ["Path=/api5/customer/**"],
 *         ssoValidationEnabled: true,
 *         title: "myApp route config",
 *         tokenRelay: true,
 *         uri: "https://www.example.com",
 *         classificationTags: [
 *             "tag1",
 *             "tag2",
 *         ],
 *     }],
 * });
 * ```
 *
 * ## Import
 *
 * Spring Cloud Gateway Route Configs can be imported using the `resource id`, e.g.
 *
 * ```sh
 * $ pulumi import azure:appplatform/springCloudGatewayRouteConfig:SpringCloudGatewayRouteConfig example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resourceGroup1/providers/Microsoft.AppPlatform/spring/service1/gateways/gateway1/routeConfigs/routeConfig1
 * ```
 */
export class SpringCloudGatewayRouteConfig extends pulumi.CustomResource {
    /**
     * Get an existing SpringCloudGatewayRouteConfig resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SpringCloudGatewayRouteConfigState, opts?: pulumi.CustomResourceOptions): SpringCloudGatewayRouteConfig {
        return new SpringCloudGatewayRouteConfig(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure:appplatform/springCloudGatewayRouteConfig:SpringCloudGatewayRouteConfig';

    /**
     * Returns true if the given object is an instance of SpringCloudGatewayRouteConfig.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SpringCloudGatewayRouteConfig {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SpringCloudGatewayRouteConfig.__pulumiType;
    }

    /**
     * Specifies a list of filters which are used to modify the request before sending it to the target endpoint, or the received response in app level.
     */
    declare public readonly filters: pulumi.Output<string[] | undefined>;
    /**
     * The name which should be used for this Spring Cloud Gateway Route Config. Changing this forces a new Spring Cloud Gateway Route Config to be created.
     */
    declare public readonly name: pulumi.Output<string>;
    /**
     * One or more `openApi` blocks as defined below.
     */
    declare public readonly openApi: pulumi.Output<outputs.appplatform.SpringCloudGatewayRouteConfigOpenApi | undefined>;
    /**
     * Specifies a list of conditions to evaluate a route for each request in app level. Each predicate may be evaluated against request headers and parameter values. All of the predicates associated with a route must evaluate to true for the route to be matched to the request.
     */
    declare public readonly predicates: pulumi.Output<string[] | undefined>;
    /**
     * Specifies the protocol of routed Spring Cloud App. Allowed values are `HTTP` and `HTTPS`.
     *
     * > **Note:** You likely want to use `HTTPS` in a production environment, since `HTTP` offers no encryption.
     */
    declare public readonly protocol: pulumi.Output<string>;
    /**
     * One or more `route` blocks as defined below.
     */
    declare public readonly routes: pulumi.Output<outputs.appplatform.SpringCloudGatewayRouteConfigRoute[] | undefined>;
    /**
     * The ID of the Spring Cloud App.
     */
    declare public readonly springCloudAppId: pulumi.Output<string | undefined>;
    /**
     * The ID of the Spring Cloud Gateway. Changing this forces a new Spring Cloud Gateway Route Config to be created.
     */
    declare public readonly springCloudGatewayId: pulumi.Output<string>;
    /**
     * Should the sso validation be enabled in app level?
     */
    declare public readonly ssoValidationEnabled: pulumi.Output<boolean | undefined>;

    /**
     * Create a SpringCloudGatewayRouteConfig resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SpringCloudGatewayRouteConfigArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SpringCloudGatewayRouteConfigArgs | SpringCloudGatewayRouteConfigState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SpringCloudGatewayRouteConfigState | undefined;
            resourceInputs["filters"] = state?.filters;
            resourceInputs["name"] = state?.name;
            resourceInputs["openApi"] = state?.openApi;
            resourceInputs["predicates"] = state?.predicates;
            resourceInputs["protocol"] = state?.protocol;
            resourceInputs["routes"] = state?.routes;
            resourceInputs["springCloudAppId"] = state?.springCloudAppId;
            resourceInputs["springCloudGatewayId"] = state?.springCloudGatewayId;
            resourceInputs["ssoValidationEnabled"] = state?.ssoValidationEnabled;
        } else {
            const args = argsOrState as SpringCloudGatewayRouteConfigArgs | undefined;
            if (args?.protocol === undefined && !opts.urn) {
                throw new Error("Missing required property 'protocol'");
            }
            if (args?.springCloudGatewayId === undefined && !opts.urn) {
                throw new Error("Missing required property 'springCloudGatewayId'");
            }
            resourceInputs["filters"] = args?.filters;
            resourceInputs["name"] = args?.name;
            resourceInputs["openApi"] = args?.openApi;
            resourceInputs["predicates"] = args?.predicates;
            resourceInputs["protocol"] = args?.protocol;
            resourceInputs["routes"] = args?.routes;
            resourceInputs["springCloudAppId"] = args?.springCloudAppId;
            resourceInputs["springCloudGatewayId"] = args?.springCloudGatewayId;
            resourceInputs["ssoValidationEnabled"] = args?.ssoValidationEnabled;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SpringCloudGatewayRouteConfig.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering SpringCloudGatewayRouteConfig resources.
 */
export interface SpringCloudGatewayRouteConfigState {
    /**
     * Specifies a list of filters which are used to modify the request before sending it to the target endpoint, or the received response in app level.
     */
    filters?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The name which should be used for this Spring Cloud Gateway Route Config. Changing this forces a new Spring Cloud Gateway Route Config to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * One or more `openApi` blocks as defined below.
     */
    openApi?: pulumi.Input<inputs.appplatform.SpringCloudGatewayRouteConfigOpenApi>;
    /**
     * Specifies a list of conditions to evaluate a route for each request in app level. Each predicate may be evaluated against request headers and parameter values. All of the predicates associated with a route must evaluate to true for the route to be matched to the request.
     */
    predicates?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies the protocol of routed Spring Cloud App. Allowed values are `HTTP` and `HTTPS`.
     *
     * > **Note:** You likely want to use `HTTPS` in a production environment, since `HTTP` offers no encryption.
     */
    protocol?: pulumi.Input<string>;
    /**
     * One or more `route` blocks as defined below.
     */
    routes?: pulumi.Input<pulumi.Input<inputs.appplatform.SpringCloudGatewayRouteConfigRoute>[]>;
    /**
     * The ID of the Spring Cloud App.
     */
    springCloudAppId?: pulumi.Input<string>;
    /**
     * The ID of the Spring Cloud Gateway. Changing this forces a new Spring Cloud Gateway Route Config to be created.
     */
    springCloudGatewayId?: pulumi.Input<string>;
    /**
     * Should the sso validation be enabled in app level?
     */
    ssoValidationEnabled?: pulumi.Input<boolean>;
}

/**
 * The set of arguments for constructing a SpringCloudGatewayRouteConfig resource.
 */
export interface SpringCloudGatewayRouteConfigArgs {
    /**
     * Specifies a list of filters which are used to modify the request before sending it to the target endpoint, or the received response in app level.
     */
    filters?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The name which should be used for this Spring Cloud Gateway Route Config. Changing this forces a new Spring Cloud Gateway Route Config to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * One or more `openApi` blocks as defined below.
     */
    openApi?: pulumi.Input<inputs.appplatform.SpringCloudGatewayRouteConfigOpenApi>;
    /**
     * Specifies a list of conditions to evaluate a route for each request in app level. Each predicate may be evaluated against request headers and parameter values. All of the predicates associated with a route must evaluate to true for the route to be matched to the request.
     */
    predicates?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies the protocol of routed Spring Cloud App. Allowed values are `HTTP` and `HTTPS`.
     *
     * > **Note:** You likely want to use `HTTPS` in a production environment, since `HTTP` offers no encryption.
     */
    protocol: pulumi.Input<string>;
    /**
     * One or more `route` blocks as defined below.
     */
    routes?: pulumi.Input<pulumi.Input<inputs.appplatform.SpringCloudGatewayRouteConfigRoute>[]>;
    /**
     * The ID of the Spring Cloud App.
     */
    springCloudAppId?: pulumi.Input<string>;
    /**
     * The ID of the Spring Cloud Gateway. Changing this forces a new Spring Cloud Gateway Route Config to be created.
     */
    springCloudGatewayId: pulumi.Input<string>;
    /**
     * Should the sso validation be enabled in app level?
     */
    ssoValidationEnabled?: pulumi.Input<boolean>;
}
