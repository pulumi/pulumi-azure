// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * > **NOTE:** This resource is applicable only for Spring Cloud Service with enterprise tier.
 *
 * Manages a Spring Cloud Dev Tool Portal.
 *
 * ## Import
 *
 * Spring Cloud Dev Tool Portals can be imported using the `resource id`, e.g.
 *
 * ```sh
 *  $ pulumi import azure:appplatform/springCloudDevToolPortal:SpringCloudDevToolPortal example /subscriptions/12345678-1234-9876-4563-123456789012/resourceGroups/resourceGroup1/providers/Microsoft.AppPlatform/Spring/service1/DevToolPortals/default
 * ```
 */
export class SpringCloudDevToolPortal extends pulumi.CustomResource {
    /**
     * Get an existing SpringCloudDevToolPortal resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SpringCloudDevToolPortalState, opts?: pulumi.CustomResourceOptions): SpringCloudDevToolPortal {
        return new SpringCloudDevToolPortal(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure:appplatform/springCloudDevToolPortal:SpringCloudDevToolPortal';

    /**
     * Returns true if the given object is an instance of SpringCloudDevToolPortal.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SpringCloudDevToolPortal {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SpringCloudDevToolPortal.__pulumiType;
    }

    /**
     * Should the Accelerator plugin be enabled?
     */
    public readonly applicationAcceleratorEnabled!: pulumi.Output<boolean>;
    /**
     * Should the Application Live View be enabled?
     */
    public readonly applicationLiveViewEnabled!: pulumi.Output<boolean>;
    /**
     * The name which should be used for this Spring Cloud Dev Tool Portal. The only possible value is `default`. Changing this forces a new Spring Cloud Dev Tool Portal to be created.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Is public network access enabled?
     */
    public readonly publicNetworkAccessEnabled!: pulumi.Output<boolean | undefined>;
    /**
     * The ID of the Spring Cloud Service. Changing this forces a new Spring Cloud Dev Tool Portal to be created.
     */
    public readonly springCloudServiceId!: pulumi.Output<string>;
    /**
     * A `sso` block as defined below.
     */
    public readonly sso!: pulumi.Output<outputs.appplatform.SpringCloudDevToolPortalSso | undefined>;

    /**
     * Create a SpringCloudDevToolPortal resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SpringCloudDevToolPortalArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SpringCloudDevToolPortalArgs | SpringCloudDevToolPortalState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SpringCloudDevToolPortalState | undefined;
            resourceInputs["applicationAcceleratorEnabled"] = state ? state.applicationAcceleratorEnabled : undefined;
            resourceInputs["applicationLiveViewEnabled"] = state ? state.applicationLiveViewEnabled : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["publicNetworkAccessEnabled"] = state ? state.publicNetworkAccessEnabled : undefined;
            resourceInputs["springCloudServiceId"] = state ? state.springCloudServiceId : undefined;
            resourceInputs["sso"] = state ? state.sso : undefined;
        } else {
            const args = argsOrState as SpringCloudDevToolPortalArgs | undefined;
            if ((!args || args.springCloudServiceId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'springCloudServiceId'");
            }
            resourceInputs["applicationAcceleratorEnabled"] = args ? args.applicationAcceleratorEnabled : undefined;
            resourceInputs["applicationLiveViewEnabled"] = args ? args.applicationLiveViewEnabled : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["publicNetworkAccessEnabled"] = args ? args.publicNetworkAccessEnabled : undefined;
            resourceInputs["springCloudServiceId"] = args ? args.springCloudServiceId : undefined;
            resourceInputs["sso"] = args ? args.sso : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SpringCloudDevToolPortal.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering SpringCloudDevToolPortal resources.
 */
export interface SpringCloudDevToolPortalState {
    /**
     * Should the Accelerator plugin be enabled?
     */
    applicationAcceleratorEnabled?: pulumi.Input<boolean>;
    /**
     * Should the Application Live View be enabled?
     */
    applicationLiveViewEnabled?: pulumi.Input<boolean>;
    /**
     * The name which should be used for this Spring Cloud Dev Tool Portal. The only possible value is `default`. Changing this forces a new Spring Cloud Dev Tool Portal to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * Is public network access enabled?
     */
    publicNetworkAccessEnabled?: pulumi.Input<boolean>;
    /**
     * The ID of the Spring Cloud Service. Changing this forces a new Spring Cloud Dev Tool Portal to be created.
     */
    springCloudServiceId?: pulumi.Input<string>;
    /**
     * A `sso` block as defined below.
     */
    sso?: pulumi.Input<inputs.appplatform.SpringCloudDevToolPortalSso>;
}

/**
 * The set of arguments for constructing a SpringCloudDevToolPortal resource.
 */
export interface SpringCloudDevToolPortalArgs {
    /**
     * Should the Accelerator plugin be enabled?
     */
    applicationAcceleratorEnabled?: pulumi.Input<boolean>;
    /**
     * Should the Application Live View be enabled?
     */
    applicationLiveViewEnabled?: pulumi.Input<boolean>;
    /**
     * The name which should be used for this Spring Cloud Dev Tool Portal. The only possible value is `default`. Changing this forces a new Spring Cloud Dev Tool Portal to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * Is public network access enabled?
     */
    publicNetworkAccessEnabled?: pulumi.Input<boolean>;
    /**
     * The ID of the Spring Cloud Service. Changing this forces a new Spring Cloud Dev Tool Portal to be created.
     */
    springCloudServiceId: pulumi.Input<string>;
    /**
     * A `sso` block as defined below.
     */
    sso?: pulumi.Input<inputs.appplatform.SpringCloudDevToolPortalSso>;
}
