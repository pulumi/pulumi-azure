// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Manages a Spring Cloud Build Pack Binding.
 *
 * > **NOTE:** This resource is applicable only for Spring Cloud Service with enterprise tier.
 *
 * ## Import
 *
 * Spring Cloud Build Pack Bindings can be imported using the `resource id`, e.g.
 *
 * ```sh
 *  $ pulumi import azure:appplatform/springCloudBuildPackBinding:SpringCloudBuildPackBinding example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resourceGroup1/providers/Microsoft.AppPlatform/spring/service1/buildServices/buildService1/builders/builder1/buildPackBindings/binding1
 * ```
 */
export class SpringCloudBuildPackBinding extends pulumi.CustomResource {
    /**
     * Get an existing SpringCloudBuildPackBinding resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SpringCloudBuildPackBindingState, opts?: pulumi.CustomResourceOptions): SpringCloudBuildPackBinding {
        return new SpringCloudBuildPackBinding(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure:appplatform/springCloudBuildPackBinding:SpringCloudBuildPackBinding';

    /**
     * Returns true if the given object is an instance of SpringCloudBuildPackBinding.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SpringCloudBuildPackBinding {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SpringCloudBuildPackBinding.__pulumiType;
    }

    /**
     * Specifies the Build Pack Binding Type. Allowed values are `ApacheSkyWalking`, `AppDynamics`, `ApplicationInsights`, `Dynatrace`, `ElasticAPM` and `NewRelic`.
     */
    public readonly bindingType!: pulumi.Output<string | undefined>;
    /**
     * A `launch` block as defined below.
     */
    public readonly launch!: pulumi.Output<outputs.appplatform.SpringCloudBuildPackBindingLaunch | undefined>;
    /**
     * The name which should be used for this Spring Cloud Build Pack Binding. Changing this forces a new Spring Cloud Build Pack Binding to be created.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The ID of the Spring Cloud Builder. Changing this forces a new Spring Cloud Build Pack Binding to be created.
     */
    public readonly springCloudBuilderId!: pulumi.Output<string>;

    /**
     * Create a SpringCloudBuildPackBinding resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SpringCloudBuildPackBindingArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SpringCloudBuildPackBindingArgs | SpringCloudBuildPackBindingState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SpringCloudBuildPackBindingState | undefined;
            resourceInputs["bindingType"] = state ? state.bindingType : undefined;
            resourceInputs["launch"] = state ? state.launch : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["springCloudBuilderId"] = state ? state.springCloudBuilderId : undefined;
        } else {
            const args = argsOrState as SpringCloudBuildPackBindingArgs | undefined;
            if ((!args || args.springCloudBuilderId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'springCloudBuilderId'");
            }
            resourceInputs["bindingType"] = args ? args.bindingType : undefined;
            resourceInputs["launch"] = args ? args.launch : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["springCloudBuilderId"] = args ? args.springCloudBuilderId : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SpringCloudBuildPackBinding.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering SpringCloudBuildPackBinding resources.
 */
export interface SpringCloudBuildPackBindingState {
    /**
     * Specifies the Build Pack Binding Type. Allowed values are `ApacheSkyWalking`, `AppDynamics`, `ApplicationInsights`, `Dynatrace`, `ElasticAPM` and `NewRelic`.
     */
    bindingType?: pulumi.Input<string>;
    /**
     * A `launch` block as defined below.
     */
    launch?: pulumi.Input<inputs.appplatform.SpringCloudBuildPackBindingLaunch>;
    /**
     * The name which should be used for this Spring Cloud Build Pack Binding. Changing this forces a new Spring Cloud Build Pack Binding to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * The ID of the Spring Cloud Builder. Changing this forces a new Spring Cloud Build Pack Binding to be created.
     */
    springCloudBuilderId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a SpringCloudBuildPackBinding resource.
 */
export interface SpringCloudBuildPackBindingArgs {
    /**
     * Specifies the Build Pack Binding Type. Allowed values are `ApacheSkyWalking`, `AppDynamics`, `ApplicationInsights`, `Dynatrace`, `ElasticAPM` and `NewRelic`.
     */
    bindingType?: pulumi.Input<string>;
    /**
     * A `launch` block as defined below.
     */
    launch?: pulumi.Input<inputs.appplatform.SpringCloudBuildPackBindingLaunch>;
    /**
     * The name which should be used for this Spring Cloud Build Pack Binding. Changing this forces a new Spring Cloud Build Pack Binding to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * The ID of the Spring Cloud Builder. Changing this forces a new Spring Cloud Build Pack Binding to be created.
     */
    springCloudBuilderId: pulumi.Input<string>;
}
