// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Manages a Spring Cloud API Portal Domain.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const exampleResourceGroup = new azure.core.ResourceGroup("exampleResourceGroup", {location: "West Europe"});
 * const exampleSpringCloudService = new azure.appplatform.SpringCloudService("exampleSpringCloudService", {
 *     location: exampleResourceGroup.location,
 *     resourceGroupName: exampleResourceGroup.name,
 *     skuName: "E0",
 * });
 * const exampleSpringCloudGateway = new azure.appplatform.SpringCloudGateway("exampleSpringCloudGateway", {springCloudServiceId: exampleSpringCloudService.id});
 * const exampleSpringCloudApiPortal = new azure.appplatform.SpringCloudApiPortal("exampleSpringCloudApiPortal", {
 *     springCloudServiceId: exampleSpringCloudService.id,
 *     gatewayIds: [exampleSpringCloudGateway.id],
 * });
 * const exampleSpringCloudApiPortalCustomDomain = new azure.appplatform.SpringCloudApiPortalCustomDomain("exampleSpringCloudApiPortalCustomDomain", {springCloudApiPortalId: exampleSpringCloudApiPortal.id});
 * ```
 *
 * ## Import
 *
 * Spring Cloud API Portal Domains can be imported using the `resource id`, e.g.
 *
 * ```sh
 *  $ pulumi import azure:appplatform/springCloudApiPortalCustomDomain:SpringCloudApiPortalCustomDomain example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resourceGroup1/providers/Microsoft.AppPlatform/Spring/service1/apiPortals/apiPortal1/domains/domain1
 * ```
 */
export class SpringCloudApiPortalCustomDomain extends pulumi.CustomResource {
    /**
     * Get an existing SpringCloudApiPortalCustomDomain resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SpringCloudApiPortalCustomDomainState, opts?: pulumi.CustomResourceOptions): SpringCloudApiPortalCustomDomain {
        return new SpringCloudApiPortalCustomDomain(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure:appplatform/springCloudApiPortalCustomDomain:SpringCloudApiPortalCustomDomain';

    /**
     * Returns true if the given object is an instance of SpringCloudApiPortalCustomDomain.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SpringCloudApiPortalCustomDomain {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SpringCloudApiPortalCustomDomain.__pulumiType;
    }

    /**
     * The name which should be used for this Spring Cloud API Portal Domain. Changing this forces a new Spring Cloud API Portal Domain to be created.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The ID of the Spring Cloud API Portal. Changing this forces a new Spring Cloud API Portal Domain to be created.
     */
    public readonly springCloudApiPortalId!: pulumi.Output<string>;
    /**
     * Specifies the thumbprint of the Spring Cloud Certificate that binds to the Spring Cloud API Portal Domain.
     */
    public readonly thumbprint!: pulumi.Output<string | undefined>;

    /**
     * Create a SpringCloudApiPortalCustomDomain resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SpringCloudApiPortalCustomDomainArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SpringCloudApiPortalCustomDomainArgs | SpringCloudApiPortalCustomDomainState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SpringCloudApiPortalCustomDomainState | undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["springCloudApiPortalId"] = state ? state.springCloudApiPortalId : undefined;
            resourceInputs["thumbprint"] = state ? state.thumbprint : undefined;
        } else {
            const args = argsOrState as SpringCloudApiPortalCustomDomainArgs | undefined;
            if ((!args || args.springCloudApiPortalId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'springCloudApiPortalId'");
            }
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["springCloudApiPortalId"] = args ? args.springCloudApiPortalId : undefined;
            resourceInputs["thumbprint"] = args ? args.thumbprint : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SpringCloudApiPortalCustomDomain.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering SpringCloudApiPortalCustomDomain resources.
 */
export interface SpringCloudApiPortalCustomDomainState {
    /**
     * The name which should be used for this Spring Cloud API Portal Domain. Changing this forces a new Spring Cloud API Portal Domain to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * The ID of the Spring Cloud API Portal. Changing this forces a new Spring Cloud API Portal Domain to be created.
     */
    springCloudApiPortalId?: pulumi.Input<string>;
    /**
     * Specifies the thumbprint of the Spring Cloud Certificate that binds to the Spring Cloud API Portal Domain.
     */
    thumbprint?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a SpringCloudApiPortalCustomDomain resource.
 */
export interface SpringCloudApiPortalCustomDomainArgs {
    /**
     * The name which should be used for this Spring Cloud API Portal Domain. Changing this forces a new Spring Cloud API Portal Domain to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * The ID of the Spring Cloud API Portal. Changing this forces a new Spring Cloud API Portal Domain to be created.
     */
    springCloudApiPortalId: pulumi.Input<string>;
    /**
     * Specifies the thumbprint of the Spring Cloud Certificate that binds to the Spring Cloud API Portal Domain.
     */
    thumbprint?: pulumi.Input<string>;
}
