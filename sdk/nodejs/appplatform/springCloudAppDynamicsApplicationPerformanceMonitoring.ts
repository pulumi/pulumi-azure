// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * > **Note:** This resource is only applicable for Spring Cloud Service enterprise tier
 *
 * Manages a Spring Cloud Application Performance Monitoring resource for App Dynamics.
 *
 * !> **Note:** Azure Spring Apps is now deprecated and will be retired on 2028-05-31 - as such the `azure.appplatform.SpringCloudAppDynamicsApplicationPerformanceMonitoring` resource is deprecated and will be removed in a future major version of the AzureRM Provider. See https://aka.ms/asaretirement for more information.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = new azure.core.ResourceGroup("example", {
 *     name: "example",
 *     location: "West Europe",
 * });
 * const exampleSpringCloudService = new azure.appplatform.SpringCloudService("example", {
 *     name: "example",
 *     location: example.location,
 *     resourceGroupName: example.name,
 *     skuName: "E0",
 * });
 * const exampleSpringCloudAppDynamicsApplicationPerformanceMonitoring = new azure.appplatform.SpringCloudAppDynamicsApplicationPerformanceMonitoring("example", {
 *     name: "example",
 *     springCloudServiceId: exampleSpringCloudService.id,
 *     agentAccountName: "example-agent-account-name",
 *     agentAccountAccessKey: "example-agent-account-access-key",
 *     controllerHostName: "example-controller-host-name",
 *     agentApplicationName: "example-agent-application-name",
 *     agentTierName: "example-agent-tier-name",
 *     agentNodeName: "example-agent-node-name",
 *     agentUniqueHostId: "example-agent-unique-host-id",
 *     controllerSslEnabled: true,
 *     controllerPort: 8080,
 *     globallyEnabled: true,
 * });
 * ```
 *
 * ## API Providers
 *
 * <!-- This section is generated, changes will be overwritten -->
 * This resource uses the following Azure API Providers:
 *
 * * `Microsoft.AppPlatform` - 2024-01-01-preview
 *
 * ## Import
 *
 * Spring Cloud Application Performance Monitoring resource for App Dynamics can be imported using the `resource id`, e.g.
 *
 * ```sh
 * $ pulumi import azure:appplatform/springCloudAppDynamicsApplicationPerformanceMonitoring:SpringCloudAppDynamicsApplicationPerformanceMonitoring example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/mygroup1/providers/Microsoft.AppPlatform/spring/service1/apms/apm1
 * ```
 */
export class SpringCloudAppDynamicsApplicationPerformanceMonitoring extends pulumi.CustomResource {
    /**
     * Get an existing SpringCloudAppDynamicsApplicationPerformanceMonitoring resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SpringCloudAppDynamicsApplicationPerformanceMonitoringState, opts?: pulumi.CustomResourceOptions): SpringCloudAppDynamicsApplicationPerformanceMonitoring {
        return new SpringCloudAppDynamicsApplicationPerformanceMonitoring(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure:appplatform/springCloudAppDynamicsApplicationPerformanceMonitoring:SpringCloudAppDynamicsApplicationPerformanceMonitoring';

    /**
     * Returns true if the given object is an instance of SpringCloudAppDynamicsApplicationPerformanceMonitoring.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SpringCloudAppDynamicsApplicationPerformanceMonitoring {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SpringCloudAppDynamicsApplicationPerformanceMonitoring.__pulumiType;
    }

    /**
     * Specifies the account access key used to authenticate with the Controller.
     */
    declare public readonly agentAccountAccessKey: pulumi.Output<string>;
    /**
     * Specifies the account name of the App Dynamics account.
     */
    declare public readonly agentAccountName: pulumi.Output<string>;
    /**
     * Specifies the name of the logical business application that this JVM node belongs to.
     */
    declare public readonly agentApplicationName: pulumi.Output<string | undefined>;
    /**
     * Specifies the name of the node. Where JVMs are dynamically created.
     */
    declare public readonly agentNodeName: pulumi.Output<string | undefined>;
    /**
     * Specifies the name of the tier that this JVM node belongs to.
     */
    declare public readonly agentTierName: pulumi.Output<string | undefined>;
    /**
     * Specifies the unique host ID which is used to Logically partition a single physical host or virtual machine such that it appears to the Controller that the application is running on different machines.
     */
    declare public readonly agentUniqueHostId: pulumi.Output<string | undefined>;
    /**
     * Specifies the hostname or the IP address of the AppDynamics Controller.
     */
    declare public readonly controllerHostName: pulumi.Output<string>;
    /**
     * Specifies the HTTP(S) port of the AppDynamics Controller. This is the port used to access the AppDynamics browser-based user interface.
     */
    declare public readonly controllerPort: pulumi.Output<number | undefined>;
    /**
     * Specifies whether enable use SSL (HTTPS) to connect to the AppDynamics Controller.
     */
    declare public readonly controllerSslEnabled: pulumi.Output<boolean | undefined>;
    /**
     * Specifies whether the Spring Cloud Application Performance Monitoring resource for Application Insights is enabled globally. Defaults to `false`.
     */
    declare public readonly globallyEnabled: pulumi.Output<boolean | undefined>;
    /**
     * The name which should be used for this Spring Cloud Application Performance Monitoring resource for App Dynamics. Changing this forces a new resource to be created.
     */
    declare public readonly name: pulumi.Output<string>;
    /**
     * The ID of the Spring Cloud Service. Changing this forces a new resource to be created.
     */
    declare public readonly springCloudServiceId: pulumi.Output<string>;

    /**
     * Create a SpringCloudAppDynamicsApplicationPerformanceMonitoring resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SpringCloudAppDynamicsApplicationPerformanceMonitoringArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SpringCloudAppDynamicsApplicationPerformanceMonitoringArgs | SpringCloudAppDynamicsApplicationPerformanceMonitoringState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SpringCloudAppDynamicsApplicationPerformanceMonitoringState | undefined;
            resourceInputs["agentAccountAccessKey"] = state?.agentAccountAccessKey;
            resourceInputs["agentAccountName"] = state?.agentAccountName;
            resourceInputs["agentApplicationName"] = state?.agentApplicationName;
            resourceInputs["agentNodeName"] = state?.agentNodeName;
            resourceInputs["agentTierName"] = state?.agentTierName;
            resourceInputs["agentUniqueHostId"] = state?.agentUniqueHostId;
            resourceInputs["controllerHostName"] = state?.controllerHostName;
            resourceInputs["controllerPort"] = state?.controllerPort;
            resourceInputs["controllerSslEnabled"] = state?.controllerSslEnabled;
            resourceInputs["globallyEnabled"] = state?.globallyEnabled;
            resourceInputs["name"] = state?.name;
            resourceInputs["springCloudServiceId"] = state?.springCloudServiceId;
        } else {
            const args = argsOrState as SpringCloudAppDynamicsApplicationPerformanceMonitoringArgs | undefined;
            if (args?.agentAccountAccessKey === undefined && !opts.urn) {
                throw new Error("Missing required property 'agentAccountAccessKey'");
            }
            if (args?.agentAccountName === undefined && !opts.urn) {
                throw new Error("Missing required property 'agentAccountName'");
            }
            if (args?.controllerHostName === undefined && !opts.urn) {
                throw new Error("Missing required property 'controllerHostName'");
            }
            if (args?.springCloudServiceId === undefined && !opts.urn) {
                throw new Error("Missing required property 'springCloudServiceId'");
            }
            resourceInputs["agentAccountAccessKey"] = args?.agentAccountAccessKey ? pulumi.secret(args.agentAccountAccessKey) : undefined;
            resourceInputs["agentAccountName"] = args?.agentAccountName ? pulumi.secret(args.agentAccountName) : undefined;
            resourceInputs["agentApplicationName"] = args?.agentApplicationName;
            resourceInputs["agentNodeName"] = args?.agentNodeName;
            resourceInputs["agentTierName"] = args?.agentTierName;
            resourceInputs["agentUniqueHostId"] = args?.agentUniqueHostId;
            resourceInputs["controllerHostName"] = args?.controllerHostName;
            resourceInputs["controllerPort"] = args?.controllerPort;
            resourceInputs["controllerSslEnabled"] = args?.controllerSslEnabled;
            resourceInputs["globallyEnabled"] = args?.globallyEnabled;
            resourceInputs["name"] = args?.name;
            resourceInputs["springCloudServiceId"] = args?.springCloudServiceId;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["agentAccountAccessKey", "agentAccountName"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(SpringCloudAppDynamicsApplicationPerformanceMonitoring.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering SpringCloudAppDynamicsApplicationPerformanceMonitoring resources.
 */
export interface SpringCloudAppDynamicsApplicationPerformanceMonitoringState {
    /**
     * Specifies the account access key used to authenticate with the Controller.
     */
    agentAccountAccessKey?: pulumi.Input<string>;
    /**
     * Specifies the account name of the App Dynamics account.
     */
    agentAccountName?: pulumi.Input<string>;
    /**
     * Specifies the name of the logical business application that this JVM node belongs to.
     */
    agentApplicationName?: pulumi.Input<string>;
    /**
     * Specifies the name of the node. Where JVMs are dynamically created.
     */
    agentNodeName?: pulumi.Input<string>;
    /**
     * Specifies the name of the tier that this JVM node belongs to.
     */
    agentTierName?: pulumi.Input<string>;
    /**
     * Specifies the unique host ID which is used to Logically partition a single physical host or virtual machine such that it appears to the Controller that the application is running on different machines.
     */
    agentUniqueHostId?: pulumi.Input<string>;
    /**
     * Specifies the hostname or the IP address of the AppDynamics Controller.
     */
    controllerHostName?: pulumi.Input<string>;
    /**
     * Specifies the HTTP(S) port of the AppDynamics Controller. This is the port used to access the AppDynamics browser-based user interface.
     */
    controllerPort?: pulumi.Input<number>;
    /**
     * Specifies whether enable use SSL (HTTPS) to connect to the AppDynamics Controller.
     */
    controllerSslEnabled?: pulumi.Input<boolean>;
    /**
     * Specifies whether the Spring Cloud Application Performance Monitoring resource for Application Insights is enabled globally. Defaults to `false`.
     */
    globallyEnabled?: pulumi.Input<boolean>;
    /**
     * The name which should be used for this Spring Cloud Application Performance Monitoring resource for App Dynamics. Changing this forces a new resource to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * The ID of the Spring Cloud Service. Changing this forces a new resource to be created.
     */
    springCloudServiceId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a SpringCloudAppDynamicsApplicationPerformanceMonitoring resource.
 */
export interface SpringCloudAppDynamicsApplicationPerformanceMonitoringArgs {
    /**
     * Specifies the account access key used to authenticate with the Controller.
     */
    agentAccountAccessKey: pulumi.Input<string>;
    /**
     * Specifies the account name of the App Dynamics account.
     */
    agentAccountName: pulumi.Input<string>;
    /**
     * Specifies the name of the logical business application that this JVM node belongs to.
     */
    agentApplicationName?: pulumi.Input<string>;
    /**
     * Specifies the name of the node. Where JVMs are dynamically created.
     */
    agentNodeName?: pulumi.Input<string>;
    /**
     * Specifies the name of the tier that this JVM node belongs to.
     */
    agentTierName?: pulumi.Input<string>;
    /**
     * Specifies the unique host ID which is used to Logically partition a single physical host or virtual machine such that it appears to the Controller that the application is running on different machines.
     */
    agentUniqueHostId?: pulumi.Input<string>;
    /**
     * Specifies the hostname or the IP address of the AppDynamics Controller.
     */
    controllerHostName: pulumi.Input<string>;
    /**
     * Specifies the HTTP(S) port of the AppDynamics Controller. This is the port used to access the AppDynamics browser-based user interface.
     */
    controllerPort?: pulumi.Input<number>;
    /**
     * Specifies whether enable use SSL (HTTPS) to connect to the AppDynamics Controller.
     */
    controllerSslEnabled?: pulumi.Input<boolean>;
    /**
     * Specifies whether the Spring Cloud Application Performance Monitoring resource for Application Insights is enabled globally. Defaults to `false`.
     */
    globallyEnabled?: pulumi.Input<boolean>;
    /**
     * The name which should be used for this Spring Cloud Application Performance Monitoring resource for App Dynamics. Changing this forces a new resource to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * The ID of the Spring Cloud Service. Changing this forces a new resource to be created.
     */
    springCloudServiceId: pulumi.Input<string>;
}
