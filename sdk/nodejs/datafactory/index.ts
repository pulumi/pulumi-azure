// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export * from "./customDataset";
export * from "./dataFlow";
export * from "./datasetAzureBlob";
export * from "./datasetBinary";
export * from "./datasetCosmosDBApi";
export * from "./datasetDelimitedText";
export * from "./datasetHttp";
export * from "./datasetJson";
export * from "./datasetMysql";
export * from "./datasetParquet";
export * from "./datasetPostgresql";
export * from "./datasetSnowflake";
export * from "./datasetSqlServerTable";
export * from "./factory";
export * from "./getFactory";
export * from "./integrationRuntimeManaged";
export * from "./integrationRuntimeRule";
export * from "./integrationRuntimeSelfHosted";
export * from "./integrationRuntimeSsis";
export * from "./linkedCustomService";
export * from "./linkedServiceAzureBlobStorage";
export * from "./linkedServiceAzureDatabricks";
export * from "./linkedServiceAzureFileStorage";
export * from "./linkedServiceAzureFunction";
export * from "./linkedServiceAzureSearch";
export * from "./linkedServiceAzureSqlDatabase";
export * from "./linkedServiceAzureTableStorage";
export * from "./linkedServiceCosmosDb";
export * from "./linkedServiceDataLakeStorageGen2";
export * from "./linkedServiceKeyVault";
export * from "./linkedServiceKusto";
export * from "./linkedServiceMysql";
export * from "./linkedServiceOdata";
export * from "./linkedServicePostgresql";
export * from "./linkedServiceSftp";
export * from "./linkedServiceSnowflake";
export * from "./linkedServiceSqlServer";
export * from "./linkedServiceSynapse";
export * from "./linkedServiceWeb";
export * from "./managedPrivateEndpoint";
export * from "./pipeline";
export * from "./triggerBlobEvent";
export * from "./triggerCustomEvent";
export * from "./triggerSchedule";
export * from "./triggerTumblingWindow";

// Import resources to register:
import { CustomDataset } from "./customDataset";
import { DataFlow } from "./dataFlow";
import { DatasetAzureBlob } from "./datasetAzureBlob";
import { DatasetBinary } from "./datasetBinary";
import { DatasetCosmosDBApi } from "./datasetCosmosDBApi";
import { DatasetDelimitedText } from "./datasetDelimitedText";
import { DatasetHttp } from "./datasetHttp";
import { DatasetJson } from "./datasetJson";
import { DatasetMysql } from "./datasetMysql";
import { DatasetParquet } from "./datasetParquet";
import { DatasetPostgresql } from "./datasetPostgresql";
import { DatasetSnowflake } from "./datasetSnowflake";
import { DatasetSqlServerTable } from "./datasetSqlServerTable";
import { Factory } from "./factory";
import { IntegrationRuntimeManaged } from "./integrationRuntimeManaged";
import { IntegrationRuntimeRule } from "./integrationRuntimeRule";
import { IntegrationRuntimeSelfHosted } from "./integrationRuntimeSelfHosted";
import { IntegrationRuntimeSsis } from "./integrationRuntimeSsis";
import { LinkedCustomService } from "./linkedCustomService";
import { LinkedServiceAzureBlobStorage } from "./linkedServiceAzureBlobStorage";
import { LinkedServiceAzureDatabricks } from "./linkedServiceAzureDatabricks";
import { LinkedServiceAzureFileStorage } from "./linkedServiceAzureFileStorage";
import { LinkedServiceAzureFunction } from "./linkedServiceAzureFunction";
import { LinkedServiceAzureSearch } from "./linkedServiceAzureSearch";
import { LinkedServiceAzureSqlDatabase } from "./linkedServiceAzureSqlDatabase";
import { LinkedServiceAzureTableStorage } from "./linkedServiceAzureTableStorage";
import { LinkedServiceCosmosDb } from "./linkedServiceCosmosDb";
import { LinkedServiceDataLakeStorageGen2 } from "./linkedServiceDataLakeStorageGen2";
import { LinkedServiceKeyVault } from "./linkedServiceKeyVault";
import { LinkedServiceKusto } from "./linkedServiceKusto";
import { LinkedServiceMysql } from "./linkedServiceMysql";
import { LinkedServiceOdata } from "./linkedServiceOdata";
import { LinkedServicePostgresql } from "./linkedServicePostgresql";
import { LinkedServiceSftp } from "./linkedServiceSftp";
import { LinkedServiceSnowflake } from "./linkedServiceSnowflake";
import { LinkedServiceSqlServer } from "./linkedServiceSqlServer";
import { LinkedServiceSynapse } from "./linkedServiceSynapse";
import { LinkedServiceWeb } from "./linkedServiceWeb";
import { ManagedPrivateEndpoint } from "./managedPrivateEndpoint";
import { Pipeline } from "./pipeline";
import { TriggerBlobEvent } from "./triggerBlobEvent";
import { TriggerCustomEvent } from "./triggerCustomEvent";
import { TriggerSchedule } from "./triggerSchedule";
import { TriggerTumblingWindow } from "./triggerTumblingWindow";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "azure:datafactory/customDataset:CustomDataset":
                return new CustomDataset(name, <any>undefined, { urn })
            case "azure:datafactory/dataFlow:DataFlow":
                return new DataFlow(name, <any>undefined, { urn })
            case "azure:datafactory/datasetAzureBlob:DatasetAzureBlob":
                return new DatasetAzureBlob(name, <any>undefined, { urn })
            case "azure:datafactory/datasetBinary:DatasetBinary":
                return new DatasetBinary(name, <any>undefined, { urn })
            case "azure:datafactory/datasetCosmosDBApi:DatasetCosmosDBApi":
                return new DatasetCosmosDBApi(name, <any>undefined, { urn })
            case "azure:datafactory/datasetDelimitedText:DatasetDelimitedText":
                return new DatasetDelimitedText(name, <any>undefined, { urn })
            case "azure:datafactory/datasetHttp:DatasetHttp":
                return new DatasetHttp(name, <any>undefined, { urn })
            case "azure:datafactory/datasetJson:DatasetJson":
                return new DatasetJson(name, <any>undefined, { urn })
            case "azure:datafactory/datasetMysql:DatasetMysql":
                return new DatasetMysql(name, <any>undefined, { urn })
            case "azure:datafactory/datasetParquet:DatasetParquet":
                return new DatasetParquet(name, <any>undefined, { urn })
            case "azure:datafactory/datasetPostgresql:DatasetPostgresql":
                return new DatasetPostgresql(name, <any>undefined, { urn })
            case "azure:datafactory/datasetSnowflake:DatasetSnowflake":
                return new DatasetSnowflake(name, <any>undefined, { urn })
            case "azure:datafactory/datasetSqlServerTable:DatasetSqlServerTable":
                return new DatasetSqlServerTable(name, <any>undefined, { urn })
            case "azure:datafactory/factory:Factory":
                return new Factory(name, <any>undefined, { urn })
            case "azure:datafactory/integrationRuntimeManaged:IntegrationRuntimeManaged":
                return new IntegrationRuntimeManaged(name, <any>undefined, { urn })
            case "azure:datafactory/integrationRuntimeRule:IntegrationRuntimeRule":
                return new IntegrationRuntimeRule(name, <any>undefined, { urn })
            case "azure:datafactory/integrationRuntimeSelfHosted:IntegrationRuntimeSelfHosted":
                return new IntegrationRuntimeSelfHosted(name, <any>undefined, { urn })
            case "azure:datafactory/integrationRuntimeSsis:IntegrationRuntimeSsis":
                return new IntegrationRuntimeSsis(name, <any>undefined, { urn })
            case "azure:datafactory/linkedCustomService:LinkedCustomService":
                return new LinkedCustomService(name, <any>undefined, { urn })
            case "azure:datafactory/linkedServiceAzureBlobStorage:LinkedServiceAzureBlobStorage":
                return new LinkedServiceAzureBlobStorage(name, <any>undefined, { urn })
            case "azure:datafactory/linkedServiceAzureDatabricks:LinkedServiceAzureDatabricks":
                return new LinkedServiceAzureDatabricks(name, <any>undefined, { urn })
            case "azure:datafactory/linkedServiceAzureFileStorage:LinkedServiceAzureFileStorage":
                return new LinkedServiceAzureFileStorage(name, <any>undefined, { urn })
            case "azure:datafactory/linkedServiceAzureFunction:LinkedServiceAzureFunction":
                return new LinkedServiceAzureFunction(name, <any>undefined, { urn })
            case "azure:datafactory/linkedServiceAzureSearch:LinkedServiceAzureSearch":
                return new LinkedServiceAzureSearch(name, <any>undefined, { urn })
            case "azure:datafactory/linkedServiceAzureSqlDatabase:LinkedServiceAzureSqlDatabase":
                return new LinkedServiceAzureSqlDatabase(name, <any>undefined, { urn })
            case "azure:datafactory/linkedServiceAzureTableStorage:LinkedServiceAzureTableStorage":
                return new LinkedServiceAzureTableStorage(name, <any>undefined, { urn })
            case "azure:datafactory/linkedServiceCosmosDb:LinkedServiceCosmosDb":
                return new LinkedServiceCosmosDb(name, <any>undefined, { urn })
            case "azure:datafactory/linkedServiceDataLakeStorageGen2:LinkedServiceDataLakeStorageGen2":
                return new LinkedServiceDataLakeStorageGen2(name, <any>undefined, { urn })
            case "azure:datafactory/linkedServiceKeyVault:LinkedServiceKeyVault":
                return new LinkedServiceKeyVault(name, <any>undefined, { urn })
            case "azure:datafactory/linkedServiceKusto:LinkedServiceKusto":
                return new LinkedServiceKusto(name, <any>undefined, { urn })
            case "azure:datafactory/linkedServiceMysql:LinkedServiceMysql":
                return new LinkedServiceMysql(name, <any>undefined, { urn })
            case "azure:datafactory/linkedServiceOdata:LinkedServiceOdata":
                return new LinkedServiceOdata(name, <any>undefined, { urn })
            case "azure:datafactory/linkedServicePostgresql:LinkedServicePostgresql":
                return new LinkedServicePostgresql(name, <any>undefined, { urn })
            case "azure:datafactory/linkedServiceSftp:LinkedServiceSftp":
                return new LinkedServiceSftp(name, <any>undefined, { urn })
            case "azure:datafactory/linkedServiceSnowflake:LinkedServiceSnowflake":
                return new LinkedServiceSnowflake(name, <any>undefined, { urn })
            case "azure:datafactory/linkedServiceSqlServer:LinkedServiceSqlServer":
                return new LinkedServiceSqlServer(name, <any>undefined, { urn })
            case "azure:datafactory/linkedServiceSynapse:LinkedServiceSynapse":
                return new LinkedServiceSynapse(name, <any>undefined, { urn })
            case "azure:datafactory/linkedServiceWeb:LinkedServiceWeb":
                return new LinkedServiceWeb(name, <any>undefined, { urn })
            case "azure:datafactory/managedPrivateEndpoint:ManagedPrivateEndpoint":
                return new ManagedPrivateEndpoint(name, <any>undefined, { urn })
            case "azure:datafactory/pipeline:Pipeline":
                return new Pipeline(name, <any>undefined, { urn })
            case "azure:datafactory/triggerBlobEvent:TriggerBlobEvent":
                return new TriggerBlobEvent(name, <any>undefined, { urn })
            case "azure:datafactory/triggerCustomEvent:TriggerCustomEvent":
                return new TriggerCustomEvent(name, <any>undefined, { urn })
            case "azure:datafactory/triggerSchedule:TriggerSchedule":
                return new TriggerSchedule(name, <any>undefined, { urn })
            case "azure:datafactory/triggerTumblingWindow:TriggerTumblingWindow":
                return new TriggerTumblingWindow(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure", "datafactory/customDataset", _module)
pulumi.runtime.registerResourceModule("azure", "datafactory/dataFlow", _module)
pulumi.runtime.registerResourceModule("azure", "datafactory/datasetAzureBlob", _module)
pulumi.runtime.registerResourceModule("azure", "datafactory/datasetBinary", _module)
pulumi.runtime.registerResourceModule("azure", "datafactory/datasetCosmosDBApi", _module)
pulumi.runtime.registerResourceModule("azure", "datafactory/datasetDelimitedText", _module)
pulumi.runtime.registerResourceModule("azure", "datafactory/datasetHttp", _module)
pulumi.runtime.registerResourceModule("azure", "datafactory/datasetJson", _module)
pulumi.runtime.registerResourceModule("azure", "datafactory/datasetMysql", _module)
pulumi.runtime.registerResourceModule("azure", "datafactory/datasetParquet", _module)
pulumi.runtime.registerResourceModule("azure", "datafactory/datasetPostgresql", _module)
pulumi.runtime.registerResourceModule("azure", "datafactory/datasetSnowflake", _module)
pulumi.runtime.registerResourceModule("azure", "datafactory/datasetSqlServerTable", _module)
pulumi.runtime.registerResourceModule("azure", "datafactory/factory", _module)
pulumi.runtime.registerResourceModule("azure", "datafactory/integrationRuntimeManaged", _module)
pulumi.runtime.registerResourceModule("azure", "datafactory/integrationRuntimeRule", _module)
pulumi.runtime.registerResourceModule("azure", "datafactory/integrationRuntimeSelfHosted", _module)
pulumi.runtime.registerResourceModule("azure", "datafactory/integrationRuntimeSsis", _module)
pulumi.runtime.registerResourceModule("azure", "datafactory/linkedCustomService", _module)
pulumi.runtime.registerResourceModule("azure", "datafactory/linkedServiceAzureBlobStorage", _module)
pulumi.runtime.registerResourceModule("azure", "datafactory/linkedServiceAzureDatabricks", _module)
pulumi.runtime.registerResourceModule("azure", "datafactory/linkedServiceAzureFileStorage", _module)
pulumi.runtime.registerResourceModule("azure", "datafactory/linkedServiceAzureFunction", _module)
pulumi.runtime.registerResourceModule("azure", "datafactory/linkedServiceAzureSearch", _module)
pulumi.runtime.registerResourceModule("azure", "datafactory/linkedServiceAzureSqlDatabase", _module)
pulumi.runtime.registerResourceModule("azure", "datafactory/linkedServiceAzureTableStorage", _module)
pulumi.runtime.registerResourceModule("azure", "datafactory/linkedServiceCosmosDb", _module)
pulumi.runtime.registerResourceModule("azure", "datafactory/linkedServiceDataLakeStorageGen2", _module)
pulumi.runtime.registerResourceModule("azure", "datafactory/linkedServiceKeyVault", _module)
pulumi.runtime.registerResourceModule("azure", "datafactory/linkedServiceKusto", _module)
pulumi.runtime.registerResourceModule("azure", "datafactory/linkedServiceMysql", _module)
pulumi.runtime.registerResourceModule("azure", "datafactory/linkedServiceOdata", _module)
pulumi.runtime.registerResourceModule("azure", "datafactory/linkedServicePostgresql", _module)
pulumi.runtime.registerResourceModule("azure", "datafactory/linkedServiceSftp", _module)
pulumi.runtime.registerResourceModule("azure", "datafactory/linkedServiceSnowflake", _module)
pulumi.runtime.registerResourceModule("azure", "datafactory/linkedServiceSqlServer", _module)
pulumi.runtime.registerResourceModule("azure", "datafactory/linkedServiceSynapse", _module)
pulumi.runtime.registerResourceModule("azure", "datafactory/linkedServiceWeb", _module)
pulumi.runtime.registerResourceModule("azure", "datafactory/managedPrivateEndpoint", _module)
pulumi.runtime.registerResourceModule("azure", "datafactory/pipeline", _module)
pulumi.runtime.registerResourceModule("azure", "datafactory/triggerBlobEvent", _module)
pulumi.runtime.registerResourceModule("azure", "datafactory/triggerCustomEvent", _module)
pulumi.runtime.registerResourceModule("azure", "datafactory/triggerSchedule", _module)
pulumi.runtime.registerResourceModule("azure", "datafactory/triggerTumblingWindow", _module)
