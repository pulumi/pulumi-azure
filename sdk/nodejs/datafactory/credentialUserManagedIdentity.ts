// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Manage a Data Factory User Assigned Managed Identity credential resource. These resources are used by Data Factory to access data sources.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = new azure.core.ResourceGroup("example", {
 *     name: "example-resources",
 *     location: "westus",
 * });
 * const exampleUserAssignedIdentity = new azure.authorization.UserAssignedIdentity("example", {
 *     location: example.location,
 *     name: "my-user",
 *     resourceGroupName: example.name,
 * });
 * const exampleFactory = new azure.datafactory.Factory("example", {
 *     name: "example",
 *     location: example.location,
 *     resourceGroupName: example.name,
 *     identity: {
 *         type: "UserAssigned",
 *         identityIds: [exampleUserAssignedIdentity.id],
 *     },
 * });
 * const test = new azure.datafactory.CredentialUserManagedIdentity("test", {
 *     name: exampleUserAssignedIdentity.name,
 *     description: "Short description of this credential",
 *     dataFactoryId: exampleFactory.id,
 *     identityId: exampleUserAssignedIdentity.id,
 *     annotations: [
 *         "example",
 *         "example2",
 *     ],
 * });
 * ```
 *
 * ## API Providers
 *
 * <!-- This section is generated, changes will be overwritten -->
 * This resource uses the following Azure API Providers:
 *
 * * `Microsoft.DataFactory`: 2018-06-01
 *
 * ## Import
 *
 * Data Factory Credentials can be imported using the `resource id`, e.g.
 *
 * ```sh
 * $ pulumi import azure:datafactory/credentialUserManagedIdentity:CredentialUserManagedIdentity example /subscriptions/1f3d6e58-feed-4bb6-87e5-a52305ad3375/resourceGroups/example-resources/providers/Microsoft.DataFactory/factories/example/credentials/credential1
 * ```
 */
export class CredentialUserManagedIdentity extends pulumi.CustomResource {
    /**
     * Get an existing CredentialUserManagedIdentity resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CredentialUserManagedIdentityState, opts?: pulumi.CustomResourceOptions): CredentialUserManagedIdentity {
        return new CredentialUserManagedIdentity(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure:datafactory/credentialUserManagedIdentity:CredentialUserManagedIdentity';

    /**
     * Returns true if the given object is an instance of CredentialUserManagedIdentity.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CredentialUserManagedIdentity {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CredentialUserManagedIdentity.__pulumiType;
    }

    /**
     * List of tags that can be used for describing the Data Factory Credential.
     *
     * > **Note:** Manually altering a Credential resource will cause annotations to be lost, resulting in a change being detected on the next run.
     */
    public readonly annotations!: pulumi.Output<string[] | undefined>;
    /**
     * The Data Factory ID in which to associate the Credential with. Changing this forces a new resource.
     */
    public readonly dataFactoryId!: pulumi.Output<string>;
    /**
     * The description for the Data Factory Credential.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * The Resouce ID of an existing User Assigned Managed Identity. This can be changed without recreating the resource. Changing this forces a new resource to be created.
     *
     * > **Note:** Attempting to create a Credential resource without first assigning the identity to the parent Data Factory will result in an Azure API error.
     */
    public readonly identityId!: pulumi.Output<string>;
    /**
     * Specifies the name of the Credential. Changing this forces a new resource to be created.
     */
    public readonly name!: pulumi.Output<string>;

    /**
     * Create a CredentialUserManagedIdentity resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CredentialUserManagedIdentityArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CredentialUserManagedIdentityArgs | CredentialUserManagedIdentityState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as CredentialUserManagedIdentityState | undefined;
            resourceInputs["annotations"] = state ? state.annotations : undefined;
            resourceInputs["dataFactoryId"] = state ? state.dataFactoryId : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["identityId"] = state ? state.identityId : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
        } else {
            const args = argsOrState as CredentialUserManagedIdentityArgs | undefined;
            if ((!args || args.dataFactoryId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'dataFactoryId'");
            }
            if ((!args || args.identityId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'identityId'");
            }
            resourceInputs["annotations"] = args ? args.annotations : undefined;
            resourceInputs["dataFactoryId"] = args ? args.dataFactoryId : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["identityId"] = args ? args.identityId : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(CredentialUserManagedIdentity.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering CredentialUserManagedIdentity resources.
 */
export interface CredentialUserManagedIdentityState {
    /**
     * List of tags that can be used for describing the Data Factory Credential.
     *
     * > **Note:** Manually altering a Credential resource will cause annotations to be lost, resulting in a change being detected on the next run.
     */
    annotations?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The Data Factory ID in which to associate the Credential with. Changing this forces a new resource.
     */
    dataFactoryId?: pulumi.Input<string>;
    /**
     * The description for the Data Factory Credential.
     */
    description?: pulumi.Input<string>;
    /**
     * The Resouce ID of an existing User Assigned Managed Identity. This can be changed without recreating the resource. Changing this forces a new resource to be created.
     *
     * > **Note:** Attempting to create a Credential resource without first assigning the identity to the parent Data Factory will result in an Azure API error.
     */
    identityId?: pulumi.Input<string>;
    /**
     * Specifies the name of the Credential. Changing this forces a new resource to be created.
     */
    name?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a CredentialUserManagedIdentity resource.
 */
export interface CredentialUserManagedIdentityArgs {
    /**
     * List of tags that can be used for describing the Data Factory Credential.
     *
     * > **Note:** Manually altering a Credential resource will cause annotations to be lost, resulting in a change being detected on the next run.
     */
    annotations?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The Data Factory ID in which to associate the Credential with. Changing this forces a new resource.
     */
    dataFactoryId: pulumi.Input<string>;
    /**
     * The description for the Data Factory Credential.
     */
    description?: pulumi.Input<string>;
    /**
     * The Resouce ID of an existing User Assigned Managed Identity. This can be changed without recreating the resource. Changing this forces a new resource to be created.
     *
     * > **Note:** Attempting to create a Credential resource without first assigning the identity to the parent Data Factory will result in an Azure API error.
     */
    identityId: pulumi.Input<string>;
    /**
     * Specifies the name of the Credential. Changing this forces a new resource to be created.
     */
    name?: pulumi.Input<string>;
}
