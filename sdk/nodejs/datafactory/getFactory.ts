// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Use this data source to access information about an existing Azure Data Factory (Version 2).
 * 
 * ## Example Usage
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 * 
 * const example = pulumi.all([azurerm_data_factory_example.name, azurerm_data_factory_example.resourceGroupName]).apply(([name, resourceGroupName]) => azure.datafactory.getFactory({
 *     name: name,
 *     resourceGroupName: resourceGroupName,
 * }));
 * 
 * export const dataFactoryId = azurerm_data_factory_example.id;
 * ```
 *
 * > This content is derived from https://github.com/terraform-providers/terraform-provider-azurerm/blob/master/website/docs/d/data_factory.html.markdown.
 */
export function getFactory(args: GetFactoryArgs, opts?: pulumi.InvokeOptions): Promise<GetFactoryResult> & GetFactoryResult {
    if (!opts) {
        opts = {}
    }

    if (!opts.version) {
        opts.version = utilities.getVersion();
    }
    const promise: Promise<GetFactoryResult> = pulumi.runtime.invoke("azure:datafactory/getFactory:getFactory", {
        "name": args.name,
        "resourceGroupName": args.resourceGroupName,
    }, opts);

    return pulumi.utils.liftProperties(promise, opts);
}

/**
 * A collection of arguments for invoking getFactory.
 */
export interface GetFactoryArgs {
    /**
     * Specifies the name of the Data Factory to retrieve information about. 
     */
    readonly name: string;
    /**
     * The name of the resource group where the Data Factory exists.
     */
    readonly resourceGroupName: string;
}

/**
 * A collection of values returned by getFactory.
 */
export interface GetFactoryResult {
    /**
     * A `githubConfiguration` block as defined below.
     */
    readonly githubConfigurations: outputs.datafactory.GetFactoryGithubConfiguration[];
    /**
     * An `identity` block as defined below.
     */
    readonly identities: outputs.datafactory.GetFactoryIdentity[];
    /**
     * The Azure location where the resource exists.
     */
    readonly location: string;
    readonly name: string;
    readonly resourceGroupName: string;
    /**
     * A mapping of tags assigned to the resource.
     * ---
     */
    readonly tags: {[key: string]: string};
    /**
     * A `vstsConfiguration` block as defined below.
     */
    readonly vstsConfigurations: outputs.datafactory.GetFactoryVstsConfiguration[];
    /**
     * id is the provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
}
