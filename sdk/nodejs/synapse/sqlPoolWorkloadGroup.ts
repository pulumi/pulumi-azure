// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Manages a Synapse SQL Pool Workload Group.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = new azure.core.ResourceGroup("example", {
 *     name: "example",
 *     location: "west europe",
 * });
 * const exampleAccount = new azure.storage.Account("example", {
 *     name: "example",
 *     resourceGroupName: example.name,
 *     location: example.location,
 *     accountKind: "BlobStorage",
 *     accountTier: "Standard",
 *     accountReplicationType: "LRS",
 * });
 * const exampleDataLakeGen2Filesystem = new azure.storage.DataLakeGen2Filesystem("example", {
 *     name: "example",
 *     storageAccountId: exampleAccount.id,
 * });
 * const exampleWorkspace = new azure.synapse.Workspace("example", {
 *     name: "example",
 *     resourceGroupName: example.name,
 *     location: example.location,
 *     storageDataLakeGen2FilesystemId: exampleDataLakeGen2Filesystem.id,
 *     sqlAdministratorLogin: "sqladminuser",
 *     sqlAdministratorLoginPassword: "H@Sh1CoR3!",
 *     identity: {
 *         type: "SystemAssigned",
 *     },
 * });
 * const exampleSqlPool = new azure.synapse.SqlPool("example", {
 *     name: "example",
 *     synapseWorkspaceId: exampleWorkspace.id,
 *     skuName: "DW100c",
 *     createMode: "Default",
 * });
 * const exampleSqlPoolWorkloadGroup = new azure.synapse.SqlPoolWorkloadGroup("example", {
 *     name: "example",
 *     sqlPoolId: exampleSqlPool.id,
 *     importance: "normal",
 *     maxResourcePercent: 100,
 *     minResourcePercent: 0,
 *     maxResourcePercentPerRequest: 3,
 *     minResourcePercentPerRequest: 3,
 *     queryExecutionTimeoutInSeconds: 0,
 * });
 * ```
 *
 * ## Import
 *
 * Synapse SQL Pool Workload Groups can be imported using the `resource id`, e.g.
 *
 * ```sh
 * $ pulumi import azure:synapse/sqlPoolWorkloadGroup:SqlPoolWorkloadGroup example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resGroup1/providers/Microsoft.Synapse/workspaces/workspace1/sqlPools/sqlPool1/workloadGroups/workloadGroup1
 * ```
 */
export class SqlPoolWorkloadGroup extends pulumi.CustomResource {
    /**
     * Get an existing SqlPoolWorkloadGroup resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SqlPoolWorkloadGroupState, opts?: pulumi.CustomResourceOptions): SqlPoolWorkloadGroup {
        return new SqlPoolWorkloadGroup(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure:synapse/sqlPoolWorkloadGroup:SqlPoolWorkloadGroup';

    /**
     * Returns true if the given object is an instance of SqlPoolWorkloadGroup.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SqlPoolWorkloadGroup {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SqlPoolWorkloadGroup.__pulumiType;
    }

    /**
     * The workload group importance level. Defaults to `normal`.
     */
    declare public readonly importance: pulumi.Output<string | undefined>;
    /**
     * The workload group cap percentage resource.
     */
    declare public readonly maxResourcePercent: pulumi.Output<number>;
    /**
     * The workload group request maximum grant percentage. Defaults to `3`.
     */
    declare public readonly maxResourcePercentPerRequest: pulumi.Output<number | undefined>;
    /**
     * The workload group minimum percentage resource.
     */
    declare public readonly minResourcePercent: pulumi.Output<number>;
    /**
     * The workload group request minimum grant percentage.
     */
    declare public readonly minResourcePercentPerRequest: pulumi.Output<number | undefined>;
    /**
     * The name which should be used for this Synapse SQL Pool Workload Group. Changing this forces a new Synapse SQL Pool Workload Group to be created.
     */
    declare public readonly name: pulumi.Output<string>;
    /**
     * The workload group query execution timeout.
     */
    declare public readonly queryExecutionTimeoutInSeconds: pulumi.Output<number | undefined>;
    /**
     * The ID of the Synapse SQL Pool. Changing this forces a new Synapse SQL Pool Workload Group to be created.
     */
    declare public readonly sqlPoolId: pulumi.Output<string>;

    /**
     * Create a SqlPoolWorkloadGroup resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SqlPoolWorkloadGroupArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SqlPoolWorkloadGroupArgs | SqlPoolWorkloadGroupState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SqlPoolWorkloadGroupState | undefined;
            resourceInputs["importance"] = state?.importance;
            resourceInputs["maxResourcePercent"] = state?.maxResourcePercent;
            resourceInputs["maxResourcePercentPerRequest"] = state?.maxResourcePercentPerRequest;
            resourceInputs["minResourcePercent"] = state?.minResourcePercent;
            resourceInputs["minResourcePercentPerRequest"] = state?.minResourcePercentPerRequest;
            resourceInputs["name"] = state?.name;
            resourceInputs["queryExecutionTimeoutInSeconds"] = state?.queryExecutionTimeoutInSeconds;
            resourceInputs["sqlPoolId"] = state?.sqlPoolId;
        } else {
            const args = argsOrState as SqlPoolWorkloadGroupArgs | undefined;
            if (args?.maxResourcePercent === undefined && !opts.urn) {
                throw new Error("Missing required property 'maxResourcePercent'");
            }
            if (args?.minResourcePercent === undefined && !opts.urn) {
                throw new Error("Missing required property 'minResourcePercent'");
            }
            if (args?.sqlPoolId === undefined && !opts.urn) {
                throw new Error("Missing required property 'sqlPoolId'");
            }
            resourceInputs["importance"] = args?.importance;
            resourceInputs["maxResourcePercent"] = args?.maxResourcePercent;
            resourceInputs["maxResourcePercentPerRequest"] = args?.maxResourcePercentPerRequest;
            resourceInputs["minResourcePercent"] = args?.minResourcePercent;
            resourceInputs["minResourcePercentPerRequest"] = args?.minResourcePercentPerRequest;
            resourceInputs["name"] = args?.name;
            resourceInputs["queryExecutionTimeoutInSeconds"] = args?.queryExecutionTimeoutInSeconds;
            resourceInputs["sqlPoolId"] = args?.sqlPoolId;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SqlPoolWorkloadGroup.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering SqlPoolWorkloadGroup resources.
 */
export interface SqlPoolWorkloadGroupState {
    /**
     * The workload group importance level. Defaults to `normal`.
     */
    importance?: pulumi.Input<string>;
    /**
     * The workload group cap percentage resource.
     */
    maxResourcePercent?: pulumi.Input<number>;
    /**
     * The workload group request maximum grant percentage. Defaults to `3`.
     */
    maxResourcePercentPerRequest?: pulumi.Input<number>;
    /**
     * The workload group minimum percentage resource.
     */
    minResourcePercent?: pulumi.Input<number>;
    /**
     * The workload group request minimum grant percentage.
     */
    minResourcePercentPerRequest?: pulumi.Input<number>;
    /**
     * The name which should be used for this Synapse SQL Pool Workload Group. Changing this forces a new Synapse SQL Pool Workload Group to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * The workload group query execution timeout.
     */
    queryExecutionTimeoutInSeconds?: pulumi.Input<number>;
    /**
     * The ID of the Synapse SQL Pool. Changing this forces a new Synapse SQL Pool Workload Group to be created.
     */
    sqlPoolId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a SqlPoolWorkloadGroup resource.
 */
export interface SqlPoolWorkloadGroupArgs {
    /**
     * The workload group importance level. Defaults to `normal`.
     */
    importance?: pulumi.Input<string>;
    /**
     * The workload group cap percentage resource.
     */
    maxResourcePercent: pulumi.Input<number>;
    /**
     * The workload group request maximum grant percentage. Defaults to `3`.
     */
    maxResourcePercentPerRequest?: pulumi.Input<number>;
    /**
     * The workload group minimum percentage resource.
     */
    minResourcePercent: pulumi.Input<number>;
    /**
     * The workload group request minimum grant percentage.
     */
    minResourcePercentPerRequest?: pulumi.Input<number>;
    /**
     * The name which should be used for this Synapse SQL Pool Workload Group. Changing this forces a new Synapse SQL Pool Workload Group to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * The workload group query execution timeout.
     */
    queryExecutionTimeoutInSeconds?: pulumi.Input<number>;
    /**
     * The ID of the Synapse SQL Pool. Changing this forces a new Synapse SQL Pool Workload Group to be created.
     */
    sqlPoolId: pulumi.Input<string>;
}
