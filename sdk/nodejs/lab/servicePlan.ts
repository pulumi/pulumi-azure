// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Manages a Lab Service Plan.
 *
 * > **Note:** Before using this resource, it's required to submit the request of registering the provider with Azure CLI `az provider register --namespace Microsoft.LabServices`.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const exampleResourceGroup = new azure.core.ResourceGroup("exampleResourceGroup", {location: "West Europe"});
 * const exampleServicePlan = new azure.lab.ServicePlan("exampleServicePlan", {
 *     resourceGroupName: exampleResourceGroup.name,
 *     location: exampleResourceGroup.location,
 *     allowedRegions: [exampleResourceGroup.location],
 * });
 * ```
 *
 * ## Import
 *
 * Lab Service Plans can be imported using the `resource id`, e.g.
 *
 * ```sh
 *  $ pulumi import azure:lab/servicePlan:ServicePlan example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resourceGroup1/providers/Microsoft.LabServices/labPlans/labPlan1
 * ```
 */
export class ServicePlan extends pulumi.CustomResource {
    /**
     * Get an existing ServicePlan resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ServicePlanState, opts?: pulumi.CustomResourceOptions): ServicePlan {
        return new ServicePlan(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure:lab/servicePlan:ServicePlan';

    /**
     * Returns true if the given object is an instance of ServicePlan.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ServicePlan {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ServicePlan.__pulumiType;
    }

    /**
     * The allowed regions for the lab creator to use when creating labs using this Lab Service Plan. The allowed region's count must be between `1` and `28`.
     */
    public readonly allowedRegions!: pulumi.Output<string[]>;
    /**
     * A `defaultAutoShutdown` block as defined below.
     */
    public readonly defaultAutoShutdown!: pulumi.Output<outputs.lab.ServicePlanDefaultAutoShutdown | undefined>;
    /**
     * A `defaultConnection` block as defined below.
     */
    public readonly defaultConnection!: pulumi.Output<outputs.lab.ServicePlanDefaultConnection | undefined>;
    /**
     * The resource ID of the Subnet for the Lab Service Plan network profile.
     */
    public readonly defaultNetworkSubnetId!: pulumi.Output<string | undefined>;
    /**
     * The Azure Region where the Lab Service Plan should exist. Changing this forces a new resource to be created.
     */
    public readonly location!: pulumi.Output<string>;
    /**
     * The name of the Lab Service Plan. Changing this forces a new resource to be created.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The name of the Resource Group where the Lab Service Plan should exist. Changing this forces a new resource to be created.
     */
    public readonly resourceGroupName!: pulumi.Output<string>;
    /**
     * The resource ID of the Shared Image Gallery attached to this Lab Service Plan. When saving a lab template virtual machine image it will be persisted in this gallery. The shared images from the gallery can be made available to use when creating new labs.
     */
    public readonly sharedGalleryId!: pulumi.Output<string | undefined>;
    /**
     * A `support` block as defined below.
     */
    public readonly support!: pulumi.Output<outputs.lab.ServicePlanSupport | undefined>;
    /**
     * A mapping of tags which should be assigned to the Lab Service Plan.
     */
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;

    /**
     * Create a ServicePlan resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ServicePlanArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ServicePlanArgs | ServicePlanState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ServicePlanState | undefined;
            resourceInputs["allowedRegions"] = state ? state.allowedRegions : undefined;
            resourceInputs["defaultAutoShutdown"] = state ? state.defaultAutoShutdown : undefined;
            resourceInputs["defaultConnection"] = state ? state.defaultConnection : undefined;
            resourceInputs["defaultNetworkSubnetId"] = state ? state.defaultNetworkSubnetId : undefined;
            resourceInputs["location"] = state ? state.location : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["resourceGroupName"] = state ? state.resourceGroupName : undefined;
            resourceInputs["sharedGalleryId"] = state ? state.sharedGalleryId : undefined;
            resourceInputs["support"] = state ? state.support : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
        } else {
            const args = argsOrState as ServicePlanArgs | undefined;
            if ((!args || args.allowedRegions === undefined) && !opts.urn) {
                throw new Error("Missing required property 'allowedRegions'");
            }
            if ((!args || args.resourceGroupName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            resourceInputs["allowedRegions"] = args ? args.allowedRegions : undefined;
            resourceInputs["defaultAutoShutdown"] = args ? args.defaultAutoShutdown : undefined;
            resourceInputs["defaultConnection"] = args ? args.defaultConnection : undefined;
            resourceInputs["defaultNetworkSubnetId"] = args ? args.defaultNetworkSubnetId : undefined;
            resourceInputs["location"] = args ? args.location : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            resourceInputs["sharedGalleryId"] = args ? args.sharedGalleryId : undefined;
            resourceInputs["support"] = args ? args.support : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ServicePlan.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ServicePlan resources.
 */
export interface ServicePlanState {
    /**
     * The allowed regions for the lab creator to use when creating labs using this Lab Service Plan. The allowed region's count must be between `1` and `28`.
     */
    allowedRegions?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A `defaultAutoShutdown` block as defined below.
     */
    defaultAutoShutdown?: pulumi.Input<inputs.lab.ServicePlanDefaultAutoShutdown>;
    /**
     * A `defaultConnection` block as defined below.
     */
    defaultConnection?: pulumi.Input<inputs.lab.ServicePlanDefaultConnection>;
    /**
     * The resource ID of the Subnet for the Lab Service Plan network profile.
     */
    defaultNetworkSubnetId?: pulumi.Input<string>;
    /**
     * The Azure Region where the Lab Service Plan should exist. Changing this forces a new resource to be created.
     */
    location?: pulumi.Input<string>;
    /**
     * The name of the Lab Service Plan. Changing this forces a new resource to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * The name of the Resource Group where the Lab Service Plan should exist. Changing this forces a new resource to be created.
     */
    resourceGroupName?: pulumi.Input<string>;
    /**
     * The resource ID of the Shared Image Gallery attached to this Lab Service Plan. When saving a lab template virtual machine image it will be persisted in this gallery. The shared images from the gallery can be made available to use when creating new labs.
     */
    sharedGalleryId?: pulumi.Input<string>;
    /**
     * A `support` block as defined below.
     */
    support?: pulumi.Input<inputs.lab.ServicePlanSupport>;
    /**
     * A mapping of tags which should be assigned to the Lab Service Plan.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

/**
 * The set of arguments for constructing a ServicePlan resource.
 */
export interface ServicePlanArgs {
    /**
     * The allowed regions for the lab creator to use when creating labs using this Lab Service Plan. The allowed region's count must be between `1` and `28`.
     */
    allowedRegions: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A `defaultAutoShutdown` block as defined below.
     */
    defaultAutoShutdown?: pulumi.Input<inputs.lab.ServicePlanDefaultAutoShutdown>;
    /**
     * A `defaultConnection` block as defined below.
     */
    defaultConnection?: pulumi.Input<inputs.lab.ServicePlanDefaultConnection>;
    /**
     * The resource ID of the Subnet for the Lab Service Plan network profile.
     */
    defaultNetworkSubnetId?: pulumi.Input<string>;
    /**
     * The Azure Region where the Lab Service Plan should exist. Changing this forces a new resource to be created.
     */
    location?: pulumi.Input<string>;
    /**
     * The name of the Lab Service Plan. Changing this forces a new resource to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * The name of the Resource Group where the Lab Service Plan should exist. Changing this forces a new resource to be created.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * The resource ID of the Shared Image Gallery attached to this Lab Service Plan. When saving a lab template virtual machine image it will be persisted in this gallery. The shared images from the gallery can be made available to use when creating new labs.
     */
    sharedGalleryId?: pulumi.Input<string>;
    /**
     * A `support` block as defined below.
     */
    support?: pulumi.Input<inputs.lab.ServicePlanSupport>;
    /**
     * A mapping of tags which should be assigned to the Lab Service Plan.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
