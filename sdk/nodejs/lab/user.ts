// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Manages a Lab Service User.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const exampleResourceGroup = new azure.core.ResourceGroup("exampleResourceGroup", {location: "West Europe"});
 * const exampleLab = new azure.lab.Lab("exampleLab", {
 *     resourceGroupName: exampleResourceGroup.name,
 *     location: exampleResourceGroup.location,
 *     title: "Test Title",
 *     security: {
 *         openAccessEnabled: false,
 *     },
 *     virtualMachine: {
 *         adminUser: {
 *             username: "testadmin",
 *             password: "Password1234!",
 *         },
 *         imageReference: {
 *             publisher: "Canonical",
 *             offer: "0001-com-ubuntu-server-jammy",
 *             sku: "22_04-lts",
 *             version: "latest",
 *         },
 *         sku: {
 *             name: "Classic_Fsv2_2_4GB_128_S_SSD",
 *             capacity: 1,
 *         },
 *     },
 * });
 * const exampleUser = new azure.lab.User("exampleUser", {
 *     labId: exampleLab.id,
 *     email: "terraform-acctest@example.com",
 * });
 * ```
 *
 * ## Import
 *
 * Lab Service Users can be imported using the `resource id`, e.g.
 *
 * ```sh
 *  $ pulumi import azure:lab/user:User example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resourceGroup1/providers/Microsoft.LabServices/labs/lab1/users/user1
 * ```
 */
export class User extends pulumi.CustomResource {
    /**
     * Get an existing User resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: UserState, opts?: pulumi.CustomResourceOptions): User {
        return new User(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure:lab/user:User';

    /**
     * Returns true if the given object is an instance of User.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is User {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === User.__pulumiType;
    }

    /**
     * The amount of usage quota time the Lab Service User gets in addition to the lab usage quota. Defaults to `PT0S`.
     */
    public readonly additionalUsageQuota!: pulumi.Output<string | undefined>;
    /**
     * The email address of the Lab Service User. Changing this forces a new resource to be created.
     */
    public readonly email!: pulumi.Output<string>;
    /**
     * The resource ID of the Lab Service Lab. Changing this forces a new resource to be created.
     */
    public readonly labId!: pulumi.Output<string>;
    /**
     * The name which should be used for this Lab Service User. Changing this forces a new resource to be created.
     */
    public readonly name!: pulumi.Output<string>;

    /**
     * Create a User resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: UserArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: UserArgs | UserState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as UserState | undefined;
            resourceInputs["additionalUsageQuota"] = state ? state.additionalUsageQuota : undefined;
            resourceInputs["email"] = state ? state.email : undefined;
            resourceInputs["labId"] = state ? state.labId : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
        } else {
            const args = argsOrState as UserArgs | undefined;
            if ((!args || args.email === undefined) && !opts.urn) {
                throw new Error("Missing required property 'email'");
            }
            if ((!args || args.labId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'labId'");
            }
            resourceInputs["additionalUsageQuota"] = args ? args.additionalUsageQuota : undefined;
            resourceInputs["email"] = args ? args.email : undefined;
            resourceInputs["labId"] = args ? args.labId : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(User.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering User resources.
 */
export interface UserState {
    /**
     * The amount of usage quota time the Lab Service User gets in addition to the lab usage quota. Defaults to `PT0S`.
     */
    additionalUsageQuota?: pulumi.Input<string>;
    /**
     * The email address of the Lab Service User. Changing this forces a new resource to be created.
     */
    email?: pulumi.Input<string>;
    /**
     * The resource ID of the Lab Service Lab. Changing this forces a new resource to be created.
     */
    labId?: pulumi.Input<string>;
    /**
     * The name which should be used for this Lab Service User. Changing this forces a new resource to be created.
     */
    name?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a User resource.
 */
export interface UserArgs {
    /**
     * The amount of usage quota time the Lab Service User gets in addition to the lab usage quota. Defaults to `PT0S`.
     */
    additionalUsageQuota?: pulumi.Input<string>;
    /**
     * The email address of the Lab Service User. Changing this forces a new resource to be created.
     */
    email: pulumi.Input<string>;
    /**
     * The resource ID of the Lab Service Lab. Changing this forces a new resource to be created.
     */
    labId: pulumi.Input<string>;
    /**
     * The name which should be used for this Lab Service User. Changing this forces a new resource to be created.
     */
    name?: pulumi.Input<string>;
}
