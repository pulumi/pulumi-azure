// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { LabArgs, LabState } from "./lab";
export type Lab = import("./lab").Lab;
export const Lab: typeof import("./lab").Lab = null as any;
utilities.lazyLoad(exports, ["Lab"], () => require("./lab"));

export { ScheduleArgs, ScheduleState } from "./schedule";
export type Schedule = import("./schedule").Schedule;
export const Schedule: typeof import("./schedule").Schedule = null as any;
utilities.lazyLoad(exports, ["Schedule"], () => require("./schedule"));

export { ServicePlanArgs, ServicePlanState } from "./servicePlan";
export type ServicePlan = import("./servicePlan").ServicePlan;
export const ServicePlan: typeof import("./servicePlan").ServicePlan = null as any;
utilities.lazyLoad(exports, ["ServicePlan"], () => require("./servicePlan"));

export { UserArgs, UserState } from "./user";
export type User = import("./user").User;
export const User: typeof import("./user").User = null as any;
utilities.lazyLoad(exports, ["User"], () => require("./user"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "azure:lab/lab:Lab":
                return new Lab(name, <any>undefined, { urn })
            case "azure:lab/schedule:Schedule":
                return new Schedule(name, <any>undefined, { urn })
            case "azure:lab/servicePlan:ServicePlan":
                return new ServicePlan(name, <any>undefined, { urn })
            case "azure:lab/user:User":
                return new User(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure", "lab/lab", _module)
pulumi.runtime.registerResourceModule("azure", "lab/schedule", _module)
pulumi.runtime.registerResourceModule("azure", "lab/servicePlan", _module)
pulumi.runtime.registerResourceModule("azure", "lab/user", _module)
