// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Manages a Container App Custom Domain.
 *
 * ## Import
 *
 * A Container App Custom Domain can be imported using the `resource id`, e.g.
 *
 * ```sh
 * $ pulumi import azure:containerapp/customDomain:CustomDomain example "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resGroup1/providers/Microsoft.App/containerApps/myContainerApp/customDomainName/mycustomdomain.example.com"
 * ```
 */
export class CustomDomain extends pulumi.CustomResource {
    /**
     * Get an existing CustomDomain resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CustomDomainState, opts?: pulumi.CustomResourceOptions): CustomDomain {
        return new CustomDomain(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure:containerapp/customDomain:CustomDomain';

    /**
     * Returns true if the given object is an instance of CustomDomain.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CustomDomain {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CustomDomain.__pulumiType;
    }

    /**
     * The Binding type. Possible values include `Disabled` and `SniEnabled`.
     */
    public readonly certificateBindingType!: pulumi.Output<string | undefined>;
    /**
     * The ID of the Container App Environment Certificate to use. Changing this forces a new resource to be created.
     *
     * > **NOTE:** Omit this value if you wish to use an Azure Managed certificate. You must create the relevant DNS verification steps before this process will be successful.
     */
    public readonly containerAppEnvironmentCertificateId!: pulumi.Output<string | undefined>;
    /**
     * The ID of the Container App Environment Managed Certificate to use.
     */
    public /*out*/ readonly containerAppEnvironmentManagedCertificateId!: pulumi.Output<string>;
    /**
     * The ID of the Container App to which this Custom Domain should be bound. Changing this forces a new resource to be created.
     */
    public readonly containerAppId!: pulumi.Output<string>;
    /**
     * The fully qualified name of the Custom Domain. Must be the CN or a named SAN in the certificate specified by the `containerAppEnvironmentCertificateId`. Changing this forces a new resource to be created.
     *
     * > **Note:** The Custom Domain verification TXT record requires a prefix of `asuid.`, however, this must be trimmed from the `name` property here. See the [official docs](https://learn.microsoft.com/en-us/azure/container-apps/custom-domains-certificates) for more information.
     */
    public readonly name!: pulumi.Output<string>;

    /**
     * Create a CustomDomain resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CustomDomainArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CustomDomainArgs | CustomDomainState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as CustomDomainState | undefined;
            resourceInputs["certificateBindingType"] = state ? state.certificateBindingType : undefined;
            resourceInputs["containerAppEnvironmentCertificateId"] = state ? state.containerAppEnvironmentCertificateId : undefined;
            resourceInputs["containerAppEnvironmentManagedCertificateId"] = state ? state.containerAppEnvironmentManagedCertificateId : undefined;
            resourceInputs["containerAppId"] = state ? state.containerAppId : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
        } else {
            const args = argsOrState as CustomDomainArgs | undefined;
            if ((!args || args.containerAppId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'containerAppId'");
            }
            resourceInputs["certificateBindingType"] = args ? args.certificateBindingType : undefined;
            resourceInputs["containerAppEnvironmentCertificateId"] = args ? args.containerAppEnvironmentCertificateId : undefined;
            resourceInputs["containerAppId"] = args ? args.containerAppId : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["containerAppEnvironmentManagedCertificateId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(CustomDomain.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering CustomDomain resources.
 */
export interface CustomDomainState {
    /**
     * The Binding type. Possible values include `Disabled` and `SniEnabled`.
     */
    certificateBindingType?: pulumi.Input<string>;
    /**
     * The ID of the Container App Environment Certificate to use. Changing this forces a new resource to be created.
     *
     * > **NOTE:** Omit this value if you wish to use an Azure Managed certificate. You must create the relevant DNS verification steps before this process will be successful.
     */
    containerAppEnvironmentCertificateId?: pulumi.Input<string>;
    /**
     * The ID of the Container App Environment Managed Certificate to use.
     */
    containerAppEnvironmentManagedCertificateId?: pulumi.Input<string>;
    /**
     * The ID of the Container App to which this Custom Domain should be bound. Changing this forces a new resource to be created.
     */
    containerAppId?: pulumi.Input<string>;
    /**
     * The fully qualified name of the Custom Domain. Must be the CN or a named SAN in the certificate specified by the `containerAppEnvironmentCertificateId`. Changing this forces a new resource to be created.
     *
     * > **Note:** The Custom Domain verification TXT record requires a prefix of `asuid.`, however, this must be trimmed from the `name` property here. See the [official docs](https://learn.microsoft.com/en-us/azure/container-apps/custom-domains-certificates) for more information.
     */
    name?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a CustomDomain resource.
 */
export interface CustomDomainArgs {
    /**
     * The Binding type. Possible values include `Disabled` and `SniEnabled`.
     */
    certificateBindingType?: pulumi.Input<string>;
    /**
     * The ID of the Container App Environment Certificate to use. Changing this forces a new resource to be created.
     *
     * > **NOTE:** Omit this value if you wish to use an Azure Managed certificate. You must create the relevant DNS verification steps before this process will be successful.
     */
    containerAppEnvironmentCertificateId?: pulumi.Input<string>;
    /**
     * The ID of the Container App to which this Custom Domain should be bound. Changing this forces a new resource to be created.
     */
    containerAppId: pulumi.Input<string>;
    /**
     * The fully qualified name of the Custom Domain. Must be the CN or a named SAN in the certificate specified by the `containerAppEnvironmentCertificateId`. Changing this forces a new resource to be created.
     *
     * > **Note:** The Custom Domain verification TXT record requires a prefix of `asuid.`, however, this must be trimmed from the `name` property here. See the [official docs](https://learn.microsoft.com/en-us/azure/container-apps/custom-domains-certificates) for more information.
     */
    name?: pulumi.Input<string>;
}
