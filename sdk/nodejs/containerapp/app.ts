// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Manages a Container App.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const exampleResourceGroup = new azure.core.ResourceGroup("exampleResourceGroup", {location: "West Europe"});
 * const exampleAnalyticsWorkspace = new azure.operationalinsights.AnalyticsWorkspace("exampleAnalyticsWorkspace", {
 *     location: exampleResourceGroup.location,
 *     resourceGroupName: exampleResourceGroup.name,
 *     sku: "PerGB2018",
 *     retentionInDays: 30,
 * });
 * const exampleEnvironment = new azure.containerapp.Environment("exampleEnvironment", {
 *     location: exampleResourceGroup.location,
 *     resourceGroupName: exampleResourceGroup.name,
 *     logAnalyticsWorkspaceId: exampleAnalyticsWorkspace.id,
 * });
 * const exampleApp = new azure.containerapp.App("exampleApp", {
 *     containerAppEnvironmentId: exampleEnvironment.id,
 *     resourceGroupName: exampleResourceGroup.name,
 *     revisionMode: "Single",
 *     template: {
 *         containers: [{
 *             name: "examplecontainerapp",
 *             image: "mcr.microsoft.com/azuredocs/containerapps-helloworld:latest",
 *             cpu: 0.25,
 *             memory: "0.5Gi",
 *         }],
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * A Container App can be imported using the `resource id`, e.g.
 *
 * ```sh
 *  $ pulumi import azure:containerapp/app:App example "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resGroup1/providers/Microsoft.App/containerApps/myContainerApp"
 * ```
 */
export class App extends pulumi.CustomResource {
    /**
     * Get an existing App resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AppState, opts?: pulumi.CustomResourceOptions): App {
        return new App(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure:containerapp/app:App';

    /**
     * Returns true if the given object is an instance of App.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is App {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === App.__pulumiType;
    }

    /**
     * The ID of the Container App Environment within which this Container App should exist. Changing this forces a new resource to be created.
     */
    public readonly containerAppEnvironmentId!: pulumi.Output<string>;
    /**
     * The ID of the Custom Domain Verification for this Container App.
     */
    public /*out*/ readonly customDomainVerificationId!: pulumi.Output<string>;
    /**
     * A `dapr` block as detailed below.
     */
    public readonly dapr!: pulumi.Output<outputs.containerapp.AppDapr | undefined>;
    /**
     * An `identity` block as detailed below.
     */
    public readonly identity!: pulumi.Output<outputs.containerapp.AppIdentity | undefined>;
    /**
     * An `ingress` block as detailed below.
     */
    public readonly ingress!: pulumi.Output<outputs.containerapp.AppIngress | undefined>;
    /**
     * The FQDN of the Latest Revision of the Container App.
     */
    public /*out*/ readonly latestRevisionFqdn!: pulumi.Output<string>;
    /**
     * The name of the latest Container Revision.
     */
    public /*out*/ readonly latestRevisionName!: pulumi.Output<string>;
    /**
     * The location this Container App is deployed in. This is the same as the Environment in which it is deployed.
     */
    public /*out*/ readonly location!: pulumi.Output<string>;
    /**
     * The name for this Container App. Changing this forces a new resource to be created.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * A list of the Public IP Addresses which the Container App uses for outbound network access.
     */
    public /*out*/ readonly outboundIpAddresses!: pulumi.Output<string[]>;
    /**
     * A `registry` block as detailed below.
     */
    public readonly registries!: pulumi.Output<outputs.containerapp.AppRegistry[] | undefined>;
    /**
     * The name of the resource group in which the Container App Environment is to be created. Changing this forces a new resource to be created.
     */
    public readonly resourceGroupName!: pulumi.Output<string>;
    /**
     * The revisions operational mode for the Container App. Possible values include `Single` and `Multiple`. In `Single` mode, a single revision is in operation at any given time. In `Multiple` mode, more than one revision can be active at a time and can be configured with load distribution via the `trafficWeight` block in the `ingress` configuration.
     */
    public readonly revisionMode!: pulumi.Output<string>;
    /**
     * One or more `secret` block as detailed below.
     */
    public readonly secrets!: pulumi.Output<outputs.containerapp.AppSecret[] | undefined>;
    /**
     * A mapping of tags to assign to the Container App.
     */
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * A `template` block as detailed below.
     */
    public readonly template!: pulumi.Output<outputs.containerapp.AppTemplate>;
    /**
     * The name of the Workload Profile in the Container App Environment to place this Container App.
     *
     * > **Note:** Omit this value to use the default `Consumption` Workload Profile.
     */
    public readonly workloadProfileName!: pulumi.Output<string | undefined>;

    /**
     * Create a App resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AppArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AppArgs | AppState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AppState | undefined;
            resourceInputs["containerAppEnvironmentId"] = state ? state.containerAppEnvironmentId : undefined;
            resourceInputs["customDomainVerificationId"] = state ? state.customDomainVerificationId : undefined;
            resourceInputs["dapr"] = state ? state.dapr : undefined;
            resourceInputs["identity"] = state ? state.identity : undefined;
            resourceInputs["ingress"] = state ? state.ingress : undefined;
            resourceInputs["latestRevisionFqdn"] = state ? state.latestRevisionFqdn : undefined;
            resourceInputs["latestRevisionName"] = state ? state.latestRevisionName : undefined;
            resourceInputs["location"] = state ? state.location : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["outboundIpAddresses"] = state ? state.outboundIpAddresses : undefined;
            resourceInputs["registries"] = state ? state.registries : undefined;
            resourceInputs["resourceGroupName"] = state ? state.resourceGroupName : undefined;
            resourceInputs["revisionMode"] = state ? state.revisionMode : undefined;
            resourceInputs["secrets"] = state ? state.secrets : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["template"] = state ? state.template : undefined;
            resourceInputs["workloadProfileName"] = state ? state.workloadProfileName : undefined;
        } else {
            const args = argsOrState as AppArgs | undefined;
            if ((!args || args.containerAppEnvironmentId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'containerAppEnvironmentId'");
            }
            if ((!args || args.resourceGroupName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            if ((!args || args.revisionMode === undefined) && !opts.urn) {
                throw new Error("Missing required property 'revisionMode'");
            }
            if ((!args || args.template === undefined) && !opts.urn) {
                throw new Error("Missing required property 'template'");
            }
            resourceInputs["containerAppEnvironmentId"] = args ? args.containerAppEnvironmentId : undefined;
            resourceInputs["dapr"] = args ? args.dapr : undefined;
            resourceInputs["identity"] = args ? args.identity : undefined;
            resourceInputs["ingress"] = args ? args.ingress : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["registries"] = args ? args.registries : undefined;
            resourceInputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            resourceInputs["revisionMode"] = args ? args.revisionMode : undefined;
            resourceInputs["secrets"] = args?.secrets ? pulumi.secret(args.secrets) : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["template"] = args ? args.template : undefined;
            resourceInputs["workloadProfileName"] = args ? args.workloadProfileName : undefined;
            resourceInputs["customDomainVerificationId"] = undefined /*out*/;
            resourceInputs["latestRevisionFqdn"] = undefined /*out*/;
            resourceInputs["latestRevisionName"] = undefined /*out*/;
            resourceInputs["location"] = undefined /*out*/;
            resourceInputs["outboundIpAddresses"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["customDomainVerificationId", "secrets"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(App.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering App resources.
 */
export interface AppState {
    /**
     * The ID of the Container App Environment within which this Container App should exist. Changing this forces a new resource to be created.
     */
    containerAppEnvironmentId?: pulumi.Input<string>;
    /**
     * The ID of the Custom Domain Verification for this Container App.
     */
    customDomainVerificationId?: pulumi.Input<string>;
    /**
     * A `dapr` block as detailed below.
     */
    dapr?: pulumi.Input<inputs.containerapp.AppDapr>;
    /**
     * An `identity` block as detailed below.
     */
    identity?: pulumi.Input<inputs.containerapp.AppIdentity>;
    /**
     * An `ingress` block as detailed below.
     */
    ingress?: pulumi.Input<inputs.containerapp.AppIngress>;
    /**
     * The FQDN of the Latest Revision of the Container App.
     */
    latestRevisionFqdn?: pulumi.Input<string>;
    /**
     * The name of the latest Container Revision.
     */
    latestRevisionName?: pulumi.Input<string>;
    /**
     * The location this Container App is deployed in. This is the same as the Environment in which it is deployed.
     */
    location?: pulumi.Input<string>;
    /**
     * The name for this Container App. Changing this forces a new resource to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * A list of the Public IP Addresses which the Container App uses for outbound network access.
     */
    outboundIpAddresses?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A `registry` block as detailed below.
     */
    registries?: pulumi.Input<pulumi.Input<inputs.containerapp.AppRegistry>[]>;
    /**
     * The name of the resource group in which the Container App Environment is to be created. Changing this forces a new resource to be created.
     */
    resourceGroupName?: pulumi.Input<string>;
    /**
     * The revisions operational mode for the Container App. Possible values include `Single` and `Multiple`. In `Single` mode, a single revision is in operation at any given time. In `Multiple` mode, more than one revision can be active at a time and can be configured with load distribution via the `trafficWeight` block in the `ingress` configuration.
     */
    revisionMode?: pulumi.Input<string>;
    /**
     * One or more `secret` block as detailed below.
     */
    secrets?: pulumi.Input<pulumi.Input<inputs.containerapp.AppSecret>[]>;
    /**
     * A mapping of tags to assign to the Container App.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * A `template` block as detailed below.
     */
    template?: pulumi.Input<inputs.containerapp.AppTemplate>;
    /**
     * The name of the Workload Profile in the Container App Environment to place this Container App.
     *
     * > **Note:** Omit this value to use the default `Consumption` Workload Profile.
     */
    workloadProfileName?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a App resource.
 */
export interface AppArgs {
    /**
     * The ID of the Container App Environment within which this Container App should exist. Changing this forces a new resource to be created.
     */
    containerAppEnvironmentId: pulumi.Input<string>;
    /**
     * A `dapr` block as detailed below.
     */
    dapr?: pulumi.Input<inputs.containerapp.AppDapr>;
    /**
     * An `identity` block as detailed below.
     */
    identity?: pulumi.Input<inputs.containerapp.AppIdentity>;
    /**
     * An `ingress` block as detailed below.
     */
    ingress?: pulumi.Input<inputs.containerapp.AppIngress>;
    /**
     * The name for this Container App. Changing this forces a new resource to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * A `registry` block as detailed below.
     */
    registries?: pulumi.Input<pulumi.Input<inputs.containerapp.AppRegistry>[]>;
    /**
     * The name of the resource group in which the Container App Environment is to be created. Changing this forces a new resource to be created.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * The revisions operational mode for the Container App. Possible values include `Single` and `Multiple`. In `Single` mode, a single revision is in operation at any given time. In `Multiple` mode, more than one revision can be active at a time and can be configured with load distribution via the `trafficWeight` block in the `ingress` configuration.
     */
    revisionMode: pulumi.Input<string>;
    /**
     * One or more `secret` block as detailed below.
     */
    secrets?: pulumi.Input<pulumi.Input<inputs.containerapp.AppSecret>[]>;
    /**
     * A mapping of tags to assign to the Container App.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * A `template` block as detailed below.
     */
    template: pulumi.Input<inputs.containerapp.AppTemplate>;
    /**
     * The name of the Workload Profile in the Container App Environment to place this Container App.
     *
     * > **Note:** Omit this value to use the default `Consumption` Workload Profile.
     */
    workloadProfileName?: pulumi.Input<string>;
}
