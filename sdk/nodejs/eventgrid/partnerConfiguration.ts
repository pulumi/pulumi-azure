// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Manages an Event Grid Partner Configuration.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = new azure.core.ResourceGroup("example", {
 *     name: "example-resources",
 *     location: "West Europe",
 * });
 * const examplePartnerConfiguration = new azure.eventgrid.PartnerConfiguration("example", {
 *     resourceGroupName: example.name,
 *     defaultMaximumExpirationTimeInDays: 14,
 *     partnerAuthorizations: [{
 *         partnerRegistrationId: "804a11ca-ce9b-4158-8e94-3c8dc7a072ec",
 *         partnerName: "Auth0",
 *         authorizationExpirationTimeInUtc: "2025-02-05T00:00:00Z",
 *     }],
 *     tags: {
 *         environment: "Production",
 *     },
 * });
 * ```
 *
 * ## API Providers
 *
 * <!-- This section is generated, changes will be overwritten -->
 * This resource uses the following Azure API Providers:
 *
 * * `Microsoft.EventGrid`: 2022-06-15
 *
 * ## Import
 *
 * Event Grid Partner Configurations can be imported using the `resource id`, e.g.
 *
 * ```sh
 * $ pulumi import azure:eventgrid/partnerConfiguration:PartnerConfiguration example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1
 * ```
 */
export class PartnerConfiguration extends pulumi.CustomResource {
    /**
     * Get an existing PartnerConfiguration resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: PartnerConfigurationState, opts?: pulumi.CustomResourceOptions): PartnerConfiguration {
        return new PartnerConfiguration(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure:eventgrid/partnerConfiguration:PartnerConfiguration';

    /**
     * Returns true if the given object is an instance of PartnerConfiguration.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is PartnerConfiguration {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === PartnerConfiguration.__pulumiType;
    }

    /**
     * Time used to validate the authorization expiration time for each authorized partner. Defaults to `7`.
     */
    public readonly defaultMaximumExpirationTimeInDays!: pulumi.Output<number | undefined>;
    /**
     * One or more `partnerAuthorization` blocks as defined below.
     */
    public readonly partnerAuthorizations!: pulumi.Output<outputs.eventgrid.PartnerConfigurationPartnerAuthorization[] | undefined>;
    /**
     * The name of the Resource Group where the Event Grid Partner Configuration should exist. Changing this forces a new Event Grid Partner Configuration to be created.
     */
    public readonly resourceGroupName!: pulumi.Output<string>;
    /**
     * A mapping of tags which should be assigned to the Event Grid Partner Configuration.
     */
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;

    /**
     * Create a PartnerConfiguration resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: PartnerConfigurationArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: PartnerConfigurationArgs | PartnerConfigurationState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as PartnerConfigurationState | undefined;
            resourceInputs["defaultMaximumExpirationTimeInDays"] = state ? state.defaultMaximumExpirationTimeInDays : undefined;
            resourceInputs["partnerAuthorizations"] = state ? state.partnerAuthorizations : undefined;
            resourceInputs["resourceGroupName"] = state ? state.resourceGroupName : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
        } else {
            const args = argsOrState as PartnerConfigurationArgs | undefined;
            if ((!args || args.resourceGroupName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            resourceInputs["defaultMaximumExpirationTimeInDays"] = args ? args.defaultMaximumExpirationTimeInDays : undefined;
            resourceInputs["partnerAuthorizations"] = args ? args.partnerAuthorizations : undefined;
            resourceInputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(PartnerConfiguration.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering PartnerConfiguration resources.
 */
export interface PartnerConfigurationState {
    /**
     * Time used to validate the authorization expiration time for each authorized partner. Defaults to `7`.
     */
    defaultMaximumExpirationTimeInDays?: pulumi.Input<number>;
    /**
     * One or more `partnerAuthorization` blocks as defined below.
     */
    partnerAuthorizations?: pulumi.Input<pulumi.Input<inputs.eventgrid.PartnerConfigurationPartnerAuthorization>[]>;
    /**
     * The name of the Resource Group where the Event Grid Partner Configuration should exist. Changing this forces a new Event Grid Partner Configuration to be created.
     */
    resourceGroupName?: pulumi.Input<string>;
    /**
     * A mapping of tags which should be assigned to the Event Grid Partner Configuration.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

/**
 * The set of arguments for constructing a PartnerConfiguration resource.
 */
export interface PartnerConfigurationArgs {
    /**
     * Time used to validate the authorization expiration time for each authorized partner. Defaults to `7`.
     */
    defaultMaximumExpirationTimeInDays?: pulumi.Input<number>;
    /**
     * One or more `partnerAuthorization` blocks as defined below.
     */
    partnerAuthorizations?: pulumi.Input<pulumi.Input<inputs.eventgrid.PartnerConfigurationPartnerAuthorization>[]>;
    /**
     * The name of the Resource Group where the Event Grid Partner Configuration should exist. Changing this forces a new Event Grid Partner Configuration to be created.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * A mapping of tags which should be assigned to the Event Grid Partner Configuration.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
