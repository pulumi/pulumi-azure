// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Manages an Event Grid System Topic.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const exampleResourceGroup = new azure.core.ResourceGroup("exampleResourceGroup", {location: "West Europe"});
 * const exampleAccount = new azure.storage.Account("exampleAccount", {
 *     resourceGroupName: exampleResourceGroup.name,
 *     location: exampleResourceGroup.location,
 *     accountTier: "Standard",
 *     accountReplicationType: "LRS",
 *     tags: {
 *         environment: "staging",
 *     },
 * });
 * const examplegetSystemTopic = new azure.eventgrid.GetSystemTopic("examplegetSystemTopic", {
 *     resourceGroupName: exampleResourceGroup.name,
 *     location: exampleResourceGroup.location,
 *     sourceArmResourceId: exampleAccount.id,
 *     topicType: "Microsoft.Storage.StorageAccounts",
 * });
 * ```
 *
 * ## Import
 *
 * Event Grid System Topic can be imported using the `resource id`, e.g.
 *
 * ```sh
 *  $ pulumi import azure:eventgrid/getSystemTopic:getSystemTopic example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.EventGrid/systemTopics/systemTopic1
 * ```
 */
export class GetSystemTopic extends pulumi.CustomResource {
    /**
     * Get an existing GetSystemTopic resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: GetSystemTopicState, opts?: pulumi.CustomResourceOptions): GetSystemTopic {
        return new GetSystemTopic(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure:eventgrid/getSystemTopic:getSystemTopic';

    /**
     * Returns true if the given object is an instance of GetSystemTopic.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is GetSystemTopic {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === GetSystemTopic.__pulumiType;
    }

    /**
     * The Azure Region where the Event Grid System Topic should exist. Changing this forces a new Event Grid System Topic to be created.
     */
    public readonly location!: pulumi.Output<string>;
    /**
     * The Metric ARM Resource ID of the Event Grid System Topic.
     */
    public /*out*/ readonly metricArmResourceId!: pulumi.Output<string>;
    /**
     * The name which should be used for this Event Grid System Topic. Changing this forces a new Event Grid System Topic to be created.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The name of the Resource Group where the Event Grid System Topic should exist. Changing this forces a new Event Grid System Topic to be created.
     */
    public readonly resourceGroupName!: pulumi.Output<string>;
    /**
     * The ID of the Event Grid System Topic ARM Source. Changing this forces a new Event Grid System Topic to be created.
     */
    public readonly sourceArmResourceId!: pulumi.Output<string>;
    /**
     * A mapping of tags which should be assigned to the Event Grid System Topic.
     */
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * The Topic Type of the Event Grid System Topic. Possible values are: `Microsoft.AppConfiguration.ConfigurationStores`, `Microsoft.Communication.CommunicationServices`
     * , `Microsoft.ContainerRegistry.Registries`, `Microsoft.Devices.IoTHubs`, `Microsoft.EventGrid.Domains`, `Microsoft.EventGrid.Topics`, `Microsoft.Eventhub.Namespaces`, `Microsoft.KeyVault.vaults`, `Microsoft.MachineLearningServices.Workspaces`, `Microsoft.Maps.Accounts`, `Microsoft.Media.MediaServices`, `Microsoft.Resources.ResourceGroups`, `Microsoft.Resources.Subscriptions`, `Microsoft.ServiceBus.Namespaces`, `Microsoft.SignalRService.SignalR`, `Microsoft.Storage.StorageAccounts`, `Microsoft.Web.ServerFarms` and `Microsoft.Web.Sites`. Changing this forces a new Event Grid System Topic to be created.
     */
    public readonly topicType!: pulumi.Output<string>;

    /**
     * Create a GetSystemTopic resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: GetSystemTopicArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: GetSystemTopicArgs | GetSystemTopicState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        if (opts && opts.id) {
            const state = argsOrState as GetSystemTopicState | undefined;
            inputs["location"] = state ? state.location : undefined;
            inputs["metricArmResourceId"] = state ? state.metricArmResourceId : undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["resourceGroupName"] = state ? state.resourceGroupName : undefined;
            inputs["sourceArmResourceId"] = state ? state.sourceArmResourceId : undefined;
            inputs["tags"] = state ? state.tags : undefined;
            inputs["topicType"] = state ? state.topicType : undefined;
        } else {
            const args = argsOrState as GetSystemTopicArgs | undefined;
            if ((!args || args.resourceGroupName === undefined) && !(opts && opts.urn)) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            if ((!args || args.sourceArmResourceId === undefined) && !(opts && opts.urn)) {
                throw new Error("Missing required property 'sourceArmResourceId'");
            }
            if ((!args || args.topicType === undefined) && !(opts && opts.urn)) {
                throw new Error("Missing required property 'topicType'");
            }
            inputs["location"] = args ? args.location : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            inputs["sourceArmResourceId"] = args ? args.sourceArmResourceId : undefined;
            inputs["tags"] = args ? args.tags : undefined;
            inputs["topicType"] = args ? args.topicType : undefined;
            inputs["metricArmResourceId"] = undefined /*out*/;
        }
        if (!opts) {
            opts = {}
        }

        if (!opts.version) {
            opts.version = utilities.getVersion();
        }
        super(GetSystemTopic.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering getSystemTopic resources.
 */
export interface GetSystemTopicState {
    /**
     * The Azure Region where the Event Grid System Topic should exist. Changing this forces a new Event Grid System Topic to be created.
     */
    readonly location?: pulumi.Input<string>;
    /**
     * The Metric ARM Resource ID of the Event Grid System Topic.
     */
    readonly metricArmResourceId?: pulumi.Input<string>;
    /**
     * The name which should be used for this Event Grid System Topic. Changing this forces a new Event Grid System Topic to be created.
     */
    readonly name?: pulumi.Input<string>;
    /**
     * The name of the Resource Group where the Event Grid System Topic should exist. Changing this forces a new Event Grid System Topic to be created.
     */
    readonly resourceGroupName?: pulumi.Input<string>;
    /**
     * The ID of the Event Grid System Topic ARM Source. Changing this forces a new Event Grid System Topic to be created.
     */
    readonly sourceArmResourceId?: pulumi.Input<string>;
    /**
     * A mapping of tags which should be assigned to the Event Grid System Topic.
     */
    readonly tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The Topic Type of the Event Grid System Topic. Possible values are: `Microsoft.AppConfiguration.ConfigurationStores`, `Microsoft.Communication.CommunicationServices`
     * , `Microsoft.ContainerRegistry.Registries`, `Microsoft.Devices.IoTHubs`, `Microsoft.EventGrid.Domains`, `Microsoft.EventGrid.Topics`, `Microsoft.Eventhub.Namespaces`, `Microsoft.KeyVault.vaults`, `Microsoft.MachineLearningServices.Workspaces`, `Microsoft.Maps.Accounts`, `Microsoft.Media.MediaServices`, `Microsoft.Resources.ResourceGroups`, `Microsoft.Resources.Subscriptions`, `Microsoft.ServiceBus.Namespaces`, `Microsoft.SignalRService.SignalR`, `Microsoft.Storage.StorageAccounts`, `Microsoft.Web.ServerFarms` and `Microsoft.Web.Sites`. Changing this forces a new Event Grid System Topic to be created.
     */
    readonly topicType?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a GetSystemTopic resource.
 */
export interface GetSystemTopicArgs {
    /**
     * The Azure Region where the Event Grid System Topic should exist. Changing this forces a new Event Grid System Topic to be created.
     */
    readonly location?: pulumi.Input<string>;
    /**
     * The name which should be used for this Event Grid System Topic. Changing this forces a new Event Grid System Topic to be created.
     */
    readonly name?: pulumi.Input<string>;
    /**
     * The name of the Resource Group where the Event Grid System Topic should exist. Changing this forces a new Event Grid System Topic to be created.
     */
    readonly resourceGroupName: pulumi.Input<string>;
    /**
     * The ID of the Event Grid System Topic ARM Source. Changing this forces a new Event Grid System Topic to be created.
     */
    readonly sourceArmResourceId: pulumi.Input<string>;
    /**
     * A mapping of tags which should be assigned to the Event Grid System Topic.
     */
    readonly tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The Topic Type of the Event Grid System Topic. Possible values are: `Microsoft.AppConfiguration.ConfigurationStores`, `Microsoft.Communication.CommunicationServices`
     * , `Microsoft.ContainerRegistry.Registries`, `Microsoft.Devices.IoTHubs`, `Microsoft.EventGrid.Domains`, `Microsoft.EventGrid.Topics`, `Microsoft.Eventhub.Namespaces`, `Microsoft.KeyVault.vaults`, `Microsoft.MachineLearningServices.Workspaces`, `Microsoft.Maps.Accounts`, `Microsoft.Media.MediaServices`, `Microsoft.Resources.ResourceGroups`, `Microsoft.Resources.Subscriptions`, `Microsoft.ServiceBus.Namespaces`, `Microsoft.SignalRService.SignalR`, `Microsoft.Storage.StorageAccounts`, `Microsoft.Web.ServerFarms` and `Microsoft.Web.Sites`. Changing this forces a new Event Grid System Topic to be created.
     */
    readonly topicType: pulumi.Input<string>;
}
