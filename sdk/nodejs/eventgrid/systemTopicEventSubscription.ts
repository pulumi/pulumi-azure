// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * Manages an EventGrid System Topic Event Subscription.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const exampleResourceGroup = new azure.core.ResourceGroup("exampleResourceGroup", {location: "West Europe"});
 * const exampleAccount = new azure.storage.Account("exampleAccount", {
 *     resourceGroupName: exampleResourceGroup.name,
 *     location: exampleResourceGroup.location,
 *     accountTier: "Standard",
 *     accountReplicationType: "LRS",
 *     tags: {
 *         environment: "staging",
 *     },
 * });
 * const exampleQueue = new azure.storage.Queue("exampleQueue", {storageAccountName: exampleAccount.name});
 * const exampleSystemTopic = new azure.eventgrid.SystemTopic("exampleSystemTopic", {
 *     location: "Global",
 *     resourceGroupName: exampleResourceGroup.name,
 *     sourceArmResourceId: exampleResourceGroup.id,
 *     topicType: "Microsoft.Resources.ResourceGroups",
 * });
 * const exampleSystemTopicEventSubscription = new azure.eventgrid.SystemTopicEventSubscription("exampleSystemTopicEventSubscription", {
 *     systemTopic: exampleSystemTopic.name,
 *     resourceGroupName: exampleResourceGroup.name,
 *     storageQueueEndpoint: {
 *         storageAccountId: exampleAccount.id,
 *         queueName: exampleQueue.name,
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * EventGrid System Topic Event Subscriptions can be imported using the `resource id`, e.g.
 *
 * ```sh
 *  $ pulumi import azure:eventgrid/systemTopicEventSubscription:SystemTopicEventSubscription example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.EventGrid/systemTopics/topic1/eventSubscriptions/subscription1
 * ```
 */
export class SystemTopicEventSubscription extends pulumi.CustomResource {
    /**
     * Get an existing SystemTopicEventSubscription resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SystemTopicEventSubscriptionState, opts?: pulumi.CustomResourceOptions): SystemTopicEventSubscription {
        return new SystemTopicEventSubscription(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure:eventgrid/systemTopicEventSubscription:SystemTopicEventSubscription';

    /**
     * Returns true if the given object is an instance of SystemTopicEventSubscription.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SystemTopicEventSubscription {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SystemTopicEventSubscription.__pulumiType;
    }

    /**
     * A `advancedFilter` block as defined below.
     */
    public readonly advancedFilter!: pulumi.Output<outputs.eventgrid.SystemTopicEventSubscriptionAdvancedFilter | undefined>;
    /**
     * Specifies whether advanced filters should be evaluated against an array of values instead of expecting a singular value. Defaults to `false`.
     */
    public readonly advancedFilteringOnArraysEnabled!: pulumi.Output<boolean | undefined>;
    /**
     * An `azureFunctionEndpoint` block as defined below.
     */
    public readonly azureFunctionEndpoint!: pulumi.Output<outputs.eventgrid.SystemTopicEventSubscriptionAzureFunctionEndpoint | undefined>;
    /**
     * A `deadLetterIdentity` block as defined below.
     */
    public readonly deadLetterIdentity!: pulumi.Output<outputs.eventgrid.SystemTopicEventSubscriptionDeadLetterIdentity | undefined>;
    /**
     * A `deliveryIdentity` block as defined below.
     */
    public readonly deliveryIdentity!: pulumi.Output<outputs.eventgrid.SystemTopicEventSubscriptionDeliveryIdentity | undefined>;
    /**
     * One or more `deliveryProperty` blocks as defined below.
     */
    public readonly deliveryProperties!: pulumi.Output<outputs.eventgrid.SystemTopicEventSubscriptionDeliveryProperty[] | undefined>;
    /**
     * Specifies the event delivery schema for the event subscription. Possible values include: `EventGridSchema`, `CloudEventSchemaV1_0`, `CustomInputSchema`. Defaults to `EventGridSchema`. Changing this forces a new resource to be created.
     */
    public readonly eventDeliverySchema!: pulumi.Output<string | undefined>;
    /**
     * Specifies the id where the Event Hub is located.
     */
    public readonly eventhubEndpointId!: pulumi.Output<string>;
    /**
     * Specifies the expiration time of the event subscription (Datetime Format `RFC 3339`).
     */
    public readonly expirationTimeUtc!: pulumi.Output<string | undefined>;
    /**
     * Specifies the id where the Hybrid Connection is located.
     */
    public readonly hybridConnectionEndpointId!: pulumi.Output<string>;
    /**
     * A list of applicable event types that need to be part of the event subscription.
     */
    public readonly includedEventTypes!: pulumi.Output<string[]>;
    /**
     * A list of labels to assign to the event subscription.
     */
    public readonly labels!: pulumi.Output<string[] | undefined>;
    /**
     * The name which should be used for this Event Subscription. Changing this forces a new Event Subscription to be created.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The name of the Resource Group where the System Topic exists. Changing this forces a new Event Subscription to be created.
     */
    public readonly resourceGroupName!: pulumi.Output<string>;
    /**
     * A `retryPolicy` block as defined below.
     */
    public readonly retryPolicy!: pulumi.Output<outputs.eventgrid.SystemTopicEventSubscriptionRetryPolicy>;
    /**
     * Specifies the id where the Service Bus Queue is located.
     */
    public readonly serviceBusQueueEndpointId!: pulumi.Output<string | undefined>;
    /**
     * Specifies the id where the Service Bus Topic is located.
     */
    public readonly serviceBusTopicEndpointId!: pulumi.Output<string | undefined>;
    /**
     * A `storageBlobDeadLetterDestination` block as defined below.
     */
    public readonly storageBlobDeadLetterDestination!: pulumi.Output<outputs.eventgrid.SystemTopicEventSubscriptionStorageBlobDeadLetterDestination | undefined>;
    /**
     * A `storageQueueEndpoint` block as defined below.
     */
    public readonly storageQueueEndpoint!: pulumi.Output<outputs.eventgrid.SystemTopicEventSubscriptionStorageQueueEndpoint | undefined>;
    /**
     * A `subjectFilter` block as defined below.
     */
    public readonly subjectFilter!: pulumi.Output<outputs.eventgrid.SystemTopicEventSubscriptionSubjectFilter | undefined>;
    /**
     * The System Topic where the Event Subscription should be created in. Changing this forces a new Event Subscription to be created.
     */
    public readonly systemTopic!: pulumi.Output<string>;
    /**
     * A `webhookEndpoint` block as defined below.
     */
    public readonly webhookEndpoint!: pulumi.Output<outputs.eventgrid.SystemTopicEventSubscriptionWebhookEndpoint | undefined>;

    /**
     * Create a SystemTopicEventSubscription resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SystemTopicEventSubscriptionArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SystemTopicEventSubscriptionArgs | SystemTopicEventSubscriptionState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SystemTopicEventSubscriptionState | undefined;
            resourceInputs["advancedFilter"] = state ? state.advancedFilter : undefined;
            resourceInputs["advancedFilteringOnArraysEnabled"] = state ? state.advancedFilteringOnArraysEnabled : undefined;
            resourceInputs["azureFunctionEndpoint"] = state ? state.azureFunctionEndpoint : undefined;
            resourceInputs["deadLetterIdentity"] = state ? state.deadLetterIdentity : undefined;
            resourceInputs["deliveryIdentity"] = state ? state.deliveryIdentity : undefined;
            resourceInputs["deliveryProperties"] = state ? state.deliveryProperties : undefined;
            resourceInputs["eventDeliverySchema"] = state ? state.eventDeliverySchema : undefined;
            resourceInputs["eventhubEndpointId"] = state ? state.eventhubEndpointId : undefined;
            resourceInputs["expirationTimeUtc"] = state ? state.expirationTimeUtc : undefined;
            resourceInputs["hybridConnectionEndpointId"] = state ? state.hybridConnectionEndpointId : undefined;
            resourceInputs["includedEventTypes"] = state ? state.includedEventTypes : undefined;
            resourceInputs["labels"] = state ? state.labels : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["resourceGroupName"] = state ? state.resourceGroupName : undefined;
            resourceInputs["retryPolicy"] = state ? state.retryPolicy : undefined;
            resourceInputs["serviceBusQueueEndpointId"] = state ? state.serviceBusQueueEndpointId : undefined;
            resourceInputs["serviceBusTopicEndpointId"] = state ? state.serviceBusTopicEndpointId : undefined;
            resourceInputs["storageBlobDeadLetterDestination"] = state ? state.storageBlobDeadLetterDestination : undefined;
            resourceInputs["storageQueueEndpoint"] = state ? state.storageQueueEndpoint : undefined;
            resourceInputs["subjectFilter"] = state ? state.subjectFilter : undefined;
            resourceInputs["systemTopic"] = state ? state.systemTopic : undefined;
            resourceInputs["webhookEndpoint"] = state ? state.webhookEndpoint : undefined;
        } else {
            const args = argsOrState as SystemTopicEventSubscriptionArgs | undefined;
            if ((!args || args.resourceGroupName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            if ((!args || args.systemTopic === undefined) && !opts.urn) {
                throw new Error("Missing required property 'systemTopic'");
            }
            resourceInputs["advancedFilter"] = args ? args.advancedFilter : undefined;
            resourceInputs["advancedFilteringOnArraysEnabled"] = args ? args.advancedFilteringOnArraysEnabled : undefined;
            resourceInputs["azureFunctionEndpoint"] = args ? args.azureFunctionEndpoint : undefined;
            resourceInputs["deadLetterIdentity"] = args ? args.deadLetterIdentity : undefined;
            resourceInputs["deliveryIdentity"] = args ? args.deliveryIdentity : undefined;
            resourceInputs["deliveryProperties"] = args ? args.deliveryProperties : undefined;
            resourceInputs["eventDeliverySchema"] = args ? args.eventDeliverySchema : undefined;
            resourceInputs["eventhubEndpointId"] = args ? args.eventhubEndpointId : undefined;
            resourceInputs["expirationTimeUtc"] = args ? args.expirationTimeUtc : undefined;
            resourceInputs["hybridConnectionEndpointId"] = args ? args.hybridConnectionEndpointId : undefined;
            resourceInputs["includedEventTypes"] = args ? args.includedEventTypes : undefined;
            resourceInputs["labels"] = args ? args.labels : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            resourceInputs["retryPolicy"] = args ? args.retryPolicy : undefined;
            resourceInputs["serviceBusQueueEndpointId"] = args ? args.serviceBusQueueEndpointId : undefined;
            resourceInputs["serviceBusTopicEndpointId"] = args ? args.serviceBusTopicEndpointId : undefined;
            resourceInputs["storageBlobDeadLetterDestination"] = args ? args.storageBlobDeadLetterDestination : undefined;
            resourceInputs["storageQueueEndpoint"] = args ? args.storageQueueEndpoint : undefined;
            resourceInputs["subjectFilter"] = args ? args.subjectFilter : undefined;
            resourceInputs["systemTopic"] = args ? args.systemTopic : undefined;
            resourceInputs["webhookEndpoint"] = args ? args.webhookEndpoint : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SystemTopicEventSubscription.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering SystemTopicEventSubscription resources.
 */
export interface SystemTopicEventSubscriptionState {
    /**
     * A `advancedFilter` block as defined below.
     */
    advancedFilter?: pulumi.Input<inputs.eventgrid.SystemTopicEventSubscriptionAdvancedFilter>;
    /**
     * Specifies whether advanced filters should be evaluated against an array of values instead of expecting a singular value. Defaults to `false`.
     */
    advancedFilteringOnArraysEnabled?: pulumi.Input<boolean>;
    /**
     * An `azureFunctionEndpoint` block as defined below.
     */
    azureFunctionEndpoint?: pulumi.Input<inputs.eventgrid.SystemTopicEventSubscriptionAzureFunctionEndpoint>;
    /**
     * A `deadLetterIdentity` block as defined below.
     */
    deadLetterIdentity?: pulumi.Input<inputs.eventgrid.SystemTopicEventSubscriptionDeadLetterIdentity>;
    /**
     * A `deliveryIdentity` block as defined below.
     */
    deliveryIdentity?: pulumi.Input<inputs.eventgrid.SystemTopicEventSubscriptionDeliveryIdentity>;
    /**
     * One or more `deliveryProperty` blocks as defined below.
     */
    deliveryProperties?: pulumi.Input<pulumi.Input<inputs.eventgrid.SystemTopicEventSubscriptionDeliveryProperty>[]>;
    /**
     * Specifies the event delivery schema for the event subscription. Possible values include: `EventGridSchema`, `CloudEventSchemaV1_0`, `CustomInputSchema`. Defaults to `EventGridSchema`. Changing this forces a new resource to be created.
     */
    eventDeliverySchema?: pulumi.Input<string>;
    /**
     * Specifies the id where the Event Hub is located.
     */
    eventhubEndpointId?: pulumi.Input<string>;
    /**
     * Specifies the expiration time of the event subscription (Datetime Format `RFC 3339`).
     */
    expirationTimeUtc?: pulumi.Input<string>;
    /**
     * Specifies the id where the Hybrid Connection is located.
     */
    hybridConnectionEndpointId?: pulumi.Input<string>;
    /**
     * A list of applicable event types that need to be part of the event subscription.
     */
    includedEventTypes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A list of labels to assign to the event subscription.
     */
    labels?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The name which should be used for this Event Subscription. Changing this forces a new Event Subscription to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * The name of the Resource Group where the System Topic exists. Changing this forces a new Event Subscription to be created.
     */
    resourceGroupName?: pulumi.Input<string>;
    /**
     * A `retryPolicy` block as defined below.
     */
    retryPolicy?: pulumi.Input<inputs.eventgrid.SystemTopicEventSubscriptionRetryPolicy>;
    /**
     * Specifies the id where the Service Bus Queue is located.
     */
    serviceBusQueueEndpointId?: pulumi.Input<string>;
    /**
     * Specifies the id where the Service Bus Topic is located.
     */
    serviceBusTopicEndpointId?: pulumi.Input<string>;
    /**
     * A `storageBlobDeadLetterDestination` block as defined below.
     */
    storageBlobDeadLetterDestination?: pulumi.Input<inputs.eventgrid.SystemTopicEventSubscriptionStorageBlobDeadLetterDestination>;
    /**
     * A `storageQueueEndpoint` block as defined below.
     */
    storageQueueEndpoint?: pulumi.Input<inputs.eventgrid.SystemTopicEventSubscriptionStorageQueueEndpoint>;
    /**
     * A `subjectFilter` block as defined below.
     */
    subjectFilter?: pulumi.Input<inputs.eventgrid.SystemTopicEventSubscriptionSubjectFilter>;
    /**
     * The System Topic where the Event Subscription should be created in. Changing this forces a new Event Subscription to be created.
     */
    systemTopic?: pulumi.Input<string>;
    /**
     * A `webhookEndpoint` block as defined below.
     */
    webhookEndpoint?: pulumi.Input<inputs.eventgrid.SystemTopicEventSubscriptionWebhookEndpoint>;
}

/**
 * The set of arguments for constructing a SystemTopicEventSubscription resource.
 */
export interface SystemTopicEventSubscriptionArgs {
    /**
     * A `advancedFilter` block as defined below.
     */
    advancedFilter?: pulumi.Input<inputs.eventgrid.SystemTopicEventSubscriptionAdvancedFilter>;
    /**
     * Specifies whether advanced filters should be evaluated against an array of values instead of expecting a singular value. Defaults to `false`.
     */
    advancedFilteringOnArraysEnabled?: pulumi.Input<boolean>;
    /**
     * An `azureFunctionEndpoint` block as defined below.
     */
    azureFunctionEndpoint?: pulumi.Input<inputs.eventgrid.SystemTopicEventSubscriptionAzureFunctionEndpoint>;
    /**
     * A `deadLetterIdentity` block as defined below.
     */
    deadLetterIdentity?: pulumi.Input<inputs.eventgrid.SystemTopicEventSubscriptionDeadLetterIdentity>;
    /**
     * A `deliveryIdentity` block as defined below.
     */
    deliveryIdentity?: pulumi.Input<inputs.eventgrid.SystemTopicEventSubscriptionDeliveryIdentity>;
    /**
     * One or more `deliveryProperty` blocks as defined below.
     */
    deliveryProperties?: pulumi.Input<pulumi.Input<inputs.eventgrid.SystemTopicEventSubscriptionDeliveryProperty>[]>;
    /**
     * Specifies the event delivery schema for the event subscription. Possible values include: `EventGridSchema`, `CloudEventSchemaV1_0`, `CustomInputSchema`. Defaults to `EventGridSchema`. Changing this forces a new resource to be created.
     */
    eventDeliverySchema?: pulumi.Input<string>;
    /**
     * Specifies the id where the Event Hub is located.
     */
    eventhubEndpointId?: pulumi.Input<string>;
    /**
     * Specifies the expiration time of the event subscription (Datetime Format `RFC 3339`).
     */
    expirationTimeUtc?: pulumi.Input<string>;
    /**
     * Specifies the id where the Hybrid Connection is located.
     */
    hybridConnectionEndpointId?: pulumi.Input<string>;
    /**
     * A list of applicable event types that need to be part of the event subscription.
     */
    includedEventTypes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A list of labels to assign to the event subscription.
     */
    labels?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The name which should be used for this Event Subscription. Changing this forces a new Event Subscription to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * The name of the Resource Group where the System Topic exists. Changing this forces a new Event Subscription to be created.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * A `retryPolicy` block as defined below.
     */
    retryPolicy?: pulumi.Input<inputs.eventgrid.SystemTopicEventSubscriptionRetryPolicy>;
    /**
     * Specifies the id where the Service Bus Queue is located.
     */
    serviceBusQueueEndpointId?: pulumi.Input<string>;
    /**
     * Specifies the id where the Service Bus Topic is located.
     */
    serviceBusTopicEndpointId?: pulumi.Input<string>;
    /**
     * A `storageBlobDeadLetterDestination` block as defined below.
     */
    storageBlobDeadLetterDestination?: pulumi.Input<inputs.eventgrid.SystemTopicEventSubscriptionStorageBlobDeadLetterDestination>;
    /**
     * A `storageQueueEndpoint` block as defined below.
     */
    storageQueueEndpoint?: pulumi.Input<inputs.eventgrid.SystemTopicEventSubscriptionStorageQueueEndpoint>;
    /**
     * A `subjectFilter` block as defined below.
     */
    subjectFilter?: pulumi.Input<inputs.eventgrid.SystemTopicEventSubscriptionSubjectFilter>;
    /**
     * The System Topic where the Event Subscription should be created in. Changing this forces a new Event Subscription to be created.
     */
    systemTopic: pulumi.Input<string>;
    /**
     * A `webhookEndpoint` block as defined below.
     */
    webhookEndpoint?: pulumi.Input<inputs.eventgrid.SystemTopicEventSubscriptionWebhookEndpoint>;
}
