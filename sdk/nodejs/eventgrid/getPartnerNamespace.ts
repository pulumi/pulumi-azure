// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Use this data source to access information about an existing Event Grid Partner Namespace
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = azure.eventgrid.getPartnerNamespace({
 *     name: "my-eventgrid-partner-namespace",
 *     resourceGroupName: "example-resources",
 * });
 * export const eventgridPartnerNamespaceEndpoint = example.then(example => example.endpoint);
 * ```
 *
 * ## API Providers
 *
 * <!-- This section is generated, changes will be overwritten -->
 * This data source uses the following Azure API Providers:
 *
 * * `Microsoft.EventGrid` - 2022-06-15
 */
export function getPartnerNamespace(args: GetPartnerNamespaceArgs, opts?: pulumi.InvokeOptions): Promise<GetPartnerNamespaceResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azure:eventgrid/getPartnerNamespace:getPartnerNamespace", {
        "name": args.name,
        "resourceGroupName": args.resourceGroupName,
    }, opts);
}

/**
 * A collection of arguments for invoking getPartnerNamespace.
 */
export interface GetPartnerNamespaceArgs {
    /**
     * The name of the Event Grid Partner Namespace resource.
     */
    name: string;
    /**
     * The name of the resource group in which the Event Grid Partner Namespace exists.
     */
    resourceGroupName: string;
}

/**
 * A collection of values returned by getPartnerNamespace.
 */
export interface GetPartnerNamespaceResult {
    /**
     * The endpoint for the Event Grid Partner Namespace.
     */
    readonly endpoint: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * One or more `inboundIpRule` blocks as defined below.
     */
    readonly inboundIpRules: outputs.eventgrid.GetPartnerNamespaceInboundIpRule[];
    /**
     * Whether local authentication methods are enabled for the Event Grid Partner Namespace.
     */
    readonly localAuthenticationEnabled: boolean;
    /**
     * The Azure Region where the Event Grid Partner Namespace exists.
     */
    readonly location: string;
    readonly name: string;
    /**
     * The resource Id of the partner registration associated with this Event Grid Partner Namespace.
     */
    readonly partnerRegistrationId: string;
    /**
     * The partner topic routing mode.
     */
    readonly partnerTopicRoutingMode: string;
    /**
     * Whether or not public network access is allowed for this server.
     */
    readonly publicNetworkAccess: string;
    readonly resourceGroupName: string;
    /**
     * A mapping of tags which are assigned to the Event Grid Partner Namespace.
     */
    readonly tags: {[key: string]: string};
}
/**
 * Use this data source to access information about an existing Event Grid Partner Namespace
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = azure.eventgrid.getPartnerNamespace({
 *     name: "my-eventgrid-partner-namespace",
 *     resourceGroupName: "example-resources",
 * });
 * export const eventgridPartnerNamespaceEndpoint = example.then(example => example.endpoint);
 * ```
 *
 * ## API Providers
 *
 * <!-- This section is generated, changes will be overwritten -->
 * This data source uses the following Azure API Providers:
 *
 * * `Microsoft.EventGrid` - 2022-06-15
 */
export function getPartnerNamespaceOutput(args: GetPartnerNamespaceOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetPartnerNamespaceResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("azure:eventgrid/getPartnerNamespace:getPartnerNamespace", {
        "name": args.name,
        "resourceGroupName": args.resourceGroupName,
    }, opts);
}

/**
 * A collection of arguments for invoking getPartnerNamespace.
 */
export interface GetPartnerNamespaceOutputArgs {
    /**
     * The name of the Event Grid Partner Namespace resource.
     */
    name: pulumi.Input<string>;
    /**
     * The name of the resource group in which the Event Grid Partner Namespace exists.
     */
    resourceGroupName: pulumi.Input<string>;
}
