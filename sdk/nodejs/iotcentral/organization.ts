// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Manages an IoT Central Organization
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const exampleResourceGroup = new azure.core.ResourceGroup("exampleResourceGroup", {location: "West Europe"});
 * const exampleApplication = new azure.iotcentral.Application("exampleApplication", {
 *     resourceGroupName: exampleResourceGroup.name,
 *     location: exampleResourceGroup.location,
 *     subDomain: "example-iotcentral-app-subdomain",
 *     displayName: "example-iotcentral-app-display-name",
 *     sku: "ST1",
 *     template: "iotc-default@1.0.0",
 *     tags: {
 *         Foo: "Bar",
 *     },
 * });
 * const exampleParent = new azure.iotcentral.Organization("exampleParent", {
 *     iotcentralApplicationId: exampleApplication.id,
 *     organizationId: "example-parent-organization-id",
 *     displayName: "Org example parent",
 * });
 * const exampleOrganization = new azure.iotcentral.Organization("exampleOrganization", {
 *     iotcentralApplicationId: exampleApplication.id,
 *     organizationId: "example-child-organization-id",
 *     displayName: "Org example",
 *     parentOrganizationId: exampleParent.organizationId,
 * });
 * ```
 *
 * ## Import
 *
 * The IoT Central Organization can be imported using the `id`, e.g.
 *
 * ```sh
 * $ pulumi import azure:iotcentral/organization:Organization example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/mygroup1/providers/Microsoft.IoTCentral/iotApps/example/organizations/example
 * ```
 */
export class Organization extends pulumi.CustomResource {
    /**
     * Get an existing Organization resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: OrganizationState, opts?: pulumi.CustomResourceOptions): Organization {
        return new Organization(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure:iotcentral/organization:Organization';

    /**
     * Returns true if the given object is an instance of Organization.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Organization {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Organization.__pulumiType;
    }

    /**
     * Custom `displayName` for the organization.
     */
    public readonly displayName!: pulumi.Output<string>;
    /**
     * The application `id`. Changing this forces a new resource to be created.
     */
    public readonly iotcentralApplicationId!: pulumi.Output<string>;
    /**
     * The ID of the organization. Changing this forces a new resource to be created.
     */
    public readonly organizationId!: pulumi.Output<string>;
    /**
     * The `organizationId` of the parent organization. Changing this forces a new resource to be created.
     */
    public readonly parentOrganizationId!: pulumi.Output<string | undefined>;

    /**
     * Create a Organization resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: OrganizationArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: OrganizationArgs | OrganizationState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as OrganizationState | undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["iotcentralApplicationId"] = state ? state.iotcentralApplicationId : undefined;
            resourceInputs["organizationId"] = state ? state.organizationId : undefined;
            resourceInputs["parentOrganizationId"] = state ? state.parentOrganizationId : undefined;
        } else {
            const args = argsOrState as OrganizationArgs | undefined;
            if ((!args || args.displayName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'displayName'");
            }
            if ((!args || args.iotcentralApplicationId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'iotcentralApplicationId'");
            }
            if ((!args || args.organizationId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'organizationId'");
            }
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["iotcentralApplicationId"] = args ? args.iotcentralApplicationId : undefined;
            resourceInputs["organizationId"] = args ? args.organizationId : undefined;
            resourceInputs["parentOrganizationId"] = args ? args.parentOrganizationId : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Organization.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Organization resources.
 */
export interface OrganizationState {
    /**
     * Custom `displayName` for the organization.
     */
    displayName?: pulumi.Input<string>;
    /**
     * The application `id`. Changing this forces a new resource to be created.
     */
    iotcentralApplicationId?: pulumi.Input<string>;
    /**
     * The ID of the organization. Changing this forces a new resource to be created.
     */
    organizationId?: pulumi.Input<string>;
    /**
     * The `organizationId` of the parent organization. Changing this forces a new resource to be created.
     */
    parentOrganizationId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Organization resource.
 */
export interface OrganizationArgs {
    /**
     * Custom `displayName` for the organization.
     */
    displayName: pulumi.Input<string>;
    /**
     * The application `id`. Changing this forces a new resource to be created.
     */
    iotcentralApplicationId: pulumi.Input<string>;
    /**
     * The ID of the organization. Changing this forces a new resource to be created.
     */
    organizationId: pulumi.Input<string>;
    /**
     * The `organizationId` of the parent organization. Changing this forces a new resource to be created.
     */
    parentOrganizationId?: pulumi.Input<string>;
}
