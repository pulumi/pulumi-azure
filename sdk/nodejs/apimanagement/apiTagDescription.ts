// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Manages an API Tag Description within an API Management Service.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = new azure.core/resourceGroup.ResourceGroup("example", {
 *     name: "example-resources",
 *     location: "West Europe",
 * });
 * const exampleService = new azure.apimanagement/service.Service("example", {
 *     name: "example-apim",
 *     location: example.location,
 *     resourceGroupName: example.name,
 *     publisherName: "My Company",
 *     publisherEmail: "company@terraform.io",
 *     skuName: "Developer_1",
 * });
 * const exampleApi = new azure.apimanagement/api.Api("example", {
 *     name: "example-api",
 *     resourceGroupName: example.name,
 *     apiManagementName: exampleService.name,
 *     revision: "1",
 *     displayName: "Example API",
 *     path: "example",
 *     protocols: ["https"],
 *     "import": {
 *         contentFormat: "swagger-link-json",
 *         contentValue: "http://conferenceapi.azurewebsites.net/?format=json",
 *     },
 * });
 * const exampleTag = new azure.apimanagement/tag.Tag("example", {
 *     apiManagementId: exampleService.id,
 *     name: "example-Tag",
 * });
 * const exampleApiTagDescription = new azure.apimanagement/apiTagDescription.ApiTagDescription("example", {
 *     apiTagId: exampleTag.id,
 *     description: "This is an example description",
 *     externalDocsUrl: "https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs",
 *     externalDocsDescription: "This is an example external docs description",
 * });
 * ```
 *
 * ## Import
 *
 * API Management API Schema's can be imported using the `resource id`, e.g.
 *
 * ```sh
 * $ pulumi import azure:apimanagement/apiTagDescription:ApiTagDescription example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/mygroup1/providers/Microsoft.ApiManagement/service/instance1/apis/api1/tagDescriptions/tagDescriptionId1
 * ```
 */
export class ApiTagDescription extends pulumi.CustomResource {
    /**
     * Get an existing ApiTagDescription resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ApiTagDescriptionState, opts?: pulumi.CustomResourceOptions): ApiTagDescription {
        return new ApiTagDescription(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure:apimanagement/apiTagDescription:ApiTagDescription';

    /**
     * Returns true if the given object is an instance of ApiTagDescription.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ApiTagDescription {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ApiTagDescription.__pulumiType;
    }

    /**
     * The The ID of the API Management API Tag. Changing this forces a new API Management API Tag Description to be created.
     */
    public readonly apiTagId!: pulumi.Output<string>;
    /**
     * The description of the Tag.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * The description of the external documentation resources describing the tag.
     */
    public readonly externalDocumentationDescription!: pulumi.Output<string | undefined>;
    /**
     * The URL of external documentation resources describing the tag.
     */
    public readonly externalDocumentationUrl!: pulumi.Output<string | undefined>;

    /**
     * Create a ApiTagDescription resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ApiTagDescriptionArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ApiTagDescriptionArgs | ApiTagDescriptionState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ApiTagDescriptionState | undefined;
            resourceInputs["apiTagId"] = state ? state.apiTagId : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["externalDocumentationDescription"] = state ? state.externalDocumentationDescription : undefined;
            resourceInputs["externalDocumentationUrl"] = state ? state.externalDocumentationUrl : undefined;
        } else {
            const args = argsOrState as ApiTagDescriptionArgs | undefined;
            if ((!args || args.apiTagId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'apiTagId'");
            }
            resourceInputs["apiTagId"] = args ? args.apiTagId : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["externalDocumentationDescription"] = args ? args.externalDocumentationDescription : undefined;
            resourceInputs["externalDocumentationUrl"] = args ? args.externalDocumentationUrl : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ApiTagDescription.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ApiTagDescription resources.
 */
export interface ApiTagDescriptionState {
    /**
     * The The ID of the API Management API Tag. Changing this forces a new API Management API Tag Description to be created.
     */
    apiTagId?: pulumi.Input<string>;
    /**
     * The description of the Tag.
     */
    description?: pulumi.Input<string>;
    /**
     * The description of the external documentation resources describing the tag.
     */
    externalDocumentationDescription?: pulumi.Input<string>;
    /**
     * The URL of external documentation resources describing the tag.
     */
    externalDocumentationUrl?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ApiTagDescription resource.
 */
export interface ApiTagDescriptionArgs {
    /**
     * The The ID of the API Management API Tag. Changing this forces a new API Management API Tag Description to be created.
     */
    apiTagId: pulumi.Input<string>;
    /**
     * The description of the Tag.
     */
    description?: pulumi.Input<string>;
    /**
     * The description of the external documentation resources describing the tag.
     */
    externalDocumentationDescription?: pulumi.Input<string>;
    /**
     * The URL of external documentation resources describing the tag.
     */
    externalDocumentationUrl?: pulumi.Input<string>;
}
