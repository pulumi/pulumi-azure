// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Manages an API within an API Management Service.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = new azure.core.ResourceGroup("example", {
 *     name: "example-resources",
 *     location: "West Europe",
 * });
 * const exampleService = new azure.apimanagement.Service("example", {
 *     name: "example-apim",
 *     location: example.location,
 *     resourceGroupName: example.name,
 *     publisherName: "My Company",
 *     publisherEmail: "company@exmaple.com",
 *     skuName: "Developer_1",
 * });
 * const exampleApi = new azure.apimanagement.Api("example", {
 *     name: "example-api",
 *     resourceGroupName: example.name,
 *     apiManagementName: exampleService.name,
 *     revision: "1",
 *     displayName: "Example API",
 *     path: "example",
 *     protocols: ["https"],
 *     "import": {
 *         contentFormat: "swagger-link-json",
 *         contentValue: "https://raw.githubusercontent.com/hashicorp/terraform-provider-azurerm/refs/heads/main/internal/services/apimanagement/testdata/api_management_api_schema_swagger.json",
 *     },
 * });
 * ```
 *
 * ## API Providers
 *
 * <!-- This section is generated, changes will be overwritten -->
 * This resource uses the following Azure API Providers:
 *
 * * `Microsoft.ApiManagement` - 2022-08-01
 *
 * ## Import
 *
 * API Management API's can be imported using the `resource id`, e.g.
 *
 * ```sh
 * $ pulumi import azure:apimanagement/api:Api example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/mygroup1/providers/Microsoft.ApiManagement/service/instance1/apis/api1;rev=1
 * ```
 */
export class Api extends pulumi.CustomResource {
    /**
     * Get an existing Api resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ApiState, opts?: pulumi.CustomResourceOptions): Api {
        return new Api(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure:apimanagement/api:Api';

    /**
     * Returns true if the given object is an instance of Api.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Api {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Api.__pulumiType;
    }

    /**
     * The Name of the API Management Service where this API should be created. Changing this forces a new resource to be created.
     */
    declare public readonly apiManagementName: pulumi.Output<string>;
    /**
     * Type of API. Possible values are `graphql`, `http`, `soap`, and `websocket`. Defaults to `http`.
     */
    declare public readonly apiType: pulumi.Output<string>;
    /**
     * A `contact` block as documented below.
     */
    declare public readonly contact: pulumi.Output<outputs.apimanagement.ApiContact | undefined>;
    /**
     * A description of the API Management API, which may include HTML formatting tags.
     */
    declare public readonly description: pulumi.Output<string | undefined>;
    /**
     * The display name of the API.
     */
    declare public readonly displayName: pulumi.Output<string>;
    /**
     * A `import` block as documented below.
     *
     * > **Note:** The `displayName`, `description`, `contact`, and `license` fields can be imported by the `import` block, which might cause a drift if these fields are set along with the `import` block.
     */
    declare public readonly import: pulumi.Output<outputs.apimanagement.ApiImport | undefined>;
    /**
     * Is this the current API Revision?
     */
    declare public /*out*/ readonly isCurrent: pulumi.Output<boolean>;
    /**
     * Is this API Revision online/accessible via the Gateway?
     */
    declare public /*out*/ readonly isOnline: pulumi.Output<boolean>;
    /**
     * A `license` block as documented below.
     */
    declare public readonly license: pulumi.Output<outputs.apimanagement.ApiLicense | undefined>;
    /**
     * The name of the API Management API. Changing this forces a new resource to be created.
     */
    declare public readonly name: pulumi.Output<string>;
    /**
     * An `oauth2Authorization` block as documented below.
     */
    declare public readonly oauth2Authorization: pulumi.Output<outputs.apimanagement.ApiOauth2Authorization | undefined>;
    /**
     * An `openidAuthentication` block as documented below.
     */
    declare public readonly openidAuthentication: pulumi.Output<outputs.apimanagement.ApiOpenidAuthentication | undefined>;
    /**
     * The Path for this API Management API, which is a relative URL which uniquely identifies this API and all of its resource paths within the API Management Service.
     */
    declare public readonly path: pulumi.Output<string>;
    /**
     * A list of protocols the operations in this API can be invoked. Possible values are `http`, `https`, `ws`, and `wss`.
     *
     * > **Note:** `displayName`, `path` and `protocols` are required when `sourceApiId` is not set.
     */
    declare public readonly protocols: pulumi.Output<string[]>;
    /**
     * The Name of the Resource Group where the API Management API exists. Changing this forces a new resource to be created.
     */
    declare public readonly resourceGroupName: pulumi.Output<string>;
    /**
     * The Revision which used for this API. Changing this forces a new resource to be created.
     */
    declare public readonly revision: pulumi.Output<string>;
    /**
     * The description of the API Revision of the API Management API.
     */
    declare public readonly revisionDescription: pulumi.Output<string | undefined>;
    /**
     * Absolute URL of the backend service implementing this API.
     *
     * > **Note:** The `serviceUrl` is required when `apiType` is specified as `websocket`.
     */
    declare public readonly serviceUrl: pulumi.Output<string>;
    /**
     * The API id of the source API, which could be in format `azurerm_api_management_api.example.id` or in format `azurerm_api_management_api.example.id;rev=1`
     */
    declare public readonly sourceApiId: pulumi.Output<string | undefined>;
    /**
     * A `subscriptionKeyParameterNames` block as documented below.
     */
    declare public readonly subscriptionKeyParameterNames: pulumi.Output<outputs.apimanagement.ApiSubscriptionKeyParameterNames>;
    /**
     * Should this API require a subscription key? Defaults to `true`.
     */
    declare public readonly subscriptionRequired: pulumi.Output<boolean | undefined>;
    /**
     * Absolute URL of the Terms of Service for the API.
     */
    declare public readonly termsOfServiceUrl: pulumi.Output<string | undefined>;
    /**
     * The Version number of this API, if this API is versioned.
     */
    declare public readonly version: pulumi.Output<string>;
    /**
     * The description of the API Version of the API Management API.
     */
    declare public readonly versionDescription: pulumi.Output<string | undefined>;
    /**
     * The ID of the Version Set which this API is associated with.
     *
     * > **Note:** When `version` is set, `versionSetId` must also be specified
     */
    declare public readonly versionSetId: pulumi.Output<string>;

    /**
     * Create a Api resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ApiArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ApiArgs | ApiState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ApiState | undefined;
            resourceInputs["apiManagementName"] = state?.apiManagementName;
            resourceInputs["apiType"] = state?.apiType;
            resourceInputs["contact"] = state?.contact;
            resourceInputs["description"] = state?.description;
            resourceInputs["displayName"] = state?.displayName;
            resourceInputs["import"] = state?.import;
            resourceInputs["isCurrent"] = state?.isCurrent;
            resourceInputs["isOnline"] = state?.isOnline;
            resourceInputs["license"] = state?.license;
            resourceInputs["name"] = state?.name;
            resourceInputs["oauth2Authorization"] = state?.oauth2Authorization;
            resourceInputs["openidAuthentication"] = state?.openidAuthentication;
            resourceInputs["path"] = state?.path;
            resourceInputs["protocols"] = state?.protocols;
            resourceInputs["resourceGroupName"] = state?.resourceGroupName;
            resourceInputs["revision"] = state?.revision;
            resourceInputs["revisionDescription"] = state?.revisionDescription;
            resourceInputs["serviceUrl"] = state?.serviceUrl;
            resourceInputs["sourceApiId"] = state?.sourceApiId;
            resourceInputs["subscriptionKeyParameterNames"] = state?.subscriptionKeyParameterNames;
            resourceInputs["subscriptionRequired"] = state?.subscriptionRequired;
            resourceInputs["termsOfServiceUrl"] = state?.termsOfServiceUrl;
            resourceInputs["version"] = state?.version;
            resourceInputs["versionDescription"] = state?.versionDescription;
            resourceInputs["versionSetId"] = state?.versionSetId;
        } else {
            const args = argsOrState as ApiArgs | undefined;
            if (args?.apiManagementName === undefined && !opts.urn) {
                throw new Error("Missing required property 'apiManagementName'");
            }
            if (args?.resourceGroupName === undefined && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            if (args?.revision === undefined && !opts.urn) {
                throw new Error("Missing required property 'revision'");
            }
            resourceInputs["apiManagementName"] = args?.apiManagementName;
            resourceInputs["apiType"] = args?.apiType;
            resourceInputs["contact"] = args?.contact;
            resourceInputs["description"] = args?.description;
            resourceInputs["displayName"] = args?.displayName;
            resourceInputs["import"] = args?.import;
            resourceInputs["license"] = args?.license;
            resourceInputs["name"] = args?.name;
            resourceInputs["oauth2Authorization"] = args?.oauth2Authorization;
            resourceInputs["openidAuthentication"] = args?.openidAuthentication;
            resourceInputs["path"] = args?.path;
            resourceInputs["protocols"] = args?.protocols;
            resourceInputs["resourceGroupName"] = args?.resourceGroupName;
            resourceInputs["revision"] = args?.revision;
            resourceInputs["revisionDescription"] = args?.revisionDescription;
            resourceInputs["serviceUrl"] = args?.serviceUrl;
            resourceInputs["sourceApiId"] = args?.sourceApiId;
            resourceInputs["subscriptionKeyParameterNames"] = args?.subscriptionKeyParameterNames;
            resourceInputs["subscriptionRequired"] = args?.subscriptionRequired;
            resourceInputs["termsOfServiceUrl"] = args?.termsOfServiceUrl;
            resourceInputs["version"] = args?.version;
            resourceInputs["versionDescription"] = args?.versionDescription;
            resourceInputs["versionSetId"] = args?.versionSetId;
            resourceInputs["isCurrent"] = undefined /*out*/;
            resourceInputs["isOnline"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Api.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Api resources.
 */
export interface ApiState {
    /**
     * The Name of the API Management Service where this API should be created. Changing this forces a new resource to be created.
     */
    apiManagementName?: pulumi.Input<string>;
    /**
     * Type of API. Possible values are `graphql`, `http`, `soap`, and `websocket`. Defaults to `http`.
     */
    apiType?: pulumi.Input<string>;
    /**
     * A `contact` block as documented below.
     */
    contact?: pulumi.Input<inputs.apimanagement.ApiContact>;
    /**
     * A description of the API Management API, which may include HTML formatting tags.
     */
    description?: pulumi.Input<string>;
    /**
     * The display name of the API.
     */
    displayName?: pulumi.Input<string>;
    /**
     * A `import` block as documented below.
     *
     * > **Note:** The `displayName`, `description`, `contact`, and `license` fields can be imported by the `import` block, which might cause a drift if these fields are set along with the `import` block.
     */
    import?: pulumi.Input<inputs.apimanagement.ApiImport>;
    /**
     * Is this the current API Revision?
     */
    isCurrent?: pulumi.Input<boolean>;
    /**
     * Is this API Revision online/accessible via the Gateway?
     */
    isOnline?: pulumi.Input<boolean>;
    /**
     * A `license` block as documented below.
     */
    license?: pulumi.Input<inputs.apimanagement.ApiLicense>;
    /**
     * The name of the API Management API. Changing this forces a new resource to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * An `oauth2Authorization` block as documented below.
     */
    oauth2Authorization?: pulumi.Input<inputs.apimanagement.ApiOauth2Authorization>;
    /**
     * An `openidAuthentication` block as documented below.
     */
    openidAuthentication?: pulumi.Input<inputs.apimanagement.ApiOpenidAuthentication>;
    /**
     * The Path for this API Management API, which is a relative URL which uniquely identifies this API and all of its resource paths within the API Management Service.
     */
    path?: pulumi.Input<string>;
    /**
     * A list of protocols the operations in this API can be invoked. Possible values are `http`, `https`, `ws`, and `wss`.
     *
     * > **Note:** `displayName`, `path` and `protocols` are required when `sourceApiId` is not set.
     */
    protocols?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The Name of the Resource Group where the API Management API exists. Changing this forces a new resource to be created.
     */
    resourceGroupName?: pulumi.Input<string>;
    /**
     * The Revision which used for this API. Changing this forces a new resource to be created.
     */
    revision?: pulumi.Input<string>;
    /**
     * The description of the API Revision of the API Management API.
     */
    revisionDescription?: pulumi.Input<string>;
    /**
     * Absolute URL of the backend service implementing this API.
     *
     * > **Note:** The `serviceUrl` is required when `apiType` is specified as `websocket`.
     */
    serviceUrl?: pulumi.Input<string>;
    /**
     * The API id of the source API, which could be in format `azurerm_api_management_api.example.id` or in format `azurerm_api_management_api.example.id;rev=1`
     */
    sourceApiId?: pulumi.Input<string>;
    /**
     * A `subscriptionKeyParameterNames` block as documented below.
     */
    subscriptionKeyParameterNames?: pulumi.Input<inputs.apimanagement.ApiSubscriptionKeyParameterNames>;
    /**
     * Should this API require a subscription key? Defaults to `true`.
     */
    subscriptionRequired?: pulumi.Input<boolean>;
    /**
     * Absolute URL of the Terms of Service for the API.
     */
    termsOfServiceUrl?: pulumi.Input<string>;
    /**
     * The Version number of this API, if this API is versioned.
     */
    version?: pulumi.Input<string>;
    /**
     * The description of the API Version of the API Management API.
     */
    versionDescription?: pulumi.Input<string>;
    /**
     * The ID of the Version Set which this API is associated with.
     *
     * > **Note:** When `version` is set, `versionSetId` must also be specified
     */
    versionSetId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Api resource.
 */
export interface ApiArgs {
    /**
     * The Name of the API Management Service where this API should be created. Changing this forces a new resource to be created.
     */
    apiManagementName: pulumi.Input<string>;
    /**
     * Type of API. Possible values are `graphql`, `http`, `soap`, and `websocket`. Defaults to `http`.
     */
    apiType?: pulumi.Input<string>;
    /**
     * A `contact` block as documented below.
     */
    contact?: pulumi.Input<inputs.apimanagement.ApiContact>;
    /**
     * A description of the API Management API, which may include HTML formatting tags.
     */
    description?: pulumi.Input<string>;
    /**
     * The display name of the API.
     */
    displayName?: pulumi.Input<string>;
    /**
     * A `import` block as documented below.
     *
     * > **Note:** The `displayName`, `description`, `contact`, and `license` fields can be imported by the `import` block, which might cause a drift if these fields are set along with the `import` block.
     */
    import?: pulumi.Input<inputs.apimanagement.ApiImport>;
    /**
     * A `license` block as documented below.
     */
    license?: pulumi.Input<inputs.apimanagement.ApiLicense>;
    /**
     * The name of the API Management API. Changing this forces a new resource to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * An `oauth2Authorization` block as documented below.
     */
    oauth2Authorization?: pulumi.Input<inputs.apimanagement.ApiOauth2Authorization>;
    /**
     * An `openidAuthentication` block as documented below.
     */
    openidAuthentication?: pulumi.Input<inputs.apimanagement.ApiOpenidAuthentication>;
    /**
     * The Path for this API Management API, which is a relative URL which uniquely identifies this API and all of its resource paths within the API Management Service.
     */
    path?: pulumi.Input<string>;
    /**
     * A list of protocols the operations in this API can be invoked. Possible values are `http`, `https`, `ws`, and `wss`.
     *
     * > **Note:** `displayName`, `path` and `protocols` are required when `sourceApiId` is not set.
     */
    protocols?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The Name of the Resource Group where the API Management API exists. Changing this forces a new resource to be created.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * The Revision which used for this API. Changing this forces a new resource to be created.
     */
    revision: pulumi.Input<string>;
    /**
     * The description of the API Revision of the API Management API.
     */
    revisionDescription?: pulumi.Input<string>;
    /**
     * Absolute URL of the backend service implementing this API.
     *
     * > **Note:** The `serviceUrl` is required when `apiType` is specified as `websocket`.
     */
    serviceUrl?: pulumi.Input<string>;
    /**
     * The API id of the source API, which could be in format `azurerm_api_management_api.example.id` or in format `azurerm_api_management_api.example.id;rev=1`
     */
    sourceApiId?: pulumi.Input<string>;
    /**
     * A `subscriptionKeyParameterNames` block as documented below.
     */
    subscriptionKeyParameterNames?: pulumi.Input<inputs.apimanagement.ApiSubscriptionKeyParameterNames>;
    /**
     * Should this API require a subscription key? Defaults to `true`.
     */
    subscriptionRequired?: pulumi.Input<boolean>;
    /**
     * Absolute URL of the Terms of Service for the API.
     */
    termsOfServiceUrl?: pulumi.Input<string>;
    /**
     * The Version number of this API, if this API is versioned.
     */
    version?: pulumi.Input<string>;
    /**
     * The description of the API Version of the API Management API.
     */
    versionDescription?: pulumi.Input<string>;
    /**
     * The ID of the Version Set which this API is associated with.
     *
     * > **Note:** When `version` is set, `versionSetId` must also be specified
     */
    versionSetId?: pulumi.Input<string>;
}
