// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Manages an API within an API Management Service.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const exampleResourceGroup = new azure.core.ResourceGroup("exampleResourceGroup", {location: "West Europe"});
 * const exampleService = new azure.apimanagement.Service("exampleService", {
 *     location: exampleResourceGroup.location,
 *     resourceGroupName: exampleResourceGroup.name,
 *     publisherName: "My Company",
 *     publisherEmail: "company@exmaple.com",
 *     skuName: "Developer_1",
 * });
 * const exampleApi = new azure.apimanagement.Api("exampleApi", {
 *     resourceGroupName: exampleResourceGroup.name,
 *     apiManagementName: exampleService.name,
 *     revision: "1",
 *     displayName: "Example API",
 *     path: "example",
 *     protocols: ["https"],
 *     "import": {
 *         contentFormat: "swagger-link-json",
 *         contentValue: "http://conferenceapi.azurewebsites.net/?format=json",
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * API Management API's can be imported using the `resource id`, e.g.
 *
 * ```sh
 *  $ pulumi import azure:apimanagement/api:Api example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/mygroup1/providers/Microsoft.ApiManagement/service/instance1/apis/api1;rev=1
 * ```
 */
export class Api extends pulumi.CustomResource {
    /**
     * Get an existing Api resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ApiState, opts?: pulumi.CustomResourceOptions): Api {
        return new Api(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure:apimanagement/api:Api';

    /**
     * Returns true if the given object is an instance of Api.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Api {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Api.__pulumiType;
    }

    /**
     * The Name of the API Management Service where this API should be created. Changing this forces a new resource to be created.
     */
    public readonly apiManagementName!: pulumi.Output<string>;
    /**
     * Type of API. Possible values are `graphql`, `http`, `soap`, and `websocket`. Defaults to `http`.
     */
    public readonly apiType!: pulumi.Output<string>;
    /**
     * A `contact` block as documented below.
     */
    public readonly contact!: pulumi.Output<outputs.apimanagement.ApiContact | undefined>;
    /**
     * A description of the API Management API, which may include HTML formatting tags.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * The display name of the API.
     */
    public readonly displayName!: pulumi.Output<string>;
    /**
     * A `import` block as documented below.
     */
    public readonly import!: pulumi.Output<outputs.apimanagement.ApiImport | undefined>;
    /**
     * Is this the current API Revision?
     */
    public /*out*/ readonly isCurrent!: pulumi.Output<boolean>;
    /**
     * Is this API Revision online/accessible via the Gateway?
     */
    public /*out*/ readonly isOnline!: pulumi.Output<boolean>;
    /**
     * A `license` block as documented below.
     */
    public readonly license!: pulumi.Output<outputs.apimanagement.ApiLicense | undefined>;
    /**
     * The name of the API Management API. Changing this forces a new resource to be created.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * An `oauth2Authorization` block as documented below.
     */
    public readonly oauth2Authorization!: pulumi.Output<outputs.apimanagement.ApiOauth2Authorization | undefined>;
    /**
     * An `openidAuthentication` block as documented below.
     */
    public readonly openidAuthentication!: pulumi.Output<outputs.apimanagement.ApiOpenidAuthentication | undefined>;
    /**
     * The Path for this API Management API, which is a relative URL which uniquely identifies this API and all of its resource paths within the API Management Service.
     */
    public readonly path!: pulumi.Output<string>;
    /**
     * A list of protocols the operations in this API can be invoked. Possible values are `http`, `https`, `ws`, and `wss`.
     *
     * > **NOTE:** `displayName`, `path` and `protocols` are required when `sourceApiId` is not set.
     */
    public readonly protocols!: pulumi.Output<string[]>;
    /**
     * The Name of the Resource Group where the API Management API exists. Changing this forces a new resource to be created.
     */
    public readonly resourceGroupName!: pulumi.Output<string>;
    /**
     * The Revision which used for this API. Changing this forces a new resource to be created.
     */
    public readonly revision!: pulumi.Output<string>;
    /**
     * The description of the API Revision of the API Management API.
     */
    public readonly revisionDescription!: pulumi.Output<string | undefined>;
    /**
     * Absolute URL of the backend service implementing this API.
     */
    public readonly serviceUrl!: pulumi.Output<string>;
    /**
     * Should this API expose a SOAP frontend, rather than a HTTP frontend? Defaults to `false`.
     *
     * > **NOTE:** This property has been deprecated in favour of the `apiType` property and will be removed in version 4.0 of the provider.
     *
     * @deprecated `soap_pass_through` will be removed in favour of the property `api_type` in version 4.0 of the AzureRM Provider
     */
    public readonly soapPassThrough!: pulumi.Output<boolean>;
    /**
     * The API id of the source API, which could be in format `azurerm_api_management_api.example.id` or in format `azurerm_api_management_api.example.id;rev=1`
     */
    public readonly sourceApiId!: pulumi.Output<string | undefined>;
    /**
     * A `subscriptionKeyParameterNames` block as documented below.
     */
    public readonly subscriptionKeyParameterNames!: pulumi.Output<outputs.apimanagement.ApiSubscriptionKeyParameterNames>;
    /**
     * Should this API require a subscription key? Defaults to `true`.
     */
    public readonly subscriptionRequired!: pulumi.Output<boolean | undefined>;
    /**
     * Absolute URL of the Terms of Service for the API.
     */
    public readonly termsOfServiceUrl!: pulumi.Output<string | undefined>;
    /**
     * The Version number of this API, if this API is versioned.
     */
    public readonly version!: pulumi.Output<string>;
    /**
     * The description of the API Version of the API Management API.
     */
    public readonly versionDescription!: pulumi.Output<string | undefined>;
    /**
     * The ID of the Version Set which this API is associated with.
     *
     * > **NOTE:** When `version` is set, `versionSetId` must also be specified
     */
    public readonly versionSetId!: pulumi.Output<string>;

    /**
     * Create a Api resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ApiArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ApiArgs | ApiState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ApiState | undefined;
            resourceInputs["apiManagementName"] = state ? state.apiManagementName : undefined;
            resourceInputs["apiType"] = state ? state.apiType : undefined;
            resourceInputs["contact"] = state ? state.contact : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["import"] = state ? state.import : undefined;
            resourceInputs["isCurrent"] = state ? state.isCurrent : undefined;
            resourceInputs["isOnline"] = state ? state.isOnline : undefined;
            resourceInputs["license"] = state ? state.license : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["oauth2Authorization"] = state ? state.oauth2Authorization : undefined;
            resourceInputs["openidAuthentication"] = state ? state.openidAuthentication : undefined;
            resourceInputs["path"] = state ? state.path : undefined;
            resourceInputs["protocols"] = state ? state.protocols : undefined;
            resourceInputs["resourceGroupName"] = state ? state.resourceGroupName : undefined;
            resourceInputs["revision"] = state ? state.revision : undefined;
            resourceInputs["revisionDescription"] = state ? state.revisionDescription : undefined;
            resourceInputs["serviceUrl"] = state ? state.serviceUrl : undefined;
            resourceInputs["soapPassThrough"] = state ? state.soapPassThrough : undefined;
            resourceInputs["sourceApiId"] = state ? state.sourceApiId : undefined;
            resourceInputs["subscriptionKeyParameterNames"] = state ? state.subscriptionKeyParameterNames : undefined;
            resourceInputs["subscriptionRequired"] = state ? state.subscriptionRequired : undefined;
            resourceInputs["termsOfServiceUrl"] = state ? state.termsOfServiceUrl : undefined;
            resourceInputs["version"] = state ? state.version : undefined;
            resourceInputs["versionDescription"] = state ? state.versionDescription : undefined;
            resourceInputs["versionSetId"] = state ? state.versionSetId : undefined;
        } else {
            const args = argsOrState as ApiArgs | undefined;
            if ((!args || args.apiManagementName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'apiManagementName'");
            }
            if ((!args || args.resourceGroupName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            if ((!args || args.revision === undefined) && !opts.urn) {
                throw new Error("Missing required property 'revision'");
            }
            resourceInputs["apiManagementName"] = args ? args.apiManagementName : undefined;
            resourceInputs["apiType"] = args ? args.apiType : undefined;
            resourceInputs["contact"] = args ? args.contact : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["import"] = args ? args.import : undefined;
            resourceInputs["license"] = args ? args.license : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["oauth2Authorization"] = args ? args.oauth2Authorization : undefined;
            resourceInputs["openidAuthentication"] = args ? args.openidAuthentication : undefined;
            resourceInputs["path"] = args ? args.path : undefined;
            resourceInputs["protocols"] = args ? args.protocols : undefined;
            resourceInputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            resourceInputs["revision"] = args ? args.revision : undefined;
            resourceInputs["revisionDescription"] = args ? args.revisionDescription : undefined;
            resourceInputs["serviceUrl"] = args ? args.serviceUrl : undefined;
            resourceInputs["soapPassThrough"] = args ? args.soapPassThrough : undefined;
            resourceInputs["sourceApiId"] = args ? args.sourceApiId : undefined;
            resourceInputs["subscriptionKeyParameterNames"] = args ? args.subscriptionKeyParameterNames : undefined;
            resourceInputs["subscriptionRequired"] = args ? args.subscriptionRequired : undefined;
            resourceInputs["termsOfServiceUrl"] = args ? args.termsOfServiceUrl : undefined;
            resourceInputs["version"] = args ? args.version : undefined;
            resourceInputs["versionDescription"] = args ? args.versionDescription : undefined;
            resourceInputs["versionSetId"] = args ? args.versionSetId : undefined;
            resourceInputs["isCurrent"] = undefined /*out*/;
            resourceInputs["isOnline"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Api.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Api resources.
 */
export interface ApiState {
    /**
     * The Name of the API Management Service where this API should be created. Changing this forces a new resource to be created.
     */
    apiManagementName?: pulumi.Input<string>;
    /**
     * Type of API. Possible values are `graphql`, `http`, `soap`, and `websocket`. Defaults to `http`.
     */
    apiType?: pulumi.Input<string>;
    /**
     * A `contact` block as documented below.
     */
    contact?: pulumi.Input<inputs.apimanagement.ApiContact>;
    /**
     * A description of the API Management API, which may include HTML formatting tags.
     */
    description?: pulumi.Input<string>;
    /**
     * The display name of the API.
     */
    displayName?: pulumi.Input<string>;
    /**
     * A `import` block as documented below.
     */
    import?: pulumi.Input<inputs.apimanagement.ApiImport>;
    /**
     * Is this the current API Revision?
     */
    isCurrent?: pulumi.Input<boolean>;
    /**
     * Is this API Revision online/accessible via the Gateway?
     */
    isOnline?: pulumi.Input<boolean>;
    /**
     * A `license` block as documented below.
     */
    license?: pulumi.Input<inputs.apimanagement.ApiLicense>;
    /**
     * The name of the API Management API. Changing this forces a new resource to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * An `oauth2Authorization` block as documented below.
     */
    oauth2Authorization?: pulumi.Input<inputs.apimanagement.ApiOauth2Authorization>;
    /**
     * An `openidAuthentication` block as documented below.
     */
    openidAuthentication?: pulumi.Input<inputs.apimanagement.ApiOpenidAuthentication>;
    /**
     * The Path for this API Management API, which is a relative URL which uniquely identifies this API and all of its resource paths within the API Management Service.
     */
    path?: pulumi.Input<string>;
    /**
     * A list of protocols the operations in this API can be invoked. Possible values are `http`, `https`, `ws`, and `wss`.
     *
     * > **NOTE:** `displayName`, `path` and `protocols` are required when `sourceApiId` is not set.
     */
    protocols?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The Name of the Resource Group where the API Management API exists. Changing this forces a new resource to be created.
     */
    resourceGroupName?: pulumi.Input<string>;
    /**
     * The Revision which used for this API. Changing this forces a new resource to be created.
     */
    revision?: pulumi.Input<string>;
    /**
     * The description of the API Revision of the API Management API.
     */
    revisionDescription?: pulumi.Input<string>;
    /**
     * Absolute URL of the backend service implementing this API.
     */
    serviceUrl?: pulumi.Input<string>;
    /**
     * Should this API expose a SOAP frontend, rather than a HTTP frontend? Defaults to `false`.
     *
     * > **NOTE:** This property has been deprecated in favour of the `apiType` property and will be removed in version 4.0 of the provider.
     *
     * @deprecated `soap_pass_through` will be removed in favour of the property `api_type` in version 4.0 of the AzureRM Provider
     */
    soapPassThrough?: pulumi.Input<boolean>;
    /**
     * The API id of the source API, which could be in format `azurerm_api_management_api.example.id` or in format `azurerm_api_management_api.example.id;rev=1`
     */
    sourceApiId?: pulumi.Input<string>;
    /**
     * A `subscriptionKeyParameterNames` block as documented below.
     */
    subscriptionKeyParameterNames?: pulumi.Input<inputs.apimanagement.ApiSubscriptionKeyParameterNames>;
    /**
     * Should this API require a subscription key? Defaults to `true`.
     */
    subscriptionRequired?: pulumi.Input<boolean>;
    /**
     * Absolute URL of the Terms of Service for the API.
     */
    termsOfServiceUrl?: pulumi.Input<string>;
    /**
     * The Version number of this API, if this API is versioned.
     */
    version?: pulumi.Input<string>;
    /**
     * The description of the API Version of the API Management API.
     */
    versionDescription?: pulumi.Input<string>;
    /**
     * The ID of the Version Set which this API is associated with.
     *
     * > **NOTE:** When `version` is set, `versionSetId` must also be specified
     */
    versionSetId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Api resource.
 */
export interface ApiArgs {
    /**
     * The Name of the API Management Service where this API should be created. Changing this forces a new resource to be created.
     */
    apiManagementName: pulumi.Input<string>;
    /**
     * Type of API. Possible values are `graphql`, `http`, `soap`, and `websocket`. Defaults to `http`.
     */
    apiType?: pulumi.Input<string>;
    /**
     * A `contact` block as documented below.
     */
    contact?: pulumi.Input<inputs.apimanagement.ApiContact>;
    /**
     * A description of the API Management API, which may include HTML formatting tags.
     */
    description?: pulumi.Input<string>;
    /**
     * The display name of the API.
     */
    displayName?: pulumi.Input<string>;
    /**
     * A `import` block as documented below.
     */
    import?: pulumi.Input<inputs.apimanagement.ApiImport>;
    /**
     * A `license` block as documented below.
     */
    license?: pulumi.Input<inputs.apimanagement.ApiLicense>;
    /**
     * The name of the API Management API. Changing this forces a new resource to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * An `oauth2Authorization` block as documented below.
     */
    oauth2Authorization?: pulumi.Input<inputs.apimanagement.ApiOauth2Authorization>;
    /**
     * An `openidAuthentication` block as documented below.
     */
    openidAuthentication?: pulumi.Input<inputs.apimanagement.ApiOpenidAuthentication>;
    /**
     * The Path for this API Management API, which is a relative URL which uniquely identifies this API and all of its resource paths within the API Management Service.
     */
    path?: pulumi.Input<string>;
    /**
     * A list of protocols the operations in this API can be invoked. Possible values are `http`, `https`, `ws`, and `wss`.
     *
     * > **NOTE:** `displayName`, `path` and `protocols` are required when `sourceApiId` is not set.
     */
    protocols?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The Name of the Resource Group where the API Management API exists. Changing this forces a new resource to be created.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * The Revision which used for this API. Changing this forces a new resource to be created.
     */
    revision: pulumi.Input<string>;
    /**
     * The description of the API Revision of the API Management API.
     */
    revisionDescription?: pulumi.Input<string>;
    /**
     * Absolute URL of the backend service implementing this API.
     */
    serviceUrl?: pulumi.Input<string>;
    /**
     * Should this API expose a SOAP frontend, rather than a HTTP frontend? Defaults to `false`.
     *
     * > **NOTE:** This property has been deprecated in favour of the `apiType` property and will be removed in version 4.0 of the provider.
     *
     * @deprecated `soap_pass_through` will be removed in favour of the property `api_type` in version 4.0 of the AzureRM Provider
     */
    soapPassThrough?: pulumi.Input<boolean>;
    /**
     * The API id of the source API, which could be in format `azurerm_api_management_api.example.id` or in format `azurerm_api_management_api.example.id;rev=1`
     */
    sourceApiId?: pulumi.Input<string>;
    /**
     * A `subscriptionKeyParameterNames` block as documented below.
     */
    subscriptionKeyParameterNames?: pulumi.Input<inputs.apimanagement.ApiSubscriptionKeyParameterNames>;
    /**
     * Should this API require a subscription key? Defaults to `true`.
     */
    subscriptionRequired?: pulumi.Input<boolean>;
    /**
     * Absolute URL of the Terms of Service for the API.
     */
    termsOfServiceUrl?: pulumi.Input<string>;
    /**
     * The Version number of this API, if this API is versioned.
     */
    version?: pulumi.Input<string>;
    /**
     * The description of the API Version of the API Management API.
     */
    versionDescription?: pulumi.Input<string>;
    /**
     * The ID of the Version Set which this API is associated with.
     *
     * > **NOTE:** When `version` is set, `versionSetId` must also be specified
     */
    versionSetId?: pulumi.Input<string>;
}
