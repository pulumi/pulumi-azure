// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Manages an API Management Gateway Host Name Configuration.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 * import * as std from "@pulumi/std";
 *
 * const example = new azure.core.ResourceGroup("example", {
 *     name: "example-resources",
 *     location: "West Europe",
 * });
 * const exampleService = new azure.apimanagement.Service("example", {
 *     name: "example-apim",
 *     location: example.location,
 *     resourceGroupName: example.name,
 *     publisherName: "pub1",
 *     publisherEmail: "pub1@email.com",
 *     skuName: "Consumption_0",
 * });
 * const exampleGateway = new azure.apimanagement.Gateway("example", {
 *     name: "example-gateway",
 *     apiManagementId: exampleService.id,
 *     description: "Example API Management gateway",
 *     locationData: {
 *         name: "example name",
 *         city: "example city",
 *         district: "example district",
 *         region: "example region",
 *     },
 * });
 * const exampleCertificate = new azure.apimanagement.Certificate("example", {
 *     name: "example-cert",
 *     apiManagementName: exampleService.name,
 *     resourceGroupName: example.name,
 *     data: std.filebase64({
 *         input: "example.pfx",
 *     }).then(invoke => invoke.result),
 * });
 * const exampleGatewayHostNameConfiguration = new azure.apimanagement.GatewayHostNameConfiguration("example", {
 *     name: "example-host-name-configuration",
 *     apiManagementId: exampleService.id,
 *     gatewayName: exampleGateway.name,
 *     certificateId: exampleCertificate.id,
 *     hostName: "example-host-name",
 *     requestClientCertificateEnabled: true,
 *     http2Enabled: true,
 *     tls10Enabled: true,
 *     tls11Enabled: false,
 * });
 * ```
 *
 * ## API Providers
 *
 * <!-- This section is generated, changes will be overwritten -->
 * This resource uses the following Azure API Providers:
 *
 * * `Microsoft.ApiManagement` - 2022-08-01
 *
 * ## Import
 *
 * API Management Gateway Host Name Configuration can be imported using the `resource id`, e.g.
 *
 * ```sh
 * $ pulumi import azure:apimanagement/gatewayHostNameConfiguration:GatewayHostNameConfiguration example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.ApiManagement/service/service1/gateways/gateway1/hostnameConfigurations/hc1
 * ```
 */
export class GatewayHostNameConfiguration extends pulumi.CustomResource {
    /**
     * Get an existing GatewayHostNameConfiguration resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: GatewayHostNameConfigurationState, opts?: pulumi.CustomResourceOptions): GatewayHostNameConfiguration {
        return new GatewayHostNameConfiguration(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure:apimanagement/gatewayHostNameConfiguration:GatewayHostNameConfiguration';

    /**
     * Returns true if the given object is an instance of GatewayHostNameConfiguration.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is GatewayHostNameConfiguration {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === GatewayHostNameConfiguration.__pulumiType;
    }

    /**
     * The ID of the API Management Service. Changing this forces a new resource to be created.
     */
    declare public readonly apiManagementId: pulumi.Output<string>;
    /**
     * The certificate ID to be used for TLS connection establishment.
     */
    declare public readonly certificateId: pulumi.Output<string>;
    /**
     * The name of the API Management Gateway. Changing this forces a new resource to be created.
     */
    declare public readonly gatewayName: pulumi.Output<string>;
    /**
     * The host name to use for the API Management Gateway Host Name Configuration.
     */
    declare public readonly hostName: pulumi.Output<string>;
    /**
     * Whether HTTP/2.0 is supported. Defaults to `true`.
     */
    declare public readonly http2Enabled: pulumi.Output<boolean | undefined>;
    /**
     * The name of the API Management Gateway Host Name Configuration. Changing this forces a new resource to be created.
     */
    declare public readonly name: pulumi.Output<string>;
    /**
     * Whether the API Management Gateway requests a client certificate.
     */
    declare public readonly requestClientCertificateEnabled: pulumi.Output<boolean | undefined>;
    /**
     * Whether TLS 1.0 is supported.
     */
    declare public readonly tls10Enabled: pulumi.Output<boolean | undefined>;
    /**
     * Whether TLS 1.1 is supported.
     */
    declare public readonly tls11Enabled: pulumi.Output<boolean | undefined>;

    /**
     * Create a GatewayHostNameConfiguration resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: GatewayHostNameConfigurationArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: GatewayHostNameConfigurationArgs | GatewayHostNameConfigurationState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as GatewayHostNameConfigurationState | undefined;
            resourceInputs["apiManagementId"] = state?.apiManagementId;
            resourceInputs["certificateId"] = state?.certificateId;
            resourceInputs["gatewayName"] = state?.gatewayName;
            resourceInputs["hostName"] = state?.hostName;
            resourceInputs["http2Enabled"] = state?.http2Enabled;
            resourceInputs["name"] = state?.name;
            resourceInputs["requestClientCertificateEnabled"] = state?.requestClientCertificateEnabled;
            resourceInputs["tls10Enabled"] = state?.tls10Enabled;
            resourceInputs["tls11Enabled"] = state?.tls11Enabled;
        } else {
            const args = argsOrState as GatewayHostNameConfigurationArgs | undefined;
            if (args?.apiManagementId === undefined && !opts.urn) {
                throw new Error("Missing required property 'apiManagementId'");
            }
            if (args?.certificateId === undefined && !opts.urn) {
                throw new Error("Missing required property 'certificateId'");
            }
            if (args?.gatewayName === undefined && !opts.urn) {
                throw new Error("Missing required property 'gatewayName'");
            }
            if (args?.hostName === undefined && !opts.urn) {
                throw new Error("Missing required property 'hostName'");
            }
            resourceInputs["apiManagementId"] = args?.apiManagementId;
            resourceInputs["certificateId"] = args?.certificateId;
            resourceInputs["gatewayName"] = args?.gatewayName;
            resourceInputs["hostName"] = args?.hostName;
            resourceInputs["http2Enabled"] = args?.http2Enabled;
            resourceInputs["name"] = args?.name;
            resourceInputs["requestClientCertificateEnabled"] = args?.requestClientCertificateEnabled;
            resourceInputs["tls10Enabled"] = args?.tls10Enabled;
            resourceInputs["tls11Enabled"] = args?.tls11Enabled;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(GatewayHostNameConfiguration.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering GatewayHostNameConfiguration resources.
 */
export interface GatewayHostNameConfigurationState {
    /**
     * The ID of the API Management Service. Changing this forces a new resource to be created.
     */
    apiManagementId?: pulumi.Input<string>;
    /**
     * The certificate ID to be used for TLS connection establishment.
     */
    certificateId?: pulumi.Input<string>;
    /**
     * The name of the API Management Gateway. Changing this forces a new resource to be created.
     */
    gatewayName?: pulumi.Input<string>;
    /**
     * The host name to use for the API Management Gateway Host Name Configuration.
     */
    hostName?: pulumi.Input<string>;
    /**
     * Whether HTTP/2.0 is supported. Defaults to `true`.
     */
    http2Enabled?: pulumi.Input<boolean>;
    /**
     * The name of the API Management Gateway Host Name Configuration. Changing this forces a new resource to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * Whether the API Management Gateway requests a client certificate.
     */
    requestClientCertificateEnabled?: pulumi.Input<boolean>;
    /**
     * Whether TLS 1.0 is supported.
     */
    tls10Enabled?: pulumi.Input<boolean>;
    /**
     * Whether TLS 1.1 is supported.
     */
    tls11Enabled?: pulumi.Input<boolean>;
}

/**
 * The set of arguments for constructing a GatewayHostNameConfiguration resource.
 */
export interface GatewayHostNameConfigurationArgs {
    /**
     * The ID of the API Management Service. Changing this forces a new resource to be created.
     */
    apiManagementId: pulumi.Input<string>;
    /**
     * The certificate ID to be used for TLS connection establishment.
     */
    certificateId: pulumi.Input<string>;
    /**
     * The name of the API Management Gateway. Changing this forces a new resource to be created.
     */
    gatewayName: pulumi.Input<string>;
    /**
     * The host name to use for the API Management Gateway Host Name Configuration.
     */
    hostName: pulumi.Input<string>;
    /**
     * Whether HTTP/2.0 is supported. Defaults to `true`.
     */
    http2Enabled?: pulumi.Input<boolean>;
    /**
     * The name of the API Management Gateway Host Name Configuration. Changing this forces a new resource to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * Whether the API Management Gateway requests a client certificate.
     */
    requestClientCertificateEnabled?: pulumi.Input<boolean>;
    /**
     * Whether TLS 1.0 is supported.
     */
    tls10Enabled?: pulumi.Input<boolean>;
    /**
     * Whether TLS 1.1 is supported.
     */
    tls11Enabled?: pulumi.Input<boolean>;
}
