// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

export class Service extends pulumi.CustomResource {
    /**
     * Get an existing Service resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ServiceState, opts?: pulumi.CustomResourceOptions): Service {
        return new Service(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure:apimanagement/service:Service';

    /**
     * Returns true if the given object is an instance of Service.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Service {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Service.__pulumiType;
    }

    /**
     * One or more `additional_location` blocks as defined below.
     */
    public readonly additionalLocation!: pulumi.Output<{ gatewayRegionalUrl: string, location: string, publicIpAddresses: string[] } | undefined>;
    /**
     * One or more (up to 10) `certificate` blocks as defined below.
     */
    public readonly certificates!: pulumi.Output<{ certificatePassword: string, encodedCertificate: string, storeName: string }[] | undefined>;
    /**
     * The URL of the Regional Gateway for the API Management Service in the specified region.
     */
    public /*out*/ readonly gatewayRegionalUrl!: pulumi.Output<string>;
    /**
     * The URL of the Gateway for the API Management Service.
     */
    public /*out*/ readonly gatewayUrl!: pulumi.Output<string>;
    /**
     * A `hostname_configuration` block as defined below.
     */
    public readonly hostnameConfiguration!: pulumi.Output<{ managements?: { certificate?: string, certificatePassword?: string, hostName: string, keyVaultId?: string, negotiateClientCertificate?: boolean }[], portals?: { certificate?: string, certificatePassword?: string, hostName: string, keyVaultId?: string, negotiateClientCertificate?: boolean }[], proxies?: { certificate?: string, certificatePassword?: string, defaultSslBinding: boolean, hostName: string, keyVaultId?: string, negotiateClientCertificate?: boolean }[], scms?: { certificate?: string, certificatePassword?: string, hostName: string, keyVaultId?: string, negotiateClientCertificate?: boolean }[] }>;
    /**
     * An `identity` block is documented below.
     */
    public readonly identity!: pulumi.Output<{ principalId: string, tenantId: string, type: string } | undefined>;
    /**
     * The Azure location where the API Management Service exists. Changing this forces a new resource to be created.
     */
    public readonly location!: pulumi.Output<string>;
    /**
     * The URL for the Management API associated with this API Management service.
     */
    public /*out*/ readonly managementApiUrl!: pulumi.Output<string>;
    /**
     * The name of the API Management Service. Changing this forces a new resource to be created.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Email address from which the notification will be sent.
     */
    public readonly notificationSenderEmail!: pulumi.Output<string>;
    /**
     * A `policy` block as defined below.
     */
    public readonly policy!: pulumi.Output<{ xmlContent: string, xmlLink?: string }>;
    /**
     * The URL for the Publisher Portal associated with this API Management service.
     */
    public /*out*/ readonly portalUrl!: pulumi.Output<string>;
    /**
     * Public Static Load Balanced IP addresses of the API Management service in the additional location. Available only for Basic, Standard and Premium SKU.
     */
    public /*out*/ readonly publicIpAddresses!: pulumi.Output<string[]>;
    /**
     * The email of publisher/company.
     */
    public readonly publisherEmail!: pulumi.Output<string>;
    /**
     * The name of publisher/company.
     */
    public readonly publisherName!: pulumi.Output<string>;
    /**
     * The name of the Resource Group in which the API Management Service should be exist. Changing this forces a new resource to be created.
     */
    public readonly resourceGroupName!: pulumi.Output<string>;
    /**
     * The URL for the SCM (Source Code Management) Endpoint associated with this API Management service.
     */
    public /*out*/ readonly scmUrl!: pulumi.Output<string>;
    /**
     * A `security` block as defined below.
     */
    public readonly security!: pulumi.Output<{ disableBackendSsl30?: boolean, disableBackendTls10?: boolean, disableBackendTls11?: boolean, disableFrontendSsl30?: boolean, disableFrontendTls10?: boolean, disableFrontendTls11?: boolean, disableTripleDesChipers: boolean, disableTripleDesCiphers: boolean }>;
    /**
     * A `sign_in` block as defined below.
     */
    public readonly signIn!: pulumi.Output<{ enabled: boolean }>;
    /**
     * A `sign_up` block as defined below.
     */
    public readonly signUp!: pulumi.Output<{ enabled: boolean, termsOfService: { consentRequired: boolean, enabled: boolean, text?: string } }>;
    /**
     * A `sku` block as documented below.
     */
    public readonly sku!: pulumi.Output<{ capacity: number, name: string }>;
    /**
     * A mapping of tags assigned to the resource.
     */
    public readonly tags!: pulumi.Output<{[key: string]: any}>;

    /**
     * Create a Service resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ServiceArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ServiceArgs | ServiceState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        if (opts && opts.id) {
            const state = argsOrState as ServiceState | undefined;
            inputs["additionalLocation"] = state ? state.additionalLocation : undefined;
            inputs["certificates"] = state ? state.certificates : undefined;
            inputs["gatewayRegionalUrl"] = state ? state.gatewayRegionalUrl : undefined;
            inputs["gatewayUrl"] = state ? state.gatewayUrl : undefined;
            inputs["hostnameConfiguration"] = state ? state.hostnameConfiguration : undefined;
            inputs["identity"] = state ? state.identity : undefined;
            inputs["location"] = state ? state.location : undefined;
            inputs["managementApiUrl"] = state ? state.managementApiUrl : undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["notificationSenderEmail"] = state ? state.notificationSenderEmail : undefined;
            inputs["policy"] = state ? state.policy : undefined;
            inputs["portalUrl"] = state ? state.portalUrl : undefined;
            inputs["publicIpAddresses"] = state ? state.publicIpAddresses : undefined;
            inputs["publisherEmail"] = state ? state.publisherEmail : undefined;
            inputs["publisherName"] = state ? state.publisherName : undefined;
            inputs["resourceGroupName"] = state ? state.resourceGroupName : undefined;
            inputs["scmUrl"] = state ? state.scmUrl : undefined;
            inputs["security"] = state ? state.security : undefined;
            inputs["signIn"] = state ? state.signIn : undefined;
            inputs["signUp"] = state ? state.signUp : undefined;
            inputs["sku"] = state ? state.sku : undefined;
            inputs["tags"] = state ? state.tags : undefined;
        } else {
            const args = argsOrState as ServiceArgs | undefined;
            if (!args || args.publisherEmail === undefined) {
                throw new Error("Missing required property 'publisherEmail'");
            }
            if (!args || args.publisherName === undefined) {
                throw new Error("Missing required property 'publisherName'");
            }
            if (!args || args.resourceGroupName === undefined) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            if (!args || args.sku === undefined) {
                throw new Error("Missing required property 'sku'");
            }
            inputs["additionalLocation"] = args ? args.additionalLocation : undefined;
            inputs["certificates"] = args ? args.certificates : undefined;
            inputs["hostnameConfiguration"] = args ? args.hostnameConfiguration : undefined;
            inputs["identity"] = args ? args.identity : undefined;
            inputs["location"] = args ? args.location : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["notificationSenderEmail"] = args ? args.notificationSenderEmail : undefined;
            inputs["policy"] = args ? args.policy : undefined;
            inputs["publisherEmail"] = args ? args.publisherEmail : undefined;
            inputs["publisherName"] = args ? args.publisherName : undefined;
            inputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            inputs["security"] = args ? args.security : undefined;
            inputs["signIn"] = args ? args.signIn : undefined;
            inputs["signUp"] = args ? args.signUp : undefined;
            inputs["sku"] = args ? args.sku : undefined;
            inputs["tags"] = args ? args.tags : undefined;
            inputs["gatewayRegionalUrl"] = undefined /*out*/;
            inputs["gatewayUrl"] = undefined /*out*/;
            inputs["managementApiUrl"] = undefined /*out*/;
            inputs["portalUrl"] = undefined /*out*/;
            inputs["publicIpAddresses"] = undefined /*out*/;
            inputs["scmUrl"] = undefined /*out*/;
        }
        super(Service.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Service resources.
 */
export interface ServiceState {
    /**
     * One or more `additional_location` blocks as defined below.
     */
    readonly additionalLocation?: pulumi.Input<{ gatewayRegionalUrl?: pulumi.Input<string>, location: pulumi.Input<string>, publicIpAddresses?: pulumi.Input<pulumi.Input<string>[]> }>;
    /**
     * One or more (up to 10) `certificate` blocks as defined below.
     */
    readonly certificates?: pulumi.Input<pulumi.Input<{ certificatePassword: pulumi.Input<string>, encodedCertificate: pulumi.Input<string>, storeName: pulumi.Input<string> }>[]>;
    /**
     * The URL of the Regional Gateway for the API Management Service in the specified region.
     */
    readonly gatewayRegionalUrl?: pulumi.Input<string>;
    /**
     * The URL of the Gateway for the API Management Service.
     */
    readonly gatewayUrl?: pulumi.Input<string>;
    /**
     * A `hostname_configuration` block as defined below.
     */
    readonly hostnameConfiguration?: pulumi.Input<{ managements?: pulumi.Input<pulumi.Input<{ certificate?: pulumi.Input<string>, certificatePassword?: pulumi.Input<string>, hostName: pulumi.Input<string>, keyVaultId?: pulumi.Input<string>, negotiateClientCertificate?: pulumi.Input<boolean> }>[]>, portals?: pulumi.Input<pulumi.Input<{ certificate?: pulumi.Input<string>, certificatePassword?: pulumi.Input<string>, hostName: pulumi.Input<string>, keyVaultId?: pulumi.Input<string>, negotiateClientCertificate?: pulumi.Input<boolean> }>[]>, proxies?: pulumi.Input<pulumi.Input<{ certificate?: pulumi.Input<string>, certificatePassword?: pulumi.Input<string>, defaultSslBinding?: pulumi.Input<boolean>, hostName: pulumi.Input<string>, keyVaultId?: pulumi.Input<string>, negotiateClientCertificate?: pulumi.Input<boolean> }>[]>, scms?: pulumi.Input<pulumi.Input<{ certificate?: pulumi.Input<string>, certificatePassword?: pulumi.Input<string>, hostName: pulumi.Input<string>, keyVaultId?: pulumi.Input<string>, negotiateClientCertificate?: pulumi.Input<boolean> }>[]> }>;
    /**
     * An `identity` block is documented below.
     */
    readonly identity?: pulumi.Input<{ principalId?: pulumi.Input<string>, tenantId?: pulumi.Input<string>, type: pulumi.Input<string> }>;
    /**
     * The Azure location where the API Management Service exists. Changing this forces a new resource to be created.
     */
    readonly location?: pulumi.Input<string>;
    /**
     * The URL for the Management API associated with this API Management service.
     */
    readonly managementApiUrl?: pulumi.Input<string>;
    /**
     * The name of the API Management Service. Changing this forces a new resource to be created.
     */
    readonly name?: pulumi.Input<string>;
    /**
     * Email address from which the notification will be sent.
     */
    readonly notificationSenderEmail?: pulumi.Input<string>;
    /**
     * A `policy` block as defined below.
     */
    readonly policy?: pulumi.Input<{ xmlContent?: pulumi.Input<string>, xmlLink?: pulumi.Input<string> }>;
    /**
     * The URL for the Publisher Portal associated with this API Management service.
     */
    readonly portalUrl?: pulumi.Input<string>;
    /**
     * Public Static Load Balanced IP addresses of the API Management service in the additional location. Available only for Basic, Standard and Premium SKU.
     */
    readonly publicIpAddresses?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The email of publisher/company.
     */
    readonly publisherEmail?: pulumi.Input<string>;
    /**
     * The name of publisher/company.
     */
    readonly publisherName?: pulumi.Input<string>;
    /**
     * The name of the Resource Group in which the API Management Service should be exist. Changing this forces a new resource to be created.
     */
    readonly resourceGroupName?: pulumi.Input<string>;
    /**
     * The URL for the SCM (Source Code Management) Endpoint associated with this API Management service.
     */
    readonly scmUrl?: pulumi.Input<string>;
    /**
     * A `security` block as defined below.
     */
    readonly security?: pulumi.Input<{ disableBackendSsl30?: pulumi.Input<boolean>, disableBackendTls10?: pulumi.Input<boolean>, disableBackendTls11?: pulumi.Input<boolean>, disableFrontendSsl30?: pulumi.Input<boolean>, disableFrontendTls10?: pulumi.Input<boolean>, disableFrontendTls11?: pulumi.Input<boolean>, disableTripleDesChipers?: pulumi.Input<boolean>, disableTripleDesCiphers?: pulumi.Input<boolean> }>;
    /**
     * A `sign_in` block as defined below.
     */
    readonly signIn?: pulumi.Input<{ enabled: pulumi.Input<boolean> }>;
    /**
     * A `sign_up` block as defined below.
     */
    readonly signUp?: pulumi.Input<{ enabled: pulumi.Input<boolean>, termsOfService: pulumi.Input<{ consentRequired: pulumi.Input<boolean>, enabled: pulumi.Input<boolean>, text?: pulumi.Input<string> }> }>;
    /**
     * A `sku` block as documented below.
     */
    readonly sku?: pulumi.Input<{ capacity: pulumi.Input<number>, name: pulumi.Input<string> }>;
    /**
     * A mapping of tags assigned to the resource.
     */
    readonly tags?: pulumi.Input<{[key: string]: any}>;
}

/**
 * The set of arguments for constructing a Service resource.
 */
export interface ServiceArgs {
    /**
     * One or more `additional_location` blocks as defined below.
     */
    readonly additionalLocation?: pulumi.Input<{ gatewayRegionalUrl?: pulumi.Input<string>, location: pulumi.Input<string>, publicIpAddresses?: pulumi.Input<pulumi.Input<string>[]> }>;
    /**
     * One or more (up to 10) `certificate` blocks as defined below.
     */
    readonly certificates?: pulumi.Input<pulumi.Input<{ certificatePassword: pulumi.Input<string>, encodedCertificate: pulumi.Input<string>, storeName: pulumi.Input<string> }>[]>;
    /**
     * A `hostname_configuration` block as defined below.
     */
    readonly hostnameConfiguration?: pulumi.Input<{ managements?: pulumi.Input<pulumi.Input<{ certificate?: pulumi.Input<string>, certificatePassword?: pulumi.Input<string>, hostName: pulumi.Input<string>, keyVaultId?: pulumi.Input<string>, negotiateClientCertificate?: pulumi.Input<boolean> }>[]>, portals?: pulumi.Input<pulumi.Input<{ certificate?: pulumi.Input<string>, certificatePassword?: pulumi.Input<string>, hostName: pulumi.Input<string>, keyVaultId?: pulumi.Input<string>, negotiateClientCertificate?: pulumi.Input<boolean> }>[]>, proxies?: pulumi.Input<pulumi.Input<{ certificate?: pulumi.Input<string>, certificatePassword?: pulumi.Input<string>, defaultSslBinding?: pulumi.Input<boolean>, hostName: pulumi.Input<string>, keyVaultId?: pulumi.Input<string>, negotiateClientCertificate?: pulumi.Input<boolean> }>[]>, scms?: pulumi.Input<pulumi.Input<{ certificate?: pulumi.Input<string>, certificatePassword?: pulumi.Input<string>, hostName: pulumi.Input<string>, keyVaultId?: pulumi.Input<string>, negotiateClientCertificate?: pulumi.Input<boolean> }>[]> }>;
    /**
     * An `identity` block is documented below.
     */
    readonly identity?: pulumi.Input<{ principalId?: pulumi.Input<string>, tenantId?: pulumi.Input<string>, type: pulumi.Input<string> }>;
    /**
     * The Azure location where the API Management Service exists. Changing this forces a new resource to be created.
     */
    readonly location?: pulumi.Input<string>;
    /**
     * The name of the API Management Service. Changing this forces a new resource to be created.
     */
    readonly name?: pulumi.Input<string>;
    /**
     * Email address from which the notification will be sent.
     */
    readonly notificationSenderEmail?: pulumi.Input<string>;
    /**
     * A `policy` block as defined below.
     */
    readonly policy?: pulumi.Input<{ xmlContent?: pulumi.Input<string>, xmlLink?: pulumi.Input<string> }>;
    /**
     * The email of publisher/company.
     */
    readonly publisherEmail: pulumi.Input<string>;
    /**
     * The name of publisher/company.
     */
    readonly publisherName: pulumi.Input<string>;
    /**
     * The name of the Resource Group in which the API Management Service should be exist. Changing this forces a new resource to be created.
     */
    readonly resourceGroupName: pulumi.Input<string>;
    /**
     * A `security` block as defined below.
     */
    readonly security?: pulumi.Input<{ disableBackendSsl30?: pulumi.Input<boolean>, disableBackendTls10?: pulumi.Input<boolean>, disableBackendTls11?: pulumi.Input<boolean>, disableFrontendSsl30?: pulumi.Input<boolean>, disableFrontendTls10?: pulumi.Input<boolean>, disableFrontendTls11?: pulumi.Input<boolean>, disableTripleDesChipers?: pulumi.Input<boolean>, disableTripleDesCiphers?: pulumi.Input<boolean> }>;
    /**
     * A `sign_in` block as defined below.
     */
    readonly signIn?: pulumi.Input<{ enabled: pulumi.Input<boolean> }>;
    /**
     * A `sign_up` block as defined below.
     */
    readonly signUp?: pulumi.Input<{ enabled: pulumi.Input<boolean>, termsOfService: pulumi.Input<{ consentRequired: pulumi.Input<boolean>, enabled: pulumi.Input<boolean>, text?: pulumi.Input<string> }> }>;
    /**
     * A `sku` block as documented below.
     */
    readonly sku: pulumi.Input<{ capacity: pulumi.Input<number>, name: pulumi.Input<string> }>;
    /**
     * A mapping of tags assigned to the resource.
     */
    readonly tags?: pulumi.Input<{[key: string]: any}>;
}
