// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Manages an Azure API Management Standalone Gateway.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = new azure.core.ResourceGroup("example", {
 *     name: "example-resources",
 *     location: "West Europe",
 * });
 * const exampleVirtualNetwork = new azure.network.VirtualNetwork("example", {
 *     name: "example-network",
 *     location: example.location,
 *     resourceGroupName: example.name,
 *     addressSpaces: ["10.0.0.0/16"],
 * });
 * const exampleSubnet = new azure.network.Subnet("example", {
 *     name: "example-subnet",
 *     resourceGroupName: example.name,
 *     virtualNetworkName: exampleVirtualNetwork.name,
 *     addressPrefixes: ["10.0.1.0/24"],
 *     delegations: [{
 *         name: "apim-delegation",
 *         serviceDelegation: {
 *             name: "Microsoft.Web/serverFarms",
 *             actions: ["Microsoft.Network/virtualNetworks/subnets/action"],
 *         },
 *     }],
 * });
 * const exampleStandaloneGateway = new azure.apimanagement.StandaloneGateway("example", {
 *     name: "example-gateway-flexible",
 *     resourceGroupName: example.name,
 *     location: example.location,
 *     virtualNetworkType: "External",
 *     backendSubnetId: exampleSubnet.id,
 *     sku: {
 *         capacity: 1,
 *         name: "WorkspaceGatewayPremium",
 *     },
 *     tags: {
 *         Hello: "World",
 *     },
 * });
 * ```
 *
 * ## API Providers
 *
 * <!-- This section is generated, changes will be overwritten -->
 * This resource uses the following Azure API Providers:
 *
 * * `Microsoft.ApiManagement` - 2024-05-01
 *
 * ## Import
 *
 * API Management Standalone Gateway can be imported using the `resource id`, e.g.
 *
 * ```sh
 * $ pulumi import azure:apimanagement/standaloneGateway:StandaloneGateway example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.ApiManagement/gateways/gateway1
 * ```
 */
export class StandaloneGateway extends pulumi.CustomResource {
    /**
     * Get an existing StandaloneGateway resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: StandaloneGatewayState, opts?: pulumi.CustomResourceOptions): StandaloneGateway {
        return new StandaloneGateway(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure:apimanagement/standaloneGateway:StandaloneGateway';

    /**
     * Returns true if the given object is an instance of StandaloneGateway.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is StandaloneGateway {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === StandaloneGateway.__pulumiType;
    }

    /**
     * Specifies the subnet ID in which the backend systems are hosted. Changing this forces a new resource to be created.
     */
    public readonly backendSubnetId!: pulumi.Output<string | undefined>;
    /**
     * Specifies the Azure Region where the API Management Standalone Gateway should exist. Changing this forces a new resource to be created.
     */
    public readonly location!: pulumi.Output<string>;
    /**
     * Specifies the name which should be used for this API Management Standalone Gateway. Changing this forces a new resource to be created.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Specifies the name of the Resource Group where the API Management Standalone Gateway should exist. Changing this forces a new resource to be created.
     */
    public readonly resourceGroupName!: pulumi.Output<string>;
    /**
     * A `sku` block as defined below.
     */
    public readonly sku!: pulumi.Output<outputs.apimanagement.StandaloneGatewaySku>;
    /**
     * A mapping of tags which should be assigned to the API Management Standalone Gateway. Changing this forces a new resource to be created.
     */
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * Specifies the type of VPN in which API Management gateway needs to be configured. Possible values are `External` and `Internal`. Changing this forces a new resource to be created.
     */
    public readonly virtualNetworkType!: pulumi.Output<string | undefined>;

    /**
     * Create a StandaloneGateway resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: StandaloneGatewayArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: StandaloneGatewayArgs | StandaloneGatewayState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as StandaloneGatewayState | undefined;
            resourceInputs["backendSubnetId"] = state ? state.backendSubnetId : undefined;
            resourceInputs["location"] = state ? state.location : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["resourceGroupName"] = state ? state.resourceGroupName : undefined;
            resourceInputs["sku"] = state ? state.sku : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["virtualNetworkType"] = state ? state.virtualNetworkType : undefined;
        } else {
            const args = argsOrState as StandaloneGatewayArgs | undefined;
            if ((!args || args.resourceGroupName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            if ((!args || args.sku === undefined) && !opts.urn) {
                throw new Error("Missing required property 'sku'");
            }
            resourceInputs["backendSubnetId"] = args ? args.backendSubnetId : undefined;
            resourceInputs["location"] = args ? args.location : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            resourceInputs["sku"] = args ? args.sku : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["virtualNetworkType"] = args ? args.virtualNetworkType : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(StandaloneGateway.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering StandaloneGateway resources.
 */
export interface StandaloneGatewayState {
    /**
     * Specifies the subnet ID in which the backend systems are hosted. Changing this forces a new resource to be created.
     */
    backendSubnetId?: pulumi.Input<string>;
    /**
     * Specifies the Azure Region where the API Management Standalone Gateway should exist. Changing this forces a new resource to be created.
     */
    location?: pulumi.Input<string>;
    /**
     * Specifies the name which should be used for this API Management Standalone Gateway. Changing this forces a new resource to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * Specifies the name of the Resource Group where the API Management Standalone Gateway should exist. Changing this forces a new resource to be created.
     */
    resourceGroupName?: pulumi.Input<string>;
    /**
     * A `sku` block as defined below.
     */
    sku?: pulumi.Input<inputs.apimanagement.StandaloneGatewaySku>;
    /**
     * A mapping of tags which should be assigned to the API Management Standalone Gateway. Changing this forces a new resource to be created.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Specifies the type of VPN in which API Management gateway needs to be configured. Possible values are `External` and `Internal`. Changing this forces a new resource to be created.
     */
    virtualNetworkType?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a StandaloneGateway resource.
 */
export interface StandaloneGatewayArgs {
    /**
     * Specifies the subnet ID in which the backend systems are hosted. Changing this forces a new resource to be created.
     */
    backendSubnetId?: pulumi.Input<string>;
    /**
     * Specifies the Azure Region where the API Management Standalone Gateway should exist. Changing this forces a new resource to be created.
     */
    location?: pulumi.Input<string>;
    /**
     * Specifies the name which should be used for this API Management Standalone Gateway. Changing this forces a new resource to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * Specifies the name of the Resource Group where the API Management Standalone Gateway should exist. Changing this forces a new resource to be created.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * A `sku` block as defined below.
     */
    sku: pulumi.Input<inputs.apimanagement.StandaloneGatewaySku>;
    /**
     * A mapping of tags which should be assigned to the API Management Standalone Gateway. Changing this forces a new resource to be created.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Specifies the type of VPN in which API Management gateway needs to be configured. Possible values are `External` and `Internal`. Changing this forces a new resource to be created.
     */
    virtualNetworkType?: pulumi.Input<string>;
}
