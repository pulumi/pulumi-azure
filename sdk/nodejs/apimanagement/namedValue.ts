// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Manages an API Management Named Value.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const exampleResourceGroup = new azure.core.ResourceGroup("exampleResourceGroup", {location: "West Europe"});
 * const exampleService = new azure.apimanagement.Service("exampleService", {
 *     location: exampleResourceGroup.location,
 *     resourceGroupName: exampleResourceGroup.name,
 *     publisherName: "pub1",
 *     publisherEmail: "pub1@email.com",
 *     skuName: "Developer_1",
 * });
 * const exampleNamedValue = new azure.apimanagement.NamedValue("exampleNamedValue", {
 *     resourceGroupName: exampleResourceGroup.name,
 *     apiManagementName: exampleService.name,
 *     displayName: "ExampleProperty",
 *     value: "Example Value",
 * });
 * ```
 *
 * ## Import
 *
 * API Management Properties can be imported using the `resource id`, e.g.
 *
 * ```sh
 *  $ pulumi import azure:apimanagement/namedValue:NamedValue example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/example-resources/providers/Microsoft.ApiManagement/service/example-apim/namedValues/example-apimp
 * ```
 */
export class NamedValue extends pulumi.CustomResource {
    /**
     * Get an existing NamedValue resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: NamedValueState, opts?: pulumi.CustomResourceOptions): NamedValue {
        return new NamedValue(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure:apimanagement/namedValue:NamedValue';

    /**
     * Returns true if the given object is an instance of NamedValue.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is NamedValue {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === NamedValue.__pulumiType;
    }

    /**
     * The name of the API Management Service in which the API Management Named Value should exist. Changing this forces a new resource to be created.
     */
    public readonly apiManagementName!: pulumi.Output<string>;
    /**
     * The display name of this API Management Named Value.
     */
    public readonly displayName!: pulumi.Output<string>;
    /**
     * The name of the API Management Named Value. Changing this forces a new resource to be created.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The name of the Resource Group in which the API Management Named Value should exist. Changing this forces a new resource to be created.
     */
    public readonly resourceGroupName!: pulumi.Output<string>;
    /**
     * Specifies whether the API Management Named Value is secret. Valid values are `true` or `false`. The default value is `false`.
     */
    public readonly secret!: pulumi.Output<boolean | undefined>;
    /**
     * A list of tags to be applied to the API Management Named Value.
     */
    public readonly tags!: pulumi.Output<string[] | undefined>;
    /**
     * The value of this API Management Named Value.
     */
    public readonly value!: pulumi.Output<string | undefined>;
    /**
     * A `valueFromKeyVault` block as defined below.
     */
    public readonly valueFromKeyVault!: pulumi.Output<outputs.apimanagement.NamedValueValueFromKeyVault | undefined>;

    /**
     * Create a NamedValue resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: NamedValueArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: NamedValueArgs | NamedValueState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as NamedValueState | undefined;
            resourceInputs["apiManagementName"] = state ? state.apiManagementName : undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["resourceGroupName"] = state ? state.resourceGroupName : undefined;
            resourceInputs["secret"] = state ? state.secret : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["value"] = state ? state.value : undefined;
            resourceInputs["valueFromKeyVault"] = state ? state.valueFromKeyVault : undefined;
        } else {
            const args = argsOrState as NamedValueArgs | undefined;
            if ((!args || args.apiManagementName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'apiManagementName'");
            }
            if ((!args || args.displayName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'displayName'");
            }
            if ((!args || args.resourceGroupName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            resourceInputs["apiManagementName"] = args ? args.apiManagementName : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            resourceInputs["secret"] = args ? args.secret : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["value"] = args?.value ? pulumi.secret(args.value) : undefined;
            resourceInputs["valueFromKeyVault"] = args ? args.valueFromKeyVault : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["value"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(NamedValue.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering NamedValue resources.
 */
export interface NamedValueState {
    /**
     * The name of the API Management Service in which the API Management Named Value should exist. Changing this forces a new resource to be created.
     */
    apiManagementName?: pulumi.Input<string>;
    /**
     * The display name of this API Management Named Value.
     */
    displayName?: pulumi.Input<string>;
    /**
     * The name of the API Management Named Value. Changing this forces a new resource to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * The name of the Resource Group in which the API Management Named Value should exist. Changing this forces a new resource to be created.
     */
    resourceGroupName?: pulumi.Input<string>;
    /**
     * Specifies whether the API Management Named Value is secret. Valid values are `true` or `false`. The default value is `false`.
     */
    secret?: pulumi.Input<boolean>;
    /**
     * A list of tags to be applied to the API Management Named Value.
     */
    tags?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The value of this API Management Named Value.
     */
    value?: pulumi.Input<string>;
    /**
     * A `valueFromKeyVault` block as defined below.
     */
    valueFromKeyVault?: pulumi.Input<inputs.apimanagement.NamedValueValueFromKeyVault>;
}

/**
 * The set of arguments for constructing a NamedValue resource.
 */
export interface NamedValueArgs {
    /**
     * The name of the API Management Service in which the API Management Named Value should exist. Changing this forces a new resource to be created.
     */
    apiManagementName: pulumi.Input<string>;
    /**
     * The display name of this API Management Named Value.
     */
    displayName: pulumi.Input<string>;
    /**
     * The name of the API Management Named Value. Changing this forces a new resource to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * The name of the Resource Group in which the API Management Named Value should exist. Changing this forces a new resource to be created.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * Specifies whether the API Management Named Value is secret. Valid values are `true` or `false`. The default value is `false`.
     */
    secret?: pulumi.Input<boolean>;
    /**
     * A list of tags to be applied to the API Management Named Value.
     */
    tags?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The value of this API Management Named Value.
     */
    value?: pulumi.Input<string>;
    /**
     * A `valueFromKeyVault` block as defined below.
     */
    valueFromKeyVault?: pulumi.Input<inputs.apimanagement.NamedValueValueFromKeyVault>;
}
