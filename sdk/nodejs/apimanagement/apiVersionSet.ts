// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Manages an API Version Set within an API Management Service.
 *
 * ## Import
 *
 * API Version Set can be imported using the `resource id`, e.g.
 *
 * ```sh
 *  $ pulumi import azure:apimanagement/apiVersionSet:ApiVersionSet example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.ApiManagement/service/service1/apiVersionSets/set1
 * ```
 */
export class ApiVersionSet extends pulumi.CustomResource {
    /**
     * Get an existing ApiVersionSet resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ApiVersionSetState, opts?: pulumi.CustomResourceOptions): ApiVersionSet {
        return new ApiVersionSet(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure:apimanagement/apiVersionSet:ApiVersionSet';

    /**
     * Returns true if the given object is an instance of ApiVersionSet.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ApiVersionSet {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ApiVersionSet.__pulumiType;
    }

    /**
     * The name of the API Management Service in which the API Version Set should exist. May only contain alphanumeric characters and dashes up to 50 characters in length. Changing this forces a new resource to be created.
     */
    public readonly apiManagementName!: pulumi.Output<string>;
    /**
     * The description of API Version Set.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * The display name of this API Version Set.
     */
    public readonly displayName!: pulumi.Output<string>;
    /**
     * The name of the API Version Set. May only contain alphanumeric characters and dashes up to 80 characters in length. Changing this forces a new resource to be created.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The name of the Resource Group in which the parent API Management Service exists. Changing this forces a new resource to be created.
     */
    public readonly resourceGroupName!: pulumi.Output<string>;
    /**
     * The name of the Header which should be read from Inbound Requests which defines the API Version.
     *
     * > **NOTE:** This must be specified when `versioningScheme` is set to `Header`.
     */
    public readonly versionHeaderName!: pulumi.Output<string | undefined>;
    /**
     * The name of the Query String which should be read from Inbound Requests which defines the API Version.
     *
     * > **NOTE:** This must be specified when `versioningScheme` is set to `Query`.
     */
    public readonly versionQueryName!: pulumi.Output<string | undefined>;
    /**
     * Specifies where in an Inbound HTTP Request that the API Version should be read from. Possible values are `Header`, `Query` and `Segment`.
     */
    public readonly versioningScheme!: pulumi.Output<string>;

    /**
     * Create a ApiVersionSet resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ApiVersionSetArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ApiVersionSetArgs | ApiVersionSetState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ApiVersionSetState | undefined;
            resourceInputs["apiManagementName"] = state ? state.apiManagementName : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["resourceGroupName"] = state ? state.resourceGroupName : undefined;
            resourceInputs["versionHeaderName"] = state ? state.versionHeaderName : undefined;
            resourceInputs["versionQueryName"] = state ? state.versionQueryName : undefined;
            resourceInputs["versioningScheme"] = state ? state.versioningScheme : undefined;
        } else {
            const args = argsOrState as ApiVersionSetArgs | undefined;
            if ((!args || args.apiManagementName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'apiManagementName'");
            }
            if ((!args || args.displayName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'displayName'");
            }
            if ((!args || args.resourceGroupName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            if ((!args || args.versioningScheme === undefined) && !opts.urn) {
                throw new Error("Missing required property 'versioningScheme'");
            }
            resourceInputs["apiManagementName"] = args ? args.apiManagementName : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            resourceInputs["versionHeaderName"] = args ? args.versionHeaderName : undefined;
            resourceInputs["versionQueryName"] = args ? args.versionQueryName : undefined;
            resourceInputs["versioningScheme"] = args ? args.versioningScheme : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ApiVersionSet.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ApiVersionSet resources.
 */
export interface ApiVersionSetState {
    /**
     * The name of the API Management Service in which the API Version Set should exist. May only contain alphanumeric characters and dashes up to 50 characters in length. Changing this forces a new resource to be created.
     */
    apiManagementName?: pulumi.Input<string>;
    /**
     * The description of API Version Set.
     */
    description?: pulumi.Input<string>;
    /**
     * The display name of this API Version Set.
     */
    displayName?: pulumi.Input<string>;
    /**
     * The name of the API Version Set. May only contain alphanumeric characters and dashes up to 80 characters in length. Changing this forces a new resource to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * The name of the Resource Group in which the parent API Management Service exists. Changing this forces a new resource to be created.
     */
    resourceGroupName?: pulumi.Input<string>;
    /**
     * The name of the Header which should be read from Inbound Requests which defines the API Version.
     *
     * > **NOTE:** This must be specified when `versioningScheme` is set to `Header`.
     */
    versionHeaderName?: pulumi.Input<string>;
    /**
     * The name of the Query String which should be read from Inbound Requests which defines the API Version.
     *
     * > **NOTE:** This must be specified when `versioningScheme` is set to `Query`.
     */
    versionQueryName?: pulumi.Input<string>;
    /**
     * Specifies where in an Inbound HTTP Request that the API Version should be read from. Possible values are `Header`, `Query` and `Segment`.
     */
    versioningScheme?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ApiVersionSet resource.
 */
export interface ApiVersionSetArgs {
    /**
     * The name of the API Management Service in which the API Version Set should exist. May only contain alphanumeric characters and dashes up to 50 characters in length. Changing this forces a new resource to be created.
     */
    apiManagementName: pulumi.Input<string>;
    /**
     * The description of API Version Set.
     */
    description?: pulumi.Input<string>;
    /**
     * The display name of this API Version Set.
     */
    displayName: pulumi.Input<string>;
    /**
     * The name of the API Version Set. May only contain alphanumeric characters and dashes up to 80 characters in length. Changing this forces a new resource to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * The name of the Resource Group in which the parent API Management Service exists. Changing this forces a new resource to be created.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * The name of the Header which should be read from Inbound Requests which defines the API Version.
     *
     * > **NOTE:** This must be specified when `versioningScheme` is set to `Header`.
     */
    versionHeaderName?: pulumi.Input<string>;
    /**
     * The name of the Query String which should be read from Inbound Requests which defines the API Version.
     *
     * > **NOTE:** This must be specified when `versioningScheme` is set to `Query`.
     */
    versionQueryName?: pulumi.Input<string>;
    /**
     * Specifies where in an Inbound HTTP Request that the API Version should be read from. Possible values are `Header`, `Query` and `Segment`.
     */
    versioningScheme: pulumi.Input<string>;
}
