// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Manages an API Management Product.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = new azure.core.ResourceGroup("example", {
 *     name: "example-resources",
 *     location: "West Europe",
 * });
 * const exampleService = new azure.apimanagement.Service("example", {
 *     name: "example-apim",
 *     location: example.location,
 *     resourceGroupName: example.name,
 *     publisherName: "My Company",
 *     publisherEmail: "company@exmaple.com",
 *     skuName: "Developer_1",
 * });
 * const exampleProduct = new azure.apimanagement.Product("example", {
 *     productId: "test-product",
 *     apiManagementName: exampleService.name,
 *     resourceGroupName: example.name,
 *     displayName: "Test Product",
 *     subscriptionRequired: true,
 *     approvalRequired: true,
 *     published: true,
 * });
 * ```
 *
 * ## API Providers
 *
 * <!-- This section is generated, changes will be overwritten -->
 * This resource uses the following Azure API Providers:
 *
 * * `Microsoft.ApiManagement` - 2022-08-01
 *
 * ## Import
 *
 * API Management Products can be imported using the `resource id`, e.g.
 *
 * ```sh
 * $ pulumi import azure:apimanagement/product:Product example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/mygroup1/providers/Microsoft.ApiManagement/service/instance1/products/myproduct
 * ```
 */
export class Product extends pulumi.CustomResource {
    /**
     * Get an existing Product resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ProductState, opts?: pulumi.CustomResourceOptions): Product {
        return new Product(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure:apimanagement/product:Product';

    /**
     * Returns true if the given object is an instance of Product.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Product {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Product.__pulumiType;
    }

    /**
     * The name of the API Management Service. Changing this forces a new resource to be created.
     */
    declare public readonly apiManagementName: pulumi.Output<string>;
    /**
     * Do subscribers need to be approved prior to being able to use the Product?
     *
     * > **Note:** `approvalRequired` can only be set when `subscriptionRequired` is set to `true`.
     */
    declare public readonly approvalRequired: pulumi.Output<boolean | undefined>;
    /**
     * A description of this Product, which may include HTML formatting tags.
     */
    declare public readonly description: pulumi.Output<string | undefined>;
    /**
     * The Display Name for this API Management Product.
     */
    declare public readonly displayName: pulumi.Output<string>;
    /**
     * The Identifier for this Product, which must be unique within the API Management Service. Changing this forces a new resource to be created.
     */
    declare public readonly productId: pulumi.Output<string>;
    /**
     * Is this Product Published?
     */
    declare public readonly published: pulumi.Output<boolean>;
    /**
     * The name of the Resource Group in which the API Management Service should be exist. Changing this forces a new resource to be created.
     */
    declare public readonly resourceGroupName: pulumi.Output<string>;
    /**
     * Is a Subscription required to access API's included in this Product? Defaults to `true`.
     */
    declare public readonly subscriptionRequired: pulumi.Output<boolean | undefined>;
    /**
     * The number of subscriptions a user can have to this Product at the same time.
     *
     * > **Note:** `subscriptionsLimit` can only be set when `subscriptionRequired` is set to `true`.
     */
    declare public readonly subscriptionsLimit: pulumi.Output<number | undefined>;
    /**
     * The Terms and Conditions for this Product, which must be accepted by Developers before they can begin the Subscription process.
     */
    declare public readonly terms: pulumi.Output<string | undefined>;

    /**
     * Create a Product resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ProductArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ProductArgs | ProductState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ProductState | undefined;
            resourceInputs["apiManagementName"] = state?.apiManagementName;
            resourceInputs["approvalRequired"] = state?.approvalRequired;
            resourceInputs["description"] = state?.description;
            resourceInputs["displayName"] = state?.displayName;
            resourceInputs["productId"] = state?.productId;
            resourceInputs["published"] = state?.published;
            resourceInputs["resourceGroupName"] = state?.resourceGroupName;
            resourceInputs["subscriptionRequired"] = state?.subscriptionRequired;
            resourceInputs["subscriptionsLimit"] = state?.subscriptionsLimit;
            resourceInputs["terms"] = state?.terms;
        } else {
            const args = argsOrState as ProductArgs | undefined;
            if (args?.apiManagementName === undefined && !opts.urn) {
                throw new Error("Missing required property 'apiManagementName'");
            }
            if (args?.displayName === undefined && !opts.urn) {
                throw new Error("Missing required property 'displayName'");
            }
            if (args?.productId === undefined && !opts.urn) {
                throw new Error("Missing required property 'productId'");
            }
            if (args?.published === undefined && !opts.urn) {
                throw new Error("Missing required property 'published'");
            }
            if (args?.resourceGroupName === undefined && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            resourceInputs["apiManagementName"] = args?.apiManagementName;
            resourceInputs["approvalRequired"] = args?.approvalRequired;
            resourceInputs["description"] = args?.description;
            resourceInputs["displayName"] = args?.displayName;
            resourceInputs["productId"] = args?.productId;
            resourceInputs["published"] = args?.published;
            resourceInputs["resourceGroupName"] = args?.resourceGroupName;
            resourceInputs["subscriptionRequired"] = args?.subscriptionRequired;
            resourceInputs["subscriptionsLimit"] = args?.subscriptionsLimit;
            resourceInputs["terms"] = args?.terms;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Product.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Product resources.
 */
export interface ProductState {
    /**
     * The name of the API Management Service. Changing this forces a new resource to be created.
     */
    apiManagementName?: pulumi.Input<string>;
    /**
     * Do subscribers need to be approved prior to being able to use the Product?
     *
     * > **Note:** `approvalRequired` can only be set when `subscriptionRequired` is set to `true`.
     */
    approvalRequired?: pulumi.Input<boolean>;
    /**
     * A description of this Product, which may include HTML formatting tags.
     */
    description?: pulumi.Input<string>;
    /**
     * The Display Name for this API Management Product.
     */
    displayName?: pulumi.Input<string>;
    /**
     * The Identifier for this Product, which must be unique within the API Management Service. Changing this forces a new resource to be created.
     */
    productId?: pulumi.Input<string>;
    /**
     * Is this Product Published?
     */
    published?: pulumi.Input<boolean>;
    /**
     * The name of the Resource Group in which the API Management Service should be exist. Changing this forces a new resource to be created.
     */
    resourceGroupName?: pulumi.Input<string>;
    /**
     * Is a Subscription required to access API's included in this Product? Defaults to `true`.
     */
    subscriptionRequired?: pulumi.Input<boolean>;
    /**
     * The number of subscriptions a user can have to this Product at the same time.
     *
     * > **Note:** `subscriptionsLimit` can only be set when `subscriptionRequired` is set to `true`.
     */
    subscriptionsLimit?: pulumi.Input<number>;
    /**
     * The Terms and Conditions for this Product, which must be accepted by Developers before they can begin the Subscription process.
     */
    terms?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Product resource.
 */
export interface ProductArgs {
    /**
     * The name of the API Management Service. Changing this forces a new resource to be created.
     */
    apiManagementName: pulumi.Input<string>;
    /**
     * Do subscribers need to be approved prior to being able to use the Product?
     *
     * > **Note:** `approvalRequired` can only be set when `subscriptionRequired` is set to `true`.
     */
    approvalRequired?: pulumi.Input<boolean>;
    /**
     * A description of this Product, which may include HTML formatting tags.
     */
    description?: pulumi.Input<string>;
    /**
     * The Display Name for this API Management Product.
     */
    displayName: pulumi.Input<string>;
    /**
     * The Identifier for this Product, which must be unique within the API Management Service. Changing this forces a new resource to be created.
     */
    productId: pulumi.Input<string>;
    /**
     * Is this Product Published?
     */
    published: pulumi.Input<boolean>;
    /**
     * The name of the Resource Group in which the API Management Service should be exist. Changing this forces a new resource to be created.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * Is a Subscription required to access API's included in this Product? Defaults to `true`.
     */
    subscriptionRequired?: pulumi.Input<boolean>;
    /**
     * The number of subscriptions a user can have to this Product at the same time.
     *
     * > **Note:** `subscriptionsLimit` can only be set when `subscriptionRequired` is set to `true`.
     */
    subscriptionsLimit?: pulumi.Input<number>;
    /**
     * The Terms and Conditions for this Product, which must be accepted by Developers before they can begin the Subscription process.
     */
    terms?: pulumi.Input<string>;
}
