// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * Manages a Purview Account.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const exampleResourceGroup = new azure.core.ResourceGroup("exampleResourceGroup", {location: "West Europe"});
 * const exampleAccount = new azure.purview.Account("exampleAccount", {
 *     resourceGroupName: exampleResourceGroup.name,
 *     location: exampleResourceGroup.location,
 *     skuName: "Standard_4",
 * });
 * ```
 *
 * ## Import
 *
 * Purview Accounts can be imported using the `resource id`, e.g.
 *
 * ```sh
 *  $ pulumi import azure:purview/account:Account example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.Purview/accounts/account1
 * ```
 */
export class Account extends pulumi.CustomResource {
    /**
     * Get an existing Account resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AccountState, opts?: pulumi.CustomResourceOptions): Account {
        return new Account(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure:purview/account:Account';

    /**
     * Returns true if the given object is an instance of Account.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Account {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Account.__pulumiType;
    }

    /**
     * Atlas Kafka endpoint primary connection string.
     */
    public /*out*/ readonly atlasKafkaEndpointPrimaryConnectionString!: pulumi.Output<string>;
    /**
     * Atlas Kafka endpoint secondary connection string.
     */
    public /*out*/ readonly atlasKafkaEndpointSecondaryConnectionString!: pulumi.Output<string>;
    /**
     * Catalog endpoint.
     */
    public /*out*/ readonly catalogEndpoint!: pulumi.Output<string>;
    /**
     * Guardian endpoint.
     */
    public /*out*/ readonly guardianEndpoint!: pulumi.Output<string>;
    /**
     * A `identity` block as defined below.
     */
    public /*out*/ readonly identities!: pulumi.Output<outputs.purview.AccountIdentity[]>;
    /**
     * The Azure Region where the Purview Account should exist. Changing this forces a new Purview Account to be created.
     */
    public readonly location!: pulumi.Output<string>;
    /**
     * The name which should be used for this Purview Account. Changing this forces a new Purview Account to be created.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Should the Purview Account be visible to the public network? Defaults to `true`.
     */
    public readonly publicNetworkEnabled!: pulumi.Output<boolean | undefined>;
    /**
     * The name of the Resource Group where the Purview Account should exist. Changing this forces a new Purview Account to be created.
     */
    public readonly resourceGroupName!: pulumi.Output<string>;
    /**
     * Scan endpoint.
     */
    public /*out*/ readonly scanEndpoint!: pulumi.Output<string>;
    /**
     * The SKU's capacity for platform size and catalog capabilities. Accepted values are `Standard_4` and `Standard_16`.
     */
    public readonly skuName!: pulumi.Output<string>;
    /**
     * A mapping of tags which should be assigned to the Purview Account.
     */
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;

    /**
     * Create a Account resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AccountArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AccountArgs | AccountState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AccountState | undefined;
            inputs["atlasKafkaEndpointPrimaryConnectionString"] = state ? state.atlasKafkaEndpointPrimaryConnectionString : undefined;
            inputs["atlasKafkaEndpointSecondaryConnectionString"] = state ? state.atlasKafkaEndpointSecondaryConnectionString : undefined;
            inputs["catalogEndpoint"] = state ? state.catalogEndpoint : undefined;
            inputs["guardianEndpoint"] = state ? state.guardianEndpoint : undefined;
            inputs["identities"] = state ? state.identities : undefined;
            inputs["location"] = state ? state.location : undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["publicNetworkEnabled"] = state ? state.publicNetworkEnabled : undefined;
            inputs["resourceGroupName"] = state ? state.resourceGroupName : undefined;
            inputs["scanEndpoint"] = state ? state.scanEndpoint : undefined;
            inputs["skuName"] = state ? state.skuName : undefined;
            inputs["tags"] = state ? state.tags : undefined;
        } else {
            const args = argsOrState as AccountArgs | undefined;
            if ((!args || args.resourceGroupName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            if ((!args || args.skuName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'skuName'");
            }
            inputs["location"] = args ? args.location : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["publicNetworkEnabled"] = args ? args.publicNetworkEnabled : undefined;
            inputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            inputs["skuName"] = args ? args.skuName : undefined;
            inputs["tags"] = args ? args.tags : undefined;
            inputs["atlasKafkaEndpointPrimaryConnectionString"] = undefined /*out*/;
            inputs["atlasKafkaEndpointSecondaryConnectionString"] = undefined /*out*/;
            inputs["catalogEndpoint"] = undefined /*out*/;
            inputs["guardianEndpoint"] = undefined /*out*/;
            inputs["identities"] = undefined /*out*/;
            inputs["scanEndpoint"] = undefined /*out*/;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        super(Account.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Account resources.
 */
export interface AccountState {
    /**
     * Atlas Kafka endpoint primary connection string.
     */
    atlasKafkaEndpointPrimaryConnectionString?: pulumi.Input<string>;
    /**
     * Atlas Kafka endpoint secondary connection string.
     */
    atlasKafkaEndpointSecondaryConnectionString?: pulumi.Input<string>;
    /**
     * Catalog endpoint.
     */
    catalogEndpoint?: pulumi.Input<string>;
    /**
     * Guardian endpoint.
     */
    guardianEndpoint?: pulumi.Input<string>;
    /**
     * A `identity` block as defined below.
     */
    identities?: pulumi.Input<pulumi.Input<inputs.purview.AccountIdentity>[]>;
    /**
     * The Azure Region where the Purview Account should exist. Changing this forces a new Purview Account to be created.
     */
    location?: pulumi.Input<string>;
    /**
     * The name which should be used for this Purview Account. Changing this forces a new Purview Account to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * Should the Purview Account be visible to the public network? Defaults to `true`.
     */
    publicNetworkEnabled?: pulumi.Input<boolean>;
    /**
     * The name of the Resource Group where the Purview Account should exist. Changing this forces a new Purview Account to be created.
     */
    resourceGroupName?: pulumi.Input<string>;
    /**
     * Scan endpoint.
     */
    scanEndpoint?: pulumi.Input<string>;
    /**
     * The SKU's capacity for platform size and catalog capabilities. Accepted values are `Standard_4` and `Standard_16`.
     */
    skuName?: pulumi.Input<string>;
    /**
     * A mapping of tags which should be assigned to the Purview Account.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

/**
 * The set of arguments for constructing a Account resource.
 */
export interface AccountArgs {
    /**
     * The Azure Region where the Purview Account should exist. Changing this forces a new Purview Account to be created.
     */
    location?: pulumi.Input<string>;
    /**
     * The name which should be used for this Purview Account. Changing this forces a new Purview Account to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * Should the Purview Account be visible to the public network? Defaults to `true`.
     */
    publicNetworkEnabled?: pulumi.Input<boolean>;
    /**
     * The name of the Resource Group where the Purview Account should exist. Changing this forces a new Purview Account to be created.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * The SKU's capacity for platform size and catalog capabilities. Accepted values are `Standard_4` and `Standard_16`.
     */
    skuName: pulumi.Input<string>;
    /**
     * A mapping of tags which should be assigned to the Purview Account.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
