// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Use this data source to access information about an existing Arc Resource Bridge Appliance.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = azure.arc.getResourceBridgeAppliance({
 *     name: "existing",
 *     resourceGroupName: "existing",
 * });
 * export const id = example.then(example => example.id);
 * ```
 */
export function getResourceBridgeAppliance(args: GetResourceBridgeApplianceArgs, opts?: pulumi.InvokeOptions): Promise<GetResourceBridgeApplianceResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azure:arc/getResourceBridgeAppliance:getResourceBridgeAppliance", {
        "name": args.name,
        "resourceGroupName": args.resourceGroupName,
    }, opts);
}

/**
 * A collection of arguments for invoking getResourceBridgeAppliance.
 */
export interface GetResourceBridgeApplianceArgs {
    /**
     * The name of this Arc Resource Bridge Appliance.
     */
    name: string;
    /**
     * The name of the Resource Group where the Arc Resource Bridge Appliance exists.
     */
    resourceGroupName: string;
}

/**
 * A collection of values returned by getResourceBridgeAppliance.
 */
export interface GetResourceBridgeApplianceResult {
    /**
     * Fabric/Infrastructure for this Arc Resource Bridge Appliance.
     */
    readonly distro: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * An `identity` block as defined below.
     */
    readonly identities: outputs.arc.GetResourceBridgeApplianceIdentity[];
    /**
     * The infrastructure provider about the connected Arc Resource Bridge Appliance.
     */
    readonly infrastructureProvider: string;
    /**
     * The Azure Region where the Arc Resource Bridge Appliance exists.
     */
    readonly location: string;
    readonly name: string;
    /**
     * RSA public key in PKCS1 format encoded in base64.
     */
    readonly publicKeyBase64: string;
    readonly resourceGroupName: string;
    /**
     * A mapping of tags assigned to the Arc Resource Bridge Appliance.
     */
    readonly tags: {[key: string]: string};
}
/**
 * Use this data source to access information about an existing Arc Resource Bridge Appliance.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = azure.arc.getResourceBridgeAppliance({
 *     name: "existing",
 *     resourceGroupName: "existing",
 * });
 * export const id = example.then(example => example.id);
 * ```
 */
export function getResourceBridgeApplianceOutput(args: GetResourceBridgeApplianceOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetResourceBridgeApplianceResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("azure:arc/getResourceBridgeAppliance:getResourceBridgeAppliance", {
        "name": args.name,
        "resourceGroupName": args.resourceGroupName,
    }, opts);
}

/**
 * A collection of arguments for invoking getResourceBridgeAppliance.
 */
export interface GetResourceBridgeApplianceOutputArgs {
    /**
     * The name of this Arc Resource Bridge Appliance.
     */
    name: pulumi.Input<string>;
    /**
     * The name of the Resource Group where the Arc Resource Bridge Appliance exists.
     */
    resourceGroupName: pulumi.Input<string>;
}
