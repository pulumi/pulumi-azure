// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Manages an Arc Resource Bridge Appliance.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = new azure.core.ResourceGroup("example", {
 *     name: "example-resources",
 *     location: "West Europe",
 * });
 * const exampleResourceBridgeAppliance = new azure.arc.ResourceBridgeAppliance("example", {
 *     name: "example-appliance",
 *     location: example.location,
 *     resourceGroupName: example.name,
 *     distro: "AKSEdge",
 *     infrastructureProvider: "VMWare",
 *     identity: {
 *         type: "SystemAssigned",
 *     },
 *     tags: {
 *         hello: "world",
 *     },
 * });
 * ```
 *
 * ## API Providers
 *
 * <!-- This section is generated, changes will be overwritten -->
 * This resource uses the following Azure API Providers:
 *
 * * `Microsoft.ResourceConnector` - 2022-10-27
 *
 * ## Import
 *
 * Arc Resource Bridge Appliance can be imported using the `resource id`, e.g.
 *
 * ```sh
 * $ pulumi import azure:arc/resourceBridgeAppliance:ResourceBridgeAppliance example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.ResourceConnector/appliances/appliancesExample
 * ```
 */
export class ResourceBridgeAppliance extends pulumi.CustomResource {
    /**
     * Get an existing ResourceBridgeAppliance resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ResourceBridgeApplianceState, opts?: pulumi.CustomResourceOptions): ResourceBridgeAppliance {
        return new ResourceBridgeAppliance(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure:arc/resourceBridgeAppliance:ResourceBridgeAppliance';

    /**
     * Returns true if the given object is an instance of ResourceBridgeAppliance.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ResourceBridgeAppliance {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ResourceBridgeAppliance.__pulumiType;
    }

    /**
     * Specifies a supported Fabric/Infrastructure for this Arc Resource Bridge Appliance. The possible value is `AKSEdge`.
     */
    declare public readonly distro: pulumi.Output<string>;
    /**
     * An `identity` block as defined below. Changing this forces a new resource to be created.
     */
    declare public readonly identity: pulumi.Output<outputs.arc.ResourceBridgeApplianceIdentity>;
    /**
     * The infrastructure provider about the connected Arc Resource Bridge Appliance. Possible values are `HCI`,`SCVMM` and `VMWare`. Changing this forces a new resource to be created.
     */
    declare public readonly infrastructureProvider: pulumi.Output<string>;
    /**
     * The Azure Region where the Arc Resource Bridge Appliance should exist. Changing this forces a new resource to be created.
     */
    declare public readonly location: pulumi.Output<string>;
    /**
     * The Name which should be used for this Arc Resource Bridge Appliance. Changing this forces a new resource to be created.
     */
    declare public readonly name: pulumi.Output<string>;
    /**
     * The `publicKeyBase64` is an RSA public key in PKCS1 format encoded in base64. Changing this forces a new resource to be created.
     */
    declare public readonly publicKeyBase64: pulumi.Output<string | undefined>;
    /**
     * Specifies the resource group where the Arc Resource Bridge Appliance exists. Changing this forces a new resource to be created.
     */
    declare public readonly resourceGroupName: pulumi.Output<string>;
    /**
     * A mapping of tags which should be assigned to the Arc Resource Bridge Appliance.
     */
    declare public readonly tags: pulumi.Output<{[key: string]: string} | undefined>;

    /**
     * Create a ResourceBridgeAppliance resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ResourceBridgeApplianceArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ResourceBridgeApplianceArgs | ResourceBridgeApplianceState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ResourceBridgeApplianceState | undefined;
            resourceInputs["distro"] = state?.distro;
            resourceInputs["identity"] = state?.identity;
            resourceInputs["infrastructureProvider"] = state?.infrastructureProvider;
            resourceInputs["location"] = state?.location;
            resourceInputs["name"] = state?.name;
            resourceInputs["publicKeyBase64"] = state?.publicKeyBase64;
            resourceInputs["resourceGroupName"] = state?.resourceGroupName;
            resourceInputs["tags"] = state?.tags;
        } else {
            const args = argsOrState as ResourceBridgeApplianceArgs | undefined;
            if (args?.distro === undefined && !opts.urn) {
                throw new Error("Missing required property 'distro'");
            }
            if (args?.identity === undefined && !opts.urn) {
                throw new Error("Missing required property 'identity'");
            }
            if (args?.infrastructureProvider === undefined && !opts.urn) {
                throw new Error("Missing required property 'infrastructureProvider'");
            }
            if (args?.resourceGroupName === undefined && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            resourceInputs["distro"] = args?.distro;
            resourceInputs["identity"] = args?.identity;
            resourceInputs["infrastructureProvider"] = args?.infrastructureProvider;
            resourceInputs["location"] = args?.location;
            resourceInputs["name"] = args?.name;
            resourceInputs["publicKeyBase64"] = args?.publicKeyBase64;
            resourceInputs["resourceGroupName"] = args?.resourceGroupName;
            resourceInputs["tags"] = args?.tags;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ResourceBridgeAppliance.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ResourceBridgeAppliance resources.
 */
export interface ResourceBridgeApplianceState {
    /**
     * Specifies a supported Fabric/Infrastructure for this Arc Resource Bridge Appliance. The possible value is `AKSEdge`.
     */
    distro?: pulumi.Input<string>;
    /**
     * An `identity` block as defined below. Changing this forces a new resource to be created.
     */
    identity?: pulumi.Input<inputs.arc.ResourceBridgeApplianceIdentity>;
    /**
     * The infrastructure provider about the connected Arc Resource Bridge Appliance. Possible values are `HCI`,`SCVMM` and `VMWare`. Changing this forces a new resource to be created.
     */
    infrastructureProvider?: pulumi.Input<string>;
    /**
     * The Azure Region where the Arc Resource Bridge Appliance should exist. Changing this forces a new resource to be created.
     */
    location?: pulumi.Input<string>;
    /**
     * The Name which should be used for this Arc Resource Bridge Appliance. Changing this forces a new resource to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * The `publicKeyBase64` is an RSA public key in PKCS1 format encoded in base64. Changing this forces a new resource to be created.
     */
    publicKeyBase64?: pulumi.Input<string>;
    /**
     * Specifies the resource group where the Arc Resource Bridge Appliance exists. Changing this forces a new resource to be created.
     */
    resourceGroupName?: pulumi.Input<string>;
    /**
     * A mapping of tags which should be assigned to the Arc Resource Bridge Appliance.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

/**
 * The set of arguments for constructing a ResourceBridgeAppliance resource.
 */
export interface ResourceBridgeApplianceArgs {
    /**
     * Specifies a supported Fabric/Infrastructure for this Arc Resource Bridge Appliance. The possible value is `AKSEdge`.
     */
    distro: pulumi.Input<string>;
    /**
     * An `identity` block as defined below. Changing this forces a new resource to be created.
     */
    identity: pulumi.Input<inputs.arc.ResourceBridgeApplianceIdentity>;
    /**
     * The infrastructure provider about the connected Arc Resource Bridge Appliance. Possible values are `HCI`,`SCVMM` and `VMWare`. Changing this forces a new resource to be created.
     */
    infrastructureProvider: pulumi.Input<string>;
    /**
     * The Azure Region where the Arc Resource Bridge Appliance should exist. Changing this forces a new resource to be created.
     */
    location?: pulumi.Input<string>;
    /**
     * The Name which should be used for this Arc Resource Bridge Appliance. Changing this forces a new resource to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * The `publicKeyBase64` is an RSA public key in PKCS1 format encoded in base64. Changing this forces a new resource to be created.
     */
    publicKeyBase64?: pulumi.Input<string>;
    /**
     * Specifies the resource group where the Arc Resource Bridge Appliance exists. Changing this forces a new resource to be created.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * A mapping of tags which should be assigned to the Arc Resource Bridge Appliance.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
