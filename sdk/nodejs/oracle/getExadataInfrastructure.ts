// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Use this data source to access information about an existing Cloud Exadata Infrastructure.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = azure.oracle.getExadataInfrastructure({
 *     name: "existing",
 *     resourceGroupName: "existing",
 * });
 * export const id = example.then(example => example.id);
 * ```
 *
 * ## API Providers
 *
 * <!-- This section is generated, changes will be overwritten -->
 * This data source uses the following Azure API Providers:
 *
 * * `Oracle.Database`: 2024-06-01
 */
export function getExadataInfrastructure(args: GetExadataInfrastructureArgs, opts?: pulumi.InvokeOptions): Promise<GetExadataInfrastructureResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azure:oracle/getExadataInfrastructure:getExadataInfrastructure", {
        "name": args.name,
        "resourceGroupName": args.resourceGroupName,
    }, opts);
}

/**
 * A collection of arguments for invoking getExadataInfrastructure.
 */
export interface GetExadataInfrastructureArgs {
    /**
     * The name of this Cloud Exadata Infrastructure.
     */
    name: string;
    /**
     * The name of the Resource Group where the Cloud Exadata Infrastructure exists.
     */
    resourceGroupName: string;
}

/**
 * A collection of values returned by getExadataInfrastructure.
 */
export interface GetExadataInfrastructureResult {
    /**
     * The requested number of additional storage servers activated for the Cloud Exadata Infrastructure.
     */
    readonly activatedStorageCount: number;
    /**
     * The requested number of additional storage servers for the Cloud Exadata Infrastructure.
     */
    readonly additionalStorageCount: number;
    /**
     * The available storage can be allocated to the Cloud Exadata Infrastructure resource, in gigabytes (GB).
     */
    readonly availableStorageSizeInGbs: number;
    /**
     * The number of compute servers for the Cloud Exadata Infrastructure.
     */
    readonly computeCount: number;
    /**
     * The total number of CPU cores allocated.
     */
    readonly cpuCount: number;
    /**
     * A `customerContacts` block as defined below.
     */
    readonly customerContacts: string[];
    /**
     * The data storage size in terabytes of the DATA disk group.
     */
    readonly dataStorageSizeInTbs: number;
    /**
     * The local node storage allocated in GBs.
     */
    readonly dbNodeStorageSizeInGbs: number;
    /**
     * The software version of the database servers (dom0) in the Cloud Exadata Infrastructure.
     */
    readonly dbServerVersion: string;
    /**
     * The user-friendly name for the Cloud Exadata Infrastructure resource. The name does not need to be unique.
     */
    readonly displayName: string;
    /**
     * A `estimatedPatchingTime` block as defined below.
     */
    readonly estimatedPatchingTimes: outputs.oracle.GetExadataInfrastructureEstimatedPatchingTime[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The [OCID](https://docs.oracle.com/en-us/iaas/Content/General/Concepts/identifiers.htm) of the last maintenance run.
     */
    readonly lastMaintenanceRunId: string;
    /**
     * Additional information about the current lifecycle state.
     */
    readonly lifecycleDetails: string;
    /**
     * Cloud Exadata Infrastructure lifecycle state.
     */
    readonly lifecycleState: string;
    /**
     * The Azure Region where the Cloud Exadata Infrastructure exists.
     */
    readonly location: string;
    /**
     * A `maintenanceWindow` block as defined below.
     */
    readonly maintenanceWindows: outputs.oracle.GetExadataInfrastructureMaintenanceWindow[];
    /**
     * The total number of CPU cores available.
     */
    readonly maxCpuCount: number;
    /**
     * The total available DATA disk group size.
     */
    readonly maxDataStorageInTbs: number;
    /**
     * The total local node storage available in GBs.
     */
    readonly maxDbNodeStorageSizeInGbs: number;
    /**
     * The total memory available in GBs.
     */
    readonly maxMemoryInGbs: number;
    /**
     * The memory allocated in GBs.
     */
    readonly memorySizeInGbs: number;
    /**
     * The monthly software version of the database servers (dom0) in the Cloud Exadata Infrastructure.
     */
    readonly monthlyDbServerVersion: string;
    /**
     * The monthly software version of the storage servers (cells) in the Cloud Exadata Infrastructure.
     */
    readonly monthlyStorageServerVersion: string;
    readonly name: string;
    /**
     * The [OCID](https://docs.oracle.com/en-us/iaas/Content/General/Concepts/identifiers.htm) of the next maintenance run.
     */
    readonly nextMaintenanceRunId: string;
    /**
     * The URL of the resource in the OCI console.
     */
    readonly ociUrl: string;
    /**
     * The [OCID](https://docs.oracle.com/en-us/iaas/Content/General/Concepts/identifiers.htm) of the Cloud Exadata Infrastructure.
     */
    readonly ocid: string;
    readonly resourceGroupName: string;
    /**
     * The model name of the Cloud Exadata Infrastructure resource.
     */
    readonly shape: string;
    /**
     * The number of storage servers for the Cloud Exadata Infrastructure.
     */
    readonly storageCount: number;
    /**
     * The software version of the storage servers (cells) in the Cloud Exadata Infrastructure.
     */
    readonly storageServerVersion: string;
    /**
     * A mapping of tags assigned to the Cloud Exadata Infrastructure.
     */
    readonly tags: {[key: string]: string};
    /**
     * The date and time the Cloud Exadata Infrastructure resource was created.
     */
    readonly timeCreated: string;
    /**
     * The total storage allocated to the Cloud Exadata Infrastructure resource, in gigabytes (GB).
     */
    readonly totalStorageSizeInGbs: number;
    /**
     * The Cloud Exadata Infrastructure Azure zones.
     */
    readonly zones: string[];
}
/**
 * Use this data source to access information about an existing Cloud Exadata Infrastructure.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = azure.oracle.getExadataInfrastructure({
 *     name: "existing",
 *     resourceGroupName: "existing",
 * });
 * export const id = example.then(example => example.id);
 * ```
 *
 * ## API Providers
 *
 * <!-- This section is generated, changes will be overwritten -->
 * This data source uses the following Azure API Providers:
 *
 * * `Oracle.Database`: 2024-06-01
 */
export function getExadataInfrastructureOutput(args: GetExadataInfrastructureOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetExadataInfrastructureResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("azure:oracle/getExadataInfrastructure:getExadataInfrastructure", {
        "name": args.name,
        "resourceGroupName": args.resourceGroupName,
    }, opts);
}

/**
 * A collection of arguments for invoking getExadataInfrastructure.
 */
export interface GetExadataInfrastructureOutputArgs {
    /**
     * The name of this Cloud Exadata Infrastructure.
     */
    name: pulumi.Input<string>;
    /**
     * The name of the Resource Group where the Cloud Exadata Infrastructure exists.
     */
    resourceGroupName: pulumi.Input<string>;
}
