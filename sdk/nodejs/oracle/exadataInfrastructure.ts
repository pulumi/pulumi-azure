// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Manages a Cloud Exadata Infrastructure.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = new azure.core.ResourceGroup("example", {
 *     name: "example-resources",
 *     location: "West Europe",
 * });
 * const exampleExadataInfrastructure = new azure.oracle.ExadataInfrastructure("example", {
 *     name: "example-exadata-infra",
 *     resourceGroupName: example.name,
 *     location: example.location,
 *     zones: ["1"],
 *     displayName: "example-exadata-infra",
 *     storageCount: 3,
 *     computeCount: 2,
 *     shape: "Exadata.X9M",
 * });
 * ```
 *
 * ## API Providers
 *
 * <!-- This section is generated, changes will be overwritten -->
 * This resource uses the following Azure API Providers:
 *
 * * `Oracle.Database`: 2024-06-01
 *
 * ## Import
 *
 * Cloud Exadata Infrastructures can be imported using the `resource id`, e.g.
 *
 * ```sh
 * $ pulumi import azure:oracle/exadataInfrastructure:ExadataInfrastructure example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resourceGroup/providers/Oracle.Database/cloudExadataInfrastructures/cloudExadataInfrastructures1
 * ```
 */
export class ExadataInfrastructure extends pulumi.CustomResource {
    /**
     * Get an existing ExadataInfrastructure resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ExadataInfrastructureState, opts?: pulumi.CustomResourceOptions): ExadataInfrastructure {
        return new ExadataInfrastructure(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure:oracle/exadataInfrastructure:ExadataInfrastructure';

    /**
     * Returns true if the given object is an instance of ExadataInfrastructure.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ExadataInfrastructure {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ExadataInfrastructure.__pulumiType;
    }

    /**
     * The number of compute servers for the Cloud Exadata Infrastructure. Changing this forces a new Cloud Exadata Infrastructure to be created.
     */
    public readonly computeCount!: pulumi.Output<number>;
    /**
     * The email address used by Oracle to send notifications regarding databases and infrastructure. Changing this forces a new Cloud Exadata Infrastructure to be created.
     */
    public readonly customerContacts!: pulumi.Output<string[]>;
    /**
     * The user-friendly name for the Cloud Exadata Infrastructure resource. The name does not need to be unique. Changing this forces a new Cloud Exadata Infrastructure to be created.
     */
    public readonly displayName!: pulumi.Output<string>;
    /**
     * The Azure Region where the Cloud Exadata Infrastructure should exist. Changing this forces a new Cloud Exadata Infrastructure to be created.
     */
    public readonly location!: pulumi.Output<string>;
    /**
     * One or more `maintenanceWindow` blocks as defined below. Changing this forces a new Cloud Exadata Infrastructure to be created.
     */
    public readonly maintenanceWindows!: pulumi.Output<outputs.oracle.ExadataInfrastructureMaintenanceWindow[]>;
    /**
     * The name which should be used for this Cloud Exadata Infrastructure. Changing this forces a new Cloud Exadata Infrastructure to be created.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The name of the Resource Group where the ODB@A Infrastructure should exist. Changing this forces a new Cloud Exadata Infrastructure to be created.
     */
    public readonly resourceGroupName!: pulumi.Output<string>;
    /**
     * The shape of the ODB@A infrastructure resource. Changing this forces a new Cloud Exadata Infrastructure to be created.
     */
    public readonly shape!: pulumi.Output<string>;
    /**
     * The number of storage servers for the Cloud Exadata Infrastructure. Changing this forces a new Cloud Exadata Infrastructure to be created.
     */
    public readonly storageCount!: pulumi.Output<number>;
    /**
     * A mapping of tags which should be assigned to the Cloud Exadata Infrastructure.
     */
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * Cloud Exadata Infrastructure zones. Changing this forces a new Cloud Exadata Infrastructure to be created.
     */
    public readonly zones!: pulumi.Output<string[]>;

    /**
     * Create a ExadataInfrastructure resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ExadataInfrastructureArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ExadataInfrastructureArgs | ExadataInfrastructureState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ExadataInfrastructureState | undefined;
            resourceInputs["computeCount"] = state ? state.computeCount : undefined;
            resourceInputs["customerContacts"] = state ? state.customerContacts : undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["location"] = state ? state.location : undefined;
            resourceInputs["maintenanceWindows"] = state ? state.maintenanceWindows : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["resourceGroupName"] = state ? state.resourceGroupName : undefined;
            resourceInputs["shape"] = state ? state.shape : undefined;
            resourceInputs["storageCount"] = state ? state.storageCount : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["zones"] = state ? state.zones : undefined;
        } else {
            const args = argsOrState as ExadataInfrastructureArgs | undefined;
            if ((!args || args.computeCount === undefined) && !opts.urn) {
                throw new Error("Missing required property 'computeCount'");
            }
            if ((!args || args.displayName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'displayName'");
            }
            if ((!args || args.resourceGroupName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            if ((!args || args.shape === undefined) && !opts.urn) {
                throw new Error("Missing required property 'shape'");
            }
            if ((!args || args.storageCount === undefined) && !opts.urn) {
                throw new Error("Missing required property 'storageCount'");
            }
            if ((!args || args.zones === undefined) && !opts.urn) {
                throw new Error("Missing required property 'zones'");
            }
            resourceInputs["computeCount"] = args ? args.computeCount : undefined;
            resourceInputs["customerContacts"] = args ? args.customerContacts : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["location"] = args ? args.location : undefined;
            resourceInputs["maintenanceWindows"] = args ? args.maintenanceWindows : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            resourceInputs["shape"] = args ? args.shape : undefined;
            resourceInputs["storageCount"] = args ? args.storageCount : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["zones"] = args ? args.zones : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ExadataInfrastructure.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ExadataInfrastructure resources.
 */
export interface ExadataInfrastructureState {
    /**
     * The number of compute servers for the Cloud Exadata Infrastructure. Changing this forces a new Cloud Exadata Infrastructure to be created.
     */
    computeCount?: pulumi.Input<number>;
    /**
     * The email address used by Oracle to send notifications regarding databases and infrastructure. Changing this forces a new Cloud Exadata Infrastructure to be created.
     */
    customerContacts?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The user-friendly name for the Cloud Exadata Infrastructure resource. The name does not need to be unique. Changing this forces a new Cloud Exadata Infrastructure to be created.
     */
    displayName?: pulumi.Input<string>;
    /**
     * The Azure Region where the Cloud Exadata Infrastructure should exist. Changing this forces a new Cloud Exadata Infrastructure to be created.
     */
    location?: pulumi.Input<string>;
    /**
     * One or more `maintenanceWindow` blocks as defined below. Changing this forces a new Cloud Exadata Infrastructure to be created.
     */
    maintenanceWindows?: pulumi.Input<pulumi.Input<inputs.oracle.ExadataInfrastructureMaintenanceWindow>[]>;
    /**
     * The name which should be used for this Cloud Exadata Infrastructure. Changing this forces a new Cloud Exadata Infrastructure to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * The name of the Resource Group where the ODB@A Infrastructure should exist. Changing this forces a new Cloud Exadata Infrastructure to be created.
     */
    resourceGroupName?: pulumi.Input<string>;
    /**
     * The shape of the ODB@A infrastructure resource. Changing this forces a new Cloud Exadata Infrastructure to be created.
     */
    shape?: pulumi.Input<string>;
    /**
     * The number of storage servers for the Cloud Exadata Infrastructure. Changing this forces a new Cloud Exadata Infrastructure to be created.
     */
    storageCount?: pulumi.Input<number>;
    /**
     * A mapping of tags which should be assigned to the Cloud Exadata Infrastructure.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Cloud Exadata Infrastructure zones. Changing this forces a new Cloud Exadata Infrastructure to be created.
     */
    zones?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * The set of arguments for constructing a ExadataInfrastructure resource.
 */
export interface ExadataInfrastructureArgs {
    /**
     * The number of compute servers for the Cloud Exadata Infrastructure. Changing this forces a new Cloud Exadata Infrastructure to be created.
     */
    computeCount: pulumi.Input<number>;
    /**
     * The email address used by Oracle to send notifications regarding databases and infrastructure. Changing this forces a new Cloud Exadata Infrastructure to be created.
     */
    customerContacts?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The user-friendly name for the Cloud Exadata Infrastructure resource. The name does not need to be unique. Changing this forces a new Cloud Exadata Infrastructure to be created.
     */
    displayName: pulumi.Input<string>;
    /**
     * The Azure Region where the Cloud Exadata Infrastructure should exist. Changing this forces a new Cloud Exadata Infrastructure to be created.
     */
    location?: pulumi.Input<string>;
    /**
     * One or more `maintenanceWindow` blocks as defined below. Changing this forces a new Cloud Exadata Infrastructure to be created.
     */
    maintenanceWindows?: pulumi.Input<pulumi.Input<inputs.oracle.ExadataInfrastructureMaintenanceWindow>[]>;
    /**
     * The name which should be used for this Cloud Exadata Infrastructure. Changing this forces a new Cloud Exadata Infrastructure to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * The name of the Resource Group where the ODB@A Infrastructure should exist. Changing this forces a new Cloud Exadata Infrastructure to be created.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * The shape of the ODB@A infrastructure resource. Changing this forces a new Cloud Exadata Infrastructure to be created.
     */
    shape: pulumi.Input<string>;
    /**
     * The number of storage servers for the Cloud Exadata Infrastructure. Changing this forces a new Cloud Exadata Infrastructure to be created.
     */
    storageCount: pulumi.Input<number>;
    /**
     * A mapping of tags which should be assigned to the Cloud Exadata Infrastructure.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Cloud Exadata Infrastructure zones. Changing this forces a new Cloud Exadata Infrastructure to be created.
     */
    zones: pulumi.Input<pulumi.Input<string>[]>;
}
