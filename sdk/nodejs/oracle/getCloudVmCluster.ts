// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Use this data source to access information about an existing Cloud VM Cluster.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = azure.oracle.getCloudVmCluster({
 *     name: "existing",
 *     resourceGroupName: "existing",
 * });
 * export const id = example.then(example => example.id);
 * ```
 */
export function getCloudVmCluster(args: GetCloudVmClusterArgs, opts?: pulumi.InvokeOptions): Promise<GetCloudVmClusterResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azure:oracle/getCloudVmCluster:getCloudVmCluster", {
        "name": args.name,
        "resourceGroupName": args.resourceGroupName,
    }, opts);
}

/**
 * A collection of arguments for invoking getCloudVmCluster.
 */
export interface GetCloudVmClusterArgs {
    /**
     * The name of this Cloud VM Cluster.
     */
    name: string;
    /**
     * The name of the Resource Group where the Cloud VM Cluster exists.
     */
    resourceGroupName: string;
}

/**
 * A collection of values returned by getCloudVmCluster.
 */
export interface GetCloudVmClusterResult {
    /**
     * Client OCI backup subnet CIDR, default is `192.168.252.0/22`.
     */
    readonly backupSubnetCidr: string;
    /**
     * The Cloud Exadata Infrastructure ID.
     */
    readonly cloudExadataInfrastructureId: string;
    /**
     * The cluster name for Cloud VM Cluster.
     */
    readonly clusterName: string;
    /**
     * The OCID of the compartment.
     */
    readonly compartmentId: string;
    /**
     * A `computeNodes` block as defined below.
     */
    readonly computeNodes: string[];
    /**
     * The number of CPU cores enabled on the Cloud VM Cluster.
     */
    readonly cpuCoreCount: number;
    /**
     * A `dataCollectionOptions` block as defined below.
     */
    readonly dataCollectionOptions: outputs.oracle.GetCloudVmClusterDataCollectionOption[];
    /**
     * The percentage assigned to DATA storage (user data and database files). The remaining percentage is assigned to RECO storage (database redo logs, archive logs, and recovery manager backups). Accepted values are `35`, `40`, `60`, and 80. The default is `80` percent assigned to DATA storage. See [Storage Configuration](https://docs.oracle.com/en-us/iaas/exadatacloud/index.html#Exadata) in the Exadata documentation for details on the impact of the configuration settings on storage.
     */
    readonly dataStoragePercentage: number;
    /**
     * The data disk group size to be allocated in TBs.
     */
    readonly dataStorageSizeInTbs: number;
    /**
     * The local node storage to be allocated in GBs.
     */
    readonly dbNodeStorageSizeInGbs: number;
    /**
     * A `dbServers` block as defined below.
     */
    readonly dbServers: string[];
    /**
     * The type of redundancy configured for the Cloud Vm Cluster. `NORMAL` is 2-way redundancy. `HIGH` is 3-way redundancy.
     */
    readonly diskRedundancy: string;
    /**
     * The user-friendly name for the Cloud VM Cluster. The name does not need to be unique.
     */
    readonly displayName: string;
    /**
     * The domain name for the Cloud VM Cluster.
     */
    readonly domain: string;
    /**
     * A valid Oracle Grid Infrastructure (GI) software version.
     */
    readonly giVersion: string;
    /**
     * The hostname for the Cloud VM Cluster without suffix.
     */
    readonly hostname: string;
    /**
     * The hostname for the Cloud VM Cluster with suffix.
     */
    readonly hostnameActual: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * A `iormConfigCache` block as defined below.
     */
    readonly iormConfigCaches: outputs.oracle.GetCloudVmClusterIormConfigCach[];
    /**
     * The [OCID](https://docs.oracle.com/en-us/iaas/Content/General/Concepts/identifiers.htm) of the last maintenance update history entry. This value is updated when a maintenance update starts.
     */
    readonly lastUpdateHistoryEntryId: string;
    /**
     * The Oracle license model that applies to the Cloud VM Cluster.
     */
    readonly licenseModel: string;
    /**
     * Additional information about the current `lifecycleState`.
     */
    readonly lifecycleDetails: string;
    /**
     * The current state of IORM configuration for the Exadata DB system.
     */
    readonly lifecycleState: string;
    /**
     * The port number configured for the listener on the Cloud VM Cluster.
     */
    readonly listenerPort: number;
    /**
     * If true, database backup on local Exadata storage is configured for the Cloud VM Cluster. If false, database backup on local Exadata storage is not available in the Cloud VM Cluster.
     */
    readonly localBackupEnabled: boolean;
    /**
     * The Azure Region where the Cloud VM Cluster exists.
     */
    readonly location: string;
    /**
     * The memory to be allocated in GBs.
     */
    readonly memorySizeInGbs: number;
    readonly name: string;
    /**
     * The number of nodes in the Cloud VM Cluster.
     */
    readonly nodeCount: number;
    /**
     * The list of [OCIDs](https://docs.oracle.com/en-us/iaas/Content/General/Concepts/identifiers.htm) for the network security groups (NSGs) to which this resource belongs. Setting this to an empty list removes all resources from all NSGs. For more information about NSGs, see [Security Rules](https://docs.oracle.com/en-us/iaas/Content/Network/Concepts/securityrules.htm). NsgIds restrictions:
     * * A network security group (NSG) is optional for Autonomous Databases with private access. The nsgIds list can be empty.
     */
    readonly nsgUrl: string;
    /**
     * The URL of the resource in the OCI console.
     */
    readonly ociUrl: string;
    /**
     * The [OCID](https://docs.oracle.com/en-us/iaas/Content/General/Concepts/identifiers.htm) of the Cloud VM Cluster.
     */
    readonly ocid: string;
    /**
     * The number of OCPU cores to enable on the Cloud VM Cluster. Only 1 decimal place is allowed for the fractional part.
     */
    readonly ocpuCount: number;
    readonly resourceGroupName: string;
    /**
     * The FQDN of the DNS record for the SCAN IP addresses that are associated with the Cloud VM Cluster.
     */
    readonly scanDnsName: string;
    /**
     * The [OCID](https://docs.oracle.com/en-us/iaas/Content/General/Concepts/identifiers.htm) of the DNS record for the SCAN IP addresses that are associated with the Cloud VM Cluster.
     */
    readonly scanDnsRecordId: string;
    /**
     * A `scanIpIds` block as defined below.
     */
    readonly scanIpIds: string[];
    /**
     * The TCP Single Client Access Name (SCAN) port. The default port is 1521.
     */
    readonly scanListenerPortTcp: number;
    /**
     * The TCPS Single Client Access Name (SCAN) port. The default port is 2484.
     */
    readonly scanListenerPortTcpSsl: number;
    /**
     * The model name of the Exadata hardware running the Cloud VM Cluster.
     */
    readonly shape: string;
    /**
     * If true, sparse disk group is configured for the Cloud VM Cluster. If false, sparse disk group is not created.
     */
    readonly sparseDiskgroupEnabled: boolean;
    /**
     * The public key portion of one or more key pairs used for SSH access to the Cloud VM Cluster.
     */
    readonly sshPublicKeys: string[];
    /**
     * The storage allocation for the disk group, in gigabytes (GB).
     */
    readonly storageSizeInGbs: number;
    /**
     * The ID of the Azure Resource Manager subnet resource.
     */
    readonly subnetId: string;
    /**
     * The [OCID](https://docs.oracle.com/en-us/iaas/Content/General/Concepts/identifiers.htm) of the subnet associated with the Cloud VM Cluster.
     */
    readonly subnetOcid: string;
    /**
     * Operating system version of the image.
     */
    readonly systemVersion: string;
    /**
     * A mapping of tags assigned to the Cloud VM Cluster.
     */
    readonly tags: {[key: string]: string};
    /**
     * The date and time that the Cloud VM Cluster was created.
     */
    readonly timeCreated: string;
    /**
     * The time zone of the Cloud VM Cluster. For details, see [Exadata Infrastructure Time Zones](https://docs.oracle.com/en-us/iaas/base-database/doc/manage-time-zone.html).
     */
    readonly timeZone: string;
    /**
     * The [OCID](https://docs.oracle.com/en-us/iaas/Content/General/Concepts/identifiers.htm) of the virtual IP (VIP) addresses associated with the Cloud VM Cluster. The Cluster Ready Services (CRS) creates and maintains one VIP address for each node in the Exadata Cloud Service instance to enable failover. If one node fails, the VIP is reassigned to another active node in the Cluster.
     */
    readonly vipOds: string[];
    /**
     * The ID to an Azure Resource Manager Virtual Network resource.
     */
    readonly virtualNetworkId: string;
    /**
     * The [OCID](https://docs.oracle.com/en-us/iaas/Content/General/Concepts/identifiers.htm) of the zone the Cloud VM Cluster is associated with.
     */
    readonly zoneId: string;
}
/**
 * Use this data source to access information about an existing Cloud VM Cluster.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = azure.oracle.getCloudVmCluster({
 *     name: "existing",
 *     resourceGroupName: "existing",
 * });
 * export const id = example.then(example => example.id);
 * ```
 */
export function getCloudVmClusterOutput(args: GetCloudVmClusterOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetCloudVmClusterResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("azure:oracle/getCloudVmCluster:getCloudVmCluster", {
        "name": args.name,
        "resourceGroupName": args.resourceGroupName,
    }, opts);
}

/**
 * A collection of arguments for invoking getCloudVmCluster.
 */
export interface GetCloudVmClusterOutputArgs {
    /**
     * The name of this Cloud VM Cluster.
     */
    name: pulumi.Input<string>;
    /**
     * The name of the Resource Group where the Cloud VM Cluster exists.
     */
    resourceGroupName: pulumi.Input<string>;
}
