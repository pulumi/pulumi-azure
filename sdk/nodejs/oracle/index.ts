// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { CloudVmClusterArgs, CloudVmClusterState } from "./cloudVmCluster";
export type CloudVmCluster = import("./cloudVmCluster").CloudVmCluster;
export const CloudVmCluster: typeof import("./cloudVmCluster").CloudVmCluster = null as any;
utilities.lazyLoad(exports, ["CloudVmCluster"], () => require("./cloudVmCluster"));

export { ExadataInfrastructureArgs, ExadataInfrastructureState } from "./exadataInfrastructure";
export type ExadataInfrastructure = import("./exadataInfrastructure").ExadataInfrastructure;
export const ExadataInfrastructure: typeof import("./exadataInfrastructure").ExadataInfrastructure = null as any;
utilities.lazyLoad(exports, ["ExadataInfrastructure"], () => require("./exadataInfrastructure"));

export { GetCloudVmClusterArgs, GetCloudVmClusterResult, GetCloudVmClusterOutputArgs } from "./getCloudVmCluster";
export const getCloudVmCluster: typeof import("./getCloudVmCluster").getCloudVmCluster = null as any;
export const getCloudVmClusterOutput: typeof import("./getCloudVmCluster").getCloudVmClusterOutput = null as any;
utilities.lazyLoad(exports, ["getCloudVmCluster","getCloudVmClusterOutput"], () => require("./getCloudVmCluster"));

export { GetDbServersArgs, GetDbServersResult, GetDbServersOutputArgs } from "./getDbServers";
export const getDbServers: typeof import("./getDbServers").getDbServers = null as any;
export const getDbServersOutput: typeof import("./getDbServers").getDbServersOutput = null as any;
utilities.lazyLoad(exports, ["getDbServers","getDbServersOutput"], () => require("./getDbServers"));

export { GetExadataInfrastructureArgs, GetExadataInfrastructureResult, GetExadataInfrastructureOutputArgs } from "./getExadataInfrastructure";
export const getExadataInfrastructure: typeof import("./getExadataInfrastructure").getExadataInfrastructure = null as any;
export const getExadataInfrastructureOutput: typeof import("./getExadataInfrastructure").getExadataInfrastructureOutput = null as any;
utilities.lazyLoad(exports, ["getExadataInfrastructure","getExadataInfrastructureOutput"], () => require("./getExadataInfrastructure"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "azure:oracle/cloudVmCluster:CloudVmCluster":
                return new CloudVmCluster(name, <any>undefined, { urn })
            case "azure:oracle/exadataInfrastructure:ExadataInfrastructure":
                return new ExadataInfrastructure(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure", "oracle/cloudVmCluster", _module)
pulumi.runtime.registerResourceModule("azure", "oracle/exadataInfrastructure", _module)
