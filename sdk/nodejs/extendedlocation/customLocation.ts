// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Manages a Custom Location within an Extended Location.
 *
 * > **Note:** Installing and configuring the Azure Arc Agent on your Kubernetes Cluster to establish connectivity is outside the scope of this document. For more details refer to [Deploy agents to your cluster](https://learn.microsoft.com/en-us/azure/azure-arc/kubernetes/conceptual-agent-overview#deploy-agents-to-your-cluster) and [Connect an existing Kubernetes Cluster](https://learn.microsoft.com/en-us/azure/azure-arc/kubernetes/quickstart-connect-cluster?tabs=azure-cli#connect-an-existing-kubernetes-cluster). If you encounter issues connecting your Kubernetes Cluster to Azure Arc, we'd recommend opening a ticket with Microsoft Support.
 *
 * ## Import
 *
 * Custom Locations can be imported using the resource id, e.g.
 *
 * ```sh
 * $ pulumi import azure:extendedlocation/customLocation:CustomLocation example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/example-resources/providers/Microsoft.ExtendedLocation/customLocations/example-custom-location
 * ```
 */
export class CustomLocation extends pulumi.CustomResource {
    /**
     * Get an existing CustomLocation resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CustomLocationState, opts?: pulumi.CustomResourceOptions): CustomLocation {
        return new CustomLocation(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure:extendedlocation/customLocation:CustomLocation';

    /**
     * Returns true if the given object is an instance of CustomLocation.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CustomLocation {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CustomLocation.__pulumiType;
    }

    /**
     * An `authentication` block as defined below.
     */
    public readonly authentication!: pulumi.Output<outputs.extendedlocation.CustomLocationAuthentication | undefined>;
    /**
     * Specifies the list of Cluster Extension IDs.
     */
    public readonly clusterExtensionIds!: pulumi.Output<string[]>;
    /**
     * Specifies the display name of the Custom Location.
     */
    public readonly displayName!: pulumi.Output<string | undefined>;
    /**
     * Specifies the host resource ID.
     */
    public readonly hostResourceId!: pulumi.Output<string>;
    /**
     * Specifies the host type of the Custom Location. The only possible values is `KubernetesCluster`.
     */
    public readonly hostType!: pulumi.Output<string | undefined>;
    /**
     * Specifies the Azure location where the Custom Location should exist. Changing this forces a new Custom Location to be created.
     */
    public readonly location!: pulumi.Output<string>;
    /**
     * Specifies the name which should be used for this Custom Location. Changing this forces a new Custom Location to be created.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Specifies the namespace of the Custom Location. Changing this forces a new Custom Location to be created.
     */
    public readonly namespace!: pulumi.Output<string>;
    /**
     * Specifies the name of the Resource Group where the Custom Location should exist. Changing this forces a new Custom Location to be created.
     */
    public readonly resourceGroupName!: pulumi.Output<string>;

    /**
     * Create a CustomLocation resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CustomLocationArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CustomLocationArgs | CustomLocationState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as CustomLocationState | undefined;
            resourceInputs["authentication"] = state ? state.authentication : undefined;
            resourceInputs["clusterExtensionIds"] = state ? state.clusterExtensionIds : undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["hostResourceId"] = state ? state.hostResourceId : undefined;
            resourceInputs["hostType"] = state ? state.hostType : undefined;
            resourceInputs["location"] = state ? state.location : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["namespace"] = state ? state.namespace : undefined;
            resourceInputs["resourceGroupName"] = state ? state.resourceGroupName : undefined;
        } else {
            const args = argsOrState as CustomLocationArgs | undefined;
            if ((!args || args.clusterExtensionIds === undefined) && !opts.urn) {
                throw new Error("Missing required property 'clusterExtensionIds'");
            }
            if ((!args || args.hostResourceId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'hostResourceId'");
            }
            if ((!args || args.namespace === undefined) && !opts.urn) {
                throw new Error("Missing required property 'namespace'");
            }
            if ((!args || args.resourceGroupName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            resourceInputs["authentication"] = args ? args.authentication : undefined;
            resourceInputs["clusterExtensionIds"] = args ? args.clusterExtensionIds : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["hostResourceId"] = args ? args.hostResourceId : undefined;
            resourceInputs["hostType"] = args ? args.hostType : undefined;
            resourceInputs["location"] = args ? args.location : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["namespace"] = args ? args.namespace : undefined;
            resourceInputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(CustomLocation.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering CustomLocation resources.
 */
export interface CustomLocationState {
    /**
     * An `authentication` block as defined below.
     */
    authentication?: pulumi.Input<inputs.extendedlocation.CustomLocationAuthentication>;
    /**
     * Specifies the list of Cluster Extension IDs.
     */
    clusterExtensionIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies the display name of the Custom Location.
     */
    displayName?: pulumi.Input<string>;
    /**
     * Specifies the host resource ID.
     */
    hostResourceId?: pulumi.Input<string>;
    /**
     * Specifies the host type of the Custom Location. The only possible values is `KubernetesCluster`.
     */
    hostType?: pulumi.Input<string>;
    /**
     * Specifies the Azure location where the Custom Location should exist. Changing this forces a new Custom Location to be created.
     */
    location?: pulumi.Input<string>;
    /**
     * Specifies the name which should be used for this Custom Location. Changing this forces a new Custom Location to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * Specifies the namespace of the Custom Location. Changing this forces a new Custom Location to be created.
     */
    namespace?: pulumi.Input<string>;
    /**
     * Specifies the name of the Resource Group where the Custom Location should exist. Changing this forces a new Custom Location to be created.
     */
    resourceGroupName?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a CustomLocation resource.
 */
export interface CustomLocationArgs {
    /**
     * An `authentication` block as defined below.
     */
    authentication?: pulumi.Input<inputs.extendedlocation.CustomLocationAuthentication>;
    /**
     * Specifies the list of Cluster Extension IDs.
     */
    clusterExtensionIds: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies the display name of the Custom Location.
     */
    displayName?: pulumi.Input<string>;
    /**
     * Specifies the host resource ID.
     */
    hostResourceId: pulumi.Input<string>;
    /**
     * Specifies the host type of the Custom Location. The only possible values is `KubernetesCluster`.
     */
    hostType?: pulumi.Input<string>;
    /**
     * Specifies the Azure location where the Custom Location should exist. Changing this forces a new Custom Location to be created.
     */
    location?: pulumi.Input<string>;
    /**
     * Specifies the name which should be used for this Custom Location. Changing this forces a new Custom Location to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * Specifies the namespace of the Custom Location. Changing this forces a new Custom Location to be created.
     */
    namespace: pulumi.Input<string>;
    /**
     * Specifies the name of the Resource Group where the Custom Location should exist. Changing this forces a new Custom Location to be created.
     */
    resourceGroupName: pulumi.Input<string>;
}
