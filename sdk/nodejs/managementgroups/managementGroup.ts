// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Manages a Management Group.
 */
export class ManagementGroup extends pulumi.CustomResource {
    /**
     * Get an existing ManagementGroup resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ManagementGroupState): ManagementGroup {
        return new ManagementGroup(name, <any>state, { id });
    }

    /**
     * A friendly name for this Management Group. If not specified, this'll be the same as the `group_id`.
     */
    public readonly displayName: pulumi.Output<string>;
    /**
     * The UUID for this Management Group, which needs to be unique across your tenant - which will be generated if not provided. Changing this forces a new resource to be created.
     */
    public readonly groupId: pulumi.Output<string>;
    /**
     * The ID of the Parent Management Group. Changing this forces a new resource to be created.
     */
    public readonly parentManagementGroupId: pulumi.Output<string>;
    /**
     * A list of Subscription ID's which should be assigned to the Management Group.
     */
    public readonly subscriptionIds: pulumi.Output<string[] | undefined>;

    /**
     * Create a ManagementGroup resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: ManagementGroupArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ManagementGroupArgs | ManagementGroupState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        if (opts && opts.id) {
            const state: ManagementGroupState = argsOrState as ManagementGroupState | undefined;
            inputs["displayName"] = state ? state.displayName : undefined;
            inputs["groupId"] = state ? state.groupId : undefined;
            inputs["parentManagementGroupId"] = state ? state.parentManagementGroupId : undefined;
            inputs["subscriptionIds"] = state ? state.subscriptionIds : undefined;
        } else {
            const args = argsOrState as ManagementGroupArgs | undefined;
            inputs["displayName"] = args ? args.displayName : undefined;
            inputs["groupId"] = args ? args.groupId : undefined;
            inputs["parentManagementGroupId"] = args ? args.parentManagementGroupId : undefined;
            inputs["subscriptionIds"] = args ? args.subscriptionIds : undefined;
        }
        super("azure:managementgroups/managementGroup:ManagementGroup", name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ManagementGroup resources.
 */
export interface ManagementGroupState {
    /**
     * A friendly name for this Management Group. If not specified, this'll be the same as the `group_id`.
     */
    readonly displayName?: pulumi.Input<string>;
    /**
     * The UUID for this Management Group, which needs to be unique across your tenant - which will be generated if not provided. Changing this forces a new resource to be created.
     */
    readonly groupId?: pulumi.Input<string>;
    /**
     * The ID of the Parent Management Group. Changing this forces a new resource to be created.
     */
    readonly parentManagementGroupId?: pulumi.Input<string>;
    /**
     * A list of Subscription ID's which should be assigned to the Management Group.
     */
    readonly subscriptionIds?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * The set of arguments for constructing a ManagementGroup resource.
 */
export interface ManagementGroupArgs {
    /**
     * A friendly name for this Management Group. If not specified, this'll be the same as the `group_id`.
     */
    readonly displayName?: pulumi.Input<string>;
    /**
     * The UUID for this Management Group, which needs to be unique across your tenant - which will be generated if not provided. Changing this forces a new resource to be created.
     */
    readonly groupId?: pulumi.Input<string>;
    /**
     * The ID of the Parent Management Group. Changing this forces a new resource to be created.
     */
    readonly parentManagementGroupId?: pulumi.Input<string>;
    /**
     * A list of Subscription ID's which should be assigned to the Management Group.
     */
    readonly subscriptionIds?: pulumi.Input<pulumi.Input<string>[]>;
}
