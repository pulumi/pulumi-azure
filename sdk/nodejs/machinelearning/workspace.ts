// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const current = azure.core.getClientConfig({});
 * const exampleResourceGroup = new azure.core.ResourceGroup("exampleResourceGroup", {location: "West Europe"});
 * const exampleInsights = new azure.appinsights.Insights("exampleInsights", {
 *     location: exampleResourceGroup.location,
 *     resourceGroupName: exampleResourceGroup.name,
 *     applicationType: "web",
 * });
 * const exampleKeyVault = new azure.keyvault.KeyVault("exampleKeyVault", {
 *     location: exampleResourceGroup.location,
 *     resourceGroupName: exampleResourceGroup.name,
 *     tenantId: current.then(current => current.tenantId),
 *     skuName: "premium",
 * });
 * const exampleAccount = new azure.storage.Account("exampleAccount", {
 *     location: exampleResourceGroup.location,
 *     resourceGroupName: exampleResourceGroup.name,
 *     accountTier: "Standard",
 *     accountReplicationType: "GRS",
 * });
 * const exampleWorkspace = new azure.machinelearning.Workspace("exampleWorkspace", {
 *     location: exampleResourceGroup.location,
 *     resourceGroupName: exampleResourceGroup.name,
 *     applicationInsightsId: exampleInsights.id,
 *     keyVaultId: exampleKeyVault.id,
 *     storageAccountId: exampleAccount.id,
 *     identity: {
 *         type: "SystemAssigned",
 *     },
 * });
 * ```
 * ### With Data Encryption
 *
 * > **NOTE:** The Key Vault must enable purge protection.
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const current = azure.core.getClientConfig({});
 * const exampleResourceGroup = new azure.core.ResourceGroup("exampleResourceGroup", {location: "West Europe"});
 * const exampleInsights = new azure.appinsights.Insights("exampleInsights", {
 *     location: exampleResourceGroup.location,
 *     resourceGroupName: exampleResourceGroup.name,
 *     applicationType: "web",
 * });
 * const exampleKeyVault = new azure.keyvault.KeyVault("exampleKeyVault", {
 *     location: exampleResourceGroup.location,
 *     resourceGroupName: exampleResourceGroup.name,
 *     tenantId: current.then(current => current.tenantId),
 *     skuName: "premium",
 *     purgeProtectionEnabled: true,
 * });
 * const exampleAccessPolicy = new azure.keyvault.AccessPolicy("exampleAccessPolicy", {
 *     keyVaultId: exampleKeyVault.id,
 *     tenantId: current.then(current => current.tenantId),
 *     objectId: current.then(current => current.objectId),
 *     keyPermissions: [
 *         "Create",
 *         "Get",
 *         "Delete",
 *         "Purge",
 *         "GetRotationPolicy",
 *     ],
 * });
 * const exampleAccount = new azure.storage.Account("exampleAccount", {
 *     location: exampleResourceGroup.location,
 *     resourceGroupName: exampleResourceGroup.name,
 *     accountTier: "Standard",
 *     accountReplicationType: "GRS",
 * });
 * const exampleKey = new azure.keyvault.Key("exampleKey", {
 *     keyVaultId: exampleKeyVault.id,
 *     keyType: "RSA",
 *     keySize: 2048,
 *     keyOpts: [
 *         "decrypt",
 *         "encrypt",
 *         "sign",
 *         "unwrapKey",
 *         "verify",
 *         "wrapKey",
 *     ],
 * }, {
 *     dependsOn: [
 *         exampleKeyVault,
 *         exampleAccessPolicy,
 *     ],
 * });
 * const exampleWorkspace = new azure.machinelearning.Workspace("exampleWorkspace", {
 *     location: exampleResourceGroup.location,
 *     resourceGroupName: exampleResourceGroup.name,
 *     applicationInsightsId: exampleInsights.id,
 *     keyVaultId: exampleKeyVault.id,
 *     storageAccountId: exampleAccount.id,
 *     identity: {
 *         type: "SystemAssigned",
 *     },
 *     encryption: {
 *         keyVaultId: exampleKeyVault.id,
 *         keyId: exampleKey.id,
 *     },
 * });
 * ```
 * ### With User Assigned Identity And Data Encryption
 *
 * > **NOTE:** The Key Vault must enable purge protection.
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 * import * as azuread from "@pulumi/azuread";
 *
 * const current = azure.core.getClientConfig({});
 * const exampleResourceGroup = new azure.core.ResourceGroup("exampleResourceGroup", {location: "West Europe"});
 * const exampleInsights = new azure.appinsights.Insights("exampleInsights", {
 *     location: exampleResourceGroup.location,
 *     resourceGroupName: exampleResourceGroup.name,
 *     applicationType: "web",
 * });
 * const exampleAccount = new azure.storage.Account("exampleAccount", {
 *     location: exampleResourceGroup.location,
 *     resourceGroupName: exampleResourceGroup.name,
 *     accountTier: "Standard",
 *     accountReplicationType: "GRS",
 * });
 * const exampleKeyVault = new azure.keyvault.KeyVault("exampleKeyVault", {
 *     location: exampleResourceGroup.location,
 *     resourceGroupName: exampleResourceGroup.name,
 *     tenantId: current.then(current => current.tenantId),
 *     skuName: "premium",
 *     purgeProtectionEnabled: true,
 * });
 * const exampleUserAssignedIdentity = new azure.authorization.UserAssignedIdentity("exampleUserAssignedIdentity", {
 *     location: exampleResourceGroup.location,
 *     resourceGroupName: exampleResourceGroup.name,
 * });
 * const example_identity = new azure.keyvault.AccessPolicy("example-identity", {
 *     keyVaultId: exampleKeyVault.id,
 *     tenantId: current.then(current => current.tenantId),
 *     objectId: exampleUserAssignedIdentity.principalId,
 *     keyPermissions: [
 *         "WrapKey",
 *         "UnwrapKey",
 *         "Get",
 *         "Recover",
 *     ],
 *     secretPermissions: [
 *         "Get",
 *         "List",
 *         "Set",
 *         "Delete",
 *         "Recover",
 *         "Backup",
 *         "Restore",
 *     ],
 * });
 * const example_sp = new azure.keyvault.AccessPolicy("example-sp", {
 *     keyVaultId: exampleKeyVault.id,
 *     tenantId: current.then(current => current.tenantId),
 *     objectId: current.then(current => current.objectId),
 *     keyPermissions: [
 *         "Get",
 *         "Create",
 *         "Recover",
 *         "Delete",
 *         "Purge",
 *         "GetRotationPolicy",
 *     ],
 * });
 * const test = azuread.getServicePrincipal({
 *     displayName: "Azure Cosmos DB",
 * });
 * const example_cosmosdb = new azure.keyvault.AccessPolicy("example-cosmosdb", {
 *     keyVaultId: exampleKeyVault.id,
 *     tenantId: current.then(current => current.tenantId),
 *     objectId: test.then(test => test.objectId),
 *     keyPermissions: [
 *         "Get",
 *         "Recover",
 *         "UnwrapKey",
 *         "WrapKey",
 *     ],
 * }, {
 *     dependsOn: [
 *         test,
 *         current,
 *     ],
 * });
 * const exampleKey = new azure.keyvault.Key("exampleKey", {
 *     keyVaultId: exampleKeyVault.id,
 *     keyType: "RSA",
 *     keySize: 2048,
 *     keyOpts: [
 *         "decrypt",
 *         "encrypt",
 *         "sign",
 *         "unwrapKey",
 *         "verify",
 *         "wrapKey",
 *     ],
 * }, {
 *     dependsOn: [
 *         exampleKeyVault,
 *         example_sp,
 *     ],
 * });
 * const example_role1 = new azure.authorization.Assignment("example-role1", {
 *     scope: exampleKeyVault.id,
 *     roleDefinitionName: "Contributor",
 *     principalId: exampleUserAssignedIdentity.principalId,
 * });
 * const example_role2 = new azure.authorization.Assignment("example-role2", {
 *     scope: exampleAccount.id,
 *     roleDefinitionName: "Storage Blob Data Contributor",
 *     principalId: exampleUserAssignedIdentity.principalId,
 * });
 * const example_role3 = new azure.authorization.Assignment("example-role3", {
 *     scope: exampleAccount.id,
 *     roleDefinitionName: "Contributor",
 *     principalId: exampleUserAssignedIdentity.principalId,
 * });
 * const example_role4 = new azure.authorization.Assignment("example-role4", {
 *     scope: exampleInsights.id,
 *     roleDefinitionName: "Contributor",
 *     principalId: exampleUserAssignedIdentity.principalId,
 * });
 * const exampleWorkspace = new azure.machinelearning.Workspace("exampleWorkspace", {
 *     location: exampleResourceGroup.location,
 *     resourceGroupName: exampleResourceGroup.name,
 *     applicationInsightsId: exampleInsights.id,
 *     keyVaultId: exampleKeyVault.id,
 *     storageAccountId: exampleAccount.id,
 *     highBusinessImpact: true,
 *     primaryUserAssignedIdentity: exampleUserAssignedIdentity.id,
 *     identity: {
 *         type: "UserAssigned",
 *         identityIds: [exampleUserAssignedIdentity.id],
 *     },
 *     encryption: {
 *         userAssignedIdentityId: exampleUserAssignedIdentity.id,
 *         keyVaultId: exampleKeyVault.id,
 *         keyId: exampleKey.id,
 *     },
 * }, {
 *     dependsOn: [
 *         example_role1,
 *         example_role2,
 *         example_role3,
 *         example_role4,
 *         example_cosmosdb,
 *     ],
 * });
 * ```
 *
 * ## Import
 *
 * Machine Learning Workspace can be imported using the `resource id`, e.g.
 *
 * ```sh
 *  $ pulumi import azure:machinelearning/workspace:Workspace example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.MachineLearningServices/workspaces/workspace1
 * ```
 */
export class Workspace extends pulumi.CustomResource {
    /**
     * Get an existing Workspace resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: WorkspaceState, opts?: pulumi.CustomResourceOptions): Workspace {
        return new Workspace(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure:machinelearning/workspace:Workspace';

    /**
     * Returns true if the given object is an instance of Workspace.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Workspace {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Workspace.__pulumiType;
    }

    /**
     * The ID of the Application Insights associated with this Machine Learning Workspace. Changing this forces a new resource to be created.
     */
    public readonly applicationInsightsId!: pulumi.Output<string>;
    /**
     * The ID of the container registry associated with this Machine Learning Workspace. Changing this forces a new resource to be created.
     *
     * > **NOTE:** The `adminEnabled` should be `true` in order to associate the Container Registry to this Machine Learning Workspace.
     */
    public readonly containerRegistryId!: pulumi.Output<string | undefined>;
    /**
     * The description of this Machine Learning Workspace.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * The url for the discovery service to identify regional endpoints for machine learning experimentation services.
     */
    public /*out*/ readonly discoveryUrl!: pulumi.Output<string>;
    /**
     * An `encryption` block as defined below. Changing this forces a new resource to be created.
     */
    public readonly encryption!: pulumi.Output<outputs.machinelearning.WorkspaceEncryption | undefined>;
    /**
     * Display name for this Machine Learning Workspace.
     */
    public readonly friendlyName!: pulumi.Output<string | undefined>;
    /**
     * Flag to signal High Business Impact (HBI) data in the workspace and reduce diagnostic data collected by the service
     */
    public readonly highBusinessImpact!: pulumi.Output<boolean | undefined>;
    /**
     * An `identity` block as defined below.
     */
    public readonly identity!: pulumi.Output<outputs.machinelearning.WorkspaceIdentity>;
    /**
     * The compute name for image build of the Machine Learning Workspace.
     */
    public readonly imageBuildComputeName!: pulumi.Output<string | undefined>;
    /**
     * The ID of key vault associated with this Machine Learning Workspace. Changing this forces a new resource to be created.
     */
    public readonly keyVaultId!: pulumi.Output<string>;
    /**
     * Specifies the supported Azure location where the Machine Learning Workspace should exist. Changing this forces a new resource to be created.
     */
    public readonly location!: pulumi.Output<string>;
    /**
     * Specifies the name of the Machine Learning Workspace. Changing this forces a new resource to be created.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The user assigned identity id that represents the workspace identity.
     */
    public readonly primaryUserAssignedIdentity!: pulumi.Output<string | undefined>;
    /**
     * Enable public access when this Machine Learning Workspace is behind a VNet. Changing this forces a new resource to be created.
     *
     * @deprecated `public_access_behind_virtual_network_enabled` will be removed in favour of the property `public_network_access_enabled` in version 4.0 of the AzureRM Provider.
     */
    public readonly publicAccessBehindVirtualNetworkEnabled!: pulumi.Output<boolean | undefined>;
    /**
     * Enable public access when this Machine Learning Workspace is behind VNet.
     *
     * > **NOTE:** `publicAccessBehindVirtualNetworkEnabled` is deprecated and will be removed in favour of the property `publicNetworkAccessEnabled`.
     */
    public readonly publicNetworkAccessEnabled!: pulumi.Output<boolean>;
    /**
     * Specifies the name of the Resource Group in which the Machine Learning Workspace should exist. Changing this forces a new resource to be created.
     */
    public readonly resourceGroupName!: pulumi.Output<string>;
    /**
     * SKU/edition of the Machine Learning Workspace, possible values are `Basic`. Defaults to `Basic`.
     */
    public readonly skuName!: pulumi.Output<string | undefined>;
    /**
     * The ID of the Storage Account associated with this Machine Learning Workspace. Changing this forces a new resource to be created.
     *
     * > **NOTE:** The `accountTier` cannot be `Premium` in order to associate the Storage Account to this Machine Learning Workspace.
     */
    public readonly storageAccountId!: pulumi.Output<string>;
    /**
     * A mapping of tags to assign to the resource.
     */
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * Enable V1 API features, enabling `v1LegacyMode` may prevent you from using features provided by the v2 API. Defaults to `false`.
     */
    public readonly v1LegacyModeEnabled!: pulumi.Output<boolean | undefined>;
    /**
     * The immutable id associated with this workspace.
     */
    public /*out*/ readonly workspaceId!: pulumi.Output<string>;

    /**
     * Create a Workspace resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: WorkspaceArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: WorkspaceArgs | WorkspaceState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as WorkspaceState | undefined;
            resourceInputs["applicationInsightsId"] = state ? state.applicationInsightsId : undefined;
            resourceInputs["containerRegistryId"] = state ? state.containerRegistryId : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["discoveryUrl"] = state ? state.discoveryUrl : undefined;
            resourceInputs["encryption"] = state ? state.encryption : undefined;
            resourceInputs["friendlyName"] = state ? state.friendlyName : undefined;
            resourceInputs["highBusinessImpact"] = state ? state.highBusinessImpact : undefined;
            resourceInputs["identity"] = state ? state.identity : undefined;
            resourceInputs["imageBuildComputeName"] = state ? state.imageBuildComputeName : undefined;
            resourceInputs["keyVaultId"] = state ? state.keyVaultId : undefined;
            resourceInputs["location"] = state ? state.location : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["primaryUserAssignedIdentity"] = state ? state.primaryUserAssignedIdentity : undefined;
            resourceInputs["publicAccessBehindVirtualNetworkEnabled"] = state ? state.publicAccessBehindVirtualNetworkEnabled : undefined;
            resourceInputs["publicNetworkAccessEnabled"] = state ? state.publicNetworkAccessEnabled : undefined;
            resourceInputs["resourceGroupName"] = state ? state.resourceGroupName : undefined;
            resourceInputs["skuName"] = state ? state.skuName : undefined;
            resourceInputs["storageAccountId"] = state ? state.storageAccountId : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["v1LegacyModeEnabled"] = state ? state.v1LegacyModeEnabled : undefined;
            resourceInputs["workspaceId"] = state ? state.workspaceId : undefined;
        } else {
            const args = argsOrState as WorkspaceArgs | undefined;
            if ((!args || args.applicationInsightsId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'applicationInsightsId'");
            }
            if ((!args || args.identity === undefined) && !opts.urn) {
                throw new Error("Missing required property 'identity'");
            }
            if ((!args || args.keyVaultId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'keyVaultId'");
            }
            if ((!args || args.resourceGroupName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            if ((!args || args.storageAccountId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'storageAccountId'");
            }
            resourceInputs["applicationInsightsId"] = args ? args.applicationInsightsId : undefined;
            resourceInputs["containerRegistryId"] = args ? args.containerRegistryId : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["encryption"] = args ? args.encryption : undefined;
            resourceInputs["friendlyName"] = args ? args.friendlyName : undefined;
            resourceInputs["highBusinessImpact"] = args ? args.highBusinessImpact : undefined;
            resourceInputs["identity"] = args ? args.identity : undefined;
            resourceInputs["imageBuildComputeName"] = args ? args.imageBuildComputeName : undefined;
            resourceInputs["keyVaultId"] = args ? args.keyVaultId : undefined;
            resourceInputs["location"] = args ? args.location : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["primaryUserAssignedIdentity"] = args ? args.primaryUserAssignedIdentity : undefined;
            resourceInputs["publicAccessBehindVirtualNetworkEnabled"] = args ? args.publicAccessBehindVirtualNetworkEnabled : undefined;
            resourceInputs["publicNetworkAccessEnabled"] = args ? args.publicNetworkAccessEnabled : undefined;
            resourceInputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            resourceInputs["skuName"] = args ? args.skuName : undefined;
            resourceInputs["storageAccountId"] = args ? args.storageAccountId : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["v1LegacyModeEnabled"] = args ? args.v1LegacyModeEnabled : undefined;
            resourceInputs["discoveryUrl"] = undefined /*out*/;
            resourceInputs["workspaceId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Workspace.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Workspace resources.
 */
export interface WorkspaceState {
    /**
     * The ID of the Application Insights associated with this Machine Learning Workspace. Changing this forces a new resource to be created.
     */
    applicationInsightsId?: pulumi.Input<string>;
    /**
     * The ID of the container registry associated with this Machine Learning Workspace. Changing this forces a new resource to be created.
     *
     * > **NOTE:** The `adminEnabled` should be `true` in order to associate the Container Registry to this Machine Learning Workspace.
     */
    containerRegistryId?: pulumi.Input<string>;
    /**
     * The description of this Machine Learning Workspace.
     */
    description?: pulumi.Input<string>;
    /**
     * The url for the discovery service to identify regional endpoints for machine learning experimentation services.
     */
    discoveryUrl?: pulumi.Input<string>;
    /**
     * An `encryption` block as defined below. Changing this forces a new resource to be created.
     */
    encryption?: pulumi.Input<inputs.machinelearning.WorkspaceEncryption>;
    /**
     * Display name for this Machine Learning Workspace.
     */
    friendlyName?: pulumi.Input<string>;
    /**
     * Flag to signal High Business Impact (HBI) data in the workspace and reduce diagnostic data collected by the service
     */
    highBusinessImpact?: pulumi.Input<boolean>;
    /**
     * An `identity` block as defined below.
     */
    identity?: pulumi.Input<inputs.machinelearning.WorkspaceIdentity>;
    /**
     * The compute name for image build of the Machine Learning Workspace.
     */
    imageBuildComputeName?: pulumi.Input<string>;
    /**
     * The ID of key vault associated with this Machine Learning Workspace. Changing this forces a new resource to be created.
     */
    keyVaultId?: pulumi.Input<string>;
    /**
     * Specifies the supported Azure location where the Machine Learning Workspace should exist. Changing this forces a new resource to be created.
     */
    location?: pulumi.Input<string>;
    /**
     * Specifies the name of the Machine Learning Workspace. Changing this forces a new resource to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * The user assigned identity id that represents the workspace identity.
     */
    primaryUserAssignedIdentity?: pulumi.Input<string>;
    /**
     * Enable public access when this Machine Learning Workspace is behind a VNet. Changing this forces a new resource to be created.
     *
     * @deprecated `public_access_behind_virtual_network_enabled` will be removed in favour of the property `public_network_access_enabled` in version 4.0 of the AzureRM Provider.
     */
    publicAccessBehindVirtualNetworkEnabled?: pulumi.Input<boolean>;
    /**
     * Enable public access when this Machine Learning Workspace is behind VNet.
     *
     * > **NOTE:** `publicAccessBehindVirtualNetworkEnabled` is deprecated and will be removed in favour of the property `publicNetworkAccessEnabled`.
     */
    publicNetworkAccessEnabled?: pulumi.Input<boolean>;
    /**
     * Specifies the name of the Resource Group in which the Machine Learning Workspace should exist. Changing this forces a new resource to be created.
     */
    resourceGroupName?: pulumi.Input<string>;
    /**
     * SKU/edition of the Machine Learning Workspace, possible values are `Basic`. Defaults to `Basic`.
     */
    skuName?: pulumi.Input<string>;
    /**
     * The ID of the Storage Account associated with this Machine Learning Workspace. Changing this forces a new resource to be created.
     *
     * > **NOTE:** The `accountTier` cannot be `Premium` in order to associate the Storage Account to this Machine Learning Workspace.
     */
    storageAccountId?: pulumi.Input<string>;
    /**
     * A mapping of tags to assign to the resource.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Enable V1 API features, enabling `v1LegacyMode` may prevent you from using features provided by the v2 API. Defaults to `false`.
     */
    v1LegacyModeEnabled?: pulumi.Input<boolean>;
    /**
     * The immutable id associated with this workspace.
     */
    workspaceId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Workspace resource.
 */
export interface WorkspaceArgs {
    /**
     * The ID of the Application Insights associated with this Machine Learning Workspace. Changing this forces a new resource to be created.
     */
    applicationInsightsId: pulumi.Input<string>;
    /**
     * The ID of the container registry associated with this Machine Learning Workspace. Changing this forces a new resource to be created.
     *
     * > **NOTE:** The `adminEnabled` should be `true` in order to associate the Container Registry to this Machine Learning Workspace.
     */
    containerRegistryId?: pulumi.Input<string>;
    /**
     * The description of this Machine Learning Workspace.
     */
    description?: pulumi.Input<string>;
    /**
     * An `encryption` block as defined below. Changing this forces a new resource to be created.
     */
    encryption?: pulumi.Input<inputs.machinelearning.WorkspaceEncryption>;
    /**
     * Display name for this Machine Learning Workspace.
     */
    friendlyName?: pulumi.Input<string>;
    /**
     * Flag to signal High Business Impact (HBI) data in the workspace and reduce diagnostic data collected by the service
     */
    highBusinessImpact?: pulumi.Input<boolean>;
    /**
     * An `identity` block as defined below.
     */
    identity: pulumi.Input<inputs.machinelearning.WorkspaceIdentity>;
    /**
     * The compute name for image build of the Machine Learning Workspace.
     */
    imageBuildComputeName?: pulumi.Input<string>;
    /**
     * The ID of key vault associated with this Machine Learning Workspace. Changing this forces a new resource to be created.
     */
    keyVaultId: pulumi.Input<string>;
    /**
     * Specifies the supported Azure location where the Machine Learning Workspace should exist. Changing this forces a new resource to be created.
     */
    location?: pulumi.Input<string>;
    /**
     * Specifies the name of the Machine Learning Workspace. Changing this forces a new resource to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * The user assigned identity id that represents the workspace identity.
     */
    primaryUserAssignedIdentity?: pulumi.Input<string>;
    /**
     * Enable public access when this Machine Learning Workspace is behind a VNet. Changing this forces a new resource to be created.
     *
     * @deprecated `public_access_behind_virtual_network_enabled` will be removed in favour of the property `public_network_access_enabled` in version 4.0 of the AzureRM Provider.
     */
    publicAccessBehindVirtualNetworkEnabled?: pulumi.Input<boolean>;
    /**
     * Enable public access when this Machine Learning Workspace is behind VNet.
     *
     * > **NOTE:** `publicAccessBehindVirtualNetworkEnabled` is deprecated and will be removed in favour of the property `publicNetworkAccessEnabled`.
     */
    publicNetworkAccessEnabled?: pulumi.Input<boolean>;
    /**
     * Specifies the name of the Resource Group in which the Machine Learning Workspace should exist. Changing this forces a new resource to be created.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * SKU/edition of the Machine Learning Workspace, possible values are `Basic`. Defaults to `Basic`.
     */
    skuName?: pulumi.Input<string>;
    /**
     * The ID of the Storage Account associated with this Machine Learning Workspace. Changing this forces a new resource to be created.
     *
     * > **NOTE:** The `accountTier` cannot be `Premium` in order to associate the Storage Account to this Machine Learning Workspace.
     */
    storageAccountId: pulumi.Input<string>;
    /**
     * A mapping of tags to assign to the resource.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Enable V1 API features, enabling `v1LegacyMode` may prevent you from using features provided by the v2 API. Defaults to `false`.
     */
    v1LegacyModeEnabled?: pulumi.Input<boolean>;
}
