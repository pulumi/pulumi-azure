// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Manages an Azure Cosmos DB for PostgreSQL Cluster.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = new azure.core.ResourceGroup("example", {
 *     name: "example-resources",
 *     location: "West Europe",
 * });
 * const examplePostgresqlCluster = new azure.cosmosdb.PostgresqlCluster("example", {
 *     name: "example-cluster",
 *     resourceGroupName: example.name,
 *     location: example.location,
 *     administratorLoginPassword: "H@Sh1CoR3!",
 *     coordinatorStorageQuotaInMb: 131072,
 *     coordinatorVcoreCount: 2,
 *     nodeCount: 0,
 * });
 * ```
 *
 * ## API Providers
 *
 * <!-- This section is generated, changes will be overwritten -->
 * This resource uses the following Azure API Providers:
 *
 * * `Microsoft.DBforPostgreSQL` - 2022-11-08
 *
 * ## Import
 *
 * Azure Cosmos DB for PostgreSQL Clusters can be imported using the `resource id`, e.g.
 *
 * ```sh
 * $ pulumi import azure:cosmosdb/postgresqlCluster:PostgresqlCluster example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resourceGroup1/providers/Microsoft.DBforPostgreSQL/serverGroupsv2/cluster1
 * ```
 */
export class PostgresqlCluster extends pulumi.CustomResource {
    /**
     * Get an existing PostgresqlCluster resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: PostgresqlClusterState, opts?: pulumi.CustomResourceOptions): PostgresqlCluster {
        return new PostgresqlCluster(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure:cosmosdb/postgresqlCluster:PostgresqlCluster';

    /**
     * Returns true if the given object is an instance of PostgresqlCluster.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is PostgresqlCluster {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === PostgresqlCluster.__pulumiType;
    }

    /**
     * The password of the administrator login. This is required when `sourceResourceId` is not set.
     */
    declare public readonly administratorLoginPassword: pulumi.Output<string | undefined>;
    /**
     * The citus extension version on the Azure Cosmos DB for PostgreSQL Cluster. Possible values are `8.3`, `9.0`, `9.1`, `9.2`, `9.3`, `9.4`, `9.5`, `10.0`, `10.1`, `10.2`, `11.0`, `11.1`, `11.2`, `11.3` and `12.1`.
     */
    declare public readonly citusVersion: pulumi.Output<string>;
    /**
     * Is public access enabled on coordinator? Defaults to `true`.
     */
    declare public readonly coordinatorPublicIpAccessEnabled: pulumi.Output<boolean | undefined>;
    /**
     * The edition of the coordinator server. Possible values are `BurstableGeneralPurpose`, `BurstableMemoryOptimized`, `GeneralPurpose` and `MemoryOptimized`. Defaults to `GeneralPurpose`.
     */
    declare public readonly coordinatorServerEdition: pulumi.Output<string | undefined>;
    /**
     * The coordinator storage allowed for the Azure Cosmos DB for PostgreSQL Cluster. Possible values are `32768`, `65536`, `131072`, `262144`, `524288`, `1048576`, `2097152`, `4194304`, `8388608`, `16777216`, and `33554432`.
     *
     * > **Note:** More information on [the types of compute resources available for CosmosDB can be found in the product documentation](https://learn.microsoft.com/azure/cosmos-db/postgresql/resources-compute)
     */
    declare public readonly coordinatorStorageQuotaInMb: pulumi.Output<number | undefined>;
    /**
     * The coordinator vCore count for the Azure Cosmos DB for PostgreSQL Cluster. Possible values are `1`, `2`, `4`, `8`, `16`, `32`, `64` and `96`.
     */
    declare public readonly coordinatorVcoreCount: pulumi.Output<number | undefined>;
    /**
     * The earliest restore point time (ISO8601 format) for the Azure Cosmos DB for PostgreSQL Cluster.
     */
    declare public /*out*/ readonly earliestRestoreTime: pulumi.Output<string>;
    /**
     * Is high availability enabled for the Azure Cosmos DB for PostgreSQL cluster? Defaults to `false`.
     */
    declare public readonly haEnabled: pulumi.Output<boolean | undefined>;
    /**
     * The Azure Region where the Azure Cosmos DB for PostgreSQL Cluster should exist. Changing this forces a new resource to be created.
     */
    declare public readonly location: pulumi.Output<string>;
    /**
     * A `maintenanceWindow` block as defined below.
     */
    declare public readonly maintenanceWindow: pulumi.Output<outputs.cosmosdb.PostgresqlClusterMaintenanceWindow | undefined>;
    /**
     * The name which should be used for this Azure Cosmos DB for PostgreSQL Cluster. Changing this forces a new resource to be created.
     */
    declare public readonly name: pulumi.Output<string>;
    /**
     * The worker node count of the Azure Cosmos DB for PostgreSQL Cluster. Possible value is between `0` and `20` except `1`.
     */
    declare public readonly nodeCount: pulumi.Output<number>;
    /**
     * Is public access enabled on worker nodes. Defaults to `false`.
     */
    declare public readonly nodePublicIpAccessEnabled: pulumi.Output<boolean | undefined>;
    /**
     * The edition of the node server. Possible values are `BurstableGeneralPurpose`, `BurstableMemoryOptimized`, `GeneralPurpose` and `MemoryOptimized`. Defaults to `MemoryOptimized`.
     */
    declare public readonly nodeServerEdition: pulumi.Output<string | undefined>;
    /**
     * The storage quota in MB on each worker node. Possible values are `32768`, `65536`, `131072`, `262144`, `524288`, `1048576`, `2097152`, `4194304`, `8388608` and `16777216`.
     */
    declare public readonly nodeStorageQuotaInMb: pulumi.Output<number>;
    /**
     * The vCores count on each worker node. Possible values are `1`, `2`, `4`, `8`, `16`, `32`, `64`, `96` and `104`.
     */
    declare public readonly nodeVcores: pulumi.Output<number>;
    /**
     * The date and time in UTC (ISO8601 format) for the Azure Cosmos DB for PostgreSQL cluster restore. Changing this forces a new resource to be created.
     */
    declare public readonly pointInTimeInUtc: pulumi.Output<string | undefined>;
    /**
     * The preferred primary availability zone for the Azure Cosmos DB for PostgreSQL cluster.
     */
    declare public readonly preferredPrimaryZone: pulumi.Output<string | undefined>;
    /**
     * The name of the Resource Group where the Azure Cosmos DB for PostgreSQL Cluster should exist. Changing this forces a new resource to be created.
     */
    declare public readonly resourceGroupName: pulumi.Output<string>;
    /**
     * A `servers` block as defined below.
     */
    declare public /*out*/ readonly servers: pulumi.Output<outputs.cosmosdb.PostgresqlClusterServer[]>;
    /**
     * Is shards on coordinator enabled for the Azure Cosmos DB for PostgreSQL cluster.
     */
    declare public readonly shardsOnCoordinatorEnabled: pulumi.Output<boolean>;
    /**
     * The Azure region of the source Azure Cosmos DB for PostgreSQL cluster for read replica clusters. Changing this forces a new resource to be created.
     */
    declare public readonly sourceLocation: pulumi.Output<string | undefined>;
    /**
     * The resource ID of the source Azure Cosmos DB for PostgreSQL cluster for read replica clusters. Changing this forces a new resource to be created.
     */
    declare public readonly sourceResourceId: pulumi.Output<string | undefined>;
    /**
     * The major PostgreSQL version on the Azure Cosmos DB for PostgreSQL cluster. Possible values are `11`, `12`, `13`, `14`, `15` and `16`.
     */
    declare public readonly sqlVersion: pulumi.Output<string>;
    /**
     * A mapping of tags which should be assigned to the Azure Cosmos DB for PostgreSQL Cluster.
     */
    declare public readonly tags: pulumi.Output<{[key: string]: string} | undefined>;

    /**
     * Create a PostgresqlCluster resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: PostgresqlClusterArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: PostgresqlClusterArgs | PostgresqlClusterState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as PostgresqlClusterState | undefined;
            resourceInputs["administratorLoginPassword"] = state?.administratorLoginPassword;
            resourceInputs["citusVersion"] = state?.citusVersion;
            resourceInputs["coordinatorPublicIpAccessEnabled"] = state?.coordinatorPublicIpAccessEnabled;
            resourceInputs["coordinatorServerEdition"] = state?.coordinatorServerEdition;
            resourceInputs["coordinatorStorageQuotaInMb"] = state?.coordinatorStorageQuotaInMb;
            resourceInputs["coordinatorVcoreCount"] = state?.coordinatorVcoreCount;
            resourceInputs["earliestRestoreTime"] = state?.earliestRestoreTime;
            resourceInputs["haEnabled"] = state?.haEnabled;
            resourceInputs["location"] = state?.location;
            resourceInputs["maintenanceWindow"] = state?.maintenanceWindow;
            resourceInputs["name"] = state?.name;
            resourceInputs["nodeCount"] = state?.nodeCount;
            resourceInputs["nodePublicIpAccessEnabled"] = state?.nodePublicIpAccessEnabled;
            resourceInputs["nodeServerEdition"] = state?.nodeServerEdition;
            resourceInputs["nodeStorageQuotaInMb"] = state?.nodeStorageQuotaInMb;
            resourceInputs["nodeVcores"] = state?.nodeVcores;
            resourceInputs["pointInTimeInUtc"] = state?.pointInTimeInUtc;
            resourceInputs["preferredPrimaryZone"] = state?.preferredPrimaryZone;
            resourceInputs["resourceGroupName"] = state?.resourceGroupName;
            resourceInputs["servers"] = state?.servers;
            resourceInputs["shardsOnCoordinatorEnabled"] = state?.shardsOnCoordinatorEnabled;
            resourceInputs["sourceLocation"] = state?.sourceLocation;
            resourceInputs["sourceResourceId"] = state?.sourceResourceId;
            resourceInputs["sqlVersion"] = state?.sqlVersion;
            resourceInputs["tags"] = state?.tags;
        } else {
            const args = argsOrState as PostgresqlClusterArgs | undefined;
            if (args?.nodeCount === undefined && !opts.urn) {
                throw new Error("Missing required property 'nodeCount'");
            }
            if (args?.resourceGroupName === undefined && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            resourceInputs["administratorLoginPassword"] = args?.administratorLoginPassword ? pulumi.secret(args.administratorLoginPassword) : undefined;
            resourceInputs["citusVersion"] = args?.citusVersion;
            resourceInputs["coordinatorPublicIpAccessEnabled"] = args?.coordinatorPublicIpAccessEnabled;
            resourceInputs["coordinatorServerEdition"] = args?.coordinatorServerEdition;
            resourceInputs["coordinatorStorageQuotaInMb"] = args?.coordinatorStorageQuotaInMb;
            resourceInputs["coordinatorVcoreCount"] = args?.coordinatorVcoreCount;
            resourceInputs["haEnabled"] = args?.haEnabled;
            resourceInputs["location"] = args?.location;
            resourceInputs["maintenanceWindow"] = args?.maintenanceWindow;
            resourceInputs["name"] = args?.name;
            resourceInputs["nodeCount"] = args?.nodeCount;
            resourceInputs["nodePublicIpAccessEnabled"] = args?.nodePublicIpAccessEnabled;
            resourceInputs["nodeServerEdition"] = args?.nodeServerEdition;
            resourceInputs["nodeStorageQuotaInMb"] = args?.nodeStorageQuotaInMb;
            resourceInputs["nodeVcores"] = args?.nodeVcores;
            resourceInputs["pointInTimeInUtc"] = args?.pointInTimeInUtc;
            resourceInputs["preferredPrimaryZone"] = args?.preferredPrimaryZone;
            resourceInputs["resourceGroupName"] = args?.resourceGroupName;
            resourceInputs["shardsOnCoordinatorEnabled"] = args?.shardsOnCoordinatorEnabled;
            resourceInputs["sourceLocation"] = args?.sourceLocation;
            resourceInputs["sourceResourceId"] = args?.sourceResourceId;
            resourceInputs["sqlVersion"] = args?.sqlVersion;
            resourceInputs["tags"] = args?.tags;
            resourceInputs["earliestRestoreTime"] = undefined /*out*/;
            resourceInputs["servers"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["administratorLoginPassword"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(PostgresqlCluster.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering PostgresqlCluster resources.
 */
export interface PostgresqlClusterState {
    /**
     * The password of the administrator login. This is required when `sourceResourceId` is not set.
     */
    administratorLoginPassword?: pulumi.Input<string>;
    /**
     * The citus extension version on the Azure Cosmos DB for PostgreSQL Cluster. Possible values are `8.3`, `9.0`, `9.1`, `9.2`, `9.3`, `9.4`, `9.5`, `10.0`, `10.1`, `10.2`, `11.0`, `11.1`, `11.2`, `11.3` and `12.1`.
     */
    citusVersion?: pulumi.Input<string>;
    /**
     * Is public access enabled on coordinator? Defaults to `true`.
     */
    coordinatorPublicIpAccessEnabled?: pulumi.Input<boolean>;
    /**
     * The edition of the coordinator server. Possible values are `BurstableGeneralPurpose`, `BurstableMemoryOptimized`, `GeneralPurpose` and `MemoryOptimized`. Defaults to `GeneralPurpose`.
     */
    coordinatorServerEdition?: pulumi.Input<string>;
    /**
     * The coordinator storage allowed for the Azure Cosmos DB for PostgreSQL Cluster. Possible values are `32768`, `65536`, `131072`, `262144`, `524288`, `1048576`, `2097152`, `4194304`, `8388608`, `16777216`, and `33554432`.
     *
     * > **Note:** More information on [the types of compute resources available for CosmosDB can be found in the product documentation](https://learn.microsoft.com/azure/cosmos-db/postgresql/resources-compute)
     */
    coordinatorStorageQuotaInMb?: pulumi.Input<number>;
    /**
     * The coordinator vCore count for the Azure Cosmos DB for PostgreSQL Cluster. Possible values are `1`, `2`, `4`, `8`, `16`, `32`, `64` and `96`.
     */
    coordinatorVcoreCount?: pulumi.Input<number>;
    /**
     * The earliest restore point time (ISO8601 format) for the Azure Cosmos DB for PostgreSQL Cluster.
     */
    earliestRestoreTime?: pulumi.Input<string>;
    /**
     * Is high availability enabled for the Azure Cosmos DB for PostgreSQL cluster? Defaults to `false`.
     */
    haEnabled?: pulumi.Input<boolean>;
    /**
     * The Azure Region where the Azure Cosmos DB for PostgreSQL Cluster should exist. Changing this forces a new resource to be created.
     */
    location?: pulumi.Input<string>;
    /**
     * A `maintenanceWindow` block as defined below.
     */
    maintenanceWindow?: pulumi.Input<inputs.cosmosdb.PostgresqlClusterMaintenanceWindow>;
    /**
     * The name which should be used for this Azure Cosmos DB for PostgreSQL Cluster. Changing this forces a new resource to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * The worker node count of the Azure Cosmos DB for PostgreSQL Cluster. Possible value is between `0` and `20` except `1`.
     */
    nodeCount?: pulumi.Input<number>;
    /**
     * Is public access enabled on worker nodes. Defaults to `false`.
     */
    nodePublicIpAccessEnabled?: pulumi.Input<boolean>;
    /**
     * The edition of the node server. Possible values are `BurstableGeneralPurpose`, `BurstableMemoryOptimized`, `GeneralPurpose` and `MemoryOptimized`. Defaults to `MemoryOptimized`.
     */
    nodeServerEdition?: pulumi.Input<string>;
    /**
     * The storage quota in MB on each worker node. Possible values are `32768`, `65536`, `131072`, `262144`, `524288`, `1048576`, `2097152`, `4194304`, `8388608` and `16777216`.
     */
    nodeStorageQuotaInMb?: pulumi.Input<number>;
    /**
     * The vCores count on each worker node. Possible values are `1`, `2`, `4`, `8`, `16`, `32`, `64`, `96` and `104`.
     */
    nodeVcores?: pulumi.Input<number>;
    /**
     * The date and time in UTC (ISO8601 format) for the Azure Cosmos DB for PostgreSQL cluster restore. Changing this forces a new resource to be created.
     */
    pointInTimeInUtc?: pulumi.Input<string>;
    /**
     * The preferred primary availability zone for the Azure Cosmos DB for PostgreSQL cluster.
     */
    preferredPrimaryZone?: pulumi.Input<string>;
    /**
     * The name of the Resource Group where the Azure Cosmos DB for PostgreSQL Cluster should exist. Changing this forces a new resource to be created.
     */
    resourceGroupName?: pulumi.Input<string>;
    /**
     * A `servers` block as defined below.
     */
    servers?: pulumi.Input<pulumi.Input<inputs.cosmosdb.PostgresqlClusterServer>[]>;
    /**
     * Is shards on coordinator enabled for the Azure Cosmos DB for PostgreSQL cluster.
     */
    shardsOnCoordinatorEnabled?: pulumi.Input<boolean>;
    /**
     * The Azure region of the source Azure Cosmos DB for PostgreSQL cluster for read replica clusters. Changing this forces a new resource to be created.
     */
    sourceLocation?: pulumi.Input<string>;
    /**
     * The resource ID of the source Azure Cosmos DB for PostgreSQL cluster for read replica clusters. Changing this forces a new resource to be created.
     */
    sourceResourceId?: pulumi.Input<string>;
    /**
     * The major PostgreSQL version on the Azure Cosmos DB for PostgreSQL cluster. Possible values are `11`, `12`, `13`, `14`, `15` and `16`.
     */
    sqlVersion?: pulumi.Input<string>;
    /**
     * A mapping of tags which should be assigned to the Azure Cosmos DB for PostgreSQL Cluster.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

/**
 * The set of arguments for constructing a PostgresqlCluster resource.
 */
export interface PostgresqlClusterArgs {
    /**
     * The password of the administrator login. This is required when `sourceResourceId` is not set.
     */
    administratorLoginPassword?: pulumi.Input<string>;
    /**
     * The citus extension version on the Azure Cosmos DB for PostgreSQL Cluster. Possible values are `8.3`, `9.0`, `9.1`, `9.2`, `9.3`, `9.4`, `9.5`, `10.0`, `10.1`, `10.2`, `11.0`, `11.1`, `11.2`, `11.3` and `12.1`.
     */
    citusVersion?: pulumi.Input<string>;
    /**
     * Is public access enabled on coordinator? Defaults to `true`.
     */
    coordinatorPublicIpAccessEnabled?: pulumi.Input<boolean>;
    /**
     * The edition of the coordinator server. Possible values are `BurstableGeneralPurpose`, `BurstableMemoryOptimized`, `GeneralPurpose` and `MemoryOptimized`. Defaults to `GeneralPurpose`.
     */
    coordinatorServerEdition?: pulumi.Input<string>;
    /**
     * The coordinator storage allowed for the Azure Cosmos DB for PostgreSQL Cluster. Possible values are `32768`, `65536`, `131072`, `262144`, `524288`, `1048576`, `2097152`, `4194304`, `8388608`, `16777216`, and `33554432`.
     *
     * > **Note:** More information on [the types of compute resources available for CosmosDB can be found in the product documentation](https://learn.microsoft.com/azure/cosmos-db/postgresql/resources-compute)
     */
    coordinatorStorageQuotaInMb?: pulumi.Input<number>;
    /**
     * The coordinator vCore count for the Azure Cosmos DB for PostgreSQL Cluster. Possible values are `1`, `2`, `4`, `8`, `16`, `32`, `64` and `96`.
     */
    coordinatorVcoreCount?: pulumi.Input<number>;
    /**
     * Is high availability enabled for the Azure Cosmos DB for PostgreSQL cluster? Defaults to `false`.
     */
    haEnabled?: pulumi.Input<boolean>;
    /**
     * The Azure Region where the Azure Cosmos DB for PostgreSQL Cluster should exist. Changing this forces a new resource to be created.
     */
    location?: pulumi.Input<string>;
    /**
     * A `maintenanceWindow` block as defined below.
     */
    maintenanceWindow?: pulumi.Input<inputs.cosmosdb.PostgresqlClusterMaintenanceWindow>;
    /**
     * The name which should be used for this Azure Cosmos DB for PostgreSQL Cluster. Changing this forces a new resource to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * The worker node count of the Azure Cosmos DB for PostgreSQL Cluster. Possible value is between `0` and `20` except `1`.
     */
    nodeCount: pulumi.Input<number>;
    /**
     * Is public access enabled on worker nodes. Defaults to `false`.
     */
    nodePublicIpAccessEnabled?: pulumi.Input<boolean>;
    /**
     * The edition of the node server. Possible values are `BurstableGeneralPurpose`, `BurstableMemoryOptimized`, `GeneralPurpose` and `MemoryOptimized`. Defaults to `MemoryOptimized`.
     */
    nodeServerEdition?: pulumi.Input<string>;
    /**
     * The storage quota in MB on each worker node. Possible values are `32768`, `65536`, `131072`, `262144`, `524288`, `1048576`, `2097152`, `4194304`, `8388608` and `16777216`.
     */
    nodeStorageQuotaInMb?: pulumi.Input<number>;
    /**
     * The vCores count on each worker node. Possible values are `1`, `2`, `4`, `8`, `16`, `32`, `64`, `96` and `104`.
     */
    nodeVcores?: pulumi.Input<number>;
    /**
     * The date and time in UTC (ISO8601 format) for the Azure Cosmos DB for PostgreSQL cluster restore. Changing this forces a new resource to be created.
     */
    pointInTimeInUtc?: pulumi.Input<string>;
    /**
     * The preferred primary availability zone for the Azure Cosmos DB for PostgreSQL cluster.
     */
    preferredPrimaryZone?: pulumi.Input<string>;
    /**
     * The name of the Resource Group where the Azure Cosmos DB for PostgreSQL Cluster should exist. Changing this forces a new resource to be created.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * Is shards on coordinator enabled for the Azure Cosmos DB for PostgreSQL cluster.
     */
    shardsOnCoordinatorEnabled?: pulumi.Input<boolean>;
    /**
     * The Azure region of the source Azure Cosmos DB for PostgreSQL cluster for read replica clusters. Changing this forces a new resource to be created.
     */
    sourceLocation?: pulumi.Input<string>;
    /**
     * The resource ID of the source Azure Cosmos DB for PostgreSQL cluster for read replica clusters. Changing this forces a new resource to be created.
     */
    sourceResourceId?: pulumi.Input<string>;
    /**
     * The major PostgreSQL version on the Azure Cosmos DB for PostgreSQL cluster. Possible values are `11`, `12`, `13`, `14`, `15` and `16`.
     */
    sqlVersion?: pulumi.Input<string>;
    /**
     * A mapping of tags which should be assigned to the Azure Cosmos DB for PostgreSQL Cluster.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
