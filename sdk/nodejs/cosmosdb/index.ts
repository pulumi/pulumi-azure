// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export * from "./account";
export * from "./cassandraCluster";
export * from "./cassandraDatacenter";
export * from "./cassandraKeyspace";
export * from "./cassandraTable";
export * from "./getAccount";
export * from "./getMongoDatabase";
export * from "./getRestorableDatabaseAccounts";
export * from "./gremlinDatabase";
export * from "./gremlinGraph";
export * from "./mongoCollection";
export * from "./mongoDatabase";
export * from "./notebookWorkspace";
export * from "./sqlContainer";
export * from "./sqlDatabase";
export * from "./sqlDedicatedGateway";
export * from "./sqlFunction";
export * from "./sqlRoleAssignment";
export * from "./sqlRoleDefinition";
export * from "./sqlStoredProcedure";
export * from "./sqlTrigger";
export * from "./table";
export * from "./zMixins";

// Import resources to register:
import { Account } from "./account";
import { CassandraCluster } from "./cassandraCluster";
import { CassandraDatacenter } from "./cassandraDatacenter";
import { CassandraKeyspace } from "./cassandraKeyspace";
import { CassandraTable } from "./cassandraTable";
import { GremlinDatabase } from "./gremlinDatabase";
import { GremlinGraph } from "./gremlinGraph";
import { MongoCollection } from "./mongoCollection";
import { MongoDatabase } from "./mongoDatabase";
import { NotebookWorkspace } from "./notebookWorkspace";
import { SqlContainer } from "./sqlContainer";
import { SqlDatabase } from "./sqlDatabase";
import { SqlDedicatedGateway } from "./sqlDedicatedGateway";
import { SqlFunction } from "./sqlFunction";
import { SqlRoleAssignment } from "./sqlRoleAssignment";
import { SqlRoleDefinition } from "./sqlRoleDefinition";
import { SqlStoredProcedure } from "./sqlStoredProcedure";
import { SqlTrigger } from "./sqlTrigger";
import { Table } from "./table";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "azure:cosmosdb/account:Account":
                return new Account(name, <any>undefined, { urn })
            case "azure:cosmosdb/cassandraCluster:CassandraCluster":
                return new CassandraCluster(name, <any>undefined, { urn })
            case "azure:cosmosdb/cassandraDatacenter:CassandraDatacenter":
                return new CassandraDatacenter(name, <any>undefined, { urn })
            case "azure:cosmosdb/cassandraKeyspace:CassandraKeyspace":
                return new CassandraKeyspace(name, <any>undefined, { urn })
            case "azure:cosmosdb/cassandraTable:CassandraTable":
                return new CassandraTable(name, <any>undefined, { urn })
            case "azure:cosmosdb/gremlinDatabase:GremlinDatabase":
                return new GremlinDatabase(name, <any>undefined, { urn })
            case "azure:cosmosdb/gremlinGraph:GremlinGraph":
                return new GremlinGraph(name, <any>undefined, { urn })
            case "azure:cosmosdb/mongoCollection:MongoCollection":
                return new MongoCollection(name, <any>undefined, { urn })
            case "azure:cosmosdb/mongoDatabase:MongoDatabase":
                return new MongoDatabase(name, <any>undefined, { urn })
            case "azure:cosmosdb/notebookWorkspace:NotebookWorkspace":
                return new NotebookWorkspace(name, <any>undefined, { urn })
            case "azure:cosmosdb/sqlContainer:SqlContainer":
                return new SqlContainer(name, <any>undefined, { urn })
            case "azure:cosmosdb/sqlDatabase:SqlDatabase":
                return new SqlDatabase(name, <any>undefined, { urn })
            case "azure:cosmosdb/sqlDedicatedGateway:SqlDedicatedGateway":
                return new SqlDedicatedGateway(name, <any>undefined, { urn })
            case "azure:cosmosdb/sqlFunction:SqlFunction":
                return new SqlFunction(name, <any>undefined, { urn })
            case "azure:cosmosdb/sqlRoleAssignment:SqlRoleAssignment":
                return new SqlRoleAssignment(name, <any>undefined, { urn })
            case "azure:cosmosdb/sqlRoleDefinition:SqlRoleDefinition":
                return new SqlRoleDefinition(name, <any>undefined, { urn })
            case "azure:cosmosdb/sqlStoredProcedure:SqlStoredProcedure":
                return new SqlStoredProcedure(name, <any>undefined, { urn })
            case "azure:cosmosdb/sqlTrigger:SqlTrigger":
                return new SqlTrigger(name, <any>undefined, { urn })
            case "azure:cosmosdb/table:Table":
                return new Table(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure", "cosmosdb/account", _module)
pulumi.runtime.registerResourceModule("azure", "cosmosdb/cassandraCluster", _module)
pulumi.runtime.registerResourceModule("azure", "cosmosdb/cassandraDatacenter", _module)
pulumi.runtime.registerResourceModule("azure", "cosmosdb/cassandraKeyspace", _module)
pulumi.runtime.registerResourceModule("azure", "cosmosdb/cassandraTable", _module)
pulumi.runtime.registerResourceModule("azure", "cosmosdb/gremlinDatabase", _module)
pulumi.runtime.registerResourceModule("azure", "cosmosdb/gremlinGraph", _module)
pulumi.runtime.registerResourceModule("azure", "cosmosdb/mongoCollection", _module)
pulumi.runtime.registerResourceModule("azure", "cosmosdb/mongoDatabase", _module)
pulumi.runtime.registerResourceModule("azure", "cosmosdb/notebookWorkspace", _module)
pulumi.runtime.registerResourceModule("azure", "cosmosdb/sqlContainer", _module)
pulumi.runtime.registerResourceModule("azure", "cosmosdb/sqlDatabase", _module)
pulumi.runtime.registerResourceModule("azure", "cosmosdb/sqlDedicatedGateway", _module)
pulumi.runtime.registerResourceModule("azure", "cosmosdb/sqlFunction", _module)
pulumi.runtime.registerResourceModule("azure", "cosmosdb/sqlRoleAssignment", _module)
pulumi.runtime.registerResourceModule("azure", "cosmosdb/sqlRoleDefinition", _module)
pulumi.runtime.registerResourceModule("azure", "cosmosdb/sqlStoredProcedure", _module)
pulumi.runtime.registerResourceModule("azure", "cosmosdb/sqlTrigger", _module)
pulumi.runtime.registerResourceModule("azure", "cosmosdb/table", _module)
