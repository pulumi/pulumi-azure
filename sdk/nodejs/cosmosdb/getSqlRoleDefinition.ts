// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Use this data source to access information about an existing Cosmos DB SQL Role Definition.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = azure.cosmosdb.getSqlRoleDefinition({
 *     accountName: "tfex-cosmosdb-sql-role-definition-account-name",
 *     resourceGroupName: "tfex-cosmosdb-sql-role-definition-rg",
 *     roleDefinitionId: "00000000-0000-0000-0000-000000000000",
 * });
 * ```
 */
export function getSqlRoleDefinition(args: GetSqlRoleDefinitionArgs, opts?: pulumi.InvokeOptions): Promise<GetSqlRoleDefinitionResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azure:cosmosdb/getSqlRoleDefinition:getSqlRoleDefinition", {
        "accountName": args.accountName,
        "resourceGroupName": args.resourceGroupName,
        "roleDefinitionId": args.roleDefinitionId,
    }, opts);
}

/**
 * A collection of arguments for invoking getSqlRoleDefinition.
 */
export interface GetSqlRoleDefinitionArgs {
    /**
     * The name of the Cosmos DB Account.
     */
    accountName: string;
    /**
     * The name of the Resource Group in which the Cosmos DB SQL Role Definition is created.
     */
    resourceGroupName: string;
    /**
     * The GUID as the name of the Cosmos DB SQL Role Definition.
     */
    roleDefinitionId: string;
}

/**
 * A collection of values returned by getSqlRoleDefinition.
 */
export interface GetSqlRoleDefinitionResult {
    readonly accountName: string;
    /**
     * A list of fully qualified scopes at or below which Role Assignments may be created using this Cosmos DB SQL Role Definition.
     */
    readonly assignableScopes: string[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The role name of the Cosmos DB SQL Role Definition.
     */
    readonly name: string;
    /**
     * A `permissions` block as defined below.
     */
    readonly permissions: outputs.cosmosdb.GetSqlRoleDefinitionPermission[];
    readonly resourceGroupName: string;
    readonly roleDefinitionId: string;
    /**
     * The type of the Cosmos DB SQL Role Definition.
     */
    readonly type: string;
}
/**
 * Use this data source to access information about an existing Cosmos DB SQL Role Definition.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = azure.cosmosdb.getSqlRoleDefinition({
 *     accountName: "tfex-cosmosdb-sql-role-definition-account-name",
 *     resourceGroupName: "tfex-cosmosdb-sql-role-definition-rg",
 *     roleDefinitionId: "00000000-0000-0000-0000-000000000000",
 * });
 * ```
 */
export function getSqlRoleDefinitionOutput(args: GetSqlRoleDefinitionOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSqlRoleDefinitionResult> {
    return pulumi.output(args).apply((a: any) => getSqlRoleDefinition(a, opts))
}

/**
 * A collection of arguments for invoking getSqlRoleDefinition.
 */
export interface GetSqlRoleDefinitionOutputArgs {
    /**
     * The name of the Cosmos DB Account.
     */
    accountName: pulumi.Input<string>;
    /**
     * The name of the Resource Group in which the Cosmos DB SQL Role Definition is created.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * The GUID as the name of the Cosmos DB SQL Role Definition.
     */
    roleDefinitionId: pulumi.Input<string>;
}
