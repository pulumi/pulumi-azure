// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Manages a SQL Dedicated Gateway within a Cosmos DB Account.
 *
 * ## Import
 *
 * CosmosDB SQL Dedicated Gateways can be imported using the `resource id`, e.g.
 *
 * ```sh
 *  $ pulumi import azure:cosmosdb/sqlDedicatedGateway:SqlDedicatedGateway example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resourceGroup1/providers/Microsoft.DocumentDB/databaseAccounts/account1/services/SqlDedicatedGateway
 * ```
 */
export class SqlDedicatedGateway extends pulumi.CustomResource {
    /**
     * Get an existing SqlDedicatedGateway resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SqlDedicatedGatewayState, opts?: pulumi.CustomResourceOptions): SqlDedicatedGateway {
        return new SqlDedicatedGateway(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure:cosmosdb/sqlDedicatedGateway:SqlDedicatedGateway';

    /**
     * Returns true if the given object is an instance of SqlDedicatedGateway.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SqlDedicatedGateway {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SqlDedicatedGateway.__pulumiType;
    }

    /**
     * The resource ID of the CosmosDB Account. Changing this forces a new resource to be created.
     */
    public readonly cosmosdbAccountId!: pulumi.Output<string>;
    /**
     * The instance count for the CosmosDB SQL Dedicated Gateway. Possible value is between `1` and `5`.
     */
    public readonly instanceCount!: pulumi.Output<number>;
    /**
     * The instance size for the CosmosDB SQL Dedicated Gateway. Changing this forces a new resource to be created. Possible values are `Cosmos.D4s`, `Cosmos.D8s` and `Cosmos.D16s`.
     */
    public readonly instanceSize!: pulumi.Output<string>;

    /**
     * Create a SqlDedicatedGateway resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SqlDedicatedGatewayArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SqlDedicatedGatewayArgs | SqlDedicatedGatewayState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SqlDedicatedGatewayState | undefined;
            resourceInputs["cosmosdbAccountId"] = state ? state.cosmosdbAccountId : undefined;
            resourceInputs["instanceCount"] = state ? state.instanceCount : undefined;
            resourceInputs["instanceSize"] = state ? state.instanceSize : undefined;
        } else {
            const args = argsOrState as SqlDedicatedGatewayArgs | undefined;
            if ((!args || args.cosmosdbAccountId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'cosmosdbAccountId'");
            }
            if ((!args || args.instanceCount === undefined) && !opts.urn) {
                throw new Error("Missing required property 'instanceCount'");
            }
            if ((!args || args.instanceSize === undefined) && !opts.urn) {
                throw new Error("Missing required property 'instanceSize'");
            }
            resourceInputs["cosmosdbAccountId"] = args ? args.cosmosdbAccountId : undefined;
            resourceInputs["instanceCount"] = args ? args.instanceCount : undefined;
            resourceInputs["instanceSize"] = args ? args.instanceSize : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SqlDedicatedGateway.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering SqlDedicatedGateway resources.
 */
export interface SqlDedicatedGatewayState {
    /**
     * The resource ID of the CosmosDB Account. Changing this forces a new resource to be created.
     */
    cosmosdbAccountId?: pulumi.Input<string>;
    /**
     * The instance count for the CosmosDB SQL Dedicated Gateway. Possible value is between `1` and `5`.
     */
    instanceCount?: pulumi.Input<number>;
    /**
     * The instance size for the CosmosDB SQL Dedicated Gateway. Changing this forces a new resource to be created. Possible values are `Cosmos.D4s`, `Cosmos.D8s` and `Cosmos.D16s`.
     */
    instanceSize?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a SqlDedicatedGateway resource.
 */
export interface SqlDedicatedGatewayArgs {
    /**
     * The resource ID of the CosmosDB Account. Changing this forces a new resource to be created.
     */
    cosmosdbAccountId: pulumi.Input<string>;
    /**
     * The instance count for the CosmosDB SQL Dedicated Gateway. Possible value is between `1` and `5`.
     */
    instanceCount: pulumi.Input<number>;
    /**
     * The instance size for the CosmosDB SQL Dedicated Gateway. Changing this forces a new resource to be created. Possible values are `Cosmos.D4s`, `Cosmos.D8s` and `Cosmos.D16s`.
     */
    instanceSize: pulumi.Input<string>;
}
