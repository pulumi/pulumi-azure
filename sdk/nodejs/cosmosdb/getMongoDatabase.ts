// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Use this data source to access information about an existing Cosmos DB Mongo Database.
 */
export function getMongoDatabase(args: GetMongoDatabaseArgs, opts?: pulumi.InvokeOptions): Promise<GetMongoDatabaseResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azure:cosmosdb/getMongoDatabase:getMongoDatabase", {
        "accountName": args.accountName,
        "name": args.name,
        "resourceGroupName": args.resourceGroupName,
    }, opts);
}

/**
 * A collection of arguments for invoking getMongoDatabase.
 */
export interface GetMongoDatabaseArgs {
    /**
     * The name of the Cosmos DB Account where the Mongo Database exists.
     */
    accountName: string;
    /**
     * The name of this Cosmos DB Mongo Database.
     */
    name: string;
    /**
     * The name of the Resource Group where the Cosmos DB Mongo Database exists.
     */
    resourceGroupName: string;
}

/**
 * A collection of values returned by getMongoDatabase.
 */
export interface GetMongoDatabaseResult {
    readonly accountName: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly name: string;
    readonly resourceGroupName: string;
    /**
     * A mapping of tags assigned to the Cosmos DB Mongo Database.
     */
    readonly tags: {[key: string]: string};
}
/**
 * Use this data source to access information about an existing Cosmos DB Mongo Database.
 */
export function getMongoDatabaseOutput(args: GetMongoDatabaseOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetMongoDatabaseResult> {
    return pulumi.output(args).apply((a: any) => getMongoDatabase(a, opts))
}

/**
 * A collection of arguments for invoking getMongoDatabase.
 */
export interface GetMongoDatabaseOutputArgs {
    /**
     * The name of the Cosmos DB Account where the Mongo Database exists.
     */
    accountName: pulumi.Input<string>;
    /**
     * The name of this Cosmos DB Mongo Database.
     */
    name: pulumi.Input<string>;
    /**
     * The name of the Resource Group where the Cosmos DB Mongo Database exists.
     */
    resourceGroupName: pulumi.Input<string>;
}
