// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Use this data source to access information about an existing CosmosDB SQL Database.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = azure.cosmosdb.getSqlDatabase({
 *     accountName: "tfex-cosmosdb-sql-database-account-name",
 *     name: "tfex-cosmosdb-sql-database",
 *     resourceGroupName: "tfex-cosmosdb-sql-database-rg",
 * });
 * ```
 */
export function getSqlDatabase(args: GetSqlDatabaseArgs, opts?: pulumi.InvokeOptions): Promise<GetSqlDatabaseResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azure:cosmosdb/getSqlDatabase:getSqlDatabase", {
        "accountName": args.accountName,
        "name": args.name,
        "resourceGroupName": args.resourceGroupName,
    }, opts);
}

/**
 * A collection of arguments for invoking getSqlDatabase.
 */
export interface GetSqlDatabaseArgs {
    /**
     * The name of the Cosmos DB SQL Database to create the table within.
     */
    accountName: string;
    /**
     * Specifies the name of the Cosmos DB SQL Database.
     */
    name: string;
    /**
     * The name of the resource group in which the Cosmos DB SQL Database is created.
     */
    resourceGroupName: string;
}

/**
 * A collection of values returned by getSqlDatabase.
 */
export interface GetSqlDatabaseResult {
    readonly accountName: string;
    /**
     * An `autoscaleSettings` block as defined below.
     */
    readonly autoscaleSettings: outputs.cosmosdb.GetSqlDatabaseAutoscaleSetting[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly name: string;
    readonly resourceGroupName: string;
    readonly throughput: number;
}
/**
 * Use this data source to access information about an existing CosmosDB SQL Database.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = azure.cosmosdb.getSqlDatabase({
 *     accountName: "tfex-cosmosdb-sql-database-account-name",
 *     name: "tfex-cosmosdb-sql-database",
 *     resourceGroupName: "tfex-cosmosdb-sql-database-rg",
 * });
 * ```
 */
export function getSqlDatabaseOutput(args: GetSqlDatabaseOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSqlDatabaseResult> {
    return pulumi.output(args).apply((a: any) => getSqlDatabase(a, opts))
}

/**
 * A collection of arguments for invoking getSqlDatabase.
 */
export interface GetSqlDatabaseOutputArgs {
    /**
     * The name of the Cosmos DB SQL Database to create the table within.
     */
    accountName: pulumi.Input<string>;
    /**
     * Specifies the name of the Cosmos DB SQL Database.
     */
    name: pulumi.Input<string>;
    /**
     * The name of the resource group in which the Cosmos DB SQL Database is created.
     */
    resourceGroupName: pulumi.Input<string>;
}
