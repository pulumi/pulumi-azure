// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Manages a Virtual Desktop Scaling Plan Host Pool Association.
 *
 * ## Import
 *
 * Associations between Virtual Desktop Scaling Plans and Virtual Desktop Host Pools can be imported using the `resource id`, e.g.
 *
 * ```sh
 * $ pulumi import azure:desktopvirtualization/scalingPlanHostPoolAssociation:ScalingPlanHostPoolAssociation example "/subscriptions/12345678-1234-9876-4563-123456789012/resourceGroups/resGroup1/providers/Microsoft.DesktopVirtualization/scalingPlans/plan1|/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myGroup1/providers/Microsoft.DesktopVirtualization/hostPools/myhostpool"
 * ```
 */
export class ScalingPlanHostPoolAssociation extends pulumi.CustomResource {
    /**
     * Get an existing ScalingPlanHostPoolAssociation resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ScalingPlanHostPoolAssociationState, opts?: pulumi.CustomResourceOptions): ScalingPlanHostPoolAssociation {
        return new ScalingPlanHostPoolAssociation(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure:desktopvirtualization/scalingPlanHostPoolAssociation:ScalingPlanHostPoolAssociation';

    /**
     * Returns true if the given object is an instance of ScalingPlanHostPoolAssociation.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ScalingPlanHostPoolAssociation {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ScalingPlanHostPoolAssociation.__pulumiType;
    }

    /**
     * Should the Scaling Plan be enabled on this Host Pool.
     */
    public readonly enabled!: pulumi.Output<boolean>;
    /**
     * The resource ID for the Virtual Desktop Host Pool. Changing this forces a new resource to be created.
     */
    public readonly hostPoolId!: pulumi.Output<string>;
    /**
     * The resource ID for the Virtual Desktop Scaling Plan. Changing this forces a new resource to be created.
     */
    public readonly scalingPlanId!: pulumi.Output<string>;

    /**
     * Create a ScalingPlanHostPoolAssociation resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ScalingPlanHostPoolAssociationArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ScalingPlanHostPoolAssociationArgs | ScalingPlanHostPoolAssociationState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ScalingPlanHostPoolAssociationState | undefined;
            resourceInputs["enabled"] = state ? state.enabled : undefined;
            resourceInputs["hostPoolId"] = state ? state.hostPoolId : undefined;
            resourceInputs["scalingPlanId"] = state ? state.scalingPlanId : undefined;
        } else {
            const args = argsOrState as ScalingPlanHostPoolAssociationArgs | undefined;
            if ((!args || args.enabled === undefined) && !opts.urn) {
                throw new Error("Missing required property 'enabled'");
            }
            if ((!args || args.hostPoolId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'hostPoolId'");
            }
            if ((!args || args.scalingPlanId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'scalingPlanId'");
            }
            resourceInputs["enabled"] = args ? args.enabled : undefined;
            resourceInputs["hostPoolId"] = args ? args.hostPoolId : undefined;
            resourceInputs["scalingPlanId"] = args ? args.scalingPlanId : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ScalingPlanHostPoolAssociation.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ScalingPlanHostPoolAssociation resources.
 */
export interface ScalingPlanHostPoolAssociationState {
    /**
     * Should the Scaling Plan be enabled on this Host Pool.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * The resource ID for the Virtual Desktop Host Pool. Changing this forces a new resource to be created.
     */
    hostPoolId?: pulumi.Input<string>;
    /**
     * The resource ID for the Virtual Desktop Scaling Plan. Changing this forces a new resource to be created.
     */
    scalingPlanId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ScalingPlanHostPoolAssociation resource.
 */
export interface ScalingPlanHostPoolAssociationArgs {
    /**
     * Should the Scaling Plan be enabled on this Host Pool.
     */
    enabled: pulumi.Input<boolean>;
    /**
     * The resource ID for the Virtual Desktop Host Pool. Changing this forces a new resource to be created.
     */
    hostPoolId: pulumi.Input<string>;
    /**
     * The resource ID for the Virtual Desktop Scaling Plan. Changing this forces a new resource to be created.
     */
    scalingPlanId: pulumi.Input<string>;
}
