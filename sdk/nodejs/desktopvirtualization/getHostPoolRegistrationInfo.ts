// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * ## Import
 *
 * AVD Registration Infos can be imported using the `resource id`, e.g.
 *
 * ```sh
 *  $ pulumi import azure:desktopvirtualization/getHostPoolRegistrationInfo:getHostPoolRegistrationInfo example /subscriptions/12345678-1234-9876-4563-123456789012/resourceGroups/resGroup1/providers/Microsoft.DesktopVirtualization/hostPools/pool1/registrationInfo/default
 * ```
 */
export class GetHostPoolRegistrationInfo extends pulumi.CustomResource {
    /**
     * Get an existing GetHostPoolRegistrationInfo resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: GetHostPoolRegistrationInfoState, opts?: pulumi.CustomResourceOptions): GetHostPoolRegistrationInfo {
        return new GetHostPoolRegistrationInfo(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure:desktopvirtualization/getHostPoolRegistrationInfo:getHostPoolRegistrationInfo';

    /**
     * Returns true if the given object is an instance of GetHostPoolRegistrationInfo.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is GetHostPoolRegistrationInfo {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === GetHostPoolRegistrationInfo.__pulumiType;
    }

    /**
     * A valid `RFC3339Time` for the expiration of the token..
     */
    public readonly expirationDate!: pulumi.Output<string>;
    /**
     * The ID of the Virtual Desktop Host Pool to link the Registration Info to. Changing this forces a new Registration Info resource to be created. Only a single virtualDesktopHostPoolRegistrationInfo resource should be associated with a given hostpool. Assigning multiple resources will produce inconsistent results.
     */
    public readonly hostpoolId!: pulumi.Output<string>;
    /**
     * The registration token generated by the Virtual Desktop Host Pool for registration of session hosts.
     */
    public /*out*/ readonly token!: pulumi.Output<string>;

    /**
     * Create a GetHostPoolRegistrationInfo resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: GetHostPoolRegistrationInfoArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: GetHostPoolRegistrationInfoArgs | GetHostPoolRegistrationInfoState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as GetHostPoolRegistrationInfoState | undefined;
            resourceInputs["expirationDate"] = state ? state.expirationDate : undefined;
            resourceInputs["hostpoolId"] = state ? state.hostpoolId : undefined;
            resourceInputs["token"] = state ? state.token : undefined;
        } else {
            const args = argsOrState as GetHostPoolRegistrationInfoArgs | undefined;
            if ((!args || args.expirationDate === undefined) && !opts.urn) {
                throw new Error("Missing required property 'expirationDate'");
            }
            if ((!args || args.hostpoolId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'hostpoolId'");
            }
            resourceInputs["expirationDate"] = args ? args.expirationDate : undefined;
            resourceInputs["hostpoolId"] = args ? args.hostpoolId : undefined;
            resourceInputs["token"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(GetHostPoolRegistrationInfo.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering getHostPoolRegistrationInfo resources.
 */
export interface GetHostPoolRegistrationInfoState {
    /**
     * A valid `RFC3339Time` for the expiration of the token..
     */
    expirationDate?: pulumi.Input<string>;
    /**
     * The ID of the Virtual Desktop Host Pool to link the Registration Info to. Changing this forces a new Registration Info resource to be created. Only a single virtualDesktopHostPoolRegistrationInfo resource should be associated with a given hostpool. Assigning multiple resources will produce inconsistent results.
     */
    hostpoolId?: pulumi.Input<string>;
    /**
     * The registration token generated by the Virtual Desktop Host Pool for registration of session hosts.
     */
    token?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a GetHostPoolRegistrationInfo resource.
 */
export interface GetHostPoolRegistrationInfoArgs {
    /**
     * A valid `RFC3339Time` for the expiration of the token..
     */
    expirationDate: pulumi.Input<string>;
    /**
     * The ID of the Virtual Desktop Host Pool to link the Registration Info to. Changing this forces a new Registration Info resource to be created. Only a single virtualDesktopHostPoolRegistrationInfo resource should be associated with a given hostpool. Assigning multiple resources will produce inconsistent results.
     */
    hostpoolId: pulumi.Input<string>;
}
