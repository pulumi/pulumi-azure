// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Use this data source to access information about an existing Managed Kubernetes Cluster (AKS).
 * 
 * > **Note:** All arguments including the client secret will be stored in the raw state as plain-text.
 * [Read more about sensitive data in state](https://www.terraform.io/docs/state/sensitive-data.html).
 * 
 * ## Example Usage
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 * 
 * const test = pulumi.output(azure.containerservice.getKubernetesCluster({
 *     name: "myakscluster",
 *     resourceGroupName: "my-example-resource-group",
 * }));
 * ```
 *
 * > This content is derived from https://github.com/terraform-providers/terraform-provider-azurerm/blob/master/website/docs/d/kubernetes_cluster.html.markdown.
 */
export function getKubernetesCluster(args: GetKubernetesClusterArgs, opts?: pulumi.InvokeOptions): Promise<GetKubernetesClusterResult> & GetKubernetesClusterResult {
    const promise: Promise<GetKubernetesClusterResult> = pulumi.runtime.invoke("azure:containerservice/getKubernetesCluster:getKubernetesCluster", {
        "name": args.name,
        "resourceGroupName": args.resourceGroupName,
    }, opts);

    return pulumi.utils.liftProperties(promise, opts);
}

/**
 * A collection of arguments for invoking getKubernetesCluster.
 */
export interface GetKubernetesClusterArgs {
    /**
     * The name of the managed Kubernetes Cluster.
     */
    readonly name: string;
    /**
     * The name of the Resource Group in which the managed Kubernetes Cluster exists.
     */
    readonly resourceGroupName: string;
}

/**
 * A collection of values returned by getKubernetesCluster.
 */
export interface GetKubernetesClusterResult {
    /**
     * A `addon_profile` block as documented below.
     */
    readonly addonProfiles: { httpApplicationRoutings: { enabled: boolean, httpApplicationRoutingZoneName: string }[], omsAgents: { enabled: boolean, logAnalyticsWorkspaceId: string }[] }[];
    /**
     * An `agent_pool_profile` block as documented below.
     */
    readonly agentPoolProfiles: { count: number, dnsPrefix: string, maxPods: number, name: string, osDiskSizeGb: number, osType: string, type: string, vmSize: string, vnetSubnetId: string }[];
    /**
     * The DNS Prefix of the managed Kubernetes cluster.
     */
    readonly dnsPrefix: string;
    /**
     * The FQDN of the Azure Kubernetes Managed Cluster.
     */
    readonly fqdn: string;
    /**
     * A `kube_admin_config` block as defined below. This is only available when Role Based Access Control with Azure Active Directory is enabled.
     */
    readonly kubeAdminConfigs: { clientCertificate: string, clientKey: string, clusterCaCertificate: string, host: string, password: string, username: string }[];
    /**
     * Raw Kubernetes config for the admin account to be used by [kubectl](https://kubernetes.io/docs/reference/kubectl/overview/) and other compatible tools. This is only available when Role Based Access Control with Azure Active Directory is enabled.
     */
    readonly kubeAdminConfigRaw: string;
    /**
     * A `kube_config` block as defined below.
     */
    readonly kubeConfigs: { clientCertificate: string, clientKey: string, clusterCaCertificate: string, host: string, password: string, username: string }[];
    /**
     * Base64 encoded Kubernetes configuration.
     */
    readonly kubeConfigRaw: string;
    /**
     * The version of Kubernetes used on the managed Kubernetes Cluster.
     */
    readonly kubernetesVersion: string;
    /**
     * A `linux_profile` block as documented below.
     */
    readonly linuxProfiles: { adminUsername: string, sshKeys: { keyData: string }[] }[];
    /**
     * The Azure Region in which the managed Kubernetes Cluster exists.
     */
    readonly location: string;
    /**
     * The name assigned to this pool of agents.
     */
    readonly name: string;
    /**
     * A `network_profile` block as documented below.
     */
    readonly networkProfiles: { dnsServiceIp: string, dockerBridgeCidr: string, networkPlugin: string, networkPolicy: string, podCidr: string, serviceCidr: string }[];
    /**
     * Auto-generated Resource Group containing AKS Cluster resources.
     */
    readonly nodeResourceGroup: string;
    readonly resourceGroupName: string;
    /**
     * A `role_based_access_control` block as documented below.
     */
    readonly roleBasedAccessControls: { azureActiveDirectories: { clientAppId: string, serverAppId: string, tenantId: string }[], enabled: boolean }[];
    /**
     * A `service_principal` block as documented below.
     */
    readonly servicePrincipals: { clientId: string }[];
    /**
     * A mapping of tags assigned to this resource.
     */
    readonly tags: {[key: string]: any};
    /**
     * id is the provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
}
