// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Manages a Kubernetes Fleet Update Run.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = new azure.core.ResourceGroup("example", {
 *     name: "example-rg",
 *     location: "westeurope",
 * });
 * const exampleKubernetesFleetManager = new azure.containerservice.KubernetesFleetManager("example", {
 *     location: example.location,
 *     name: "example",
 *     resourceGroupName: example.name,
 * });
 * const exampleKubernetesCluster = new azure.containerservice.KubernetesCluster("example", {
 *     name: "example",
 *     location: example.location,
 *     resourceGroupName: example.name,
 *     dnsPrefix: "example",
 *     defaultNodePool: {
 *         name: "default",
 *         nodeCount: 1,
 *         vmSize: "Standard_DS2_v2",
 *     },
 *     identity: {
 *         type: "SystemAssigned",
 *     },
 * });
 * const exampleFleetMember = new azure.containerservice.FleetMember("example", {
 *     name: "example",
 *     kubernetesFleetId: exampleKubernetesFleetManager.id,
 *     kubernetesClusterId: exampleKubernetesCluster.id,
 *     group: "example-group",
 * });
 * const exampleFleetUpdateRun = new azure.containerservice.FleetUpdateRun("example", {
 *     name: "example",
 *     kubernetesFleetManagerId: exampleKubernetesFleetManager.id,
 *     managedClusterUpdate: {
 *         upgrade: {
 *             type: "Full",
 *             kubernetesVersion: "1.27",
 *         },
 *         nodeImageSelection: {
 *             type: "Latest",
 *         },
 *     },
 *     stages: [{
 *         name: "example",
 *         groups: [{
 *             name: "example-group",
 *         }],
 *         afterStageWaitInSeconds: 21,
 *     }],
 * });
 * ```
 *
 * ## Import
 *
 * Kubernetes Fleet Update Runs can be imported using the `resource id`, e.g.
 *
 * ```sh
 * $ pulumi import azure:containerservice/fleetUpdateRun:FleetUpdateRun example /subscriptions/12345678-1234-9876-4563-123456789012/resourceGroups/resourceGroup1/providers/Microsoft.ContainerService/fleets/fleet1/updateRuns/updateRun1
 * ```
 */
export class FleetUpdateRun extends pulumi.CustomResource {
    /**
     * Get an existing FleetUpdateRun resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: FleetUpdateRunState, opts?: pulumi.CustomResourceOptions): FleetUpdateRun {
        return new FleetUpdateRun(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure:containerservice/fleetUpdateRun:FleetUpdateRun';

    /**
     * Returns true if the given object is an instance of FleetUpdateRun.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is FleetUpdateRun {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === FleetUpdateRun.__pulumiType;
    }

    /**
     * The ID of the Fleet Update Strategy. Only one of `fleetUpdateStrategyId` or `stage` can be specified.
     */
    public readonly fleetUpdateStrategyId!: pulumi.Output<string | undefined>;
    /**
     * The ID of the Fleet Manager. Changing this forces a new Kubernetes Fleet Update Run to be created.
     */
    public readonly kubernetesFleetManagerId!: pulumi.Output<string>;
    /**
     * A `managedClusterUpdate` block as defined below.
     */
    public readonly managedClusterUpdate!: pulumi.Output<outputs.containerservice.FleetUpdateRunManagedClusterUpdate>;
    /**
     * The name which should be used for this Kubernetes Fleet Update Run. Changing this forces a new Kubernetes Fleet Update Run to be created.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * One or more `stage` blocks as defined below. Only one of `stage` or `fleetUpdateStrategyId` can be specified.
     */
    public readonly stages!: pulumi.Output<outputs.containerservice.FleetUpdateRunStage[] | undefined>;

    /**
     * Create a FleetUpdateRun resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: FleetUpdateRunArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: FleetUpdateRunArgs | FleetUpdateRunState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as FleetUpdateRunState | undefined;
            resourceInputs["fleetUpdateStrategyId"] = state ? state.fleetUpdateStrategyId : undefined;
            resourceInputs["kubernetesFleetManagerId"] = state ? state.kubernetesFleetManagerId : undefined;
            resourceInputs["managedClusterUpdate"] = state ? state.managedClusterUpdate : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["stages"] = state ? state.stages : undefined;
        } else {
            const args = argsOrState as FleetUpdateRunArgs | undefined;
            if ((!args || args.kubernetesFleetManagerId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'kubernetesFleetManagerId'");
            }
            if ((!args || args.managedClusterUpdate === undefined) && !opts.urn) {
                throw new Error("Missing required property 'managedClusterUpdate'");
            }
            resourceInputs["fleetUpdateStrategyId"] = args ? args.fleetUpdateStrategyId : undefined;
            resourceInputs["kubernetesFleetManagerId"] = args ? args.kubernetesFleetManagerId : undefined;
            resourceInputs["managedClusterUpdate"] = args ? args.managedClusterUpdate : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["stages"] = args ? args.stages : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(FleetUpdateRun.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering FleetUpdateRun resources.
 */
export interface FleetUpdateRunState {
    /**
     * The ID of the Fleet Update Strategy. Only one of `fleetUpdateStrategyId` or `stage` can be specified.
     */
    fleetUpdateStrategyId?: pulumi.Input<string>;
    /**
     * The ID of the Fleet Manager. Changing this forces a new Kubernetes Fleet Update Run to be created.
     */
    kubernetesFleetManagerId?: pulumi.Input<string>;
    /**
     * A `managedClusterUpdate` block as defined below.
     */
    managedClusterUpdate?: pulumi.Input<inputs.containerservice.FleetUpdateRunManagedClusterUpdate>;
    /**
     * The name which should be used for this Kubernetes Fleet Update Run. Changing this forces a new Kubernetes Fleet Update Run to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * One or more `stage` blocks as defined below. Only one of `stage` or `fleetUpdateStrategyId` can be specified.
     */
    stages?: pulumi.Input<pulumi.Input<inputs.containerservice.FleetUpdateRunStage>[]>;
}

/**
 * The set of arguments for constructing a FleetUpdateRun resource.
 */
export interface FleetUpdateRunArgs {
    /**
     * The ID of the Fleet Update Strategy. Only one of `fleetUpdateStrategyId` or `stage` can be specified.
     */
    fleetUpdateStrategyId?: pulumi.Input<string>;
    /**
     * The ID of the Fleet Manager. Changing this forces a new Kubernetes Fleet Update Run to be created.
     */
    kubernetesFleetManagerId: pulumi.Input<string>;
    /**
     * A `managedClusterUpdate` block as defined below.
     */
    managedClusterUpdate: pulumi.Input<inputs.containerservice.FleetUpdateRunManagedClusterUpdate>;
    /**
     * The name which should be used for this Kubernetes Fleet Update Run. Changing this forces a new Kubernetes Fleet Update Run to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * One or more `stage` blocks as defined below. Only one of `stage` or `fleetUpdateStrategyId` can be specified.
     */
    stages?: pulumi.Input<pulumi.Input<inputs.containerservice.FleetUpdateRunStage>[]>;
}
