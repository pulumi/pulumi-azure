// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Manages a Kubernetes Cluster Extension.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = new azure.core.ResourceGroup("example", {
 *     name: "example-resources",
 *     location: "West Europe",
 * });
 * const exampleKubernetesCluster = new azure.containerservice.KubernetesCluster("example", {
 *     name: "example-aks",
 *     location: "West Europe",
 *     resourceGroupName: example.name,
 *     dnsPrefix: "example-aks",
 *     defaultNodePool: {
 *         name: "default",
 *         nodeCount: 1,
 *         vmSize: "Standard_DS2_v2",
 *     },
 *     identity: {
 *         type: "SystemAssigned",
 *     },
 * });
 * const exampleKubernetesClusterExtension = new azure.containerservice.KubernetesClusterExtension("example", {
 *     name: "example-ext",
 *     clusterId: exampleKubernetesCluster.id,
 *     extensionType: "microsoft.flux",
 * });
 * ```
 *
 * ## API Providers
 *
 * <!-- This section is generated, changes will be overwritten -->
 * This resource uses the following Azure API Providers:
 *
 * * `Microsoft.KubernetesConfiguration` - 2024-11-01
 *
 * ## Import
 *
 * Kubernetes Cluster Extension can be imported using the `resource id` for different `cluster_resource_name`, e.g.
 *
 * ```sh
 * $ pulumi import azure:containerservice/kubernetesClusterExtension:KubernetesClusterExtension example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resourceGroup1/providers/Microsoft.ContainerService/managedClusters/cluster1/providers/Microsoft.KubernetesConfiguration/extensions/extension1
 * ```
 */
export class KubernetesClusterExtension extends pulumi.CustomResource {
    /**
     * Get an existing KubernetesClusterExtension resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: KubernetesClusterExtensionState, opts?: pulumi.CustomResourceOptions): KubernetesClusterExtension {
        return new KubernetesClusterExtension(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure:containerservice/kubernetesClusterExtension:KubernetesClusterExtension';

    /**
     * Returns true if the given object is an instance of KubernetesClusterExtension.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is KubernetesClusterExtension {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === KubernetesClusterExtension.__pulumiType;
    }

    /**
     * An `aksAssignedIdentity` block as defined below.
     */
    declare public /*out*/ readonly aksAssignedIdentities: pulumi.Output<outputs.containerservice.KubernetesClusterExtensionAksAssignedIdentity[]>;
    /**
     * Specifies the Cluster ID. Changing this forces a new Kubernetes Cluster Extension to be created.
     */
    declare public readonly clusterId: pulumi.Output<string>;
    /**
     * Configuration settings that are sensitive, as name-value pairs for configuring this extension.
     */
    declare public readonly configurationProtectedSettings: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * Configuration settings, as name-value pairs for configuring this extension.
     */
    declare public readonly configurationSettings: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * The current version of the extension.
     */
    declare public /*out*/ readonly currentVersion: pulumi.Output<string>;
    /**
     * Specifies the type of extension. It must be one of the extension types registered with Microsoft.KubernetesConfiguration by the Extension publisher. For more information, please refer to [Available Extensions for AKS](https://learn.microsoft.com/en-us/azure/aks/cluster-extensions?tabs=azure-cli#currently-available-extensions). Changing this forces a new Kubernetes Cluster Extension to be created.
     */
    declare public readonly extensionType: pulumi.Output<string>;
    /**
     * Specifies the name which should be used for this Kubernetes Cluster Extension. Changing this forces a new Kubernetes Cluster Extension to be created.
     */
    declare public readonly name: pulumi.Output<string>;
    /**
     * A `plan` block as defined below. Changing this forces a new resource to be created.
     */
    declare public readonly plan: pulumi.Output<outputs.containerservice.KubernetesClusterExtensionPlan | undefined>;
    /**
     * Namespace where the extension release must be placed for a cluster scoped extension. If this namespace does not exist, it will be created. Changing this forces a new Kubernetes Cluster Extension to be created.
     */
    declare public readonly releaseNamespace: pulumi.Output<string>;
    /**
     * The release train used by this extension. Possible values include but are not limited to `Stable`, `Preview`. Changing this forces a new Kubernetes Cluster Extension to be created.
     */
    declare public readonly releaseTrain: pulumi.Output<string>;
    /**
     * Namespace where the extension will be created for a namespace scoped extension. If this namespace does not exist, it will be created. Changing this forces a new Kubernetes Cluster Extension to be created.
     */
    declare public readonly targetNamespace: pulumi.Output<string>;
    /**
     * User-specified version that the extension should pin to. If it is not set, Azure will use the latest version and auto upgrade it. Changing this forces a new Kubernetes Cluster Extension to be created.
     */
    declare public readonly version: pulumi.Output<string | undefined>;

    /**
     * Create a KubernetesClusterExtension resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: KubernetesClusterExtensionArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: KubernetesClusterExtensionArgs | KubernetesClusterExtensionState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as KubernetesClusterExtensionState | undefined;
            resourceInputs["aksAssignedIdentities"] = state?.aksAssignedIdentities;
            resourceInputs["clusterId"] = state?.clusterId;
            resourceInputs["configurationProtectedSettings"] = state?.configurationProtectedSettings;
            resourceInputs["configurationSettings"] = state?.configurationSettings;
            resourceInputs["currentVersion"] = state?.currentVersion;
            resourceInputs["extensionType"] = state?.extensionType;
            resourceInputs["name"] = state?.name;
            resourceInputs["plan"] = state?.plan;
            resourceInputs["releaseNamespace"] = state?.releaseNamespace;
            resourceInputs["releaseTrain"] = state?.releaseTrain;
            resourceInputs["targetNamespace"] = state?.targetNamespace;
            resourceInputs["version"] = state?.version;
        } else {
            const args = argsOrState as KubernetesClusterExtensionArgs | undefined;
            if (args?.clusterId === undefined && !opts.urn) {
                throw new Error("Missing required property 'clusterId'");
            }
            if (args?.extensionType === undefined && !opts.urn) {
                throw new Error("Missing required property 'extensionType'");
            }
            resourceInputs["clusterId"] = args?.clusterId;
            resourceInputs["configurationProtectedSettings"] = args?.configurationProtectedSettings;
            resourceInputs["configurationSettings"] = args?.configurationSettings;
            resourceInputs["extensionType"] = args?.extensionType;
            resourceInputs["name"] = args?.name;
            resourceInputs["plan"] = args?.plan;
            resourceInputs["releaseNamespace"] = args?.releaseNamespace;
            resourceInputs["releaseTrain"] = args?.releaseTrain;
            resourceInputs["targetNamespace"] = args?.targetNamespace;
            resourceInputs["version"] = args?.version;
            resourceInputs["aksAssignedIdentities"] = undefined /*out*/;
            resourceInputs["currentVersion"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(KubernetesClusterExtension.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering KubernetesClusterExtension resources.
 */
export interface KubernetesClusterExtensionState {
    /**
     * An `aksAssignedIdentity` block as defined below.
     */
    aksAssignedIdentities?: pulumi.Input<pulumi.Input<inputs.containerservice.KubernetesClusterExtensionAksAssignedIdentity>[]>;
    /**
     * Specifies the Cluster ID. Changing this forces a new Kubernetes Cluster Extension to be created.
     */
    clusterId?: pulumi.Input<string>;
    /**
     * Configuration settings that are sensitive, as name-value pairs for configuring this extension.
     */
    configurationProtectedSettings?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Configuration settings, as name-value pairs for configuring this extension.
     */
    configurationSettings?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The current version of the extension.
     */
    currentVersion?: pulumi.Input<string>;
    /**
     * Specifies the type of extension. It must be one of the extension types registered with Microsoft.KubernetesConfiguration by the Extension publisher. For more information, please refer to [Available Extensions for AKS](https://learn.microsoft.com/en-us/azure/aks/cluster-extensions?tabs=azure-cli#currently-available-extensions). Changing this forces a new Kubernetes Cluster Extension to be created.
     */
    extensionType?: pulumi.Input<string>;
    /**
     * Specifies the name which should be used for this Kubernetes Cluster Extension. Changing this forces a new Kubernetes Cluster Extension to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * A `plan` block as defined below. Changing this forces a new resource to be created.
     */
    plan?: pulumi.Input<inputs.containerservice.KubernetesClusterExtensionPlan>;
    /**
     * Namespace where the extension release must be placed for a cluster scoped extension. If this namespace does not exist, it will be created. Changing this forces a new Kubernetes Cluster Extension to be created.
     */
    releaseNamespace?: pulumi.Input<string>;
    /**
     * The release train used by this extension. Possible values include but are not limited to `Stable`, `Preview`. Changing this forces a new Kubernetes Cluster Extension to be created.
     */
    releaseTrain?: pulumi.Input<string>;
    /**
     * Namespace where the extension will be created for a namespace scoped extension. If this namespace does not exist, it will be created. Changing this forces a new Kubernetes Cluster Extension to be created.
     */
    targetNamespace?: pulumi.Input<string>;
    /**
     * User-specified version that the extension should pin to. If it is not set, Azure will use the latest version and auto upgrade it. Changing this forces a new Kubernetes Cluster Extension to be created.
     */
    version?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a KubernetesClusterExtension resource.
 */
export interface KubernetesClusterExtensionArgs {
    /**
     * Specifies the Cluster ID. Changing this forces a new Kubernetes Cluster Extension to be created.
     */
    clusterId: pulumi.Input<string>;
    /**
     * Configuration settings that are sensitive, as name-value pairs for configuring this extension.
     */
    configurationProtectedSettings?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Configuration settings, as name-value pairs for configuring this extension.
     */
    configurationSettings?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Specifies the type of extension. It must be one of the extension types registered with Microsoft.KubernetesConfiguration by the Extension publisher. For more information, please refer to [Available Extensions for AKS](https://learn.microsoft.com/en-us/azure/aks/cluster-extensions?tabs=azure-cli#currently-available-extensions). Changing this forces a new Kubernetes Cluster Extension to be created.
     */
    extensionType: pulumi.Input<string>;
    /**
     * Specifies the name which should be used for this Kubernetes Cluster Extension. Changing this forces a new Kubernetes Cluster Extension to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * A `plan` block as defined below. Changing this forces a new resource to be created.
     */
    plan?: pulumi.Input<inputs.containerservice.KubernetesClusterExtensionPlan>;
    /**
     * Namespace where the extension release must be placed for a cluster scoped extension. If this namespace does not exist, it will be created. Changing this forces a new Kubernetes Cluster Extension to be created.
     */
    releaseNamespace?: pulumi.Input<string>;
    /**
     * The release train used by this extension. Possible values include but are not limited to `Stable`, `Preview`. Changing this forces a new Kubernetes Cluster Extension to be created.
     */
    releaseTrain?: pulumi.Input<string>;
    /**
     * Namespace where the extension will be created for a namespace scoped extension. If this namespace does not exist, it will be created. Changing this forces a new Kubernetes Cluster Extension to be created.
     */
    targetNamespace?: pulumi.Input<string>;
    /**
     * User-specified version that the extension should pin to. If it is not set, Azure will use the latest version and auto upgrade it. Changing this forces a new Kubernetes Cluster Extension to be created.
     */
    version?: pulumi.Input<string>;
}
