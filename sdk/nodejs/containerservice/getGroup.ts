// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Use this data source to access information about an existing Container Group instance.
 */
export function getGroup(args: GetGroupArgs, opts?: pulumi.InvokeOptions): Promise<GetGroupResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azure:containerservice/getGroup:getGroup", {
        "name": args.name,
        "resourceGroupName": args.resourceGroupName,
        "zones": args.zones,
    }, opts);
}

/**
 * A collection of arguments for invoking getGroup.
 */
export interface GetGroupArgs {
    /**
     * The name of this Container Group instance.
     */
    name: string;
    /**
     * The name of the Resource Group where the Container Group instance exists.
     */
    resourceGroupName: string;
    /**
     * A list of Availability Zones in which this Container Group is located.
     */
    zones?: string[];
}

/**
 * A collection of values returned by getGroup.
 */
export interface GetGroupResult {
    /**
     * The FQDN of the Container Group instance derived from `dnsNameLabel`.
     */
    readonly fqdn: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * A `identity` block as defined below.
     */
    readonly identities: outputs.containerservice.GetGroupIdentity[];
    /**
     * The IP address allocated to the Container Group instance.
     */
    readonly ipAddress: string;
    /**
     * The Azure Region where the Container Group instance exists.
     */
    readonly location: string;
    readonly name: string;
    readonly resourceGroupName: string;
    /**
     * The subnet resource IDs for a container group.
     */
    readonly subnetIds: string[];
    /**
     * A mapping of tags assigned to the Container Group instance.
     */
    readonly tags: {[key: string]: string};
    /**
     * A list of Availability Zones in which this Container Group is located.
     */
    readonly zones?: string[];
}
/**
 * Use this data source to access information about an existing Container Group instance.
 */
export function getGroupOutput(args: GetGroupOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetGroupResult> {
    return pulumi.output(args).apply((a: any) => getGroup(a, opts))
}

/**
 * A collection of arguments for invoking getGroup.
 */
export interface GetGroupOutputArgs {
    /**
     * The name of this Container Group instance.
     */
    name: pulumi.Input<string>;
    /**
     * The name of the Resource Group where the Container Group instance exists.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * A list of Availability Zones in which this Container Group is located.
     */
    zones?: pulumi.Input<pulumi.Input<string>[]>;
}
