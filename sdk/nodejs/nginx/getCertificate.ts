// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Use this data source to access information about an existing Nginx Certificate.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = azure.nginx.getCertificate({
 *     name: "existing",
 *     nginxDeploymentId: azurerm_nginx_deployment.example.id,
 * });
 * export const id = example.then(example => example.id);
 * ```
 */
export function getCertificate(args: GetCertificateArgs, opts?: pulumi.InvokeOptions): Promise<GetCertificateResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azure:nginx/getCertificate:getCertificate", {
        "name": args.name,
        "nginxDeploymentId": args.nginxDeploymentId,
    }, opts);
}

/**
 * A collection of arguments for invoking getCertificate.
 */
export interface GetCertificateArgs {
    /**
     * The name of this Nginx Certificate.
     */
    name: string;
    /**
     * The ID of the Nginx Deployment that this certificate is associated with.
     */
    nginxDeploymentId: string;
}

/**
 * A collection of values returned by getCertificate.
 */
export interface GetCertificateResult {
    /**
     * The path to the certificate file of this certificate.
     */
    readonly certificateVirtualPath: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The ID of the Key Vault Secret for this certificate.
     */
    readonly keyVaultSecretId: string;
    /**
     * The path to the key file of this certificate.
     */
    readonly keyVirtualPath: string;
    readonly name: string;
    readonly nginxDeploymentId: string;
}
/**
 * Use this data source to access information about an existing Nginx Certificate.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = azure.nginx.getCertificate({
 *     name: "existing",
 *     nginxDeploymentId: azurerm_nginx_deployment.example.id,
 * });
 * export const id = example.then(example => example.id);
 * ```
 */
export function getCertificateOutput(args: GetCertificateOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCertificateResult> {
    return pulumi.output(args).apply((a: any) => getCertificate(a, opts))
}

/**
 * A collection of arguments for invoking getCertificate.
 */
export interface GetCertificateOutputArgs {
    /**
     * The name of this Nginx Certificate.
     */
    name: pulumi.Input<string>;
    /**
     * The ID of the Nginx Deployment that this certificate is associated with.
     */
    nginxDeploymentId: pulumi.Input<string>;
}
