// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Manages an NGINX Deployment.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = new azure.core.ResourceGroup("example", {
 *     name: "example-rg",
 *     location: "West Europe",
 * });
 * const examplePublicIp = new azure.network.PublicIp("example", {
 *     name: "example",
 *     resourceGroupName: example.name,
 *     location: example.location,
 *     allocationMethod: "Static",
 *     sku: "Standard",
 *     tags: {
 *         environment: "Production",
 *     },
 * });
 * const exampleVirtualNetwork = new azure.network.VirtualNetwork("example", {
 *     name: "example-vnet",
 *     addressSpaces: ["10.0.0.0/16"],
 *     location: example.location,
 *     resourceGroupName: example.name,
 * });
 * const exampleSubnet = new azure.network.Subnet("example", {
 *     name: "example-subnet",
 *     resourceGroupName: example.name,
 *     virtualNetworkName: exampleVirtualNetwork.name,
 *     addressPrefixes: ["10.0.2.0/24"],
 *     delegations: [{
 *         name: "delegation",
 *         serviceDelegation: {
 *             name: "NGINX.NGINXPLUS/nginxDeployments",
 *             actions: ["Microsoft.Network/virtualNetworks/subnets/join/action"],
 *         },
 *     }],
 * });
 * const exampleDeployment = new azure.nginx.Deployment("example", {
 *     name: "example-nginx",
 *     resourceGroupName: example.name,
 *     sku: "standardv2_Monthly",
 *     location: example.location,
 *     diagnoseSupportEnabled: true,
 *     automaticUpgradeChannel: "stable",
 *     frontendPublic: {
 *         ipAddresses: [examplePublicIp.id],
 *     },
 *     networkInterfaces: [{
 *         subnetId: exampleSubnet.id,
 *     }],
 *     capacity: 20,
 *     email: "user@test.com",
 * });
 * ```
 *
 * ## API Providers
 *
 * <!-- This section is generated, changes will be overwritten -->
 * This resource uses the following Azure API Providers:
 *
 * * `Nginx.NginxPlus` - 2024-11-01-preview
 *
 * ## Import
 *
 * NGINX Deployments can be imported using the `resource id`, e.g.
 *
 * ```sh
 * $ pulumi import azure:nginx/deployment:Deployment example /subscriptions/12345678-1234-9876-4563-123456789012/resourceGroups/group1/providers/Nginx.NginxPlus/nginxDeployments/dep1
 * ```
 */
export class Deployment extends pulumi.CustomResource {
    /**
     * Get an existing Deployment resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DeploymentState, opts?: pulumi.CustomResourceOptions): Deployment {
        return new Deployment(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure:nginx/deployment:Deployment';

    /**
     * Returns true if the given object is an instance of Deployment.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Deployment {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Deployment.__pulumiType;
    }

    /**
     * An `autoScaleProfile` block as defined below.
     */
    declare public readonly autoScaleProfiles: pulumi.Output<outputs.nginx.DeploymentAutoScaleProfile[] | undefined>;
    /**
     * Specify the automatic upgrade channel for the NGINX deployment. Defaults to `stable`. The possible values are `stable` and `preview`.
     */
    declare public readonly automaticUpgradeChannel: pulumi.Output<string | undefined>;
    /**
     * Specify the number of NGINX capacity units for this NGINX deployment.
     *
     * > **Note:** For more information on NGINX capacity units, please refer to the [NGINX scaling guidance documentation](https://docs.nginx.com/nginxaas/azure/quickstart/scaling/)
     */
    declare public readonly capacity: pulumi.Output<number | undefined>;
    /**
     * The dataplane API endpoint of the NGINX Deployment.
     */
    declare public /*out*/ readonly dataplaneApiEndpoint: pulumi.Output<string>;
    /**
     * Should the metrics be exported to Azure Monitor?
     */
    declare public readonly diagnoseSupportEnabled: pulumi.Output<boolean | undefined>;
    /**
     * Specify the preferred support contact email address for receiving alerts and notifications.
     */
    declare public readonly email: pulumi.Output<string | undefined>;
    /**
     * One or more `frontendPrivate` blocks as defined below.
     */
    declare public readonly frontendPrivates: pulumi.Output<outputs.nginx.DeploymentFrontendPrivate[] | undefined>;
    /**
     * A `frontendPublic` block as defined below.
     */
    declare public readonly frontendPublic: pulumi.Output<outputs.nginx.DeploymentFrontendPublic | undefined>;
    /**
     * An `identity` block as defined below.
     */
    declare public readonly identity: pulumi.Output<outputs.nginx.DeploymentIdentity | undefined>;
    /**
     * The IP address of the NGINX Deployment.
     */
    declare public /*out*/ readonly ipAddress: pulumi.Output<string>;
    /**
     * The Azure Region where the NGINX Deployment should exist. Changing this forces a new NGINX Deployment to be created.
     */
    declare public readonly location: pulumi.Output<string>;
    /**
     * @deprecated The `loggingStorageAccount` block has been deprecated and will be removed in v5.0 of the AzureRM Provider. To enable logs, use the `azure.monitoring.DiagnosticSetting` resource instead.
     */
    declare public readonly loggingStorageAccounts: pulumi.Output<outputs.nginx.DeploymentLoggingStorageAccount[] | undefined>;
    /**
     * @deprecated The `managedResourceGroup` field isn't supported by the API anymore and has been deprecated and will be removed in v5.0 of the AzureRM Provider.
     */
    declare public readonly managedResourceGroup: pulumi.Output<string>;
    /**
     * The name which should be used for this NGINX Deployment. Changing this forces a new NGINX Deployment to be created.
     */
    declare public readonly name: pulumi.Output<string>;
    /**
     * One or more `networkInterface` blocks as defined below.
     */
    declare public readonly networkInterfaces: pulumi.Output<outputs.nginx.DeploymentNetworkInterface[] | undefined>;
    /**
     * The version of the NGINX Deployment.
     */
    declare public /*out*/ readonly nginxVersion: pulumi.Output<string>;
    /**
     * The name of the Resource Group where the NGINX Deployment should exist. Changing this forces a new NGINX Deployment to be created.
     */
    declare public readonly resourceGroupName: pulumi.Output<string>;
    declare public readonly sku: pulumi.Output<string>;
    /**
     * A mapping of tags which should be assigned to the NGINX Deployment.
     */
    declare public readonly tags: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * A `webApplicationFirewall` blocks as defined below.
     */
    declare public readonly webApplicationFirewall: pulumi.Output<outputs.nginx.DeploymentWebApplicationFirewall | undefined>;

    /**
     * Create a Deployment resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DeploymentArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DeploymentArgs | DeploymentState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DeploymentState | undefined;
            resourceInputs["autoScaleProfiles"] = state?.autoScaleProfiles;
            resourceInputs["automaticUpgradeChannel"] = state?.automaticUpgradeChannel;
            resourceInputs["capacity"] = state?.capacity;
            resourceInputs["dataplaneApiEndpoint"] = state?.dataplaneApiEndpoint;
            resourceInputs["diagnoseSupportEnabled"] = state?.diagnoseSupportEnabled;
            resourceInputs["email"] = state?.email;
            resourceInputs["frontendPrivates"] = state?.frontendPrivates;
            resourceInputs["frontendPublic"] = state?.frontendPublic;
            resourceInputs["identity"] = state?.identity;
            resourceInputs["ipAddress"] = state?.ipAddress;
            resourceInputs["location"] = state?.location;
            resourceInputs["loggingStorageAccounts"] = state?.loggingStorageAccounts;
            resourceInputs["managedResourceGroup"] = state?.managedResourceGroup;
            resourceInputs["name"] = state?.name;
            resourceInputs["networkInterfaces"] = state?.networkInterfaces;
            resourceInputs["nginxVersion"] = state?.nginxVersion;
            resourceInputs["resourceGroupName"] = state?.resourceGroupName;
            resourceInputs["sku"] = state?.sku;
            resourceInputs["tags"] = state?.tags;
            resourceInputs["webApplicationFirewall"] = state?.webApplicationFirewall;
        } else {
            const args = argsOrState as DeploymentArgs | undefined;
            if (args?.resourceGroupName === undefined && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            if (args?.sku === undefined && !opts.urn) {
                throw new Error("Missing required property 'sku'");
            }
            resourceInputs["autoScaleProfiles"] = args?.autoScaleProfiles;
            resourceInputs["automaticUpgradeChannel"] = args?.automaticUpgradeChannel;
            resourceInputs["capacity"] = args?.capacity;
            resourceInputs["diagnoseSupportEnabled"] = args?.diagnoseSupportEnabled;
            resourceInputs["email"] = args?.email;
            resourceInputs["frontendPrivates"] = args?.frontendPrivates;
            resourceInputs["frontendPublic"] = args?.frontendPublic;
            resourceInputs["identity"] = args?.identity;
            resourceInputs["location"] = args?.location;
            resourceInputs["loggingStorageAccounts"] = args?.loggingStorageAccounts;
            resourceInputs["managedResourceGroup"] = args?.managedResourceGroup;
            resourceInputs["name"] = args?.name;
            resourceInputs["networkInterfaces"] = args?.networkInterfaces;
            resourceInputs["resourceGroupName"] = args?.resourceGroupName;
            resourceInputs["sku"] = args?.sku;
            resourceInputs["tags"] = args?.tags;
            resourceInputs["webApplicationFirewall"] = args?.webApplicationFirewall;
            resourceInputs["dataplaneApiEndpoint"] = undefined /*out*/;
            resourceInputs["ipAddress"] = undefined /*out*/;
            resourceInputs["nginxVersion"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Deployment.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Deployment resources.
 */
export interface DeploymentState {
    /**
     * An `autoScaleProfile` block as defined below.
     */
    autoScaleProfiles?: pulumi.Input<pulumi.Input<inputs.nginx.DeploymentAutoScaleProfile>[]>;
    /**
     * Specify the automatic upgrade channel for the NGINX deployment. Defaults to `stable`. The possible values are `stable` and `preview`.
     */
    automaticUpgradeChannel?: pulumi.Input<string>;
    /**
     * Specify the number of NGINX capacity units for this NGINX deployment.
     *
     * > **Note:** For more information on NGINX capacity units, please refer to the [NGINX scaling guidance documentation](https://docs.nginx.com/nginxaas/azure/quickstart/scaling/)
     */
    capacity?: pulumi.Input<number>;
    /**
     * The dataplane API endpoint of the NGINX Deployment.
     */
    dataplaneApiEndpoint?: pulumi.Input<string>;
    /**
     * Should the metrics be exported to Azure Monitor?
     */
    diagnoseSupportEnabled?: pulumi.Input<boolean>;
    /**
     * Specify the preferred support contact email address for receiving alerts and notifications.
     */
    email?: pulumi.Input<string>;
    /**
     * One or more `frontendPrivate` blocks as defined below.
     */
    frontendPrivates?: pulumi.Input<pulumi.Input<inputs.nginx.DeploymentFrontendPrivate>[]>;
    /**
     * A `frontendPublic` block as defined below.
     */
    frontendPublic?: pulumi.Input<inputs.nginx.DeploymentFrontendPublic>;
    /**
     * An `identity` block as defined below.
     */
    identity?: pulumi.Input<inputs.nginx.DeploymentIdentity>;
    /**
     * The IP address of the NGINX Deployment.
     */
    ipAddress?: pulumi.Input<string>;
    /**
     * The Azure Region where the NGINX Deployment should exist. Changing this forces a new NGINX Deployment to be created.
     */
    location?: pulumi.Input<string>;
    /**
     * @deprecated The `loggingStorageAccount` block has been deprecated and will be removed in v5.0 of the AzureRM Provider. To enable logs, use the `azure.monitoring.DiagnosticSetting` resource instead.
     */
    loggingStorageAccounts?: pulumi.Input<pulumi.Input<inputs.nginx.DeploymentLoggingStorageAccount>[]>;
    /**
     * @deprecated The `managedResourceGroup` field isn't supported by the API anymore and has been deprecated and will be removed in v5.0 of the AzureRM Provider.
     */
    managedResourceGroup?: pulumi.Input<string>;
    /**
     * The name which should be used for this NGINX Deployment. Changing this forces a new NGINX Deployment to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * One or more `networkInterface` blocks as defined below.
     */
    networkInterfaces?: pulumi.Input<pulumi.Input<inputs.nginx.DeploymentNetworkInterface>[]>;
    /**
     * The version of the NGINX Deployment.
     */
    nginxVersion?: pulumi.Input<string>;
    /**
     * The name of the Resource Group where the NGINX Deployment should exist. Changing this forces a new NGINX Deployment to be created.
     */
    resourceGroupName?: pulumi.Input<string>;
    sku?: pulumi.Input<string>;
    /**
     * A mapping of tags which should be assigned to the NGINX Deployment.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * A `webApplicationFirewall` blocks as defined below.
     */
    webApplicationFirewall?: pulumi.Input<inputs.nginx.DeploymentWebApplicationFirewall>;
}

/**
 * The set of arguments for constructing a Deployment resource.
 */
export interface DeploymentArgs {
    /**
     * An `autoScaleProfile` block as defined below.
     */
    autoScaleProfiles?: pulumi.Input<pulumi.Input<inputs.nginx.DeploymentAutoScaleProfile>[]>;
    /**
     * Specify the automatic upgrade channel for the NGINX deployment. Defaults to `stable`. The possible values are `stable` and `preview`.
     */
    automaticUpgradeChannel?: pulumi.Input<string>;
    /**
     * Specify the number of NGINX capacity units for this NGINX deployment.
     *
     * > **Note:** For more information on NGINX capacity units, please refer to the [NGINX scaling guidance documentation](https://docs.nginx.com/nginxaas/azure/quickstart/scaling/)
     */
    capacity?: pulumi.Input<number>;
    /**
     * Should the metrics be exported to Azure Monitor?
     */
    diagnoseSupportEnabled?: pulumi.Input<boolean>;
    /**
     * Specify the preferred support contact email address for receiving alerts and notifications.
     */
    email?: pulumi.Input<string>;
    /**
     * One or more `frontendPrivate` blocks as defined below.
     */
    frontendPrivates?: pulumi.Input<pulumi.Input<inputs.nginx.DeploymentFrontendPrivate>[]>;
    /**
     * A `frontendPublic` block as defined below.
     */
    frontendPublic?: pulumi.Input<inputs.nginx.DeploymentFrontendPublic>;
    /**
     * An `identity` block as defined below.
     */
    identity?: pulumi.Input<inputs.nginx.DeploymentIdentity>;
    /**
     * The Azure Region where the NGINX Deployment should exist. Changing this forces a new NGINX Deployment to be created.
     */
    location?: pulumi.Input<string>;
    /**
     * @deprecated The `loggingStorageAccount` block has been deprecated and will be removed in v5.0 of the AzureRM Provider. To enable logs, use the `azure.monitoring.DiagnosticSetting` resource instead.
     */
    loggingStorageAccounts?: pulumi.Input<pulumi.Input<inputs.nginx.DeploymentLoggingStorageAccount>[]>;
    /**
     * @deprecated The `managedResourceGroup` field isn't supported by the API anymore and has been deprecated and will be removed in v5.0 of the AzureRM Provider.
     */
    managedResourceGroup?: pulumi.Input<string>;
    /**
     * The name which should be used for this NGINX Deployment. Changing this forces a new NGINX Deployment to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * One or more `networkInterface` blocks as defined below.
     */
    networkInterfaces?: pulumi.Input<pulumi.Input<inputs.nginx.DeploymentNetworkInterface>[]>;
    /**
     * The name of the Resource Group where the NGINX Deployment should exist. Changing this forces a new NGINX Deployment to be created.
     */
    resourceGroupName: pulumi.Input<string>;
    sku: pulumi.Input<string>;
    /**
     * A mapping of tags which should be assigned to the NGINX Deployment.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * A `webApplicationFirewall` blocks as defined below.
     */
    webApplicationFirewall?: pulumi.Input<inputs.nginx.DeploymentWebApplicationFirewall>;
}
