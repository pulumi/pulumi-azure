// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Use this data source to access information about an existing Databricks workspace.
 */
export function getWorkspace(args: GetWorkspaceArgs, opts?: pulumi.InvokeOptions): Promise<GetWorkspaceResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azure:databricks/getWorkspace:getWorkspace", {
        "name": args.name,
        "resourceGroupName": args.resourceGroupName,
        "tags": args.tags,
    }, opts);
}

/**
 * A collection of arguments for invoking getWorkspace.
 */
export interface GetWorkspaceArgs {
    /**
     * The name of the Databricks Workspace.
     */
    name: string;
    /**
     * The Name of the Resource Group where the Databricks Workspace exists.
     */
    resourceGroupName: string;
    /**
     * A mapping of tags to assign to the Databricks Workspace.
     */
    tags?: {[key: string]: string};
}

/**
 * A collection of values returned by getWorkspace.
 */
export interface GetWorkspaceResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The Azure location where the Databricks Workspace exists.
     */
    readonly location: string;
    /**
     * A `managedDiskIdentity` block as documented below.
     */
    readonly managedDiskIdentities: outputs.databricks.GetWorkspaceManagedDiskIdentity[];
    readonly name: string;
    readonly resourceGroupName: string;
    /**
     * SKU of this Databricks Workspace.
     */
    readonly sku: string;
    /**
     * A `storageAccountIdentity` block as documented below.
     */
    readonly storageAccountIdentities: outputs.databricks.GetWorkspaceStorageAccountIdentity[];
    /**
     * A mapping of tags to assign to the Databricks Workspace.
     */
    readonly tags?: {[key: string]: string};
    /**
     * Unique ID of this Databricks Workspace in Databricks management plane.
     */
    readonly workspaceId: string;
    /**
     * URL this Databricks Workspace is accessible on.
     */
    readonly workspaceUrl: string;
}
/**
 * Use this data source to access information about an existing Databricks workspace.
 */
export function getWorkspaceOutput(args: GetWorkspaceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetWorkspaceResult> {
    return pulumi.output(args).apply((a: any) => getWorkspace(a, opts))
}

/**
 * A collection of arguments for invoking getWorkspace.
 */
export interface GetWorkspaceOutputArgs {
    /**
     * The name of the Databricks Workspace.
     */
    name: pulumi.Input<string>;
    /**
     * The Name of the Resource Group where the Databricks Workspace exists.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * A mapping of tags to assign to the Databricks Workspace.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
