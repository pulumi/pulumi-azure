// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Manages a Cognitive Account Rai Blocklist.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = new azure.core.ResourceGroup("example", {
 *     name: "example-resources",
 *     location: "Brazil South",
 * });
 * const exampleAccount = new azure.cognitive.Account("example", {
 *     name: "example-ca",
 *     location: example.location,
 *     resourceGroupName: example.name,
 *     kind: "OpenAI",
 *     skuName: "S0",
 * });
 * const exampleAccountRaiBlocklist = new azure.cognitive.AccountRaiBlocklist("example", {
 *     name: "example-crb",
 *     cognitiveAccountId: exampleAccount.id,
 *     description: "Azure OpenAI Rai Blocklist",
 * });
 * ```
 *
 * ## Import
 *
 * Cognitive Account Rai Blocklist can be imported using the `resource id`, e.g.
 *
 * ```sh
 * $ pulumi import azure:cognitive/accountRaiBlocklist:AccountRaiBlocklist example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resourceGroup1/providers/Microsoft.CognitiveServices/accounts/account1/raiBlocklists/raiblocklist1
 * ```
 */
export class AccountRaiBlocklist extends pulumi.CustomResource {
    /**
     * Get an existing AccountRaiBlocklist resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AccountRaiBlocklistState, opts?: pulumi.CustomResourceOptions): AccountRaiBlocklist {
        return new AccountRaiBlocklist(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure:cognitive/accountRaiBlocklist:AccountRaiBlocklist';

    /**
     * Returns true if the given object is an instance of AccountRaiBlocklist.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AccountRaiBlocklist {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AccountRaiBlocklist.__pulumiType;
    }

    /**
     * The ID of the Cognitive Services Account. Changing this forces a new Cognitive Account Rai Blocklist to be created.
     */
    public readonly cognitiveAccountId!: pulumi.Output<string>;
    /**
     * A short description for the Cognitive Account Rai Blocklist.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * The name of the Cognitive Account Rai Blocklist. Changing this forces a new Cognitive Account Rai Blocklist to be created.
     */
    public readonly name!: pulumi.Output<string>;

    /**
     * Create a AccountRaiBlocklist resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AccountRaiBlocklistArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AccountRaiBlocklistArgs | AccountRaiBlocklistState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AccountRaiBlocklistState | undefined;
            resourceInputs["cognitiveAccountId"] = state ? state.cognitiveAccountId : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
        } else {
            const args = argsOrState as AccountRaiBlocklistArgs | undefined;
            if ((!args || args.cognitiveAccountId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'cognitiveAccountId'");
            }
            resourceInputs["cognitiveAccountId"] = args ? args.cognitiveAccountId : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AccountRaiBlocklist.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering AccountRaiBlocklist resources.
 */
export interface AccountRaiBlocklistState {
    /**
     * The ID of the Cognitive Services Account. Changing this forces a new Cognitive Account Rai Blocklist to be created.
     */
    cognitiveAccountId?: pulumi.Input<string>;
    /**
     * A short description for the Cognitive Account Rai Blocklist.
     */
    description?: pulumi.Input<string>;
    /**
     * The name of the Cognitive Account Rai Blocklist. Changing this forces a new Cognitive Account Rai Blocklist to be created.
     */
    name?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a AccountRaiBlocklist resource.
 */
export interface AccountRaiBlocklistArgs {
    /**
     * The ID of the Cognitive Services Account. Changing this forces a new Cognitive Account Rai Blocklist to be created.
     */
    cognitiveAccountId: pulumi.Input<string>;
    /**
     * A short description for the Cognitive Account Rai Blocklist.
     */
    description?: pulumi.Input<string>;
    /**
     * The name of the Cognitive Account Rai Blocklist. Changing this forces a new Cognitive Account Rai Blocklist to be created.
     */
    name?: pulumi.Input<string>;
}
