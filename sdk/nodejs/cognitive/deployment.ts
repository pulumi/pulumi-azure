// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Manages a Cognitive Services Account Deployment.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const exampleResourceGroup = new azure.core.ResourceGroup("exampleResourceGroup", {location: "West Europe"});
 * const exampleAccount = new azure.cognitive.Account("exampleAccount", {
 *     location: exampleResourceGroup.location,
 *     resourceGroupName: exampleResourceGroup.name,
 *     kind: "OpenAI",
 *     skuName: "S0",
 * });
 * const exampleDeployment = new azure.cognitive.Deployment("exampleDeployment", {
 *     cognitiveAccountId: exampleAccount.id,
 *     model: {
 *         format: "OpenAI",
 *         name: "text-curie-001",
 *         version: "1",
 *     },
 *     scale: {
 *         type: "Standard",
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * Cognitive Services Account Deployment can be imported using the `resource id`, e.g.
 *
 * ```sh
 *  $ pulumi import azure:cognitive/deployment:Deployment example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resourceGroup1/providers/Microsoft.CognitiveServices/accounts/account1/deployments/deployment1
 * ```
 */
export class Deployment extends pulumi.CustomResource {
    /**
     * Get an existing Deployment resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DeploymentState, opts?: pulumi.CustomResourceOptions): Deployment {
        return new Deployment(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure:cognitive/deployment:Deployment';

    /**
     * Returns true if the given object is an instance of Deployment.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Deployment {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Deployment.__pulumiType;
    }

    /**
     * The ID of the Cognitive Services Account. Changing this forces a new resource to be created.
     */
    public readonly cognitiveAccountId!: pulumi.Output<string>;
    /**
     * A `model` block as defined below. Changing this forces a new resource to be created.
     */
    public readonly model!: pulumi.Output<outputs.cognitive.DeploymentModel>;
    /**
     * The name of the Cognitive Services Account Deployment. Changing this forces a new resource to be created.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The name of RAI policy.
     */
    public readonly raiPolicyName!: pulumi.Output<string | undefined>;
    /**
     * A `scale` block as defined below.
     */
    public readonly scale!: pulumi.Output<outputs.cognitive.DeploymentScale>;
    /**
     * Deployment model version upgrade option. Possible values are `OnceNewDefaultVersionAvailable`, `OnceCurrentVersionExpired`, and `NoAutoUpgrade`. Defaults to `OnceNewDefaultVersionAvailable`. Changing this forces a new resource to be created.
     */
    public readonly versionUpgradeOption!: pulumi.Output<string | undefined>;

    /**
     * Create a Deployment resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DeploymentArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DeploymentArgs | DeploymentState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DeploymentState | undefined;
            resourceInputs["cognitiveAccountId"] = state ? state.cognitiveAccountId : undefined;
            resourceInputs["model"] = state ? state.model : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["raiPolicyName"] = state ? state.raiPolicyName : undefined;
            resourceInputs["scale"] = state ? state.scale : undefined;
            resourceInputs["versionUpgradeOption"] = state ? state.versionUpgradeOption : undefined;
        } else {
            const args = argsOrState as DeploymentArgs | undefined;
            if ((!args || args.cognitiveAccountId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'cognitiveAccountId'");
            }
            if ((!args || args.model === undefined) && !opts.urn) {
                throw new Error("Missing required property 'model'");
            }
            if ((!args || args.scale === undefined) && !opts.urn) {
                throw new Error("Missing required property 'scale'");
            }
            resourceInputs["cognitiveAccountId"] = args ? args.cognitiveAccountId : undefined;
            resourceInputs["model"] = args ? args.model : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["raiPolicyName"] = args ? args.raiPolicyName : undefined;
            resourceInputs["scale"] = args ? args.scale : undefined;
            resourceInputs["versionUpgradeOption"] = args ? args.versionUpgradeOption : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Deployment.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Deployment resources.
 */
export interface DeploymentState {
    /**
     * The ID of the Cognitive Services Account. Changing this forces a new resource to be created.
     */
    cognitiveAccountId?: pulumi.Input<string>;
    /**
     * A `model` block as defined below. Changing this forces a new resource to be created.
     */
    model?: pulumi.Input<inputs.cognitive.DeploymentModel>;
    /**
     * The name of the Cognitive Services Account Deployment. Changing this forces a new resource to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * The name of RAI policy.
     */
    raiPolicyName?: pulumi.Input<string>;
    /**
     * A `scale` block as defined below.
     */
    scale?: pulumi.Input<inputs.cognitive.DeploymentScale>;
    /**
     * Deployment model version upgrade option. Possible values are `OnceNewDefaultVersionAvailable`, `OnceCurrentVersionExpired`, and `NoAutoUpgrade`. Defaults to `OnceNewDefaultVersionAvailable`. Changing this forces a new resource to be created.
     */
    versionUpgradeOption?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Deployment resource.
 */
export interface DeploymentArgs {
    /**
     * The ID of the Cognitive Services Account. Changing this forces a new resource to be created.
     */
    cognitiveAccountId: pulumi.Input<string>;
    /**
     * A `model` block as defined below. Changing this forces a new resource to be created.
     */
    model: pulumi.Input<inputs.cognitive.DeploymentModel>;
    /**
     * The name of the Cognitive Services Account Deployment. Changing this forces a new resource to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * The name of RAI policy.
     */
    raiPolicyName?: pulumi.Input<string>;
    /**
     * A `scale` block as defined below.
     */
    scale: pulumi.Input<inputs.cognitive.DeploymentScale>;
    /**
     * Deployment model version upgrade option. Possible values are `OnceNewDefaultVersionAvailable`, `OnceCurrentVersionExpired`, and `NoAutoUpgrade`. Defaults to `OnceNewDefaultVersionAvailable`. Changing this forces a new resource to be created.
     */
    versionUpgradeOption?: pulumi.Input<string>;
}
