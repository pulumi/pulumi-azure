// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Manages an Azure Stack HCI Network Interface.
 *
 * ## Import
 *
 * Azure Stack HCI Network Interfaces can be imported using the `resource id`, e.g.
 *
 * ```sh
 * $ pulumi import azure:stack/hciNetworkInterface:HciNetworkInterface example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.AzureStackHCI/networkInterfaces/ni1
 * ```
 */
export class HciNetworkInterface extends pulumi.CustomResource {
    /**
     * Get an existing HciNetworkInterface resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: HciNetworkInterfaceState, opts?: pulumi.CustomResourceOptions): HciNetworkInterface {
        return new HciNetworkInterface(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure:stack/hciNetworkInterface:HciNetworkInterface';

    /**
     * Returns true if the given object is an instance of HciNetworkInterface.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is HciNetworkInterface {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === HciNetworkInterface.__pulumiType;
    }

    /**
     * The ID of the Custom Location where the Azure Stack HCI Network Interface should exist. Changing this forces a new resource to be created.
     */
    public readonly customLocationId!: pulumi.Output<string>;
    /**
     * A list of IPv4 addresses of DNS servers available to VMs deployed in the Network Interface. Changing this forces a new resource to be created.
     */
    public readonly dnsServers!: pulumi.Output<string[] | undefined>;
    /**
     * An `ipConfiguration` block as defined below. Changing this forces a new resource to be created.
     */
    public readonly ipConfiguration!: pulumi.Output<outputs.stack.HciNetworkInterfaceIpConfiguration>;
    /**
     * The Azure Region where the Azure Stack HCI Network Interface should exist. Changing this forces a new resource to be created.
     */
    public readonly location!: pulumi.Output<string>;
    /**
     * The MAC address of the Network Interface. Changing this forces a new resource to be created.
     *
     * > **Note:** If `macAddress` is not specified, it will be assigned by the server. If you experience a diff you may need to add this to `ignoreChanges`.
     */
    public readonly macAddress!: pulumi.Output<string | undefined>;
    /**
     * The name which should be used for this Azure Stack HCI Network Interface. Changing this forces a new resource to be created.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The name of the Resource Group where the Azure Stack HCI Network Interface should exist. Changing this forces a new resource to be created.
     */
    public readonly resourceGroupName!: pulumi.Output<string>;
    /**
     * A mapping of tags which should be assigned to the Azure Stack HCI Network Interface.
     */
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;

    /**
     * Create a HciNetworkInterface resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: HciNetworkInterfaceArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: HciNetworkInterfaceArgs | HciNetworkInterfaceState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as HciNetworkInterfaceState | undefined;
            resourceInputs["customLocationId"] = state ? state.customLocationId : undefined;
            resourceInputs["dnsServers"] = state ? state.dnsServers : undefined;
            resourceInputs["ipConfiguration"] = state ? state.ipConfiguration : undefined;
            resourceInputs["location"] = state ? state.location : undefined;
            resourceInputs["macAddress"] = state ? state.macAddress : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["resourceGroupName"] = state ? state.resourceGroupName : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
        } else {
            const args = argsOrState as HciNetworkInterfaceArgs | undefined;
            if ((!args || args.customLocationId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'customLocationId'");
            }
            if ((!args || args.ipConfiguration === undefined) && !opts.urn) {
                throw new Error("Missing required property 'ipConfiguration'");
            }
            if ((!args || args.resourceGroupName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            resourceInputs["customLocationId"] = args ? args.customLocationId : undefined;
            resourceInputs["dnsServers"] = args ? args.dnsServers : undefined;
            resourceInputs["ipConfiguration"] = args ? args.ipConfiguration : undefined;
            resourceInputs["location"] = args ? args.location : undefined;
            resourceInputs["macAddress"] = args ? args.macAddress : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(HciNetworkInterface.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering HciNetworkInterface resources.
 */
export interface HciNetworkInterfaceState {
    /**
     * The ID of the Custom Location where the Azure Stack HCI Network Interface should exist. Changing this forces a new resource to be created.
     */
    customLocationId?: pulumi.Input<string>;
    /**
     * A list of IPv4 addresses of DNS servers available to VMs deployed in the Network Interface. Changing this forces a new resource to be created.
     */
    dnsServers?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * An `ipConfiguration` block as defined below. Changing this forces a new resource to be created.
     */
    ipConfiguration?: pulumi.Input<inputs.stack.HciNetworkInterfaceIpConfiguration>;
    /**
     * The Azure Region where the Azure Stack HCI Network Interface should exist. Changing this forces a new resource to be created.
     */
    location?: pulumi.Input<string>;
    /**
     * The MAC address of the Network Interface. Changing this forces a new resource to be created.
     *
     * > **Note:** If `macAddress` is not specified, it will be assigned by the server. If you experience a diff you may need to add this to `ignoreChanges`.
     */
    macAddress?: pulumi.Input<string>;
    /**
     * The name which should be used for this Azure Stack HCI Network Interface. Changing this forces a new resource to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * The name of the Resource Group where the Azure Stack HCI Network Interface should exist. Changing this forces a new resource to be created.
     */
    resourceGroupName?: pulumi.Input<string>;
    /**
     * A mapping of tags which should be assigned to the Azure Stack HCI Network Interface.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

/**
 * The set of arguments for constructing a HciNetworkInterface resource.
 */
export interface HciNetworkInterfaceArgs {
    /**
     * The ID of the Custom Location where the Azure Stack HCI Network Interface should exist. Changing this forces a new resource to be created.
     */
    customLocationId: pulumi.Input<string>;
    /**
     * A list of IPv4 addresses of DNS servers available to VMs deployed in the Network Interface. Changing this forces a new resource to be created.
     */
    dnsServers?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * An `ipConfiguration` block as defined below. Changing this forces a new resource to be created.
     */
    ipConfiguration: pulumi.Input<inputs.stack.HciNetworkInterfaceIpConfiguration>;
    /**
     * The Azure Region where the Azure Stack HCI Network Interface should exist. Changing this forces a new resource to be created.
     */
    location?: pulumi.Input<string>;
    /**
     * The MAC address of the Network Interface. Changing this forces a new resource to be created.
     *
     * > **Note:** If `macAddress` is not specified, it will be assigned by the server. If you experience a diff you may need to add this to `ignoreChanges`.
     */
    macAddress?: pulumi.Input<string>;
    /**
     * The name which should be used for this Azure Stack HCI Network Interface. Changing this forces a new resource to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * The name of the Resource Group where the Azure Stack HCI Network Interface should exist. Changing this forces a new resource to be created.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * A mapping of tags which should be assigned to the Azure Stack HCI Network Interface.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
