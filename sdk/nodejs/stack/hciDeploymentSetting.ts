// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Manages a Stack HCI Deployment Setting.
 *
 * > **Note:** Completion of the prerequisites of deploying the Azure Stack HCI in your environment is outside the scope of this document. For more details refer to the [Azure Stack HCI deployment sequence](https://learn.microsoft.com/en-us/azure-stack/hci/deploy/deployment-introduction#deployment-sequence). If you encounter issues completing the prerequisites, we'd recommend opening a ticket with Microsoft Support.
 *
 * > **Note:** During the deployment process, the service will generate additional resources, including a new Arc Bridge Appliance and a Custom Location containing several Stack HCI Storage Paths. The provider will attempt to remove these resources on the deletion or recreation of `azure.stack.HciDeploymentSetting`.
 *
 * ## Import
 *
 * Stack HCI Deployment Settings can be imported using the `resource id`, e.g.
 *
 * ```sh
 * $ pulumi import azure:stack/hciDeploymentSetting:HciDeploymentSetting example /subscriptions/12345678-1234-9876-4563-123456789012/resourceGroups/group1/providers/Microsoft.AzureStackHCI/clusters/clus1/deploymentSettings/default
 * ```
 */
export class HciDeploymentSetting extends pulumi.CustomResource {
    /**
     * Get an existing HciDeploymentSetting resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: HciDeploymentSettingState, opts?: pulumi.CustomResourceOptions): HciDeploymentSetting {
        return new HciDeploymentSetting(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure:stack/hciDeploymentSetting:HciDeploymentSetting';

    /**
     * Returns true if the given object is an instance of HciDeploymentSetting.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is HciDeploymentSetting {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === HciDeploymentSetting.__pulumiType;
    }

    /**
     * Specifies a list of IDs of Azure ARC machine resource to be part of cluster. Changing this forces a new Stack HCI Deployment Setting to be created.
     */
    public readonly arcResourceIds!: pulumi.Output<string[]>;
    /**
     * One or more `scaleUnit` blocks as defined below. Changing this forces a new Stack HCI Deployment Setting to be created.
     */
    public readonly scaleUnits!: pulumi.Output<outputs.stack.HciDeploymentSettingScaleUnit[]>;
    /**
     * The ID of the Azure Stack HCI cluster. Changing this forces a new Stack HCI Deployment Setting to be created.
     */
    public readonly stackHciClusterId!: pulumi.Output<string>;
    /**
     * The deployment template version. The format must be a set of numbers separated by dots such as `10.0.0.0`. Changing this forces a new Stack HCI Deployment Setting to be created.
     */
    public readonly version!: pulumi.Output<string>;

    /**
     * Create a HciDeploymentSetting resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: HciDeploymentSettingArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: HciDeploymentSettingArgs | HciDeploymentSettingState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as HciDeploymentSettingState | undefined;
            resourceInputs["arcResourceIds"] = state ? state.arcResourceIds : undefined;
            resourceInputs["scaleUnits"] = state ? state.scaleUnits : undefined;
            resourceInputs["stackHciClusterId"] = state ? state.stackHciClusterId : undefined;
            resourceInputs["version"] = state ? state.version : undefined;
        } else {
            const args = argsOrState as HciDeploymentSettingArgs | undefined;
            if ((!args || args.arcResourceIds === undefined) && !opts.urn) {
                throw new Error("Missing required property 'arcResourceIds'");
            }
            if ((!args || args.scaleUnits === undefined) && !opts.urn) {
                throw new Error("Missing required property 'scaleUnits'");
            }
            if ((!args || args.stackHciClusterId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'stackHciClusterId'");
            }
            if ((!args || args.version === undefined) && !opts.urn) {
                throw new Error("Missing required property 'version'");
            }
            resourceInputs["arcResourceIds"] = args ? args.arcResourceIds : undefined;
            resourceInputs["scaleUnits"] = args ? args.scaleUnits : undefined;
            resourceInputs["stackHciClusterId"] = args ? args.stackHciClusterId : undefined;
            resourceInputs["version"] = args ? args.version : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(HciDeploymentSetting.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering HciDeploymentSetting resources.
 */
export interface HciDeploymentSettingState {
    /**
     * Specifies a list of IDs of Azure ARC machine resource to be part of cluster. Changing this forces a new Stack HCI Deployment Setting to be created.
     */
    arcResourceIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * One or more `scaleUnit` blocks as defined below. Changing this forces a new Stack HCI Deployment Setting to be created.
     */
    scaleUnits?: pulumi.Input<pulumi.Input<inputs.stack.HciDeploymentSettingScaleUnit>[]>;
    /**
     * The ID of the Azure Stack HCI cluster. Changing this forces a new Stack HCI Deployment Setting to be created.
     */
    stackHciClusterId?: pulumi.Input<string>;
    /**
     * The deployment template version. The format must be a set of numbers separated by dots such as `10.0.0.0`. Changing this forces a new Stack HCI Deployment Setting to be created.
     */
    version?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a HciDeploymentSetting resource.
 */
export interface HciDeploymentSettingArgs {
    /**
     * Specifies a list of IDs of Azure ARC machine resource to be part of cluster. Changing this forces a new Stack HCI Deployment Setting to be created.
     */
    arcResourceIds: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * One or more `scaleUnit` blocks as defined below. Changing this forces a new Stack HCI Deployment Setting to be created.
     */
    scaleUnits: pulumi.Input<pulumi.Input<inputs.stack.HciDeploymentSettingScaleUnit>[]>;
    /**
     * The ID of the Azure Stack HCI cluster. Changing this forces a new Stack HCI Deployment Setting to be created.
     */
    stackHciClusterId: pulumi.Input<string>;
    /**
     * The deployment template version. The format must be a set of numbers separated by dots such as `10.0.0.0`. Changing this forces a new Stack HCI Deployment Setting to be created.
     */
    version: pulumi.Input<string>;
}
