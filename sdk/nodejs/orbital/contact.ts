// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Manages an orbital contact.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const exampleResourceGroup = new azure.core.ResourceGroup("exampleResourceGroup", {location: "West Europe"});
 * const exampleSpacecraft = new azure.orbital.Spacecraft("exampleSpacecraft", {
 *     resourceGroupName: exampleResourceGroup.name,
 *     location: "westeurope",
 *     noradId: "12345",
 *     links: [{
 *         bandwidthMhz: 100,
 *         centerFrequencyMhz: 101,
 *         direction: "Uplink",
 *         polarization: "LHCP",
 *         name: "examplename",
 *     }],
 *     twoLineElements: [
 *         "1 23455U 94089A   97320.90946019  .00000140  00000-0  10191-3 0  2621",
 *         "2 23455  99.0090 272.6745 0008546 223.1686 136.8816 14.11711747148495",
 *     ],
 *     titleLine: "AQUA",
 *     tags: {
 *         "aks-managed-cluster-name": "9a57225d-a405-4d40-aa46-f13d2342abef",
 *     },
 * });
 * const exampleVirtualNetwork = new azure.network.VirtualNetwork("exampleVirtualNetwork", {
 *     addressSpaces: ["10.0.0.0/16"],
 *     location: exampleResourceGroup.location,
 *     resourceGroupName: exampleResourceGroup.name,
 * });
 * const exampleSubnet = new azure.network.Subnet("exampleSubnet", {
 *     resourceGroupName: exampleResourceGroup.name,
 *     virtualNetworkName: exampleVirtualNetwork.name,
 *     addressPrefixes: ["10.0.1.0/24"],
 *     delegations: [{
 *         name: "orbitalgateway",
 *         serviceDelegation: {
 *             name: "Microsoft.Orbital/orbitalGateways",
 *             actions: [
 *                 "Microsoft.Network/publicIPAddresses/join/action",
 *                 "Microsoft.Network/virtualNetworks/subnets/join/action",
 *                 "Microsoft.Network/virtualNetworks/read",
 *                 "Microsoft.Network/publicIPAddresses/read",
 *             ],
 *         },
 *     }],
 * });
 * const exampleContactProfile = new azure.orbital.ContactProfile("exampleContactProfile", {
 *     resourceGroupName: exampleResourceGroup.name,
 *     location: exampleResourceGroup.location,
 *     minimumVariableContactDuration: "PT1M",
 *     autoTracking: "disabled",
 *     links: [{
 *         channels: [{
 *             name: "channelname",
 *             bandwidthMhz: 100,
 *             centerFrequencyMhz: 101,
 *             endPoints: [{
 *                 endPointName: "AQUA_command",
 *                 ipAddress: "10.0.1.0",
 *                 port: "49153",
 *                 protocol: "TCP",
 *             }],
 *         }],
 *         direction: "Uplink",
 *         name: "RHCP_UL",
 *         polarization: "RHCP",
 *     }],
 *     networkConfigurationSubnetId: exampleSubnet.id,
 * });
 * const exampleContact = new azure.orbital.Contact("exampleContact", {
 *     spacecraftId: exampleSpacecraft.id,
 *     reservationStartTime: "2020-07-16T20:35:00.00Z",
 *     reservationEndTime: "2020-07-16T20:55:00.00Z",
 *     groundStationName: "WESTUS2_0",
 *     contactProfileId: exampleContactProfile.id,
 * });
 * ```
 *
 * ## Import
 *
 * Spacecraft can be imported using the `resource id`, e.g.
 *
 * ```sh
 *  $ pulumi import azure:orbital/contact:Contact example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.Orbital/spacecrafts/spacecraft1/contacts/contact1
 * ```
 */
export class Contact extends pulumi.CustomResource {
    /**
     * Get an existing Contact resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ContactState, opts?: pulumi.CustomResourceOptions): Contact {
        return new Contact(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure:orbital/contact:Contact';

    /**
     * Returns true if the given object is an instance of Contact.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Contact {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Contact.__pulumiType;
    }

    /**
     * ID of the orbital contact profile. Changing this forces a new resource to be created.
     */
    public readonly contactProfileId!: pulumi.Output<string>;
    /**
     * Name of the Azure ground station. Changing this forces a new resource to be created.
     */
    public readonly groundStationName!: pulumi.Output<string>;
    /**
     * The name of the Contact. Changing this forces a new resource to be created. Changing this forces a new resource to be created.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Reservation end time of the Contact. Changing this forces a new resource to be created.
     */
    public readonly reservationEndTime!: pulumi.Output<string>;
    /**
     * Reservation start time of the Contact. Changing this forces a new resource to be created.
     */
    public readonly reservationStartTime!: pulumi.Output<string>;
    /**
     * The ID of the spacecraft which the contact will be made to. Changing this forces a new resource to be created.
     */
    public readonly spacecraftId!: pulumi.Output<string>;

    /**
     * Create a Contact resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ContactArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ContactArgs | ContactState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ContactState | undefined;
            resourceInputs["contactProfileId"] = state ? state.contactProfileId : undefined;
            resourceInputs["groundStationName"] = state ? state.groundStationName : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["reservationEndTime"] = state ? state.reservationEndTime : undefined;
            resourceInputs["reservationStartTime"] = state ? state.reservationStartTime : undefined;
            resourceInputs["spacecraftId"] = state ? state.spacecraftId : undefined;
        } else {
            const args = argsOrState as ContactArgs | undefined;
            if ((!args || args.contactProfileId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'contactProfileId'");
            }
            if ((!args || args.groundStationName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'groundStationName'");
            }
            if ((!args || args.reservationEndTime === undefined) && !opts.urn) {
                throw new Error("Missing required property 'reservationEndTime'");
            }
            if ((!args || args.reservationStartTime === undefined) && !opts.urn) {
                throw new Error("Missing required property 'reservationStartTime'");
            }
            if ((!args || args.spacecraftId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'spacecraftId'");
            }
            resourceInputs["contactProfileId"] = args ? args.contactProfileId : undefined;
            resourceInputs["groundStationName"] = args ? args.groundStationName : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["reservationEndTime"] = args ? args.reservationEndTime : undefined;
            resourceInputs["reservationStartTime"] = args ? args.reservationStartTime : undefined;
            resourceInputs["spacecraftId"] = args ? args.spacecraftId : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Contact.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Contact resources.
 */
export interface ContactState {
    /**
     * ID of the orbital contact profile. Changing this forces a new resource to be created.
     */
    contactProfileId?: pulumi.Input<string>;
    /**
     * Name of the Azure ground station. Changing this forces a new resource to be created.
     */
    groundStationName?: pulumi.Input<string>;
    /**
     * The name of the Contact. Changing this forces a new resource to be created. Changing this forces a new resource to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * Reservation end time of the Contact. Changing this forces a new resource to be created.
     */
    reservationEndTime?: pulumi.Input<string>;
    /**
     * Reservation start time of the Contact. Changing this forces a new resource to be created.
     */
    reservationStartTime?: pulumi.Input<string>;
    /**
     * The ID of the spacecraft which the contact will be made to. Changing this forces a new resource to be created.
     */
    spacecraftId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Contact resource.
 */
export interface ContactArgs {
    /**
     * ID of the orbital contact profile. Changing this forces a new resource to be created.
     */
    contactProfileId: pulumi.Input<string>;
    /**
     * Name of the Azure ground station. Changing this forces a new resource to be created.
     */
    groundStationName: pulumi.Input<string>;
    /**
     * The name of the Contact. Changing this forces a new resource to be created. Changing this forces a new resource to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * Reservation end time of the Contact. Changing this forces a new resource to be created.
     */
    reservationEndTime: pulumi.Input<string>;
    /**
     * Reservation start time of the Contact. Changing this forces a new resource to be created.
     */
    reservationStartTime: pulumi.Input<string>;
    /**
     * The ID of the spacecraft which the contact will be made to. Changing this forces a new resource to be created.
     */
    spacecraftId: pulumi.Input<string>;
}
