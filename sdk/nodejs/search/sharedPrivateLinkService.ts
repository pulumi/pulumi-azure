// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Manages the Shared Private Link Service for an Azure Search Service.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const testResourceGroup = new azure.core.ResourceGroup("testResourceGroup", {location: "east us"});
 * const testService = new azure.search.Service("testService", {
 *     resourceGroupName: testResourceGroup.name,
 *     location: testResourceGroup.location,
 *     sku: "standard",
 * });
 * const testAccount = new azure.storage.Account("testAccount", {
 *     resourceGroupName: testResourceGroup.name,
 *     location: testResourceGroup.location,
 *     accountTier: "Standard",
 *     accountReplicationType: "LRS",
 * });
 * const testSharedPrivateLinkService = new azure.search.SharedPrivateLinkService("testSharedPrivateLinkService", {
 *     searchServiceId: testService.id,
 *     subresourceName: "blob",
 *     targetResourceId: testAccount.id,
 *     requestMessage: "please approve",
 * });
 * ```
 * ## Attributes Reference:
 *
 * The following attributes are exported:
 *
 * * `id` - The ID of the Azure Search Shared Private Link resource.
 *
 * * `status` - The status of a private endpoint connection. Possible values are Pending, Approved, Rejected or Disconnected.
 *
 * ## Import
 *
 * Azure Search Shared Private Link Resource can be imported using the `resource id`, e.g.
 *
 * ```sh
 *  $ pulumi import azure:search/sharedPrivateLinkService:SharedPrivateLinkService example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.Search/searchServices/service1/sharedPrivateLinkResources/resource1
 * ```
 */
export class SharedPrivateLinkService extends pulumi.CustomResource {
    /**
     * Get an existing SharedPrivateLinkService resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SharedPrivateLinkServiceState, opts?: pulumi.CustomResourceOptions): SharedPrivateLinkService {
        return new SharedPrivateLinkService(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure:search/sharedPrivateLinkService:SharedPrivateLinkService';

    /**
     * Returns true if the given object is an instance of SharedPrivateLinkService.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SharedPrivateLinkService {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SharedPrivateLinkService.__pulumiType;
    }

    /**
     * Specify the name of the Azure Search Shared Private Link Resource. Changing this forces a new resource to be created.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Specify the request message for requesting approval of the Shared Private Link Enabled Remote Resource.
     */
    public readonly requestMessage!: pulumi.Output<string | undefined>;
    /**
     * Specify the id of the Azure Search Service. Changing this forces a new resource to be created.
     */
    public readonly searchServiceId!: pulumi.Output<string>;
    public /*out*/ readonly status!: pulumi.Output<string>;
    /**
     * Specify the sub resource name which the Azure Search Private Endpoint is able to connect to. Changing this forces a new resource to be created.
     */
    public readonly subresourceName!: pulumi.Output<string>;
    /**
     * Specify the ID of the Shared Private Link Enabled Remote Resource which this Azure Search Private Endpoint should be connected to. Changing this forces a new resource to be created.
     */
    public readonly targetResourceId!: pulumi.Output<string>;

    /**
     * Create a SharedPrivateLinkService resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SharedPrivateLinkServiceArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SharedPrivateLinkServiceArgs | SharedPrivateLinkServiceState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SharedPrivateLinkServiceState | undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["requestMessage"] = state ? state.requestMessage : undefined;
            resourceInputs["searchServiceId"] = state ? state.searchServiceId : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["subresourceName"] = state ? state.subresourceName : undefined;
            resourceInputs["targetResourceId"] = state ? state.targetResourceId : undefined;
        } else {
            const args = argsOrState as SharedPrivateLinkServiceArgs | undefined;
            if ((!args || args.searchServiceId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'searchServiceId'");
            }
            if ((!args || args.subresourceName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'subresourceName'");
            }
            if ((!args || args.targetResourceId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'targetResourceId'");
            }
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["requestMessage"] = args ? args.requestMessage : undefined;
            resourceInputs["searchServiceId"] = args ? args.searchServiceId : undefined;
            resourceInputs["subresourceName"] = args ? args.subresourceName : undefined;
            resourceInputs["targetResourceId"] = args ? args.targetResourceId : undefined;
            resourceInputs["status"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SharedPrivateLinkService.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering SharedPrivateLinkService resources.
 */
export interface SharedPrivateLinkServiceState {
    /**
     * Specify the name of the Azure Search Shared Private Link Resource. Changing this forces a new resource to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * Specify the request message for requesting approval of the Shared Private Link Enabled Remote Resource.
     */
    requestMessage?: pulumi.Input<string>;
    /**
     * Specify the id of the Azure Search Service. Changing this forces a new resource to be created.
     */
    searchServiceId?: pulumi.Input<string>;
    status?: pulumi.Input<string>;
    /**
     * Specify the sub resource name which the Azure Search Private Endpoint is able to connect to. Changing this forces a new resource to be created.
     */
    subresourceName?: pulumi.Input<string>;
    /**
     * Specify the ID of the Shared Private Link Enabled Remote Resource which this Azure Search Private Endpoint should be connected to. Changing this forces a new resource to be created.
     */
    targetResourceId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a SharedPrivateLinkService resource.
 */
export interface SharedPrivateLinkServiceArgs {
    /**
     * Specify the name of the Azure Search Shared Private Link Resource. Changing this forces a new resource to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * Specify the request message for requesting approval of the Shared Private Link Enabled Remote Resource.
     */
    requestMessage?: pulumi.Input<string>;
    /**
     * Specify the id of the Azure Search Service. Changing this forces a new resource to be created.
     */
    searchServiceId: pulumi.Input<string>;
    /**
     * Specify the sub resource name which the Azure Search Private Endpoint is able to connect to. Changing this forces a new resource to be created.
     */
    subresourceName: pulumi.Input<string>;
    /**
     * Specify the ID of the Shared Private Link Enabled Remote Resource which this Azure Search Private Endpoint should be connected to. Changing this forces a new resource to be created.
     */
    targetResourceId: pulumi.Input<string>;
}
