// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export * from "./getNamespace";
export * from "./getNamespaceAuthorizationRule";
export * from "./getQueueAuthorizationRule";
export * from "./getSubscription";
export * from "./getTopicAuthorizationRule";
export * from "./namespace";
export * from "./namespaceAuthorizationRule";
export * from "./namespaceNetworkRuleSet";
export * from "./queue";
export * from "./queueAuthorizationRule";
export * from "./subscription";
export * from "./subscriptionRule";
export * from "./topic";
export * from "./topicAuthorizationRule";
export * from "./zMixins";

// Import resources to register:
import { Namespace } from "./namespace";
import { NamespaceAuthorizationRule } from "./namespaceAuthorizationRule";
import { NamespaceNetworkRuleSet } from "./namespaceNetworkRuleSet";
import { Queue } from "./queue";
import { QueueAuthorizationRule } from "./queueAuthorizationRule";
import { Subscription } from "./subscription";
import { SubscriptionRule } from "./subscriptionRule";
import { Topic } from "./topic";
import { TopicAuthorizationRule } from "./topicAuthorizationRule";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "azure:servicebus/namespace:Namespace":
                return new Namespace(name, <any>undefined, { urn })
            case "azure:servicebus/namespaceAuthorizationRule:NamespaceAuthorizationRule":
                return new NamespaceAuthorizationRule(name, <any>undefined, { urn })
            case "azure:servicebus/namespaceNetworkRuleSet:NamespaceNetworkRuleSet":
                return new NamespaceNetworkRuleSet(name, <any>undefined, { urn })
            case "azure:servicebus/queue:Queue":
                return new Queue(name, <any>undefined, { urn })
            case "azure:servicebus/queueAuthorizationRule:QueueAuthorizationRule":
                return new QueueAuthorizationRule(name, <any>undefined, { urn })
            case "azure:servicebus/subscription:Subscription":
                return new Subscription(name, <any>undefined, { urn })
            case "azure:servicebus/subscriptionRule:SubscriptionRule":
                return new SubscriptionRule(name, <any>undefined, { urn })
            case "azure:servicebus/topic:Topic":
                return new Topic(name, <any>undefined, { urn })
            case "azure:servicebus/topicAuthorizationRule:TopicAuthorizationRule":
                return new TopicAuthorizationRule(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure", "servicebus/namespace", _module)
pulumi.runtime.registerResourceModule("azure", "servicebus/namespaceAuthorizationRule", _module)
pulumi.runtime.registerResourceModule("azure", "servicebus/namespaceNetworkRuleSet", _module)
pulumi.runtime.registerResourceModule("azure", "servicebus/queue", _module)
pulumi.runtime.registerResourceModule("azure", "servicebus/queueAuthorizationRule", _module)
pulumi.runtime.registerResourceModule("azure", "servicebus/subscription", _module)
pulumi.runtime.registerResourceModule("azure", "servicebus/subscriptionRule", _module)
pulumi.runtime.registerResourceModule("azure", "servicebus/topic", _module)
pulumi.runtime.registerResourceModule("azure", "servicebus/topicAuthorizationRule", _module)
