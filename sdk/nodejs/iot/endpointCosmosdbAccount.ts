// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Manages an IotHub Cosmos DB Account Endpoint
 *
 * > **NOTE:** Endpoints can be defined either directly on the `azure.iot.IoTHub` resource, or using the `azurerm_iothub_endpoint_*` resources - but the two ways of defining the endpoints cannot be used together. If both are used against the same IoTHub, spurious changes will occur. Also, defining a `azurerm_iothub_endpoint_*` resource and another endpoint of a different type directly on the `azure.iot.IoTHub` resource is not supported.
 *
 * ## Import
 *
 * IoTHub Cosmos DB Account Endpoint can be imported using the `resource id`, e.g.
 *
 * ```sh
 *  $ pulumi import azure:iot/endpointCosmosdbAccount:EndpointCosmosdbAccount endpoint1 /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/mygroup1/providers/Microsoft.Devices/iotHubs/hub1/endpoints/cosmosDBAccountEndpoint1
 * ```
 */
export class EndpointCosmosdbAccount extends pulumi.CustomResource {
    /**
     * Get an existing EndpointCosmosdbAccount resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: EndpointCosmosdbAccountState, opts?: pulumi.CustomResourceOptions): EndpointCosmosdbAccount {
        return new EndpointCosmosdbAccount(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure:iot/endpointCosmosdbAccount:EndpointCosmosdbAccount';

    /**
     * Returns true if the given object is an instance of EndpointCosmosdbAccount.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is EndpointCosmosdbAccount {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === EndpointCosmosdbAccount.__pulumiType;
    }

    /**
     * The type used to authenticate against the Cosmos DB Account endpoint. Possible values are `keyBased` and `identityBased`. Defaults to `keyBased`.
     */
    public readonly authenticationType!: pulumi.Output<string | undefined>;
    /**
     * The name of the Cosmos DB Container in the Cosmos DB Database. Changing this forces a new resource to be created.
     */
    public readonly containerName!: pulumi.Output<string>;
    /**
     * The name of the Cosmos DB Database in the Cosmos DB Account. Changing this forces a new resource to be created.
     */
    public readonly databaseName!: pulumi.Output<string>;
    /**
     * The URI of the Cosmos DB Account. Changing this forces a new resource to be created.
     */
    public readonly endpointUri!: pulumi.Output<string>;
    /**
     * The ID of the User Managed Identity used to authenticate against the Cosmos DB Account endpoint.
     *
     * > **NOTE:** `identityId` can only be specified when `authenticationType` is `identityBased`. It must be one of the `identityIds` of the Iot Hub. If not specified when `authenticationType` is `identityBased`, System Assigned Managed Identity of the Iot Hub will be used.
     */
    public readonly identityId!: pulumi.Output<string | undefined>;
    /**
     * The ID of the IoT Hub to create the endpoint. Changing this forces a new resource to be created.
     */
    public readonly iothubId!: pulumi.Output<string>;
    /**
     * The name of the endpoint. The name must be unique across endpoint types. The following names are reserved: `events`, `operationsMonitoringEvents`, `fileNotifications` and `$default`. Changing this forces a new resource to be created.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The name of the partition key associated with the Cosmos DB Container.
     */
    public readonly partitionKeyName!: pulumi.Output<string | undefined>;
    /**
     * The template for generating a synthetic partition key value for use within the Cosmos DB Container.
     */
    public readonly partitionKeyTemplate!: pulumi.Output<string | undefined>;
    /**
     * The primary key of the Cosmos DB Account.
     *
     * > **NOTE:** `primaryKey` must and can only be specified when `authenticationType` is `keyBased`.
     */
    public readonly primaryKey!: pulumi.Output<string | undefined>;
    /**
     * The name of the resource group under which the Cosmos DB Account has been created. Changing this forces a new resource to be created.
     */
    public readonly resourceGroupName!: pulumi.Output<string>;
    /**
     * The secondary key of the Cosmos DB Account.
     *
     * > **NOTE:** `secondaryKey` must and can only be specified when `authenticationType` is `keyBased`.
     */
    public readonly secondaryKey!: pulumi.Output<string | undefined>;

    /**
     * Create a EndpointCosmosdbAccount resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: EndpointCosmosdbAccountArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: EndpointCosmosdbAccountArgs | EndpointCosmosdbAccountState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as EndpointCosmosdbAccountState | undefined;
            resourceInputs["authenticationType"] = state ? state.authenticationType : undefined;
            resourceInputs["containerName"] = state ? state.containerName : undefined;
            resourceInputs["databaseName"] = state ? state.databaseName : undefined;
            resourceInputs["endpointUri"] = state ? state.endpointUri : undefined;
            resourceInputs["identityId"] = state ? state.identityId : undefined;
            resourceInputs["iothubId"] = state ? state.iothubId : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["partitionKeyName"] = state ? state.partitionKeyName : undefined;
            resourceInputs["partitionKeyTemplate"] = state ? state.partitionKeyTemplate : undefined;
            resourceInputs["primaryKey"] = state ? state.primaryKey : undefined;
            resourceInputs["resourceGroupName"] = state ? state.resourceGroupName : undefined;
            resourceInputs["secondaryKey"] = state ? state.secondaryKey : undefined;
        } else {
            const args = argsOrState as EndpointCosmosdbAccountArgs | undefined;
            if ((!args || args.containerName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'containerName'");
            }
            if ((!args || args.databaseName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'databaseName'");
            }
            if ((!args || args.endpointUri === undefined) && !opts.urn) {
                throw new Error("Missing required property 'endpointUri'");
            }
            if ((!args || args.iothubId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'iothubId'");
            }
            if ((!args || args.resourceGroupName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            resourceInputs["authenticationType"] = args ? args.authenticationType : undefined;
            resourceInputs["containerName"] = args ? args.containerName : undefined;
            resourceInputs["databaseName"] = args ? args.databaseName : undefined;
            resourceInputs["endpointUri"] = args ? args.endpointUri : undefined;
            resourceInputs["identityId"] = args ? args.identityId : undefined;
            resourceInputs["iothubId"] = args ? args.iothubId : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["partitionKeyName"] = args ? args.partitionKeyName : undefined;
            resourceInputs["partitionKeyTemplate"] = args ? args.partitionKeyTemplate : undefined;
            resourceInputs["primaryKey"] = args?.primaryKey ? pulumi.secret(args.primaryKey) : undefined;
            resourceInputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            resourceInputs["secondaryKey"] = args?.secondaryKey ? pulumi.secret(args.secondaryKey) : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["primaryKey", "secondaryKey"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(EndpointCosmosdbAccount.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering EndpointCosmosdbAccount resources.
 */
export interface EndpointCosmosdbAccountState {
    /**
     * The type used to authenticate against the Cosmos DB Account endpoint. Possible values are `keyBased` and `identityBased`. Defaults to `keyBased`.
     */
    authenticationType?: pulumi.Input<string>;
    /**
     * The name of the Cosmos DB Container in the Cosmos DB Database. Changing this forces a new resource to be created.
     */
    containerName?: pulumi.Input<string>;
    /**
     * The name of the Cosmos DB Database in the Cosmos DB Account. Changing this forces a new resource to be created.
     */
    databaseName?: pulumi.Input<string>;
    /**
     * The URI of the Cosmos DB Account. Changing this forces a new resource to be created.
     */
    endpointUri?: pulumi.Input<string>;
    /**
     * The ID of the User Managed Identity used to authenticate against the Cosmos DB Account endpoint.
     *
     * > **NOTE:** `identityId` can only be specified when `authenticationType` is `identityBased`. It must be one of the `identityIds` of the Iot Hub. If not specified when `authenticationType` is `identityBased`, System Assigned Managed Identity of the Iot Hub will be used.
     */
    identityId?: pulumi.Input<string>;
    /**
     * The ID of the IoT Hub to create the endpoint. Changing this forces a new resource to be created.
     */
    iothubId?: pulumi.Input<string>;
    /**
     * The name of the endpoint. The name must be unique across endpoint types. The following names are reserved: `events`, `operationsMonitoringEvents`, `fileNotifications` and `$default`. Changing this forces a new resource to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * The name of the partition key associated with the Cosmos DB Container.
     */
    partitionKeyName?: pulumi.Input<string>;
    /**
     * The template for generating a synthetic partition key value for use within the Cosmos DB Container.
     */
    partitionKeyTemplate?: pulumi.Input<string>;
    /**
     * The primary key of the Cosmos DB Account.
     *
     * > **NOTE:** `primaryKey` must and can only be specified when `authenticationType` is `keyBased`.
     */
    primaryKey?: pulumi.Input<string>;
    /**
     * The name of the resource group under which the Cosmos DB Account has been created. Changing this forces a new resource to be created.
     */
    resourceGroupName?: pulumi.Input<string>;
    /**
     * The secondary key of the Cosmos DB Account.
     *
     * > **NOTE:** `secondaryKey` must and can only be specified when `authenticationType` is `keyBased`.
     */
    secondaryKey?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a EndpointCosmosdbAccount resource.
 */
export interface EndpointCosmosdbAccountArgs {
    /**
     * The type used to authenticate against the Cosmos DB Account endpoint. Possible values are `keyBased` and `identityBased`. Defaults to `keyBased`.
     */
    authenticationType?: pulumi.Input<string>;
    /**
     * The name of the Cosmos DB Container in the Cosmos DB Database. Changing this forces a new resource to be created.
     */
    containerName: pulumi.Input<string>;
    /**
     * The name of the Cosmos DB Database in the Cosmos DB Account. Changing this forces a new resource to be created.
     */
    databaseName: pulumi.Input<string>;
    /**
     * The URI of the Cosmos DB Account. Changing this forces a new resource to be created.
     */
    endpointUri: pulumi.Input<string>;
    /**
     * The ID of the User Managed Identity used to authenticate against the Cosmos DB Account endpoint.
     *
     * > **NOTE:** `identityId` can only be specified when `authenticationType` is `identityBased`. It must be one of the `identityIds` of the Iot Hub. If not specified when `authenticationType` is `identityBased`, System Assigned Managed Identity of the Iot Hub will be used.
     */
    identityId?: pulumi.Input<string>;
    /**
     * The ID of the IoT Hub to create the endpoint. Changing this forces a new resource to be created.
     */
    iothubId: pulumi.Input<string>;
    /**
     * The name of the endpoint. The name must be unique across endpoint types. The following names are reserved: `events`, `operationsMonitoringEvents`, `fileNotifications` and `$default`. Changing this forces a new resource to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * The name of the partition key associated with the Cosmos DB Container.
     */
    partitionKeyName?: pulumi.Input<string>;
    /**
     * The template for generating a synthetic partition key value for use within the Cosmos DB Container.
     */
    partitionKeyTemplate?: pulumi.Input<string>;
    /**
     * The primary key of the Cosmos DB Account.
     *
     * > **NOTE:** `primaryKey` must and can only be specified when `authenticationType` is `keyBased`.
     */
    primaryKey?: pulumi.Input<string>;
    /**
     * The name of the resource group under which the Cosmos DB Account has been created. Changing this forces a new resource to be created.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * The secondary key of the Cosmos DB Account.
     *
     * > **NOTE:** `secondaryKey` must and can only be specified when `authenticationType` is `keyBased`.
     */
    secondaryKey?: pulumi.Input<string>;
}
