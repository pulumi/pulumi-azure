// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Manages an IotHub Fallback Route
 *
 * ## Disclaimers
 *
 * > **Note:** Fallback route can be defined either directly on the `azure.iot.IoTHub` resource, or using the `azure.iot.FallbackRoute` resource - but the two cannot be used together. If both are used against the same IoTHub, spurious changes will occur.
 *
 * > **Note:** Since this resource is provisioned by default, the Azure Provider will not check for the presence of an existing resource prior to attempting to create it.
 *
 * ## Import
 *
 * IoTHub Fallback Route can be imported using the `resource id`, e.g.
 *
 * ```sh
 *  $ pulumi import azure:iot/fallbackRoute:FallbackRoute route1 /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/mygroup1/providers/Microsoft.Devices/iotHubs/hub1/fallbackRoute/default
 * ```
 */
export class FallbackRoute extends pulumi.CustomResource {
    /**
     * Get an existing FallbackRoute resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: FallbackRouteState, opts?: pulumi.CustomResourceOptions): FallbackRoute {
        return new FallbackRoute(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure:iot/fallbackRoute:FallbackRoute';

    /**
     * Returns true if the given object is an instance of FallbackRoute.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is FallbackRoute {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === FallbackRoute.__pulumiType;
    }

    /**
     * The condition that is evaluated to apply the routing rule. For grammar, see: <https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-query-language>. Defaults to `true`.
     */
    public readonly condition!: pulumi.Output<string | undefined>;
    /**
     * Used to specify whether the fallback route is enabled.
     */
    public readonly enabled!: pulumi.Output<boolean>;
    /**
     * The endpoints to which messages that satisfy the condition are routed. Currently only 1 endpoint is allowed.
     */
    public readonly endpointNames!: pulumi.Output<string>;
    /**
     * The name of the IoTHub to which this Fallback Route belongs. Changing this forces a new resource to be created.
     */
    public readonly iothubName!: pulumi.Output<string>;
    /**
     * The name of the resource group under which the IotHub Storage Container Endpoint resource has to be created. Changing this forces a new resource to be created.
     */
    public readonly resourceGroupName!: pulumi.Output<string>;
    /**
     * The source that the routing rule is to be applied to. Possible values include: `DeviceConnectionStateEvents`, `DeviceJobLifecycleEvents`, `DeviceLifecycleEvents`, `DeviceMessages`, `DigitalTwinChangeEvents`, `Invalid`, `TwinChangeEvents`. Defaults to `DeviceMessages`.
     */
    public readonly source!: pulumi.Output<string | undefined>;

    /**
     * Create a FallbackRoute resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: FallbackRouteArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: FallbackRouteArgs | FallbackRouteState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as FallbackRouteState | undefined;
            resourceInputs["condition"] = state ? state.condition : undefined;
            resourceInputs["enabled"] = state ? state.enabled : undefined;
            resourceInputs["endpointNames"] = state ? state.endpointNames : undefined;
            resourceInputs["iothubName"] = state ? state.iothubName : undefined;
            resourceInputs["resourceGroupName"] = state ? state.resourceGroupName : undefined;
            resourceInputs["source"] = state ? state.source : undefined;
        } else {
            const args = argsOrState as FallbackRouteArgs | undefined;
            if ((!args || args.enabled === undefined) && !opts.urn) {
                throw new Error("Missing required property 'enabled'");
            }
            if ((!args || args.endpointNames === undefined) && !opts.urn) {
                throw new Error("Missing required property 'endpointNames'");
            }
            if ((!args || args.iothubName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'iothubName'");
            }
            if ((!args || args.resourceGroupName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            resourceInputs["condition"] = args ? args.condition : undefined;
            resourceInputs["enabled"] = args ? args.enabled : undefined;
            resourceInputs["endpointNames"] = args ? args.endpointNames : undefined;
            resourceInputs["iothubName"] = args ? args.iothubName : undefined;
            resourceInputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            resourceInputs["source"] = args ? args.source : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(FallbackRoute.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering FallbackRoute resources.
 */
export interface FallbackRouteState {
    /**
     * The condition that is evaluated to apply the routing rule. For grammar, see: <https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-query-language>. Defaults to `true`.
     */
    condition?: pulumi.Input<string>;
    /**
     * Used to specify whether the fallback route is enabled.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * The endpoints to which messages that satisfy the condition are routed. Currently only 1 endpoint is allowed.
     */
    endpointNames?: pulumi.Input<string>;
    /**
     * The name of the IoTHub to which this Fallback Route belongs. Changing this forces a new resource to be created.
     */
    iothubName?: pulumi.Input<string>;
    /**
     * The name of the resource group under which the IotHub Storage Container Endpoint resource has to be created. Changing this forces a new resource to be created.
     */
    resourceGroupName?: pulumi.Input<string>;
    /**
     * The source that the routing rule is to be applied to. Possible values include: `DeviceConnectionStateEvents`, `DeviceJobLifecycleEvents`, `DeviceLifecycleEvents`, `DeviceMessages`, `DigitalTwinChangeEvents`, `Invalid`, `TwinChangeEvents`. Defaults to `DeviceMessages`.
     */
    source?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a FallbackRoute resource.
 */
export interface FallbackRouteArgs {
    /**
     * The condition that is evaluated to apply the routing rule. For grammar, see: <https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-query-language>. Defaults to `true`.
     */
    condition?: pulumi.Input<string>;
    /**
     * Used to specify whether the fallback route is enabled.
     */
    enabled: pulumi.Input<boolean>;
    /**
     * The endpoints to which messages that satisfy the condition are routed. Currently only 1 endpoint is allowed.
     */
    endpointNames: pulumi.Input<string>;
    /**
     * The name of the IoTHub to which this Fallback Route belongs. Changing this forces a new resource to be created.
     */
    iothubName: pulumi.Input<string>;
    /**
     * The name of the resource group under which the IotHub Storage Container Endpoint resource has to be created. Changing this forces a new resource to be created.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * The source that the routing rule is to be applied to. Possible values include: `DeviceConnectionStateEvents`, `DeviceJobLifecycleEvents`, `DeviceLifecycleEvents`, `DeviceMessages`, `DigitalTwinChangeEvents`, `Invalid`, `TwinChangeEvents`. Defaults to `DeviceMessages`.
     */
    source?: pulumi.Input<string>;
}
