// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { ElasticSanArgs, ElasticSanState } from "./elasticSan";
export type ElasticSan = import("./elasticSan").ElasticSan;
export const ElasticSan: typeof import("./elasticSan").ElasticSan = null as any;
utilities.lazyLoad(exports, ["ElasticSan"], () => require("./elasticSan"));

export { GetArgs, GetResult, GetOutputArgs } from "./get";
export const get: typeof import("./get").get = null as any;
export const getOutput: typeof import("./get").getOutput = null as any;
utilities.lazyLoad(exports, ["get","getOutput"], () => require("./get"));

export { VolumeArgs, VolumeState } from "./volume";
export type Volume = import("./volume").Volume;
export const Volume: typeof import("./volume").Volume = null as any;
utilities.lazyLoad(exports, ["Volume"], () => require("./volume"));

export { VolumeGroupArgs, VolumeGroupState } from "./volumeGroup";
export type VolumeGroup = import("./volumeGroup").VolumeGroup;
export const VolumeGroup: typeof import("./volumeGroup").VolumeGroup = null as any;
utilities.lazyLoad(exports, ["VolumeGroup"], () => require("./volumeGroup"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "azure:elasticsan/elasticSan:ElasticSan":
                return new ElasticSan(name, <any>undefined, { urn })
            case "azure:elasticsan/volume:Volume":
                return new Volume(name, <any>undefined, { urn })
            case "azure:elasticsan/volumeGroup:VolumeGroup":
                return new VolumeGroup(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure", "elasticsan/elasticSan", _module)
pulumi.runtime.registerResourceModule("azure", "elasticsan/volume", _module)
pulumi.runtime.registerResourceModule("azure", "elasticsan/volumeGroup", _module)
