// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Manages an Elastic SAN resource.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const exampleResourceGroup = new azure.core.ResourceGroup("exampleResourceGroup", {location: "West Europe"});
 * const exampleElasticSan = new azure.elasticsan.ElasticSan("exampleElasticSan", {
 *     resourceGroupName: exampleResourceGroup.name,
 *     location: exampleResourceGroup.location,
 *     baseSizeInTib: 1,
 *     extendedSizeInTib: 2,
 *     sku: {
 *         name: "example-value",
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * An existing Elastic SAN can be imported into Terraform using the `resource id`, e.g.
 *
 * ```sh
 *  $ pulumi import azure:elasticsan/elasticSan:ElasticSan example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rg1/providers/Microsoft.ElasticSan/elasticSans/esan1
 * ```
 */
export class ElasticSan extends pulumi.CustomResource {
    /**
     * Get an existing ElasticSan resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ElasticSanState, opts?: pulumi.CustomResourceOptions): ElasticSan {
        return new ElasticSan(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure:elasticsan/elasticSan:ElasticSan';

    /**
     * Returns true if the given object is an instance of ElasticSan.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ElasticSan {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ElasticSan.__pulumiType;
    }

    /**
     * Specifies the base size of the Elastic SAN resource in TiB. Possible values are between `1` and `100`.
     *
     * > **NOTE** When updating `baseSizeInTib`, the new value should be greater than the existing one.
     */
    public readonly baseSizeInTib!: pulumi.Output<number>;
    /**
     * Specifies the extended size of the Elastic SAN resource in TiB. Possible values are between `1` and `100`.
     *
     * > **NOTE** `extendedSizeInTib` cannot be removed and when updating, the new value should be greater than the existing one.
     */
    public readonly extendedSizeInTib!: pulumi.Output<number | undefined>;
    /**
     * The Azure Region where the Elastic SAN resource should exist. Changing this forces a new resource to be created.
     */
    public readonly location!: pulumi.Output<string>;
    /**
     * Specifies the name of this Elastic SAN resource. Changing this forces a new resource to be created.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Specifies the name of the Resource Group within which this Elastic SAN resource should exist. Changing this forces a new resource to be created.
     */
    public readonly resourceGroupName!: pulumi.Output<string>;
    /**
     * A `sku` block as defined below.
     */
    public readonly sku!: pulumi.Output<outputs.elasticsan.ElasticSanSku>;
    /**
     * A mapping of tags which should be assigned to the Elastic SAN resource.
     */
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * Total Provisioned IOps of the Elastic SAN resource.
     */
    public /*out*/ readonly totalIops!: pulumi.Output<number>;
    /**
     * Total Provisioned MBps Elastic SAN resource.
     */
    public /*out*/ readonly totalMbps!: pulumi.Output<number>;
    /**
     * Total size of the Elastic SAN resource in TB.
     */
    public /*out*/ readonly totalSizeInTib!: pulumi.Output<number>;
    /**
     * Total size of the provisioned Volumes in GiB.
     */
    public /*out*/ readonly totalVolumeSizeInGib!: pulumi.Output<number>;
    /**
     * Total number of volume groups in this Elastic SAN resource.
     */
    public /*out*/ readonly volumeGroupCount!: pulumi.Output<number>;
    /**
     * Logical zone for the Elastic SAN resource. Changing this forces a new resource to be created.
     *
     * > **NOTE** `zones` cannot be specified if `sku.name` is set to `Premium_ZRS`.
     */
    public readonly zones!: pulumi.Output<string[] | undefined>;

    /**
     * Create a ElasticSan resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ElasticSanArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ElasticSanArgs | ElasticSanState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ElasticSanState | undefined;
            resourceInputs["baseSizeInTib"] = state ? state.baseSizeInTib : undefined;
            resourceInputs["extendedSizeInTib"] = state ? state.extendedSizeInTib : undefined;
            resourceInputs["location"] = state ? state.location : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["resourceGroupName"] = state ? state.resourceGroupName : undefined;
            resourceInputs["sku"] = state ? state.sku : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["totalIops"] = state ? state.totalIops : undefined;
            resourceInputs["totalMbps"] = state ? state.totalMbps : undefined;
            resourceInputs["totalSizeInTib"] = state ? state.totalSizeInTib : undefined;
            resourceInputs["totalVolumeSizeInGib"] = state ? state.totalVolumeSizeInGib : undefined;
            resourceInputs["volumeGroupCount"] = state ? state.volumeGroupCount : undefined;
            resourceInputs["zones"] = state ? state.zones : undefined;
        } else {
            const args = argsOrState as ElasticSanArgs | undefined;
            if ((!args || args.baseSizeInTib === undefined) && !opts.urn) {
                throw new Error("Missing required property 'baseSizeInTib'");
            }
            if ((!args || args.resourceGroupName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            if ((!args || args.sku === undefined) && !opts.urn) {
                throw new Error("Missing required property 'sku'");
            }
            resourceInputs["baseSizeInTib"] = args ? args.baseSizeInTib : undefined;
            resourceInputs["extendedSizeInTib"] = args ? args.extendedSizeInTib : undefined;
            resourceInputs["location"] = args ? args.location : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            resourceInputs["sku"] = args ? args.sku : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["zones"] = args ? args.zones : undefined;
            resourceInputs["totalIops"] = undefined /*out*/;
            resourceInputs["totalMbps"] = undefined /*out*/;
            resourceInputs["totalSizeInTib"] = undefined /*out*/;
            resourceInputs["totalVolumeSizeInGib"] = undefined /*out*/;
            resourceInputs["volumeGroupCount"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ElasticSan.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ElasticSan resources.
 */
export interface ElasticSanState {
    /**
     * Specifies the base size of the Elastic SAN resource in TiB. Possible values are between `1` and `100`.
     *
     * > **NOTE** When updating `baseSizeInTib`, the new value should be greater than the existing one.
     */
    baseSizeInTib?: pulumi.Input<number>;
    /**
     * Specifies the extended size of the Elastic SAN resource in TiB. Possible values are between `1` and `100`.
     *
     * > **NOTE** `extendedSizeInTib` cannot be removed and when updating, the new value should be greater than the existing one.
     */
    extendedSizeInTib?: pulumi.Input<number>;
    /**
     * The Azure Region where the Elastic SAN resource should exist. Changing this forces a new resource to be created.
     */
    location?: pulumi.Input<string>;
    /**
     * Specifies the name of this Elastic SAN resource. Changing this forces a new resource to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * Specifies the name of the Resource Group within which this Elastic SAN resource should exist. Changing this forces a new resource to be created.
     */
    resourceGroupName?: pulumi.Input<string>;
    /**
     * A `sku` block as defined below.
     */
    sku?: pulumi.Input<inputs.elasticsan.ElasticSanSku>;
    /**
     * A mapping of tags which should be assigned to the Elastic SAN resource.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Total Provisioned IOps of the Elastic SAN resource.
     */
    totalIops?: pulumi.Input<number>;
    /**
     * Total Provisioned MBps Elastic SAN resource.
     */
    totalMbps?: pulumi.Input<number>;
    /**
     * Total size of the Elastic SAN resource in TB.
     */
    totalSizeInTib?: pulumi.Input<number>;
    /**
     * Total size of the provisioned Volumes in GiB.
     */
    totalVolumeSizeInGib?: pulumi.Input<number>;
    /**
     * Total number of volume groups in this Elastic SAN resource.
     */
    volumeGroupCount?: pulumi.Input<number>;
    /**
     * Logical zone for the Elastic SAN resource. Changing this forces a new resource to be created.
     *
     * > **NOTE** `zones` cannot be specified if `sku.name` is set to `Premium_ZRS`.
     */
    zones?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * The set of arguments for constructing a ElasticSan resource.
 */
export interface ElasticSanArgs {
    /**
     * Specifies the base size of the Elastic SAN resource in TiB. Possible values are between `1` and `100`.
     *
     * > **NOTE** When updating `baseSizeInTib`, the new value should be greater than the existing one.
     */
    baseSizeInTib: pulumi.Input<number>;
    /**
     * Specifies the extended size of the Elastic SAN resource in TiB. Possible values are between `1` and `100`.
     *
     * > **NOTE** `extendedSizeInTib` cannot be removed and when updating, the new value should be greater than the existing one.
     */
    extendedSizeInTib?: pulumi.Input<number>;
    /**
     * The Azure Region where the Elastic SAN resource should exist. Changing this forces a new resource to be created.
     */
    location?: pulumi.Input<string>;
    /**
     * Specifies the name of this Elastic SAN resource. Changing this forces a new resource to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * Specifies the name of the Resource Group within which this Elastic SAN resource should exist. Changing this forces a new resource to be created.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * A `sku` block as defined below.
     */
    sku: pulumi.Input<inputs.elasticsan.ElasticSanSku>;
    /**
     * A mapping of tags which should be assigned to the Elastic SAN resource.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Logical zone for the Elastic SAN resource. Changing this forces a new resource to be created.
     *
     * > **NOTE** `zones` cannot be specified if `sku.name` is set to `Premium_ZRS`.
     */
    zones?: pulumi.Input<pulumi.Input<string>[]>;
}
