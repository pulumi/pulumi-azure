// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Manages a Kusto / Cosmos Database Data Connection.
 *
 * ## Import
 *
 * Kusto / Cosmos Database Data Connection can be imported using the `resource id`, e.g.
 *
 * ```sh
 *  $ pulumi import azure:kusto/cosmosdbDataConnection:CosmosdbDataConnection example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.Kusto/clusters/cluster1/databases/database1/dataConnections/dataConnection1
 * ```
 */
export class CosmosdbDataConnection extends pulumi.CustomResource {
    /**
     * Get an existing CosmosdbDataConnection resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CosmosdbDataConnectionState, opts?: pulumi.CustomResourceOptions): CosmosdbDataConnection {
        return new CosmosdbDataConnection(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure:kusto/cosmosdbDataConnection:CosmosdbDataConnection';

    /**
     * Returns true if the given object is an instance of CosmosdbDataConnection.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CosmosdbDataConnection {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CosmosdbDataConnection.__pulumiType;
    }

    /**
     * The name of an existing container in the Cosmos DB database. Changing this forces a new Kusto Cosmos DB Connection to be created.
     */
    public readonly cosmosdbContainerId!: pulumi.Output<string>;
    /**
     * The name of the database in the Kusto cluster. Changing this forces a new Kusto Cosmos DB Connection to be created.
     */
    public readonly kustoDatabaseId!: pulumi.Output<string>;
    /**
     * The Azure Region where the Data Explorer should exist. Changing this forces a new Kusto Cosmos DB Connection to be created.
     */
    public readonly location!: pulumi.Output<string>;
    /**
     * The resource ID of a managed system or user-assigned identity. The identity is used to authenticate with Cosmos DB. Changing this forces a new Kusto Cosmos DB Connection to be created.
     */
    public readonly managedIdentityId!: pulumi.Output<string>;
    /**
     * The name of an existing mapping rule to use when ingesting the retrieved data. Changing this forces a new Kusto Cosmos DB Connection to be created.
     */
    public readonly mappingRuleName!: pulumi.Output<string | undefined>;
    /**
     * The name of the data connection. Changing this forces a new Kusto Cosmos DB Connection to be created.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * If defined, the data connection retrieves Cosmos DB documents created or updated after the specified retrieval start date. Changing this forces a new Kusto Cosmos DB Connection to be created.
     */
    public readonly retrievalStartDate!: pulumi.Output<string | undefined>;
    /**
     * The case-sensitive name of the existing target table in your cluster. Retrieved data is ingested into this table. Changing this forces a new Kusto Cosmos DB Connection to be created.
     */
    public readonly tableName!: pulumi.Output<string>;

    /**
     * Create a CosmosdbDataConnection resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CosmosdbDataConnectionArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CosmosdbDataConnectionArgs | CosmosdbDataConnectionState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as CosmosdbDataConnectionState | undefined;
            resourceInputs["cosmosdbContainerId"] = state ? state.cosmosdbContainerId : undefined;
            resourceInputs["kustoDatabaseId"] = state ? state.kustoDatabaseId : undefined;
            resourceInputs["location"] = state ? state.location : undefined;
            resourceInputs["managedIdentityId"] = state ? state.managedIdentityId : undefined;
            resourceInputs["mappingRuleName"] = state ? state.mappingRuleName : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["retrievalStartDate"] = state ? state.retrievalStartDate : undefined;
            resourceInputs["tableName"] = state ? state.tableName : undefined;
        } else {
            const args = argsOrState as CosmosdbDataConnectionArgs | undefined;
            if ((!args || args.cosmosdbContainerId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'cosmosdbContainerId'");
            }
            if ((!args || args.kustoDatabaseId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'kustoDatabaseId'");
            }
            if ((!args || args.managedIdentityId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'managedIdentityId'");
            }
            if ((!args || args.tableName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'tableName'");
            }
            resourceInputs["cosmosdbContainerId"] = args ? args.cosmosdbContainerId : undefined;
            resourceInputs["kustoDatabaseId"] = args ? args.kustoDatabaseId : undefined;
            resourceInputs["location"] = args ? args.location : undefined;
            resourceInputs["managedIdentityId"] = args ? args.managedIdentityId : undefined;
            resourceInputs["mappingRuleName"] = args ? args.mappingRuleName : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["retrievalStartDate"] = args ? args.retrievalStartDate : undefined;
            resourceInputs["tableName"] = args ? args.tableName : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(CosmosdbDataConnection.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering CosmosdbDataConnection resources.
 */
export interface CosmosdbDataConnectionState {
    /**
     * The name of an existing container in the Cosmos DB database. Changing this forces a new Kusto Cosmos DB Connection to be created.
     */
    cosmosdbContainerId?: pulumi.Input<string>;
    /**
     * The name of the database in the Kusto cluster. Changing this forces a new Kusto Cosmos DB Connection to be created.
     */
    kustoDatabaseId?: pulumi.Input<string>;
    /**
     * The Azure Region where the Data Explorer should exist. Changing this forces a new Kusto Cosmos DB Connection to be created.
     */
    location?: pulumi.Input<string>;
    /**
     * The resource ID of a managed system or user-assigned identity. The identity is used to authenticate with Cosmos DB. Changing this forces a new Kusto Cosmos DB Connection to be created.
     */
    managedIdentityId?: pulumi.Input<string>;
    /**
     * The name of an existing mapping rule to use when ingesting the retrieved data. Changing this forces a new Kusto Cosmos DB Connection to be created.
     */
    mappingRuleName?: pulumi.Input<string>;
    /**
     * The name of the data connection. Changing this forces a new Kusto Cosmos DB Connection to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * If defined, the data connection retrieves Cosmos DB documents created or updated after the specified retrieval start date. Changing this forces a new Kusto Cosmos DB Connection to be created.
     */
    retrievalStartDate?: pulumi.Input<string>;
    /**
     * The case-sensitive name of the existing target table in your cluster. Retrieved data is ingested into this table. Changing this forces a new Kusto Cosmos DB Connection to be created.
     */
    tableName?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a CosmosdbDataConnection resource.
 */
export interface CosmosdbDataConnectionArgs {
    /**
     * The name of an existing container in the Cosmos DB database. Changing this forces a new Kusto Cosmos DB Connection to be created.
     */
    cosmosdbContainerId: pulumi.Input<string>;
    /**
     * The name of the database in the Kusto cluster. Changing this forces a new Kusto Cosmos DB Connection to be created.
     */
    kustoDatabaseId: pulumi.Input<string>;
    /**
     * The Azure Region where the Data Explorer should exist. Changing this forces a new Kusto Cosmos DB Connection to be created.
     */
    location?: pulumi.Input<string>;
    /**
     * The resource ID of a managed system or user-assigned identity. The identity is used to authenticate with Cosmos DB. Changing this forces a new Kusto Cosmos DB Connection to be created.
     */
    managedIdentityId: pulumi.Input<string>;
    /**
     * The name of an existing mapping rule to use when ingesting the retrieved data. Changing this forces a new Kusto Cosmos DB Connection to be created.
     */
    mappingRuleName?: pulumi.Input<string>;
    /**
     * The name of the data connection. Changing this forces a new Kusto Cosmos DB Connection to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * If defined, the data connection retrieves Cosmos DB documents created or updated after the specified retrieval start date. Changing this forces a new Kusto Cosmos DB Connection to be created.
     */
    retrievalStartDate?: pulumi.Input<string>;
    /**
     * The case-sensitive name of the existing target table in your cluster. Retrieved data is ingested into this table. Changing this forces a new Kusto Cosmos DB Connection to be created.
     */
    tableName: pulumi.Input<string>;
}
