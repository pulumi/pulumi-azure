// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * Manages a Kusto (also known as Azure Data Explorer) Cluster
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const rg = new azure.core.ResourceGroup("rg", {location: "West Europe"});
 * const example = new azure.kusto.Cluster("example", {
 *     location: rg.location,
 *     resourceGroupName: rg.name,
 *     sku: {
 *         name: "Standard_D13_v2",
 *         capacity: 2,
 *     },
 *     tags: {
 *         Environment: "Production",
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * Kusto Clusters can be imported using the `resource id`, e.g.
 *
 * ```sh
 *  $ pulumi import azure:kusto/cluster:Cluster example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.Kusto/Clusters/cluster1
 * ```
 */
export class Cluster extends pulumi.CustomResource {
    /**
     * Get an existing Cluster resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ClusterState, opts?: pulumi.CustomResourceOptions): Cluster {
        return new Cluster(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure:kusto/cluster:Cluster';

    /**
     * Returns true if the given object is an instance of Cluster.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Cluster {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Cluster.__pulumiType;
    }

    /**
     * Specifies if the cluster could be automatically stopped (due to lack of data or no activity for many days).
     */
    public readonly autoStopEnabled!: pulumi.Output<boolean | undefined>;
    /**
     * The Kusto Cluster URI to be used for data ingestion.
     */
    public /*out*/ readonly dataIngestionUri!: pulumi.Output<string>;
    /**
     * Specifies if the cluster's disks are encrypted.
     */
    public readonly diskEncryptionEnabled!: pulumi.Output<boolean | undefined>;
    /**
     * Is the cluster's double encryption enabled? Defaults to `false`. Changing this forces a new resource to be created.
     */
    public readonly doubleEncryptionEnabled!: pulumi.Output<boolean | undefined>;
    /**
     * . The engine type that should be used. Possible values are `V2` and `V3`. Defaults to `V2`.
     */
    public readonly engine!: pulumi.Output<string | undefined>;
    /**
     * An `identity` block as defined below.
     */
    public readonly identity!: pulumi.Output<outputs.kusto.ClusterIdentity | undefined>;
    /**
     * An list of `languageExtensions` to enable. Valid values are: `PYTHON` and `R`.
     */
    public readonly languageExtensions!: pulumi.Output<string[] | undefined>;
    /**
     * The location where the Kusto Cluster should be created. Changing this forces a new resource to be created.
     */
    public readonly location!: pulumi.Output<string>;
    /**
     * The name of the Kusto Cluster to create. Changing this forces a new resource to be created.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * An `optimizedAutoScale` block as defined below.
     */
    public readonly optimizedAutoScale!: pulumi.Output<outputs.kusto.ClusterOptimizedAutoScale | undefined>;
    public readonly publicNetworkAccessEnabled!: pulumi.Output<boolean | undefined>;
    /**
     * Specifies if the purge operations are enabled.
     */
    public readonly purgeEnabled!: pulumi.Output<boolean | undefined>;
    /**
     * Specifies the Resource Group where the Kusto Cluster should exist. Changing this forces a new resource to be created.
     */
    public readonly resourceGroupName!: pulumi.Output<string>;
    /**
     * A `sku` block as defined below.
     */
    public readonly sku!: pulumi.Output<outputs.kusto.ClusterSku>;
    /**
     * Specifies if the streaming ingest is enabled.
     */
    public readonly streamingIngestionEnabled!: pulumi.Output<boolean | undefined>;
    /**
     * A mapping of tags to assign to the resource.
     */
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * Specifies a list of tenant IDs that are trusted by the cluster. Default setting trusts all other tenants. Use `trustedExternalTenants = ["*"]` to explicitly allow all other tenants, `trustedExternalTenants = ["MyTentantOnly"]` for only your tenant or `trustedExternalTenants = ["<tenantId1>", "<tenantIdx>"]` to allow specific other tenants.
     */
    public readonly trustedExternalTenants!: pulumi.Output<string[]>;
    /**
     * The FQDN of the Azure Kusto Cluster.
     */
    public /*out*/ readonly uri!: pulumi.Output<string>;
    /**
     * A `virtualNetworkConfiguration` block as defined below. Changing this forces a new resource to be created.
     */
    public readonly virtualNetworkConfiguration!: pulumi.Output<outputs.kusto.ClusterVirtualNetworkConfiguration | undefined>;
    /**
     * Specifies a list of Availability Zones in which this Kusto Cluster should be located. Changing this forces a new Kusto Cluster to be created.
     */
    public readonly zones!: pulumi.Output<string[] | undefined>;

    /**
     * Create a Cluster resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ClusterArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ClusterArgs | ClusterState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ClusterState | undefined;
            resourceInputs["autoStopEnabled"] = state ? state.autoStopEnabled : undefined;
            resourceInputs["dataIngestionUri"] = state ? state.dataIngestionUri : undefined;
            resourceInputs["diskEncryptionEnabled"] = state ? state.diskEncryptionEnabled : undefined;
            resourceInputs["doubleEncryptionEnabled"] = state ? state.doubleEncryptionEnabled : undefined;
            resourceInputs["engine"] = state ? state.engine : undefined;
            resourceInputs["identity"] = state ? state.identity : undefined;
            resourceInputs["languageExtensions"] = state ? state.languageExtensions : undefined;
            resourceInputs["location"] = state ? state.location : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["optimizedAutoScale"] = state ? state.optimizedAutoScale : undefined;
            resourceInputs["publicNetworkAccessEnabled"] = state ? state.publicNetworkAccessEnabled : undefined;
            resourceInputs["purgeEnabled"] = state ? state.purgeEnabled : undefined;
            resourceInputs["resourceGroupName"] = state ? state.resourceGroupName : undefined;
            resourceInputs["sku"] = state ? state.sku : undefined;
            resourceInputs["streamingIngestionEnabled"] = state ? state.streamingIngestionEnabled : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["trustedExternalTenants"] = state ? state.trustedExternalTenants : undefined;
            resourceInputs["uri"] = state ? state.uri : undefined;
            resourceInputs["virtualNetworkConfiguration"] = state ? state.virtualNetworkConfiguration : undefined;
            resourceInputs["zones"] = state ? state.zones : undefined;
        } else {
            const args = argsOrState as ClusterArgs | undefined;
            if ((!args || args.resourceGroupName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            if ((!args || args.sku === undefined) && !opts.urn) {
                throw new Error("Missing required property 'sku'");
            }
            resourceInputs["autoStopEnabled"] = args ? args.autoStopEnabled : undefined;
            resourceInputs["diskEncryptionEnabled"] = args ? args.diskEncryptionEnabled : undefined;
            resourceInputs["doubleEncryptionEnabled"] = args ? args.doubleEncryptionEnabled : undefined;
            resourceInputs["engine"] = args ? args.engine : undefined;
            resourceInputs["identity"] = args ? args.identity : undefined;
            resourceInputs["languageExtensions"] = args ? args.languageExtensions : undefined;
            resourceInputs["location"] = args ? args.location : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["optimizedAutoScale"] = args ? args.optimizedAutoScale : undefined;
            resourceInputs["publicNetworkAccessEnabled"] = args ? args.publicNetworkAccessEnabled : undefined;
            resourceInputs["purgeEnabled"] = args ? args.purgeEnabled : undefined;
            resourceInputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            resourceInputs["sku"] = args ? args.sku : undefined;
            resourceInputs["streamingIngestionEnabled"] = args ? args.streamingIngestionEnabled : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["trustedExternalTenants"] = args ? args.trustedExternalTenants : undefined;
            resourceInputs["virtualNetworkConfiguration"] = args ? args.virtualNetworkConfiguration : undefined;
            resourceInputs["zones"] = args ? args.zones : undefined;
            resourceInputs["dataIngestionUri"] = undefined /*out*/;
            resourceInputs["uri"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Cluster.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Cluster resources.
 */
export interface ClusterState {
    /**
     * Specifies if the cluster could be automatically stopped (due to lack of data or no activity for many days).
     */
    autoStopEnabled?: pulumi.Input<boolean>;
    /**
     * The Kusto Cluster URI to be used for data ingestion.
     */
    dataIngestionUri?: pulumi.Input<string>;
    /**
     * Specifies if the cluster's disks are encrypted.
     */
    diskEncryptionEnabled?: pulumi.Input<boolean>;
    /**
     * Is the cluster's double encryption enabled? Defaults to `false`. Changing this forces a new resource to be created.
     */
    doubleEncryptionEnabled?: pulumi.Input<boolean>;
    /**
     * . The engine type that should be used. Possible values are `V2` and `V3`. Defaults to `V2`.
     */
    engine?: pulumi.Input<string>;
    /**
     * An `identity` block as defined below.
     */
    identity?: pulumi.Input<inputs.kusto.ClusterIdentity>;
    /**
     * An list of `languageExtensions` to enable. Valid values are: `PYTHON` and `R`.
     */
    languageExtensions?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The location where the Kusto Cluster should be created. Changing this forces a new resource to be created.
     */
    location?: pulumi.Input<string>;
    /**
     * The name of the Kusto Cluster to create. Changing this forces a new resource to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * An `optimizedAutoScale` block as defined below.
     */
    optimizedAutoScale?: pulumi.Input<inputs.kusto.ClusterOptimizedAutoScale>;
    publicNetworkAccessEnabled?: pulumi.Input<boolean>;
    /**
     * Specifies if the purge operations are enabled.
     */
    purgeEnabled?: pulumi.Input<boolean>;
    /**
     * Specifies the Resource Group where the Kusto Cluster should exist. Changing this forces a new resource to be created.
     */
    resourceGroupName?: pulumi.Input<string>;
    /**
     * A `sku` block as defined below.
     */
    sku?: pulumi.Input<inputs.kusto.ClusterSku>;
    /**
     * Specifies if the streaming ingest is enabled.
     */
    streamingIngestionEnabled?: pulumi.Input<boolean>;
    /**
     * A mapping of tags to assign to the resource.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Specifies a list of tenant IDs that are trusted by the cluster. Default setting trusts all other tenants. Use `trustedExternalTenants = ["*"]` to explicitly allow all other tenants, `trustedExternalTenants = ["MyTentantOnly"]` for only your tenant or `trustedExternalTenants = ["<tenantId1>", "<tenantIdx>"]` to allow specific other tenants.
     */
    trustedExternalTenants?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The FQDN of the Azure Kusto Cluster.
     */
    uri?: pulumi.Input<string>;
    /**
     * A `virtualNetworkConfiguration` block as defined below. Changing this forces a new resource to be created.
     */
    virtualNetworkConfiguration?: pulumi.Input<inputs.kusto.ClusterVirtualNetworkConfiguration>;
    /**
     * Specifies a list of Availability Zones in which this Kusto Cluster should be located. Changing this forces a new Kusto Cluster to be created.
     */
    zones?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * The set of arguments for constructing a Cluster resource.
 */
export interface ClusterArgs {
    /**
     * Specifies if the cluster could be automatically stopped (due to lack of data or no activity for many days).
     */
    autoStopEnabled?: pulumi.Input<boolean>;
    /**
     * Specifies if the cluster's disks are encrypted.
     */
    diskEncryptionEnabled?: pulumi.Input<boolean>;
    /**
     * Is the cluster's double encryption enabled? Defaults to `false`. Changing this forces a new resource to be created.
     */
    doubleEncryptionEnabled?: pulumi.Input<boolean>;
    /**
     * . The engine type that should be used. Possible values are `V2` and `V3`. Defaults to `V2`.
     */
    engine?: pulumi.Input<string>;
    /**
     * An `identity` block as defined below.
     */
    identity?: pulumi.Input<inputs.kusto.ClusterIdentity>;
    /**
     * An list of `languageExtensions` to enable. Valid values are: `PYTHON` and `R`.
     */
    languageExtensions?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The location where the Kusto Cluster should be created. Changing this forces a new resource to be created.
     */
    location?: pulumi.Input<string>;
    /**
     * The name of the Kusto Cluster to create. Changing this forces a new resource to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * An `optimizedAutoScale` block as defined below.
     */
    optimizedAutoScale?: pulumi.Input<inputs.kusto.ClusterOptimizedAutoScale>;
    publicNetworkAccessEnabled?: pulumi.Input<boolean>;
    /**
     * Specifies if the purge operations are enabled.
     */
    purgeEnabled?: pulumi.Input<boolean>;
    /**
     * Specifies the Resource Group where the Kusto Cluster should exist. Changing this forces a new resource to be created.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * A `sku` block as defined below.
     */
    sku: pulumi.Input<inputs.kusto.ClusterSku>;
    /**
     * Specifies if the streaming ingest is enabled.
     */
    streamingIngestionEnabled?: pulumi.Input<boolean>;
    /**
     * A mapping of tags to assign to the resource.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Specifies a list of tenant IDs that are trusted by the cluster. Default setting trusts all other tenants. Use `trustedExternalTenants = ["*"]` to explicitly allow all other tenants, `trustedExternalTenants = ["MyTentantOnly"]` for only your tenant or `trustedExternalTenants = ["<tenantId1>", "<tenantIdx>"]` to allow specific other tenants.
     */
    trustedExternalTenants?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A `virtualNetworkConfiguration` block as defined below. Changing this forces a new resource to be created.
     */
    virtualNetworkConfiguration?: pulumi.Input<inputs.kusto.ClusterVirtualNetworkConfiguration>;
    /**
     * Specifies a list of Availability Zones in which this Kusto Cluster should be located. Changing this forces a new Kusto Cluster to be created.
     */
    zones?: pulumi.Input<pulumi.Input<string>[]>;
}
