// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Manages a Private Endpoint.
 *
 * Azure Private Endpoint is a network interface that connects you privately and securely to a service powered by Azure Private Link. Private Endpoint uses a private IP address from your VNet, effectively bringing the service into your VNet. The service could be an Azure service such as Azure Storage, SQL, etc. or your own Private Link Service.
 *
 * ## Import
 *
 * Private Endpoints can be imported using the `resource id`, e.g.
 *
 * ```sh
 * $ pulumi import azure:privatelink/endpoint:Endpoint example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.Network/privateEndpoints/endpoint1
 * ```
 */
export class Endpoint extends pulumi.CustomResource {
    /**
     * Get an existing Endpoint resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: EndpointState, opts?: pulumi.CustomResourceOptions): Endpoint {
        return new Endpoint(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure:privatelink/endpoint:Endpoint';

    /**
     * Returns true if the given object is an instance of Endpoint.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Endpoint {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Endpoint.__pulumiType;
    }

    /**
     * A `customDnsConfigs` block as defined below.
     */
    declare public /*out*/ readonly customDnsConfigs: pulumi.Output<outputs.privatelink.EndpointCustomDnsConfig[]>;
    /**
     * The custom name of the network interface attached to the private endpoint. Changing this forces a new resource to be created.
     */
    declare public readonly customNetworkInterfaceName: pulumi.Output<string | undefined>;
    /**
     * One or more `ipConfiguration` blocks as defined below. This allows a static IP address to be set for this Private Endpoint, otherwise an address is dynamically allocated from the Subnet.
     */
    declare public readonly ipConfigurations: pulumi.Output<outputs.privatelink.EndpointIpConfiguration[] | undefined>;
    /**
     * The supported Azure location where the resource exists. Changing this forces a new resource to be created.
     */
    declare public readonly location: pulumi.Output<string>;
    /**
     * Specifies the Name of the Private Endpoint. Changing this forces a new resource to be created.
     */
    declare public readonly name: pulumi.Output<string>;
    /**
     * A `networkInterface` block as defined below.
     */
    declare public /*out*/ readonly networkInterfaces: pulumi.Output<outputs.privatelink.EndpointNetworkInterface[]>;
    /**
     * A `privateDnsZoneConfigs` block as defined below.
     */
    declare public /*out*/ readonly privateDnsZoneConfigs: pulumi.Output<outputs.privatelink.EndpointPrivateDnsZoneConfig[]>;
    /**
     * A `privateDnsZoneGroup` block as defined below.
     */
    declare public readonly privateDnsZoneGroup: pulumi.Output<outputs.privatelink.EndpointPrivateDnsZoneGroup | undefined>;
    /**
     * A `privateServiceConnection` block as defined below.
     */
    declare public readonly privateServiceConnection: pulumi.Output<outputs.privatelink.EndpointPrivateServiceConnection>;
    /**
     * Specifies the Name of the Resource Group within which the Private Endpoint should exist. Changing this forces a new resource to be created.
     */
    declare public readonly resourceGroupName: pulumi.Output<string>;
    /**
     * The ID of the Subnet from which Private IP Addresses will be allocated for this Private Endpoint. Changing this forces a new resource to be created.
     */
    declare public readonly subnetId: pulumi.Output<string>;
    /**
     * A mapping of tags to assign to the resource.
     */
    declare public readonly tags: pulumi.Output<{[key: string]: string} | undefined>;

    /**
     * Create a Endpoint resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: EndpointArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: EndpointArgs | EndpointState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as EndpointState | undefined;
            resourceInputs["customDnsConfigs"] = state?.customDnsConfigs;
            resourceInputs["customNetworkInterfaceName"] = state?.customNetworkInterfaceName;
            resourceInputs["ipConfigurations"] = state?.ipConfigurations;
            resourceInputs["location"] = state?.location;
            resourceInputs["name"] = state?.name;
            resourceInputs["networkInterfaces"] = state?.networkInterfaces;
            resourceInputs["privateDnsZoneConfigs"] = state?.privateDnsZoneConfigs;
            resourceInputs["privateDnsZoneGroup"] = state?.privateDnsZoneGroup;
            resourceInputs["privateServiceConnection"] = state?.privateServiceConnection;
            resourceInputs["resourceGroupName"] = state?.resourceGroupName;
            resourceInputs["subnetId"] = state?.subnetId;
            resourceInputs["tags"] = state?.tags;
        } else {
            const args = argsOrState as EndpointArgs | undefined;
            if (args?.privateServiceConnection === undefined && !opts.urn) {
                throw new Error("Missing required property 'privateServiceConnection'");
            }
            if (args?.resourceGroupName === undefined && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            if (args?.subnetId === undefined && !opts.urn) {
                throw new Error("Missing required property 'subnetId'");
            }
            resourceInputs["customNetworkInterfaceName"] = args?.customNetworkInterfaceName;
            resourceInputs["ipConfigurations"] = args?.ipConfigurations;
            resourceInputs["location"] = args?.location;
            resourceInputs["name"] = args?.name;
            resourceInputs["privateDnsZoneGroup"] = args?.privateDnsZoneGroup;
            resourceInputs["privateServiceConnection"] = args?.privateServiceConnection;
            resourceInputs["resourceGroupName"] = args?.resourceGroupName;
            resourceInputs["subnetId"] = args?.subnetId;
            resourceInputs["tags"] = args?.tags;
            resourceInputs["customDnsConfigs"] = undefined /*out*/;
            resourceInputs["networkInterfaces"] = undefined /*out*/;
            resourceInputs["privateDnsZoneConfigs"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Endpoint.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Endpoint resources.
 */
export interface EndpointState {
    /**
     * A `customDnsConfigs` block as defined below.
     */
    customDnsConfigs?: pulumi.Input<pulumi.Input<inputs.privatelink.EndpointCustomDnsConfig>[]>;
    /**
     * The custom name of the network interface attached to the private endpoint. Changing this forces a new resource to be created.
     */
    customNetworkInterfaceName?: pulumi.Input<string>;
    /**
     * One or more `ipConfiguration` blocks as defined below. This allows a static IP address to be set for this Private Endpoint, otherwise an address is dynamically allocated from the Subnet.
     */
    ipConfigurations?: pulumi.Input<pulumi.Input<inputs.privatelink.EndpointIpConfiguration>[]>;
    /**
     * The supported Azure location where the resource exists. Changing this forces a new resource to be created.
     */
    location?: pulumi.Input<string>;
    /**
     * Specifies the Name of the Private Endpoint. Changing this forces a new resource to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * A `networkInterface` block as defined below.
     */
    networkInterfaces?: pulumi.Input<pulumi.Input<inputs.privatelink.EndpointNetworkInterface>[]>;
    /**
     * A `privateDnsZoneConfigs` block as defined below.
     */
    privateDnsZoneConfigs?: pulumi.Input<pulumi.Input<inputs.privatelink.EndpointPrivateDnsZoneConfig>[]>;
    /**
     * A `privateDnsZoneGroup` block as defined below.
     */
    privateDnsZoneGroup?: pulumi.Input<inputs.privatelink.EndpointPrivateDnsZoneGroup>;
    /**
     * A `privateServiceConnection` block as defined below.
     */
    privateServiceConnection?: pulumi.Input<inputs.privatelink.EndpointPrivateServiceConnection>;
    /**
     * Specifies the Name of the Resource Group within which the Private Endpoint should exist. Changing this forces a new resource to be created.
     */
    resourceGroupName?: pulumi.Input<string>;
    /**
     * The ID of the Subnet from which Private IP Addresses will be allocated for this Private Endpoint. Changing this forces a new resource to be created.
     */
    subnetId?: pulumi.Input<string>;
    /**
     * A mapping of tags to assign to the resource.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

/**
 * The set of arguments for constructing a Endpoint resource.
 */
export interface EndpointArgs {
    /**
     * The custom name of the network interface attached to the private endpoint. Changing this forces a new resource to be created.
     */
    customNetworkInterfaceName?: pulumi.Input<string>;
    /**
     * One or more `ipConfiguration` blocks as defined below. This allows a static IP address to be set for this Private Endpoint, otherwise an address is dynamically allocated from the Subnet.
     */
    ipConfigurations?: pulumi.Input<pulumi.Input<inputs.privatelink.EndpointIpConfiguration>[]>;
    /**
     * The supported Azure location where the resource exists. Changing this forces a new resource to be created.
     */
    location?: pulumi.Input<string>;
    /**
     * Specifies the Name of the Private Endpoint. Changing this forces a new resource to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * A `privateDnsZoneGroup` block as defined below.
     */
    privateDnsZoneGroup?: pulumi.Input<inputs.privatelink.EndpointPrivateDnsZoneGroup>;
    /**
     * A `privateServiceConnection` block as defined below.
     */
    privateServiceConnection: pulumi.Input<inputs.privatelink.EndpointPrivateServiceConnection>;
    /**
     * Specifies the Name of the Resource Group within which the Private Endpoint should exist. Changing this forces a new resource to be created.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * The ID of the Subnet from which Private IP Addresses will be allocated for this Private Endpoint. Changing this forces a new resource to be created.
     */
    subnetId: pulumi.Input<string>;
    /**
     * A mapping of tags to assign to the resource.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
