// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Use this data source to access information about an existing Trusted Signing Account.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = azure.trustedsigning.getAccount({
 *     name: "example-account",
 *     resourceGroupName: "example-resource-group",
 * });
 * export const trustedSigningAccountId = example.then(example => example.id);
 * ```
 *
 * ## API Providers
 *
 * <!-- This section is generated, changes will be overwritten -->
 * This data source uses the following Azure API Providers:
 *
 * * `Microsoft.CodeSigning` - 2024-09-30-preview
 */
export function getAccount(args: GetAccountArgs, opts?: pulumi.InvokeOptions): Promise<GetAccountResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azure:trustedsigning/getAccount:getAccount", {
        "name": args.name,
        "resourceGroupName": args.resourceGroupName,
    }, opts);
}

/**
 * A collection of arguments for invoking getAccount.
 */
export interface GetAccountArgs {
    /**
     * The name of the Trusted Signing Account.
     */
    name: string;
    /**
     * The name of the Resource Group where the Trusted Signing Account exists.
     */
    resourceGroupName: string;
}

/**
 * A collection of values returned by getAccount.
 */
export interface GetAccountResult {
    /**
     * The URI of the Trusted Signing Account.
     */
    readonly accountUri: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The Azure Region where the Trusted Signing Account exists.
     */
    readonly location: string;
    readonly name: string;
    readonly resourceGroupName: string;
    /**
     * The sku name of the Trusted Signing Account.
     */
    readonly skuName: string;
    /**
     * A mapping of tags assigned to the Trusted Signing Account.
     */
    readonly tags: {[key: string]: string};
}
/**
 * Use this data source to access information about an existing Trusted Signing Account.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = azure.trustedsigning.getAccount({
 *     name: "example-account",
 *     resourceGroupName: "example-resource-group",
 * });
 * export const trustedSigningAccountId = example.then(example => example.id);
 * ```
 *
 * ## API Providers
 *
 * <!-- This section is generated, changes will be overwritten -->
 * This data source uses the following Azure API Providers:
 *
 * * `Microsoft.CodeSigning` - 2024-09-30-preview
 */
export function getAccountOutput(args: GetAccountOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetAccountResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("azure:trustedsigning/getAccount:getAccount", {
        "name": args.name,
        "resourceGroupName": args.resourceGroupName,
    }, opts);
}

/**
 * A collection of arguments for invoking getAccount.
 */
export interface GetAccountOutputArgs {
    /**
     * The name of the Trusted Signing Account.
     */
    name: pulumi.Input<string>;
    /**
     * The name of the Resource Group where the Trusted Signing Account exists.
     */
    resourceGroupName: pulumi.Input<string>;
}
