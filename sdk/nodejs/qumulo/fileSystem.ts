// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Manages an Azure Native Qumulo Scalable File System.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = new azure.core.ResourceGroup("example", {
 *     name: "example-resources",
 *     location: "West Europe",
 * });
 * const exampleVirtualNetwork = new azure.network.VirtualNetwork("example", {
 *     name: "example-vnet",
 *     addressSpaces: ["10.0.0.0/16"],
 *     location: example.location,
 *     resourceGroupName: example.name,
 * });
 * const exampleSubnet = new azure.network.Subnet("example", {
 *     name: "example-subnet",
 *     resourceGroupName: example.name,
 *     virtualNetworkName: exampleVirtualNetwork.name,
 *     addressPrefixes: ["10.0.1.0/24"],
 *     delegations: [{
 *         name: "delegation",
 *         serviceDelegation: {
 *             actions: ["Microsoft.Network/virtualNetworks/subnets/join/action"],
 *             name: "Qumulo.Storage/fileSystems",
 *         },
 *     }],
 * });
 * const exampleFileSystem = new azure.qumulo.FileSystem("example", {
 *     name: "example",
 *     resourceGroupName: example.name,
 *     location: example.location,
 *     adminPassword: ")^X#ZX#JRyIY}t9",
 *     availabilityZone: "1",
 *     delegatedSubnetId: exampleSubnet.id,
 *     storageSku: "Standard",
 *     email: "test@test.com",
 *     tags: {
 *         environment: "test",
 *     },
 * });
 * ```
 *
 * ## API Providers
 *
 * <!-- This section is generated, changes will be overwritten -->
 * This resource uses the following Azure API Providers:
 *
 * * `Qumulo.Storage` - 2024-06-19
 *
 * ## Import
 *
 * An existing File System can be imported into Pulumi using the `resource id`, e.g.
 *
 * ```sh
 * $ pulumi import azure:qumulo/fileSystem:FileSystem example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Qumulo.Storage/fileSystems/example
 * ```
 */
export class FileSystem extends pulumi.CustomResource {
    /**
     * Get an existing FileSystem resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: FileSystemState, opts?: pulumi.CustomResourceOptions): FileSystem {
        return new FileSystem(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure:qumulo/fileSystem:FileSystem';

    /**
     * Returns true if the given object is an instance of FileSystem.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is FileSystem {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === FileSystem.__pulumiType;
    }

    /**
     * The initial administrator password of the Azure Native Qumulo Scalable File System. Changing this forces a new resource to be created.
     */
    declare public readonly adminPassword: pulumi.Output<string>;
    /**
     * The email address used for the Azure Native Qumulo Scalable File System. Changing this forces a new resource to be created.
     */
    declare public readonly email: pulumi.Output<string>;
    /**
     * The Azure Region where the Azure Native Qumulo Scalable File System should exist. Changing this forces a new resource to be created.
     */
    declare public readonly location: pulumi.Output<string>;
    /**
     * Specifies the name of this Azure Native Qumulo Scalable File System resource. Changing this forces a new resource to be created.
     */
    declare public readonly name: pulumi.Output<string>;
    /**
     * Specifies the marketplace offer ID. Defaults to `qumulo-saas-mpp`. Changing this forces a new resource to be created.
     */
    declare public readonly offerId: pulumi.Output<string | undefined>;
    /**
     * Specifies the marketplace plan ID. Defaults to `azure-native-qumulo-v3`. Changing this forces a new resource to be created.
     */
    declare public readonly planId: pulumi.Output<string | undefined>;
    /**
     * Specifies the marketplace publisher ID. Defaults to `qumulo1584033880660`. Changing this forces a new resource to be created.
     */
    declare public readonly publisherId: pulumi.Output<string | undefined>;
    /**
     * Specifies the name of the Resource Group within which this Azure Native Qumulo Scalable File System should exist. Changing this forces a new resource to be created.
     */
    declare public readonly resourceGroupName: pulumi.Output<string>;
    /**
     * The storage Sku. Possible values are `Cold_LRS`, `Hot_LRS` and `Hot_ZRS`. Changing this forces a new resource to be created.
     */
    declare public readonly storageSku: pulumi.Output<string>;
    /**
     * The delegated subnet ID for Vnet injection. Changing this forces a new resource to be created.
     */
    declare public readonly subnetId: pulumi.Output<string>;
    /**
     * A mapping of tags which should be assigned to the File System.
     */
    declare public readonly tags: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * The Availability Zone in which the Azure Native Qumulo Scalable File system is located. Changing this forces a new resource to be created.
     */
    declare public readonly zone: pulumi.Output<string>;

    /**
     * Create a FileSystem resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: FileSystemArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: FileSystemArgs | FileSystemState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as FileSystemState | undefined;
            resourceInputs["adminPassword"] = state?.adminPassword;
            resourceInputs["email"] = state?.email;
            resourceInputs["location"] = state?.location;
            resourceInputs["name"] = state?.name;
            resourceInputs["offerId"] = state?.offerId;
            resourceInputs["planId"] = state?.planId;
            resourceInputs["publisherId"] = state?.publisherId;
            resourceInputs["resourceGroupName"] = state?.resourceGroupName;
            resourceInputs["storageSku"] = state?.storageSku;
            resourceInputs["subnetId"] = state?.subnetId;
            resourceInputs["tags"] = state?.tags;
            resourceInputs["zone"] = state?.zone;
        } else {
            const args = argsOrState as FileSystemArgs | undefined;
            if (args?.adminPassword === undefined && !opts.urn) {
                throw new Error("Missing required property 'adminPassword'");
            }
            if (args?.email === undefined && !opts.urn) {
                throw new Error("Missing required property 'email'");
            }
            if (args?.resourceGroupName === undefined && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            if (args?.storageSku === undefined && !opts.urn) {
                throw new Error("Missing required property 'storageSku'");
            }
            if (args?.subnetId === undefined && !opts.urn) {
                throw new Error("Missing required property 'subnetId'");
            }
            if (args?.zone === undefined && !opts.urn) {
                throw new Error("Missing required property 'zone'");
            }
            resourceInputs["adminPassword"] = args?.adminPassword ? pulumi.secret(args.adminPassword) : undefined;
            resourceInputs["email"] = args?.email;
            resourceInputs["location"] = args?.location;
            resourceInputs["name"] = args?.name;
            resourceInputs["offerId"] = args?.offerId;
            resourceInputs["planId"] = args?.planId;
            resourceInputs["publisherId"] = args?.publisherId;
            resourceInputs["resourceGroupName"] = args?.resourceGroupName;
            resourceInputs["storageSku"] = args?.storageSku;
            resourceInputs["subnetId"] = args?.subnetId;
            resourceInputs["tags"] = args?.tags;
            resourceInputs["zone"] = args?.zone;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["adminPassword"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(FileSystem.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering FileSystem resources.
 */
export interface FileSystemState {
    /**
     * The initial administrator password of the Azure Native Qumulo Scalable File System. Changing this forces a new resource to be created.
     */
    adminPassword?: pulumi.Input<string>;
    /**
     * The email address used for the Azure Native Qumulo Scalable File System. Changing this forces a new resource to be created.
     */
    email?: pulumi.Input<string>;
    /**
     * The Azure Region where the Azure Native Qumulo Scalable File System should exist. Changing this forces a new resource to be created.
     */
    location?: pulumi.Input<string>;
    /**
     * Specifies the name of this Azure Native Qumulo Scalable File System resource. Changing this forces a new resource to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * Specifies the marketplace offer ID. Defaults to `qumulo-saas-mpp`. Changing this forces a new resource to be created.
     */
    offerId?: pulumi.Input<string>;
    /**
     * Specifies the marketplace plan ID. Defaults to `azure-native-qumulo-v3`. Changing this forces a new resource to be created.
     */
    planId?: pulumi.Input<string>;
    /**
     * Specifies the marketplace publisher ID. Defaults to `qumulo1584033880660`. Changing this forces a new resource to be created.
     */
    publisherId?: pulumi.Input<string>;
    /**
     * Specifies the name of the Resource Group within which this Azure Native Qumulo Scalable File System should exist. Changing this forces a new resource to be created.
     */
    resourceGroupName?: pulumi.Input<string>;
    /**
     * The storage Sku. Possible values are `Cold_LRS`, `Hot_LRS` and `Hot_ZRS`. Changing this forces a new resource to be created.
     */
    storageSku?: pulumi.Input<string>;
    /**
     * The delegated subnet ID for Vnet injection. Changing this forces a new resource to be created.
     */
    subnetId?: pulumi.Input<string>;
    /**
     * A mapping of tags which should be assigned to the File System.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The Availability Zone in which the Azure Native Qumulo Scalable File system is located. Changing this forces a new resource to be created.
     */
    zone?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a FileSystem resource.
 */
export interface FileSystemArgs {
    /**
     * The initial administrator password of the Azure Native Qumulo Scalable File System. Changing this forces a new resource to be created.
     */
    adminPassword: pulumi.Input<string>;
    /**
     * The email address used for the Azure Native Qumulo Scalable File System. Changing this forces a new resource to be created.
     */
    email: pulumi.Input<string>;
    /**
     * The Azure Region where the Azure Native Qumulo Scalable File System should exist. Changing this forces a new resource to be created.
     */
    location?: pulumi.Input<string>;
    /**
     * Specifies the name of this Azure Native Qumulo Scalable File System resource. Changing this forces a new resource to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * Specifies the marketplace offer ID. Defaults to `qumulo-saas-mpp`. Changing this forces a new resource to be created.
     */
    offerId?: pulumi.Input<string>;
    /**
     * Specifies the marketplace plan ID. Defaults to `azure-native-qumulo-v3`. Changing this forces a new resource to be created.
     */
    planId?: pulumi.Input<string>;
    /**
     * Specifies the marketplace publisher ID. Defaults to `qumulo1584033880660`. Changing this forces a new resource to be created.
     */
    publisherId?: pulumi.Input<string>;
    /**
     * Specifies the name of the Resource Group within which this Azure Native Qumulo Scalable File System should exist. Changing this forces a new resource to be created.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * The storage Sku. Possible values are `Cold_LRS`, `Hot_LRS` and `Hot_ZRS`. Changing this forces a new resource to be created.
     */
    storageSku: pulumi.Input<string>;
    /**
     * The delegated subnet ID for Vnet injection. Changing this forces a new resource to be created.
     */
    subnetId: pulumi.Input<string>;
    /**
     * A mapping of tags which should be assigned to the File System.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The Availability Zone in which the Azure Native Qumulo Scalable File system is located. Changing this forces a new resource to be created.
     */
    zone: pulumi.Input<string>;
}
