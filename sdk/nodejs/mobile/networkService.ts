// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Manages a Mobile Network Service.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = new azure.core.ResourceGroup("example", {
 *     name: "example-resources",
 *     location: "east us",
 * });
 * const exampleNetwork = new azure.mobile.Network("example", {
 *     name: "example-mn",
 *     location: example.location,
 *     resourceGroupName: example.name,
 *     mobileCountryCode: "001",
 *     mobileNetworkCode: "01",
 * });
 * const exampleNetworkService = new azure.mobile.NetworkService("example", {
 *     name: "example-mns",
 *     mobileNetworkId: exampleNetwork.id,
 *     location: example.location,
 *     servicePrecedence: 0,
 *     pccRules: [{
 *         name: "default-rule",
 *         precedence: 1,
 *         trafficControlEnabled: true,
 *         qosPolicy: {
 *             allocationAndRetentionPriorityLevel: 9,
 *             qosIndicator: 9,
 *             preemptionCapability: "NotPreempt",
 *             preemptionVulnerability: "Preemptable",
 *             guaranteedBitRate: {
 *                 downlink: "100 Mbps",
 *                 uplink: "10 Mbps",
 *             },
 *             maximumBitRate: {
 *                 downlink: "1 Gbps",
 *                 uplink: "100 Mbps",
 *             },
 *         },
 *         serviceDataFlowTemplates: [{
 *             direction: "Uplink",
 *             name: "IP-to-server",
 *             ports: [],
 *             protocols: ["ip"],
 *             remoteIpLists: ["10.3.4.0/24"],
 *         }],
 *     }],
 *     serviceQosPolicy: {
 *         allocationAndRetentionPriorityLevel: 9,
 *         qosIndicator: 9,
 *         preemptionCapability: "NotPreempt",
 *         preemptionVulnerability: "Preemptable",
 *         maximumBitRate: {
 *             downlink: "1 Gbps",
 *             uplink: "100 Mbps",
 *         },
 *     },
 *     tags: {
 *         key: "value",
 *     },
 * });
 * ```
 *
 * ## API Providers
 *
 * <!-- This section is generated, changes will be overwritten -->
 * This resource uses the following Azure API Providers:
 *
 * * `Microsoft.MobileNetwork` - 2022-11-01
 *
 * ## Import
 *
 * Mobile Network Service can be imported using the `resource id`, e.g.
 *
 * ```sh
 * $ pulumi import azure:mobile/networkService:NetworkService example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resourceGroup1/providers/Microsoft.MobileNetwork/mobileNetworks/mobileNetwork1/services/service1
 * ```
 */
export class NetworkService extends pulumi.CustomResource {
    /**
     * Get an existing NetworkService resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: NetworkServiceState, opts?: pulumi.CustomResourceOptions): NetworkService {
        return new NetworkService(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure:mobile/networkService:NetworkService';

    /**
     * Returns true if the given object is an instance of NetworkService.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is NetworkService {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === NetworkService.__pulumiType;
    }

    /**
     * Specifies the Azure Region where the Mobile Network Service should exist. Changing this forces a new Mobile Network Service to be created.
     */
    declare public readonly location: pulumi.Output<string>;
    /**
     * Specifies the ID of the Mobile Network Service. Changing this forces a new Mobile Network Service to be created.
     */
    declare public readonly mobileNetworkId: pulumi.Output<string>;
    /**
     * Specifies the name which should be used for this Mobile Network Service. Changing this forces a new Mobile Network Service to be created.
     */
    declare public readonly name: pulumi.Output<string>;
    /**
     * A `pccRule` block as defined below. The set of PCC Rules that make up this service.
     */
    declare public readonly pccRules: pulumi.Output<outputs.mobile.NetworkServicePccRule[]>;
    /**
     * A precedence value that is used to decide between services when identifying the QoS values to use for a particular SIM. A lower value means a higher priority. This value should be unique among all services configured in the mobile network. Must be between `0` and `255`.
     */
    declare public readonly servicePrecedence: pulumi.Output<number>;
    /**
     * A `serviceQosPolicy` block as defined below. The QoS policy to use for packets matching this service. This can be overridden for particular flows using the ruleQosPolicy field in a `pccRule`. If this field is not specified then the `simPolicy` of User Equipment (UE) will define the QoS settings.
     */
    declare public readonly serviceQosPolicy: pulumi.Output<outputs.mobile.NetworkServiceServiceQosPolicy | undefined>;
    /**
     * A mapping of tags which should be assigned to the Mobile Network Service.
     */
    declare public readonly tags: pulumi.Output<{[key: string]: string} | undefined>;

    /**
     * Create a NetworkService resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: NetworkServiceArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: NetworkServiceArgs | NetworkServiceState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as NetworkServiceState | undefined;
            resourceInputs["location"] = state?.location;
            resourceInputs["mobileNetworkId"] = state?.mobileNetworkId;
            resourceInputs["name"] = state?.name;
            resourceInputs["pccRules"] = state?.pccRules;
            resourceInputs["servicePrecedence"] = state?.servicePrecedence;
            resourceInputs["serviceQosPolicy"] = state?.serviceQosPolicy;
            resourceInputs["tags"] = state?.tags;
        } else {
            const args = argsOrState as NetworkServiceArgs | undefined;
            if (args?.mobileNetworkId === undefined && !opts.urn) {
                throw new Error("Missing required property 'mobileNetworkId'");
            }
            if (args?.pccRules === undefined && !opts.urn) {
                throw new Error("Missing required property 'pccRules'");
            }
            if (args?.servicePrecedence === undefined && !opts.urn) {
                throw new Error("Missing required property 'servicePrecedence'");
            }
            resourceInputs["location"] = args?.location;
            resourceInputs["mobileNetworkId"] = args?.mobileNetworkId;
            resourceInputs["name"] = args?.name;
            resourceInputs["pccRules"] = args?.pccRules;
            resourceInputs["servicePrecedence"] = args?.servicePrecedence;
            resourceInputs["serviceQosPolicy"] = args?.serviceQosPolicy;
            resourceInputs["tags"] = args?.tags;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(NetworkService.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering NetworkService resources.
 */
export interface NetworkServiceState {
    /**
     * Specifies the Azure Region where the Mobile Network Service should exist. Changing this forces a new Mobile Network Service to be created.
     */
    location?: pulumi.Input<string>;
    /**
     * Specifies the ID of the Mobile Network Service. Changing this forces a new Mobile Network Service to be created.
     */
    mobileNetworkId?: pulumi.Input<string>;
    /**
     * Specifies the name which should be used for this Mobile Network Service. Changing this forces a new Mobile Network Service to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * A `pccRule` block as defined below. The set of PCC Rules that make up this service.
     */
    pccRules?: pulumi.Input<pulumi.Input<inputs.mobile.NetworkServicePccRule>[]>;
    /**
     * A precedence value that is used to decide between services when identifying the QoS values to use for a particular SIM. A lower value means a higher priority. This value should be unique among all services configured in the mobile network. Must be between `0` and `255`.
     */
    servicePrecedence?: pulumi.Input<number>;
    /**
     * A `serviceQosPolicy` block as defined below. The QoS policy to use for packets matching this service. This can be overridden for particular flows using the ruleQosPolicy field in a `pccRule`. If this field is not specified then the `simPolicy` of User Equipment (UE) will define the QoS settings.
     */
    serviceQosPolicy?: pulumi.Input<inputs.mobile.NetworkServiceServiceQosPolicy>;
    /**
     * A mapping of tags which should be assigned to the Mobile Network Service.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

/**
 * The set of arguments for constructing a NetworkService resource.
 */
export interface NetworkServiceArgs {
    /**
     * Specifies the Azure Region where the Mobile Network Service should exist. Changing this forces a new Mobile Network Service to be created.
     */
    location?: pulumi.Input<string>;
    /**
     * Specifies the ID of the Mobile Network Service. Changing this forces a new Mobile Network Service to be created.
     */
    mobileNetworkId: pulumi.Input<string>;
    /**
     * Specifies the name which should be used for this Mobile Network Service. Changing this forces a new Mobile Network Service to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * A `pccRule` block as defined below. The set of PCC Rules that make up this service.
     */
    pccRules: pulumi.Input<pulumi.Input<inputs.mobile.NetworkServicePccRule>[]>;
    /**
     * A precedence value that is used to decide between services when identifying the QoS values to use for a particular SIM. A lower value means a higher priority. This value should be unique among all services configured in the mobile network. Must be between `0` and `255`.
     */
    servicePrecedence: pulumi.Input<number>;
    /**
     * A `serviceQosPolicy` block as defined below. The QoS policy to use for packets matching this service. This can be overridden for particular flows using the ruleQosPolicy field in a `pccRule`. If this field is not specified then the `simPolicy` of User Equipment (UE) will define the QoS settings.
     */
    serviceQosPolicy?: pulumi.Input<inputs.mobile.NetworkServiceServiceQosPolicy>;
    /**
     * A mapping of tags which should be assigned to the Mobile Network Service.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
