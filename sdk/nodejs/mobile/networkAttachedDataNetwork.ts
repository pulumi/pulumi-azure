// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Manages a Mobile Network Attached Data Network.
 *
 * ## Example Usage
 *
 * ## API Providers
 *
 * <!-- This section is generated, changes will be overwritten -->
 * This resource uses the following Azure API Providers:
 *
 * * `Microsoft.MobileNetwork` - 2022-11-01
 *
 * ## Import
 *
 * Mobile Network Attached Data Network can be imported using the `resource id`, e.g.
 *
 * ```sh
 * $ pulumi import azure:mobile/networkAttachedDataNetwork:NetworkAttachedDataNetwork example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resourceGroup1/providers/Microsoft.MobileNetwork/packetCoreControlPlanes/packetCoreControlPlane1/packetCoreDataPlanes/packetCoreDataPlane1/attachedDataNetworks/attachedDataNetwork1
 * ```
 */
export class NetworkAttachedDataNetwork extends pulumi.CustomResource {
    /**
     * Get an existing NetworkAttachedDataNetwork resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: NetworkAttachedDataNetworkState, opts?: pulumi.CustomResourceOptions): NetworkAttachedDataNetwork {
        return new NetworkAttachedDataNetwork(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure:mobile/networkAttachedDataNetwork:NetworkAttachedDataNetwork';

    /**
     * Returns true if the given object is an instance of NetworkAttachedDataNetwork.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is NetworkAttachedDataNetwork {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === NetworkAttachedDataNetwork.__pulumiType;
    }

    /**
     * Specifies the DNS servers to signal to UEs to use for this attached data network.
     */
    declare public readonly dnsAddresses: pulumi.Output<string[]>;
    /**
     * Specifies the Azure Region where the Mobile Network Attached Data Network should exist. Changing this forces a new Mobile Network Attached Data Network to be created.
     */
    declare public readonly location: pulumi.Output<string>;
    /**
     * Specifies the name of the `azure.mobile.NetworkDataNetwork` which the Attached Data Network belongs to, Changing this forces a new Mobile Network Attached Data Network to be created.
     */
    declare public readonly mobileNetworkDataNetworkName: pulumi.Output<string>;
    /**
     * Specifies the ID of the `azure.mobile.NetworkPacketCoreDataPlane` which the Mobile Network Attached Data Network belongs to. Changing this forces a new Mobile Network Attached Data Network to be created.
     */
    declare public readonly mobileNetworkPacketCoreDataPlaneId: pulumi.Output<string>;
    /**
     * A `networkAddressPortTranslation` block as defined below.
     */
    declare public readonly networkAddressPortTranslation: pulumi.Output<outputs.mobile.NetworkAttachedDataNetworkNetworkAddressPortTranslation | undefined>;
    /**
     * A mapping of tags which should be assigned to the Mobile Network Attached Data Network.
     */
    declare public readonly tags: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * Specifies the user equipment (UE) address pool prefixes for the attached data network from which the packet core instance will dynamically assign IP addresses to UEs. The packet core instance assigns an IP address to a UE when the UE sets up a PDU session. At least one of `userEquipmentAddressPoolPrefixes` and `userEquipmentStaticAddressPoolPrefix`. If you define both, they must be of the same size.
     */
    declare public readonly userEquipmentAddressPoolPrefixes: pulumi.Output<string[] | undefined>;
    /**
     * Specifies the user equipment (UE) address pool prefixes for the attached data network from which the packet core instance will assign static IP addresses to UEs. The packet core instance assigns an IP address to a UE when the UE sets up a PDU session. The static IP address for a specific UE is set in StaticIPConfiguration on the corresponding SIM resource. At least one of `userEquipmentAddressPoolPrefix` and `userEquipmentStaticAddressPoolPrefixes`. If you define both, they must be of the same size.
     *
     * > **Note:** At least one of `userEquipmentAddressPoolPrefixes` and `userEquipmentStaticAddressPoolPrefixes` must be specified.
     */
    declare public readonly userEquipmentStaticAddressPoolPrefixes: pulumi.Output<string[] | undefined>;
    /**
     * The IPv4 address for the user data plane interface. This should match one of the interfaces configured on your Azure Stack Edge device.
     */
    declare public readonly userPlaneAccessIpv4Address: pulumi.Output<string | undefined>;
    /**
     * The default IPv4 gateway for the user data plane interface. This should match one of the interfaces configured on your Azure Stack Edge device.
     */
    declare public readonly userPlaneAccessIpv4Gateway: pulumi.Output<string | undefined>;
    /**
     * The IPv4 subnet for the user data plane interface. This should match one of the interfaces configured on your Azure Stack Edge device.
     */
    declare public readonly userPlaneAccessIpv4Subnet: pulumi.Output<string | undefined>;
    /**
     * Specifies the logical name for the user data plane interface. This should match one of the interfaces configured on your Azure Stack Edge device.
     */
    declare public readonly userPlaneAccessName: pulumi.Output<string | undefined>;

    /**
     * Create a NetworkAttachedDataNetwork resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: NetworkAttachedDataNetworkArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: NetworkAttachedDataNetworkArgs | NetworkAttachedDataNetworkState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as NetworkAttachedDataNetworkState | undefined;
            resourceInputs["dnsAddresses"] = state?.dnsAddresses;
            resourceInputs["location"] = state?.location;
            resourceInputs["mobileNetworkDataNetworkName"] = state?.mobileNetworkDataNetworkName;
            resourceInputs["mobileNetworkPacketCoreDataPlaneId"] = state?.mobileNetworkPacketCoreDataPlaneId;
            resourceInputs["networkAddressPortTranslation"] = state?.networkAddressPortTranslation;
            resourceInputs["tags"] = state?.tags;
            resourceInputs["userEquipmentAddressPoolPrefixes"] = state?.userEquipmentAddressPoolPrefixes;
            resourceInputs["userEquipmentStaticAddressPoolPrefixes"] = state?.userEquipmentStaticAddressPoolPrefixes;
            resourceInputs["userPlaneAccessIpv4Address"] = state?.userPlaneAccessIpv4Address;
            resourceInputs["userPlaneAccessIpv4Gateway"] = state?.userPlaneAccessIpv4Gateway;
            resourceInputs["userPlaneAccessIpv4Subnet"] = state?.userPlaneAccessIpv4Subnet;
            resourceInputs["userPlaneAccessName"] = state?.userPlaneAccessName;
        } else {
            const args = argsOrState as NetworkAttachedDataNetworkArgs | undefined;
            if (args?.dnsAddresses === undefined && !opts.urn) {
                throw new Error("Missing required property 'dnsAddresses'");
            }
            if (args?.mobileNetworkDataNetworkName === undefined && !opts.urn) {
                throw new Error("Missing required property 'mobileNetworkDataNetworkName'");
            }
            if (args?.mobileNetworkPacketCoreDataPlaneId === undefined && !opts.urn) {
                throw new Error("Missing required property 'mobileNetworkPacketCoreDataPlaneId'");
            }
            resourceInputs["dnsAddresses"] = args?.dnsAddresses;
            resourceInputs["location"] = args?.location;
            resourceInputs["mobileNetworkDataNetworkName"] = args?.mobileNetworkDataNetworkName;
            resourceInputs["mobileNetworkPacketCoreDataPlaneId"] = args?.mobileNetworkPacketCoreDataPlaneId;
            resourceInputs["networkAddressPortTranslation"] = args?.networkAddressPortTranslation;
            resourceInputs["tags"] = args?.tags;
            resourceInputs["userEquipmentAddressPoolPrefixes"] = args?.userEquipmentAddressPoolPrefixes;
            resourceInputs["userEquipmentStaticAddressPoolPrefixes"] = args?.userEquipmentStaticAddressPoolPrefixes;
            resourceInputs["userPlaneAccessIpv4Address"] = args?.userPlaneAccessIpv4Address;
            resourceInputs["userPlaneAccessIpv4Gateway"] = args?.userPlaneAccessIpv4Gateway;
            resourceInputs["userPlaneAccessIpv4Subnet"] = args?.userPlaneAccessIpv4Subnet;
            resourceInputs["userPlaneAccessName"] = args?.userPlaneAccessName;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(NetworkAttachedDataNetwork.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering NetworkAttachedDataNetwork resources.
 */
export interface NetworkAttachedDataNetworkState {
    /**
     * Specifies the DNS servers to signal to UEs to use for this attached data network.
     */
    dnsAddresses?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies the Azure Region where the Mobile Network Attached Data Network should exist. Changing this forces a new Mobile Network Attached Data Network to be created.
     */
    location?: pulumi.Input<string>;
    /**
     * Specifies the name of the `azure.mobile.NetworkDataNetwork` which the Attached Data Network belongs to, Changing this forces a new Mobile Network Attached Data Network to be created.
     */
    mobileNetworkDataNetworkName?: pulumi.Input<string>;
    /**
     * Specifies the ID of the `azure.mobile.NetworkPacketCoreDataPlane` which the Mobile Network Attached Data Network belongs to. Changing this forces a new Mobile Network Attached Data Network to be created.
     */
    mobileNetworkPacketCoreDataPlaneId?: pulumi.Input<string>;
    /**
     * A `networkAddressPortTranslation` block as defined below.
     */
    networkAddressPortTranslation?: pulumi.Input<inputs.mobile.NetworkAttachedDataNetworkNetworkAddressPortTranslation>;
    /**
     * A mapping of tags which should be assigned to the Mobile Network Attached Data Network.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Specifies the user equipment (UE) address pool prefixes for the attached data network from which the packet core instance will dynamically assign IP addresses to UEs. The packet core instance assigns an IP address to a UE when the UE sets up a PDU session. At least one of `userEquipmentAddressPoolPrefixes` and `userEquipmentStaticAddressPoolPrefix`. If you define both, they must be of the same size.
     */
    userEquipmentAddressPoolPrefixes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies the user equipment (UE) address pool prefixes for the attached data network from which the packet core instance will assign static IP addresses to UEs. The packet core instance assigns an IP address to a UE when the UE sets up a PDU session. The static IP address for a specific UE is set in StaticIPConfiguration on the corresponding SIM resource. At least one of `userEquipmentAddressPoolPrefix` and `userEquipmentStaticAddressPoolPrefixes`. If you define both, they must be of the same size.
     *
     * > **Note:** At least one of `userEquipmentAddressPoolPrefixes` and `userEquipmentStaticAddressPoolPrefixes` must be specified.
     */
    userEquipmentStaticAddressPoolPrefixes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The IPv4 address for the user data plane interface. This should match one of the interfaces configured on your Azure Stack Edge device.
     */
    userPlaneAccessIpv4Address?: pulumi.Input<string>;
    /**
     * The default IPv4 gateway for the user data plane interface. This should match one of the interfaces configured on your Azure Stack Edge device.
     */
    userPlaneAccessIpv4Gateway?: pulumi.Input<string>;
    /**
     * The IPv4 subnet for the user data plane interface. This should match one of the interfaces configured on your Azure Stack Edge device.
     */
    userPlaneAccessIpv4Subnet?: pulumi.Input<string>;
    /**
     * Specifies the logical name for the user data plane interface. This should match one of the interfaces configured on your Azure Stack Edge device.
     */
    userPlaneAccessName?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a NetworkAttachedDataNetwork resource.
 */
export interface NetworkAttachedDataNetworkArgs {
    /**
     * Specifies the DNS servers to signal to UEs to use for this attached data network.
     */
    dnsAddresses: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies the Azure Region where the Mobile Network Attached Data Network should exist. Changing this forces a new Mobile Network Attached Data Network to be created.
     */
    location?: pulumi.Input<string>;
    /**
     * Specifies the name of the `azure.mobile.NetworkDataNetwork` which the Attached Data Network belongs to, Changing this forces a new Mobile Network Attached Data Network to be created.
     */
    mobileNetworkDataNetworkName: pulumi.Input<string>;
    /**
     * Specifies the ID of the `azure.mobile.NetworkPacketCoreDataPlane` which the Mobile Network Attached Data Network belongs to. Changing this forces a new Mobile Network Attached Data Network to be created.
     */
    mobileNetworkPacketCoreDataPlaneId: pulumi.Input<string>;
    /**
     * A `networkAddressPortTranslation` block as defined below.
     */
    networkAddressPortTranslation?: pulumi.Input<inputs.mobile.NetworkAttachedDataNetworkNetworkAddressPortTranslation>;
    /**
     * A mapping of tags which should be assigned to the Mobile Network Attached Data Network.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Specifies the user equipment (UE) address pool prefixes for the attached data network from which the packet core instance will dynamically assign IP addresses to UEs. The packet core instance assigns an IP address to a UE when the UE sets up a PDU session. At least one of `userEquipmentAddressPoolPrefixes` and `userEquipmentStaticAddressPoolPrefix`. If you define both, they must be of the same size.
     */
    userEquipmentAddressPoolPrefixes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies the user equipment (UE) address pool prefixes for the attached data network from which the packet core instance will assign static IP addresses to UEs. The packet core instance assigns an IP address to a UE when the UE sets up a PDU session. The static IP address for a specific UE is set in StaticIPConfiguration on the corresponding SIM resource. At least one of `userEquipmentAddressPoolPrefix` and `userEquipmentStaticAddressPoolPrefixes`. If you define both, they must be of the same size.
     *
     * > **Note:** At least one of `userEquipmentAddressPoolPrefixes` and `userEquipmentStaticAddressPoolPrefixes` must be specified.
     */
    userEquipmentStaticAddressPoolPrefixes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The IPv4 address for the user data plane interface. This should match one of the interfaces configured on your Azure Stack Edge device.
     */
    userPlaneAccessIpv4Address?: pulumi.Input<string>;
    /**
     * The default IPv4 gateway for the user data plane interface. This should match one of the interfaces configured on your Azure Stack Edge device.
     */
    userPlaneAccessIpv4Gateway?: pulumi.Input<string>;
    /**
     * The IPv4 subnet for the user data plane interface. This should match one of the interfaces configured on your Azure Stack Edge device.
     */
    userPlaneAccessIpv4Subnet?: pulumi.Input<string>;
    /**
     * Specifies the logical name for the user data plane interface. This should match one of the interfaces configured on your Azure Stack Edge device.
     */
    userPlaneAccessName?: pulumi.Input<string>;
}
