// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/** @deprecated azure.role.getRoleDefinition has been deprecated in favor of azure.authorization.getRoleDefinition */
export function getRoleDefinition(args?: GetRoleDefinitionArgs, opts?: pulumi.InvokeOptions): Promise<GetRoleDefinitionResult> {
    pulumi.log.warn("getRoleDefinition is deprecated: azure.role.getRoleDefinition has been deprecated in favor of azure.authorization.getRoleDefinition")
    args = args || {};
    if (!opts) {
        opts = {}
    }

    if (!opts.version) {
        opts.version = utilities.getVersion();
    }
    return pulumi.runtime.invoke("azure:role/getRoleDefinition:getRoleDefinition", {
        "name": args.name,
        "roleDefinitionId": args.roleDefinitionId,
        "scope": args.scope,
    }, opts);
}

/**
 * A collection of arguments for invoking getRoleDefinition.
 */
export interface GetRoleDefinitionArgs {
    name?: string;
    roleDefinitionId?: string;
    scope?: string;
}

/**
 * A collection of values returned by getRoleDefinition.
 */
export interface GetRoleDefinitionResult {
    readonly assignableScopes: string[];
    readonly description: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly name: string;
    readonly permissions: outputs.role.GetRoleDefinitionPermission[];
    readonly roleDefinitionId: string;
    readonly scope?: string;
    readonly type: string;
}

export function getRoleDefinitionOutput(args?: GetRoleDefinitionOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetRoleDefinitionResult> {
    return pulumi.output(args).apply(a => getRoleDefinition(a, opts))
}

/**
 * A collection of arguments for invoking getRoleDefinition.
 */
export interface GetRoleDefinitionOutputArgs {
    name?: pulumi.Input<string>;
    roleDefinitionId?: pulumi.Input<string>;
    scope?: pulumi.Input<string>;
}
