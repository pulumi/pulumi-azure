// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Manages an Azure Workbook.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const exampleResourceGroup = new azure.core.ResourceGroup("exampleResourceGroup", {location: "West Europe"});
 * const exampleWorkbook = new azure.appinsights.Workbook("exampleWorkbook", {
 *     resourceGroupName: exampleResourceGroup.name,
 *     location: exampleResourceGroup.location,
 *     displayName: "workbook1",
 *     dataJson: JSON.stringify({
 *         version: "Notebook/1.0",
 *         items: [{
 *             type: 1,
 *             content: {
 *                 json: "Test2022",
 *             },
 *             name: "text - 0",
 *         }],
 *         isLocked: false,
 *         fallbackResourceIds: ["Azure Monitor"],
 *     }),
 *     tags: {
 *         ENV: "Test",
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * Workbooks can be imported using the `resource id`, e.g.
 *
 * ```sh
 *  $ pulumi import azure:appinsights/workbook:Workbook example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resourceGroup1/providers/Microsoft.Insights/workbooks/resource1
 * ```
 */
export class Workbook extends pulumi.CustomResource {
    /**
     * Get an existing Workbook resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: WorkbookState, opts?: pulumi.CustomResourceOptions): Workbook {
        return new Workbook(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure:appinsights/workbook:Workbook';

    /**
     * Returns true if the given object is an instance of Workbook.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Workbook {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Workbook.__pulumiType;
    }

    /**
     * Workbook category, as defined by the user at creation time. There may be additional category types beyond the following: `workbook`, `sentinel`. Defaults to `workbook`.
     */
    public readonly category!: pulumi.Output<string | undefined>;
    /**
     * Configuration of this particular workbook. Configuration data is a string containing valid JSON.
     */
    public readonly dataJson!: pulumi.Output<string>;
    /**
     * Specifies the description of the workbook.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * Specifies the user-defined name (display name) of the workbook.
     */
    public readonly displayName!: pulumi.Output<string>;
    /**
     * An `identity` block as defined below. Changing this forces a new Workbook to be created.
     */
    public readonly identity!: pulumi.Output<outputs.appinsights.WorkbookIdentity | undefined>;
    /**
     * Specifies the Azure Region where the Workbook should exist. Changing this forces a new Workbook to be created.
     */
    public readonly location!: pulumi.Output<string>;
    /**
     * Specifies the name of this Workbook as a UUID/GUID. It should not contain any uppercase letters. Changing this forces a new Workbook to be created.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Specifies the name of the Resource Group where the Workbook should exist. Changing this forces a new Workbook to be created.
     */
    public readonly resourceGroupName!: pulumi.Output<string>;
    /**
     * Resource ID for a source resource. It should not contain any uppercase letters. Defaults to `azure monitor`.
     */
    public readonly sourceId!: pulumi.Output<string | undefined>;
    /**
     * Specifies the Resource Manager ID of the Storage Container when bring your own storage is used. Changing this forces a new Workbook to be created.
     */
    public readonly storageContainerId!: pulumi.Output<string | undefined>;
    /**
     * A mapping of tags which should be assigned to the Workbook.
     */
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;

    /**
     * Create a Workbook resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: WorkbookArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: WorkbookArgs | WorkbookState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as WorkbookState | undefined;
            resourceInputs["category"] = state ? state.category : undefined;
            resourceInputs["dataJson"] = state ? state.dataJson : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["identity"] = state ? state.identity : undefined;
            resourceInputs["location"] = state ? state.location : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["resourceGroupName"] = state ? state.resourceGroupName : undefined;
            resourceInputs["sourceId"] = state ? state.sourceId : undefined;
            resourceInputs["storageContainerId"] = state ? state.storageContainerId : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
        } else {
            const args = argsOrState as WorkbookArgs | undefined;
            if ((!args || args.dataJson === undefined) && !opts.urn) {
                throw new Error("Missing required property 'dataJson'");
            }
            if ((!args || args.displayName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'displayName'");
            }
            if ((!args || args.resourceGroupName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            resourceInputs["category"] = args ? args.category : undefined;
            resourceInputs["dataJson"] = args ? args.dataJson : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["identity"] = args ? args.identity : undefined;
            resourceInputs["location"] = args ? args.location : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            resourceInputs["sourceId"] = args ? args.sourceId : undefined;
            resourceInputs["storageContainerId"] = args ? args.storageContainerId : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Workbook.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Workbook resources.
 */
export interface WorkbookState {
    /**
     * Workbook category, as defined by the user at creation time. There may be additional category types beyond the following: `workbook`, `sentinel`. Defaults to `workbook`.
     */
    category?: pulumi.Input<string>;
    /**
     * Configuration of this particular workbook. Configuration data is a string containing valid JSON.
     */
    dataJson?: pulumi.Input<string>;
    /**
     * Specifies the description of the workbook.
     */
    description?: pulumi.Input<string>;
    /**
     * Specifies the user-defined name (display name) of the workbook.
     */
    displayName?: pulumi.Input<string>;
    /**
     * An `identity` block as defined below. Changing this forces a new Workbook to be created.
     */
    identity?: pulumi.Input<inputs.appinsights.WorkbookIdentity>;
    /**
     * Specifies the Azure Region where the Workbook should exist. Changing this forces a new Workbook to be created.
     */
    location?: pulumi.Input<string>;
    /**
     * Specifies the name of this Workbook as a UUID/GUID. It should not contain any uppercase letters. Changing this forces a new Workbook to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * Specifies the name of the Resource Group where the Workbook should exist. Changing this forces a new Workbook to be created.
     */
    resourceGroupName?: pulumi.Input<string>;
    /**
     * Resource ID for a source resource. It should not contain any uppercase letters. Defaults to `azure monitor`.
     */
    sourceId?: pulumi.Input<string>;
    /**
     * Specifies the Resource Manager ID of the Storage Container when bring your own storage is used. Changing this forces a new Workbook to be created.
     */
    storageContainerId?: pulumi.Input<string>;
    /**
     * A mapping of tags which should be assigned to the Workbook.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

/**
 * The set of arguments for constructing a Workbook resource.
 */
export interface WorkbookArgs {
    /**
     * Workbook category, as defined by the user at creation time. There may be additional category types beyond the following: `workbook`, `sentinel`. Defaults to `workbook`.
     */
    category?: pulumi.Input<string>;
    /**
     * Configuration of this particular workbook. Configuration data is a string containing valid JSON.
     */
    dataJson: pulumi.Input<string>;
    /**
     * Specifies the description of the workbook.
     */
    description?: pulumi.Input<string>;
    /**
     * Specifies the user-defined name (display name) of the workbook.
     */
    displayName: pulumi.Input<string>;
    /**
     * An `identity` block as defined below. Changing this forces a new Workbook to be created.
     */
    identity?: pulumi.Input<inputs.appinsights.WorkbookIdentity>;
    /**
     * Specifies the Azure Region where the Workbook should exist. Changing this forces a new Workbook to be created.
     */
    location?: pulumi.Input<string>;
    /**
     * Specifies the name of this Workbook as a UUID/GUID. It should not contain any uppercase letters. Changing this forces a new Workbook to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * Specifies the name of the Resource Group where the Workbook should exist. Changing this forces a new Workbook to be created.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * Resource ID for a source resource. It should not contain any uppercase letters. Defaults to `azure monitor`.
     */
    sourceId?: pulumi.Input<string>;
    /**
     * Specifies the Resource Manager ID of the Storage Container when bring your own storage is used. Changing this forces a new Workbook to be created.
     */
    storageContainerId?: pulumi.Input<string>;
    /**
     * A mapping of tags which should be assigned to the Workbook.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
