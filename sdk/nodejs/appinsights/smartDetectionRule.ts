// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Manages an Application Insights Smart Detection Rule.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const exampleResourceGroup = new azure.core.ResourceGroup("exampleResourceGroup", {location: "West Europe"});
 * const exampleInsights = new azure.appinsights.Insights("exampleInsights", {
 *     location: "West Europe",
 *     resourceGroupName: exampleResourceGroup.name,
 *     applicationType: "web",
 * });
 * const exampleSmartDetectionRule = new azure.appinsights.SmartDetectionRule("exampleSmartDetectionRule", {
 *     applicationInsightsId: exampleInsights.id,
 *     enabled: false,
 * });
 * ```
 */
export class SmartDetectionRule extends pulumi.CustomResource {
    /**
     * Get an existing SmartDetectionRule resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SmartDetectionRuleState, opts?: pulumi.CustomResourceOptions): SmartDetectionRule {
        return new SmartDetectionRule(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure:appinsights/smartDetectionRule:SmartDetectionRule';

    /**
     * Returns true if the given object is an instance of SmartDetectionRule.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SmartDetectionRule {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SmartDetectionRule.__pulumiType;
    }

    /**
     * Specifies a list of additional recipients that will be sent emails on this Application Insights Smart Detection Rule.
     */
    public readonly additionalEmailRecipients!: pulumi.Output<string[] | undefined>;
    /**
     * The ID of the Application Insights component on which the Smart Detection Rule operates. Changing this forces a new resource to be created.
     */
    public readonly applicationInsightsId!: pulumi.Output<string>;
    /**
     * Is the Application Insights Smart Detection Rule enabled? Defaults to `true`.
     */
    public readonly enabled!: pulumi.Output<boolean | undefined>;
    /**
     * Specifies the name of the Application Insights Smart Detection Rule. Valid values include `Slow page load time`, `Slow server response time`, 
     * `Long dependency duration`.  Changing this forces a new resource to be created.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Do emails get sent to subscription owners? Defaults to `true`.
     */
    public readonly sendEmailsToSubscriptionOwners!: pulumi.Output<boolean | undefined>;

    /**
     * Create a SmartDetectionRule resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SmartDetectionRuleArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SmartDetectionRuleArgs | SmartDetectionRuleState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SmartDetectionRuleState | undefined;
            inputs["additionalEmailRecipients"] = state ? state.additionalEmailRecipients : undefined;
            inputs["applicationInsightsId"] = state ? state.applicationInsightsId : undefined;
            inputs["enabled"] = state ? state.enabled : undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["sendEmailsToSubscriptionOwners"] = state ? state.sendEmailsToSubscriptionOwners : undefined;
        } else {
            const args = argsOrState as SmartDetectionRuleArgs | undefined;
            if ((!args || args.applicationInsightsId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'applicationInsightsId'");
            }
            inputs["additionalEmailRecipients"] = args ? args.additionalEmailRecipients : undefined;
            inputs["applicationInsightsId"] = args ? args.applicationInsightsId : undefined;
            inputs["enabled"] = args ? args.enabled : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["sendEmailsToSubscriptionOwners"] = args ? args.sendEmailsToSubscriptionOwners : undefined;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        super(SmartDetectionRule.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering SmartDetectionRule resources.
 */
export interface SmartDetectionRuleState {
    /**
     * Specifies a list of additional recipients that will be sent emails on this Application Insights Smart Detection Rule.
     */
    readonly additionalEmailRecipients?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The ID of the Application Insights component on which the Smart Detection Rule operates. Changing this forces a new resource to be created.
     */
    readonly applicationInsightsId?: pulumi.Input<string>;
    /**
     * Is the Application Insights Smart Detection Rule enabled? Defaults to `true`.
     */
    readonly enabled?: pulumi.Input<boolean>;
    /**
     * Specifies the name of the Application Insights Smart Detection Rule. Valid values include `Slow page load time`, `Slow server response time`, 
     * `Long dependency duration`.  Changing this forces a new resource to be created.
     */
    readonly name?: pulumi.Input<string>;
    /**
     * Do emails get sent to subscription owners? Defaults to `true`.
     */
    readonly sendEmailsToSubscriptionOwners?: pulumi.Input<boolean>;
}

/**
 * The set of arguments for constructing a SmartDetectionRule resource.
 */
export interface SmartDetectionRuleArgs {
    /**
     * Specifies a list of additional recipients that will be sent emails on this Application Insights Smart Detection Rule.
     */
    readonly additionalEmailRecipients?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The ID of the Application Insights component on which the Smart Detection Rule operates. Changing this forces a new resource to be created.
     */
    readonly applicationInsightsId: pulumi.Input<string>;
    /**
     * Is the Application Insights Smart Detection Rule enabled? Defaults to `true`.
     */
    readonly enabled?: pulumi.Input<boolean>;
    /**
     * Specifies the name of the Application Insights Smart Detection Rule. Valid values include `Slow page load time`, `Slow server response time`, 
     * `Long dependency duration`.  Changing this forces a new resource to be created.
     */
    readonly name?: pulumi.Input<string>;
    /**
     * Do emails get sent to subscription owners? Defaults to `true`.
     */
    readonly sendEmailsToSubscriptionOwners?: pulumi.Input<boolean>;
}
