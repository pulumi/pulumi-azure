// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Manages an Application Insights component.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = new azure.core.ResourceGroup("example", {
 *     name: "tf-test",
 *     location: "West Europe",
 * });
 * const exampleInsights = new azure.appinsights.Insights("example", {
 *     name: "tf-test-appinsights",
 *     location: example.location,
 *     resourceGroupName: example.name,
 *     applicationType: "web",
 * });
 * export const instrumentationKey = exampleInsights.instrumentationKey;
 * export const appId = exampleInsights.appId;
 * ```
 *
 * ### Workspace Mode
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = new azure.core.ResourceGroup("example", {
 *     name: "tf-test",
 *     location: "West Europe",
 * });
 * const exampleAnalyticsWorkspace = new azure.operationalinsights.AnalyticsWorkspace("example", {
 *     name: "workspace-test",
 *     location: example.location,
 *     resourceGroupName: example.name,
 *     sku: "PerGB2018",
 *     retentionInDays: 30,
 * });
 * const exampleInsights = new azure.appinsights.Insights("example", {
 *     name: "tf-test-appinsights",
 *     location: example.location,
 *     resourceGroupName: example.name,
 *     workspaceId: exampleAnalyticsWorkspace.id,
 *     applicationType: "web",
 * });
 * export const instrumentationKey = exampleInsights.instrumentationKey;
 * export const appId = exampleInsights.appId;
 * ```
 *
 * ## API Providers
 *
 * <!-- This section is generated, changes will be overwritten -->
 * This resource uses the following Azure API Providers:
 *
 * * `Microsoft.AlertsManagement` - 2019-06-01
 *
 * * `Microsoft.Insights` - 2020-02-02, 2015-05-01
 *
 * ## Import
 *
 * Application Insights instances can be imported using the `resource id`, e.g.
 *
 * ```sh
 * $ pulumi import azure:appinsights/insights:Insights instance1 /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/mygroup1/providers/Microsoft.Insights/components/instance1
 * ```
 */
export class Insights extends pulumi.CustomResource {
    /**
     * Get an existing Insights resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: InsightsState, opts?: pulumi.CustomResourceOptions): Insights {
        return new Insights(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure:appinsights/insights:Insights';

    /**
     * Returns true if the given object is an instance of Insights.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Insights {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Insights.__pulumiType;
    }

    /**
     * The App ID associated with this Application Insights component.
     */
    declare public /*out*/ readonly appId: pulumi.Output<string>;
    /**
     * Specifies the type of Application Insights to create. Valid values are `ios` for _iOS_, `java` for _Java web_, `MobileCenter` for _App Center_, `Node.JS` for _Node.js_, `other` for _General_, `phone` for _Windows Phone_, `store` for _Windows Store_ and `web` for _ASP.NET_. Please note these values are case sensitive; unmatched values are treated as _ASP.NET_ by Azure. Changing this forces a new resource to be created.
     */
    declare public readonly applicationType: pulumi.Output<string>;
    /**
     * The Connection String for this Application Insights component. (Sensitive)
     */
    declare public /*out*/ readonly connectionString: pulumi.Output<string>;
    /**
     * Specifies the Application Insights component daily data volume cap in GB. Defaults to `100`.
     */
    declare public readonly dailyDataCapInGb: pulumi.Output<number | undefined>;
    /**
     * Specifies if a notification email will be sent when the daily data volume cap is met. Defaults to `false`.
     */
    declare public readonly dailyDataCapNotificationsDisabled: pulumi.Output<boolean | undefined>;
    /**
     * By default the real client IP is masked as `0.0.0.0` in the logs. Use this argument to disable masking and log the real client IP. Defaults to `false`.
     */
    declare public readonly disableIpMasking: pulumi.Output<boolean | undefined>;
    /**
     * Should the Application Insights component force users to create their own storage account for profiling? Defaults to `false`.
     */
    declare public readonly forceCustomerStorageForProfiler: pulumi.Output<boolean | undefined>;
    /**
     * The Instrumentation Key for this Application Insights component. (Sensitive)
     */
    declare public /*out*/ readonly instrumentationKey: pulumi.Output<string>;
    /**
     * Should the Application Insights component support ingestion over the Public Internet? Defaults to `true`.
     */
    declare public readonly internetIngestionEnabled: pulumi.Output<boolean | undefined>;
    /**
     * Should the Application Insights component support querying over the Public Internet? Defaults to `true`.
     */
    declare public readonly internetQueryEnabled: pulumi.Output<boolean | undefined>;
    /**
     * Disable Non-Azure AD based Auth. Defaults to `false`.
     */
    declare public readonly localAuthenticationDisabled: pulumi.Output<boolean | undefined>;
    /**
     * Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
     */
    declare public readonly location: pulumi.Output<string>;
    /**
     * Specifies the name of the Application Insights component. Changing this forces a new resource to be created.
     */
    declare public readonly name: pulumi.Output<string>;
    /**
     * The name of the resource group in which to create the Application Insights component. Changing this forces a new resource to be created.
     */
    declare public readonly resourceGroupName: pulumi.Output<string>;
    /**
     * Specifies the retention period in days. Possible values are `30`, `60`, `90`, `120`, `180`, `270`, `365`, `550` or `730`. Defaults to `90`.
     */
    declare public readonly retentionInDays: pulumi.Output<number | undefined>;
    /**
     * Specifies the percentage of the data produced by the monitored application that is sampled for Application Insights telemetry. Defaults to `100`.
     */
    declare public readonly samplingPercentage: pulumi.Output<number | undefined>;
    /**
     * A mapping of tags to assign to the resource.
     */
    declare public readonly tags: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * Specifies the id of a log analytics workspace resource.
     *
     * > **Note:** `workspaceId` cannot be removed after set. More details can be found at [Migrate to workspace-based Application Insights resources](https://docs.microsoft.com/azure/azure-monitor/app/convert-classic-resource#migration-process). If `workspaceId` is not specified but you encounter a diff, this might indicate a Microsoft initiated automatic migration from classic resources to workspace-based resources. If this is the case, please update `workspaceId` in the config file to the new value.
     */
    declare public readonly workspaceId: pulumi.Output<string>;

    /**
     * Create a Insights resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: InsightsArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: InsightsArgs | InsightsState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as InsightsState | undefined;
            resourceInputs["appId"] = state?.appId;
            resourceInputs["applicationType"] = state?.applicationType;
            resourceInputs["connectionString"] = state?.connectionString;
            resourceInputs["dailyDataCapInGb"] = state?.dailyDataCapInGb;
            resourceInputs["dailyDataCapNotificationsDisabled"] = state?.dailyDataCapNotificationsDisabled;
            resourceInputs["disableIpMasking"] = state?.disableIpMasking;
            resourceInputs["forceCustomerStorageForProfiler"] = state?.forceCustomerStorageForProfiler;
            resourceInputs["instrumentationKey"] = state?.instrumentationKey;
            resourceInputs["internetIngestionEnabled"] = state?.internetIngestionEnabled;
            resourceInputs["internetQueryEnabled"] = state?.internetQueryEnabled;
            resourceInputs["localAuthenticationDisabled"] = state?.localAuthenticationDisabled;
            resourceInputs["location"] = state?.location;
            resourceInputs["name"] = state?.name;
            resourceInputs["resourceGroupName"] = state?.resourceGroupName;
            resourceInputs["retentionInDays"] = state?.retentionInDays;
            resourceInputs["samplingPercentage"] = state?.samplingPercentage;
            resourceInputs["tags"] = state?.tags;
            resourceInputs["workspaceId"] = state?.workspaceId;
        } else {
            const args = argsOrState as InsightsArgs | undefined;
            if (args?.applicationType === undefined && !opts.urn) {
                throw new Error("Missing required property 'applicationType'");
            }
            if (args?.resourceGroupName === undefined && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            resourceInputs["applicationType"] = args?.applicationType;
            resourceInputs["dailyDataCapInGb"] = args?.dailyDataCapInGb;
            resourceInputs["dailyDataCapNotificationsDisabled"] = args?.dailyDataCapNotificationsDisabled;
            resourceInputs["disableIpMasking"] = args?.disableIpMasking;
            resourceInputs["forceCustomerStorageForProfiler"] = args?.forceCustomerStorageForProfiler;
            resourceInputs["internetIngestionEnabled"] = args?.internetIngestionEnabled;
            resourceInputs["internetQueryEnabled"] = args?.internetQueryEnabled;
            resourceInputs["localAuthenticationDisabled"] = args?.localAuthenticationDisabled;
            resourceInputs["location"] = args?.location;
            resourceInputs["name"] = args?.name;
            resourceInputs["resourceGroupName"] = args?.resourceGroupName;
            resourceInputs["retentionInDays"] = args?.retentionInDays;
            resourceInputs["samplingPercentage"] = args?.samplingPercentage;
            resourceInputs["tags"] = args?.tags;
            resourceInputs["workspaceId"] = args?.workspaceId;
            resourceInputs["appId"] = undefined /*out*/;
            resourceInputs["connectionString"] = undefined /*out*/;
            resourceInputs["instrumentationKey"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["connectionString", "instrumentationKey"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(Insights.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Insights resources.
 */
export interface InsightsState {
    /**
     * The App ID associated with this Application Insights component.
     */
    appId?: pulumi.Input<string>;
    /**
     * Specifies the type of Application Insights to create. Valid values are `ios` for _iOS_, `java` for _Java web_, `MobileCenter` for _App Center_, `Node.JS` for _Node.js_, `other` for _General_, `phone` for _Windows Phone_, `store` for _Windows Store_ and `web` for _ASP.NET_. Please note these values are case sensitive; unmatched values are treated as _ASP.NET_ by Azure. Changing this forces a new resource to be created.
     */
    applicationType?: pulumi.Input<string>;
    /**
     * The Connection String for this Application Insights component. (Sensitive)
     */
    connectionString?: pulumi.Input<string>;
    /**
     * Specifies the Application Insights component daily data volume cap in GB. Defaults to `100`.
     */
    dailyDataCapInGb?: pulumi.Input<number>;
    /**
     * Specifies if a notification email will be sent when the daily data volume cap is met. Defaults to `false`.
     */
    dailyDataCapNotificationsDisabled?: pulumi.Input<boolean>;
    /**
     * By default the real client IP is masked as `0.0.0.0` in the logs. Use this argument to disable masking and log the real client IP. Defaults to `false`.
     */
    disableIpMasking?: pulumi.Input<boolean>;
    /**
     * Should the Application Insights component force users to create their own storage account for profiling? Defaults to `false`.
     */
    forceCustomerStorageForProfiler?: pulumi.Input<boolean>;
    /**
     * The Instrumentation Key for this Application Insights component. (Sensitive)
     */
    instrumentationKey?: pulumi.Input<string>;
    /**
     * Should the Application Insights component support ingestion over the Public Internet? Defaults to `true`.
     */
    internetIngestionEnabled?: pulumi.Input<boolean>;
    /**
     * Should the Application Insights component support querying over the Public Internet? Defaults to `true`.
     */
    internetQueryEnabled?: pulumi.Input<boolean>;
    /**
     * Disable Non-Azure AD based Auth. Defaults to `false`.
     */
    localAuthenticationDisabled?: pulumi.Input<boolean>;
    /**
     * Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
     */
    location?: pulumi.Input<string>;
    /**
     * Specifies the name of the Application Insights component. Changing this forces a new resource to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * The name of the resource group in which to create the Application Insights component. Changing this forces a new resource to be created.
     */
    resourceGroupName?: pulumi.Input<string>;
    /**
     * Specifies the retention period in days. Possible values are `30`, `60`, `90`, `120`, `180`, `270`, `365`, `550` or `730`. Defaults to `90`.
     */
    retentionInDays?: pulumi.Input<number>;
    /**
     * Specifies the percentage of the data produced by the monitored application that is sampled for Application Insights telemetry. Defaults to `100`.
     */
    samplingPercentage?: pulumi.Input<number>;
    /**
     * A mapping of tags to assign to the resource.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Specifies the id of a log analytics workspace resource.
     *
     * > **Note:** `workspaceId` cannot be removed after set. More details can be found at [Migrate to workspace-based Application Insights resources](https://docs.microsoft.com/azure/azure-monitor/app/convert-classic-resource#migration-process). If `workspaceId` is not specified but you encounter a diff, this might indicate a Microsoft initiated automatic migration from classic resources to workspace-based resources. If this is the case, please update `workspaceId` in the config file to the new value.
     */
    workspaceId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Insights resource.
 */
export interface InsightsArgs {
    /**
     * Specifies the type of Application Insights to create. Valid values are `ios` for _iOS_, `java` for _Java web_, `MobileCenter` for _App Center_, `Node.JS` for _Node.js_, `other` for _General_, `phone` for _Windows Phone_, `store` for _Windows Store_ and `web` for _ASP.NET_. Please note these values are case sensitive; unmatched values are treated as _ASP.NET_ by Azure. Changing this forces a new resource to be created.
     */
    applicationType: pulumi.Input<string>;
    /**
     * Specifies the Application Insights component daily data volume cap in GB. Defaults to `100`.
     */
    dailyDataCapInGb?: pulumi.Input<number>;
    /**
     * Specifies if a notification email will be sent when the daily data volume cap is met. Defaults to `false`.
     */
    dailyDataCapNotificationsDisabled?: pulumi.Input<boolean>;
    /**
     * By default the real client IP is masked as `0.0.0.0` in the logs. Use this argument to disable masking and log the real client IP. Defaults to `false`.
     */
    disableIpMasking?: pulumi.Input<boolean>;
    /**
     * Should the Application Insights component force users to create their own storage account for profiling? Defaults to `false`.
     */
    forceCustomerStorageForProfiler?: pulumi.Input<boolean>;
    /**
     * Should the Application Insights component support ingestion over the Public Internet? Defaults to `true`.
     */
    internetIngestionEnabled?: pulumi.Input<boolean>;
    /**
     * Should the Application Insights component support querying over the Public Internet? Defaults to `true`.
     */
    internetQueryEnabled?: pulumi.Input<boolean>;
    /**
     * Disable Non-Azure AD based Auth. Defaults to `false`.
     */
    localAuthenticationDisabled?: pulumi.Input<boolean>;
    /**
     * Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
     */
    location?: pulumi.Input<string>;
    /**
     * Specifies the name of the Application Insights component. Changing this forces a new resource to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * The name of the resource group in which to create the Application Insights component. Changing this forces a new resource to be created.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * Specifies the retention period in days. Possible values are `30`, `60`, `90`, `120`, `180`, `270`, `365`, `550` or `730`. Defaults to `90`.
     */
    retentionInDays?: pulumi.Input<number>;
    /**
     * Specifies the percentage of the data produced by the monitored application that is sampled for Application Insights telemetry. Defaults to `100`.
     */
    samplingPercentage?: pulumi.Input<number>;
    /**
     * A mapping of tags to assign to the resource.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Specifies the id of a log analytics workspace resource.
     *
     * > **Note:** `workspaceId` cannot be removed after set. More details can be found at [Migrate to workspace-based Application Insights resources](https://docs.microsoft.com/azure/azure-monitor/app/convert-classic-resource#migration-process). If `workspaceId` is not specified but you encounter a diff, this might indicate a Microsoft initiated automatic migration from classic resources to workspace-based resources. If this is the case, please update `workspaceId` in the config file to the new value.
     */
    workspaceId?: pulumi.Input<string>;
}
