// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { AnalyticsItemArgs, AnalyticsItemState } from "./analyticsItem";
export type AnalyticsItem = import("./analyticsItem").AnalyticsItem;
export const AnalyticsItem: typeof import("./analyticsItem").AnalyticsItem = null as any;
utilities.lazyLoad(exports, ["AnalyticsItem"], () => require("./analyticsItem"));

export { ApiKeyArgs, ApiKeyState } from "./apiKey";
export type ApiKey = import("./apiKey").ApiKey;
export const ApiKey: typeof import("./apiKey").ApiKey = null as any;
utilities.lazyLoad(exports, ["ApiKey"], () => require("./apiKey"));

export { GetInsightsArgs, GetInsightsResult, GetInsightsOutputArgs } from "./getInsights";
export const getInsights: typeof import("./getInsights").getInsights = null as any;
export const getInsightsOutput: typeof import("./getInsights").getInsightsOutput = null as any;
utilities.lazyLoad(exports, ["getInsights","getInsightsOutput"], () => require("./getInsights"));

export { InsightsArgs, InsightsState } from "./insights";
export type Insights = import("./insights").Insights;
export const Insights: typeof import("./insights").Insights = null as any;
utilities.lazyLoad(exports, ["Insights"], () => require("./insights"));

export { SmartDetectionRuleArgs, SmartDetectionRuleState } from "./smartDetectionRule";
export type SmartDetectionRule = import("./smartDetectionRule").SmartDetectionRule;
export const SmartDetectionRule: typeof import("./smartDetectionRule").SmartDetectionRule = null as any;
utilities.lazyLoad(exports, ["SmartDetectionRule"], () => require("./smartDetectionRule"));

export { StandardWebTestArgs, StandardWebTestState } from "./standardWebTest";
export type StandardWebTest = import("./standardWebTest").StandardWebTest;
export const StandardWebTest: typeof import("./standardWebTest").StandardWebTest = null as any;
utilities.lazyLoad(exports, ["StandardWebTest"], () => require("./standardWebTest"));

export { WebTestArgs, WebTestState } from "./webTest";
export type WebTest = import("./webTest").WebTest;
export const WebTest: typeof import("./webTest").WebTest = null as any;
utilities.lazyLoad(exports, ["WebTest"], () => require("./webTest"));

export { WorkbookArgs, WorkbookState } from "./workbook";
export type Workbook = import("./workbook").Workbook;
export const Workbook: typeof import("./workbook").Workbook = null as any;
utilities.lazyLoad(exports, ["Workbook"], () => require("./workbook"));

export { WorkbookTemplateArgs, WorkbookTemplateState } from "./workbookTemplate";
export type WorkbookTemplate = import("./workbookTemplate").WorkbookTemplate;
export const WorkbookTemplate: typeof import("./workbookTemplate").WorkbookTemplate = null as any;
utilities.lazyLoad(exports, ["WorkbookTemplate"], () => require("./workbookTemplate"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "azure:appinsights/analyticsItem:AnalyticsItem":
                return new AnalyticsItem(name, <any>undefined, { urn })
            case "azure:appinsights/apiKey:ApiKey":
                return new ApiKey(name, <any>undefined, { urn })
            case "azure:appinsights/insights:Insights":
                return new Insights(name, <any>undefined, { urn })
            case "azure:appinsights/smartDetectionRule:SmartDetectionRule":
                return new SmartDetectionRule(name, <any>undefined, { urn })
            case "azure:appinsights/standardWebTest:StandardWebTest":
                return new StandardWebTest(name, <any>undefined, { urn })
            case "azure:appinsights/webTest:WebTest":
                return new WebTest(name, <any>undefined, { urn })
            case "azure:appinsights/workbook:Workbook":
                return new Workbook(name, <any>undefined, { urn })
            case "azure:appinsights/workbookTemplate:WorkbookTemplate":
                return new WorkbookTemplate(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure", "appinsights/analyticsItem", _module)
pulumi.runtime.registerResourceModule("azure", "appinsights/apiKey", _module)
pulumi.runtime.registerResourceModule("azure", "appinsights/insights", _module)
pulumi.runtime.registerResourceModule("azure", "appinsights/smartDetectionRule", _module)
pulumi.runtime.registerResourceModule("azure", "appinsights/standardWebTest", _module)
pulumi.runtime.registerResourceModule("azure", "appinsights/webTest", _module)
pulumi.runtime.registerResourceModule("azure", "appinsights/workbook", _module)
pulumi.runtime.registerResourceModule("azure", "appinsights/workbookTemplate", _module)
