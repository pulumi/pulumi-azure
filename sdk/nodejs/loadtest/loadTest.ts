// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * <!-- Note: This documentation is generated. Any manual changes will be overwritten -->
 *
 * Manages a Load Test Service.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const exampleResourceGroup = new azure.core.ResourceGroup("exampleResourceGroup", {location: "West Europe"});
 * const exampleUserAssignedIdentity = new azure.authorization.UserAssignedIdentity("exampleUserAssignedIdentity", {
 *     resourceGroupName: exampleResourceGroup.name,
 *     location: exampleResourceGroup.location,
 * });
 * const exampleLoadTest = new azure.loadtest.LoadTest("exampleLoadTest", {
 *     location: exampleResourceGroup.location,
 *     resourceGroupName: exampleResourceGroup.name,
 * });
 * ```
 * ## Blocks Reference
 *
 * ### `identity` Block
 *
 * The `identity` block supports the following arguments:
 *
 * * `type` - (Required) Specifies the type of Managed Identity that should be assigned to this Load Test. Possible values are `SystemAssigned`, `SystemAssigned, UserAssigned` and `UserAssigned`.
 * * `identityIds` - (Optional) A list of the User Assigned Identity IDs that should be assigned to this Load Test.
 *
 * In addition to the arguments defined above, the `identity` block exports the following attributes:
 *
 * * `principalId` - The Principal ID for the System-Assigned Managed Identity assigned to this Load Test.
 * * `tenantId` - The Tenant ID for the System-Assigned Managed Identity assigned to this Load Test.
 *
 * ## Import
 *
 * An existing Load Test can be imported into Terraform using the `resource id`, e.g.
 *
 * ```sh
 *  $ pulumi import azure:loadtest/loadTest:LoadTest example /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.LoadTestService/loadTests/{loadTestName}
 * ```
 *
 *  * Where `{subscriptionId}` is the ID of the Azure Subscription where the Load Test exists. For example `12345678-1234-9876-4563-123456789012`. * Where `{resourceGroupName}` is the name of Resource Group where this Load Test exists. For example `example-resource-group`. * Where `{loadTestName}` is the name of the Load Test. For example `loadTestValue`.
 */
export class LoadTest extends pulumi.CustomResource {
    /**
     * Get an existing LoadTest resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: LoadTestState, opts?: pulumi.CustomResourceOptions): LoadTest {
        return new LoadTest(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure:loadtest/loadTest:LoadTest';

    /**
     * Returns true if the given object is an instance of LoadTest.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is LoadTest {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === LoadTest.__pulumiType;
    }

    /**
     * Resource data plane URI.
     */
    public /*out*/ readonly dataPlaneUri!: pulumi.Output<string>;
    /**
     * Description of the resource. Changing this forces a new Load Test to be created.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * An `identity` block as defined below. Specifies the Managed Identity which should be assigned to this Load Test.
     */
    public readonly identity!: pulumi.Output<outputs.loadtest.LoadTestIdentity | undefined>;
    /**
     * The Azure Region where the Load Test should exist. Changing this forces a new Load Test to be created.
     */
    public readonly location!: pulumi.Output<string>;
    /**
     * Specifies the name of this Load Test. Changing this forces a new Load Test to be created.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Specifies the name of the Resource Group within which this Load Test should exist. Changing this forces a new Load Test to be created.
     */
    public readonly resourceGroupName!: pulumi.Output<string>;
    /**
     * A mapping of tags which should be assigned to the Load Test.
     */
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;

    /**
     * Create a LoadTest resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: LoadTestArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: LoadTestArgs | LoadTestState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as LoadTestState | undefined;
            resourceInputs["dataPlaneUri"] = state ? state.dataPlaneUri : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["identity"] = state ? state.identity : undefined;
            resourceInputs["location"] = state ? state.location : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["resourceGroupName"] = state ? state.resourceGroupName : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
        } else {
            const args = argsOrState as LoadTestArgs | undefined;
            if ((!args || args.resourceGroupName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["identity"] = args ? args.identity : undefined;
            resourceInputs["location"] = args ? args.location : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["dataPlaneUri"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(LoadTest.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering LoadTest resources.
 */
export interface LoadTestState {
    /**
     * Resource data plane URI.
     */
    dataPlaneUri?: pulumi.Input<string>;
    /**
     * Description of the resource. Changing this forces a new Load Test to be created.
     */
    description?: pulumi.Input<string>;
    /**
     * An `identity` block as defined below. Specifies the Managed Identity which should be assigned to this Load Test.
     */
    identity?: pulumi.Input<inputs.loadtest.LoadTestIdentity>;
    /**
     * The Azure Region where the Load Test should exist. Changing this forces a new Load Test to be created.
     */
    location?: pulumi.Input<string>;
    /**
     * Specifies the name of this Load Test. Changing this forces a new Load Test to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * Specifies the name of the Resource Group within which this Load Test should exist. Changing this forces a new Load Test to be created.
     */
    resourceGroupName?: pulumi.Input<string>;
    /**
     * A mapping of tags which should be assigned to the Load Test.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

/**
 * The set of arguments for constructing a LoadTest resource.
 */
export interface LoadTestArgs {
    /**
     * Description of the resource. Changing this forces a new Load Test to be created.
     */
    description?: pulumi.Input<string>;
    /**
     * An `identity` block as defined below. Specifies the Managed Identity which should be assigned to this Load Test.
     */
    identity?: pulumi.Input<inputs.loadtest.LoadTestIdentity>;
    /**
     * The Azure Region where the Load Test should exist. Changing this forces a new Load Test to be created.
     */
    location?: pulumi.Input<string>;
    /**
     * Specifies the name of this Load Test. Changing this forces a new Load Test to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * Specifies the name of the Resource Group within which this Load Test should exist. Changing this forces a new Load Test to be created.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * A mapping of tags which should be assigned to the Load Test.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
