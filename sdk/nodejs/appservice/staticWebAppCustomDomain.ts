// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * ## Example Usage
 *
 * ### CNAME validation
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = new azure.core.ResourceGroup("example", {
 *     name: "example-resources",
 *     location: "West Europe",
 * });
 * const exampleStaticWebApp = new azure.appservice.StaticWebApp("example", {
 *     name: "example",
 *     resourceGroupName: example.name,
 *     location: example.location,
 * });
 * const exampleCNameRecord = new azure.dns.CNameRecord("example", {
 *     name: "my-domain",
 *     zoneName: "contoso.com",
 *     resourceGroupName: example.name,
 *     ttl: 300,
 *     record: exampleStaticWebApp.defaultHostName,
 * });
 * const exampleStaticWebAppCustomDomain = new azure.appservice.StaticWebAppCustomDomain("example", {
 *     staticWebAppId: exampleStaticWebApp.id,
 *     domainName: pulumi.interpolate`${exampleCNameRecord.name}.${exampleCNameRecord.zoneName}`,
 *     validationType: "cname-delegation",
 * });
 * ```
 *
 * ### TXT validation
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = new azure.core.ResourceGroup("example", {
 *     name: "example-resources",
 *     location: "West Europe",
 * });
 * const exampleStaticWebApp = new azure.appservice.StaticWebApp("example", {
 *     name: "example",
 *     resourceGroupName: example.name,
 *     location: example.location,
 * });
 * const exampleStaticWebAppCustomDomain = new azure.appservice.StaticWebAppCustomDomain("example", {
 *     staticWebAppId: exampleStaticWebApp.id,
 *     domainName: "my-domain.contoso.com",
 *     validationType: "dns-txt-token",
 * });
 * const exampleTxtRecord = new azure.dns.TxtRecord("example", {
 *     name: "_dnsauth.my-domain",
 *     zoneName: "contoso.com",
 *     resourceGroupName: example.name,
 *     ttl: 300,
 *     records: [{
 *         value: exampleStaticWebAppCustomDomain.validationToken,
 *     }],
 * });
 * ```
 *
 * ## API Providers
 *
 * <!-- This section is generated, changes will be overwritten -->
 * This resource uses the following Azure API Providers:
 *
 * * `Microsoft.Web` - 2023-01-01
 *
 * ## Import
 *
 * Static Site Custom Domains can be imported using the `resource id`, e.g.
 *
 * ```sh
 * $ pulumi import azure:appservice/staticWebAppCustomDomain:StaticWebAppCustomDomain example /subscriptions/12345678-1234-9876-4563-123456789012/resourceGroups/group1/providers/Microsoft.Web/staticSites/my-static-site1/customDomains/name.contoso.com
 * ```
 */
export class StaticWebAppCustomDomain extends pulumi.CustomResource {
    /**
     * Get an existing StaticWebAppCustomDomain resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: StaticWebAppCustomDomainState, opts?: pulumi.CustomResourceOptions): StaticWebAppCustomDomain {
        return new StaticWebAppCustomDomain(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure:appservice/staticWebAppCustomDomain:StaticWebAppCustomDomain';

    /**
     * Returns true if the given object is an instance of StaticWebAppCustomDomain.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is StaticWebAppCustomDomain {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === StaticWebAppCustomDomain.__pulumiType;
    }

    /**
     * The Domain Name which should be associated with this Static Site. Changing this forces a new Static Site Custom Domain to be created.
     */
    declare public readonly domainName: pulumi.Output<string>;
    /**
     * The ID of the Static Site. Changing this forces a new Static Site Custom Domain to be created.
     */
    declare public readonly staticWebAppId: pulumi.Output<string>;
    /**
     * Token to be used with `dns-txt-token` validation.
     */
    declare public /*out*/ readonly validationToken: pulumi.Output<string>;
    declare public readonly validationType: pulumi.Output<string>;

    /**
     * Create a StaticWebAppCustomDomain resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: StaticWebAppCustomDomainArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: StaticWebAppCustomDomainArgs | StaticWebAppCustomDomainState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as StaticWebAppCustomDomainState | undefined;
            resourceInputs["domainName"] = state?.domainName;
            resourceInputs["staticWebAppId"] = state?.staticWebAppId;
            resourceInputs["validationToken"] = state?.validationToken;
            resourceInputs["validationType"] = state?.validationType;
        } else {
            const args = argsOrState as StaticWebAppCustomDomainArgs | undefined;
            if (args?.domainName === undefined && !opts.urn) {
                throw new Error("Missing required property 'domainName'");
            }
            if (args?.staticWebAppId === undefined && !opts.urn) {
                throw new Error("Missing required property 'staticWebAppId'");
            }
            if (args?.validationType === undefined && !opts.urn) {
                throw new Error("Missing required property 'validationType'");
            }
            resourceInputs["domainName"] = args?.domainName;
            resourceInputs["staticWebAppId"] = args?.staticWebAppId;
            resourceInputs["validationType"] = args?.validationType;
            resourceInputs["validationToken"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["validationToken"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(StaticWebAppCustomDomain.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering StaticWebAppCustomDomain resources.
 */
export interface StaticWebAppCustomDomainState {
    /**
     * The Domain Name which should be associated with this Static Site. Changing this forces a new Static Site Custom Domain to be created.
     */
    domainName?: pulumi.Input<string>;
    /**
     * The ID of the Static Site. Changing this forces a new Static Site Custom Domain to be created.
     */
    staticWebAppId?: pulumi.Input<string>;
    /**
     * Token to be used with `dns-txt-token` validation.
     */
    validationToken?: pulumi.Input<string>;
    validationType?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a StaticWebAppCustomDomain resource.
 */
export interface StaticWebAppCustomDomainArgs {
    /**
     * The Domain Name which should be associated with this Static Site. Changing this forces a new Static Site Custom Domain to be created.
     */
    domainName: pulumi.Input<string>;
    /**
     * The ID of the Static Site. Changing this forces a new Static Site Custom Domain to be created.
     */
    staticWebAppId: pulumi.Input<string>;
    validationType: pulumi.Input<string>;
}
