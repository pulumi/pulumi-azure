// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Manages an App Service Environment.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const exampleResourceGroup = new azure.core.ResourceGroup("exampleResourceGroup", {location: "West Europe"});
 * const exampleVirtualNetwork = new azure.network.VirtualNetwork("exampleVirtualNetwork", {
 *     location: exampleResourceGroup.location,
 *     resourceGroupName: exampleResourceGroup.name,
 *     addressSpaces: ["10.0.0.0/16"],
 * });
 * const ase = new azure.network.Subnet("ase", {
 *     resourceGroupName: exampleResourceGroup.name,
 *     virtualNetworkName: exampleVirtualNetwork.name,
 *     addressPrefixes: ["10.0.1.0/24"],
 * });
 * const gateway = new azure.network.Subnet("gateway", {
 *     resourceGroupName: exampleResourceGroup.name,
 *     virtualNetworkName: exampleVirtualNetwork.name,
 *     addressPrefixes: ["10.0.2.0/24"],
 * });
 * const exampleEnvironment = new azure.appservice.Environment("exampleEnvironment", {
 *     resourceGroupName: exampleResourceGroup.name,
 *     subnetId: ase.id,
 *     pricingTier: "I2",
 *     frontEndScaleFactor: 10,
 *     internalLoadBalancingMode: "Web, Publishing",
 *     allowedUserIpCidrs: [
 *         "11.22.33.44/32",
 *         "55.66.77.0/24",
 *     ],
 *     clusterSettings: [{
 *         name: "DisableTls1.0",
 *         value: "1",
 *     }],
 * });
 * ```
 *
 * ## Import
 *
 * The App Service Environment can be imported using the `resource id`, e.g.
 *
 * ```sh
 *  $ pulumi import azure:appservice/environment:Environment myAppServiceEnv /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.Web/hostingEnvironments/myAppServiceEnv
 * ```
 */
export class Environment extends pulumi.CustomResource {
    /**
     * Get an existing Environment resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: EnvironmentState, opts?: pulumi.CustomResourceOptions): Environment {
        return new Environment(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure:appservice/environment:Environment';

    /**
     * Returns true if the given object is an instance of Environment.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Environment {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Environment.__pulumiType;
    }

    /**
     * Allowed user added IP ranges on the ASE database. Use the addresses you want to set as the explicit egress address ranges.
     *
     * > **NOTE:** `allowedUserIpCidrs` The addresses that will be used for all outbound traffic from your App Service Environment to the internet to avoid asymmetric routing challenge. If you're routing the traffic on premises, these addresses are your NATs or gateway IPs. If you want to route the App Service Environment outbound traffic through an NVA, the egress address is the public IP of the NVA. Please visit [Create your ASE with the egress addresses](https://docs.microsoft.com/azure/app-service/environment/forced-tunnel-support#add-your-own-ips-to-the-ase-azure-sql-firewall)
     */
    public readonly allowedUserIpCidrs!: pulumi.Output<string[] | undefined>;
    /**
     * Zero or more `clusterSetting` blocks as defined below.
     */
    public readonly clusterSettings!: pulumi.Output<outputs.appservice.EnvironmentClusterSetting[]>;
    /**
     * Scale factor for front end instances. Possible values are between `5` and `15`. Defaults to `15`.
     */
    public readonly frontEndScaleFactor!: pulumi.Output<number | undefined>;
    /**
     * IP address of internal load balancer of the App Service Environment.
     */
    public /*out*/ readonly internalIpAddress!: pulumi.Output<string>;
    /**
     * Specifies which endpoints to serve internally in the Virtual Network for the App Service Environment. Possible values are `None`, `Web`, `Publishing` and combined value `"Web, Publishing"`. Defaults to `None`. Changing this forces a new resource to be created.
     */
    public readonly internalLoadBalancingMode!: pulumi.Output<string | undefined>;
    /**
     * The location where the App Service Environment exists.
     */
    public /*out*/ readonly location!: pulumi.Output<string>;
    /**
     * The name of the App Service Environment. Changing this forces a new resource to be created.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * List of outbound IP addresses of the App Service Environment.
     */
    public /*out*/ readonly outboundIpAddresses!: pulumi.Output<string[]>;
    /**
     * Pricing tier for the front end instances. Possible values are `I1`, `I2` and `I3`. Defaults to `I1`.
     */
    public readonly pricingTier!: pulumi.Output<string | undefined>;
    /**
     * The name of the Resource Group where the App Service Environment exists. Defaults to the Resource Group of the Subnet (specified by `subnetId`).
     */
    public readonly resourceGroupName!: pulumi.Output<string>;
    /**
     * IP address of service endpoint of the App Service Environment.
     */
    public /*out*/ readonly serviceIpAddress!: pulumi.Output<string>;
    /**
     * The ID of the Subnet which the App Service Environment should be connected to. Changing this forces a new resource to be created.
     *
     * > **NOTE** a /24 or larger CIDR is required. Once associated with an ASE this size cannot be changed.
     */
    public readonly subnetId!: pulumi.Output<string>;
    /**
     * A mapping of tags to assign to the resource. Changing this forces a new resource to be created.
     */
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;

    /**
     * Create a Environment resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: EnvironmentArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: EnvironmentArgs | EnvironmentState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as EnvironmentState | undefined;
            resourceInputs["allowedUserIpCidrs"] = state ? state.allowedUserIpCidrs : undefined;
            resourceInputs["clusterSettings"] = state ? state.clusterSettings : undefined;
            resourceInputs["frontEndScaleFactor"] = state ? state.frontEndScaleFactor : undefined;
            resourceInputs["internalIpAddress"] = state ? state.internalIpAddress : undefined;
            resourceInputs["internalLoadBalancingMode"] = state ? state.internalLoadBalancingMode : undefined;
            resourceInputs["location"] = state ? state.location : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["outboundIpAddresses"] = state ? state.outboundIpAddresses : undefined;
            resourceInputs["pricingTier"] = state ? state.pricingTier : undefined;
            resourceInputs["resourceGroupName"] = state ? state.resourceGroupName : undefined;
            resourceInputs["serviceIpAddress"] = state ? state.serviceIpAddress : undefined;
            resourceInputs["subnetId"] = state ? state.subnetId : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
        } else {
            const args = argsOrState as EnvironmentArgs | undefined;
            if ((!args || args.resourceGroupName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            if ((!args || args.subnetId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'subnetId'");
            }
            resourceInputs["allowedUserIpCidrs"] = args ? args.allowedUserIpCidrs : undefined;
            resourceInputs["clusterSettings"] = args ? args.clusterSettings : undefined;
            resourceInputs["frontEndScaleFactor"] = args ? args.frontEndScaleFactor : undefined;
            resourceInputs["internalLoadBalancingMode"] = args ? args.internalLoadBalancingMode : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["pricingTier"] = args ? args.pricingTier : undefined;
            resourceInputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            resourceInputs["subnetId"] = args ? args.subnetId : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["internalIpAddress"] = undefined /*out*/;
            resourceInputs["location"] = undefined /*out*/;
            resourceInputs["outboundIpAddresses"] = undefined /*out*/;
            resourceInputs["serviceIpAddress"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Environment.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Environment resources.
 */
export interface EnvironmentState {
    /**
     * Allowed user added IP ranges on the ASE database. Use the addresses you want to set as the explicit egress address ranges.
     *
     * > **NOTE:** `allowedUserIpCidrs` The addresses that will be used for all outbound traffic from your App Service Environment to the internet to avoid asymmetric routing challenge. If you're routing the traffic on premises, these addresses are your NATs or gateway IPs. If you want to route the App Service Environment outbound traffic through an NVA, the egress address is the public IP of the NVA. Please visit [Create your ASE with the egress addresses](https://docs.microsoft.com/azure/app-service/environment/forced-tunnel-support#add-your-own-ips-to-the-ase-azure-sql-firewall)
     */
    allowedUserIpCidrs?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Zero or more `clusterSetting` blocks as defined below.
     */
    clusterSettings?: pulumi.Input<pulumi.Input<inputs.appservice.EnvironmentClusterSetting>[]>;
    /**
     * Scale factor for front end instances. Possible values are between `5` and `15`. Defaults to `15`.
     */
    frontEndScaleFactor?: pulumi.Input<number>;
    /**
     * IP address of internal load balancer of the App Service Environment.
     */
    internalIpAddress?: pulumi.Input<string>;
    /**
     * Specifies which endpoints to serve internally in the Virtual Network for the App Service Environment. Possible values are `None`, `Web`, `Publishing` and combined value `"Web, Publishing"`. Defaults to `None`. Changing this forces a new resource to be created.
     */
    internalLoadBalancingMode?: pulumi.Input<string>;
    /**
     * The location where the App Service Environment exists.
     */
    location?: pulumi.Input<string>;
    /**
     * The name of the App Service Environment. Changing this forces a new resource to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * List of outbound IP addresses of the App Service Environment.
     */
    outboundIpAddresses?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Pricing tier for the front end instances. Possible values are `I1`, `I2` and `I3`. Defaults to `I1`.
     */
    pricingTier?: pulumi.Input<string>;
    /**
     * The name of the Resource Group where the App Service Environment exists. Defaults to the Resource Group of the Subnet (specified by `subnetId`).
     */
    resourceGroupName?: pulumi.Input<string>;
    /**
     * IP address of service endpoint of the App Service Environment.
     */
    serviceIpAddress?: pulumi.Input<string>;
    /**
     * The ID of the Subnet which the App Service Environment should be connected to. Changing this forces a new resource to be created.
     *
     * > **NOTE** a /24 or larger CIDR is required. Once associated with an ASE this size cannot be changed.
     */
    subnetId?: pulumi.Input<string>;
    /**
     * A mapping of tags to assign to the resource. Changing this forces a new resource to be created.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

/**
 * The set of arguments for constructing a Environment resource.
 */
export interface EnvironmentArgs {
    /**
     * Allowed user added IP ranges on the ASE database. Use the addresses you want to set as the explicit egress address ranges.
     *
     * > **NOTE:** `allowedUserIpCidrs` The addresses that will be used for all outbound traffic from your App Service Environment to the internet to avoid asymmetric routing challenge. If you're routing the traffic on premises, these addresses are your NATs or gateway IPs. If you want to route the App Service Environment outbound traffic through an NVA, the egress address is the public IP of the NVA. Please visit [Create your ASE with the egress addresses](https://docs.microsoft.com/azure/app-service/environment/forced-tunnel-support#add-your-own-ips-to-the-ase-azure-sql-firewall)
     */
    allowedUserIpCidrs?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Zero or more `clusterSetting` blocks as defined below.
     */
    clusterSettings?: pulumi.Input<pulumi.Input<inputs.appservice.EnvironmentClusterSetting>[]>;
    /**
     * Scale factor for front end instances. Possible values are between `5` and `15`. Defaults to `15`.
     */
    frontEndScaleFactor?: pulumi.Input<number>;
    /**
     * Specifies which endpoints to serve internally in the Virtual Network for the App Service Environment. Possible values are `None`, `Web`, `Publishing` and combined value `"Web, Publishing"`. Defaults to `None`. Changing this forces a new resource to be created.
     */
    internalLoadBalancingMode?: pulumi.Input<string>;
    /**
     * The name of the App Service Environment. Changing this forces a new resource to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * Pricing tier for the front end instances. Possible values are `I1`, `I2` and `I3`. Defaults to `I1`.
     */
    pricingTier?: pulumi.Input<string>;
    /**
     * The name of the Resource Group where the App Service Environment exists. Defaults to the Resource Group of the Subnet (specified by `subnetId`).
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * The ID of the Subnet which the App Service Environment should be connected to. Changing this forces a new resource to be created.
     *
     * > **NOTE** a /24 or larger CIDR is required. Once associated with an ASE this size cannot be changed.
     */
    subnetId: pulumi.Input<string>;
    /**
     * A mapping of tags to assign to the resource. Changing this forces a new resource to be created.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
