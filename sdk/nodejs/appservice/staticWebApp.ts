// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Manages an App Service Static Web App.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = new azure.core.ResourceGroup("example", {
 *     name: "example-resources",
 *     location: "West Europe",
 * });
 * const exampleStaticWebApp = new azure.appservice.StaticWebApp("example", {
 *     name: "example",
 *     resourceGroupName: example.name,
 *     location: example.location,
 * });
 * ```
 *
 * ## API Providers
 *
 * <!-- This section is generated, changes will be overwritten -->
 * This resource uses the following Azure API Providers:
 *
 * * `Microsoft.Web` - 2023-01-01
 *
 * ## Import
 *
 * Static Web Apps can be imported using the `resource id`, e.g.
 *
 * ```sh
 * $ pulumi import azure:appservice/staticWebApp:StaticWebApp example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.Web/staticSites/my-static-site1
 * ```
 */
export class StaticWebApp extends pulumi.CustomResource {
    /**
     * Get an existing StaticWebApp resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: StaticWebAppState, opts?: pulumi.CustomResourceOptions): StaticWebApp {
        return new StaticWebApp(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure:appservice/staticWebApp:StaticWebApp';

    /**
     * Returns true if the given object is an instance of StaticWebApp.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is StaticWebApp {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === StaticWebApp.__pulumiType;
    }

    /**
     * The API key of this Static Web App, which is used for later interacting with this Static Web App from other clients, e.g. GitHub Action.
     */
    declare public /*out*/ readonly apiKey: pulumi.Output<string>;
    /**
     * A key-value pair of App Settings.
     */
    declare public readonly appSettings: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * A `basicAuth` block as defined below.
     */
    declare public readonly basicAuth: pulumi.Output<outputs.appservice.StaticWebAppBasicAuth | undefined>;
    /**
     * Should changes to the configuration file be permitted. Defaults to `true`.
     */
    declare public readonly configurationFileChangesEnabled: pulumi.Output<boolean | undefined>;
    /**
     * The default host name of the Static Web App.
     */
    declare public /*out*/ readonly defaultHostName: pulumi.Output<string>;
    /**
     * An `identity` block as defined below.
     */
    declare public readonly identity: pulumi.Output<outputs.appservice.StaticWebAppIdentity | undefined>;
    /**
     * The Azure Region where the Static Web App should exist. Changing this forces a new Static Web App to be created.
     */
    declare public readonly location: pulumi.Output<string>;
    /**
     * The name which should be used for this Static Web App. Changing this forces a new Static Web App to be created.
     */
    declare public readonly name: pulumi.Output<string>;
    /**
     * Are Preview (Staging) environments enabled. Defaults to `true`.
     */
    declare public readonly previewEnvironmentsEnabled: pulumi.Output<boolean | undefined>;
    /**
     * Should public network access be enabled for the Static Web App. Defaults to `true`.
     */
    declare public readonly publicNetworkAccessEnabled: pulumi.Output<boolean | undefined>;
    /**
     * Repository branch to use for the Static Web App. `repositoryUrl` and `repositoryToken` must also be set.
     */
    declare public readonly repositoryBranch: pulumi.Output<string | undefined>;
    /**
     * Repository Token with `admin` privileges to use for the Static Web App. `repositoryBranch` and `repositoryUrl` must also be set.
     */
    declare public readonly repositoryToken: pulumi.Output<string | undefined>;
    /**
     * Repository URL to use for the Static Web App. `repositoryBranch` and `repositoryToken` must also be set.
     */
    declare public readonly repositoryUrl: pulumi.Output<string | undefined>;
    /**
     * The name of the Resource Group where the Static Web App should exist. Changing this forces a new Static Web App to be created.
     */
    declare public readonly resourceGroupName: pulumi.Output<string>;
    /**
     * Specifies the SKU size of the Static Web App. Possible values are `Free` or `Standard`. Defaults to `Free`.
     */
    declare public readonly skuSize: pulumi.Output<string | undefined>;
    /**
     * Specifies the SKU tier of the Static Web App. Possible values are `Free` or `Standard`. Defaults to `Free`.
     */
    declare public readonly skuTier: pulumi.Output<string | undefined>;
    /**
     * A mapping of tags to assign to the resource.
     */
    declare public readonly tags: pulumi.Output<{[key: string]: string} | undefined>;

    /**
     * Create a StaticWebApp resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: StaticWebAppArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: StaticWebAppArgs | StaticWebAppState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as StaticWebAppState | undefined;
            resourceInputs["apiKey"] = state?.apiKey;
            resourceInputs["appSettings"] = state?.appSettings;
            resourceInputs["basicAuth"] = state?.basicAuth;
            resourceInputs["configurationFileChangesEnabled"] = state?.configurationFileChangesEnabled;
            resourceInputs["defaultHostName"] = state?.defaultHostName;
            resourceInputs["identity"] = state?.identity;
            resourceInputs["location"] = state?.location;
            resourceInputs["name"] = state?.name;
            resourceInputs["previewEnvironmentsEnabled"] = state?.previewEnvironmentsEnabled;
            resourceInputs["publicNetworkAccessEnabled"] = state?.publicNetworkAccessEnabled;
            resourceInputs["repositoryBranch"] = state?.repositoryBranch;
            resourceInputs["repositoryToken"] = state?.repositoryToken;
            resourceInputs["repositoryUrl"] = state?.repositoryUrl;
            resourceInputs["resourceGroupName"] = state?.resourceGroupName;
            resourceInputs["skuSize"] = state?.skuSize;
            resourceInputs["skuTier"] = state?.skuTier;
            resourceInputs["tags"] = state?.tags;
        } else {
            const args = argsOrState as StaticWebAppArgs | undefined;
            if (args?.resourceGroupName === undefined && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            resourceInputs["appSettings"] = args?.appSettings;
            resourceInputs["basicAuth"] = args?.basicAuth ? pulumi.secret(args.basicAuth) : undefined;
            resourceInputs["configurationFileChangesEnabled"] = args?.configurationFileChangesEnabled;
            resourceInputs["identity"] = args?.identity;
            resourceInputs["location"] = args?.location;
            resourceInputs["name"] = args?.name;
            resourceInputs["previewEnvironmentsEnabled"] = args?.previewEnvironmentsEnabled;
            resourceInputs["publicNetworkAccessEnabled"] = args?.publicNetworkAccessEnabled;
            resourceInputs["repositoryBranch"] = args?.repositoryBranch;
            resourceInputs["repositoryToken"] = args?.repositoryToken ? pulumi.secret(args.repositoryToken) : undefined;
            resourceInputs["repositoryUrl"] = args?.repositoryUrl;
            resourceInputs["resourceGroupName"] = args?.resourceGroupName;
            resourceInputs["skuSize"] = args?.skuSize;
            resourceInputs["skuTier"] = args?.skuTier;
            resourceInputs["tags"] = args?.tags;
            resourceInputs["apiKey"] = undefined /*out*/;
            resourceInputs["defaultHostName"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["apiKey", "basicAuth", "repositoryToken"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(StaticWebApp.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering StaticWebApp resources.
 */
export interface StaticWebAppState {
    /**
     * The API key of this Static Web App, which is used for later interacting with this Static Web App from other clients, e.g. GitHub Action.
     */
    apiKey?: pulumi.Input<string>;
    /**
     * A key-value pair of App Settings.
     */
    appSettings?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * A `basicAuth` block as defined below.
     */
    basicAuth?: pulumi.Input<inputs.appservice.StaticWebAppBasicAuth>;
    /**
     * Should changes to the configuration file be permitted. Defaults to `true`.
     */
    configurationFileChangesEnabled?: pulumi.Input<boolean>;
    /**
     * The default host name of the Static Web App.
     */
    defaultHostName?: pulumi.Input<string>;
    /**
     * An `identity` block as defined below.
     */
    identity?: pulumi.Input<inputs.appservice.StaticWebAppIdentity>;
    /**
     * The Azure Region where the Static Web App should exist. Changing this forces a new Static Web App to be created.
     */
    location?: pulumi.Input<string>;
    /**
     * The name which should be used for this Static Web App. Changing this forces a new Static Web App to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * Are Preview (Staging) environments enabled. Defaults to `true`.
     */
    previewEnvironmentsEnabled?: pulumi.Input<boolean>;
    /**
     * Should public network access be enabled for the Static Web App. Defaults to `true`.
     */
    publicNetworkAccessEnabled?: pulumi.Input<boolean>;
    /**
     * Repository branch to use for the Static Web App. `repositoryUrl` and `repositoryToken` must also be set.
     */
    repositoryBranch?: pulumi.Input<string>;
    /**
     * Repository Token with `admin` privileges to use for the Static Web App. `repositoryBranch` and `repositoryUrl` must also be set.
     */
    repositoryToken?: pulumi.Input<string>;
    /**
     * Repository URL to use for the Static Web App. `repositoryBranch` and `repositoryToken` must also be set.
     */
    repositoryUrl?: pulumi.Input<string>;
    /**
     * The name of the Resource Group where the Static Web App should exist. Changing this forces a new Static Web App to be created.
     */
    resourceGroupName?: pulumi.Input<string>;
    /**
     * Specifies the SKU size of the Static Web App. Possible values are `Free` or `Standard`. Defaults to `Free`.
     */
    skuSize?: pulumi.Input<string>;
    /**
     * Specifies the SKU tier of the Static Web App. Possible values are `Free` or `Standard`. Defaults to `Free`.
     */
    skuTier?: pulumi.Input<string>;
    /**
     * A mapping of tags to assign to the resource.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

/**
 * The set of arguments for constructing a StaticWebApp resource.
 */
export interface StaticWebAppArgs {
    /**
     * A key-value pair of App Settings.
     */
    appSettings?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * A `basicAuth` block as defined below.
     */
    basicAuth?: pulumi.Input<inputs.appservice.StaticWebAppBasicAuth>;
    /**
     * Should changes to the configuration file be permitted. Defaults to `true`.
     */
    configurationFileChangesEnabled?: pulumi.Input<boolean>;
    /**
     * An `identity` block as defined below.
     */
    identity?: pulumi.Input<inputs.appservice.StaticWebAppIdentity>;
    /**
     * The Azure Region where the Static Web App should exist. Changing this forces a new Static Web App to be created.
     */
    location?: pulumi.Input<string>;
    /**
     * The name which should be used for this Static Web App. Changing this forces a new Static Web App to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * Are Preview (Staging) environments enabled. Defaults to `true`.
     */
    previewEnvironmentsEnabled?: pulumi.Input<boolean>;
    /**
     * Should public network access be enabled for the Static Web App. Defaults to `true`.
     */
    publicNetworkAccessEnabled?: pulumi.Input<boolean>;
    /**
     * Repository branch to use for the Static Web App. `repositoryUrl` and `repositoryToken` must also be set.
     */
    repositoryBranch?: pulumi.Input<string>;
    /**
     * Repository Token with `admin` privileges to use for the Static Web App. `repositoryBranch` and `repositoryUrl` must also be set.
     */
    repositoryToken?: pulumi.Input<string>;
    /**
     * Repository URL to use for the Static Web App. `repositoryBranch` and `repositoryToken` must also be set.
     */
    repositoryUrl?: pulumi.Input<string>;
    /**
     * The name of the Resource Group where the Static Web App should exist. Changing this forces a new Static Web App to be created.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * Specifies the SKU size of the Static Web App. Possible values are `Free` or `Standard`. Defaults to `Free`.
     */
    skuSize?: pulumi.Input<string>;
    /**
     * Specifies the SKU tier of the Static Web App. Possible values are `Free` or `Standard`. Defaults to `Free`.
     */
    skuTier?: pulumi.Input<string>;
    /**
     * A mapping of tags to assign to the resource.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
