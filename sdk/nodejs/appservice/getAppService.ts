// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Use this data source to access information about an existing App Service.
 *
 * ## Example Usage
 *
 *
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = azure.appservice.getAppService({
 *     name: "search-app-service",
 *     resourceGroupName: "search-service",
 * });
 * export const appServiceId = example.then(example => example.id);
 * ```
 */
export function getAppService(args: GetAppServiceArgs, opts?: pulumi.InvokeOptions): Promise<GetAppServiceResult> {
    if (!opts) {
        opts = {}
    }

    if (!opts.version) {
        opts.version = utilities.getVersion();
    }
    return pulumi.runtime.invoke("azure:appservice/getAppService:getAppService", {
        "name": args.name,
        "resourceGroupName": args.resourceGroupName,
    }, opts);
}

/**
 * A collection of arguments for invoking getAppService.
 */
export interface GetAppServiceArgs {
    /**
     * The name of the App Service.
     */
    readonly name: string;
    /**
     * The Name of the Resource Group where the App Service exists.
     */
    readonly resourceGroupName: string;
}

/**
 * A collection of values returned by getAppService.
 */
export interface GetAppServiceResult {
    /**
     * The ID of the App Service Plan within which the App Service exists.
     */
    readonly appServicePlanId: string;
    /**
     * A key-value pair of App Settings for the App Service.
     */
    readonly appSettings: {[key: string]: string};
    /**
     * Does the App Service send session affinity cookies, which route client requests in the same session to the same instance?
     */
    readonly clientAffinityEnabled: boolean;
    /**
     * Does the App Service require client certificates for incoming requests?
     */
    readonly clientCertEnabled: boolean;
    /**
     * An `connectionString` block as defined below.
     */
    readonly connectionStrings: outputs.appservice.GetAppServiceConnectionString[];
    /**
     * The Default Hostname associated with the App Service - such as `mysite.azurewebsites.net`
     */
    readonly defaultSiteHostname: string;
    /**
     * Is the App Service Enabled?
     */
    readonly enabled: boolean;
    /**
     * Can the App Service only be accessed via HTTPS?
     */
    readonly httpsOnly: boolean;
    /**
     * The Azure location where the App Service exists.
     */
    readonly location: string;
    /**
     * The name for this IP Restriction.
     */
    readonly name: string;
    /**
     * A comma separated list of outbound IP addresses - such as `52.23.25.3,52.143.43.12`
     */
    readonly outboundIpAddresses: string;
    /**
     * A comma separated list of outbound IP addresses - such as `52.23.25.3,52.143.43.12,52.143.43.17` - not all of which are necessarily in use. Superset of `outboundIpAddresses`.
     */
    readonly possibleOutboundIpAddresses: string;
    readonly resourceGroupName: string;
    /**
     * A `siteConfig` block as defined below.
     */
    readonly siteConfigs: outputs.appservice.GetAppServiceSiteConfig[];
    readonly siteCredentials: outputs.appservice.GetAppServiceSiteCredential[];
    readonly sourceControls: outputs.appservice.GetAppServiceSourceControl[];
    /**
     * A mapping of tags to assign to the resource.
     */
    readonly tags: {[key: string]: string};
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
}
