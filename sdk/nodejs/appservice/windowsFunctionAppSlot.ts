// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Manages a Windows Function App Slot.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const exampleResourceGroup = new azure.core.ResourceGroup("exampleResourceGroup", {location: "West Europe"});
 * const exampleAccount = new azure.storage.Account("exampleAccount", {
 *     resourceGroupName: exampleResourceGroup.name,
 *     location: exampleResourceGroup.location,
 *     accountTier: "Standard",
 *     accountReplicationType: "LRS",
 * });
 * const exampleServicePlan = new azure.appservice.ServicePlan("exampleServicePlan", {
 *     resourceGroupName: exampleResourceGroup.name,
 *     location: exampleResourceGroup.location,
 *     osType: "Windows",
 *     skuName: "Y1",
 * });
 * const exampleWindowsFunctionApp = new azure.appservice.WindowsFunctionApp("exampleWindowsFunctionApp", {
 *     resourceGroupName: exampleResourceGroup.name,
 *     location: exampleResourceGroup.location,
 *     storageAccountName: exampleAccount.name,
 *     servicePlanId: exampleServicePlan.id,
 *     siteConfig: {},
 * });
 * const exampleWindowsFunctionAppSlot = new azure.appservice.WindowsFunctionAppSlot("exampleWindowsFunctionAppSlot", {
 *     functionAppId: exampleWindowsFunctionApp.id,
 *     storageAccountName: exampleAccount.name,
 *     siteConfig: {},
 * });
 * ```
 *
 * ## Import
 *
 * A Windows Function App Slot can be imported using the `resource id`, e.g.
 *
 * ```sh
 *  $ pulumi import azure:appservice/windowsFunctionAppSlot:WindowsFunctionAppSlot example "/subscriptions/12345678-1234-9876-4563-123456789012/resourceGroups/resGroup1/providers/Microsoft.Web/sites/site1/slots/slot1"
 * ```
 */
export class WindowsFunctionAppSlot extends pulumi.CustomResource {
    /**
     * Get an existing WindowsFunctionAppSlot resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: WindowsFunctionAppSlotState, opts?: pulumi.CustomResourceOptions): WindowsFunctionAppSlot {
        return new WindowsFunctionAppSlot(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure:appservice/windowsFunctionAppSlot:WindowsFunctionAppSlot';

    /**
     * Returns true if the given object is an instance of WindowsFunctionAppSlot.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is WindowsFunctionAppSlot {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === WindowsFunctionAppSlot.__pulumiType;
    }

    /**
     * A map of key-value pairs for [App Settings](https://docs.microsoft.com/azure/azure-functions/functions-app-settings) and custom values.
     */
    public readonly appSettings!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * an `authSettings` block as detailed below.
     */
    public readonly authSettings!: pulumi.Output<outputs.appservice.WindowsFunctionAppSlotAuthSettings | undefined>;
    /**
     * an `authSettingsV2` block as detailed below.
     */
    public readonly authSettingsV2!: pulumi.Output<outputs.appservice.WindowsFunctionAppSlotAuthSettingsV2 | undefined>;
    /**
     * a `backup` block as detailed below.
     */
    public readonly backup!: pulumi.Output<outputs.appservice.WindowsFunctionAppSlotBackup | undefined>;
    /**
     * Should built-in logging be enabled. Configures `AzureWebJobsDashboard` app setting based on the configured storage setting. Defaults to `true`.
     */
    public readonly builtinLoggingEnabled!: pulumi.Output<boolean | undefined>;
    /**
     * Should the Function App Slot use Client Certificates.
     */
    public readonly clientCertificateEnabled!: pulumi.Output<boolean | undefined>;
    /**
     * Paths to exclude when using client certificates, separated by ;
     */
    public readonly clientCertificateExclusionPaths!: pulumi.Output<string | undefined>;
    /**
     * The mode of the Function App Slot's client certificates requirement for incoming requests. Possible values are `Required`, `Optional`, and `OptionalInteractiveUser`. Defaults to `Optional`.
     */
    public readonly clientCertificateMode!: pulumi.Output<string | undefined>;
    /**
     * a `connectionString` block as detailed below.
     */
    public readonly connectionStrings!: pulumi.Output<outputs.appservice.WindowsFunctionAppSlotConnectionString[] | undefined>;
    /**
     * Force disable the content share settings.
     */
    public readonly contentShareForceDisabled!: pulumi.Output<boolean | undefined>;
    /**
     * The identifier used by App Service to perform domain ownership verification via DNS TXT record.
     */
    public /*out*/ readonly customDomainVerificationId!: pulumi.Output<string>;
    /**
     * The amount of memory in gigabyte-seconds that your application is allowed to consume per day. Setting this value only affects function apps in Consumption Plans. Defaults to `0`.
     */
    public readonly dailyMemoryTimeQuota!: pulumi.Output<number | undefined>;
    /**
     * The default hostname of the Windows Function App Slot.
     */
    public /*out*/ readonly defaultHostname!: pulumi.Output<string>;
    /**
     * Is the Windows Function App Slot enabled. Defaults to `true`.
     */
    public readonly enabled!: pulumi.Output<boolean | undefined>;
    /**
     * Should the default FTP Basic Authentication publishing profile be enabled. Defaults to `true`.
     */
    public readonly ftpPublishBasicAuthenticationEnabled!: pulumi.Output<boolean | undefined>;
    /**
     * The name of the Windows Function App this Slot is a member of. Changing this forces a new resource to be created.
     */
    public readonly functionAppId!: pulumi.Output<string>;
    /**
     * The runtime version associated with the Function App Slot. Defaults to `~4`.
     */
    public readonly functionsExtensionVersion!: pulumi.Output<string | undefined>;
    /**
     * The ID of the App Service Environment used by Function App Slot.
     */
    public /*out*/ readonly hostingEnvironmentId!: pulumi.Output<string>;
    /**
     * Can the Function App Slot only be accessed via HTTPS?. Defaults to `false`.
     */
    public readonly httpsOnly!: pulumi.Output<boolean | undefined>;
    /**
     * an `identity` block as detailed below.
     */
    public readonly identity!: pulumi.Output<outputs.appservice.WindowsFunctionAppSlotIdentity | undefined>;
    /**
     * The User Assigned Identity ID used for accessing KeyVault secrets. The identity must be assigned to the application in the `identity` block. [For more information see - Access vaults with a user-assigned identity](https://docs.microsoft.com/azure/app-service/app-service-key-vault-references#access-vaults-with-a-user-assigned-identity)
     */
    public readonly keyVaultReferenceIdentityId!: pulumi.Output<string>;
    /**
     * The Kind value for this Windows Function App Slot.
     */
    public /*out*/ readonly kind!: pulumi.Output<string>;
    /**
     * Specifies the name of the Windows Function App Slot. Changing this forces a new resource to be created.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * A list of outbound IP addresses. For example `["52.23.25.3", "52.143.43.12"]`.
     */
    public /*out*/ readonly outboundIpAddressLists!: pulumi.Output<string[]>;
    /**
     * A comma separated list of outbound IP addresses as a string. For example `52.23.25.3,52.143.43.12`.
     */
    public /*out*/ readonly outboundIpAddresses!: pulumi.Output<string>;
    /**
     * A list of possible outbound IP addresses, not all of which are necessarily in use. This is a superset of `outboundIpAddressList`. For example `["52.23.25.3", "52.143.43.12"]`.
     */
    public /*out*/ readonly possibleOutboundIpAddressLists!: pulumi.Output<string[]>;
    /**
     * A comma separated list of possible outbound IP addresses as a string. For example `52.23.25.3,52.143.43.12,52.143.43.17`. This is a superset of `outboundIpAddresses`. For example `["52.23.25.3", "52.143.43.12","52.143.43.17"]`.
     */
    public /*out*/ readonly possibleOutboundIpAddresses!: pulumi.Output<string>;
    /**
     * Should public network access be enabled for the Function App. Defaults to `true`.
     */
    public readonly publicNetworkAccessEnabled!: pulumi.Output<boolean | undefined>;
    /**
     * The ID of the Service Plan in which to run this slot. If not specified the same Service Plan as the Windows Function App will be used.
     */
    public readonly servicePlanId!: pulumi.Output<string | undefined>;
    /**
     * a `siteConfig` block as detailed below.
     */
    public readonly siteConfig!: pulumi.Output<outputs.appservice.WindowsFunctionAppSlotSiteConfig>;
    /**
     * A `siteCredential` block as defined below.
     */
    public /*out*/ readonly siteCredentials!: pulumi.Output<outputs.appservice.WindowsFunctionAppSlotSiteCredential[]>;
    /**
     * The access key which will be used to access the storage account for the Function App Slot.
     */
    public readonly storageAccountAccessKey!: pulumi.Output<string | undefined>;
    /**
     * The backend storage account name which will be used by this Function App Slot.
     */
    public readonly storageAccountName!: pulumi.Output<string | undefined>;
    /**
     * One or more `storageAccount` blocks as defined below.
     */
    public readonly storageAccounts!: pulumi.Output<outputs.appservice.WindowsFunctionAppSlotStorageAccount[] | undefined>;
    /**
     * The Key Vault Secret ID, optionally including version, that contains the Connection String to connect to the storage account for this Function App Slot.
     *
     * > **NOTE:** `storageKeyVaultSecretId` cannot be used with `storageAccountName`.
     *
     * > **NOTE:** `storageKeyVaultSecretId` used without a version will use the latest version of the secret, however, the service can take up to 24h to pick up a rotation of the latest version. See the [official docs](https://docs.microsoft.com/azure/app-service/app-service-key-vault-references#rotation) for more information.
     */
    public readonly storageKeyVaultSecretId!: pulumi.Output<string | undefined>;
    /**
     * Should the Function App Slot use its Managed Identity to access storage.
     *
     * > **NOTE:** One of `storageAccountAccessKey` or `storageUsesManagedIdentity` must be specified when using `storageAccountName`.
     */
    public readonly storageUsesManagedIdentity!: pulumi.Output<boolean | undefined>;
    /**
     * A mapping of tags which should be assigned to the Windows Function App Slot.
     */
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    public readonly virtualNetworkSubnetId!: pulumi.Output<string | undefined>;
    /**
     * Should the default WebDeploy Basic Authentication publishing credentials enabled. Defaults to `true`.
     */
    public readonly webdeployPublishBasicAuthenticationEnabled!: pulumi.Output<boolean | undefined>;

    /**
     * Create a WindowsFunctionAppSlot resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: WindowsFunctionAppSlotArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: WindowsFunctionAppSlotArgs | WindowsFunctionAppSlotState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as WindowsFunctionAppSlotState | undefined;
            resourceInputs["appSettings"] = state ? state.appSettings : undefined;
            resourceInputs["authSettings"] = state ? state.authSettings : undefined;
            resourceInputs["authSettingsV2"] = state ? state.authSettingsV2 : undefined;
            resourceInputs["backup"] = state ? state.backup : undefined;
            resourceInputs["builtinLoggingEnabled"] = state ? state.builtinLoggingEnabled : undefined;
            resourceInputs["clientCertificateEnabled"] = state ? state.clientCertificateEnabled : undefined;
            resourceInputs["clientCertificateExclusionPaths"] = state ? state.clientCertificateExclusionPaths : undefined;
            resourceInputs["clientCertificateMode"] = state ? state.clientCertificateMode : undefined;
            resourceInputs["connectionStrings"] = state ? state.connectionStrings : undefined;
            resourceInputs["contentShareForceDisabled"] = state ? state.contentShareForceDisabled : undefined;
            resourceInputs["customDomainVerificationId"] = state ? state.customDomainVerificationId : undefined;
            resourceInputs["dailyMemoryTimeQuota"] = state ? state.dailyMemoryTimeQuota : undefined;
            resourceInputs["defaultHostname"] = state ? state.defaultHostname : undefined;
            resourceInputs["enabled"] = state ? state.enabled : undefined;
            resourceInputs["ftpPublishBasicAuthenticationEnabled"] = state ? state.ftpPublishBasicAuthenticationEnabled : undefined;
            resourceInputs["functionAppId"] = state ? state.functionAppId : undefined;
            resourceInputs["functionsExtensionVersion"] = state ? state.functionsExtensionVersion : undefined;
            resourceInputs["hostingEnvironmentId"] = state ? state.hostingEnvironmentId : undefined;
            resourceInputs["httpsOnly"] = state ? state.httpsOnly : undefined;
            resourceInputs["identity"] = state ? state.identity : undefined;
            resourceInputs["keyVaultReferenceIdentityId"] = state ? state.keyVaultReferenceIdentityId : undefined;
            resourceInputs["kind"] = state ? state.kind : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["outboundIpAddressLists"] = state ? state.outboundIpAddressLists : undefined;
            resourceInputs["outboundIpAddresses"] = state ? state.outboundIpAddresses : undefined;
            resourceInputs["possibleOutboundIpAddressLists"] = state ? state.possibleOutboundIpAddressLists : undefined;
            resourceInputs["possibleOutboundIpAddresses"] = state ? state.possibleOutboundIpAddresses : undefined;
            resourceInputs["publicNetworkAccessEnabled"] = state ? state.publicNetworkAccessEnabled : undefined;
            resourceInputs["servicePlanId"] = state ? state.servicePlanId : undefined;
            resourceInputs["siteConfig"] = state ? state.siteConfig : undefined;
            resourceInputs["siteCredentials"] = state ? state.siteCredentials : undefined;
            resourceInputs["storageAccountAccessKey"] = state ? state.storageAccountAccessKey : undefined;
            resourceInputs["storageAccountName"] = state ? state.storageAccountName : undefined;
            resourceInputs["storageAccounts"] = state ? state.storageAccounts : undefined;
            resourceInputs["storageKeyVaultSecretId"] = state ? state.storageKeyVaultSecretId : undefined;
            resourceInputs["storageUsesManagedIdentity"] = state ? state.storageUsesManagedIdentity : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["virtualNetworkSubnetId"] = state ? state.virtualNetworkSubnetId : undefined;
            resourceInputs["webdeployPublishBasicAuthenticationEnabled"] = state ? state.webdeployPublishBasicAuthenticationEnabled : undefined;
        } else {
            const args = argsOrState as WindowsFunctionAppSlotArgs | undefined;
            if ((!args || args.functionAppId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'functionAppId'");
            }
            if ((!args || args.siteConfig === undefined) && !opts.urn) {
                throw new Error("Missing required property 'siteConfig'");
            }
            resourceInputs["appSettings"] = args ? args.appSettings : undefined;
            resourceInputs["authSettings"] = args ? args.authSettings : undefined;
            resourceInputs["authSettingsV2"] = args ? args.authSettingsV2 : undefined;
            resourceInputs["backup"] = args ? args.backup : undefined;
            resourceInputs["builtinLoggingEnabled"] = args ? args.builtinLoggingEnabled : undefined;
            resourceInputs["clientCertificateEnabled"] = args ? args.clientCertificateEnabled : undefined;
            resourceInputs["clientCertificateExclusionPaths"] = args ? args.clientCertificateExclusionPaths : undefined;
            resourceInputs["clientCertificateMode"] = args ? args.clientCertificateMode : undefined;
            resourceInputs["connectionStrings"] = args ? args.connectionStrings : undefined;
            resourceInputs["contentShareForceDisabled"] = args ? args.contentShareForceDisabled : undefined;
            resourceInputs["dailyMemoryTimeQuota"] = args ? args.dailyMemoryTimeQuota : undefined;
            resourceInputs["enabled"] = args ? args.enabled : undefined;
            resourceInputs["ftpPublishBasicAuthenticationEnabled"] = args ? args.ftpPublishBasicAuthenticationEnabled : undefined;
            resourceInputs["functionAppId"] = args ? args.functionAppId : undefined;
            resourceInputs["functionsExtensionVersion"] = args ? args.functionsExtensionVersion : undefined;
            resourceInputs["httpsOnly"] = args ? args.httpsOnly : undefined;
            resourceInputs["identity"] = args ? args.identity : undefined;
            resourceInputs["keyVaultReferenceIdentityId"] = args ? args.keyVaultReferenceIdentityId : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["publicNetworkAccessEnabled"] = args ? args.publicNetworkAccessEnabled : undefined;
            resourceInputs["servicePlanId"] = args ? args.servicePlanId : undefined;
            resourceInputs["siteConfig"] = args ? args.siteConfig : undefined;
            resourceInputs["storageAccountAccessKey"] = args?.storageAccountAccessKey ? pulumi.secret(args.storageAccountAccessKey) : undefined;
            resourceInputs["storageAccountName"] = args ? args.storageAccountName : undefined;
            resourceInputs["storageAccounts"] = args ? args.storageAccounts : undefined;
            resourceInputs["storageKeyVaultSecretId"] = args ? args.storageKeyVaultSecretId : undefined;
            resourceInputs["storageUsesManagedIdentity"] = args ? args.storageUsesManagedIdentity : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["virtualNetworkSubnetId"] = args ? args.virtualNetworkSubnetId : undefined;
            resourceInputs["webdeployPublishBasicAuthenticationEnabled"] = args ? args.webdeployPublishBasicAuthenticationEnabled : undefined;
            resourceInputs["customDomainVerificationId"] = undefined /*out*/;
            resourceInputs["defaultHostname"] = undefined /*out*/;
            resourceInputs["hostingEnvironmentId"] = undefined /*out*/;
            resourceInputs["kind"] = undefined /*out*/;
            resourceInputs["outboundIpAddressLists"] = undefined /*out*/;
            resourceInputs["outboundIpAddresses"] = undefined /*out*/;
            resourceInputs["possibleOutboundIpAddressLists"] = undefined /*out*/;
            resourceInputs["possibleOutboundIpAddresses"] = undefined /*out*/;
            resourceInputs["siteCredentials"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["customDomainVerificationId", "siteCredentials", "storageAccountAccessKey"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(WindowsFunctionAppSlot.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering WindowsFunctionAppSlot resources.
 */
export interface WindowsFunctionAppSlotState {
    /**
     * A map of key-value pairs for [App Settings](https://docs.microsoft.com/azure/azure-functions/functions-app-settings) and custom values.
     */
    appSettings?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * an `authSettings` block as detailed below.
     */
    authSettings?: pulumi.Input<inputs.appservice.WindowsFunctionAppSlotAuthSettings>;
    /**
     * an `authSettingsV2` block as detailed below.
     */
    authSettingsV2?: pulumi.Input<inputs.appservice.WindowsFunctionAppSlotAuthSettingsV2>;
    /**
     * a `backup` block as detailed below.
     */
    backup?: pulumi.Input<inputs.appservice.WindowsFunctionAppSlotBackup>;
    /**
     * Should built-in logging be enabled. Configures `AzureWebJobsDashboard` app setting based on the configured storage setting. Defaults to `true`.
     */
    builtinLoggingEnabled?: pulumi.Input<boolean>;
    /**
     * Should the Function App Slot use Client Certificates.
     */
    clientCertificateEnabled?: pulumi.Input<boolean>;
    /**
     * Paths to exclude when using client certificates, separated by ;
     */
    clientCertificateExclusionPaths?: pulumi.Input<string>;
    /**
     * The mode of the Function App Slot's client certificates requirement for incoming requests. Possible values are `Required`, `Optional`, and `OptionalInteractiveUser`. Defaults to `Optional`.
     */
    clientCertificateMode?: pulumi.Input<string>;
    /**
     * a `connectionString` block as detailed below.
     */
    connectionStrings?: pulumi.Input<pulumi.Input<inputs.appservice.WindowsFunctionAppSlotConnectionString>[]>;
    /**
     * Force disable the content share settings.
     */
    contentShareForceDisabled?: pulumi.Input<boolean>;
    /**
     * The identifier used by App Service to perform domain ownership verification via DNS TXT record.
     */
    customDomainVerificationId?: pulumi.Input<string>;
    /**
     * The amount of memory in gigabyte-seconds that your application is allowed to consume per day. Setting this value only affects function apps in Consumption Plans. Defaults to `0`.
     */
    dailyMemoryTimeQuota?: pulumi.Input<number>;
    /**
     * The default hostname of the Windows Function App Slot.
     */
    defaultHostname?: pulumi.Input<string>;
    /**
     * Is the Windows Function App Slot enabled. Defaults to `true`.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * Should the default FTP Basic Authentication publishing profile be enabled. Defaults to `true`.
     */
    ftpPublishBasicAuthenticationEnabled?: pulumi.Input<boolean>;
    /**
     * The name of the Windows Function App this Slot is a member of. Changing this forces a new resource to be created.
     */
    functionAppId?: pulumi.Input<string>;
    /**
     * The runtime version associated with the Function App Slot. Defaults to `~4`.
     */
    functionsExtensionVersion?: pulumi.Input<string>;
    /**
     * The ID of the App Service Environment used by Function App Slot.
     */
    hostingEnvironmentId?: pulumi.Input<string>;
    /**
     * Can the Function App Slot only be accessed via HTTPS?. Defaults to `false`.
     */
    httpsOnly?: pulumi.Input<boolean>;
    /**
     * an `identity` block as detailed below.
     */
    identity?: pulumi.Input<inputs.appservice.WindowsFunctionAppSlotIdentity>;
    /**
     * The User Assigned Identity ID used for accessing KeyVault secrets. The identity must be assigned to the application in the `identity` block. [For more information see - Access vaults with a user-assigned identity](https://docs.microsoft.com/azure/app-service/app-service-key-vault-references#access-vaults-with-a-user-assigned-identity)
     */
    keyVaultReferenceIdentityId?: pulumi.Input<string>;
    /**
     * The Kind value for this Windows Function App Slot.
     */
    kind?: pulumi.Input<string>;
    /**
     * Specifies the name of the Windows Function App Slot. Changing this forces a new resource to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * A list of outbound IP addresses. For example `["52.23.25.3", "52.143.43.12"]`.
     */
    outboundIpAddressLists?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A comma separated list of outbound IP addresses as a string. For example `52.23.25.3,52.143.43.12`.
     */
    outboundIpAddresses?: pulumi.Input<string>;
    /**
     * A list of possible outbound IP addresses, not all of which are necessarily in use. This is a superset of `outboundIpAddressList`. For example `["52.23.25.3", "52.143.43.12"]`.
     */
    possibleOutboundIpAddressLists?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A comma separated list of possible outbound IP addresses as a string. For example `52.23.25.3,52.143.43.12,52.143.43.17`. This is a superset of `outboundIpAddresses`. For example `["52.23.25.3", "52.143.43.12","52.143.43.17"]`.
     */
    possibleOutboundIpAddresses?: pulumi.Input<string>;
    /**
     * Should public network access be enabled for the Function App. Defaults to `true`.
     */
    publicNetworkAccessEnabled?: pulumi.Input<boolean>;
    /**
     * The ID of the Service Plan in which to run this slot. If not specified the same Service Plan as the Windows Function App will be used.
     */
    servicePlanId?: pulumi.Input<string>;
    /**
     * a `siteConfig` block as detailed below.
     */
    siteConfig?: pulumi.Input<inputs.appservice.WindowsFunctionAppSlotSiteConfig>;
    /**
     * A `siteCredential` block as defined below.
     */
    siteCredentials?: pulumi.Input<pulumi.Input<inputs.appservice.WindowsFunctionAppSlotSiteCredential>[]>;
    /**
     * The access key which will be used to access the storage account for the Function App Slot.
     */
    storageAccountAccessKey?: pulumi.Input<string>;
    /**
     * The backend storage account name which will be used by this Function App Slot.
     */
    storageAccountName?: pulumi.Input<string>;
    /**
     * One or more `storageAccount` blocks as defined below.
     */
    storageAccounts?: pulumi.Input<pulumi.Input<inputs.appservice.WindowsFunctionAppSlotStorageAccount>[]>;
    /**
     * The Key Vault Secret ID, optionally including version, that contains the Connection String to connect to the storage account for this Function App Slot.
     *
     * > **NOTE:** `storageKeyVaultSecretId` cannot be used with `storageAccountName`.
     *
     * > **NOTE:** `storageKeyVaultSecretId` used without a version will use the latest version of the secret, however, the service can take up to 24h to pick up a rotation of the latest version. See the [official docs](https://docs.microsoft.com/azure/app-service/app-service-key-vault-references#rotation) for more information.
     */
    storageKeyVaultSecretId?: pulumi.Input<string>;
    /**
     * Should the Function App Slot use its Managed Identity to access storage.
     *
     * > **NOTE:** One of `storageAccountAccessKey` or `storageUsesManagedIdentity` must be specified when using `storageAccountName`.
     */
    storageUsesManagedIdentity?: pulumi.Input<boolean>;
    /**
     * A mapping of tags which should be assigned to the Windows Function App Slot.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    virtualNetworkSubnetId?: pulumi.Input<string>;
    /**
     * Should the default WebDeploy Basic Authentication publishing credentials enabled. Defaults to `true`.
     */
    webdeployPublishBasicAuthenticationEnabled?: pulumi.Input<boolean>;
}

/**
 * The set of arguments for constructing a WindowsFunctionAppSlot resource.
 */
export interface WindowsFunctionAppSlotArgs {
    /**
     * A map of key-value pairs for [App Settings](https://docs.microsoft.com/azure/azure-functions/functions-app-settings) and custom values.
     */
    appSettings?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * an `authSettings` block as detailed below.
     */
    authSettings?: pulumi.Input<inputs.appservice.WindowsFunctionAppSlotAuthSettings>;
    /**
     * an `authSettingsV2` block as detailed below.
     */
    authSettingsV2?: pulumi.Input<inputs.appservice.WindowsFunctionAppSlotAuthSettingsV2>;
    /**
     * a `backup` block as detailed below.
     */
    backup?: pulumi.Input<inputs.appservice.WindowsFunctionAppSlotBackup>;
    /**
     * Should built-in logging be enabled. Configures `AzureWebJobsDashboard` app setting based on the configured storage setting. Defaults to `true`.
     */
    builtinLoggingEnabled?: pulumi.Input<boolean>;
    /**
     * Should the Function App Slot use Client Certificates.
     */
    clientCertificateEnabled?: pulumi.Input<boolean>;
    /**
     * Paths to exclude when using client certificates, separated by ;
     */
    clientCertificateExclusionPaths?: pulumi.Input<string>;
    /**
     * The mode of the Function App Slot's client certificates requirement for incoming requests. Possible values are `Required`, `Optional`, and `OptionalInteractiveUser`. Defaults to `Optional`.
     */
    clientCertificateMode?: pulumi.Input<string>;
    /**
     * a `connectionString` block as detailed below.
     */
    connectionStrings?: pulumi.Input<pulumi.Input<inputs.appservice.WindowsFunctionAppSlotConnectionString>[]>;
    /**
     * Force disable the content share settings.
     */
    contentShareForceDisabled?: pulumi.Input<boolean>;
    /**
     * The amount of memory in gigabyte-seconds that your application is allowed to consume per day. Setting this value only affects function apps in Consumption Plans. Defaults to `0`.
     */
    dailyMemoryTimeQuota?: pulumi.Input<number>;
    /**
     * Is the Windows Function App Slot enabled. Defaults to `true`.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * Should the default FTP Basic Authentication publishing profile be enabled. Defaults to `true`.
     */
    ftpPublishBasicAuthenticationEnabled?: pulumi.Input<boolean>;
    /**
     * The name of the Windows Function App this Slot is a member of. Changing this forces a new resource to be created.
     */
    functionAppId: pulumi.Input<string>;
    /**
     * The runtime version associated with the Function App Slot. Defaults to `~4`.
     */
    functionsExtensionVersion?: pulumi.Input<string>;
    /**
     * Can the Function App Slot only be accessed via HTTPS?. Defaults to `false`.
     */
    httpsOnly?: pulumi.Input<boolean>;
    /**
     * an `identity` block as detailed below.
     */
    identity?: pulumi.Input<inputs.appservice.WindowsFunctionAppSlotIdentity>;
    /**
     * The User Assigned Identity ID used for accessing KeyVault secrets. The identity must be assigned to the application in the `identity` block. [For more information see - Access vaults with a user-assigned identity](https://docs.microsoft.com/azure/app-service/app-service-key-vault-references#access-vaults-with-a-user-assigned-identity)
     */
    keyVaultReferenceIdentityId?: pulumi.Input<string>;
    /**
     * Specifies the name of the Windows Function App Slot. Changing this forces a new resource to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * Should public network access be enabled for the Function App. Defaults to `true`.
     */
    publicNetworkAccessEnabled?: pulumi.Input<boolean>;
    /**
     * The ID of the Service Plan in which to run this slot. If not specified the same Service Plan as the Windows Function App will be used.
     */
    servicePlanId?: pulumi.Input<string>;
    /**
     * a `siteConfig` block as detailed below.
     */
    siteConfig: pulumi.Input<inputs.appservice.WindowsFunctionAppSlotSiteConfig>;
    /**
     * The access key which will be used to access the storage account for the Function App Slot.
     */
    storageAccountAccessKey?: pulumi.Input<string>;
    /**
     * The backend storage account name which will be used by this Function App Slot.
     */
    storageAccountName?: pulumi.Input<string>;
    /**
     * One or more `storageAccount` blocks as defined below.
     */
    storageAccounts?: pulumi.Input<pulumi.Input<inputs.appservice.WindowsFunctionAppSlotStorageAccount>[]>;
    /**
     * The Key Vault Secret ID, optionally including version, that contains the Connection String to connect to the storage account for this Function App Slot.
     *
     * > **NOTE:** `storageKeyVaultSecretId` cannot be used with `storageAccountName`.
     *
     * > **NOTE:** `storageKeyVaultSecretId` used without a version will use the latest version of the secret, however, the service can take up to 24h to pick up a rotation of the latest version. See the [official docs](https://docs.microsoft.com/azure/app-service/app-service-key-vault-references#rotation) for more information.
     */
    storageKeyVaultSecretId?: pulumi.Input<string>;
    /**
     * Should the Function App Slot use its Managed Identity to access storage.
     *
     * > **NOTE:** One of `storageAccountAccessKey` or `storageUsesManagedIdentity` must be specified when using `storageAccountName`.
     */
    storageUsesManagedIdentity?: pulumi.Input<boolean>;
    /**
     * A mapping of tags which should be assigned to the Windows Function App Slot.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    virtualNetworkSubnetId?: pulumi.Input<string>;
    /**
     * Should the default WebDeploy Basic Authentication publishing credentials enabled. Defaults to `true`.
     */
    webdeployPublishBasicAuthenticationEnabled?: pulumi.Input<boolean>;
}
