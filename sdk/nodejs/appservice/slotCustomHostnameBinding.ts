// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Manages a Hostname Binding within an App Service Slot.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const exampleResourceGroup = new azure.core.ResourceGroup("exampleResourceGroup", {location: "West Europe"});
 * const examplePlan = new azure.appservice.Plan("examplePlan", {
 *     location: exampleResourceGroup.location,
 *     resourceGroupName: exampleResourceGroup.name,
 *     sku: {
 *         tier: "Standard",
 *         size: "S1",
 *     },
 * });
 * const exampleAppService = new azure.appservice.AppService("exampleAppService", {
 *     location: exampleResourceGroup.location,
 *     resourceGroupName: exampleResourceGroup.name,
 *     appServicePlanId: examplePlan.id,
 * });
 * const exampleSlot = new azure.appservice.Slot("exampleSlot", {
 *     location: exampleResourceGroup.location,
 *     resourceGroupName: exampleResourceGroup.name,
 *     appServiceName: exampleAppService.name,
 *     appServicePlanId: examplePlan.id,
 * });
 * const exampleSlotCustomHostnameBinding = new azure.appservice.SlotCustomHostnameBinding("exampleSlotCustomHostnameBinding", {
 *     appServiceSlotId: exampleSlot.id,
 *     hostname: "www.mywebsite.com",
 * });
 * ```
 *
 * ## Import
 *
 * App Service Custom Hostname Bindings can be imported using the `resource id`, e.g.
 *
 * ```sh
 *  $ pulumi import azure:appservice/slotCustomHostnameBinding:SlotCustomHostnameBinding mywebsite /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/mygroup1/providers/Microsoft.Web/sites/instance1/slots/staging/hostNameBindings/mywebsite.com
 * ```
 */
export class SlotCustomHostnameBinding extends pulumi.CustomResource {
    /**
     * Get an existing SlotCustomHostnameBinding resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SlotCustomHostnameBindingState, opts?: pulumi.CustomResourceOptions): SlotCustomHostnameBinding {
        return new SlotCustomHostnameBinding(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure:appservice/slotCustomHostnameBinding:SlotCustomHostnameBinding';

    /**
     * Returns true if the given object is an instance of SlotCustomHostnameBinding.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SlotCustomHostnameBinding {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SlotCustomHostnameBinding.__pulumiType;
    }

    /**
     * The ID of the App Service Slot. Changing this forces a new resource to be created.
     */
    public readonly appServiceSlotId!: pulumi.Output<string>;
    /**
     * Specifies the Custom Hostname to use for the App Service, example `www.example.com`. Changing this forces a new resource to be created.
     *
     * > **NOTE:** A CNAME needs to be configured from this Hostname to the Azure Website - otherwise Azure will reject the Hostname Binding.
     */
    public readonly hostname!: pulumi.Output<string>;
    /**
     * The SSL type. Possible values are `IpBasedEnabled` and `SniEnabled`. Changing this forces a new resource to be created.
     */
    public readonly sslState!: pulumi.Output<string>;
    /**
     * The SSL certificate thumbprint. Changing this forces a new resource to be created.
     *
     * > **NOTE:** `thumbprint` must be specified when `sslState` is set.
     */
    public readonly thumbprint!: pulumi.Output<string>;
    /**
     * The virtual IP address assigned to the hostname if IP based SSL is enabled.
     */
    public /*out*/ readonly virtualIp!: pulumi.Output<string>;

    /**
     * Create a SlotCustomHostnameBinding resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SlotCustomHostnameBindingArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SlotCustomHostnameBindingArgs | SlotCustomHostnameBindingState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SlotCustomHostnameBindingState | undefined;
            resourceInputs["appServiceSlotId"] = state ? state.appServiceSlotId : undefined;
            resourceInputs["hostname"] = state ? state.hostname : undefined;
            resourceInputs["sslState"] = state ? state.sslState : undefined;
            resourceInputs["thumbprint"] = state ? state.thumbprint : undefined;
            resourceInputs["virtualIp"] = state ? state.virtualIp : undefined;
        } else {
            const args = argsOrState as SlotCustomHostnameBindingArgs | undefined;
            if ((!args || args.appServiceSlotId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'appServiceSlotId'");
            }
            if ((!args || args.hostname === undefined) && !opts.urn) {
                throw new Error("Missing required property 'hostname'");
            }
            resourceInputs["appServiceSlotId"] = args ? args.appServiceSlotId : undefined;
            resourceInputs["hostname"] = args ? args.hostname : undefined;
            resourceInputs["sslState"] = args ? args.sslState : undefined;
            resourceInputs["thumbprint"] = args ? args.thumbprint : undefined;
            resourceInputs["virtualIp"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SlotCustomHostnameBinding.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering SlotCustomHostnameBinding resources.
 */
export interface SlotCustomHostnameBindingState {
    /**
     * The ID of the App Service Slot. Changing this forces a new resource to be created.
     */
    appServiceSlotId?: pulumi.Input<string>;
    /**
     * Specifies the Custom Hostname to use for the App Service, example `www.example.com`. Changing this forces a new resource to be created.
     *
     * > **NOTE:** A CNAME needs to be configured from this Hostname to the Azure Website - otherwise Azure will reject the Hostname Binding.
     */
    hostname?: pulumi.Input<string>;
    /**
     * The SSL type. Possible values are `IpBasedEnabled` and `SniEnabled`. Changing this forces a new resource to be created.
     */
    sslState?: pulumi.Input<string>;
    /**
     * The SSL certificate thumbprint. Changing this forces a new resource to be created.
     *
     * > **NOTE:** `thumbprint` must be specified when `sslState` is set.
     */
    thumbprint?: pulumi.Input<string>;
    /**
     * The virtual IP address assigned to the hostname if IP based SSL is enabled.
     */
    virtualIp?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a SlotCustomHostnameBinding resource.
 */
export interface SlotCustomHostnameBindingArgs {
    /**
     * The ID of the App Service Slot. Changing this forces a new resource to be created.
     */
    appServiceSlotId: pulumi.Input<string>;
    /**
     * Specifies the Custom Hostname to use for the App Service, example `www.example.com`. Changing this forces a new resource to be created.
     *
     * > **NOTE:** A CNAME needs to be configured from this Hostname to the Azure Website - otherwise Azure will reject the Hostname Binding.
     */
    hostname: pulumi.Input<string>;
    /**
     * The SSL type. Possible values are `IpBasedEnabled` and `SniEnabled`. Changing this forces a new resource to be created.
     */
    sslState?: pulumi.Input<string>;
    /**
     * The SSL certificate thumbprint. Changing this forces a new resource to be created.
     *
     * > **NOTE:** `thumbprint` must be specified when `sslState` is set.
     */
    thumbprint?: pulumi.Input<string>;
}
