// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Manages a 3rd Generation (v3) App Service Environment.
 *
 * ## Example Usage
 *
 * This example provisions an App Service Environment V3. Additional examples of how to use the `azure.appservice.EnvironmentV3` resource can be found in the `./examples/app-service-environment-v3` directory within the GitHub Repository.
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = new azure.core.ResourceGroup("example", {
 *     name: "exampleRG1",
 *     location: "West Europe",
 * });
 * const exampleVirtualNetwork = new azure.network.VirtualNetwork("example", {
 *     name: "example-vnet",
 *     location: example.location,
 *     resourceGroupName: example.name,
 *     addressSpaces: ["10.0.0.0/16"],
 * });
 * const exampleSubnet = new azure.network.Subnet("example", {
 *     name: "example-subnet",
 *     resourceGroupName: example.name,
 *     virtualNetworkName: exampleVirtualNetwork.name,
 *     addressPrefixes: ["10.0.2.0/24"],
 *     delegations: [{
 *         name: "Microsoft.Web.hostingEnvironments",
 *         serviceDelegation: {
 *             name: "Microsoft.Web/hostingEnvironments",
 *             actions: ["Microsoft.Network/virtualNetworks/subnets/action"],
 *         },
 *     }],
 * });
 * const exampleEnvironmentV3 = new azure.appservice.EnvironmentV3("example", {
 *     name: "example-asev3",
 *     resourceGroupName: example.name,
 *     subnetId: exampleSubnet.id,
 *     internalLoadBalancingMode: "Web, Publishing",
 *     clusterSettings: [
 *         {
 *             name: "DisableTls1.0",
 *             value: "1",
 *         },
 *         {
 *             name: "InternalEncryption",
 *             value: "true",
 *         },
 *         {
 *             name: "FrontEndSSLCipherSuiteOrder",
 *             value: "TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256",
 *         },
 *     ],
 *     tags: {
 *         env: "production",
 *         terraformed: "true",
 *     },
 * });
 * const exampleServicePlan = new azure.appservice.ServicePlan("example", {
 *     name: "example",
 *     resourceGroupName: example.name,
 *     location: example.location,
 *     osType: "Linux",
 *     skuName: "I1v2",
 *     appServiceEnvironmentId: exampleEnvironmentV3.id,
 * });
 * ```
 *
 * ## API Providers
 *
 * <!-- This section is generated, changes will be overwritten -->
 * This resource uses the following Azure API Providers:
 *
 * * `Microsoft.Network` - 2024-05-01
 *
 * * `Microsoft.Web` - 2023-01-01
 *
 * ## Import
 *
 * A 3rd Generation (v3) App Service Environment can be imported using the `resource id`, e.g.
 *
 * ```sh
 * $ pulumi import azure:appservice/environmentV3:EnvironmentV3 myAppServiceEnv /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.Web/hostingEnvironments/myAppServiceEnv
 * ```
 */
export class EnvironmentV3 extends pulumi.CustomResource {
    /**
     * Get an existing EnvironmentV3 resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: EnvironmentV3State, opts?: pulumi.CustomResourceOptions): EnvironmentV3 {
        return new EnvironmentV3(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure:appservice/environmentV3:EnvironmentV3';

    /**
     * Returns true if the given object is an instance of EnvironmentV3.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is EnvironmentV3 {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === EnvironmentV3.__pulumiType;
    }

    /**
     * Should new Private Endpoint Connections be allowed. Defaults to `true`.
     */
    declare public readonly allowNewPrivateEndpointConnections: pulumi.Output<boolean | undefined>;
    /**
     * Zero or more `clusterSetting` blocks as defined below.
     */
    declare public readonly clusterSettings: pulumi.Output<outputs.appservice.EnvironmentV3ClusterSetting[]>;
    /**
     * This ASEv3 should use dedicated Hosts. Possible values are `2`. Changing this forces a new resource to be created.
     */
    declare public readonly dedicatedHostCount: pulumi.Output<number | undefined>;
    /**
     * the DNS suffix for this App Service Environment V3.
     */
    declare public /*out*/ readonly dnsSuffix: pulumi.Output<string>;
    /**
     * The external inbound IP addresses of the App Service Environment V3.
     */
    declare public /*out*/ readonly externalInboundIpAddresses: pulumi.Output<string[]>;
    /**
     * An `inboundNetworkDependencies` block as defined below.
     */
    declare public /*out*/ readonly inboundNetworkDependencies: pulumi.Output<outputs.appservice.EnvironmentV3InboundNetworkDependency[]>;
    /**
     * The internal inbound IP addresses of the App Service Environment V3.
     */
    declare public /*out*/ readonly internalInboundIpAddresses: pulumi.Output<string[]>;
    /**
     * Specifies which endpoints to serve internally in the Virtual Network for the App Service Environment. Possible values are `None` (for an External VIP Type), and `"Web, Publishing"` (for an Internal VIP Type). Defaults to `None`. Changing this forces a new resource to be created.
     */
    declare public readonly internalLoadBalancingMode: pulumi.Output<string | undefined>;
    /**
     * The number of IP SSL addresses reserved for the App Service Environment V3.
     */
    declare public /*out*/ readonly ipSslAddressCount: pulumi.Output<number>;
    /**
     * Outbound addresses of Linux based Apps in this App Service Environment V3
     */
    declare public /*out*/ readonly linuxOutboundIpAddresses: pulumi.Output<string[]>;
    /**
     * The location where the App Service Environment exists.
     */
    declare public /*out*/ readonly location: pulumi.Output<string>;
    /**
     * The name of the App Service Environment. Changing this forces a new resource to be created.
     */
    declare public readonly name: pulumi.Output<string>;
    /**
     * Pricing tier for the front end instances.
     */
    declare public /*out*/ readonly pricingTier: pulumi.Output<string>;
    /**
     * Whether to enable remote debug. Defaults to `false`.
     */
    declare public readonly remoteDebuggingEnabled: pulumi.Output<boolean | undefined>;
    /**
     * The name of the Resource Group where the App Service Environment exists. Defaults to the Resource Group of the Subnet (specified by `subnetId`). Changing this forces a new resource to be created.
     */
    declare public readonly resourceGroupName: pulumi.Output<string>;
    /**
     * The ID of the Subnet which the App Service Environment should be connected to. Changing this forces a new resource to be created.
     *
     * > **Note:** a /24 or larger CIDR is required. Once associated with an ASE, this size cannot be changed.
     *
     * > **Note:** This Subnet requires a delegation to `Microsoft.Web/hostingEnvironments` as detailed in the example above.
     */
    declare public readonly subnetId: pulumi.Output<string>;
    declare public readonly tags: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * Outbound addresses of Windows based Apps in this App Service Environment V3.
     */
    declare public /*out*/ readonly windowsOutboundIpAddresses: pulumi.Output<string[]>;
    /**
     * Set to `true` to deploy the ASEv3 with availability zones supported. Zonal ASEs can be deployed in some regions, you can refer to [Availability Zone support for App Service Environments](https://docs.microsoft.com/azure/app-service/environment/zone-redundancy). You can only set either `dedicatedHostCount` or `zoneRedundant` but not both. Changing this forces a new resource to be created.
     *
     * > **Note:** Setting this value will provision 2 Physical Hosts for your App Service Environment V3, this is done at additional cost, please be aware of the pricing commitment in the [General Availability Notes](https://techcommunity.microsoft.com/t5/apps-on-azure/announcing-app-service-environment-v3-ga/ba-p/2517990)
     */
    declare public readonly zoneRedundant: pulumi.Output<boolean | undefined>;

    /**
     * Create a EnvironmentV3 resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: EnvironmentV3Args, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: EnvironmentV3Args | EnvironmentV3State, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as EnvironmentV3State | undefined;
            resourceInputs["allowNewPrivateEndpointConnections"] = state?.allowNewPrivateEndpointConnections;
            resourceInputs["clusterSettings"] = state?.clusterSettings;
            resourceInputs["dedicatedHostCount"] = state?.dedicatedHostCount;
            resourceInputs["dnsSuffix"] = state?.dnsSuffix;
            resourceInputs["externalInboundIpAddresses"] = state?.externalInboundIpAddresses;
            resourceInputs["inboundNetworkDependencies"] = state?.inboundNetworkDependencies;
            resourceInputs["internalInboundIpAddresses"] = state?.internalInboundIpAddresses;
            resourceInputs["internalLoadBalancingMode"] = state?.internalLoadBalancingMode;
            resourceInputs["ipSslAddressCount"] = state?.ipSslAddressCount;
            resourceInputs["linuxOutboundIpAddresses"] = state?.linuxOutboundIpAddresses;
            resourceInputs["location"] = state?.location;
            resourceInputs["name"] = state?.name;
            resourceInputs["pricingTier"] = state?.pricingTier;
            resourceInputs["remoteDebuggingEnabled"] = state?.remoteDebuggingEnabled;
            resourceInputs["resourceGroupName"] = state?.resourceGroupName;
            resourceInputs["subnetId"] = state?.subnetId;
            resourceInputs["tags"] = state?.tags;
            resourceInputs["windowsOutboundIpAddresses"] = state?.windowsOutboundIpAddresses;
            resourceInputs["zoneRedundant"] = state?.zoneRedundant;
        } else {
            const args = argsOrState as EnvironmentV3Args | undefined;
            if (args?.resourceGroupName === undefined && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            if (args?.subnetId === undefined && !opts.urn) {
                throw new Error("Missing required property 'subnetId'");
            }
            resourceInputs["allowNewPrivateEndpointConnections"] = args?.allowNewPrivateEndpointConnections;
            resourceInputs["clusterSettings"] = args?.clusterSettings;
            resourceInputs["dedicatedHostCount"] = args?.dedicatedHostCount;
            resourceInputs["internalLoadBalancingMode"] = args?.internalLoadBalancingMode;
            resourceInputs["name"] = args?.name;
            resourceInputs["remoteDebuggingEnabled"] = args?.remoteDebuggingEnabled;
            resourceInputs["resourceGroupName"] = args?.resourceGroupName;
            resourceInputs["subnetId"] = args?.subnetId;
            resourceInputs["tags"] = args?.tags;
            resourceInputs["zoneRedundant"] = args?.zoneRedundant;
            resourceInputs["dnsSuffix"] = undefined /*out*/;
            resourceInputs["externalInboundIpAddresses"] = undefined /*out*/;
            resourceInputs["inboundNetworkDependencies"] = undefined /*out*/;
            resourceInputs["internalInboundIpAddresses"] = undefined /*out*/;
            resourceInputs["ipSslAddressCount"] = undefined /*out*/;
            resourceInputs["linuxOutboundIpAddresses"] = undefined /*out*/;
            resourceInputs["location"] = undefined /*out*/;
            resourceInputs["pricingTier"] = undefined /*out*/;
            resourceInputs["windowsOutboundIpAddresses"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(EnvironmentV3.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering EnvironmentV3 resources.
 */
export interface EnvironmentV3State {
    /**
     * Should new Private Endpoint Connections be allowed. Defaults to `true`.
     */
    allowNewPrivateEndpointConnections?: pulumi.Input<boolean>;
    /**
     * Zero or more `clusterSetting` blocks as defined below.
     */
    clusterSettings?: pulumi.Input<pulumi.Input<inputs.appservice.EnvironmentV3ClusterSetting>[]>;
    /**
     * This ASEv3 should use dedicated Hosts. Possible values are `2`. Changing this forces a new resource to be created.
     */
    dedicatedHostCount?: pulumi.Input<number>;
    /**
     * the DNS suffix for this App Service Environment V3.
     */
    dnsSuffix?: pulumi.Input<string>;
    /**
     * The external inbound IP addresses of the App Service Environment V3.
     */
    externalInboundIpAddresses?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * An `inboundNetworkDependencies` block as defined below.
     */
    inboundNetworkDependencies?: pulumi.Input<pulumi.Input<inputs.appservice.EnvironmentV3InboundNetworkDependency>[]>;
    /**
     * The internal inbound IP addresses of the App Service Environment V3.
     */
    internalInboundIpAddresses?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies which endpoints to serve internally in the Virtual Network for the App Service Environment. Possible values are `None` (for an External VIP Type), and `"Web, Publishing"` (for an Internal VIP Type). Defaults to `None`. Changing this forces a new resource to be created.
     */
    internalLoadBalancingMode?: pulumi.Input<string>;
    /**
     * The number of IP SSL addresses reserved for the App Service Environment V3.
     */
    ipSslAddressCount?: pulumi.Input<number>;
    /**
     * Outbound addresses of Linux based Apps in this App Service Environment V3
     */
    linuxOutboundIpAddresses?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The location where the App Service Environment exists.
     */
    location?: pulumi.Input<string>;
    /**
     * The name of the App Service Environment. Changing this forces a new resource to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * Pricing tier for the front end instances.
     */
    pricingTier?: pulumi.Input<string>;
    /**
     * Whether to enable remote debug. Defaults to `false`.
     */
    remoteDebuggingEnabled?: pulumi.Input<boolean>;
    /**
     * The name of the Resource Group where the App Service Environment exists. Defaults to the Resource Group of the Subnet (specified by `subnetId`). Changing this forces a new resource to be created.
     */
    resourceGroupName?: pulumi.Input<string>;
    /**
     * The ID of the Subnet which the App Service Environment should be connected to. Changing this forces a new resource to be created.
     *
     * > **Note:** a /24 or larger CIDR is required. Once associated with an ASE, this size cannot be changed.
     *
     * > **Note:** This Subnet requires a delegation to `Microsoft.Web/hostingEnvironments` as detailed in the example above.
     */
    subnetId?: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Outbound addresses of Windows based Apps in this App Service Environment V3.
     */
    windowsOutboundIpAddresses?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Set to `true` to deploy the ASEv3 with availability zones supported. Zonal ASEs can be deployed in some regions, you can refer to [Availability Zone support for App Service Environments](https://docs.microsoft.com/azure/app-service/environment/zone-redundancy). You can only set either `dedicatedHostCount` or `zoneRedundant` but not both. Changing this forces a new resource to be created.
     *
     * > **Note:** Setting this value will provision 2 Physical Hosts for your App Service Environment V3, this is done at additional cost, please be aware of the pricing commitment in the [General Availability Notes](https://techcommunity.microsoft.com/t5/apps-on-azure/announcing-app-service-environment-v3-ga/ba-p/2517990)
     */
    zoneRedundant?: pulumi.Input<boolean>;
}

/**
 * The set of arguments for constructing a EnvironmentV3 resource.
 */
export interface EnvironmentV3Args {
    /**
     * Should new Private Endpoint Connections be allowed. Defaults to `true`.
     */
    allowNewPrivateEndpointConnections?: pulumi.Input<boolean>;
    /**
     * Zero or more `clusterSetting` blocks as defined below.
     */
    clusterSettings?: pulumi.Input<pulumi.Input<inputs.appservice.EnvironmentV3ClusterSetting>[]>;
    /**
     * This ASEv3 should use dedicated Hosts. Possible values are `2`. Changing this forces a new resource to be created.
     */
    dedicatedHostCount?: pulumi.Input<number>;
    /**
     * Specifies which endpoints to serve internally in the Virtual Network for the App Service Environment. Possible values are `None` (for an External VIP Type), and `"Web, Publishing"` (for an Internal VIP Type). Defaults to `None`. Changing this forces a new resource to be created.
     */
    internalLoadBalancingMode?: pulumi.Input<string>;
    /**
     * The name of the App Service Environment. Changing this forces a new resource to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * Whether to enable remote debug. Defaults to `false`.
     */
    remoteDebuggingEnabled?: pulumi.Input<boolean>;
    /**
     * The name of the Resource Group where the App Service Environment exists. Defaults to the Resource Group of the Subnet (specified by `subnetId`). Changing this forces a new resource to be created.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * The ID of the Subnet which the App Service Environment should be connected to. Changing this forces a new resource to be created.
     *
     * > **Note:** a /24 or larger CIDR is required. Once associated with an ASE, this size cannot be changed.
     *
     * > **Note:** This Subnet requires a delegation to `Microsoft.Web/hostingEnvironments` as detailed in the example above.
     */
    subnetId: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Set to `true` to deploy the ASEv3 with availability zones supported. Zonal ASEs can be deployed in some regions, you can refer to [Availability Zone support for App Service Environments](https://docs.microsoft.com/azure/app-service/environment/zone-redundancy). You can only set either `dedicatedHostCount` or `zoneRedundant` but not both. Changing this forces a new resource to be created.
     *
     * > **Note:** Setting this value will provision 2 Physical Hosts for your App Service Environment V3, this is done at additional cost, please be aware of the pricing commitment in the [General Availability Notes](https://techcommunity.microsoft.com/t5/apps-on-azure/announcing-app-service-environment-v3-ga/ba-p/2517990)
     */
    zoneRedundant?: pulumi.Input<boolean>;
}
