// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Manages a Sentinel MS Security Incident Alert Rule.
 *
 * ## Import
 *
 * Sentinel MS Security Incident Alert Rules can be imported using the `resource id`, e.g.
 *
 * ```sh
 *  $ pulumi import azure:sentinel/alertRuleMsSecurityIncident:AlertRuleMsSecurityIncident example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.OperationalInsights/workspaces/workspace1/providers/Microsoft.SecurityInsights/alertRules/rule1
 * ```
 */
export class AlertRuleMsSecurityIncident extends pulumi.CustomResource {
    /**
     * Get an existing AlertRuleMsSecurityIncident resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AlertRuleMsSecurityIncidentState, opts?: pulumi.CustomResourceOptions): AlertRuleMsSecurityIncident {
        return new AlertRuleMsSecurityIncident(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure:sentinel/alertRuleMsSecurityIncident:AlertRuleMsSecurityIncident';

    /**
     * Returns true if the given object is an instance of AlertRuleMsSecurityIncident.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AlertRuleMsSecurityIncident {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AlertRuleMsSecurityIncident.__pulumiType;
    }

    /**
     * The GUID of the alert rule template which is used to create this Sentinel Scheduled Alert Rule. Changing this forces a new Sentinel MS Security Incident Alert Rule to be created.
     */
    public readonly alertRuleTemplateGuid!: pulumi.Output<string | undefined>;
    /**
     * The description of this Sentinel MS Security Incident Alert Rule.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * The friendly name of this Sentinel MS Security Incident Alert Rule.
     */
    public readonly displayName!: pulumi.Output<string>;
    /**
     * Only create incidents when the alert display name doesn't contain text from this list.
     */
    public readonly displayNameExcludeFilters!: pulumi.Output<string[] | undefined>;
    /**
     * Only create incidents when the alert display name contain text from this list, leave empty to apply no filter.
     */
    public readonly displayNameFilters!: pulumi.Output<string[]>;
    /**
     * Should this Sentinel MS Security Incident Alert Rule be enabled? Defaults to `true`.
     */
    public readonly enabled!: pulumi.Output<boolean | undefined>;
    /**
     * The ID of the Log Analytics Workspace this Sentinel MS Security Incident Alert Rule belongs to. Changing this forces a new Sentinel MS Security Incident Alert Rule to be created.
     */
    public readonly logAnalyticsWorkspaceId!: pulumi.Output<string>;
    /**
     * The name which should be used for this Sentinel MS Security Incident Alert Rule. Changing this forces a new Sentinel MS Security Incident Alert Rule to be created.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The Microsoft Security Service from where the alert will be generated. Possible values are `Azure Active Directory Identity Protection`, `Azure Advanced Threat Protection`, `Azure Security Center`, `Azure Security Center for IoT`, `Microsoft Cloud App Security`, `Microsoft Defender Advanced Threat Protection` and `Office 365 Advanced Threat Protection`.
     */
    public readonly productFilter!: pulumi.Output<string>;
    /**
     * Only create incidents from alerts when alert severity level is contained in this list. Possible values are `High`, `Medium`, `Low` and `Informational`.
     *
     * > **NOTE** At least one of the severity filters need to be set.
     */
    public readonly severityFilters!: pulumi.Output<string[]>;

    /**
     * Create a AlertRuleMsSecurityIncident resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AlertRuleMsSecurityIncidentArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AlertRuleMsSecurityIncidentArgs | AlertRuleMsSecurityIncidentState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AlertRuleMsSecurityIncidentState | undefined;
            resourceInputs["alertRuleTemplateGuid"] = state ? state.alertRuleTemplateGuid : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["displayNameExcludeFilters"] = state ? state.displayNameExcludeFilters : undefined;
            resourceInputs["displayNameFilters"] = state ? state.displayNameFilters : undefined;
            resourceInputs["enabled"] = state ? state.enabled : undefined;
            resourceInputs["logAnalyticsWorkspaceId"] = state ? state.logAnalyticsWorkspaceId : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["productFilter"] = state ? state.productFilter : undefined;
            resourceInputs["severityFilters"] = state ? state.severityFilters : undefined;
        } else {
            const args = argsOrState as AlertRuleMsSecurityIncidentArgs | undefined;
            if ((!args || args.displayName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'displayName'");
            }
            if ((!args || args.logAnalyticsWorkspaceId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'logAnalyticsWorkspaceId'");
            }
            if ((!args || args.productFilter === undefined) && !opts.urn) {
                throw new Error("Missing required property 'productFilter'");
            }
            if ((!args || args.severityFilters === undefined) && !opts.urn) {
                throw new Error("Missing required property 'severityFilters'");
            }
            resourceInputs["alertRuleTemplateGuid"] = args ? args.alertRuleTemplateGuid : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["displayNameExcludeFilters"] = args ? args.displayNameExcludeFilters : undefined;
            resourceInputs["displayNameFilters"] = args ? args.displayNameFilters : undefined;
            resourceInputs["enabled"] = args ? args.enabled : undefined;
            resourceInputs["logAnalyticsWorkspaceId"] = args ? args.logAnalyticsWorkspaceId : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["productFilter"] = args ? args.productFilter : undefined;
            resourceInputs["severityFilters"] = args ? args.severityFilters : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AlertRuleMsSecurityIncident.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering AlertRuleMsSecurityIncident resources.
 */
export interface AlertRuleMsSecurityIncidentState {
    /**
     * The GUID of the alert rule template which is used to create this Sentinel Scheduled Alert Rule. Changing this forces a new Sentinel MS Security Incident Alert Rule to be created.
     */
    alertRuleTemplateGuid?: pulumi.Input<string>;
    /**
     * The description of this Sentinel MS Security Incident Alert Rule.
     */
    description?: pulumi.Input<string>;
    /**
     * The friendly name of this Sentinel MS Security Incident Alert Rule.
     */
    displayName?: pulumi.Input<string>;
    /**
     * Only create incidents when the alert display name doesn't contain text from this list.
     */
    displayNameExcludeFilters?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Only create incidents when the alert display name contain text from this list, leave empty to apply no filter.
     */
    displayNameFilters?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Should this Sentinel MS Security Incident Alert Rule be enabled? Defaults to `true`.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * The ID of the Log Analytics Workspace this Sentinel MS Security Incident Alert Rule belongs to. Changing this forces a new Sentinel MS Security Incident Alert Rule to be created.
     */
    logAnalyticsWorkspaceId?: pulumi.Input<string>;
    /**
     * The name which should be used for this Sentinel MS Security Incident Alert Rule. Changing this forces a new Sentinel MS Security Incident Alert Rule to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * The Microsoft Security Service from where the alert will be generated. Possible values are `Azure Active Directory Identity Protection`, `Azure Advanced Threat Protection`, `Azure Security Center`, `Azure Security Center for IoT`, `Microsoft Cloud App Security`, `Microsoft Defender Advanced Threat Protection` and `Office 365 Advanced Threat Protection`.
     */
    productFilter?: pulumi.Input<string>;
    /**
     * Only create incidents from alerts when alert severity level is contained in this list. Possible values are `High`, `Medium`, `Low` and `Informational`.
     *
     * > **NOTE** At least one of the severity filters need to be set.
     */
    severityFilters?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * The set of arguments for constructing a AlertRuleMsSecurityIncident resource.
 */
export interface AlertRuleMsSecurityIncidentArgs {
    /**
     * The GUID of the alert rule template which is used to create this Sentinel Scheduled Alert Rule. Changing this forces a new Sentinel MS Security Incident Alert Rule to be created.
     */
    alertRuleTemplateGuid?: pulumi.Input<string>;
    /**
     * The description of this Sentinel MS Security Incident Alert Rule.
     */
    description?: pulumi.Input<string>;
    /**
     * The friendly name of this Sentinel MS Security Incident Alert Rule.
     */
    displayName: pulumi.Input<string>;
    /**
     * Only create incidents when the alert display name doesn't contain text from this list.
     */
    displayNameExcludeFilters?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Only create incidents when the alert display name contain text from this list, leave empty to apply no filter.
     */
    displayNameFilters?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Should this Sentinel MS Security Incident Alert Rule be enabled? Defaults to `true`.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * The ID of the Log Analytics Workspace this Sentinel MS Security Incident Alert Rule belongs to. Changing this forces a new Sentinel MS Security Incident Alert Rule to be created.
     */
    logAnalyticsWorkspaceId: pulumi.Input<string>;
    /**
     * The name which should be used for this Sentinel MS Security Incident Alert Rule. Changing this forces a new Sentinel MS Security Incident Alert Rule to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * The Microsoft Security Service from where the alert will be generated. Possible values are `Azure Active Directory Identity Protection`, `Azure Advanced Threat Protection`, `Azure Security Center`, `Azure Security Center for IoT`, `Microsoft Cloud App Security`, `Microsoft Defender Advanced Threat Protection` and `Office 365 Advanced Threat Protection`.
     */
    productFilter: pulumi.Input<string>;
    /**
     * Only create incidents from alerts when alert severity level is contained in this list. Possible values are `High`, `Medium`, `Low` and `Informational`.
     *
     * > **NOTE** At least one of the severity filters need to be set.
     */
    severityFilters: pulumi.Input<pulumi.Input<string>[]>;
}
