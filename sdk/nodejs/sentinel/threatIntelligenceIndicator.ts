// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Manages a Sentinel Threat Intelligence Indicator.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const exampleResourceGroup = new azure.core.ResourceGroup("exampleResourceGroup", {location: "east us"});
 * const exampleAnalyticsWorkspace = new azure.operationalinsights.AnalyticsWorkspace("exampleAnalyticsWorkspace", {
 *     location: exampleResourceGroup.location,
 *     resourceGroupName: exampleResourceGroup.name,
 *     sku: "PerGB2018",
 *     retentionInDays: 30,
 * });
 * const exampleLogAnalyticsWorkspaceOnboarding = new azure.sentinel.LogAnalyticsWorkspaceOnboarding("exampleLogAnalyticsWorkspaceOnboarding", {
 *     resourceGroupName: exampleResourceGroup.name,
 *     workspaceName: exampleAnalyticsWorkspace.name,
 * });
 * const exampleThreatIntelligenceIndicator = new azure.sentinel.ThreatIntelligenceIndicator("exampleThreatIntelligenceIndicator", {
 *     workspaceId: exampleAnalyticsWorkspace.id,
 *     patternType: "domain-name",
 *     pattern: "http://example.com",
 *     source: "Microsoft Sentinel",
 *     validateFromUtc: "2022-12-14T16:00:00Z",
 *     displayName: "example-indicator",
 * }, {
 *     dependsOn: [azurerm_sentinel_log_analytics_workspace_onboarding.test],
 * });
 * ```
 *
 * ## Import
 *
 * Sentinel Threat Intelligence Indicators can be imported using the `resource id`, e.g.
 *
 * ```sh
 *  $ pulumi import azure:sentinel/threatIntelligenceIndicator:ThreatIntelligenceIndicator example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resourcegroup1/providers/Microsoft.OperationalInsights/workspaces/workspace1/providers/Microsoft.SecurityInsights/threatIntelligence/main/indicators/indicator1
 * ```
 */
export class ThreatIntelligenceIndicator extends pulumi.CustomResource {
    /**
     * Get an existing ThreatIntelligenceIndicator resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ThreatIntelligenceIndicatorState, opts?: pulumi.CustomResourceOptions): ThreatIntelligenceIndicator {
        return new ThreatIntelligenceIndicator(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure:sentinel/threatIntelligenceIndicator:ThreatIntelligenceIndicator';

    /**
     * Returns true if the given object is an instance of ThreatIntelligenceIndicator.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ThreatIntelligenceIndicator {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ThreatIntelligenceIndicator.__pulumiType;
    }

    /**
     * Confidence levels of the Threat Intelligence Indicator.
     */
    public readonly confidence!: pulumi.Output<number | undefined>;
    /**
     * The creator of the Threat Intelligence Indicator.
     */
    public readonly createdBy!: pulumi.Output<string | undefined>;
    /**
     * The date of this Threat Intelligence Indicator created.
     */
    public /*out*/ readonly createdOn!: pulumi.Output<string>;
    /**
     * Whether the Threat Intelligence entity is defanged?
     */
    public /*out*/ readonly defanged!: pulumi.Output<boolean>;
    /**
     * The description of the Threat Intelligence Indicator.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * The display name of the Threat Intelligence Indicator.
     */
    public readonly displayName!: pulumi.Output<string>;
    /**
     * The extension config of the Threat Intelligence Indicator in JSON format.
     */
    public readonly extension!: pulumi.Output<string>;
    /**
     * The external ID of the Threat Intelligence Indicator.
     */
    public /*out*/ readonly externalId!: pulumi.Output<string>;
    /**
     * the External last updated time in UTC.
     */
    public /*out*/ readonly externalLastUpdatedTimeUtc!: pulumi.Output<string>;
    /**
     * One or more `externalReference` blocks as defined below.
     */
    public readonly externalReferences!: pulumi.Output<outputs.sentinel.ThreatIntelligenceIndicatorExternalReference[] | undefined>;
    /**
     * One or more `granularMarking` blocks as defined below.
     */
    public readonly granularMarkings!: pulumi.Output<outputs.sentinel.ThreatIntelligenceIndicatorGranularMarking[] | undefined>;
    /**
     * The guid of this Sentinel Threat Intelligence Indicator.
     */
    public /*out*/ readonly guid!: pulumi.Output<string>;
    /**
     * A list of indicator types of this Threat Intelligence Indicator.
     */
    public /*out*/ readonly indicatorTypes!: pulumi.Output<string[]>;
    /**
     * One or more `killChainPhase` blocks as defined below.
     */
    public readonly killChainPhases!: pulumi.Output<outputs.sentinel.ThreatIntelligenceIndicatorKillChainPhase[] | undefined>;
    /**
     * The language of the Threat Intelligence Indicator.
     */
    public readonly language!: pulumi.Output<string | undefined>;
    /**
     * The last updated time of the Threat Intelligence Indicator in UTC.
     */
    public /*out*/ readonly lastUpdatedTimeUtc!: pulumi.Output<string>;
    /**
     * Specifies a list of Threat Intelligence marking references.
     */
    public readonly objectMarkingRefs!: pulumi.Output<string[] | undefined>;
    /**
     * A `parsedPattern` block as defined below.
     */
    public /*out*/ readonly parsedPatterns!: pulumi.Output<outputs.sentinel.ThreatIntelligenceIndicatorParsedPattern[]>;
    /**
     * The pattern used by the Threat Intelligence Indicator. When `patternType` set to `file`, `pattern` must be specified with `<HashName>:<Value>` format, such as `MD5:78ecc5c05cd8b79af480df2f8fba0b9d`.
     */
    public readonly pattern!: pulumi.Output<string>;
    /**
     * The type of pattern used by the Threat Intelligence Indicator. Possible values are `domain-name`, `file`, `ipv4-addr`, `ipv6-addr` and `url`.
     */
    public readonly patternType!: pulumi.Output<string>;
    /**
     * The version of a Threat Intelligence entity.
     */
    public readonly patternVersion!: pulumi.Output<string | undefined>;
    /**
     * Whether the Threat Intelligence entity revoked.
     */
    public readonly revoked!: pulumi.Output<boolean | undefined>;
    /**
     * Source of the Threat Intelligence Indicator. Changing this forces a new resource to be created.
     */
    public readonly source!: pulumi.Output<string>;
    /**
     * Specifies a list of tags of the Threat Intelligence Indicator.
     */
    public readonly tags!: pulumi.Output<string[] | undefined>;
    /**
     * Specifies a list of threat types of this Threat Intelligence Indicator.
     */
    public readonly threatTypes!: pulumi.Output<string[] | undefined>;
    /**
     * The start of validate date in RFC3339.
     */
    public readonly validateFromUtc!: pulumi.Output<string>;
    /**
     * The end of validate date of the Threat Intelligence Indicator in RFC3339 format.
     */
    public readonly validateUntilUtc!: pulumi.Output<string | undefined>;
    /**
     * The ID of the Log Analytics Workspace. Changing this forces a new Sentinel Threat Intelligence Indicator to be created.
     */
    public readonly workspaceId!: pulumi.Output<string>;

    /**
     * Create a ThreatIntelligenceIndicator resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ThreatIntelligenceIndicatorArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ThreatIntelligenceIndicatorArgs | ThreatIntelligenceIndicatorState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ThreatIntelligenceIndicatorState | undefined;
            resourceInputs["confidence"] = state ? state.confidence : undefined;
            resourceInputs["createdBy"] = state ? state.createdBy : undefined;
            resourceInputs["createdOn"] = state ? state.createdOn : undefined;
            resourceInputs["defanged"] = state ? state.defanged : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["extension"] = state ? state.extension : undefined;
            resourceInputs["externalId"] = state ? state.externalId : undefined;
            resourceInputs["externalLastUpdatedTimeUtc"] = state ? state.externalLastUpdatedTimeUtc : undefined;
            resourceInputs["externalReferences"] = state ? state.externalReferences : undefined;
            resourceInputs["granularMarkings"] = state ? state.granularMarkings : undefined;
            resourceInputs["guid"] = state ? state.guid : undefined;
            resourceInputs["indicatorTypes"] = state ? state.indicatorTypes : undefined;
            resourceInputs["killChainPhases"] = state ? state.killChainPhases : undefined;
            resourceInputs["language"] = state ? state.language : undefined;
            resourceInputs["lastUpdatedTimeUtc"] = state ? state.lastUpdatedTimeUtc : undefined;
            resourceInputs["objectMarkingRefs"] = state ? state.objectMarkingRefs : undefined;
            resourceInputs["parsedPatterns"] = state ? state.parsedPatterns : undefined;
            resourceInputs["pattern"] = state ? state.pattern : undefined;
            resourceInputs["patternType"] = state ? state.patternType : undefined;
            resourceInputs["patternVersion"] = state ? state.patternVersion : undefined;
            resourceInputs["revoked"] = state ? state.revoked : undefined;
            resourceInputs["source"] = state ? state.source : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["threatTypes"] = state ? state.threatTypes : undefined;
            resourceInputs["validateFromUtc"] = state ? state.validateFromUtc : undefined;
            resourceInputs["validateUntilUtc"] = state ? state.validateUntilUtc : undefined;
            resourceInputs["workspaceId"] = state ? state.workspaceId : undefined;
        } else {
            const args = argsOrState as ThreatIntelligenceIndicatorArgs | undefined;
            if ((!args || args.displayName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'displayName'");
            }
            if ((!args || args.pattern === undefined) && !opts.urn) {
                throw new Error("Missing required property 'pattern'");
            }
            if ((!args || args.patternType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'patternType'");
            }
            if ((!args || args.source === undefined) && !opts.urn) {
                throw new Error("Missing required property 'source'");
            }
            if ((!args || args.validateFromUtc === undefined) && !opts.urn) {
                throw new Error("Missing required property 'validateFromUtc'");
            }
            if ((!args || args.workspaceId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'workspaceId'");
            }
            resourceInputs["confidence"] = args ? args.confidence : undefined;
            resourceInputs["createdBy"] = args ? args.createdBy : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["extension"] = args ? args.extension : undefined;
            resourceInputs["externalReferences"] = args ? args.externalReferences : undefined;
            resourceInputs["granularMarkings"] = args ? args.granularMarkings : undefined;
            resourceInputs["killChainPhases"] = args ? args.killChainPhases : undefined;
            resourceInputs["language"] = args ? args.language : undefined;
            resourceInputs["objectMarkingRefs"] = args ? args.objectMarkingRefs : undefined;
            resourceInputs["pattern"] = args ? args.pattern : undefined;
            resourceInputs["patternType"] = args ? args.patternType : undefined;
            resourceInputs["patternVersion"] = args ? args.patternVersion : undefined;
            resourceInputs["revoked"] = args ? args.revoked : undefined;
            resourceInputs["source"] = args ? args.source : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["threatTypes"] = args ? args.threatTypes : undefined;
            resourceInputs["validateFromUtc"] = args ? args.validateFromUtc : undefined;
            resourceInputs["validateUntilUtc"] = args ? args.validateUntilUtc : undefined;
            resourceInputs["workspaceId"] = args ? args.workspaceId : undefined;
            resourceInputs["createdOn"] = undefined /*out*/;
            resourceInputs["defanged"] = undefined /*out*/;
            resourceInputs["externalId"] = undefined /*out*/;
            resourceInputs["externalLastUpdatedTimeUtc"] = undefined /*out*/;
            resourceInputs["guid"] = undefined /*out*/;
            resourceInputs["indicatorTypes"] = undefined /*out*/;
            resourceInputs["lastUpdatedTimeUtc"] = undefined /*out*/;
            resourceInputs["parsedPatterns"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ThreatIntelligenceIndicator.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ThreatIntelligenceIndicator resources.
 */
export interface ThreatIntelligenceIndicatorState {
    /**
     * Confidence levels of the Threat Intelligence Indicator.
     */
    confidence?: pulumi.Input<number>;
    /**
     * The creator of the Threat Intelligence Indicator.
     */
    createdBy?: pulumi.Input<string>;
    /**
     * The date of this Threat Intelligence Indicator created.
     */
    createdOn?: pulumi.Input<string>;
    /**
     * Whether the Threat Intelligence entity is defanged?
     */
    defanged?: pulumi.Input<boolean>;
    /**
     * The description of the Threat Intelligence Indicator.
     */
    description?: pulumi.Input<string>;
    /**
     * The display name of the Threat Intelligence Indicator.
     */
    displayName?: pulumi.Input<string>;
    /**
     * The extension config of the Threat Intelligence Indicator in JSON format.
     */
    extension?: pulumi.Input<string>;
    /**
     * The external ID of the Threat Intelligence Indicator.
     */
    externalId?: pulumi.Input<string>;
    /**
     * the External last updated time in UTC.
     */
    externalLastUpdatedTimeUtc?: pulumi.Input<string>;
    /**
     * One or more `externalReference` blocks as defined below.
     */
    externalReferences?: pulumi.Input<pulumi.Input<inputs.sentinel.ThreatIntelligenceIndicatorExternalReference>[]>;
    /**
     * One or more `granularMarking` blocks as defined below.
     */
    granularMarkings?: pulumi.Input<pulumi.Input<inputs.sentinel.ThreatIntelligenceIndicatorGranularMarking>[]>;
    /**
     * The guid of this Sentinel Threat Intelligence Indicator.
     */
    guid?: pulumi.Input<string>;
    /**
     * A list of indicator types of this Threat Intelligence Indicator.
     */
    indicatorTypes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * One or more `killChainPhase` blocks as defined below.
     */
    killChainPhases?: pulumi.Input<pulumi.Input<inputs.sentinel.ThreatIntelligenceIndicatorKillChainPhase>[]>;
    /**
     * The language of the Threat Intelligence Indicator.
     */
    language?: pulumi.Input<string>;
    /**
     * The last updated time of the Threat Intelligence Indicator in UTC.
     */
    lastUpdatedTimeUtc?: pulumi.Input<string>;
    /**
     * Specifies a list of Threat Intelligence marking references.
     */
    objectMarkingRefs?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A `parsedPattern` block as defined below.
     */
    parsedPatterns?: pulumi.Input<pulumi.Input<inputs.sentinel.ThreatIntelligenceIndicatorParsedPattern>[]>;
    /**
     * The pattern used by the Threat Intelligence Indicator. When `patternType` set to `file`, `pattern` must be specified with `<HashName>:<Value>` format, such as `MD5:78ecc5c05cd8b79af480df2f8fba0b9d`.
     */
    pattern?: pulumi.Input<string>;
    /**
     * The type of pattern used by the Threat Intelligence Indicator. Possible values are `domain-name`, `file`, `ipv4-addr`, `ipv6-addr` and `url`.
     */
    patternType?: pulumi.Input<string>;
    /**
     * The version of a Threat Intelligence entity.
     */
    patternVersion?: pulumi.Input<string>;
    /**
     * Whether the Threat Intelligence entity revoked.
     */
    revoked?: pulumi.Input<boolean>;
    /**
     * Source of the Threat Intelligence Indicator. Changing this forces a new resource to be created.
     */
    source?: pulumi.Input<string>;
    /**
     * Specifies a list of tags of the Threat Intelligence Indicator.
     */
    tags?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies a list of threat types of this Threat Intelligence Indicator.
     */
    threatTypes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The start of validate date in RFC3339.
     */
    validateFromUtc?: pulumi.Input<string>;
    /**
     * The end of validate date of the Threat Intelligence Indicator in RFC3339 format.
     */
    validateUntilUtc?: pulumi.Input<string>;
    /**
     * The ID of the Log Analytics Workspace. Changing this forces a new Sentinel Threat Intelligence Indicator to be created.
     */
    workspaceId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ThreatIntelligenceIndicator resource.
 */
export interface ThreatIntelligenceIndicatorArgs {
    /**
     * Confidence levels of the Threat Intelligence Indicator.
     */
    confidence?: pulumi.Input<number>;
    /**
     * The creator of the Threat Intelligence Indicator.
     */
    createdBy?: pulumi.Input<string>;
    /**
     * The description of the Threat Intelligence Indicator.
     */
    description?: pulumi.Input<string>;
    /**
     * The display name of the Threat Intelligence Indicator.
     */
    displayName: pulumi.Input<string>;
    /**
     * The extension config of the Threat Intelligence Indicator in JSON format.
     */
    extension?: pulumi.Input<string>;
    /**
     * One or more `externalReference` blocks as defined below.
     */
    externalReferences?: pulumi.Input<pulumi.Input<inputs.sentinel.ThreatIntelligenceIndicatorExternalReference>[]>;
    /**
     * One or more `granularMarking` blocks as defined below.
     */
    granularMarkings?: pulumi.Input<pulumi.Input<inputs.sentinel.ThreatIntelligenceIndicatorGranularMarking>[]>;
    /**
     * One or more `killChainPhase` blocks as defined below.
     */
    killChainPhases?: pulumi.Input<pulumi.Input<inputs.sentinel.ThreatIntelligenceIndicatorKillChainPhase>[]>;
    /**
     * The language of the Threat Intelligence Indicator.
     */
    language?: pulumi.Input<string>;
    /**
     * Specifies a list of Threat Intelligence marking references.
     */
    objectMarkingRefs?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The pattern used by the Threat Intelligence Indicator. When `patternType` set to `file`, `pattern` must be specified with `<HashName>:<Value>` format, such as `MD5:78ecc5c05cd8b79af480df2f8fba0b9d`.
     */
    pattern: pulumi.Input<string>;
    /**
     * The type of pattern used by the Threat Intelligence Indicator. Possible values are `domain-name`, `file`, `ipv4-addr`, `ipv6-addr` and `url`.
     */
    patternType: pulumi.Input<string>;
    /**
     * The version of a Threat Intelligence entity.
     */
    patternVersion?: pulumi.Input<string>;
    /**
     * Whether the Threat Intelligence entity revoked.
     */
    revoked?: pulumi.Input<boolean>;
    /**
     * Source of the Threat Intelligence Indicator. Changing this forces a new resource to be created.
     */
    source: pulumi.Input<string>;
    /**
     * Specifies a list of tags of the Threat Intelligence Indicator.
     */
    tags?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies a list of threat types of this Threat Intelligence Indicator.
     */
    threatTypes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The start of validate date in RFC3339.
     */
    validateFromUtc: pulumi.Input<string>;
    /**
     * The end of validate date of the Threat Intelligence Indicator in RFC3339 format.
     */
    validateUntilUtc?: pulumi.Input<string>;
    /**
     * The ID of the Log Analytics Workspace. Changing this forces a new Sentinel Threat Intelligence Indicator to be created.
     */
    workspaceId: pulumi.Input<string>;
}
