// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Manages a Sentinel Threat Intelligence Indicator.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = new azure.core.ResourceGroup("example", {
 *     name: "example-rg",
 *     location: "east us",
 * });
 * const exampleAnalyticsWorkspace = new azure.operationalinsights.AnalyticsWorkspace("example", {
 *     name: "example-law",
 *     location: example.location,
 *     resourceGroupName: example.name,
 *     sku: "PerGB2018",
 *     retentionInDays: 30,
 * });
 * const exampleLogAnalyticsWorkspaceOnboarding = new azure.sentinel.LogAnalyticsWorkspaceOnboarding("example", {workspaceId: exampleAnalyticsWorkspace.id});
 * const exampleThreatIntelligenceIndicator = new azure.sentinel.ThreatIntelligenceIndicator("example", {
 *     workspaceId: exampleLogAnalyticsWorkspaceOnboarding.workspaceId,
 *     patternType: "domain-name",
 *     pattern: "http://example.com",
 *     source: "Microsoft Sentinel",
 *     validateFromUtc: "2022-12-14T16:00:00Z",
 *     displayName: "example-indicator",
 * });
 * ```
 *
 * ## Import
 *
 * Sentinel Threat Intelligence Indicators can be imported using the `resource id`, e.g.
 *
 * ```sh
 * $ pulumi import azure:sentinel/threatIntelligenceIndicator:ThreatIntelligenceIndicator example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resourcegroup1/providers/Microsoft.OperationalInsights/workspaces/workspace1/providers/Microsoft.SecurityInsights/threatIntelligence/main/indicators/indicator1
 * ```
 */
export class ThreatIntelligenceIndicator extends pulumi.CustomResource {
    /**
     * Get an existing ThreatIntelligenceIndicator resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ThreatIntelligenceIndicatorState, opts?: pulumi.CustomResourceOptions): ThreatIntelligenceIndicator {
        return new ThreatIntelligenceIndicator(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure:sentinel/threatIntelligenceIndicator:ThreatIntelligenceIndicator';

    /**
     * Returns true if the given object is an instance of ThreatIntelligenceIndicator.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ThreatIntelligenceIndicator {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ThreatIntelligenceIndicator.__pulumiType;
    }

    /**
     * Confidence levels of the Threat Intelligence Indicator.
     */
    declare public readonly confidence: pulumi.Output<number | undefined>;
    /**
     * The creator of the Threat Intelligence Indicator.
     */
    declare public readonly createdBy: pulumi.Output<string | undefined>;
    /**
     * The date of this Threat Intelligence Indicator created.
     */
    declare public /*out*/ readonly createdOn: pulumi.Output<string>;
    /**
     * Whether the Threat Intelligence entity is defanged?
     */
    declare public /*out*/ readonly defanged: pulumi.Output<boolean>;
    /**
     * The description of the Threat Intelligence Indicator.
     */
    declare public readonly description: pulumi.Output<string | undefined>;
    /**
     * The display name of the Threat Intelligence Indicator.
     */
    declare public readonly displayName: pulumi.Output<string>;
    /**
     * The extension config of the Threat Intelligence Indicator in JSON format.
     */
    declare public readonly extension: pulumi.Output<string>;
    /**
     * The external ID of the Threat Intelligence Indicator.
     */
    declare public /*out*/ readonly externalId: pulumi.Output<string>;
    /**
     * the External last updated time in UTC.
     */
    declare public /*out*/ readonly externalLastUpdatedTimeUtc: pulumi.Output<string>;
    /**
     * One or more `externalReference` blocks as defined below.
     */
    declare public readonly externalReferences: pulumi.Output<outputs.sentinel.ThreatIntelligenceIndicatorExternalReference[] | undefined>;
    /**
     * One or more `granularMarking` blocks as defined below.
     */
    declare public readonly granularMarkings: pulumi.Output<outputs.sentinel.ThreatIntelligenceIndicatorGranularMarking[] | undefined>;
    /**
     * The guid of this Sentinel Threat Intelligence Indicator.
     */
    declare public /*out*/ readonly guid: pulumi.Output<string>;
    /**
     * A list of indicator types of this Threat Intelligence Indicator.
     */
    declare public /*out*/ readonly indicatorTypes: pulumi.Output<string[]>;
    /**
     * One or more `killChainPhase` blocks as defined below.
     */
    declare public readonly killChainPhases: pulumi.Output<outputs.sentinel.ThreatIntelligenceIndicatorKillChainPhase[] | undefined>;
    /**
     * The language of the Threat Intelligence Indicator.
     */
    declare public readonly language: pulumi.Output<string | undefined>;
    /**
     * The last updated time of the Threat Intelligence Indicator in UTC.
     */
    declare public /*out*/ readonly lastUpdatedTimeUtc: pulumi.Output<string>;
    /**
     * Specifies a list of Threat Intelligence marking references.
     */
    declare public readonly objectMarkingRefs: pulumi.Output<string[] | undefined>;
    /**
     * A `parsedPattern` block as defined below.
     */
    declare public /*out*/ readonly parsedPatterns: pulumi.Output<outputs.sentinel.ThreatIntelligenceIndicatorParsedPattern[]>;
    /**
     * The pattern used by the Threat Intelligence Indicator. When `patternType` set to `file`, `pattern` must be specified with `<HashName>:<Value>` format, such as `MD5:78ecc5c05cd8b79af480df2f8fba0b9d`.
     */
    declare public readonly pattern: pulumi.Output<string>;
    /**
     * The type of pattern used by the Threat Intelligence Indicator. Possible values are `domain-name`, `file`, `ipv4-addr`, `ipv6-addr` and `url`.
     */
    declare public readonly patternType: pulumi.Output<string>;
    /**
     * The version of a Threat Intelligence entity.
     */
    declare public readonly patternVersion: pulumi.Output<string | undefined>;
    /**
     * Whether the Threat Intelligence entity revoked.
     */
    declare public readonly revoked: pulumi.Output<boolean | undefined>;
    /**
     * Source of the Threat Intelligence Indicator. Changing this forces a new resource to be created.
     */
    declare public readonly source: pulumi.Output<string>;
    /**
     * Specifies a list of tags of the Threat Intelligence Indicator.
     */
    declare public readonly tags: pulumi.Output<string[] | undefined>;
    /**
     * Specifies a list of threat types of this Threat Intelligence Indicator.
     */
    declare public readonly threatTypes: pulumi.Output<string[] | undefined>;
    /**
     * The start of validate date in RFC3339.
     */
    declare public readonly validateFromUtc: pulumi.Output<string>;
    /**
     * The end of validate date of the Threat Intelligence Indicator in RFC3339 format.
     */
    declare public readonly validateUntilUtc: pulumi.Output<string | undefined>;
    /**
     * The ID of the Log Analytics Workspace. Changing this forces a new Sentinel Threat Intelligence Indicator to be created.
     */
    declare public readonly workspaceId: pulumi.Output<string>;

    /**
     * Create a ThreatIntelligenceIndicator resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ThreatIntelligenceIndicatorArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ThreatIntelligenceIndicatorArgs | ThreatIntelligenceIndicatorState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ThreatIntelligenceIndicatorState | undefined;
            resourceInputs["confidence"] = state?.confidence;
            resourceInputs["createdBy"] = state?.createdBy;
            resourceInputs["createdOn"] = state?.createdOn;
            resourceInputs["defanged"] = state?.defanged;
            resourceInputs["description"] = state?.description;
            resourceInputs["displayName"] = state?.displayName;
            resourceInputs["extension"] = state?.extension;
            resourceInputs["externalId"] = state?.externalId;
            resourceInputs["externalLastUpdatedTimeUtc"] = state?.externalLastUpdatedTimeUtc;
            resourceInputs["externalReferences"] = state?.externalReferences;
            resourceInputs["granularMarkings"] = state?.granularMarkings;
            resourceInputs["guid"] = state?.guid;
            resourceInputs["indicatorTypes"] = state?.indicatorTypes;
            resourceInputs["killChainPhases"] = state?.killChainPhases;
            resourceInputs["language"] = state?.language;
            resourceInputs["lastUpdatedTimeUtc"] = state?.lastUpdatedTimeUtc;
            resourceInputs["objectMarkingRefs"] = state?.objectMarkingRefs;
            resourceInputs["parsedPatterns"] = state?.parsedPatterns;
            resourceInputs["pattern"] = state?.pattern;
            resourceInputs["patternType"] = state?.patternType;
            resourceInputs["patternVersion"] = state?.patternVersion;
            resourceInputs["revoked"] = state?.revoked;
            resourceInputs["source"] = state?.source;
            resourceInputs["tags"] = state?.tags;
            resourceInputs["threatTypes"] = state?.threatTypes;
            resourceInputs["validateFromUtc"] = state?.validateFromUtc;
            resourceInputs["validateUntilUtc"] = state?.validateUntilUtc;
            resourceInputs["workspaceId"] = state?.workspaceId;
        } else {
            const args = argsOrState as ThreatIntelligenceIndicatorArgs | undefined;
            if (args?.displayName === undefined && !opts.urn) {
                throw new Error("Missing required property 'displayName'");
            }
            if (args?.pattern === undefined && !opts.urn) {
                throw new Error("Missing required property 'pattern'");
            }
            if (args?.patternType === undefined && !opts.urn) {
                throw new Error("Missing required property 'patternType'");
            }
            if (args?.source === undefined && !opts.urn) {
                throw new Error("Missing required property 'source'");
            }
            if (args?.validateFromUtc === undefined && !opts.urn) {
                throw new Error("Missing required property 'validateFromUtc'");
            }
            if (args?.workspaceId === undefined && !opts.urn) {
                throw new Error("Missing required property 'workspaceId'");
            }
            resourceInputs["confidence"] = args?.confidence;
            resourceInputs["createdBy"] = args?.createdBy;
            resourceInputs["description"] = args?.description;
            resourceInputs["displayName"] = args?.displayName;
            resourceInputs["extension"] = args?.extension;
            resourceInputs["externalReferences"] = args?.externalReferences;
            resourceInputs["granularMarkings"] = args?.granularMarkings;
            resourceInputs["killChainPhases"] = args?.killChainPhases;
            resourceInputs["language"] = args?.language;
            resourceInputs["objectMarkingRefs"] = args?.objectMarkingRefs;
            resourceInputs["pattern"] = args?.pattern;
            resourceInputs["patternType"] = args?.patternType;
            resourceInputs["patternVersion"] = args?.patternVersion;
            resourceInputs["revoked"] = args?.revoked;
            resourceInputs["source"] = args?.source;
            resourceInputs["tags"] = args?.tags;
            resourceInputs["threatTypes"] = args?.threatTypes;
            resourceInputs["validateFromUtc"] = args?.validateFromUtc;
            resourceInputs["validateUntilUtc"] = args?.validateUntilUtc;
            resourceInputs["workspaceId"] = args?.workspaceId;
            resourceInputs["createdOn"] = undefined /*out*/;
            resourceInputs["defanged"] = undefined /*out*/;
            resourceInputs["externalId"] = undefined /*out*/;
            resourceInputs["externalLastUpdatedTimeUtc"] = undefined /*out*/;
            resourceInputs["guid"] = undefined /*out*/;
            resourceInputs["indicatorTypes"] = undefined /*out*/;
            resourceInputs["lastUpdatedTimeUtc"] = undefined /*out*/;
            resourceInputs["parsedPatterns"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ThreatIntelligenceIndicator.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ThreatIntelligenceIndicator resources.
 */
export interface ThreatIntelligenceIndicatorState {
    /**
     * Confidence levels of the Threat Intelligence Indicator.
     */
    confidence?: pulumi.Input<number>;
    /**
     * The creator of the Threat Intelligence Indicator.
     */
    createdBy?: pulumi.Input<string>;
    /**
     * The date of this Threat Intelligence Indicator created.
     */
    createdOn?: pulumi.Input<string>;
    /**
     * Whether the Threat Intelligence entity is defanged?
     */
    defanged?: pulumi.Input<boolean>;
    /**
     * The description of the Threat Intelligence Indicator.
     */
    description?: pulumi.Input<string>;
    /**
     * The display name of the Threat Intelligence Indicator.
     */
    displayName?: pulumi.Input<string>;
    /**
     * The extension config of the Threat Intelligence Indicator in JSON format.
     */
    extension?: pulumi.Input<string>;
    /**
     * The external ID of the Threat Intelligence Indicator.
     */
    externalId?: pulumi.Input<string>;
    /**
     * the External last updated time in UTC.
     */
    externalLastUpdatedTimeUtc?: pulumi.Input<string>;
    /**
     * One or more `externalReference` blocks as defined below.
     */
    externalReferences?: pulumi.Input<pulumi.Input<inputs.sentinel.ThreatIntelligenceIndicatorExternalReference>[]>;
    /**
     * One or more `granularMarking` blocks as defined below.
     */
    granularMarkings?: pulumi.Input<pulumi.Input<inputs.sentinel.ThreatIntelligenceIndicatorGranularMarking>[]>;
    /**
     * The guid of this Sentinel Threat Intelligence Indicator.
     */
    guid?: pulumi.Input<string>;
    /**
     * A list of indicator types of this Threat Intelligence Indicator.
     */
    indicatorTypes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * One or more `killChainPhase` blocks as defined below.
     */
    killChainPhases?: pulumi.Input<pulumi.Input<inputs.sentinel.ThreatIntelligenceIndicatorKillChainPhase>[]>;
    /**
     * The language of the Threat Intelligence Indicator.
     */
    language?: pulumi.Input<string>;
    /**
     * The last updated time of the Threat Intelligence Indicator in UTC.
     */
    lastUpdatedTimeUtc?: pulumi.Input<string>;
    /**
     * Specifies a list of Threat Intelligence marking references.
     */
    objectMarkingRefs?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A `parsedPattern` block as defined below.
     */
    parsedPatterns?: pulumi.Input<pulumi.Input<inputs.sentinel.ThreatIntelligenceIndicatorParsedPattern>[]>;
    /**
     * The pattern used by the Threat Intelligence Indicator. When `patternType` set to `file`, `pattern` must be specified with `<HashName>:<Value>` format, such as `MD5:78ecc5c05cd8b79af480df2f8fba0b9d`.
     */
    pattern?: pulumi.Input<string>;
    /**
     * The type of pattern used by the Threat Intelligence Indicator. Possible values are `domain-name`, `file`, `ipv4-addr`, `ipv6-addr` and `url`.
     */
    patternType?: pulumi.Input<string>;
    /**
     * The version of a Threat Intelligence entity.
     */
    patternVersion?: pulumi.Input<string>;
    /**
     * Whether the Threat Intelligence entity revoked.
     */
    revoked?: pulumi.Input<boolean>;
    /**
     * Source of the Threat Intelligence Indicator. Changing this forces a new resource to be created.
     */
    source?: pulumi.Input<string>;
    /**
     * Specifies a list of tags of the Threat Intelligence Indicator.
     */
    tags?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies a list of threat types of this Threat Intelligence Indicator.
     */
    threatTypes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The start of validate date in RFC3339.
     */
    validateFromUtc?: pulumi.Input<string>;
    /**
     * The end of validate date of the Threat Intelligence Indicator in RFC3339 format.
     */
    validateUntilUtc?: pulumi.Input<string>;
    /**
     * The ID of the Log Analytics Workspace. Changing this forces a new Sentinel Threat Intelligence Indicator to be created.
     */
    workspaceId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ThreatIntelligenceIndicator resource.
 */
export interface ThreatIntelligenceIndicatorArgs {
    /**
     * Confidence levels of the Threat Intelligence Indicator.
     */
    confidence?: pulumi.Input<number>;
    /**
     * The creator of the Threat Intelligence Indicator.
     */
    createdBy?: pulumi.Input<string>;
    /**
     * The description of the Threat Intelligence Indicator.
     */
    description?: pulumi.Input<string>;
    /**
     * The display name of the Threat Intelligence Indicator.
     */
    displayName: pulumi.Input<string>;
    /**
     * The extension config of the Threat Intelligence Indicator in JSON format.
     */
    extension?: pulumi.Input<string>;
    /**
     * One or more `externalReference` blocks as defined below.
     */
    externalReferences?: pulumi.Input<pulumi.Input<inputs.sentinel.ThreatIntelligenceIndicatorExternalReference>[]>;
    /**
     * One or more `granularMarking` blocks as defined below.
     */
    granularMarkings?: pulumi.Input<pulumi.Input<inputs.sentinel.ThreatIntelligenceIndicatorGranularMarking>[]>;
    /**
     * One or more `killChainPhase` blocks as defined below.
     */
    killChainPhases?: pulumi.Input<pulumi.Input<inputs.sentinel.ThreatIntelligenceIndicatorKillChainPhase>[]>;
    /**
     * The language of the Threat Intelligence Indicator.
     */
    language?: pulumi.Input<string>;
    /**
     * Specifies a list of Threat Intelligence marking references.
     */
    objectMarkingRefs?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The pattern used by the Threat Intelligence Indicator. When `patternType` set to `file`, `pattern` must be specified with `<HashName>:<Value>` format, such as `MD5:78ecc5c05cd8b79af480df2f8fba0b9d`.
     */
    pattern: pulumi.Input<string>;
    /**
     * The type of pattern used by the Threat Intelligence Indicator. Possible values are `domain-name`, `file`, `ipv4-addr`, `ipv6-addr` and `url`.
     */
    patternType: pulumi.Input<string>;
    /**
     * The version of a Threat Intelligence entity.
     */
    patternVersion?: pulumi.Input<string>;
    /**
     * Whether the Threat Intelligence entity revoked.
     */
    revoked?: pulumi.Input<boolean>;
    /**
     * Source of the Threat Intelligence Indicator. Changing this forces a new resource to be created.
     */
    source: pulumi.Input<string>;
    /**
     * Specifies a list of tags of the Threat Intelligence Indicator.
     */
    tags?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies a list of threat types of this Threat Intelligence Indicator.
     */
    threatTypes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The start of validate date in RFC3339.
     */
    validateFromUtc: pulumi.Input<string>;
    /**
     * The end of validate date of the Threat Intelligence Indicator in RFC3339 format.
     */
    validateUntilUtc?: pulumi.Input<string>;
    /**
     * The ID of the Log Analytics Workspace. Changing this forces a new Sentinel Threat Intelligence Indicator to be created.
     */
    workspaceId: pulumi.Input<string>;
}
