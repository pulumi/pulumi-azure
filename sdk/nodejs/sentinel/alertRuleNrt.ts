// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Manages a Sentinel NRT Alert Rule.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const exampleResourceGroup = new azure.core.ResourceGroup("exampleResourceGroup", {location: "West Europe"});
 * const exampleAnalyticsWorkspace = new azure.operationalinsights.AnalyticsWorkspace("exampleAnalyticsWorkspace", {
 *     location: exampleResourceGroup.location,
 *     resourceGroupName: exampleResourceGroup.name,
 *     sku: "pergb2018",
 * });
 * const exampleLogAnalyticsWorkspaceOnboarding = new azure.sentinel.LogAnalyticsWorkspaceOnboarding("exampleLogAnalyticsWorkspaceOnboarding", {workspaceId: exampleAnalyticsWorkspace.id});
 * const exampleAlertRuleNrt = new azure.sentinel.AlertRuleNrt("exampleAlertRuleNrt", {
 *     logAnalyticsWorkspaceId: exampleLogAnalyticsWorkspaceOnboarding.workspaceId,
 *     displayName: "example",
 *     severity: "High",
 *     query: `AzureActivity |
 *   where OperationName == "Create or Update Virtual Machine" or OperationName =="Create Deployment" |
 *   where ActivityStatus == "Succeeded" |
 *   make-series dcount(ResourceId) default=0 on EventSubmissionTimestamp in range(ago(7d), now(), 1d) by Caller
 * `,
 * });
 * ```
 *
 * ## Import
 *
 * Sentinel NRT Alert Rules can be imported using the `resource id`, e.g.
 *
 * ```sh
 *  $ pulumi import azure:sentinel/alertRuleNrt:AlertRuleNrt example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.OperationalInsights/workspaces/workspace1/providers/Microsoft.SecurityInsights/alertRules/rule1
 * ```
 */
export class AlertRuleNrt extends pulumi.CustomResource {
    /**
     * Get an existing AlertRuleNrt resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AlertRuleNrtState, opts?: pulumi.CustomResourceOptions): AlertRuleNrt {
        return new AlertRuleNrt(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure:sentinel/alertRuleNrt:AlertRuleNrt';

    /**
     * Returns true if the given object is an instance of AlertRuleNrt.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AlertRuleNrt {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AlertRuleNrt.__pulumiType;
    }

    /**
     * An `alertDetailsOverride` block as defined below.
     */
    public readonly alertDetailsOverrides!: pulumi.Output<outputs.sentinel.AlertRuleNrtAlertDetailsOverride[] | undefined>;
    /**
     * The GUID of the alert rule template which is used for this Sentinel NRT Alert Rule. Changing this forces a new Sentinel NRT Alert Rule to be created.
     */
    public readonly alertRuleTemplateGuid!: pulumi.Output<string | undefined>;
    /**
     * The version of the alert rule template which is used for this Sentinel NRT Alert Rule. Changing this forces a new Sentinel NRT Alert Rule to be created.
     */
    public readonly alertRuleTemplateVersion!: pulumi.Output<string | undefined>;
    /**
     * A map of string key-value pairs of columns to be attached to this Sentinel NRT Alert Rule. The key will appear as the field name in alerts and the value is the event parameter you wish to surface in the alerts.
     */
    public readonly customDetails!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * The description of this Sentinel NRT Alert Rule.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * The friendly name of this Sentinel NRT Alert Rule.
     */
    public readonly displayName!: pulumi.Output<string>;
    /**
     * Should the Sentinel NRT Alert Rule be enabled? Defaults to `true`.
     */
    public readonly enabled!: pulumi.Output<boolean | undefined>;
    /**
     * A list of `entityMapping` blocks as defined below.
     */
    public readonly entityMappings!: pulumi.Output<outputs.sentinel.AlertRuleNrtEntityMapping[] | undefined>;
    /**
     * A `eventGrouping` block as defined below.
     *
     * > **NOTE:** `eventGrouping` will be required in the next major version of the AzureRM Provider.
     */
    public readonly eventGrouping!: pulumi.Output<outputs.sentinel.AlertRuleNrtEventGrouping>;
    /**
     * A `incident` block as defined below.
     */
    public readonly incident!: pulumi.Output<outputs.sentinel.AlertRuleNrtIncident>;
    /**
     * The ID of the Log Analytics Workspace this Sentinel NRT Alert Rule belongs to. Changing this forces a new Sentinel NRT Alert Rule to be created.
     */
    public readonly logAnalyticsWorkspaceId!: pulumi.Output<string>;
    /**
     * The name which should be used for this Sentinel NRT Alert Rule. Changing this forces a new Sentinel NRT Alert Rule to be created.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The query of this Sentinel NRT Alert Rule.
     */
    public readonly query!: pulumi.Output<string>;
    /**
     * A list of `sentinelEntityMapping` blocks as defined below.
     *
     * > **NOTE:** `entityMapping` and `sentinelEntityMapping` together can't exceed 5.
     */
    public readonly sentinelEntityMappings!: pulumi.Output<outputs.sentinel.AlertRuleNrtSentinelEntityMapping[] | undefined>;
    /**
     * The alert severity of this Sentinel NRT Alert Rule. Possible values are `High`, `Medium`, `Low` and `Informational`.
     */
    public readonly severity!: pulumi.Output<string>;
    /**
     * If `suppressionEnabled` is `true`, this is ISO 8601 timespan duration, which specifies the amount of time the query should stop running after alert is generated. Defaults to `PT5H`.
     */
    public readonly suppressionDuration!: pulumi.Output<string | undefined>;
    /**
     * Should the Sentinel NRT Alert Rulea stop running query after alert is generated? Defaults to `false`.
     */
    public readonly suppressionEnabled!: pulumi.Output<boolean | undefined>;
    /**
     * A list of categories of attacks by which to classify the rule. Possible values are `Collection`, `CommandAndControl`, `CredentialAccess`, `DefenseEvasion`, `Discovery`, `Execution`, `Exfiltration`, `Impact`, `ImpairProcessControl`, `InhibitResponseFunction`, `InitialAccess`, `LateralMovement`, `Persistence`, `PreAttack`, `PrivilegeEscalation`, `Reconnaissance` and `ResourceDevelopment`.
     */
    public readonly tactics!: pulumi.Output<string[] | undefined>;
    /**
     * A list of techniques of attacks by which to classify the rule.
     */
    public readonly techniques!: pulumi.Output<string[] | undefined>;

    /**
     * Create a AlertRuleNrt resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AlertRuleNrtArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AlertRuleNrtArgs | AlertRuleNrtState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AlertRuleNrtState | undefined;
            resourceInputs["alertDetailsOverrides"] = state ? state.alertDetailsOverrides : undefined;
            resourceInputs["alertRuleTemplateGuid"] = state ? state.alertRuleTemplateGuid : undefined;
            resourceInputs["alertRuleTemplateVersion"] = state ? state.alertRuleTemplateVersion : undefined;
            resourceInputs["customDetails"] = state ? state.customDetails : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["enabled"] = state ? state.enabled : undefined;
            resourceInputs["entityMappings"] = state ? state.entityMappings : undefined;
            resourceInputs["eventGrouping"] = state ? state.eventGrouping : undefined;
            resourceInputs["incident"] = state ? state.incident : undefined;
            resourceInputs["logAnalyticsWorkspaceId"] = state ? state.logAnalyticsWorkspaceId : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["query"] = state ? state.query : undefined;
            resourceInputs["sentinelEntityMappings"] = state ? state.sentinelEntityMappings : undefined;
            resourceInputs["severity"] = state ? state.severity : undefined;
            resourceInputs["suppressionDuration"] = state ? state.suppressionDuration : undefined;
            resourceInputs["suppressionEnabled"] = state ? state.suppressionEnabled : undefined;
            resourceInputs["tactics"] = state ? state.tactics : undefined;
            resourceInputs["techniques"] = state ? state.techniques : undefined;
        } else {
            const args = argsOrState as AlertRuleNrtArgs | undefined;
            if ((!args || args.displayName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'displayName'");
            }
            if ((!args || args.logAnalyticsWorkspaceId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'logAnalyticsWorkspaceId'");
            }
            if ((!args || args.query === undefined) && !opts.urn) {
                throw new Error("Missing required property 'query'");
            }
            if ((!args || args.severity === undefined) && !opts.urn) {
                throw new Error("Missing required property 'severity'");
            }
            resourceInputs["alertDetailsOverrides"] = args ? args.alertDetailsOverrides : undefined;
            resourceInputs["alertRuleTemplateGuid"] = args ? args.alertRuleTemplateGuid : undefined;
            resourceInputs["alertRuleTemplateVersion"] = args ? args.alertRuleTemplateVersion : undefined;
            resourceInputs["customDetails"] = args ? args.customDetails : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["enabled"] = args ? args.enabled : undefined;
            resourceInputs["entityMappings"] = args ? args.entityMappings : undefined;
            resourceInputs["eventGrouping"] = args ? args.eventGrouping : undefined;
            resourceInputs["incident"] = args ? args.incident : undefined;
            resourceInputs["logAnalyticsWorkspaceId"] = args ? args.logAnalyticsWorkspaceId : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["query"] = args ? args.query : undefined;
            resourceInputs["sentinelEntityMappings"] = args ? args.sentinelEntityMappings : undefined;
            resourceInputs["severity"] = args ? args.severity : undefined;
            resourceInputs["suppressionDuration"] = args ? args.suppressionDuration : undefined;
            resourceInputs["suppressionEnabled"] = args ? args.suppressionEnabled : undefined;
            resourceInputs["tactics"] = args ? args.tactics : undefined;
            resourceInputs["techniques"] = args ? args.techniques : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AlertRuleNrt.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering AlertRuleNrt resources.
 */
export interface AlertRuleNrtState {
    /**
     * An `alertDetailsOverride` block as defined below.
     */
    alertDetailsOverrides?: pulumi.Input<pulumi.Input<inputs.sentinel.AlertRuleNrtAlertDetailsOverride>[]>;
    /**
     * The GUID of the alert rule template which is used for this Sentinel NRT Alert Rule. Changing this forces a new Sentinel NRT Alert Rule to be created.
     */
    alertRuleTemplateGuid?: pulumi.Input<string>;
    /**
     * The version of the alert rule template which is used for this Sentinel NRT Alert Rule. Changing this forces a new Sentinel NRT Alert Rule to be created.
     */
    alertRuleTemplateVersion?: pulumi.Input<string>;
    /**
     * A map of string key-value pairs of columns to be attached to this Sentinel NRT Alert Rule. The key will appear as the field name in alerts and the value is the event parameter you wish to surface in the alerts.
     */
    customDetails?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The description of this Sentinel NRT Alert Rule.
     */
    description?: pulumi.Input<string>;
    /**
     * The friendly name of this Sentinel NRT Alert Rule.
     */
    displayName?: pulumi.Input<string>;
    /**
     * Should the Sentinel NRT Alert Rule be enabled? Defaults to `true`.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * A list of `entityMapping` blocks as defined below.
     */
    entityMappings?: pulumi.Input<pulumi.Input<inputs.sentinel.AlertRuleNrtEntityMapping>[]>;
    /**
     * A `eventGrouping` block as defined below.
     *
     * > **NOTE:** `eventGrouping` will be required in the next major version of the AzureRM Provider.
     */
    eventGrouping?: pulumi.Input<inputs.sentinel.AlertRuleNrtEventGrouping>;
    /**
     * A `incident` block as defined below.
     */
    incident?: pulumi.Input<inputs.sentinel.AlertRuleNrtIncident>;
    /**
     * The ID of the Log Analytics Workspace this Sentinel NRT Alert Rule belongs to. Changing this forces a new Sentinel NRT Alert Rule to be created.
     */
    logAnalyticsWorkspaceId?: pulumi.Input<string>;
    /**
     * The name which should be used for this Sentinel NRT Alert Rule. Changing this forces a new Sentinel NRT Alert Rule to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * The query of this Sentinel NRT Alert Rule.
     */
    query?: pulumi.Input<string>;
    /**
     * A list of `sentinelEntityMapping` blocks as defined below.
     *
     * > **NOTE:** `entityMapping` and `sentinelEntityMapping` together can't exceed 5.
     */
    sentinelEntityMappings?: pulumi.Input<pulumi.Input<inputs.sentinel.AlertRuleNrtSentinelEntityMapping>[]>;
    /**
     * The alert severity of this Sentinel NRT Alert Rule. Possible values are `High`, `Medium`, `Low` and `Informational`.
     */
    severity?: pulumi.Input<string>;
    /**
     * If `suppressionEnabled` is `true`, this is ISO 8601 timespan duration, which specifies the amount of time the query should stop running after alert is generated. Defaults to `PT5H`.
     */
    suppressionDuration?: pulumi.Input<string>;
    /**
     * Should the Sentinel NRT Alert Rulea stop running query after alert is generated? Defaults to `false`.
     */
    suppressionEnabled?: pulumi.Input<boolean>;
    /**
     * A list of categories of attacks by which to classify the rule. Possible values are `Collection`, `CommandAndControl`, `CredentialAccess`, `DefenseEvasion`, `Discovery`, `Execution`, `Exfiltration`, `Impact`, `ImpairProcessControl`, `InhibitResponseFunction`, `InitialAccess`, `LateralMovement`, `Persistence`, `PreAttack`, `PrivilegeEscalation`, `Reconnaissance` and `ResourceDevelopment`.
     */
    tactics?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A list of techniques of attacks by which to classify the rule.
     */
    techniques?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * The set of arguments for constructing a AlertRuleNrt resource.
 */
export interface AlertRuleNrtArgs {
    /**
     * An `alertDetailsOverride` block as defined below.
     */
    alertDetailsOverrides?: pulumi.Input<pulumi.Input<inputs.sentinel.AlertRuleNrtAlertDetailsOverride>[]>;
    /**
     * The GUID of the alert rule template which is used for this Sentinel NRT Alert Rule. Changing this forces a new Sentinel NRT Alert Rule to be created.
     */
    alertRuleTemplateGuid?: pulumi.Input<string>;
    /**
     * The version of the alert rule template which is used for this Sentinel NRT Alert Rule. Changing this forces a new Sentinel NRT Alert Rule to be created.
     */
    alertRuleTemplateVersion?: pulumi.Input<string>;
    /**
     * A map of string key-value pairs of columns to be attached to this Sentinel NRT Alert Rule. The key will appear as the field name in alerts and the value is the event parameter you wish to surface in the alerts.
     */
    customDetails?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The description of this Sentinel NRT Alert Rule.
     */
    description?: pulumi.Input<string>;
    /**
     * The friendly name of this Sentinel NRT Alert Rule.
     */
    displayName: pulumi.Input<string>;
    /**
     * Should the Sentinel NRT Alert Rule be enabled? Defaults to `true`.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * A list of `entityMapping` blocks as defined below.
     */
    entityMappings?: pulumi.Input<pulumi.Input<inputs.sentinel.AlertRuleNrtEntityMapping>[]>;
    /**
     * A `eventGrouping` block as defined below.
     *
     * > **NOTE:** `eventGrouping` will be required in the next major version of the AzureRM Provider.
     */
    eventGrouping?: pulumi.Input<inputs.sentinel.AlertRuleNrtEventGrouping>;
    /**
     * A `incident` block as defined below.
     */
    incident?: pulumi.Input<inputs.sentinel.AlertRuleNrtIncident>;
    /**
     * The ID of the Log Analytics Workspace this Sentinel NRT Alert Rule belongs to. Changing this forces a new Sentinel NRT Alert Rule to be created.
     */
    logAnalyticsWorkspaceId: pulumi.Input<string>;
    /**
     * The name which should be used for this Sentinel NRT Alert Rule. Changing this forces a new Sentinel NRT Alert Rule to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * The query of this Sentinel NRT Alert Rule.
     */
    query: pulumi.Input<string>;
    /**
     * A list of `sentinelEntityMapping` blocks as defined below.
     *
     * > **NOTE:** `entityMapping` and `sentinelEntityMapping` together can't exceed 5.
     */
    sentinelEntityMappings?: pulumi.Input<pulumi.Input<inputs.sentinel.AlertRuleNrtSentinelEntityMapping>[]>;
    /**
     * The alert severity of this Sentinel NRT Alert Rule. Possible values are `High`, `Medium`, `Low` and `Informational`.
     */
    severity: pulumi.Input<string>;
    /**
     * If `suppressionEnabled` is `true`, this is ISO 8601 timespan duration, which specifies the amount of time the query should stop running after alert is generated. Defaults to `PT5H`.
     */
    suppressionDuration?: pulumi.Input<string>;
    /**
     * Should the Sentinel NRT Alert Rulea stop running query after alert is generated? Defaults to `false`.
     */
    suppressionEnabled?: pulumi.Input<boolean>;
    /**
     * A list of categories of attacks by which to classify the rule. Possible values are `Collection`, `CommandAndControl`, `CredentialAccess`, `DefenseEvasion`, `Discovery`, `Execution`, `Exfiltration`, `Impact`, `ImpairProcessControl`, `InhibitResponseFunction`, `InitialAccess`, `LateralMovement`, `Persistence`, `PreAttack`, `PrivilegeEscalation`, `Reconnaissance` and `ResourceDevelopment`.
     */
    tactics?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A list of techniques of attacks by which to classify the rule.
     */
    techniques?: pulumi.Input<pulumi.Input<string>[]>;
}
