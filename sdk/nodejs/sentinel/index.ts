// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { AlertRuleFusionArgs, AlertRuleFusionState } from "./alertRuleFusion";
export type AlertRuleFusion = import("./alertRuleFusion").AlertRuleFusion;
export const AlertRuleFusion: typeof import("./alertRuleFusion").AlertRuleFusion = null as any;
utilities.lazyLoad(exports, ["AlertRuleFusion"], () => require("./alertRuleFusion"));

export { AlertRuleMachineLearningBehaviorAnalyticsArgs, AlertRuleMachineLearningBehaviorAnalyticsState } from "./alertRuleMachineLearningBehaviorAnalytics";
export type AlertRuleMachineLearningBehaviorAnalytics = import("./alertRuleMachineLearningBehaviorAnalytics").AlertRuleMachineLearningBehaviorAnalytics;
export const AlertRuleMachineLearningBehaviorAnalytics: typeof import("./alertRuleMachineLearningBehaviorAnalytics").AlertRuleMachineLearningBehaviorAnalytics = null as any;
utilities.lazyLoad(exports, ["AlertRuleMachineLearningBehaviorAnalytics"], () => require("./alertRuleMachineLearningBehaviorAnalytics"));

export { AlertRuleMsSecurityIncidentArgs, AlertRuleMsSecurityIncidentState } from "./alertRuleMsSecurityIncident";
export type AlertRuleMsSecurityIncident = import("./alertRuleMsSecurityIncident").AlertRuleMsSecurityIncident;
export const AlertRuleMsSecurityIncident: typeof import("./alertRuleMsSecurityIncident").AlertRuleMsSecurityIncident = null as any;
utilities.lazyLoad(exports, ["AlertRuleMsSecurityIncident"], () => require("./alertRuleMsSecurityIncident"));

export { AlertRuleNrtArgs, AlertRuleNrtState } from "./alertRuleNrt";
export type AlertRuleNrt = import("./alertRuleNrt").AlertRuleNrt;
export const AlertRuleNrt: typeof import("./alertRuleNrt").AlertRuleNrt = null as any;
utilities.lazyLoad(exports, ["AlertRuleNrt"], () => require("./alertRuleNrt"));

export { AlertRuleScheduledArgs, AlertRuleScheduledState } from "./alertRuleScheduled";
export type AlertRuleScheduled = import("./alertRuleScheduled").AlertRuleScheduled;
export const AlertRuleScheduled: typeof import("./alertRuleScheduled").AlertRuleScheduled = null as any;
utilities.lazyLoad(exports, ["AlertRuleScheduled"], () => require("./alertRuleScheduled"));

export { AuthomationRuleArgs, AuthomationRuleState } from "./authomationRule";
export type AuthomationRule = import("./authomationRule").AuthomationRule;
export const AuthomationRule: typeof import("./authomationRule").AuthomationRule = null as any;
utilities.lazyLoad(exports, ["AuthomationRule"], () => require("./authomationRule"));

export { AutomationRuleArgs, AutomationRuleState } from "./automationRule";
export type AutomationRule = import("./automationRule").AutomationRule;
export const AutomationRule: typeof import("./automationRule").AutomationRule = null as any;
utilities.lazyLoad(exports, ["AutomationRule"], () => require("./automationRule"));

export { DataConnectorAwsCloudTrailArgs, DataConnectorAwsCloudTrailState } from "./dataConnectorAwsCloudTrail";
export type DataConnectorAwsCloudTrail = import("./dataConnectorAwsCloudTrail").DataConnectorAwsCloudTrail;
export const DataConnectorAwsCloudTrail: typeof import("./dataConnectorAwsCloudTrail").DataConnectorAwsCloudTrail = null as any;
utilities.lazyLoad(exports, ["DataConnectorAwsCloudTrail"], () => require("./dataConnectorAwsCloudTrail"));

export { DataConnectorAwsS3Args, DataConnectorAwsS3State } from "./dataConnectorAwsS3";
export type DataConnectorAwsS3 = import("./dataConnectorAwsS3").DataConnectorAwsS3;
export const DataConnectorAwsS3: typeof import("./dataConnectorAwsS3").DataConnectorAwsS3 = null as any;
utilities.lazyLoad(exports, ["DataConnectorAwsS3"], () => require("./dataConnectorAwsS3"));

export { DataConnectorAzureActiveDirectoryArgs, DataConnectorAzureActiveDirectoryState } from "./dataConnectorAzureActiveDirectory";
export type DataConnectorAzureActiveDirectory = import("./dataConnectorAzureActiveDirectory").DataConnectorAzureActiveDirectory;
export const DataConnectorAzureActiveDirectory: typeof import("./dataConnectorAzureActiveDirectory").DataConnectorAzureActiveDirectory = null as any;
utilities.lazyLoad(exports, ["DataConnectorAzureActiveDirectory"], () => require("./dataConnectorAzureActiveDirectory"));

export { DataConnectorAzureAdvancedThreadProtectionArgs, DataConnectorAzureAdvancedThreadProtectionState } from "./dataConnectorAzureAdvancedThreadProtection";
export type DataConnectorAzureAdvancedThreadProtection = import("./dataConnectorAzureAdvancedThreadProtection").DataConnectorAzureAdvancedThreadProtection;
export const DataConnectorAzureAdvancedThreadProtection: typeof import("./dataConnectorAzureAdvancedThreadProtection").DataConnectorAzureAdvancedThreadProtection = null as any;
utilities.lazyLoad(exports, ["DataConnectorAzureAdvancedThreadProtection"], () => require("./dataConnectorAzureAdvancedThreadProtection"));

export { DataConnectorAzureSecurityCenterArgs, DataConnectorAzureSecurityCenterState } from "./dataConnectorAzureSecurityCenter";
export type DataConnectorAzureSecurityCenter = import("./dataConnectorAzureSecurityCenter").DataConnectorAzureSecurityCenter;
export const DataConnectorAzureSecurityCenter: typeof import("./dataConnectorAzureSecurityCenter").DataConnectorAzureSecurityCenter = null as any;
utilities.lazyLoad(exports, ["DataConnectorAzureSecurityCenter"], () => require("./dataConnectorAzureSecurityCenter"));

export { DataConnectorDynamics365Args, DataConnectorDynamics365State } from "./dataConnectorDynamics365";
export type DataConnectorDynamics365 = import("./dataConnectorDynamics365").DataConnectorDynamics365;
export const DataConnectorDynamics365: typeof import("./dataConnectorDynamics365").DataConnectorDynamics365 = null as any;
utilities.lazyLoad(exports, ["DataConnectorDynamics365"], () => require("./dataConnectorDynamics365"));

export { DataConnectorIotArgs, DataConnectorIotState } from "./dataConnectorIot";
export type DataConnectorIot = import("./dataConnectorIot").DataConnectorIot;
export const DataConnectorIot: typeof import("./dataConnectorIot").DataConnectorIot = null as any;
utilities.lazyLoad(exports, ["DataConnectorIot"], () => require("./dataConnectorIot"));

export { DataConnectorMicrosoftCloudAppSecurityArgs, DataConnectorMicrosoftCloudAppSecurityState } from "./dataConnectorMicrosoftCloudAppSecurity";
export type DataConnectorMicrosoftCloudAppSecurity = import("./dataConnectorMicrosoftCloudAppSecurity").DataConnectorMicrosoftCloudAppSecurity;
export const DataConnectorMicrosoftCloudAppSecurity: typeof import("./dataConnectorMicrosoftCloudAppSecurity").DataConnectorMicrosoftCloudAppSecurity = null as any;
utilities.lazyLoad(exports, ["DataConnectorMicrosoftCloudAppSecurity"], () => require("./dataConnectorMicrosoftCloudAppSecurity"));

export { DataConnectorMicrosoftDefenderAdvancedThreatProtectionArgs, DataConnectorMicrosoftDefenderAdvancedThreatProtectionState } from "./dataConnectorMicrosoftDefenderAdvancedThreatProtection";
export type DataConnectorMicrosoftDefenderAdvancedThreatProtection = import("./dataConnectorMicrosoftDefenderAdvancedThreatProtection").DataConnectorMicrosoftDefenderAdvancedThreatProtection;
export const DataConnectorMicrosoftDefenderAdvancedThreatProtection: typeof import("./dataConnectorMicrosoftDefenderAdvancedThreatProtection").DataConnectorMicrosoftDefenderAdvancedThreatProtection = null as any;
utilities.lazyLoad(exports, ["DataConnectorMicrosoftDefenderAdvancedThreatProtection"], () => require("./dataConnectorMicrosoftDefenderAdvancedThreatProtection"));

export { DataConnectorMicrosoftThreatProtectionArgs, DataConnectorMicrosoftThreatProtectionState } from "./dataConnectorMicrosoftThreatProtection";
export type DataConnectorMicrosoftThreatProtection = import("./dataConnectorMicrosoftThreatProtection").DataConnectorMicrosoftThreatProtection;
export const DataConnectorMicrosoftThreatProtection: typeof import("./dataConnectorMicrosoftThreatProtection").DataConnectorMicrosoftThreatProtection = null as any;
utilities.lazyLoad(exports, ["DataConnectorMicrosoftThreatProtection"], () => require("./dataConnectorMicrosoftThreatProtection"));

export { DataConnectorOffice365Args, DataConnectorOffice365State } from "./dataConnectorOffice365";
export type DataConnectorOffice365 = import("./dataConnectorOffice365").DataConnectorOffice365;
export const DataConnectorOffice365: typeof import("./dataConnectorOffice365").DataConnectorOffice365 = null as any;
utilities.lazyLoad(exports, ["DataConnectorOffice365"], () => require("./dataConnectorOffice365"));

export { DataConnectorOffice365ProjectArgs, DataConnectorOffice365ProjectState } from "./dataConnectorOffice365Project";
export type DataConnectorOffice365Project = import("./dataConnectorOffice365Project").DataConnectorOffice365Project;
export const DataConnectorOffice365Project: typeof import("./dataConnectorOffice365Project").DataConnectorOffice365Project = null as any;
utilities.lazyLoad(exports, ["DataConnectorOffice365Project"], () => require("./dataConnectorOffice365Project"));

export { DataConnectorOfficeAtpArgs, DataConnectorOfficeAtpState } from "./dataConnectorOfficeAtp";
export type DataConnectorOfficeAtp = import("./dataConnectorOfficeAtp").DataConnectorOfficeAtp;
export const DataConnectorOfficeAtp: typeof import("./dataConnectorOfficeAtp").DataConnectorOfficeAtp = null as any;
utilities.lazyLoad(exports, ["DataConnectorOfficeAtp"], () => require("./dataConnectorOfficeAtp"));

export { DataConnectorOfficeIrmArgs, DataConnectorOfficeIrmState } from "./dataConnectorOfficeIrm";
export type DataConnectorOfficeIrm = import("./dataConnectorOfficeIrm").DataConnectorOfficeIrm;
export const DataConnectorOfficeIrm: typeof import("./dataConnectorOfficeIrm").DataConnectorOfficeIrm = null as any;
utilities.lazyLoad(exports, ["DataConnectorOfficeIrm"], () => require("./dataConnectorOfficeIrm"));

export { DataConnectorOfficePowerBiArgs, DataConnectorOfficePowerBiState } from "./dataConnectorOfficePowerBi";
export type DataConnectorOfficePowerBi = import("./dataConnectorOfficePowerBi").DataConnectorOfficePowerBi;
export const DataConnectorOfficePowerBi: typeof import("./dataConnectorOfficePowerBi").DataConnectorOfficePowerBi = null as any;
utilities.lazyLoad(exports, ["DataConnectorOfficePowerBi"], () => require("./dataConnectorOfficePowerBi"));

export { DataConnectorThreatIntelligenceArgs, DataConnectorThreatIntelligenceState } from "./dataConnectorThreatIntelligence";
export type DataConnectorThreatIntelligence = import("./dataConnectorThreatIntelligence").DataConnectorThreatIntelligence;
export const DataConnectorThreatIntelligence: typeof import("./dataConnectorThreatIntelligence").DataConnectorThreatIntelligence = null as any;
utilities.lazyLoad(exports, ["DataConnectorThreatIntelligence"], () => require("./dataConnectorThreatIntelligence"));

export { DataConnectorThreatIntelligenceTaxiiArgs, DataConnectorThreatIntelligenceTaxiiState } from "./dataConnectorThreatIntelligenceTaxii";
export type DataConnectorThreatIntelligenceTaxii = import("./dataConnectorThreatIntelligenceTaxii").DataConnectorThreatIntelligenceTaxii;
export const DataConnectorThreatIntelligenceTaxii: typeof import("./dataConnectorThreatIntelligenceTaxii").DataConnectorThreatIntelligenceTaxii = null as any;
utilities.lazyLoad(exports, ["DataConnectorThreatIntelligenceTaxii"], () => require("./dataConnectorThreatIntelligenceTaxii"));

export { GetAlertRuleArgs, GetAlertRuleResult, GetAlertRuleOutputArgs } from "./getAlertRule";
export const getAlertRule: typeof import("./getAlertRule").getAlertRule = null as any;
export const getAlertRuleOutput: typeof import("./getAlertRule").getAlertRuleOutput = null as any;
utilities.lazyLoad(exports, ["getAlertRule","getAlertRuleOutput"], () => require("./getAlertRule"));

export { GetAlertRuleTemplateArgs, GetAlertRuleTemplateResult, GetAlertRuleTemplateOutputArgs } from "./getAlertRuleTemplate";
export const getAlertRuleTemplate: typeof import("./getAlertRuleTemplate").getAlertRuleTemplate = null as any;
export const getAlertRuleTemplateOutput: typeof import("./getAlertRuleTemplate").getAlertRuleTemplateOutput = null as any;
utilities.lazyLoad(exports, ["getAlertRuleTemplate","getAlertRuleTemplateOutput"], () => require("./getAlertRuleTemplate"));

export { LogAnalyticsWorkspaceOnboardingArgs, LogAnalyticsWorkspaceOnboardingState } from "./logAnalyticsWorkspaceOnboarding";
export type LogAnalyticsWorkspaceOnboarding = import("./logAnalyticsWorkspaceOnboarding").LogAnalyticsWorkspaceOnboarding;
export const LogAnalyticsWorkspaceOnboarding: typeof import("./logAnalyticsWorkspaceOnboarding").LogAnalyticsWorkspaceOnboarding = null as any;
utilities.lazyLoad(exports, ["LogAnalyticsWorkspaceOnboarding"], () => require("./logAnalyticsWorkspaceOnboarding"));

export { WatchlistArgs, WatchlistState } from "./watchlist";
export type Watchlist = import("./watchlist").Watchlist;
export const Watchlist: typeof import("./watchlist").Watchlist = null as any;
utilities.lazyLoad(exports, ["Watchlist"], () => require("./watchlist"));

export { WatchlistItemArgs, WatchlistItemState } from "./watchlistItem";
export type WatchlistItem = import("./watchlistItem").WatchlistItem;
export const WatchlistItem: typeof import("./watchlistItem").WatchlistItem = null as any;
utilities.lazyLoad(exports, ["WatchlistItem"], () => require("./watchlistItem"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "azure:sentinel/alertRuleFusion:AlertRuleFusion":
                return new AlertRuleFusion(name, <any>undefined, { urn })
            case "azure:sentinel/alertRuleMachineLearningBehaviorAnalytics:AlertRuleMachineLearningBehaviorAnalytics":
                return new AlertRuleMachineLearningBehaviorAnalytics(name, <any>undefined, { urn })
            case "azure:sentinel/alertRuleMsSecurityIncident:AlertRuleMsSecurityIncident":
                return new AlertRuleMsSecurityIncident(name, <any>undefined, { urn })
            case "azure:sentinel/alertRuleNrt:AlertRuleNrt":
                return new AlertRuleNrt(name, <any>undefined, { urn })
            case "azure:sentinel/alertRuleScheduled:AlertRuleScheduled":
                return new AlertRuleScheduled(name, <any>undefined, { urn })
            case "azure:sentinel/authomationRule:AuthomationRule":
                return new AuthomationRule(name, <any>undefined, { urn })
            case "azure:sentinel/automationRule:AutomationRule":
                return new AutomationRule(name, <any>undefined, { urn })
            case "azure:sentinel/dataConnectorAwsCloudTrail:DataConnectorAwsCloudTrail":
                return new DataConnectorAwsCloudTrail(name, <any>undefined, { urn })
            case "azure:sentinel/dataConnectorAwsS3:DataConnectorAwsS3":
                return new DataConnectorAwsS3(name, <any>undefined, { urn })
            case "azure:sentinel/dataConnectorAzureActiveDirectory:DataConnectorAzureActiveDirectory":
                return new DataConnectorAzureActiveDirectory(name, <any>undefined, { urn })
            case "azure:sentinel/dataConnectorAzureAdvancedThreadProtection:DataConnectorAzureAdvancedThreadProtection":
                return new DataConnectorAzureAdvancedThreadProtection(name, <any>undefined, { urn })
            case "azure:sentinel/dataConnectorAzureSecurityCenter:DataConnectorAzureSecurityCenter":
                return new DataConnectorAzureSecurityCenter(name, <any>undefined, { urn })
            case "azure:sentinel/dataConnectorDynamics365:DataConnectorDynamics365":
                return new DataConnectorDynamics365(name, <any>undefined, { urn })
            case "azure:sentinel/dataConnectorIot:DataConnectorIot":
                return new DataConnectorIot(name, <any>undefined, { urn })
            case "azure:sentinel/dataConnectorMicrosoftCloudAppSecurity:DataConnectorMicrosoftCloudAppSecurity":
                return new DataConnectorMicrosoftCloudAppSecurity(name, <any>undefined, { urn })
            case "azure:sentinel/dataConnectorMicrosoftDefenderAdvancedThreatProtection:DataConnectorMicrosoftDefenderAdvancedThreatProtection":
                return new DataConnectorMicrosoftDefenderAdvancedThreatProtection(name, <any>undefined, { urn })
            case "azure:sentinel/dataConnectorMicrosoftThreatProtection:DataConnectorMicrosoftThreatProtection":
                return new DataConnectorMicrosoftThreatProtection(name, <any>undefined, { urn })
            case "azure:sentinel/dataConnectorOffice365:DataConnectorOffice365":
                return new DataConnectorOffice365(name, <any>undefined, { urn })
            case "azure:sentinel/dataConnectorOffice365Project:DataConnectorOffice365Project":
                return new DataConnectorOffice365Project(name, <any>undefined, { urn })
            case "azure:sentinel/dataConnectorOfficeAtp:DataConnectorOfficeAtp":
                return new DataConnectorOfficeAtp(name, <any>undefined, { urn })
            case "azure:sentinel/dataConnectorOfficeIrm:DataConnectorOfficeIrm":
                return new DataConnectorOfficeIrm(name, <any>undefined, { urn })
            case "azure:sentinel/dataConnectorOfficePowerBi:DataConnectorOfficePowerBi":
                return new DataConnectorOfficePowerBi(name, <any>undefined, { urn })
            case "azure:sentinel/dataConnectorThreatIntelligence:DataConnectorThreatIntelligence":
                return new DataConnectorThreatIntelligence(name, <any>undefined, { urn })
            case "azure:sentinel/dataConnectorThreatIntelligenceTaxii:DataConnectorThreatIntelligenceTaxii":
                return new DataConnectorThreatIntelligenceTaxii(name, <any>undefined, { urn })
            case "azure:sentinel/logAnalyticsWorkspaceOnboarding:LogAnalyticsWorkspaceOnboarding":
                return new LogAnalyticsWorkspaceOnboarding(name, <any>undefined, { urn })
            case "azure:sentinel/watchlist:Watchlist":
                return new Watchlist(name, <any>undefined, { urn })
            case "azure:sentinel/watchlistItem:WatchlistItem":
                return new WatchlistItem(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure", "sentinel/alertRuleFusion", _module)
pulumi.runtime.registerResourceModule("azure", "sentinel/alertRuleMachineLearningBehaviorAnalytics", _module)
pulumi.runtime.registerResourceModule("azure", "sentinel/alertRuleMsSecurityIncident", _module)
pulumi.runtime.registerResourceModule("azure", "sentinel/alertRuleNrt", _module)
pulumi.runtime.registerResourceModule("azure", "sentinel/alertRuleScheduled", _module)
pulumi.runtime.registerResourceModule("azure", "sentinel/authomationRule", _module)
pulumi.runtime.registerResourceModule("azure", "sentinel/automationRule", _module)
pulumi.runtime.registerResourceModule("azure", "sentinel/dataConnectorAwsCloudTrail", _module)
pulumi.runtime.registerResourceModule("azure", "sentinel/dataConnectorAwsS3", _module)
pulumi.runtime.registerResourceModule("azure", "sentinel/dataConnectorAzureActiveDirectory", _module)
pulumi.runtime.registerResourceModule("azure", "sentinel/dataConnectorAzureAdvancedThreadProtection", _module)
pulumi.runtime.registerResourceModule("azure", "sentinel/dataConnectorAzureSecurityCenter", _module)
pulumi.runtime.registerResourceModule("azure", "sentinel/dataConnectorDynamics365", _module)
pulumi.runtime.registerResourceModule("azure", "sentinel/dataConnectorIot", _module)
pulumi.runtime.registerResourceModule("azure", "sentinel/dataConnectorMicrosoftCloudAppSecurity", _module)
pulumi.runtime.registerResourceModule("azure", "sentinel/dataConnectorMicrosoftDefenderAdvancedThreatProtection", _module)
pulumi.runtime.registerResourceModule("azure", "sentinel/dataConnectorMicrosoftThreatProtection", _module)
pulumi.runtime.registerResourceModule("azure", "sentinel/dataConnectorOffice365", _module)
pulumi.runtime.registerResourceModule("azure", "sentinel/dataConnectorOffice365Project", _module)
pulumi.runtime.registerResourceModule("azure", "sentinel/dataConnectorOfficeAtp", _module)
pulumi.runtime.registerResourceModule("azure", "sentinel/dataConnectorOfficeIrm", _module)
pulumi.runtime.registerResourceModule("azure", "sentinel/dataConnectorOfficePowerBi", _module)
pulumi.runtime.registerResourceModule("azure", "sentinel/dataConnectorThreatIntelligence", _module)
pulumi.runtime.registerResourceModule("azure", "sentinel/dataConnectorThreatIntelligenceTaxii", _module)
pulumi.runtime.registerResourceModule("azure", "sentinel/logAnalyticsWorkspaceOnboarding", _module)
pulumi.runtime.registerResourceModule("azure", "sentinel/watchlist", _module)
pulumi.runtime.registerResourceModule("azure", "sentinel/watchlistItem", _module)
