// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Use this data source to access information about an existing Anomaly Alert Rule.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const exampleResourceGroup = new azure.core.ResourceGroup("exampleResourceGroup", {location: "West Europe"});
 * const exampleAnalyticsWorkspace = new azure.operationalinsights.AnalyticsWorkspace("exampleAnalyticsWorkspace", {
 *     location: exampleResourceGroup.location,
 *     resourceGroupName: exampleResourceGroup.name,
 *     sku: "PerGB2018",
 * });
 * const exampleLogAnalyticsWorkspaceOnboarding = new azure.sentinel.LogAnalyticsWorkspaceOnboarding("exampleLogAnalyticsWorkspaceOnboarding", {
 *     workspaceId: exampleAnalyticsWorkspace.id,
 *     customerManagedKeyEnabled: false,
 * });
 * const exampleAlertRuleAnomaly = azure.sentinel.getAlertRuleAnomalyOutput({
 *     logAnalyticsWorkspaceId: exampleLogAnalyticsWorkspaceOnboarding.workspaceId,
 *     displayName: "Potential data staging",
 * });
 * export const id = exampleAlertRuleAnomaly.apply(exampleAlertRuleAnomaly => exampleAlertRuleAnomaly.id);
 * ```
 */
export function getAlertRuleAnomaly(args: GetAlertRuleAnomalyArgs, opts?: pulumi.InvokeOptions): Promise<GetAlertRuleAnomalyResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azure:sentinel/getAlertRuleAnomaly:getAlertRuleAnomaly", {
        "displayName": args.displayName,
        "logAnalyticsWorkspaceId": args.logAnalyticsWorkspaceId,
        "name": args.name,
    }, opts);
}

/**
 * A collection of arguments for invoking getAlertRuleAnomaly.
 */
export interface GetAlertRuleAnomalyArgs {
    /**
     * The display name of this Sentinel Alert Rule Template. Either `displayName` or `name` have to be specified.
     *
     * > **NOTE** One of `name` or `displayName` must be specified.
     */
    displayName?: string;
    /**
     * The ID of the Log Analytics Workspace.
     */
    logAnalyticsWorkspaceId: string;
    /**
     * The guid of this Sentinel Alert Rule Template. Either `displayName` or `name` have to be specified.
     */
    name?: string;
}

/**
 * A collection of values returned by getAlertRuleAnomaly.
 */
export interface GetAlertRuleAnomalyResult {
    /**
     * The version of the Anomaly Security ML Analytics Settings.
     */
    readonly anomalySettingsVersion: number;
    /**
     * The anomaly version of the Anomaly Alert Rule.
     */
    readonly anomalyVersion: string;
    /**
     * The description of the threshold observation.
     */
    readonly description: string;
    readonly displayName: string;
    /**
     * Is the Anomaly Alert Rule enabled?
     */
    readonly enabled: boolean;
    /**
     * The frequency the Anomaly Alert Rule will be run.
     */
    readonly frequency: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly logAnalyticsWorkspaceId: string;
    readonly mode: string;
    /**
     * A list of `multiSelectObservation` blocks as defined below.
     */
    readonly multiSelectObservations: outputs.sentinel.GetAlertRuleAnomalyMultiSelectObservation[];
    /**
     * The name of the threshold observation.
     */
    readonly name: string;
    /**
     * A list of `prioritizedExcludeObservation` blocks as defined below.
     */
    readonly prioritizedExcludeObservations: outputs.sentinel.GetAlertRuleAnomalyPrioritizedExcludeObservation[];
    /**
     * A `requiredDataConnector` block as defined below.
     */
    readonly requiredDataConnectors: outputs.sentinel.GetAlertRuleAnomalyRequiredDataConnector[];
    /**
     * The ID of the anomaly settings definition Id.
     */
    readonly settingsDefinitionId: string;
    /**
     * A list of `singleSelectObservation` blocks as defined below.
     */
    readonly singleSelectObservations: outputs.sentinel.GetAlertRuleAnomalySingleSelectObservation[];
    /**
     * A list of categories of attacks by which to classify the rule.
     */
    readonly tactics: string[];
    /**
     * A list of techniques of attacks by which to classify the rule.
     */
    readonly techniques: string[];
    /**
     * A list of `thresholdObservation` blocks as defined below.
     */
    readonly thresholdObservations: outputs.sentinel.GetAlertRuleAnomalyThresholdObservation[];
}
/**
 * Use this data source to access information about an existing Anomaly Alert Rule.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const exampleResourceGroup = new azure.core.ResourceGroup("exampleResourceGroup", {location: "West Europe"});
 * const exampleAnalyticsWorkspace = new azure.operationalinsights.AnalyticsWorkspace("exampleAnalyticsWorkspace", {
 *     location: exampleResourceGroup.location,
 *     resourceGroupName: exampleResourceGroup.name,
 *     sku: "PerGB2018",
 * });
 * const exampleLogAnalyticsWorkspaceOnboarding = new azure.sentinel.LogAnalyticsWorkspaceOnboarding("exampleLogAnalyticsWorkspaceOnboarding", {
 *     workspaceId: exampleAnalyticsWorkspace.id,
 *     customerManagedKeyEnabled: false,
 * });
 * const exampleAlertRuleAnomaly = azure.sentinel.getAlertRuleAnomalyOutput({
 *     logAnalyticsWorkspaceId: exampleLogAnalyticsWorkspaceOnboarding.workspaceId,
 *     displayName: "Potential data staging",
 * });
 * export const id = exampleAlertRuleAnomaly.apply(exampleAlertRuleAnomaly => exampleAlertRuleAnomaly.id);
 * ```
 */
export function getAlertRuleAnomalyOutput(args: GetAlertRuleAnomalyOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAlertRuleAnomalyResult> {
    return pulumi.output(args).apply((a: any) => getAlertRuleAnomaly(a, opts))
}

/**
 * A collection of arguments for invoking getAlertRuleAnomaly.
 */
export interface GetAlertRuleAnomalyOutputArgs {
    /**
     * The display name of this Sentinel Alert Rule Template. Either `displayName` or `name` have to be specified.
     *
     * > **NOTE** One of `name` or `displayName` must be specified.
     */
    displayName?: pulumi.Input<string>;
    /**
     * The ID of the Log Analytics Workspace.
     */
    logAnalyticsWorkspaceId: pulumi.Input<string>;
    /**
     * The guid of this Sentinel Alert Rule Template. Either `displayName` or `name` have to be specified.
     */
    name?: pulumi.Input<string>;
}
