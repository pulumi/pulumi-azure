// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Use this data source to access information about an existing Sentinel Alert Rule.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = azure.operationalinsights.getAnalyticsWorkspace({
 *     name: "example",
 *     resourceGroupName: "example-resources",
 * });
 * const exampleGetAlertRule = example.then(example => azure.sentinel.getAlertRule({
 *     name: "existing",
 *     logAnalyticsWorkspaceId: example.id,
 * }));
 * export const id = exampleGetAlertRule.then(exampleGetAlertRule => exampleGetAlertRule.id);
 * ```
 *
 * ## API Providers
 *
 * <!-- This section is generated, changes will be overwritten -->
 * This data source uses the following Azure API Providers:
 *
 * * `Microsoft.OperationalInsights`: 2023-12-01-preview
 */
export function getAlertRule(args: GetAlertRuleArgs, opts?: pulumi.InvokeOptions): Promise<GetAlertRuleResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azure:sentinel/getAlertRule:getAlertRule", {
        "logAnalyticsWorkspaceId": args.logAnalyticsWorkspaceId,
        "name": args.name,
    }, opts);
}

/**
 * A collection of arguments for invoking getAlertRule.
 */
export interface GetAlertRuleArgs {
    /**
     * The ID of the Log Analytics Workspace this Sentinel Alert Rule belongs to.
     */
    logAnalyticsWorkspaceId: string;
    /**
     * The name which should be used for this Sentinel Alert Rule.
     */
    name: string;
}

/**
 * A collection of values returned by getAlertRule.
 */
export interface GetAlertRuleResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly logAnalyticsWorkspaceId: string;
    readonly name: string;
}
/**
 * Use this data source to access information about an existing Sentinel Alert Rule.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = azure.operationalinsights.getAnalyticsWorkspace({
 *     name: "example",
 *     resourceGroupName: "example-resources",
 * });
 * const exampleGetAlertRule = example.then(example => azure.sentinel.getAlertRule({
 *     name: "existing",
 *     logAnalyticsWorkspaceId: example.id,
 * }));
 * export const id = exampleGetAlertRule.then(exampleGetAlertRule => exampleGetAlertRule.id);
 * ```
 *
 * ## API Providers
 *
 * <!-- This section is generated, changes will be overwritten -->
 * This data source uses the following Azure API Providers:
 *
 * * `Microsoft.OperationalInsights`: 2023-12-01-preview
 */
export function getAlertRuleOutput(args: GetAlertRuleOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetAlertRuleResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("azure:sentinel/getAlertRule:getAlertRule", {
        "logAnalyticsWorkspaceId": args.logAnalyticsWorkspaceId,
        "name": args.name,
    }, opts);
}

/**
 * A collection of arguments for invoking getAlertRule.
 */
export interface GetAlertRuleOutputArgs {
    /**
     * The ID of the Log Analytics Workspace this Sentinel Alert Rule belongs to.
     */
    logAnalyticsWorkspaceId: pulumi.Input<string>;
    /**
     * The name which should be used for this Sentinel Alert Rule.
     */
    name: pulumi.Input<string>;
}
