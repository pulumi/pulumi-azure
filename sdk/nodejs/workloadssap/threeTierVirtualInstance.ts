// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Manages an SAP Three Tier Virtual Instance with a new SAP System.
 *
 * > **Note:** Before using this resource, it's required to submit the request of registering the Resource Provider with Azure CLI `az provider register --namespace "Microsoft.Workloads"`. The Resource Provider can take a while to register, you can check the status by running `az provider show --namespace "Microsoft.Workloads" --query "registrationState"`. Once this outputs "Registered" the Resource Provider is available for use.
 *
 * ## Import
 *
 * SAP Three Tier Virtual Instances with new SAP Systems can be imported using the `resource id`, e.g.
 *
 * ```sh
 * $ pulumi import azure:workloadssap/threeTierVirtualInstance:ThreeTierVirtualInstance example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.Workloads/sapVirtualInstances/vis1
 * ```
 */
export class ThreeTierVirtualInstance extends pulumi.CustomResource {
    /**
     * Get an existing ThreeTierVirtualInstance resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ThreeTierVirtualInstanceState, opts?: pulumi.CustomResourceOptions): ThreeTierVirtualInstance {
        return new ThreeTierVirtualInstance(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure:workloadssap/threeTierVirtualInstance:ThreeTierVirtualInstance';

    /**
     * Returns true if the given object is an instance of ThreeTierVirtualInstance.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ThreeTierVirtualInstance {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ThreeTierVirtualInstance.__pulumiType;
    }

    /**
     * The Geo-Location where the SAP system is to be created. Changing this forces a new resource to be created.
     */
    declare public readonly appLocation: pulumi.Output<string>;
    /**
     * The environment type for the SAP Three Tier Virtual Instance. Possible values are `NonProd` and `Prod`. Changing this forces a new resource to be created.
     */
    declare public readonly environment: pulumi.Output<string>;
    /**
     * An `identity` block as defined below.
     */
    declare public readonly identity: pulumi.Output<outputs.workloadssap.ThreeTierVirtualInstanceIdentity | undefined>;
    /**
     * The Azure Region where the SAP Three Tier Virtual Instance should exist. Changing this forces a new resource to be created.
     */
    declare public readonly location: pulumi.Output<string>;
    /**
     * The name of the managed Resource Group for the SAP Three Tier Virtual Instance. Changing this forces a new resource to be created.
     */
    declare public readonly managedResourceGroupName: pulumi.Output<string | undefined>;
    /**
     * The network access type for managed resources. Possible values are `Private` and `Public`. Defaults to `Public`.
     */
    declare public readonly managedResourcesNetworkAccessType: pulumi.Output<string | undefined>;
    /**
     * Specifies the name of this SAP Three Tier Virtual Instance. Changing this forces a new resource to be created.
     */
    declare public readonly name: pulumi.Output<string>;
    /**
     * The name of the Resource Group where the SAP Three Tier Virtual Instance should exist. Changing this forces a new resource to be created.
     */
    declare public readonly resourceGroupName: pulumi.Output<string>;
    /**
     * The FQDN of the SAP system. Changing this forces a new resource to be created.
     */
    declare public readonly sapFqdn: pulumi.Output<string>;
    /**
     * The SAP Product type for the SAP Three Tier Virtual Instance. Possible values are `ECC`, `Other` and `S4HANA`. Changing this forces a new resource to be created.
     */
    declare public readonly sapProduct: pulumi.Output<string>;
    /**
     * A mapping of tags which should be assigned to the SAP Three Tier Virtual Instance.
     */
    declare public readonly tags: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * A `threeTierConfiguration` block as defined below. Changing this forces a new resource to be created.
     */
    declare public readonly threeTierConfiguration: pulumi.Output<outputs.workloadssap.ThreeTierVirtualInstanceThreeTierConfiguration>;

    /**
     * Create a ThreeTierVirtualInstance resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ThreeTierVirtualInstanceArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ThreeTierVirtualInstanceArgs | ThreeTierVirtualInstanceState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ThreeTierVirtualInstanceState | undefined;
            resourceInputs["appLocation"] = state?.appLocation;
            resourceInputs["environment"] = state?.environment;
            resourceInputs["identity"] = state?.identity;
            resourceInputs["location"] = state?.location;
            resourceInputs["managedResourceGroupName"] = state?.managedResourceGroupName;
            resourceInputs["managedResourcesNetworkAccessType"] = state?.managedResourcesNetworkAccessType;
            resourceInputs["name"] = state?.name;
            resourceInputs["resourceGroupName"] = state?.resourceGroupName;
            resourceInputs["sapFqdn"] = state?.sapFqdn;
            resourceInputs["sapProduct"] = state?.sapProduct;
            resourceInputs["tags"] = state?.tags;
            resourceInputs["threeTierConfiguration"] = state?.threeTierConfiguration;
        } else {
            const args = argsOrState as ThreeTierVirtualInstanceArgs | undefined;
            if (args?.appLocation === undefined && !opts.urn) {
                throw new Error("Missing required property 'appLocation'");
            }
            if (args?.environment === undefined && !opts.urn) {
                throw new Error("Missing required property 'environment'");
            }
            if (args?.resourceGroupName === undefined && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            if (args?.sapFqdn === undefined && !opts.urn) {
                throw new Error("Missing required property 'sapFqdn'");
            }
            if (args?.sapProduct === undefined && !opts.urn) {
                throw new Error("Missing required property 'sapProduct'");
            }
            if (args?.threeTierConfiguration === undefined && !opts.urn) {
                throw new Error("Missing required property 'threeTierConfiguration'");
            }
            resourceInputs["appLocation"] = args?.appLocation;
            resourceInputs["environment"] = args?.environment;
            resourceInputs["identity"] = args?.identity;
            resourceInputs["location"] = args?.location;
            resourceInputs["managedResourceGroupName"] = args?.managedResourceGroupName;
            resourceInputs["managedResourcesNetworkAccessType"] = args?.managedResourcesNetworkAccessType;
            resourceInputs["name"] = args?.name;
            resourceInputs["resourceGroupName"] = args?.resourceGroupName;
            resourceInputs["sapFqdn"] = args?.sapFqdn;
            resourceInputs["sapProduct"] = args?.sapProduct;
            resourceInputs["tags"] = args?.tags;
            resourceInputs["threeTierConfiguration"] = args?.threeTierConfiguration;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ThreeTierVirtualInstance.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ThreeTierVirtualInstance resources.
 */
export interface ThreeTierVirtualInstanceState {
    /**
     * The Geo-Location where the SAP system is to be created. Changing this forces a new resource to be created.
     */
    appLocation?: pulumi.Input<string>;
    /**
     * The environment type for the SAP Three Tier Virtual Instance. Possible values are `NonProd` and `Prod`. Changing this forces a new resource to be created.
     */
    environment?: pulumi.Input<string>;
    /**
     * An `identity` block as defined below.
     */
    identity?: pulumi.Input<inputs.workloadssap.ThreeTierVirtualInstanceIdentity>;
    /**
     * The Azure Region where the SAP Three Tier Virtual Instance should exist. Changing this forces a new resource to be created.
     */
    location?: pulumi.Input<string>;
    /**
     * The name of the managed Resource Group for the SAP Three Tier Virtual Instance. Changing this forces a new resource to be created.
     */
    managedResourceGroupName?: pulumi.Input<string>;
    /**
     * The network access type for managed resources. Possible values are `Private` and `Public`. Defaults to `Public`.
     */
    managedResourcesNetworkAccessType?: pulumi.Input<string>;
    /**
     * Specifies the name of this SAP Three Tier Virtual Instance. Changing this forces a new resource to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * The name of the Resource Group where the SAP Three Tier Virtual Instance should exist. Changing this forces a new resource to be created.
     */
    resourceGroupName?: pulumi.Input<string>;
    /**
     * The FQDN of the SAP system. Changing this forces a new resource to be created.
     */
    sapFqdn?: pulumi.Input<string>;
    /**
     * The SAP Product type for the SAP Three Tier Virtual Instance. Possible values are `ECC`, `Other` and `S4HANA`. Changing this forces a new resource to be created.
     */
    sapProduct?: pulumi.Input<string>;
    /**
     * A mapping of tags which should be assigned to the SAP Three Tier Virtual Instance.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * A `threeTierConfiguration` block as defined below. Changing this forces a new resource to be created.
     */
    threeTierConfiguration?: pulumi.Input<inputs.workloadssap.ThreeTierVirtualInstanceThreeTierConfiguration>;
}

/**
 * The set of arguments for constructing a ThreeTierVirtualInstance resource.
 */
export interface ThreeTierVirtualInstanceArgs {
    /**
     * The Geo-Location where the SAP system is to be created. Changing this forces a new resource to be created.
     */
    appLocation: pulumi.Input<string>;
    /**
     * The environment type for the SAP Three Tier Virtual Instance. Possible values are `NonProd` and `Prod`. Changing this forces a new resource to be created.
     */
    environment: pulumi.Input<string>;
    /**
     * An `identity` block as defined below.
     */
    identity?: pulumi.Input<inputs.workloadssap.ThreeTierVirtualInstanceIdentity>;
    /**
     * The Azure Region where the SAP Three Tier Virtual Instance should exist. Changing this forces a new resource to be created.
     */
    location?: pulumi.Input<string>;
    /**
     * The name of the managed Resource Group for the SAP Three Tier Virtual Instance. Changing this forces a new resource to be created.
     */
    managedResourceGroupName?: pulumi.Input<string>;
    /**
     * The network access type for managed resources. Possible values are `Private` and `Public`. Defaults to `Public`.
     */
    managedResourcesNetworkAccessType?: pulumi.Input<string>;
    /**
     * Specifies the name of this SAP Three Tier Virtual Instance. Changing this forces a new resource to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * The name of the Resource Group where the SAP Three Tier Virtual Instance should exist. Changing this forces a new resource to be created.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * The FQDN of the SAP system. Changing this forces a new resource to be created.
     */
    sapFqdn: pulumi.Input<string>;
    /**
     * The SAP Product type for the SAP Three Tier Virtual Instance. Possible values are `ECC`, `Other` and `S4HANA`. Changing this forces a new resource to be created.
     */
    sapProduct: pulumi.Input<string>;
    /**
     * A mapping of tags which should be assigned to the SAP Three Tier Virtual Instance.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * A `threeTierConfiguration` block as defined below. Changing this forces a new resource to be created.
     */
    threeTierConfiguration: pulumi.Input<inputs.workloadssap.ThreeTierVirtualInstanceThreeTierConfiguration>;
}
