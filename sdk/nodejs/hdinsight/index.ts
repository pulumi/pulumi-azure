// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export * from "./getCluster";
export * from "./hadoopCluster";
export * from "./hbaseCluster";
export * from "./interactiveQueryCluster";
export * from "./kafkaCluster";
export * from "./sparkCluster";

// Import resources to register:
import { HBaseCluster } from "./hbaseCluster";
import { HadoopCluster } from "./hadoopCluster";
import { InteractiveQueryCluster } from "./interactiveQueryCluster";
import { KafkaCluster } from "./kafkaCluster";
import { SparkCluster } from "./sparkCluster";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "azure:hdinsight/hBaseCluster:HBaseCluster":
                return new HBaseCluster(name, <any>undefined, { urn })
            case "azure:hdinsight/hadoopCluster:HadoopCluster":
                return new HadoopCluster(name, <any>undefined, { urn })
            case "azure:hdinsight/interactiveQueryCluster:InteractiveQueryCluster":
                return new InteractiveQueryCluster(name, <any>undefined, { urn })
            case "azure:hdinsight/kafkaCluster:KafkaCluster":
                return new KafkaCluster(name, <any>undefined, { urn })
            case "azure:hdinsight/sparkCluster:SparkCluster":
                return new SparkCluster(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure", "hdinsight/hBaseCluster", _module)
pulumi.runtime.registerResourceModule("azure", "hdinsight/hadoopCluster", _module)
pulumi.runtime.registerResourceModule("azure", "hdinsight/interactiveQueryCluster", _module)
pulumi.runtime.registerResourceModule("azure", "hdinsight/kafkaCluster", _module)
pulumi.runtime.registerResourceModule("azure", "hdinsight/sparkCluster", _module)
