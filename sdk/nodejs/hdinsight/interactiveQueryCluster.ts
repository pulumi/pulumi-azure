// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Manages a HDInsight Interactive Query Cluster.
 *
 * ## Import
 *
 * HDInsight Interactive Query Clusters can be imported using the `resource id`, e.g.
 *
 * ```sh
 *  $ pulumi import azure:hdinsight/interactiveQueryCluster:InteractiveQueryCluster example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/mygroup1/providers/Microsoft.HDInsight/clusters/cluster1
 * ```
 */
export class InteractiveQueryCluster extends pulumi.CustomResource {
    /**
     * Get an existing InteractiveQueryCluster resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: InteractiveQueryClusterState, opts?: pulumi.CustomResourceOptions): InteractiveQueryCluster {
        return new InteractiveQueryCluster(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure:hdinsight/interactiveQueryCluster:InteractiveQueryCluster';

    /**
     * Returns true if the given object is an instance of InteractiveQueryCluster.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is InteractiveQueryCluster {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === InteractiveQueryCluster.__pulumiType;
    }

    /**
     * Specifies the Version of HDInsights which should be used for this Cluster. Changing this forces a new resource to be created.
     */
    public readonly clusterVersion!: pulumi.Output<string>;
    /**
     * A `componentVersion` block as defined below.
     */
    public readonly componentVersion!: pulumi.Output<outputs.hdinsight.InteractiveQueryClusterComponentVersion>;
    /**
     * A `computeIsolation` block as defined below.
     */
    public readonly computeIsolation!: pulumi.Output<outputs.hdinsight.InteractiveQueryClusterComputeIsolation | undefined>;
    /**
     * A `diskEncryption` block as defined below.
     */
    public readonly diskEncryptions!: pulumi.Output<outputs.hdinsight.InteractiveQueryClusterDiskEncryption[] | undefined>;
    /**
     * Whether encryption in transit is enabled for this Cluster. Changing this forces a new resource to be created.
     */
    public readonly encryptionInTransitEnabled!: pulumi.Output<boolean>;
    /**
     * An `extension` block as defined below.
     */
    public readonly extension!: pulumi.Output<outputs.hdinsight.InteractiveQueryClusterExtension | undefined>;
    /**
     * A `gateway` block as defined below.
     */
    public readonly gateway!: pulumi.Output<outputs.hdinsight.InteractiveQueryClusterGateway>;
    /**
     * The HTTPS Connectivity Endpoint for this HDInsight Interactive Query Cluster.
     */
    public /*out*/ readonly httpsEndpoint!: pulumi.Output<string>;
    /**
     * Specifies the Azure Region which this HDInsight Interactive Query Cluster should exist. Changing this forces a new resource to be created.
     */
    public readonly location!: pulumi.Output<string>;
    /**
     * A `metastores` block as defined below.
     */
    public readonly metastores!: pulumi.Output<outputs.hdinsight.InteractiveQueryClusterMetastores | undefined>;
    /**
     * A `monitor` block as defined below.
     */
    public readonly monitor!: pulumi.Output<outputs.hdinsight.InteractiveQueryClusterMonitor | undefined>;
    /**
     * Specifies the name for this HDInsight Interactive Query Cluster. Changing this forces a new resource to be created.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * A `network` block as defined below.
     */
    public readonly network!: pulumi.Output<outputs.hdinsight.InteractiveQueryClusterNetwork | undefined>;
    /**
     * Specifies the name of the Resource Group in which this HDInsight Interactive Query Cluster should exist. Changing this forces a new resource to be created.
     */
    public readonly resourceGroupName!: pulumi.Output<string>;
    /**
     * A `roles` block as defined below.
     */
    public readonly roles!: pulumi.Output<outputs.hdinsight.InteractiveQueryClusterRoles>;
    /**
     * A `securityProfile` block as defined below. Changing this forces a new resource to be created.
     */
    public readonly securityProfile!: pulumi.Output<outputs.hdinsight.InteractiveQueryClusterSecurityProfile | undefined>;
    /**
     * The SSH Connectivity Endpoint for this HDInsight Interactive Query Cluster.
     */
    public /*out*/ readonly sshEndpoint!: pulumi.Output<string>;
    /**
     * A `storageAccountGen2` block as defined below.
     */
    public readonly storageAccountGen2!: pulumi.Output<outputs.hdinsight.InteractiveQueryClusterStorageAccountGen2 | undefined>;
    /**
     * One or more `storageAccount` block as defined below.
     */
    public readonly storageAccounts!: pulumi.Output<outputs.hdinsight.InteractiveQueryClusterStorageAccount[] | undefined>;
    /**
     * A map of Tags which should be assigned to this HDInsight Interactive Query Cluster.
     */
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * Specifies the Tier which should be used for this HDInsight Interactive Query Cluster. Possible values are `Standard` or `Premium`. Changing this forces a new resource to be created.
     */
    public readonly tier!: pulumi.Output<string>;
    /**
     * The minimal supported TLS version. Possible values are 1.0, 1.1 or 1.2. Changing this forces a new resource to be created.
     *
     * > **NOTE:** Starting on June 30, 2020, Azure HDInsight will enforce TLS 1.2 or later versions for all HTTPS connections. For more information, see [Azure HDInsight TLS 1.2 Enforcement](https://azure.microsoft.com/en-us/updates/azure-hdinsight-tls-12-enforcement/).
     */
    public readonly tlsMinVersion!: pulumi.Output<string | undefined>;

    /**
     * Create a InteractiveQueryCluster resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: InteractiveQueryClusterArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: InteractiveQueryClusterArgs | InteractiveQueryClusterState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as InteractiveQueryClusterState | undefined;
            resourceInputs["clusterVersion"] = state ? state.clusterVersion : undefined;
            resourceInputs["componentVersion"] = state ? state.componentVersion : undefined;
            resourceInputs["computeIsolation"] = state ? state.computeIsolation : undefined;
            resourceInputs["diskEncryptions"] = state ? state.diskEncryptions : undefined;
            resourceInputs["encryptionInTransitEnabled"] = state ? state.encryptionInTransitEnabled : undefined;
            resourceInputs["extension"] = state ? state.extension : undefined;
            resourceInputs["gateway"] = state ? state.gateway : undefined;
            resourceInputs["httpsEndpoint"] = state ? state.httpsEndpoint : undefined;
            resourceInputs["location"] = state ? state.location : undefined;
            resourceInputs["metastores"] = state ? state.metastores : undefined;
            resourceInputs["monitor"] = state ? state.monitor : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["network"] = state ? state.network : undefined;
            resourceInputs["resourceGroupName"] = state ? state.resourceGroupName : undefined;
            resourceInputs["roles"] = state ? state.roles : undefined;
            resourceInputs["securityProfile"] = state ? state.securityProfile : undefined;
            resourceInputs["sshEndpoint"] = state ? state.sshEndpoint : undefined;
            resourceInputs["storageAccountGen2"] = state ? state.storageAccountGen2 : undefined;
            resourceInputs["storageAccounts"] = state ? state.storageAccounts : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["tier"] = state ? state.tier : undefined;
            resourceInputs["tlsMinVersion"] = state ? state.tlsMinVersion : undefined;
        } else {
            const args = argsOrState as InteractiveQueryClusterArgs | undefined;
            if ((!args || args.clusterVersion === undefined) && !opts.urn) {
                throw new Error("Missing required property 'clusterVersion'");
            }
            if ((!args || args.componentVersion === undefined) && !opts.urn) {
                throw new Error("Missing required property 'componentVersion'");
            }
            if ((!args || args.gateway === undefined) && !opts.urn) {
                throw new Error("Missing required property 'gateway'");
            }
            if ((!args || args.resourceGroupName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            if ((!args || args.roles === undefined) && !opts.urn) {
                throw new Error("Missing required property 'roles'");
            }
            if ((!args || args.tier === undefined) && !opts.urn) {
                throw new Error("Missing required property 'tier'");
            }
            resourceInputs["clusterVersion"] = args ? args.clusterVersion : undefined;
            resourceInputs["componentVersion"] = args ? args.componentVersion : undefined;
            resourceInputs["computeIsolation"] = args ? args.computeIsolation : undefined;
            resourceInputs["diskEncryptions"] = args ? args.diskEncryptions : undefined;
            resourceInputs["encryptionInTransitEnabled"] = args ? args.encryptionInTransitEnabled : undefined;
            resourceInputs["extension"] = args ? args.extension : undefined;
            resourceInputs["gateway"] = args ? args.gateway : undefined;
            resourceInputs["location"] = args ? args.location : undefined;
            resourceInputs["metastores"] = args ? args.metastores : undefined;
            resourceInputs["monitor"] = args ? args.monitor : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["network"] = args ? args.network : undefined;
            resourceInputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            resourceInputs["roles"] = args ? args.roles : undefined;
            resourceInputs["securityProfile"] = args ? args.securityProfile : undefined;
            resourceInputs["storageAccountGen2"] = args ? args.storageAccountGen2 : undefined;
            resourceInputs["storageAccounts"] = args ? args.storageAccounts : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["tier"] = args ? args.tier : undefined;
            resourceInputs["tlsMinVersion"] = args ? args.tlsMinVersion : undefined;
            resourceInputs["httpsEndpoint"] = undefined /*out*/;
            resourceInputs["sshEndpoint"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(InteractiveQueryCluster.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering InteractiveQueryCluster resources.
 */
export interface InteractiveQueryClusterState {
    /**
     * Specifies the Version of HDInsights which should be used for this Cluster. Changing this forces a new resource to be created.
     */
    clusterVersion?: pulumi.Input<string>;
    /**
     * A `componentVersion` block as defined below.
     */
    componentVersion?: pulumi.Input<inputs.hdinsight.InteractiveQueryClusterComponentVersion>;
    /**
     * A `computeIsolation` block as defined below.
     */
    computeIsolation?: pulumi.Input<inputs.hdinsight.InteractiveQueryClusterComputeIsolation>;
    /**
     * A `diskEncryption` block as defined below.
     */
    diskEncryptions?: pulumi.Input<pulumi.Input<inputs.hdinsight.InteractiveQueryClusterDiskEncryption>[]>;
    /**
     * Whether encryption in transit is enabled for this Cluster. Changing this forces a new resource to be created.
     */
    encryptionInTransitEnabled?: pulumi.Input<boolean>;
    /**
     * An `extension` block as defined below.
     */
    extension?: pulumi.Input<inputs.hdinsight.InteractiveQueryClusterExtension>;
    /**
     * A `gateway` block as defined below.
     */
    gateway?: pulumi.Input<inputs.hdinsight.InteractiveQueryClusterGateway>;
    /**
     * The HTTPS Connectivity Endpoint for this HDInsight Interactive Query Cluster.
     */
    httpsEndpoint?: pulumi.Input<string>;
    /**
     * Specifies the Azure Region which this HDInsight Interactive Query Cluster should exist. Changing this forces a new resource to be created.
     */
    location?: pulumi.Input<string>;
    /**
     * A `metastores` block as defined below.
     */
    metastores?: pulumi.Input<inputs.hdinsight.InteractiveQueryClusterMetastores>;
    /**
     * A `monitor` block as defined below.
     */
    monitor?: pulumi.Input<inputs.hdinsight.InteractiveQueryClusterMonitor>;
    /**
     * Specifies the name for this HDInsight Interactive Query Cluster. Changing this forces a new resource to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * A `network` block as defined below.
     */
    network?: pulumi.Input<inputs.hdinsight.InteractiveQueryClusterNetwork>;
    /**
     * Specifies the name of the Resource Group in which this HDInsight Interactive Query Cluster should exist. Changing this forces a new resource to be created.
     */
    resourceGroupName?: pulumi.Input<string>;
    /**
     * A `roles` block as defined below.
     */
    roles?: pulumi.Input<inputs.hdinsight.InteractiveQueryClusterRoles>;
    /**
     * A `securityProfile` block as defined below. Changing this forces a new resource to be created.
     */
    securityProfile?: pulumi.Input<inputs.hdinsight.InteractiveQueryClusterSecurityProfile>;
    /**
     * The SSH Connectivity Endpoint for this HDInsight Interactive Query Cluster.
     */
    sshEndpoint?: pulumi.Input<string>;
    /**
     * A `storageAccountGen2` block as defined below.
     */
    storageAccountGen2?: pulumi.Input<inputs.hdinsight.InteractiveQueryClusterStorageAccountGen2>;
    /**
     * One or more `storageAccount` block as defined below.
     */
    storageAccounts?: pulumi.Input<pulumi.Input<inputs.hdinsight.InteractiveQueryClusterStorageAccount>[]>;
    /**
     * A map of Tags which should be assigned to this HDInsight Interactive Query Cluster.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Specifies the Tier which should be used for this HDInsight Interactive Query Cluster. Possible values are `Standard` or `Premium`. Changing this forces a new resource to be created.
     */
    tier?: pulumi.Input<string>;
    /**
     * The minimal supported TLS version. Possible values are 1.0, 1.1 or 1.2. Changing this forces a new resource to be created.
     *
     * > **NOTE:** Starting on June 30, 2020, Azure HDInsight will enforce TLS 1.2 or later versions for all HTTPS connections. For more information, see [Azure HDInsight TLS 1.2 Enforcement](https://azure.microsoft.com/en-us/updates/azure-hdinsight-tls-12-enforcement/).
     */
    tlsMinVersion?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a InteractiveQueryCluster resource.
 */
export interface InteractiveQueryClusterArgs {
    /**
     * Specifies the Version of HDInsights which should be used for this Cluster. Changing this forces a new resource to be created.
     */
    clusterVersion: pulumi.Input<string>;
    /**
     * A `componentVersion` block as defined below.
     */
    componentVersion: pulumi.Input<inputs.hdinsight.InteractiveQueryClusterComponentVersion>;
    /**
     * A `computeIsolation` block as defined below.
     */
    computeIsolation?: pulumi.Input<inputs.hdinsight.InteractiveQueryClusterComputeIsolation>;
    /**
     * A `diskEncryption` block as defined below.
     */
    diskEncryptions?: pulumi.Input<pulumi.Input<inputs.hdinsight.InteractiveQueryClusterDiskEncryption>[]>;
    /**
     * Whether encryption in transit is enabled for this Cluster. Changing this forces a new resource to be created.
     */
    encryptionInTransitEnabled?: pulumi.Input<boolean>;
    /**
     * An `extension` block as defined below.
     */
    extension?: pulumi.Input<inputs.hdinsight.InteractiveQueryClusterExtension>;
    /**
     * A `gateway` block as defined below.
     */
    gateway: pulumi.Input<inputs.hdinsight.InteractiveQueryClusterGateway>;
    /**
     * Specifies the Azure Region which this HDInsight Interactive Query Cluster should exist. Changing this forces a new resource to be created.
     */
    location?: pulumi.Input<string>;
    /**
     * A `metastores` block as defined below.
     */
    metastores?: pulumi.Input<inputs.hdinsight.InteractiveQueryClusterMetastores>;
    /**
     * A `monitor` block as defined below.
     */
    monitor?: pulumi.Input<inputs.hdinsight.InteractiveQueryClusterMonitor>;
    /**
     * Specifies the name for this HDInsight Interactive Query Cluster. Changing this forces a new resource to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * A `network` block as defined below.
     */
    network?: pulumi.Input<inputs.hdinsight.InteractiveQueryClusterNetwork>;
    /**
     * Specifies the name of the Resource Group in which this HDInsight Interactive Query Cluster should exist. Changing this forces a new resource to be created.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * A `roles` block as defined below.
     */
    roles: pulumi.Input<inputs.hdinsight.InteractiveQueryClusterRoles>;
    /**
     * A `securityProfile` block as defined below. Changing this forces a new resource to be created.
     */
    securityProfile?: pulumi.Input<inputs.hdinsight.InteractiveQueryClusterSecurityProfile>;
    /**
     * A `storageAccountGen2` block as defined below.
     */
    storageAccountGen2?: pulumi.Input<inputs.hdinsight.InteractiveQueryClusterStorageAccountGen2>;
    /**
     * One or more `storageAccount` block as defined below.
     */
    storageAccounts?: pulumi.Input<pulumi.Input<inputs.hdinsight.InteractiveQueryClusterStorageAccount>[]>;
    /**
     * A map of Tags which should be assigned to this HDInsight Interactive Query Cluster.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Specifies the Tier which should be used for this HDInsight Interactive Query Cluster. Possible values are `Standard` or `Premium`. Changing this forces a new resource to be created.
     */
    tier: pulumi.Input<string>;
    /**
     * The minimal supported TLS version. Possible values are 1.0, 1.1 or 1.2. Changing this forces a new resource to be created.
     *
     * > **NOTE:** Starting on June 30, 2020, Azure HDInsight will enforce TLS 1.2 or later versions for all HTTPS connections. For more information, see [Azure HDInsight TLS 1.2 Enforcement](https://azure.microsoft.com/en-us/updates/azure-hdinsight-tls-12-enforcement/).
     */
    tlsMinVersion?: pulumi.Input<string>;
}
