// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Manages a Front Door (standard/premium) Origin Group.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = new azure.core.ResourceGroup("example", {
 *     name: "example-cdn-frontdoor",
 *     location: "West Europe",
 * });
 * const exampleFrontdoorProfile = new azure.cdn.FrontdoorProfile("example", {
 *     name: "example-profile",
 *     resourceGroupName: example.name,
 *     skuName: "Standard_AzureFrontDoor",
 * });
 * const exampleFrontdoorOriginGroup = new azure.cdn.FrontdoorOriginGroup("example", {
 *     name: "example-origin-group",
 *     cdnFrontdoorProfileId: exampleFrontdoorProfile.id,
 *     sessionAffinityEnabled: true,
 *     restoreTrafficTimeToHealedOrNewEndpointInMinutes: 10,
 *     healthProbe: {
 *         intervalInSeconds: 240,
 *         path: "/healthProbe",
 *         protocol: "Https",
 *         requestType: "HEAD",
 *     },
 *     loadBalancing: {
 *         additionalLatencyInMilliseconds: 0,
 *         sampleSize: 16,
 *         successfulSamplesRequired: 3,
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * Front Door Origin Groups can be imported using the `resource id`, e.g.
 *
 * ```sh
 * $ pulumi import azure:cdn/frontdoorOriginGroup:FrontdoorOriginGroup example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resourceGroup1/providers/Microsoft.Cdn/profiles/profile1/originGroups/originGroup1
 * ```
 */
export class FrontdoorOriginGroup extends pulumi.CustomResource {
    /**
     * Get an existing FrontdoorOriginGroup resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: FrontdoorOriginGroupState, opts?: pulumi.CustomResourceOptions): FrontdoorOriginGroup {
        return new FrontdoorOriginGroup(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure:cdn/frontdoorOriginGroup:FrontdoorOriginGroup';

    /**
     * Returns true if the given object is an instance of FrontdoorOriginGroup.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is FrontdoorOriginGroup {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === FrontdoorOriginGroup.__pulumiType;
    }

    /**
     * The ID of the Front Door Profile within which this Front Door Origin Group should exist. Changing this forces a new Front Door Origin Group to be created.
     */
    declare public readonly cdnFrontdoorProfileId: pulumi.Output<string>;
    /**
     * A `healthProbe` block as defined below.
     */
    declare public readonly healthProbe: pulumi.Output<outputs.cdn.FrontdoorOriginGroupHealthProbe | undefined>;
    /**
     * A `loadBalancing` block as defined below.
     */
    declare public readonly loadBalancing: pulumi.Output<outputs.cdn.FrontdoorOriginGroupLoadBalancing>;
    /**
     * The name which should be used for this Front Door Origin Group. Changing this forces a new Front Door Origin Group to be created.
     */
    declare public readonly name: pulumi.Output<string>;
    /**
     * Specifies the amount of time which should elapse before shifting traffic to another endpoint when a healthy endpoint becomes unhealthy or a new endpoint is added. Possible values are between `0` and `50` minutes (inclusive). Default is `10` minutes.
     *
     * > **Note:** This property is currently not used, but will be in the near future.
     */
    declare public readonly restoreTrafficTimeToHealedOrNewEndpointInMinutes: pulumi.Output<number | undefined>;
    /**
     * Specifies whether session affinity should be enabled on this host. Defaults to `true`.
     */
    declare public readonly sessionAffinityEnabled: pulumi.Output<boolean | undefined>;

    /**
     * Create a FrontdoorOriginGroup resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: FrontdoorOriginGroupArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: FrontdoorOriginGroupArgs | FrontdoorOriginGroupState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as FrontdoorOriginGroupState | undefined;
            resourceInputs["cdnFrontdoorProfileId"] = state?.cdnFrontdoorProfileId;
            resourceInputs["healthProbe"] = state?.healthProbe;
            resourceInputs["loadBalancing"] = state?.loadBalancing;
            resourceInputs["name"] = state?.name;
            resourceInputs["restoreTrafficTimeToHealedOrNewEndpointInMinutes"] = state?.restoreTrafficTimeToHealedOrNewEndpointInMinutes;
            resourceInputs["sessionAffinityEnabled"] = state?.sessionAffinityEnabled;
        } else {
            const args = argsOrState as FrontdoorOriginGroupArgs | undefined;
            if (args?.cdnFrontdoorProfileId === undefined && !opts.urn) {
                throw new Error("Missing required property 'cdnFrontdoorProfileId'");
            }
            if (args?.loadBalancing === undefined && !opts.urn) {
                throw new Error("Missing required property 'loadBalancing'");
            }
            resourceInputs["cdnFrontdoorProfileId"] = args?.cdnFrontdoorProfileId;
            resourceInputs["healthProbe"] = args?.healthProbe;
            resourceInputs["loadBalancing"] = args?.loadBalancing;
            resourceInputs["name"] = args?.name;
            resourceInputs["restoreTrafficTimeToHealedOrNewEndpointInMinutes"] = args?.restoreTrafficTimeToHealedOrNewEndpointInMinutes;
            resourceInputs["sessionAffinityEnabled"] = args?.sessionAffinityEnabled;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(FrontdoorOriginGroup.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering FrontdoorOriginGroup resources.
 */
export interface FrontdoorOriginGroupState {
    /**
     * The ID of the Front Door Profile within which this Front Door Origin Group should exist. Changing this forces a new Front Door Origin Group to be created.
     */
    cdnFrontdoorProfileId?: pulumi.Input<string>;
    /**
     * A `healthProbe` block as defined below.
     */
    healthProbe?: pulumi.Input<inputs.cdn.FrontdoorOriginGroupHealthProbe>;
    /**
     * A `loadBalancing` block as defined below.
     */
    loadBalancing?: pulumi.Input<inputs.cdn.FrontdoorOriginGroupLoadBalancing>;
    /**
     * The name which should be used for this Front Door Origin Group. Changing this forces a new Front Door Origin Group to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * Specifies the amount of time which should elapse before shifting traffic to another endpoint when a healthy endpoint becomes unhealthy or a new endpoint is added. Possible values are between `0` and `50` minutes (inclusive). Default is `10` minutes.
     *
     * > **Note:** This property is currently not used, but will be in the near future.
     */
    restoreTrafficTimeToHealedOrNewEndpointInMinutes?: pulumi.Input<number>;
    /**
     * Specifies whether session affinity should be enabled on this host. Defaults to `true`.
     */
    sessionAffinityEnabled?: pulumi.Input<boolean>;
}

/**
 * The set of arguments for constructing a FrontdoorOriginGroup resource.
 */
export interface FrontdoorOriginGroupArgs {
    /**
     * The ID of the Front Door Profile within which this Front Door Origin Group should exist. Changing this forces a new Front Door Origin Group to be created.
     */
    cdnFrontdoorProfileId: pulumi.Input<string>;
    /**
     * A `healthProbe` block as defined below.
     */
    healthProbe?: pulumi.Input<inputs.cdn.FrontdoorOriginGroupHealthProbe>;
    /**
     * A `loadBalancing` block as defined below.
     */
    loadBalancing: pulumi.Input<inputs.cdn.FrontdoorOriginGroupLoadBalancing>;
    /**
     * The name which should be used for this Front Door Origin Group. Changing this forces a new Front Door Origin Group to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * Specifies the amount of time which should elapse before shifting traffic to another endpoint when a healthy endpoint becomes unhealthy or a new endpoint is added. Possible values are between `0` and `50` minutes (inclusive). Default is `10` minutes.
     *
     * > **Note:** This property is currently not used, but will be in the near future.
     */
    restoreTrafficTimeToHealedOrNewEndpointInMinutes?: pulumi.Input<number>;
    /**
     * Specifies whether session affinity should be enabled on this host. Defaults to `true`.
     */
    sessionAffinityEnabled?: pulumi.Input<boolean>;
}
