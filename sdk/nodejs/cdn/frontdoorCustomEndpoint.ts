// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const exampleResourceGroup = new azure.core.ResourceGroup("exampleResourceGroup", {location: "West Europe"});
 * const exampleZone = new azure.dns.Zone("exampleZone", {resourceGroupName: azurerm_resource_group.test.name});
 * const exampleFrontdoorProfile = new azure.cdn.FrontdoorProfile("exampleFrontdoorProfile", {resourceGroupName: exampleResourceGroup.name});
 * const exampleFrontdoorCustomEndpoint = new azure.cdn.FrontdoorCustomEndpoint("exampleFrontdoorCustomEndpoint", {
 *     cdnFrontdoorProfileId: exampleFrontdoorProfile.id,
 *     dnsZoneId: exampleZone.id,
 *     hostName: "contoso.com",
 *     associateWithCdnFrontdoorRouteId: azurerm_cdn_frontdoor_route.example.id,
 *     tls: {
 *         certificateType: "ManagedCertificate",
 *         minimumTlsVersion: "TLS12",
 *     },
 * });
 * ```
 * ## Example CNAME Record Usage
 *
 * !>**IMPORTANT:** You **must** include the `dependsOn` meta-argument which references both the `azure.cdn.FrontdoorRoute` and the `azure.cdn.FrontdoorSecurityPolicy` that are associated with your Custom Domain. The reason for these `dependsOn` meta-arguments is because all of the resources for the Custom Domain need to be associated within FrontDoor before the CNAME record can be written to the domains DNS, else the CNAME validation will fail and FrontDoor will not enable traffic to the Domain.
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = new azure.dns.CNameRecord("example", {
 *     zoneName: azurerm_dns_zone.example.name,
 *     resourceGroupName: azurerm_resource_group.example.name,
 *     ttl: 3600,
 *     record: azurerm_cdn_frontdoor_endpoint.example.host_name,
 * }, {
 *     dependsOn: [
 *         azurerm_cdn_frontdoor_route.example,
 *         azurerm_cdn_frontdoor_security_policy.example,
 *     ],
 * });
 * ```
 *
 * ## Import
 *
 * CDN FrontDoor Custom Domains can be imported using the `resource id`, e.g.
 *
 * ```sh
 *  $ pulumi import azure:cdn/frontdoorCustomEndpoint:FrontdoorCustomEndpoint example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resourceGroup1/providers/Microsoft.Cdn/profiles/profile1/customDomains/customDomain1
 * ```
 */
export class FrontdoorCustomEndpoint extends pulumi.CustomResource {
    /**
     * Get an existing FrontdoorCustomEndpoint resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: FrontdoorCustomEndpointState, opts?: pulumi.CustomResourceOptions): FrontdoorCustomEndpoint {
        return new FrontdoorCustomEndpoint(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure:cdn/frontdoorCustomEndpoint:FrontdoorCustomEndpoint';

    /**
     * Returns true if the given object is an instance of FrontdoorCustomEndpoint.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is FrontdoorCustomEndpoint {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === FrontdoorCustomEndpoint.__pulumiType;
    }

    /**
     * The resource ID of the CDN FrontDoor Route this Custom Domain should be associated with.
     */
    public readonly associateWithCdnFrontdoorRouteId!: pulumi.Output<string | undefined>;
    /**
     * The ID of the Frontdoor Profile. Changing this forces a new Frontdoor Profile to be created.
     */
    public readonly cdnFrontdoorProfileId!: pulumi.Output<string>;
    /**
     * The ID of the DNS Zone which should be used for this FrontDoor Custom Domain.
     */
    public readonly dnsZoneId!: pulumi.Output<string | undefined>;
    /**
     * The date time that the token expires.
     */
    public /*out*/ readonly expirationDate!: pulumi.Output<string>;
    /**
     * The host name of the domain. Changing this forces a new CDN FrontDoor Custom Domain to be created.
     */
    public readonly hostName!: pulumi.Output<string>;
    /**
     * The name which should be used for this CDN FrontDoor Custom Domain. Possible values must be between 2 and 260 characters in length, must begin with a letter or number, end with a letter or number and contain only letters, numbers and hyphens. Changing this forces a new CDN FrontDoor Custom Domain to be created.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * A `tls` block as defined below.
     */
    public readonly tls!: pulumi.Output<outputs.cdn.FrontdoorCustomEndpointTls>;
    /**
     * Challenge used for DNS TXT record or file based validation.
     */
    public /*out*/ readonly validationToken!: pulumi.Output<string>;

    /**
     * Create a FrontdoorCustomEndpoint resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: FrontdoorCustomEndpointArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: FrontdoorCustomEndpointArgs | FrontdoorCustomEndpointState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as FrontdoorCustomEndpointState | undefined;
            resourceInputs["associateWithCdnFrontdoorRouteId"] = state ? state.associateWithCdnFrontdoorRouteId : undefined;
            resourceInputs["cdnFrontdoorProfileId"] = state ? state.cdnFrontdoorProfileId : undefined;
            resourceInputs["dnsZoneId"] = state ? state.dnsZoneId : undefined;
            resourceInputs["expirationDate"] = state ? state.expirationDate : undefined;
            resourceInputs["hostName"] = state ? state.hostName : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["tls"] = state ? state.tls : undefined;
            resourceInputs["validationToken"] = state ? state.validationToken : undefined;
        } else {
            const args = argsOrState as FrontdoorCustomEndpointArgs | undefined;
            if ((!args || args.cdnFrontdoorProfileId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'cdnFrontdoorProfileId'");
            }
            if ((!args || args.hostName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'hostName'");
            }
            if ((!args || args.tls === undefined) && !opts.urn) {
                throw new Error("Missing required property 'tls'");
            }
            resourceInputs["associateWithCdnFrontdoorRouteId"] = args ? args.associateWithCdnFrontdoorRouteId : undefined;
            resourceInputs["cdnFrontdoorProfileId"] = args ? args.cdnFrontdoorProfileId : undefined;
            resourceInputs["dnsZoneId"] = args ? args.dnsZoneId : undefined;
            resourceInputs["hostName"] = args ? args.hostName : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["tls"] = args ? args.tls : undefined;
            resourceInputs["expirationDate"] = undefined /*out*/;
            resourceInputs["validationToken"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(FrontdoorCustomEndpoint.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering FrontdoorCustomEndpoint resources.
 */
export interface FrontdoorCustomEndpointState {
    /**
     * The resource ID of the CDN FrontDoor Route this Custom Domain should be associated with.
     */
    associateWithCdnFrontdoorRouteId?: pulumi.Input<string>;
    /**
     * The ID of the Frontdoor Profile. Changing this forces a new Frontdoor Profile to be created.
     */
    cdnFrontdoorProfileId?: pulumi.Input<string>;
    /**
     * The ID of the DNS Zone which should be used for this FrontDoor Custom Domain.
     */
    dnsZoneId?: pulumi.Input<string>;
    /**
     * The date time that the token expires.
     */
    expirationDate?: pulumi.Input<string>;
    /**
     * The host name of the domain. Changing this forces a new CDN FrontDoor Custom Domain to be created.
     */
    hostName?: pulumi.Input<string>;
    /**
     * The name which should be used for this CDN FrontDoor Custom Domain. Possible values must be between 2 and 260 characters in length, must begin with a letter or number, end with a letter or number and contain only letters, numbers and hyphens. Changing this forces a new CDN FrontDoor Custom Domain to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * A `tls` block as defined below.
     */
    tls?: pulumi.Input<inputs.cdn.FrontdoorCustomEndpointTls>;
    /**
     * Challenge used for DNS TXT record or file based validation.
     */
    validationToken?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a FrontdoorCustomEndpoint resource.
 */
export interface FrontdoorCustomEndpointArgs {
    /**
     * The resource ID of the CDN FrontDoor Route this Custom Domain should be associated with.
     */
    associateWithCdnFrontdoorRouteId?: pulumi.Input<string>;
    /**
     * The ID of the Frontdoor Profile. Changing this forces a new Frontdoor Profile to be created.
     */
    cdnFrontdoorProfileId: pulumi.Input<string>;
    /**
     * The ID of the DNS Zone which should be used for this FrontDoor Custom Domain.
     */
    dnsZoneId?: pulumi.Input<string>;
    /**
     * The host name of the domain. Changing this forces a new CDN FrontDoor Custom Domain to be created.
     */
    hostName: pulumi.Input<string>;
    /**
     * The name which should be used for this CDN FrontDoor Custom Domain. Possible values must be between 2 and 260 characters in length, must begin with a letter or number, end with a letter or number and contain only letters, numbers and hyphens. Changing this forces a new CDN FrontDoor Custom Domain to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * A `tls` block as defined below.
     */
    tls: pulumi.Input<inputs.cdn.FrontdoorCustomEndpointTls>;
}
