// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Manages a Front Door (standard/premium) Route.
 *
 * ## Import
 *
 * Front Door Routes can be imported using the `resource id`, e.g.
 *
 * ```sh
 *  $ pulumi import azure:cdn/frontdoorRoute:FrontdoorRoute example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resourceGroup1/providers/Microsoft.Cdn/profiles/profile1/afdEndpoints/endpoint1/routes/route1
 * ```
 */
export class FrontdoorRoute extends pulumi.CustomResource {
    /**
     * Get an existing FrontdoorRoute resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: FrontdoorRouteState, opts?: pulumi.CustomResourceOptions): FrontdoorRoute {
        return new FrontdoorRoute(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure:cdn/frontdoorRoute:FrontdoorRoute';

    /**
     * Returns true if the given object is an instance of FrontdoorRoute.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is FrontdoorRoute {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === FrontdoorRoute.__pulumiType;
    }

    /**
     * A `cache` block as defined below.
     *
     * > **NOTE:** To disable caching, do not provide the `cache` block in the configuration file.
     */
    public readonly cache!: pulumi.Output<outputs.cdn.FrontdoorRouteCache | undefined>;
    /**
     * The IDs of the Front Door Custom Domains which are associated with this Front Door Route.
     */
    public readonly cdnFrontdoorCustomDomainIds!: pulumi.Output<string[] | undefined>;
    /**
     * The resource ID of the Front Door Endpoint where this Front Door Route should exist. Changing this forces a new Front Door Route to be created.
     */
    public readonly cdnFrontdoorEndpointId!: pulumi.Output<string>;
    /**
     * The resource ID of the Front Door Origin Group where this Front Door Route should be created.
     */
    public readonly cdnFrontdoorOriginGroupId!: pulumi.Output<string>;
    /**
     * One or more Front Door Origin resource IDs that this Front Door Route will link to.
     */
    public readonly cdnFrontdoorOriginIds!: pulumi.Output<string[]>;
    /**
     * A directory path on the Front Door Origin that can be used to retrieve content (e.g. `contoso.cloudapp.net/originpath`).
     */
    public readonly cdnFrontdoorOriginPath!: pulumi.Output<string | undefined>;
    /**
     * A list of the Front Door Rule Set IDs which should be assigned to this Front Door Route.
     */
    public readonly cdnFrontdoorRuleSetIds!: pulumi.Output<string[] | undefined>;
    /**
     * Is this Front Door Route enabled? Possible values are `true` or `false`. Defaults to `true`.
     */
    public readonly enabled!: pulumi.Output<boolean | undefined>;
    /**
     * The Protocol that will be use when forwarding traffic to backends. Possible values are `HttpOnly`, `HttpsOnly` or `MatchRequest`. Defaults to `MatchRequest`.
     */
    public readonly forwardingProtocol!: pulumi.Output<string | undefined>;
    /**
     * Automatically redirect HTTP traffic to HTTPS traffic? Possible values are `true` or `false`. Defaults to `true`.
     *
     * > **NOTE:** The `httpsRedirectEnabled` rule is the first rule that will be executed.
     */
    public readonly httpsRedirectEnabled!: pulumi.Output<boolean | undefined>;
    /**
     * Should this Front Door Route be linked to the default endpoint? Possible values include `true` or `false`. Defaults to `true`.
     */
    public readonly linkToDefaultDomain!: pulumi.Output<boolean | undefined>;
    /**
     * The name which should be used for this Front Door Route. Valid values must begin with a letter or number, end with a letter or number and may only contain letters, numbers and hyphens with a maximum length of 90 characters. Changing this forces a new Front Door Route to be created.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The route patterns of the rule.
     */
    public readonly patternsToMatches!: pulumi.Output<string[]>;
    /**
     * One or more Protocols supported by this Front Door Route. Possible values are `Http` or `Https`.
     *
     * > **NOTE:** If `httpsRedirectEnabled` is set to `true` the `supportedProtocols` field must contain both `Http` and `Https` values.
     */
    public readonly supportedProtocols!: pulumi.Output<string[]>;

    /**
     * Create a FrontdoorRoute resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: FrontdoorRouteArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: FrontdoorRouteArgs | FrontdoorRouteState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as FrontdoorRouteState | undefined;
            resourceInputs["cache"] = state ? state.cache : undefined;
            resourceInputs["cdnFrontdoorCustomDomainIds"] = state ? state.cdnFrontdoorCustomDomainIds : undefined;
            resourceInputs["cdnFrontdoorEndpointId"] = state ? state.cdnFrontdoorEndpointId : undefined;
            resourceInputs["cdnFrontdoorOriginGroupId"] = state ? state.cdnFrontdoorOriginGroupId : undefined;
            resourceInputs["cdnFrontdoorOriginIds"] = state ? state.cdnFrontdoorOriginIds : undefined;
            resourceInputs["cdnFrontdoorOriginPath"] = state ? state.cdnFrontdoorOriginPath : undefined;
            resourceInputs["cdnFrontdoorRuleSetIds"] = state ? state.cdnFrontdoorRuleSetIds : undefined;
            resourceInputs["enabled"] = state ? state.enabled : undefined;
            resourceInputs["forwardingProtocol"] = state ? state.forwardingProtocol : undefined;
            resourceInputs["httpsRedirectEnabled"] = state ? state.httpsRedirectEnabled : undefined;
            resourceInputs["linkToDefaultDomain"] = state ? state.linkToDefaultDomain : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["patternsToMatches"] = state ? state.patternsToMatches : undefined;
            resourceInputs["supportedProtocols"] = state ? state.supportedProtocols : undefined;
        } else {
            const args = argsOrState as FrontdoorRouteArgs | undefined;
            if ((!args || args.cdnFrontdoorEndpointId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'cdnFrontdoorEndpointId'");
            }
            if ((!args || args.cdnFrontdoorOriginGroupId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'cdnFrontdoorOriginGroupId'");
            }
            if ((!args || args.cdnFrontdoorOriginIds === undefined) && !opts.urn) {
                throw new Error("Missing required property 'cdnFrontdoorOriginIds'");
            }
            if ((!args || args.patternsToMatches === undefined) && !opts.urn) {
                throw new Error("Missing required property 'patternsToMatches'");
            }
            if ((!args || args.supportedProtocols === undefined) && !opts.urn) {
                throw new Error("Missing required property 'supportedProtocols'");
            }
            resourceInputs["cache"] = args ? args.cache : undefined;
            resourceInputs["cdnFrontdoorCustomDomainIds"] = args ? args.cdnFrontdoorCustomDomainIds : undefined;
            resourceInputs["cdnFrontdoorEndpointId"] = args ? args.cdnFrontdoorEndpointId : undefined;
            resourceInputs["cdnFrontdoorOriginGroupId"] = args ? args.cdnFrontdoorOriginGroupId : undefined;
            resourceInputs["cdnFrontdoorOriginIds"] = args ? args.cdnFrontdoorOriginIds : undefined;
            resourceInputs["cdnFrontdoorOriginPath"] = args ? args.cdnFrontdoorOriginPath : undefined;
            resourceInputs["cdnFrontdoorRuleSetIds"] = args ? args.cdnFrontdoorRuleSetIds : undefined;
            resourceInputs["enabled"] = args ? args.enabled : undefined;
            resourceInputs["forwardingProtocol"] = args ? args.forwardingProtocol : undefined;
            resourceInputs["httpsRedirectEnabled"] = args ? args.httpsRedirectEnabled : undefined;
            resourceInputs["linkToDefaultDomain"] = args ? args.linkToDefaultDomain : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["patternsToMatches"] = args ? args.patternsToMatches : undefined;
            resourceInputs["supportedProtocols"] = args ? args.supportedProtocols : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(FrontdoorRoute.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering FrontdoorRoute resources.
 */
export interface FrontdoorRouteState {
    /**
     * A `cache` block as defined below.
     *
     * > **NOTE:** To disable caching, do not provide the `cache` block in the configuration file.
     */
    cache?: pulumi.Input<inputs.cdn.FrontdoorRouteCache>;
    /**
     * The IDs of the Front Door Custom Domains which are associated with this Front Door Route.
     */
    cdnFrontdoorCustomDomainIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The resource ID of the Front Door Endpoint where this Front Door Route should exist. Changing this forces a new Front Door Route to be created.
     */
    cdnFrontdoorEndpointId?: pulumi.Input<string>;
    /**
     * The resource ID of the Front Door Origin Group where this Front Door Route should be created.
     */
    cdnFrontdoorOriginGroupId?: pulumi.Input<string>;
    /**
     * One or more Front Door Origin resource IDs that this Front Door Route will link to.
     */
    cdnFrontdoorOriginIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A directory path on the Front Door Origin that can be used to retrieve content (e.g. `contoso.cloudapp.net/originpath`).
     */
    cdnFrontdoorOriginPath?: pulumi.Input<string>;
    /**
     * A list of the Front Door Rule Set IDs which should be assigned to this Front Door Route.
     */
    cdnFrontdoorRuleSetIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Is this Front Door Route enabled? Possible values are `true` or `false`. Defaults to `true`.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * The Protocol that will be use when forwarding traffic to backends. Possible values are `HttpOnly`, `HttpsOnly` or `MatchRequest`. Defaults to `MatchRequest`.
     */
    forwardingProtocol?: pulumi.Input<string>;
    /**
     * Automatically redirect HTTP traffic to HTTPS traffic? Possible values are `true` or `false`. Defaults to `true`.
     *
     * > **NOTE:** The `httpsRedirectEnabled` rule is the first rule that will be executed.
     */
    httpsRedirectEnabled?: pulumi.Input<boolean>;
    /**
     * Should this Front Door Route be linked to the default endpoint? Possible values include `true` or `false`. Defaults to `true`.
     */
    linkToDefaultDomain?: pulumi.Input<boolean>;
    /**
     * The name which should be used for this Front Door Route. Valid values must begin with a letter or number, end with a letter or number and may only contain letters, numbers and hyphens with a maximum length of 90 characters. Changing this forces a new Front Door Route to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * The route patterns of the rule.
     */
    patternsToMatches?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * One or more Protocols supported by this Front Door Route. Possible values are `Http` or `Https`.
     *
     * > **NOTE:** If `httpsRedirectEnabled` is set to `true` the `supportedProtocols` field must contain both `Http` and `Https` values.
     */
    supportedProtocols?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * The set of arguments for constructing a FrontdoorRoute resource.
 */
export interface FrontdoorRouteArgs {
    /**
     * A `cache` block as defined below.
     *
     * > **NOTE:** To disable caching, do not provide the `cache` block in the configuration file.
     */
    cache?: pulumi.Input<inputs.cdn.FrontdoorRouteCache>;
    /**
     * The IDs of the Front Door Custom Domains which are associated with this Front Door Route.
     */
    cdnFrontdoorCustomDomainIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The resource ID of the Front Door Endpoint where this Front Door Route should exist. Changing this forces a new Front Door Route to be created.
     */
    cdnFrontdoorEndpointId: pulumi.Input<string>;
    /**
     * The resource ID of the Front Door Origin Group where this Front Door Route should be created.
     */
    cdnFrontdoorOriginGroupId: pulumi.Input<string>;
    /**
     * One or more Front Door Origin resource IDs that this Front Door Route will link to.
     */
    cdnFrontdoorOriginIds: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A directory path on the Front Door Origin that can be used to retrieve content (e.g. `contoso.cloudapp.net/originpath`).
     */
    cdnFrontdoorOriginPath?: pulumi.Input<string>;
    /**
     * A list of the Front Door Rule Set IDs which should be assigned to this Front Door Route.
     */
    cdnFrontdoorRuleSetIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Is this Front Door Route enabled? Possible values are `true` or `false`. Defaults to `true`.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * The Protocol that will be use when forwarding traffic to backends. Possible values are `HttpOnly`, `HttpsOnly` or `MatchRequest`. Defaults to `MatchRequest`.
     */
    forwardingProtocol?: pulumi.Input<string>;
    /**
     * Automatically redirect HTTP traffic to HTTPS traffic? Possible values are `true` or `false`. Defaults to `true`.
     *
     * > **NOTE:** The `httpsRedirectEnabled` rule is the first rule that will be executed.
     */
    httpsRedirectEnabled?: pulumi.Input<boolean>;
    /**
     * Should this Front Door Route be linked to the default endpoint? Possible values include `true` or `false`. Defaults to `true`.
     */
    linkToDefaultDomain?: pulumi.Input<boolean>;
    /**
     * The name which should be used for this Front Door Route. Valid values must begin with a letter or number, end with a letter or number and may only contain letters, numbers and hyphens with a maximum length of 90 characters. Changing this forces a new Front Door Route to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * The route patterns of the rule.
     */
    patternsToMatches: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * One or more Protocols supported by this Front Door Route. Possible values are `Http` or `Https`.
     *
     * > **NOTE:** If `httpsRedirectEnabled` is set to `true` the `supportedProtocols` field must contain both `Http` and `Https` values.
     */
    supportedProtocols: pulumi.Input<pulumi.Input<string>[]>;
}
