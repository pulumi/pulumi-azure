// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { GetRecommendationsArgs, GetRecommendationsResult, GetRecommendationsOutputArgs } from "./getRecommendations";
export const getRecommendations: typeof import("./getRecommendations").getRecommendations = null as any;
export const getRecommendationsOutput: typeof import("./getRecommendations").getRecommendationsOutput = null as any;
utilities.lazyLoad(exports, ["getRecommendations","getRecommendationsOutput"], () => require("./getRecommendations"));

export { SuppressionArgs, SuppressionState } from "./suppression";
export type Suppression = import("./suppression").Suppression;
export const Suppression: typeof import("./suppression").Suppression = null as any;
utilities.lazyLoad(exports, ["Suppression"], () => require("./suppression"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "azure:advisor/suppression:Suppression":
                return new Suppression(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure", "advisor/suppression", _module)
