// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Manages a Resource Management Private Link Association.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 * import * as random from "@pulumi/random";
 *
 * const exampleClientConfig = azure.core.getClientConfig({});
 * const exampleGroup = exampleClientConfig.then(exampleClientConfig => azure.management.getGroup({
 *     name: exampleClientConfig.tenantId,
 * }));
 * const exampleResourceGroup = new azure.core.ResourceGroup("exampleResourceGroup", {location: "West Europe"});
 * const examplePrivateLink = new azure.management.PrivateLink("examplePrivateLink", {
 *     resourceGroupName: exampleResourceGroup.name,
 *     location: exampleResourceGroup.location,
 * });
 * const exampleRandomUuid = new random.RandomUuid("exampleRandomUuid", {});
 * const examplePrivateLinkAssociation = new azure.management.PrivateLinkAssociation("examplePrivateLinkAssociation", {
 *     managementGroupId: azurerm_management_group.example.id,
 *     resourceManagementPrivateLinkId: examplePrivateLink.id,
 *     publicNetworkAccessEnabled: true,
 * });
 * ```
 *
 * ## Import
 *
 * An existing Private Link Association can be imported into Terraform using the `resource id`, e.g.
 *
 * ```sh
 *  $ pulumi import azure:management/privateLinkAssociation:PrivateLinkAssociation example /providers/Microsoft.Management/managementGroups/00000000-0000-0000-0000-000000000000/providers/Microsoft.Authorization/privateLinkAssociations/00000000-0000-0000-0000-000000000000
 * ```
 */
export class PrivateLinkAssociation extends pulumi.CustomResource {
    /**
     * Get an existing PrivateLinkAssociation resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: PrivateLinkAssociationState, opts?: pulumi.CustomResourceOptions): PrivateLinkAssociation {
        return new PrivateLinkAssociation(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure:management/privateLinkAssociation:PrivateLinkAssociation';

    /**
     * Returns true if the given object is an instance of PrivateLinkAssociation.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is PrivateLinkAssociation {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === PrivateLinkAssociation.__pulumiType;
    }

    /**
     * Specifies the Management Group ID within which this Private Link Association should exist. Changing this forces a new Private Link Association to be created.
     *
     * > **Note:** For now, `managementGroupId` must be the ID of [Root Management Group](https://learn.microsoft.com/en-us/azure/governance/management-groups/overview#root-management-group-for-each-directory).
     */
    public readonly managementGroupId!: pulumi.Output<string>;
    /**
     * Specifies the name of this Private Link Association, which should be a UUID. If `name` is not provided, a UUID will be generated, you should use the `ignoreChanges` attribute to ignore changes to this field. Changing this forces a new Private Link Association to be created.
     *
     * ```typescript
     * import * as pulumi from "@pulumi/pulumi";
     * import * as azure from "@pulumi/azure";
     *
     * const example = new azure.management.PrivateLinkAssociation("example", {
     *     managementGroupId: azurerm_management_group.example.id,
     *     resourceManagementPrivateLinkId: azurerm_resource_management_private_link.example.id,
     *     publicNetworkAccessEnabled: true,
     * });
     * ```
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Whether public network access is allowed. Changing this forces a new Private Link Association to be created.
     */
    public readonly publicNetworkAccessEnabled!: pulumi.Output<boolean>;
    /**
     * The Resource ID of Resource Management Private Link. Changing this forces a new Private Link Association to be created.
     */
    public readonly resourceManagementPrivateLinkId!: pulumi.Output<string>;
    /**
     * The Tenant ID.
     */
    public /*out*/ readonly tenantId!: pulumi.Output<string>;

    /**
     * Create a PrivateLinkAssociation resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: PrivateLinkAssociationArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: PrivateLinkAssociationArgs | PrivateLinkAssociationState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as PrivateLinkAssociationState | undefined;
            resourceInputs["managementGroupId"] = state ? state.managementGroupId : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["publicNetworkAccessEnabled"] = state ? state.publicNetworkAccessEnabled : undefined;
            resourceInputs["resourceManagementPrivateLinkId"] = state ? state.resourceManagementPrivateLinkId : undefined;
            resourceInputs["tenantId"] = state ? state.tenantId : undefined;
        } else {
            const args = argsOrState as PrivateLinkAssociationArgs | undefined;
            if ((!args || args.managementGroupId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'managementGroupId'");
            }
            if ((!args || args.publicNetworkAccessEnabled === undefined) && !opts.urn) {
                throw new Error("Missing required property 'publicNetworkAccessEnabled'");
            }
            if ((!args || args.resourceManagementPrivateLinkId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceManagementPrivateLinkId'");
            }
            resourceInputs["managementGroupId"] = args ? args.managementGroupId : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["publicNetworkAccessEnabled"] = args ? args.publicNetworkAccessEnabled : undefined;
            resourceInputs["resourceManagementPrivateLinkId"] = args ? args.resourceManagementPrivateLinkId : undefined;
            resourceInputs["tenantId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(PrivateLinkAssociation.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering PrivateLinkAssociation resources.
 */
export interface PrivateLinkAssociationState {
    /**
     * Specifies the Management Group ID within which this Private Link Association should exist. Changing this forces a new Private Link Association to be created.
     *
     * > **Note:** For now, `managementGroupId` must be the ID of [Root Management Group](https://learn.microsoft.com/en-us/azure/governance/management-groups/overview#root-management-group-for-each-directory).
     */
    managementGroupId?: pulumi.Input<string>;
    /**
     * Specifies the name of this Private Link Association, which should be a UUID. If `name` is not provided, a UUID will be generated, you should use the `ignoreChanges` attribute to ignore changes to this field. Changing this forces a new Private Link Association to be created.
     *
     * ```typescript
     * import * as pulumi from "@pulumi/pulumi";
     * import * as azure from "@pulumi/azure";
     *
     * const example = new azure.management.PrivateLinkAssociation("example", {
     *     managementGroupId: azurerm_management_group.example.id,
     *     resourceManagementPrivateLinkId: azurerm_resource_management_private_link.example.id,
     *     publicNetworkAccessEnabled: true,
     * });
     * ```
     */
    name?: pulumi.Input<string>;
    /**
     * Whether public network access is allowed. Changing this forces a new Private Link Association to be created.
     */
    publicNetworkAccessEnabled?: pulumi.Input<boolean>;
    /**
     * The Resource ID of Resource Management Private Link. Changing this forces a new Private Link Association to be created.
     */
    resourceManagementPrivateLinkId?: pulumi.Input<string>;
    /**
     * The Tenant ID.
     */
    tenantId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a PrivateLinkAssociation resource.
 */
export interface PrivateLinkAssociationArgs {
    /**
     * Specifies the Management Group ID within which this Private Link Association should exist. Changing this forces a new Private Link Association to be created.
     *
     * > **Note:** For now, `managementGroupId` must be the ID of [Root Management Group](https://learn.microsoft.com/en-us/azure/governance/management-groups/overview#root-management-group-for-each-directory).
     */
    managementGroupId: pulumi.Input<string>;
    /**
     * Specifies the name of this Private Link Association, which should be a UUID. If `name` is not provided, a UUID will be generated, you should use the `ignoreChanges` attribute to ignore changes to this field. Changing this forces a new Private Link Association to be created.
     *
     * ```typescript
     * import * as pulumi from "@pulumi/pulumi";
     * import * as azure from "@pulumi/azure";
     *
     * const example = new azure.management.PrivateLinkAssociation("example", {
     *     managementGroupId: azurerm_management_group.example.id,
     *     resourceManagementPrivateLinkId: azurerm_resource_management_private_link.example.id,
     *     publicNetworkAccessEnabled: true,
     * });
     * ```
     */
    name?: pulumi.Input<string>;
    /**
     * Whether public network access is allowed. Changing this forces a new Private Link Association to be created.
     */
    publicNetworkAccessEnabled: pulumi.Input<boolean>;
    /**
     * The Resource ID of Resource Management Private Link. Changing this forces a new Private Link Association to be created.
     */
    resourceManagementPrivateLinkId: pulumi.Input<string>;
}
