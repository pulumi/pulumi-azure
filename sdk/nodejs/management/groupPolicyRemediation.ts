// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

export class GroupPolicyRemediation extends pulumi.CustomResource {
    /**
     * Get an existing GroupPolicyRemediation resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: GroupPolicyRemediationState, opts?: pulumi.CustomResourceOptions): GroupPolicyRemediation {
        return new GroupPolicyRemediation(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure:management/groupPolicyRemediation:GroupPolicyRemediation';

    /**
     * Returns true if the given object is an instance of GroupPolicyRemediation.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is GroupPolicyRemediation {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === GroupPolicyRemediation.__pulumiType;
    }

    public readonly failurePercentage!: pulumi.Output<number | undefined>;
    public readonly locationFilters!: pulumi.Output<string[] | undefined>;
    public readonly managementGroupId!: pulumi.Output<string>;
    public readonly name!: pulumi.Output<string>;
    public readonly parallelDeployments!: pulumi.Output<number | undefined>;
    public readonly policyAssignmentId!: pulumi.Output<string>;
    public readonly policyDefinitionId!: pulumi.Output<string | undefined>;
    public readonly resourceCount!: pulumi.Output<number | undefined>;
    /**
     * @deprecated `resource_discovery_mode` will be removed in version 4.0 of the AzureRM Provider as evaluating compliance before remediation is only supported at subscription scope and below.
     */
    public readonly resourceDiscoveryMode!: pulumi.Output<string | undefined>;

    /**
     * Create a GroupPolicyRemediation resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: GroupPolicyRemediationArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: GroupPolicyRemediationArgs | GroupPolicyRemediationState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as GroupPolicyRemediationState | undefined;
            resourceInputs["failurePercentage"] = state ? state.failurePercentage : undefined;
            resourceInputs["locationFilters"] = state ? state.locationFilters : undefined;
            resourceInputs["managementGroupId"] = state ? state.managementGroupId : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["parallelDeployments"] = state ? state.parallelDeployments : undefined;
            resourceInputs["policyAssignmentId"] = state ? state.policyAssignmentId : undefined;
            resourceInputs["policyDefinitionId"] = state ? state.policyDefinitionId : undefined;
            resourceInputs["resourceCount"] = state ? state.resourceCount : undefined;
            resourceInputs["resourceDiscoveryMode"] = state ? state.resourceDiscoveryMode : undefined;
        } else {
            const args = argsOrState as GroupPolicyRemediationArgs | undefined;
            if ((!args || args.managementGroupId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'managementGroupId'");
            }
            if ((!args || args.policyAssignmentId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'policyAssignmentId'");
            }
            resourceInputs["failurePercentage"] = args ? args.failurePercentage : undefined;
            resourceInputs["locationFilters"] = args ? args.locationFilters : undefined;
            resourceInputs["managementGroupId"] = args ? args.managementGroupId : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["parallelDeployments"] = args ? args.parallelDeployments : undefined;
            resourceInputs["policyAssignmentId"] = args ? args.policyAssignmentId : undefined;
            resourceInputs["policyDefinitionId"] = args ? args.policyDefinitionId : undefined;
            resourceInputs["resourceCount"] = args ? args.resourceCount : undefined;
            resourceInputs["resourceDiscoveryMode"] = args ? args.resourceDiscoveryMode : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(GroupPolicyRemediation.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering GroupPolicyRemediation resources.
 */
export interface GroupPolicyRemediationState {
    failurePercentage?: pulumi.Input<number>;
    locationFilters?: pulumi.Input<pulumi.Input<string>[]>;
    managementGroupId?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    parallelDeployments?: pulumi.Input<number>;
    policyAssignmentId?: pulumi.Input<string>;
    policyDefinitionId?: pulumi.Input<string>;
    resourceCount?: pulumi.Input<number>;
    /**
     * @deprecated `resource_discovery_mode` will be removed in version 4.0 of the AzureRM Provider as evaluating compliance before remediation is only supported at subscription scope and below.
     */
    resourceDiscoveryMode?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a GroupPolicyRemediation resource.
 */
export interface GroupPolicyRemediationArgs {
    failurePercentage?: pulumi.Input<number>;
    locationFilters?: pulumi.Input<pulumi.Input<string>[]>;
    managementGroupId: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    parallelDeployments?: pulumi.Input<number>;
    policyAssignmentId: pulumi.Input<string>;
    policyDefinitionId?: pulumi.Input<string>;
    resourceCount?: pulumi.Input<number>;
    /**
     * @deprecated `resource_discovery_mode` will be removed in version 4.0 of the AzureRM Provider as evaluating compliance before remediation is only supported at subscription scope and below.
     */
    resourceDiscoveryMode?: pulumi.Input<string>;
}
