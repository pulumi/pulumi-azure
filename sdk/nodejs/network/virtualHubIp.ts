// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Manages a Virtual Hub IP. This resource is also known as a Route Server.
 *
 * > **Note:** Virtual Hub IP only supports Standard Virtual Hub without Virtual Wan.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = new azure.core.ResourceGroup("example", {
 *     name: "example-resources",
 *     location: "West Europe",
 * });
 * const exampleVirtualHub = new azure.network.VirtualHub("example", {
 *     name: "example-vhub",
 *     resourceGroupName: example.name,
 *     location: example.location,
 *     sku: "Standard",
 * });
 * const examplePublicIp = new azure.network.PublicIp("example", {
 *     name: "example-pip",
 *     location: example.location,
 *     resourceGroupName: example.name,
 *     allocationMethod: "Static",
 *     sku: "Standard",
 * });
 * const exampleVirtualNetwork = new azure.network.VirtualNetwork("example", {
 *     name: "example-vnet",
 *     addressSpaces: ["10.5.0.0/16"],
 *     location: example.location,
 *     resourceGroupName: example.name,
 * });
 * const exampleSubnet = new azure.network.Subnet("example", {
 *     name: "RouteServerSubnet",
 *     resourceGroupName: example.name,
 *     virtualNetworkName: exampleVirtualNetwork.name,
 *     addressPrefixes: ["10.5.1.0/24"],
 * });
 * const exampleVirtualHubIp = new azure.network.VirtualHubIp("example", {
 *     name: "example-vhubipconfig",
 *     virtualHubId: exampleVirtualHub.id,
 *     privateIpAddress: "10.5.1.18",
 *     privateIpAllocationMethod: "Static",
 *     publicIpAddressId: examplePublicIp.id,
 *     subnetId: exampleSubnet.id,
 * });
 * ```
 *
 * ## API Providers
 *
 * <!-- This section is generated, changes will be overwritten -->
 * This resource uses the following Azure API Providers:
 *
 * * `Microsoft.Network` - 2024-05-01
 *
 * ## Import
 *
 * Virtual Hub IPs can be imported using the `resource id`, e.g.
 *
 * ```sh
 * $ pulumi import azure:network/virtualHubIp:VirtualHubIp example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.Network/virtualHubs/virtualHub1/ipConfigurations/ipConfig1
 * ```
 */
export class VirtualHubIp extends pulumi.CustomResource {
    /**
     * Get an existing VirtualHubIp resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: VirtualHubIpState, opts?: pulumi.CustomResourceOptions): VirtualHubIp {
        return new VirtualHubIp(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure:network/virtualHubIp:VirtualHubIp';

    /**
     * Returns true if the given object is an instance of VirtualHubIp.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is VirtualHubIp {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === VirtualHubIp.__pulumiType;
    }

    /**
     * The name which should be used for this Virtual Hub IP. Changing this forces a new resource to be created.
     */
    declare public readonly name: pulumi.Output<string>;
    /**
     * The private IP address of the IP configuration.
     */
    declare public readonly privateIpAddress: pulumi.Output<string | undefined>;
    /**
     * The private IP address allocation method. Possible values are `Static` and `Dynamic` is allowed. Defaults to `Dynamic`.
     */
    declare public readonly privateIpAllocationMethod: pulumi.Output<string | undefined>;
    /**
     * The ID of the Public IP Address. This option is required since September 1st 2021. Changing this forces a new resource to be created.
     */
    declare public readonly publicIpAddressId: pulumi.Output<string>;
    /**
     * The ID of the Subnet that the IP will reside. Changing this forces a new resource to be created.
     */
    declare public readonly subnetId: pulumi.Output<string>;
    /**
     * The ID of the Virtual Hub within which this IP configuration should be created. Changing this forces a new resource to be created.
     */
    declare public readonly virtualHubId: pulumi.Output<string>;

    /**
     * Create a VirtualHubIp resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: VirtualHubIpArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: VirtualHubIpArgs | VirtualHubIpState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as VirtualHubIpState | undefined;
            resourceInputs["name"] = state?.name;
            resourceInputs["privateIpAddress"] = state?.privateIpAddress;
            resourceInputs["privateIpAllocationMethod"] = state?.privateIpAllocationMethod;
            resourceInputs["publicIpAddressId"] = state?.publicIpAddressId;
            resourceInputs["subnetId"] = state?.subnetId;
            resourceInputs["virtualHubId"] = state?.virtualHubId;
        } else {
            const args = argsOrState as VirtualHubIpArgs | undefined;
            if (args?.publicIpAddressId === undefined && !opts.urn) {
                throw new Error("Missing required property 'publicIpAddressId'");
            }
            if (args?.subnetId === undefined && !opts.urn) {
                throw new Error("Missing required property 'subnetId'");
            }
            if (args?.virtualHubId === undefined && !opts.urn) {
                throw new Error("Missing required property 'virtualHubId'");
            }
            resourceInputs["name"] = args?.name;
            resourceInputs["privateIpAddress"] = args?.privateIpAddress;
            resourceInputs["privateIpAllocationMethod"] = args?.privateIpAllocationMethod;
            resourceInputs["publicIpAddressId"] = args?.publicIpAddressId;
            resourceInputs["subnetId"] = args?.subnetId;
            resourceInputs["virtualHubId"] = args?.virtualHubId;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(VirtualHubIp.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering VirtualHubIp resources.
 */
export interface VirtualHubIpState {
    /**
     * The name which should be used for this Virtual Hub IP. Changing this forces a new resource to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * The private IP address of the IP configuration.
     */
    privateIpAddress?: pulumi.Input<string>;
    /**
     * The private IP address allocation method. Possible values are `Static` and `Dynamic` is allowed. Defaults to `Dynamic`.
     */
    privateIpAllocationMethod?: pulumi.Input<string>;
    /**
     * The ID of the Public IP Address. This option is required since September 1st 2021. Changing this forces a new resource to be created.
     */
    publicIpAddressId?: pulumi.Input<string>;
    /**
     * The ID of the Subnet that the IP will reside. Changing this forces a new resource to be created.
     */
    subnetId?: pulumi.Input<string>;
    /**
     * The ID of the Virtual Hub within which this IP configuration should be created. Changing this forces a new resource to be created.
     */
    virtualHubId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a VirtualHubIp resource.
 */
export interface VirtualHubIpArgs {
    /**
     * The name which should be used for this Virtual Hub IP. Changing this forces a new resource to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * The private IP address of the IP configuration.
     */
    privateIpAddress?: pulumi.Input<string>;
    /**
     * The private IP address allocation method. Possible values are `Static` and `Dynamic` is allowed. Defaults to `Dynamic`.
     */
    privateIpAllocationMethod?: pulumi.Input<string>;
    /**
     * The ID of the Public IP Address. This option is required since September 1st 2021. Changing this forces a new resource to be created.
     */
    publicIpAddressId: pulumi.Input<string>;
    /**
     * The ID of the Subnet that the IP will reside. Changing this forces a new resource to be created.
     */
    subnetId: pulumi.Input<string>;
    /**
     * The ID of the Virtual Hub within which this IP configuration should be created. Changing this forces a new resource to be created.
     */
    virtualHubId: pulumi.Input<string>;
}
