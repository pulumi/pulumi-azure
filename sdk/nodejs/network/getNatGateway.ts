// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Use this data source to access information about an existing NAT Gateway.
 * 
 * > **NOTE:** The Azure NAT Gateway service is currently in private preview. Your subscription must be on the NAT Gateway private preview whitelist for this resource to be provisioned correctly. If you attempt to provision this resource and receive an `InvalidResourceType` error may mean that your subscription is not part of the NAT Gateway private preview or you are using a region which does not yet support the NAT Gateway private preview service. The NAT Gateway private preview service is currently available in a limited set of regions. Private preview resources may have multiple breaking changes over their lifecycle until they GA. You can opt into the Private Preview by contacting your Microsoft Representative.
 *
 * > This content is derived from https://github.com/terraform-providers/terraform-provider-azurerm/blob/master/website/docs/d/nat_gateway.html.markdown.
 */
export function getNatGateway(args: GetNatGatewayArgs, opts?: pulumi.InvokeOptions): Promise<GetNatGatewayResult> & GetNatGatewayResult {
    if (!opts) {
        opts = {}
    }

    if (!opts.version) {
        opts.version = utilities.getVersion();
    }
    const promise: Promise<GetNatGatewayResult> = pulumi.runtime.invoke("azure:network/getNatGateway:getNatGateway", {
        "name": args.name,
        "publicIpAddressIds": args.publicIpAddressIds,
        "publicIpPrefixIds": args.publicIpPrefixIds,
        "resourceGroupName": args.resourceGroupName,
    }, opts);

    return pulumi.utils.liftProperties(promise, opts);
}

/**
 * A collection of arguments for invoking getNatGateway.
 */
export interface GetNatGatewayArgs {
    /**
     * Specifies the Name of the NAT Gateway.
     */
    readonly name: string;
    /**
     * A list of existing Public IP Address resource IDs which the NAT Gateway is using.
     */
    readonly publicIpAddressIds?: string[];
    /**
     * A list of existing Public IP Prefix resource IDs which the NAT Gateway is using.
     */
    readonly publicIpPrefixIds?: string[];
    /**
     * Specifies the name of the Resource Group where the NAT Gateway exists.
     */
    readonly resourceGroupName: string;
}

/**
 * A collection of values returned by getNatGateway.
 */
export interface GetNatGatewayResult {
    /**
     * The idle timeout in minutes which is used for the NAT Gateway.
     */
    readonly idleTimeoutInMinutes: number;
    /**
     * The location where the NAT Gateway exists.
     */
    readonly location: string;
    readonly name: string;
    /**
     * A list of existing Public IP Address resource IDs which the NAT Gateway is using.
     */
    readonly publicIpAddressIds: string[];
    /**
     * A list of existing Public IP Prefix resource IDs which the NAT Gateway is using.
     */
    readonly publicIpPrefixIds: string[];
    readonly resourceGroupName: string;
    /**
     * The Resource GUID of the NAT Gateway.
     */
    readonly resourceGuid: string;
    /**
     * The SKU used by the NAT Gateway.
     */
    readonly skuName: string;
    /**
     * A mapping of tags assigned to the resource.
     */
    readonly tags: {[key: string]: string};
    /**
     * A list of Availability Zones which the NAT Gateway exists in.
     */
    readonly zones: string[];
    /**
     * id is the provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
}
