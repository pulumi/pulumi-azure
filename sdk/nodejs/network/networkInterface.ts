// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Manages a Network Interface.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = new azure.core.ResourceGroup("example", {
 *     name: "example-resources",
 *     location: "West Europe",
 * });
 * const exampleVirtualNetwork = new azure.network.VirtualNetwork("example", {
 *     name: "example-network",
 *     addressSpaces: ["10.0.0.0/16"],
 *     location: example.location,
 *     resourceGroupName: example.name,
 * });
 * const exampleSubnet = new azure.network.Subnet("example", {
 *     name: "internal",
 *     resourceGroupName: example.name,
 *     virtualNetworkName: exampleVirtualNetwork.name,
 *     addressPrefixes: ["10.0.2.0/24"],
 * });
 * const exampleNetworkInterface = new azure.network.NetworkInterface("example", {
 *     name: "example-nic",
 *     location: example.location,
 *     resourceGroupName: example.name,
 *     ipConfigurations: [{
 *         name: "internal",
 *         subnetId: exampleSubnet.id,
 *         privateIpAddressAllocation: "Dynamic",
 *     }],
 * });
 * ```
 *
 * ## API Providers
 *
 * <!-- This section is generated, changes will be overwritten -->
 * This resource uses the following Azure API Providers:
 *
 * * `Microsoft.Network` - 2024-05-01
 *
 * ## Import
 *
 * Network Interfaces can be imported using the `resource id`, e.g.
 *
 * ```sh
 * $ pulumi import azure:network/networkInterface:NetworkInterface example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/mygroup1/providers/Microsoft.Network/networkInterfaces/nic1
 * ```
 */
export class NetworkInterface extends pulumi.CustomResource {
    /**
     * Get an existing NetworkInterface resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: NetworkInterfaceState, opts?: pulumi.CustomResourceOptions): NetworkInterface {
        return new NetworkInterface(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure:network/networkInterface:NetworkInterface';

    /**
     * Returns true if the given object is an instance of NetworkInterface.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is NetworkInterface {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === NetworkInterface.__pulumiType;
    }

    /**
     * Should Accelerated Networking be enabled? Defaults to `false`.
     *
     * > **Note:** Only certain Virtual Machine sizes are supported for Accelerated Networking - [more information can be found in this document](https://docs.microsoft.com/azure/virtual-network/create-vm-accelerated-networking-cli).
     *
     * > **Note:** To use Accelerated Networking in an Availability Set, the Availability Set must be deployed onto an Accelerated Networking enabled cluster.
     */
    declare public readonly acceleratedNetworkingEnabled: pulumi.Output<boolean | undefined>;
    /**
     * If the Virtual Machine using this Network Interface is part of an Availability Set, then this list will have the union of all DNS servers from all Network Interfaces that are part of the Availability Set.
     */
    declare public /*out*/ readonly appliedDnsServers: pulumi.Output<string[]>;
    /**
     * Specifies the auxiliary mode used to enable network high-performance feature on Network Virtual Appliances (NVAs). This feature offers competitive performance in Connections Per Second (CPS) optimization, along with improvements to handling large amounts of simultaneous connections. Possible values are `AcceleratedConnections`, `Floating`, `MaxConnections` and `None`.
     *
     * > **Note:** `auxiliaryMode` is in **Preview** and requires that the preview is enabled - [more information can be found in the Azure documentation](https://learn.microsoft.com/azure/networking/nva-accelerated-connections#prerequisites).
     */
    declare public readonly auxiliaryMode: pulumi.Output<string | undefined>;
    /**
     * Specifies the SKU used for the network high-performance feature on Network Virtual Appliances (NVAs). Possible values are `A8`, `A4`, `A1`, `A2` and `None`.
     *
     * > **Note:** `auxiliarySku` is in **Preview** and requires that the preview is enabled - [more information can be found in the Azure documentation](https://learn.microsoft.com/azure/networking/nva-accelerated-connections#prerequisites).
     */
    declare public readonly auxiliarySku: pulumi.Output<string | undefined>;
    /**
     * A list of IP Addresses defining the DNS Servers which should be used for this Network Interface.
     *
     * > **Note:** Configuring DNS Servers on the Network Interface will override the DNS Servers defined on the Virtual Network.
     */
    declare public readonly dnsServers: pulumi.Output<string[] | undefined>;
    /**
     * Specifies the Edge Zone within the Azure Region where this Network Interface should exist. Changing this forces a new Network Interface to be created.
     */
    declare public readonly edgeZone: pulumi.Output<string | undefined>;
    /**
     * The (relative) DNS Name used for internal communications between Virtual Machines in the same Virtual Network.
     */
    declare public readonly internalDnsNameLabel: pulumi.Output<string | undefined>;
    /**
     * Even if `internalDnsNameLabel` is not specified, a DNS entry is created for the primary NIC of the VM. This DNS name can be constructed by concatenating the VM name with the value of `internalDomainNameSuffix`.
     */
    declare public /*out*/ readonly internalDomainNameSuffix: pulumi.Output<string>;
    /**
     * One or more `ipConfiguration` blocks as defined below.
     */
    declare public readonly ipConfigurations: pulumi.Output<outputs.network.NetworkInterfaceIpConfiguration[]>;
    /**
     * Should IP Forwarding be enabled? Defaults to `false`.
     */
    declare public readonly ipForwardingEnabled: pulumi.Output<boolean | undefined>;
    /**
     * The location where the Network Interface should exist. Changing this forces a new resource to be created.
     */
    declare public readonly location: pulumi.Output<string>;
    /**
     * The Media Access Control (MAC) Address of the Network Interface.
     */
    declare public /*out*/ readonly macAddress: pulumi.Output<string>;
    /**
     * The name of the Network Interface. Changing this forces a new resource to be created.
     */
    declare public readonly name: pulumi.Output<string>;
    /**
     * The first private IP address of the network interface.
     */
    declare public /*out*/ readonly privateIpAddress: pulumi.Output<string>;
    /**
     * The private IP addresses of the network interface.
     */
    declare public /*out*/ readonly privateIpAddresses: pulumi.Output<string[]>;
    /**
     * The name of the Resource Group in which to create the Network Interface. Changing this forces a new resource to be created.
     */
    declare public readonly resourceGroupName: pulumi.Output<string>;
    /**
     * A mapping of tags to assign to the resource.
     */
    declare public readonly tags: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * The ID of the Virtual Machine which this Network Interface is connected to.
     */
    declare public /*out*/ readonly virtualMachineId: pulumi.Output<string>;

    /**
     * Create a NetworkInterface resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: NetworkInterfaceArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: NetworkInterfaceArgs | NetworkInterfaceState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as NetworkInterfaceState | undefined;
            resourceInputs["acceleratedNetworkingEnabled"] = state?.acceleratedNetworkingEnabled;
            resourceInputs["appliedDnsServers"] = state?.appliedDnsServers;
            resourceInputs["auxiliaryMode"] = state?.auxiliaryMode;
            resourceInputs["auxiliarySku"] = state?.auxiliarySku;
            resourceInputs["dnsServers"] = state?.dnsServers;
            resourceInputs["edgeZone"] = state?.edgeZone;
            resourceInputs["internalDnsNameLabel"] = state?.internalDnsNameLabel;
            resourceInputs["internalDomainNameSuffix"] = state?.internalDomainNameSuffix;
            resourceInputs["ipConfigurations"] = state?.ipConfigurations;
            resourceInputs["ipForwardingEnabled"] = state?.ipForwardingEnabled;
            resourceInputs["location"] = state?.location;
            resourceInputs["macAddress"] = state?.macAddress;
            resourceInputs["name"] = state?.name;
            resourceInputs["privateIpAddress"] = state?.privateIpAddress;
            resourceInputs["privateIpAddresses"] = state?.privateIpAddresses;
            resourceInputs["resourceGroupName"] = state?.resourceGroupName;
            resourceInputs["tags"] = state?.tags;
            resourceInputs["virtualMachineId"] = state?.virtualMachineId;
        } else {
            const args = argsOrState as NetworkInterfaceArgs | undefined;
            if (args?.ipConfigurations === undefined && !opts.urn) {
                throw new Error("Missing required property 'ipConfigurations'");
            }
            if (args?.resourceGroupName === undefined && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            resourceInputs["acceleratedNetworkingEnabled"] = args?.acceleratedNetworkingEnabled;
            resourceInputs["auxiliaryMode"] = args?.auxiliaryMode;
            resourceInputs["auxiliarySku"] = args?.auxiliarySku;
            resourceInputs["dnsServers"] = args?.dnsServers;
            resourceInputs["edgeZone"] = args?.edgeZone;
            resourceInputs["internalDnsNameLabel"] = args?.internalDnsNameLabel;
            resourceInputs["ipConfigurations"] = args?.ipConfigurations;
            resourceInputs["ipForwardingEnabled"] = args?.ipForwardingEnabled;
            resourceInputs["location"] = args?.location;
            resourceInputs["name"] = args?.name;
            resourceInputs["resourceGroupName"] = args?.resourceGroupName;
            resourceInputs["tags"] = args?.tags;
            resourceInputs["appliedDnsServers"] = undefined /*out*/;
            resourceInputs["internalDomainNameSuffix"] = undefined /*out*/;
            resourceInputs["macAddress"] = undefined /*out*/;
            resourceInputs["privateIpAddress"] = undefined /*out*/;
            resourceInputs["privateIpAddresses"] = undefined /*out*/;
            resourceInputs["virtualMachineId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(NetworkInterface.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering NetworkInterface resources.
 */
export interface NetworkInterfaceState {
    /**
     * Should Accelerated Networking be enabled? Defaults to `false`.
     *
     * > **Note:** Only certain Virtual Machine sizes are supported for Accelerated Networking - [more information can be found in this document](https://docs.microsoft.com/azure/virtual-network/create-vm-accelerated-networking-cli).
     *
     * > **Note:** To use Accelerated Networking in an Availability Set, the Availability Set must be deployed onto an Accelerated Networking enabled cluster.
     */
    acceleratedNetworkingEnabled?: pulumi.Input<boolean>;
    /**
     * If the Virtual Machine using this Network Interface is part of an Availability Set, then this list will have the union of all DNS servers from all Network Interfaces that are part of the Availability Set.
     */
    appliedDnsServers?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies the auxiliary mode used to enable network high-performance feature on Network Virtual Appliances (NVAs). This feature offers competitive performance in Connections Per Second (CPS) optimization, along with improvements to handling large amounts of simultaneous connections. Possible values are `AcceleratedConnections`, `Floating`, `MaxConnections` and `None`.
     *
     * > **Note:** `auxiliaryMode` is in **Preview** and requires that the preview is enabled - [more information can be found in the Azure documentation](https://learn.microsoft.com/azure/networking/nva-accelerated-connections#prerequisites).
     */
    auxiliaryMode?: pulumi.Input<string>;
    /**
     * Specifies the SKU used for the network high-performance feature on Network Virtual Appliances (NVAs). Possible values are `A8`, `A4`, `A1`, `A2` and `None`.
     *
     * > **Note:** `auxiliarySku` is in **Preview** and requires that the preview is enabled - [more information can be found in the Azure documentation](https://learn.microsoft.com/azure/networking/nva-accelerated-connections#prerequisites).
     */
    auxiliarySku?: pulumi.Input<string>;
    /**
     * A list of IP Addresses defining the DNS Servers which should be used for this Network Interface.
     *
     * > **Note:** Configuring DNS Servers on the Network Interface will override the DNS Servers defined on the Virtual Network.
     */
    dnsServers?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies the Edge Zone within the Azure Region where this Network Interface should exist. Changing this forces a new Network Interface to be created.
     */
    edgeZone?: pulumi.Input<string>;
    /**
     * The (relative) DNS Name used for internal communications between Virtual Machines in the same Virtual Network.
     */
    internalDnsNameLabel?: pulumi.Input<string>;
    /**
     * Even if `internalDnsNameLabel` is not specified, a DNS entry is created for the primary NIC of the VM. This DNS name can be constructed by concatenating the VM name with the value of `internalDomainNameSuffix`.
     */
    internalDomainNameSuffix?: pulumi.Input<string>;
    /**
     * One or more `ipConfiguration` blocks as defined below.
     */
    ipConfigurations?: pulumi.Input<pulumi.Input<inputs.network.NetworkInterfaceIpConfiguration>[]>;
    /**
     * Should IP Forwarding be enabled? Defaults to `false`.
     */
    ipForwardingEnabled?: pulumi.Input<boolean>;
    /**
     * The location where the Network Interface should exist. Changing this forces a new resource to be created.
     */
    location?: pulumi.Input<string>;
    /**
     * The Media Access Control (MAC) Address of the Network Interface.
     */
    macAddress?: pulumi.Input<string>;
    /**
     * The name of the Network Interface. Changing this forces a new resource to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * The first private IP address of the network interface.
     */
    privateIpAddress?: pulumi.Input<string>;
    /**
     * The private IP addresses of the network interface.
     */
    privateIpAddresses?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The name of the Resource Group in which to create the Network Interface. Changing this forces a new resource to be created.
     */
    resourceGroupName?: pulumi.Input<string>;
    /**
     * A mapping of tags to assign to the resource.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The ID of the Virtual Machine which this Network Interface is connected to.
     */
    virtualMachineId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a NetworkInterface resource.
 */
export interface NetworkInterfaceArgs {
    /**
     * Should Accelerated Networking be enabled? Defaults to `false`.
     *
     * > **Note:** Only certain Virtual Machine sizes are supported for Accelerated Networking - [more information can be found in this document](https://docs.microsoft.com/azure/virtual-network/create-vm-accelerated-networking-cli).
     *
     * > **Note:** To use Accelerated Networking in an Availability Set, the Availability Set must be deployed onto an Accelerated Networking enabled cluster.
     */
    acceleratedNetworkingEnabled?: pulumi.Input<boolean>;
    /**
     * Specifies the auxiliary mode used to enable network high-performance feature on Network Virtual Appliances (NVAs). This feature offers competitive performance in Connections Per Second (CPS) optimization, along with improvements to handling large amounts of simultaneous connections. Possible values are `AcceleratedConnections`, `Floating`, `MaxConnections` and `None`.
     *
     * > **Note:** `auxiliaryMode` is in **Preview** and requires that the preview is enabled - [more information can be found in the Azure documentation](https://learn.microsoft.com/azure/networking/nva-accelerated-connections#prerequisites).
     */
    auxiliaryMode?: pulumi.Input<string>;
    /**
     * Specifies the SKU used for the network high-performance feature on Network Virtual Appliances (NVAs). Possible values are `A8`, `A4`, `A1`, `A2` and `None`.
     *
     * > **Note:** `auxiliarySku` is in **Preview** and requires that the preview is enabled - [more information can be found in the Azure documentation](https://learn.microsoft.com/azure/networking/nva-accelerated-connections#prerequisites).
     */
    auxiliarySku?: pulumi.Input<string>;
    /**
     * A list of IP Addresses defining the DNS Servers which should be used for this Network Interface.
     *
     * > **Note:** Configuring DNS Servers on the Network Interface will override the DNS Servers defined on the Virtual Network.
     */
    dnsServers?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies the Edge Zone within the Azure Region where this Network Interface should exist. Changing this forces a new Network Interface to be created.
     */
    edgeZone?: pulumi.Input<string>;
    /**
     * The (relative) DNS Name used for internal communications between Virtual Machines in the same Virtual Network.
     */
    internalDnsNameLabel?: pulumi.Input<string>;
    /**
     * One or more `ipConfiguration` blocks as defined below.
     */
    ipConfigurations: pulumi.Input<pulumi.Input<inputs.network.NetworkInterfaceIpConfiguration>[]>;
    /**
     * Should IP Forwarding be enabled? Defaults to `false`.
     */
    ipForwardingEnabled?: pulumi.Input<boolean>;
    /**
     * The location where the Network Interface should exist. Changing this forces a new resource to be created.
     */
    location?: pulumi.Input<string>;
    /**
     * The name of the Network Interface. Changing this forces a new resource to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * The name of the Resource Group in which to create the Network Interface. Changing this forces a new resource to be created.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * A mapping of tags to assign to the resource.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
