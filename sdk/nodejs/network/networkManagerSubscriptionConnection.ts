// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Manages a Network Manager Subscription Connection which may cross tenants.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const exampleResourceGroup = new azure.core.ResourceGroup("exampleResourceGroup", {location: "West Europe"});
 * const current = azure.core.getSubscription({});
 * const exampleNetworkManager = new azure.network.NetworkManager("exampleNetworkManager", {
 *     location: exampleResourceGroup.location,
 *     resourceGroupName: exampleResourceGroup.name,
 *     scope: {
 *         subscriptionIds: [current.then(current => current.id)],
 *     },
 *     scopeAccesses: ["SecurityAdmin"],
 * });
 * const exampleNetworkManagerSubscriptionConnection = new azure.network.NetworkManagerSubscriptionConnection("exampleNetworkManagerSubscriptionConnection", {
 *     subscriptionId: current.then(current => current.id),
 *     networkManagerId: exampleNetworkManager.id,
 *     description: "example",
 * });
 * ```
 *
 * ## Import
 *
 * Network Subscription Network Manager Connection can be imported using the `resource id`, e.g.
 *
 * ```sh
 *  $ pulumi import azure:network/networkManagerSubscriptionConnection:NetworkManagerSubscriptionConnection example /subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Network/networkManagerConnections/networkManagerConnection1
 * ```
 */
export class NetworkManagerSubscriptionConnection extends pulumi.CustomResource {
    /**
     * Get an existing NetworkManagerSubscriptionConnection resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: NetworkManagerSubscriptionConnectionState, opts?: pulumi.CustomResourceOptions): NetworkManagerSubscriptionConnection {
        return new NetworkManagerSubscriptionConnection(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure:network/networkManagerSubscriptionConnection:NetworkManagerSubscriptionConnection';

    /**
     * Returns true if the given object is an instance of NetworkManagerSubscriptionConnection.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is NetworkManagerSubscriptionConnection {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === NetworkManagerSubscriptionConnection.__pulumiType;
    }

    /**
     * The Connection state of the Network Manager Subscription Connection.
     */
    public /*out*/ readonly connectionState!: pulumi.Output<string>;
    /**
     * A description of the Network Manager Subscription Connection.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * Specifies the name which should be used for this Network Subscription Network Manager Connection. Changing this forces a new Network Subscription Network Manager Connection to be created.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Specifies the ID of the Network Manager which the Subscription is connected to.
     */
    public readonly networkManagerId!: pulumi.Output<string>;
    /**
     * Specifies the ID of the target Subscription.
     */
    public readonly subscriptionId!: pulumi.Output<string>;

    /**
     * Create a NetworkManagerSubscriptionConnection resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: NetworkManagerSubscriptionConnectionArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: NetworkManagerSubscriptionConnectionArgs | NetworkManagerSubscriptionConnectionState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as NetworkManagerSubscriptionConnectionState | undefined;
            resourceInputs["connectionState"] = state ? state.connectionState : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["networkManagerId"] = state ? state.networkManagerId : undefined;
            resourceInputs["subscriptionId"] = state ? state.subscriptionId : undefined;
        } else {
            const args = argsOrState as NetworkManagerSubscriptionConnectionArgs | undefined;
            if ((!args || args.networkManagerId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'networkManagerId'");
            }
            if ((!args || args.subscriptionId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'subscriptionId'");
            }
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["networkManagerId"] = args ? args.networkManagerId : undefined;
            resourceInputs["subscriptionId"] = args ? args.subscriptionId : undefined;
            resourceInputs["connectionState"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(NetworkManagerSubscriptionConnection.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering NetworkManagerSubscriptionConnection resources.
 */
export interface NetworkManagerSubscriptionConnectionState {
    /**
     * The Connection state of the Network Manager Subscription Connection.
     */
    connectionState?: pulumi.Input<string>;
    /**
     * A description of the Network Manager Subscription Connection.
     */
    description?: pulumi.Input<string>;
    /**
     * Specifies the name which should be used for this Network Subscription Network Manager Connection. Changing this forces a new Network Subscription Network Manager Connection to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * Specifies the ID of the Network Manager which the Subscription is connected to.
     */
    networkManagerId?: pulumi.Input<string>;
    /**
     * Specifies the ID of the target Subscription.
     */
    subscriptionId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a NetworkManagerSubscriptionConnection resource.
 */
export interface NetworkManagerSubscriptionConnectionArgs {
    /**
     * A description of the Network Manager Subscription Connection.
     */
    description?: pulumi.Input<string>;
    /**
     * Specifies the name which should be used for this Network Subscription Network Manager Connection. Changing this forces a new Network Subscription Network Manager Connection to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * Specifies the ID of the Network Manager which the Subscription is connected to.
     */
    networkManagerId: pulumi.Input<string>;
    /**
     * Specifies the ID of the target Subscription.
     */
    subscriptionId: pulumi.Input<string>;
}
