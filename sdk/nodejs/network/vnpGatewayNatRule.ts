// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * Manages a VPN Gateway NAT Rule.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const exampleResourceGroup = new azure.core.ResourceGroup("exampleResourceGroup", {location: "West Europe"});
 * const exampleVirtualWan = new azure.network.VirtualWan("exampleVirtualWan", {
 *     resourceGroupName: exampleResourceGroup.name,
 *     location: exampleResourceGroup.location,
 * });
 * const exampleVirtualHub = new azure.network.VirtualHub("exampleVirtualHub", {
 *     resourceGroupName: exampleResourceGroup.name,
 *     location: exampleResourceGroup.location,
 *     addressPrefix: "10.0.1.0/24",
 *     virtualWanId: exampleVirtualWan.id,
 * });
 * const exampleVpnGateway = new azure.network.VpnGateway("exampleVpnGateway", {
 *     location: exampleResourceGroup.location,
 *     resourceGroupName: exampleResourceGroup.name,
 *     virtualHubId: exampleVirtualHub.id,
 * });
 * const exampleVnpGatewayNatRule = new azure.network.VnpGatewayNatRule("exampleVnpGatewayNatRule", {
 *     resourceGroupName: exampleResourceGroup.name,
 *     vpnGatewayId: exampleVpnGateway.id,
 *     externalMappings: [{
 *         addressSpace: "192.168.21.0/26",
 *     }],
 *     internalMappings: [{
 *         addressSpace: "10.4.0.0/26",
 *     }],
 * });
 * ```
 *
 * ## Import
 *
 * VPN Gateway NAT Rules can be imported using the `resource id`, e.g.
 *
 * ```sh
 *  $ pulumi import azure:network/vnpGatewayNatRule:VnpGatewayNatRule example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resGroup1/providers/Microsoft.Network/vpnGateways/vpnGateway1/natRules/natRule1
 * ```
 */
export class VnpGatewayNatRule extends pulumi.CustomResource {
    /**
     * Get an existing VnpGatewayNatRule resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: VnpGatewayNatRuleState, opts?: pulumi.CustomResourceOptions): VnpGatewayNatRule {
        return new VnpGatewayNatRule(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure:network/vnpGatewayNatRule:VnpGatewayNatRule';

    /**
     * Returns true if the given object is an instance of VnpGatewayNatRule.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is VnpGatewayNatRule {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === VnpGatewayNatRule.__pulumiType;
    }

    /**
     * A list of CIDR Ranges which are used for external mapping of the VPN Gateway NAT Rule.
     *
     * @deprecated `external_address_space_mappings` will be removed in favour of the property `external_mapping` in version 4.0 of the AzureRM Provider.
     */
    public readonly externalAddressSpaceMappings!: pulumi.Output<string[]>;
    /**
     * One or more `externalMapping` blocks as documented below.
     */
    public readonly externalMappings!: pulumi.Output<outputs.network.VnpGatewayNatRuleExternalMapping[]>;
    /**
     * A list of CIDR Ranges which are used for internal mapping of the VPN Gateway NAT Rule.
     *
     * @deprecated `internal_address_space_mappings` will be removed in favour of the property `internal_mapping` in version 4.0 of the AzureRM Provider.
     */
    public readonly internalAddressSpaceMappings!: pulumi.Output<string[]>;
    /**
     * One or more `internalMapping` blocks as documented below.
     */
    public readonly internalMappings!: pulumi.Output<outputs.network.VnpGatewayNatRuleInternalMapping[]>;
    /**
     * The ID of the IP Configuration this VPN Gateway NAT Rule applies to. Possible values are `Instance0` and `Instance1`.
     */
    public readonly ipConfigurationId!: pulumi.Output<string | undefined>;
    /**
     * The source NAT direction of the VPN NAT. Possible values are `EgressSnat` and `IngressSnat`. Defaults to `EgressSnat`. Changing this forces a new resource to be created.
     */
    public readonly mode!: pulumi.Output<string | undefined>;
    /**
     * The name which should be used for this VPN Gateway NAT Rule. Changing this forces a new resource to be created.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The Name of the Resource Group in which this VPN Gateway NAT Rule should be created. Changing this forces a new resource to be created.
     */
    public readonly resourceGroupName!: pulumi.Output<string>;
    /**
     * The type of the VPN Gateway NAT Rule. Possible values are `Dynamic` and `Static`. Defaults to `Static`. Changing this forces a new resource to be created.
     */
    public readonly type!: pulumi.Output<string | undefined>;
    /**
     * The ID of the VPN Gateway that this VPN Gateway NAT Rule belongs to. Changing this forces a new resource to be created.
     */
    public readonly vpnGatewayId!: pulumi.Output<string>;

    /**
     * Create a VnpGatewayNatRule resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: VnpGatewayNatRuleArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: VnpGatewayNatRuleArgs | VnpGatewayNatRuleState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as VnpGatewayNatRuleState | undefined;
            resourceInputs["externalAddressSpaceMappings"] = state ? state.externalAddressSpaceMappings : undefined;
            resourceInputs["externalMappings"] = state ? state.externalMappings : undefined;
            resourceInputs["internalAddressSpaceMappings"] = state ? state.internalAddressSpaceMappings : undefined;
            resourceInputs["internalMappings"] = state ? state.internalMappings : undefined;
            resourceInputs["ipConfigurationId"] = state ? state.ipConfigurationId : undefined;
            resourceInputs["mode"] = state ? state.mode : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["resourceGroupName"] = state ? state.resourceGroupName : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
            resourceInputs["vpnGatewayId"] = state ? state.vpnGatewayId : undefined;
        } else {
            const args = argsOrState as VnpGatewayNatRuleArgs | undefined;
            if ((!args || args.resourceGroupName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            if ((!args || args.vpnGatewayId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'vpnGatewayId'");
            }
            resourceInputs["externalAddressSpaceMappings"] = args ? args.externalAddressSpaceMappings : undefined;
            resourceInputs["externalMappings"] = args ? args.externalMappings : undefined;
            resourceInputs["internalAddressSpaceMappings"] = args ? args.internalAddressSpaceMappings : undefined;
            resourceInputs["internalMappings"] = args ? args.internalMappings : undefined;
            resourceInputs["ipConfigurationId"] = args ? args.ipConfigurationId : undefined;
            resourceInputs["mode"] = args ? args.mode : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            resourceInputs["type"] = args ? args.type : undefined;
            resourceInputs["vpnGatewayId"] = args ? args.vpnGatewayId : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(VnpGatewayNatRule.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering VnpGatewayNatRule resources.
 */
export interface VnpGatewayNatRuleState {
    /**
     * A list of CIDR Ranges which are used for external mapping of the VPN Gateway NAT Rule.
     *
     * @deprecated `external_address_space_mappings` will be removed in favour of the property `external_mapping` in version 4.0 of the AzureRM Provider.
     */
    externalAddressSpaceMappings?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * One or more `externalMapping` blocks as documented below.
     */
    externalMappings?: pulumi.Input<pulumi.Input<inputs.network.VnpGatewayNatRuleExternalMapping>[]>;
    /**
     * A list of CIDR Ranges which are used for internal mapping of the VPN Gateway NAT Rule.
     *
     * @deprecated `internal_address_space_mappings` will be removed in favour of the property `internal_mapping` in version 4.0 of the AzureRM Provider.
     */
    internalAddressSpaceMappings?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * One or more `internalMapping` blocks as documented below.
     */
    internalMappings?: pulumi.Input<pulumi.Input<inputs.network.VnpGatewayNatRuleInternalMapping>[]>;
    /**
     * The ID of the IP Configuration this VPN Gateway NAT Rule applies to. Possible values are `Instance0` and `Instance1`.
     */
    ipConfigurationId?: pulumi.Input<string>;
    /**
     * The source NAT direction of the VPN NAT. Possible values are `EgressSnat` and `IngressSnat`. Defaults to `EgressSnat`. Changing this forces a new resource to be created.
     */
    mode?: pulumi.Input<string>;
    /**
     * The name which should be used for this VPN Gateway NAT Rule. Changing this forces a new resource to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * The Name of the Resource Group in which this VPN Gateway NAT Rule should be created. Changing this forces a new resource to be created.
     */
    resourceGroupName?: pulumi.Input<string>;
    /**
     * The type of the VPN Gateway NAT Rule. Possible values are `Dynamic` and `Static`. Defaults to `Static`. Changing this forces a new resource to be created.
     */
    type?: pulumi.Input<string>;
    /**
     * The ID of the VPN Gateway that this VPN Gateway NAT Rule belongs to. Changing this forces a new resource to be created.
     */
    vpnGatewayId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a VnpGatewayNatRule resource.
 */
export interface VnpGatewayNatRuleArgs {
    /**
     * A list of CIDR Ranges which are used for external mapping of the VPN Gateway NAT Rule.
     *
     * @deprecated `external_address_space_mappings` will be removed in favour of the property `external_mapping` in version 4.0 of the AzureRM Provider.
     */
    externalAddressSpaceMappings?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * One or more `externalMapping` blocks as documented below.
     */
    externalMappings?: pulumi.Input<pulumi.Input<inputs.network.VnpGatewayNatRuleExternalMapping>[]>;
    /**
     * A list of CIDR Ranges which are used for internal mapping of the VPN Gateway NAT Rule.
     *
     * @deprecated `internal_address_space_mappings` will be removed in favour of the property `internal_mapping` in version 4.0 of the AzureRM Provider.
     */
    internalAddressSpaceMappings?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * One or more `internalMapping` blocks as documented below.
     */
    internalMappings?: pulumi.Input<pulumi.Input<inputs.network.VnpGatewayNatRuleInternalMapping>[]>;
    /**
     * The ID of the IP Configuration this VPN Gateway NAT Rule applies to. Possible values are `Instance0` and `Instance1`.
     */
    ipConfigurationId?: pulumi.Input<string>;
    /**
     * The source NAT direction of the VPN NAT. Possible values are `EgressSnat` and `IngressSnat`. Defaults to `EgressSnat`. Changing this forces a new resource to be created.
     */
    mode?: pulumi.Input<string>;
    /**
     * The name which should be used for this VPN Gateway NAT Rule. Changing this forces a new resource to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * The Name of the Resource Group in which this VPN Gateway NAT Rule should be created. Changing this forces a new resource to be created.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * The type of the VPN Gateway NAT Rule. Possible values are `Dynamic` and `Static`. Defaults to `Static`. Changing this forces a new resource to be created.
     */
    type?: pulumi.Input<string>;
    /**
     * The ID of the VPN Gateway that this VPN Gateway NAT Rule belongs to. Changing this forces a new resource to be created.
     */
    vpnGatewayId: pulumi.Input<string>;
}
