// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Use this data source to access information about an existing virtual network peering.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = azure.network.getVirtualNetwork({
 *     name: "vnet01",
 *     resourceGroupName: "networking",
 * });
 * const exampleGetVirtualNetworkPeering = example.then(example => azure.network.getVirtualNetworkPeering({
 *     name: "peer-vnet01-to-vnet02",
 *     virtualNetworkId: example.id,
 * }));
 * export const id = exampleGetVirtualNetworkPeering.then(exampleGetVirtualNetworkPeering => exampleGetVirtualNetworkPeering.id);
 * ```
 *
 * ## API Providers
 *
 * <!-- This section is generated, changes will be overwritten -->
 * This data source uses the following Azure API Providers:
 *
 * * `Microsoft.Network` - 2024-05-01
 */
export function getVirtualNetworkPeering(args: GetVirtualNetworkPeeringArgs, opts?: pulumi.InvokeOptions): Promise<GetVirtualNetworkPeeringResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azure:network/getVirtualNetworkPeering:getVirtualNetworkPeering", {
        "name": args.name,
        "virtualNetworkId": args.virtualNetworkId,
    }, opts);
}

/**
 * A collection of arguments for invoking getVirtualNetworkPeering.
 */
export interface GetVirtualNetworkPeeringArgs {
    /**
     * The name of this virtual network peering.
     */
    name: string;
    /**
     * The resource ID of the virtual network.
     */
    virtualNetworkId: string;
}

/**
 * A collection of values returned by getVirtualNetworkPeering.
 */
export interface GetVirtualNetworkPeeringResult {
    /**
     * Controls if forwarded traffic from VMs in the remote virtual network is allowed.
     */
    readonly allowForwardedTraffic: boolean;
    /**
     * Controls gatewayLinks can be used in the remote virtual networkâ€™s link to the local virtual network.
     */
    readonly allowGatewayTransit: boolean;
    /**
     * Controls if the traffic from the local virtual network can reach the remote virtual network.
     */
    readonly allowVirtualNetworkAccess: boolean;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly name: string;
    /**
     * Specifies whether only IPv6 address space is peered for Subnet peering.
     */
    readonly onlyIpv6PeeringEnabled: boolean;
    /**
     * Specifies whether complete Virtual Network address space is peered.
     */
    readonly peerCompleteVirtualNetworksEnabled: boolean;
    /**
     * The full Azure resource ID of the remote virtual network.
     */
    readonly remoteVirtualNetworkId: string;
    /**
     * Controls if remote gateways can be used on the local virtual network.
     */
    readonly useRemoteGateways: boolean;
    readonly virtualNetworkId: string;
}
/**
 * Use this data source to access information about an existing virtual network peering.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = azure.network.getVirtualNetwork({
 *     name: "vnet01",
 *     resourceGroupName: "networking",
 * });
 * const exampleGetVirtualNetworkPeering = example.then(example => azure.network.getVirtualNetworkPeering({
 *     name: "peer-vnet01-to-vnet02",
 *     virtualNetworkId: example.id,
 * }));
 * export const id = exampleGetVirtualNetworkPeering.then(exampleGetVirtualNetworkPeering => exampleGetVirtualNetworkPeering.id);
 * ```
 *
 * ## API Providers
 *
 * <!-- This section is generated, changes will be overwritten -->
 * This data source uses the following Azure API Providers:
 *
 * * `Microsoft.Network` - 2024-05-01
 */
export function getVirtualNetworkPeeringOutput(args: GetVirtualNetworkPeeringOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetVirtualNetworkPeeringResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("azure:network/getVirtualNetworkPeering:getVirtualNetworkPeering", {
        "name": args.name,
        "virtualNetworkId": args.virtualNetworkId,
    }, opts);
}

/**
 * A collection of arguments for invoking getVirtualNetworkPeering.
 */
export interface GetVirtualNetworkPeeringOutputArgs {
    /**
     * The name of this virtual network peering.
     */
    name: pulumi.Input<string>;
    /**
     * The resource ID of the virtual network.
     */
    virtualNetworkId: pulumi.Input<string>;
}
