// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = new azure.core.ResourceGroup("example", {
 *     name: "example-resources",
 *     location: "West Europe",
 * });
 * const current = azure.core.getSubscription({});
 * const exampleNetworkManager = new azure.network.NetworkManager("example", {
 *     name: "example-network-manager",
 *     location: example.location,
 *     resourceGroupName: example.name,
 *     scope: {
 *         subscriptionIds: [current.then(current => current.id)],
 *     },
 *     scopeAccesses: ["Routing"],
 * });
 * const exampleNetworkManagerNetworkGroup = new azure.network.NetworkManagerNetworkGroup("example", {
 *     name: "example-network-group",
 *     networkManagerId: exampleNetworkManager.id,
 * });
 * const exampleNetworkManagerRoutingConfiguration = new azure.network.NetworkManagerRoutingConfiguration("example", {
 *     name: "example-routing-configuration",
 *     networkManagerId: exampleNetworkManager.id,
 * });
 * const exampleNetworkManagerRoutingRuleCollection = new azure.network.NetworkManagerRoutingRuleCollection("example", {
 *     name: "example-routing-rule-collection",
 *     routingConfigurationId: exampleNetworkManagerRoutingConfiguration.id,
 *     networkGroupIds: ["azurerm_network_manager_network_group.example.id"],
 *     description: "example routing rule collection",
 * });
 * ```
 *
 * ## API Providers
 *
 * <!-- This section is generated, changes will be overwritten -->
 * This resource uses the following Azure API Providers:
 *
 * * `Microsoft.Network` - 2024-05-01
 *
 * ## Import
 *
 * Network Manager Routing Rule Collections can be imported using the `resource id`, e.g.
 *
 * ```sh
 * $ pulumi import azure:network/networkManagerRoutingRuleCollection:NetworkManagerRoutingRuleCollection example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rg1/providers/Microsoft.Network/networkManagers/manager1/routingConfigurations/conf1/ruleCollections/collection1
 * ```
 */
export class NetworkManagerRoutingRuleCollection extends pulumi.CustomResource {
    /**
     * Get an existing NetworkManagerRoutingRuleCollection resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: NetworkManagerRoutingRuleCollectionState, opts?: pulumi.CustomResourceOptions): NetworkManagerRoutingRuleCollection {
        return new NetworkManagerRoutingRuleCollection(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure:network/networkManagerRoutingRuleCollection:NetworkManagerRoutingRuleCollection';

    /**
     * Returns true if the given object is an instance of NetworkManagerRoutingRuleCollection.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is NetworkManagerRoutingRuleCollection {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === NetworkManagerRoutingRuleCollection.__pulumiType;
    }

    /**
     * Whether to enable the BGP route propagation. Defaults to `false`.
     */
    declare public readonly bgpRoutePropagationEnabled: pulumi.Output<boolean | undefined>;
    /**
     * The description of the Network Manager Routing Rule Collection.
     */
    declare public readonly description: pulumi.Output<string | undefined>;
    /**
     * The name which should be used for this Network Manager Routing Rule Collection. Changing this forces a new Network Manager Routing Rule Collection to be created.
     */
    declare public readonly name: pulumi.Output<string>;
    /**
     * A list of Network Group IDs which this Network Manager Routing Rule Collection applies to.
     */
    declare public readonly networkGroupIds: pulumi.Output<string[]>;
    /**
     * The ID of the Network Manager Routing Configuration. Changing this forces a new Network Manager Routing Rule Collection to be created.
     */
    declare public readonly routingConfigurationId: pulumi.Output<string>;

    /**
     * Create a NetworkManagerRoutingRuleCollection resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: NetworkManagerRoutingRuleCollectionArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: NetworkManagerRoutingRuleCollectionArgs | NetworkManagerRoutingRuleCollectionState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as NetworkManagerRoutingRuleCollectionState | undefined;
            resourceInputs["bgpRoutePropagationEnabled"] = state?.bgpRoutePropagationEnabled;
            resourceInputs["description"] = state?.description;
            resourceInputs["name"] = state?.name;
            resourceInputs["networkGroupIds"] = state?.networkGroupIds;
            resourceInputs["routingConfigurationId"] = state?.routingConfigurationId;
        } else {
            const args = argsOrState as NetworkManagerRoutingRuleCollectionArgs | undefined;
            if (args?.networkGroupIds === undefined && !opts.urn) {
                throw new Error("Missing required property 'networkGroupIds'");
            }
            if (args?.routingConfigurationId === undefined && !opts.urn) {
                throw new Error("Missing required property 'routingConfigurationId'");
            }
            resourceInputs["bgpRoutePropagationEnabled"] = args?.bgpRoutePropagationEnabled;
            resourceInputs["description"] = args?.description;
            resourceInputs["name"] = args?.name;
            resourceInputs["networkGroupIds"] = args?.networkGroupIds;
            resourceInputs["routingConfigurationId"] = args?.routingConfigurationId;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(NetworkManagerRoutingRuleCollection.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering NetworkManagerRoutingRuleCollection resources.
 */
export interface NetworkManagerRoutingRuleCollectionState {
    /**
     * Whether to enable the BGP route propagation. Defaults to `false`.
     */
    bgpRoutePropagationEnabled?: pulumi.Input<boolean>;
    /**
     * The description of the Network Manager Routing Rule Collection.
     */
    description?: pulumi.Input<string>;
    /**
     * The name which should be used for this Network Manager Routing Rule Collection. Changing this forces a new Network Manager Routing Rule Collection to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * A list of Network Group IDs which this Network Manager Routing Rule Collection applies to.
     */
    networkGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The ID of the Network Manager Routing Configuration. Changing this forces a new Network Manager Routing Rule Collection to be created.
     */
    routingConfigurationId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a NetworkManagerRoutingRuleCollection resource.
 */
export interface NetworkManagerRoutingRuleCollectionArgs {
    /**
     * Whether to enable the BGP route propagation. Defaults to `false`.
     */
    bgpRoutePropagationEnabled?: pulumi.Input<boolean>;
    /**
     * The description of the Network Manager Routing Rule Collection.
     */
    description?: pulumi.Input<string>;
    /**
     * The name which should be used for this Network Manager Routing Rule Collection. Changing this forces a new Network Manager Routing Rule Collection to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * A list of Network Group IDs which this Network Manager Routing Rule Collection applies to.
     */
    networkGroupIds: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The ID of the Network Manager Routing Configuration. Changing this forces a new Network Manager Routing Rule Collection to be created.
     */
    routingConfigurationId: pulumi.Input<string>;
}
