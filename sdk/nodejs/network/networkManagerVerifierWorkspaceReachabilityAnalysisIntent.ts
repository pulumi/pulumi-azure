// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Manages a Network Manager Verifier Workspace Reachability Analysis Intent.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = new azure.core.ResourceGroup("example", {
 *     name: "example-resources",
 *     location: "West Europe",
 * });
 * const current = azure.core.getSubscription({});
 * const exampleNetworkManager = new azure.network.NetworkManager("example", {
 *     name: "example-nm",
 *     resourceGroupName: example.name,
 *     location: example.location,
 *     scope: {
 *         subscriptionIds: [current.then(current => current.id)],
 *     },
 *     scopeAccesses: ["Connectivity"],
 * });
 * const exampleNetworkManagerVerifierWorkspace = new azure.network.NetworkManagerVerifierWorkspace("example", {
 *     name: "example",
 *     networkManagerId: exampleNetworkManager.id,
 *     location: example.location,
 * });
 * const exampleVirtualNetwork = new azure.network.VirtualNetwork("example", {
 *     name: "example-network",
 *     addressSpaces: ["10.0.0.0/16"],
 *     location: example.location,
 *     resourceGroupName: example.name,
 * });
 * const exampleSubnet = new azure.network.Subnet("example", {
 *     name: "internal",
 *     resourceGroupName: example.name,
 *     virtualNetworkName: exampleVirtualNetwork.name,
 *     addressPrefixes: ["10.0.2.0/24"],
 * });
 * const exampleNetworkInterface = new azure.network.NetworkInterface("example", {
 *     name: "example-nic",
 *     location: example.location,
 *     resourceGroupName: example.name,
 *     ipConfigurations: [{
 *         name: "internal",
 *         subnetId: exampleSubnet.id,
 *         privateIpAddressAllocation: "Dynamic",
 *     }],
 * });
 * const exampleLinuxVirtualMachine = new azure.compute.LinuxVirtualMachine("example", {
 *     name: "example-machine",
 *     resourceGroupName: example.name,
 *     location: example.location,
 *     size: "Standard_B1ls",
 *     adminUsername: "adminuser",
 *     adminPassword: "P@ssw0rd1234!",
 *     disablePasswordAuthentication: false,
 *     networkInterfaceIds: [exampleNetworkInterface.id],
 *     osDisk: {
 *         caching: "ReadWrite",
 *         storageAccountType: "Standard_LRS",
 *     },
 *     sourceImageReference: {
 *         publisher: "Canonical",
 *         offer: "0001-com-ubuntu-server-jammy",
 *         sku: "22_04-lts",
 *         version: "latest",
 *     },
 * });
 * const exampleNetworkManagerVerifierWorkspaceReachabilityAnalysisIntent = new azure.network.NetworkManagerVerifierWorkspaceReachabilityAnalysisIntent("example", {
 *     name: "example-intent",
 *     verifierWorkspaceId: exampleNetworkManagerVerifierWorkspace.id,
 *     sourceResourceId: exampleLinuxVirtualMachine.id,
 *     destinationResourceId: exampleLinuxVirtualMachine.id,
 *     description: "example",
 *     ipTraffic: {
 *         sourceIps: ["10.0.2.1"],
 *         sourcePorts: ["80"],
 *         destinationIps: ["10.0.2.2"],
 *         destinationPorts: ["*"],
 *         protocols: ["Any"],
 *     },
 * });
 * ```
 *
 * ## API Providers
 *
 * <!-- This section is generated, changes will be overwritten -->
 * This resource uses the following Azure API Providers:
 *
 * * `Microsoft.Network` - 2024-05-01
 *
 * ## Import
 *
 * Network Manager Verifier Workspace Reachability Analysis Intents can be imported using the `resource id`, e.g.
 *
 * ```sh
 * $ pulumi import azure:network/networkManagerVerifierWorkspaceReachabilityAnalysisIntent:NetworkManagerVerifierWorkspaceReachabilityAnalysisIntent example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rg1/providers/Microsoft.Network/networkManagers/manager1/verifierWorkspaces/workspace1/reachabilityAnalysisIntents/intent1
 * ```
 */
export class NetworkManagerVerifierWorkspaceReachabilityAnalysisIntent extends pulumi.CustomResource {
    /**
     * Get an existing NetworkManagerVerifierWorkspaceReachabilityAnalysisIntent resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: NetworkManagerVerifierWorkspaceReachabilityAnalysisIntentState, opts?: pulumi.CustomResourceOptions): NetworkManagerVerifierWorkspaceReachabilityAnalysisIntent {
        return new NetworkManagerVerifierWorkspaceReachabilityAnalysisIntent(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure:network/networkManagerVerifierWorkspaceReachabilityAnalysisIntent:NetworkManagerVerifierWorkspaceReachabilityAnalysisIntent';

    /**
     * Returns true if the given object is an instance of NetworkManagerVerifierWorkspaceReachabilityAnalysisIntent.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is NetworkManagerVerifierWorkspaceReachabilityAnalysisIntent {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === NetworkManagerVerifierWorkspaceReachabilityAnalysisIntent.__pulumiType;
    }

    /**
     * The description of the resource. Changing this forces a new Network Manager Verifier Workspace Reachability Analysis Intent to be created.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * The ID of the destination resource. The value can be the ID of either Public internet, Cosmos DB, Storage Account, SQL Server, Virtual machines, or Subnet. Changing this forces a new Network Manager Verifier Workspace Reachability Analysis Intent to be created.
     */
    public readonly destinationResourceId!: pulumi.Output<string>;
    /**
     * An `ipTraffic` block as defined below. Changing this forces a new Network Manager Verifier Workspace Reachability Analysis Intent to be created.
     */
    public readonly ipTraffic!: pulumi.Output<outputs.network.NetworkManagerVerifierWorkspaceReachabilityAnalysisIntentIpTraffic>;
    /**
     * The name which should be used for this Network Manager Verifier Workspace Reachability Analysis Intent. Changing this forces a new Network Manager Verifier Workspace Reachability Analysis Intent to be created.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The ID of the source resource. The value can be the ID of either Public internet, Virtual machines, or Subnet. Changing this forces a new Network Manager Verifier Workspace Reachability Analysis Intent to be created.
     */
    public readonly sourceResourceId!: pulumi.Output<string>;
    /**
     * The ID of the Network Manager Verifier Workspace. Changing this forces a new Network Manager Verifier Workspace Reachability Analysis Intent to be created.
     */
    public readonly verifierWorkspaceId!: pulumi.Output<string>;

    /**
     * Create a NetworkManagerVerifierWorkspaceReachabilityAnalysisIntent resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: NetworkManagerVerifierWorkspaceReachabilityAnalysisIntentArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: NetworkManagerVerifierWorkspaceReachabilityAnalysisIntentArgs | NetworkManagerVerifierWorkspaceReachabilityAnalysisIntentState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as NetworkManagerVerifierWorkspaceReachabilityAnalysisIntentState | undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["destinationResourceId"] = state ? state.destinationResourceId : undefined;
            resourceInputs["ipTraffic"] = state ? state.ipTraffic : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["sourceResourceId"] = state ? state.sourceResourceId : undefined;
            resourceInputs["verifierWorkspaceId"] = state ? state.verifierWorkspaceId : undefined;
        } else {
            const args = argsOrState as NetworkManagerVerifierWorkspaceReachabilityAnalysisIntentArgs | undefined;
            if ((!args || args.destinationResourceId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'destinationResourceId'");
            }
            if ((!args || args.ipTraffic === undefined) && !opts.urn) {
                throw new Error("Missing required property 'ipTraffic'");
            }
            if ((!args || args.sourceResourceId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'sourceResourceId'");
            }
            if ((!args || args.verifierWorkspaceId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'verifierWorkspaceId'");
            }
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["destinationResourceId"] = args ? args.destinationResourceId : undefined;
            resourceInputs["ipTraffic"] = args ? args.ipTraffic : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["sourceResourceId"] = args ? args.sourceResourceId : undefined;
            resourceInputs["verifierWorkspaceId"] = args ? args.verifierWorkspaceId : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(NetworkManagerVerifierWorkspaceReachabilityAnalysisIntent.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering NetworkManagerVerifierWorkspaceReachabilityAnalysisIntent resources.
 */
export interface NetworkManagerVerifierWorkspaceReachabilityAnalysisIntentState {
    /**
     * The description of the resource. Changing this forces a new Network Manager Verifier Workspace Reachability Analysis Intent to be created.
     */
    description?: pulumi.Input<string>;
    /**
     * The ID of the destination resource. The value can be the ID of either Public internet, Cosmos DB, Storage Account, SQL Server, Virtual machines, or Subnet. Changing this forces a new Network Manager Verifier Workspace Reachability Analysis Intent to be created.
     */
    destinationResourceId?: pulumi.Input<string>;
    /**
     * An `ipTraffic` block as defined below. Changing this forces a new Network Manager Verifier Workspace Reachability Analysis Intent to be created.
     */
    ipTraffic?: pulumi.Input<inputs.network.NetworkManagerVerifierWorkspaceReachabilityAnalysisIntentIpTraffic>;
    /**
     * The name which should be used for this Network Manager Verifier Workspace Reachability Analysis Intent. Changing this forces a new Network Manager Verifier Workspace Reachability Analysis Intent to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * The ID of the source resource. The value can be the ID of either Public internet, Virtual machines, or Subnet. Changing this forces a new Network Manager Verifier Workspace Reachability Analysis Intent to be created.
     */
    sourceResourceId?: pulumi.Input<string>;
    /**
     * The ID of the Network Manager Verifier Workspace. Changing this forces a new Network Manager Verifier Workspace Reachability Analysis Intent to be created.
     */
    verifierWorkspaceId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a NetworkManagerVerifierWorkspaceReachabilityAnalysisIntent resource.
 */
export interface NetworkManagerVerifierWorkspaceReachabilityAnalysisIntentArgs {
    /**
     * The description of the resource. Changing this forces a new Network Manager Verifier Workspace Reachability Analysis Intent to be created.
     */
    description?: pulumi.Input<string>;
    /**
     * The ID of the destination resource. The value can be the ID of either Public internet, Cosmos DB, Storage Account, SQL Server, Virtual machines, or Subnet. Changing this forces a new Network Manager Verifier Workspace Reachability Analysis Intent to be created.
     */
    destinationResourceId: pulumi.Input<string>;
    /**
     * An `ipTraffic` block as defined below. Changing this forces a new Network Manager Verifier Workspace Reachability Analysis Intent to be created.
     */
    ipTraffic: pulumi.Input<inputs.network.NetworkManagerVerifierWorkspaceReachabilityAnalysisIntentIpTraffic>;
    /**
     * The name which should be used for this Network Manager Verifier Workspace Reachability Analysis Intent. Changing this forces a new Network Manager Verifier Workspace Reachability Analysis Intent to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * The ID of the source resource. The value can be the ID of either Public internet, Virtual machines, or Subnet. Changing this forces a new Network Manager Verifier Workspace Reachability Analysis Intent to be created.
     */
    sourceResourceId: pulumi.Input<string>;
    /**
     * The ID of the Network Manager Verifier Workspace. Changing this forces a new Network Manager Verifier Workspace Reachability Analysis Intent to be created.
     */
    verifierWorkspaceId: pulumi.Input<string>;
}
