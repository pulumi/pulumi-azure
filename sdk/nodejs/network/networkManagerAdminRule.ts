// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Manages a Network Manager Admin Rule.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = new azure.core.ResourceGroup("example", {
 *     name: "example-resources",
 *     location: "West Europe",
 * });
 * const current = azure.core.getSubscription({});
 * const exampleNetworkManager = new azure.network.NetworkManager("example", {
 *     name: "example-network-manager",
 *     location: example.location,
 *     resourceGroupName: example.name,
 *     scope: {
 *         subscriptionIds: [current.then(current => current.id)],
 *     },
 *     scopeAccesses: [
 *         "Connectivity",
 *         "SecurityAdmin",
 *     ],
 *     description: "example network manager",
 * });
 * const exampleNetworkManagerNetworkGroup = new azure.network.NetworkManagerNetworkGroup("example", {
 *     name: "example-network-group",
 *     networkManagerId: exampleNetworkManager.id,
 * });
 * const exampleNetworkManagerSecurityAdminConfiguration = new azure.network.NetworkManagerSecurityAdminConfiguration("example", {
 *     name: "example-admin-conf",
 *     networkManagerId: exampleNetworkManager.id,
 * });
 * const exampleNetworkManagerAdminRuleCollection = new azure.network.NetworkManagerAdminRuleCollection("example", {
 *     name: "example-admin-rule-collection",
 *     securityAdminConfigurationId: exampleNetworkManagerSecurityAdminConfiguration.id,
 *     networkGroupIds: [exampleNetworkManagerNetworkGroup.id],
 * });
 * const exampleNetworkManagerAdminRule = new azure.network.NetworkManagerAdminRule("example", {
 *     name: "example-admin-rule",
 *     adminRuleCollectionId: exampleNetworkManagerAdminRuleCollection.id,
 *     action: "Deny",
 *     direction: "Outbound",
 *     priority: 1,
 *     protocol: "Tcp",
 *     sourcePortRanges: [
 *         "80",
 *         "1024-65535",
 *     ],
 *     destinationPortRanges: ["80"],
 *     sources: [{
 *         addressPrefixType: "ServiceTag",
 *         addressPrefix: "Internet",
 *     }],
 *     destinations: [
 *         {
 *             addressPrefixType: "IPPrefix",
 *             addressPrefix: "10.1.0.1",
 *         },
 *         {
 *             addressPrefixType: "IPPrefix",
 *             addressPrefix: "10.0.0.0/24",
 *         },
 *     ],
 *     description: "example admin rule",
 * });
 * ```
 *
 * ## API Providers
 *
 * <!-- This section is generated, changes will be overwritten -->
 * This resource uses the following Azure API Providers:
 *
 * * `Microsoft.Network` - 2024-05-01
 *
 * ## Import
 *
 * Network Manager Admin Rule can be imported using the `resource id`, e.g.
 *
 * ```sh
 * $ pulumi import azure:network/networkManagerAdminRule:NetworkManagerAdminRule example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resourceGroup1/providers/Microsoft.Network/networkManagers/networkManager1/securityAdminConfigurations/configuration1/ruleCollections/ruleCollection1/rules/rule1
 * ```
 */
export class NetworkManagerAdminRule extends pulumi.CustomResource {
    /**
     * Get an existing NetworkManagerAdminRule resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: NetworkManagerAdminRuleState, opts?: pulumi.CustomResourceOptions): NetworkManagerAdminRule {
        return new NetworkManagerAdminRule(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure:network/networkManagerAdminRule:NetworkManagerAdminRule';

    /**
     * Returns true if the given object is an instance of NetworkManagerAdminRule.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is NetworkManagerAdminRule {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === NetworkManagerAdminRule.__pulumiType;
    }

    /**
     * Specifies the action allowed for this Network Manager Admin Rule. Possible values are `Allow`, `AlwaysAllow`, and `Deny`.
     */
    declare public readonly action: pulumi.Output<string>;
    /**
     * Specifies the ID of the Network Manager Admin Rule Collection. Changing this forces a new Network Manager Admin Rule to be created.
     */
    declare public readonly adminRuleCollectionId: pulumi.Output<string>;
    /**
     * A description of the Network Manager Admin Rule.
     */
    declare public readonly description: pulumi.Output<string | undefined>;
    /**
     * A list of string specifies the destination port ranges. Specify one or more single port number or port ranges such as `1024-65535`. Use `*` to specify any port.
     */
    declare public readonly destinationPortRanges: pulumi.Output<string[] | undefined>;
    /**
     * One or more `destination` blocks as defined below.
     */
    declare public readonly destinations: pulumi.Output<outputs.network.NetworkManagerAdminRuleDestination[] | undefined>;
    /**
     * Indicates if the traffic matched against the rule in inbound or outbound. Possible values are `Inbound` and `Outbound`.
     */
    declare public readonly direction: pulumi.Output<string>;
    /**
     * Specifies the name which should be used for this Network Manager Admin Rule. Changing this forces a new Network Manager Admin Rule to be created.
     */
    declare public readonly name: pulumi.Output<string>;
    /**
     * The priority of the rule. Possible values are integers between `1` and `4096`. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule.
     */
    declare public readonly priority: pulumi.Output<number>;
    /**
     * Specifies which network protocol this Network Manager Admin Rule applies to. Possible values are `Ah`, `Any`, `Esp`, `Icmp`, `Tcp`, and `Udp`.
     */
    declare public readonly protocol: pulumi.Output<string>;
    /**
     * A list of string specifies the source port ranges. Specify one or more single port number or port ranges such as `1024-65535`. Use `*` to specify any port.
     */
    declare public readonly sourcePortRanges: pulumi.Output<string[] | undefined>;
    /**
     * One or more `source` blocks as defined below.
     */
    declare public readonly sources: pulumi.Output<outputs.network.NetworkManagerAdminRuleSource[] | undefined>;

    /**
     * Create a NetworkManagerAdminRule resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: NetworkManagerAdminRuleArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: NetworkManagerAdminRuleArgs | NetworkManagerAdminRuleState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as NetworkManagerAdminRuleState | undefined;
            resourceInputs["action"] = state?.action;
            resourceInputs["adminRuleCollectionId"] = state?.adminRuleCollectionId;
            resourceInputs["description"] = state?.description;
            resourceInputs["destinationPortRanges"] = state?.destinationPortRanges;
            resourceInputs["destinations"] = state?.destinations;
            resourceInputs["direction"] = state?.direction;
            resourceInputs["name"] = state?.name;
            resourceInputs["priority"] = state?.priority;
            resourceInputs["protocol"] = state?.protocol;
            resourceInputs["sourcePortRanges"] = state?.sourcePortRanges;
            resourceInputs["sources"] = state?.sources;
        } else {
            const args = argsOrState as NetworkManagerAdminRuleArgs | undefined;
            if (args?.action === undefined && !opts.urn) {
                throw new Error("Missing required property 'action'");
            }
            if (args?.adminRuleCollectionId === undefined && !opts.urn) {
                throw new Error("Missing required property 'adminRuleCollectionId'");
            }
            if (args?.direction === undefined && !opts.urn) {
                throw new Error("Missing required property 'direction'");
            }
            if (args?.priority === undefined && !opts.urn) {
                throw new Error("Missing required property 'priority'");
            }
            if (args?.protocol === undefined && !opts.urn) {
                throw new Error("Missing required property 'protocol'");
            }
            resourceInputs["action"] = args?.action;
            resourceInputs["adminRuleCollectionId"] = args?.adminRuleCollectionId;
            resourceInputs["description"] = args?.description;
            resourceInputs["destinationPortRanges"] = args?.destinationPortRanges;
            resourceInputs["destinations"] = args?.destinations;
            resourceInputs["direction"] = args?.direction;
            resourceInputs["name"] = args?.name;
            resourceInputs["priority"] = args?.priority;
            resourceInputs["protocol"] = args?.protocol;
            resourceInputs["sourcePortRanges"] = args?.sourcePortRanges;
            resourceInputs["sources"] = args?.sources;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(NetworkManagerAdminRule.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering NetworkManagerAdminRule resources.
 */
export interface NetworkManagerAdminRuleState {
    /**
     * Specifies the action allowed for this Network Manager Admin Rule. Possible values are `Allow`, `AlwaysAllow`, and `Deny`.
     */
    action?: pulumi.Input<string>;
    /**
     * Specifies the ID of the Network Manager Admin Rule Collection. Changing this forces a new Network Manager Admin Rule to be created.
     */
    adminRuleCollectionId?: pulumi.Input<string>;
    /**
     * A description of the Network Manager Admin Rule.
     */
    description?: pulumi.Input<string>;
    /**
     * A list of string specifies the destination port ranges. Specify one or more single port number or port ranges such as `1024-65535`. Use `*` to specify any port.
     */
    destinationPortRanges?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * One or more `destination` blocks as defined below.
     */
    destinations?: pulumi.Input<pulumi.Input<inputs.network.NetworkManagerAdminRuleDestination>[]>;
    /**
     * Indicates if the traffic matched against the rule in inbound or outbound. Possible values are `Inbound` and `Outbound`.
     */
    direction?: pulumi.Input<string>;
    /**
     * Specifies the name which should be used for this Network Manager Admin Rule. Changing this forces a new Network Manager Admin Rule to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * The priority of the rule. Possible values are integers between `1` and `4096`. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule.
     */
    priority?: pulumi.Input<number>;
    /**
     * Specifies which network protocol this Network Manager Admin Rule applies to. Possible values are `Ah`, `Any`, `Esp`, `Icmp`, `Tcp`, and `Udp`.
     */
    protocol?: pulumi.Input<string>;
    /**
     * A list of string specifies the source port ranges. Specify one or more single port number or port ranges such as `1024-65535`. Use `*` to specify any port.
     */
    sourcePortRanges?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * One or more `source` blocks as defined below.
     */
    sources?: pulumi.Input<pulumi.Input<inputs.network.NetworkManagerAdminRuleSource>[]>;
}

/**
 * The set of arguments for constructing a NetworkManagerAdminRule resource.
 */
export interface NetworkManagerAdminRuleArgs {
    /**
     * Specifies the action allowed for this Network Manager Admin Rule. Possible values are `Allow`, `AlwaysAllow`, and `Deny`.
     */
    action: pulumi.Input<string>;
    /**
     * Specifies the ID of the Network Manager Admin Rule Collection. Changing this forces a new Network Manager Admin Rule to be created.
     */
    adminRuleCollectionId: pulumi.Input<string>;
    /**
     * A description of the Network Manager Admin Rule.
     */
    description?: pulumi.Input<string>;
    /**
     * A list of string specifies the destination port ranges. Specify one or more single port number or port ranges such as `1024-65535`. Use `*` to specify any port.
     */
    destinationPortRanges?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * One or more `destination` blocks as defined below.
     */
    destinations?: pulumi.Input<pulumi.Input<inputs.network.NetworkManagerAdminRuleDestination>[]>;
    /**
     * Indicates if the traffic matched against the rule in inbound or outbound. Possible values are `Inbound` and `Outbound`.
     */
    direction: pulumi.Input<string>;
    /**
     * Specifies the name which should be used for this Network Manager Admin Rule. Changing this forces a new Network Manager Admin Rule to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * The priority of the rule. Possible values are integers between `1` and `4096`. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule.
     */
    priority: pulumi.Input<number>;
    /**
     * Specifies which network protocol this Network Manager Admin Rule applies to. Possible values are `Ah`, `Any`, `Esp`, `Icmp`, `Tcp`, and `Udp`.
     */
    protocol: pulumi.Input<string>;
    /**
     * A list of string specifies the source port ranges. Specify one or more single port number or port ranges such as `1024-65535`. Use `*` to specify any port.
     */
    sourcePortRanges?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * One or more `source` blocks as defined below.
     */
    sources?: pulumi.Input<pulumi.Input<inputs.network.NetworkManagerAdminRuleSource>[]>;
}
