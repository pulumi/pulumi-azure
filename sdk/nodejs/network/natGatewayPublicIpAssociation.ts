// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Manages the association between a Nat Gateway and a Public IP.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const exampleResourceGroup = new azure.core.ResourceGroup("exampleResourceGroup", {location: "West Europe"});
 * const examplePublicIp = new azure.network.PublicIp("examplePublicIp", {
 *     location: exampleResourceGroup.location,
 *     resourceGroupName: exampleResourceGroup.name,
 *     allocationMethod: "Static",
 *     sku: "Standard",
 * });
 * const exampleNatGateway = new azure.network.NatGateway("exampleNatGateway", {
 *     location: exampleResourceGroup.location,
 *     resourceGroupName: exampleResourceGroup.name,
 *     skuName: "Standard",
 * });
 * const exampleNatGatewayPublicIpAssociation = new azure.network.NatGatewayPublicIpAssociation("exampleNatGatewayPublicIpAssociation", {
 *     natGatewayId: exampleNatGateway.id,
 *     publicIpAddressId: examplePublicIp.id,
 * });
 * ```
 *
 * ## Import
 *
 * Associations between Nat Gateway and Public IP Addresses can be imported using the `resource id`, e.g.
 *
 * ```sh
 *  $ pulumi import azure:network/natGatewayPublicIpAssociation:NatGatewayPublicIpAssociation example "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.Network/natGateways/gateway1|/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/mygroup1/providers/Microsoft.Network/publicIPAddresses/myPublicIpAddress1"
 * ```
 */
export class NatGatewayPublicIpAssociation extends pulumi.CustomResource {
    /**
     * Get an existing NatGatewayPublicIpAssociation resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: NatGatewayPublicIpAssociationState, opts?: pulumi.CustomResourceOptions): NatGatewayPublicIpAssociation {
        return new NatGatewayPublicIpAssociation(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure:network/natGatewayPublicIpAssociation:NatGatewayPublicIpAssociation';

    /**
     * Returns true if the given object is an instance of NatGatewayPublicIpAssociation.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is NatGatewayPublicIpAssociation {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === NatGatewayPublicIpAssociation.__pulumiType;
    }

    /**
     * The ID of the Nat Gateway. Changing this forces a new resource to be created.
     */
    public readonly natGatewayId!: pulumi.Output<string>;
    /**
     * The ID of the Public IP which this Nat Gateway which should be connected to. Changing this forces a new resource to be created.
     */
    public readonly publicIpAddressId!: pulumi.Output<string>;

    /**
     * Create a NatGatewayPublicIpAssociation resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: NatGatewayPublicIpAssociationArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: NatGatewayPublicIpAssociationArgs | NatGatewayPublicIpAssociationState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        if (opts && opts.id) {
            const state = argsOrState as NatGatewayPublicIpAssociationState | undefined;
            inputs["natGatewayId"] = state ? state.natGatewayId : undefined;
            inputs["publicIpAddressId"] = state ? state.publicIpAddressId : undefined;
        } else {
            const args = argsOrState as NatGatewayPublicIpAssociationArgs | undefined;
            if (!args || args.natGatewayId === undefined) {
                throw new Error("Missing required property 'natGatewayId'");
            }
            if (!args || args.publicIpAddressId === undefined) {
                throw new Error("Missing required property 'publicIpAddressId'");
            }
            inputs["natGatewayId"] = args ? args.natGatewayId : undefined;
            inputs["publicIpAddressId"] = args ? args.publicIpAddressId : undefined;
        }
        if (!opts) {
            opts = {}
        }

        if (!opts.version) {
            opts.version = utilities.getVersion();
        }
        super(NatGatewayPublicIpAssociation.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering NatGatewayPublicIpAssociation resources.
 */
export interface NatGatewayPublicIpAssociationState {
    /**
     * The ID of the Nat Gateway. Changing this forces a new resource to be created.
     */
    readonly natGatewayId?: pulumi.Input<string>;
    /**
     * The ID of the Public IP which this Nat Gateway which should be connected to. Changing this forces a new resource to be created.
     */
    readonly publicIpAddressId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a NatGatewayPublicIpAssociation resource.
 */
export interface NatGatewayPublicIpAssociationArgs {
    /**
     * The ID of the Nat Gateway. Changing this forces a new resource to be created.
     */
    readonly natGatewayId: pulumi.Input<string>;
    /**
     * The ID of the Public IP which this Nat Gateway which should be connected to. Changing this forces a new resource to be created.
     */
    readonly publicIpAddressId: pulumi.Input<string>;
}
