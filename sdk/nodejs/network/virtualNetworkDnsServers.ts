// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

export class VirtualNetworkDnsServers extends pulumi.CustomResource {
    /**
     * Get an existing VirtualNetworkDnsServers resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: VirtualNetworkDnsServersState, opts?: pulumi.CustomResourceOptions): VirtualNetworkDnsServers {
        return new VirtualNetworkDnsServers(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure:network/virtualNetworkDnsServers:VirtualNetworkDnsServers';

    /**
     * Returns true if the given object is an instance of VirtualNetworkDnsServers.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is VirtualNetworkDnsServers {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === VirtualNetworkDnsServers.__pulumiType;
    }

    public readonly dnsServers!: pulumi.Output<string[] | undefined>;
    public readonly virtualNetworkId!: pulumi.Output<string>;

    /**
     * Create a VirtualNetworkDnsServers resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: VirtualNetworkDnsServersArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: VirtualNetworkDnsServersArgs | VirtualNetworkDnsServersState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as VirtualNetworkDnsServersState | undefined;
            inputs["dnsServers"] = state ? state.dnsServers : undefined;
            inputs["virtualNetworkId"] = state ? state.virtualNetworkId : undefined;
        } else {
            const args = argsOrState as VirtualNetworkDnsServersArgs | undefined;
            if ((!args || args.virtualNetworkId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'virtualNetworkId'");
            }
            inputs["dnsServers"] = args ? args.dnsServers : undefined;
            inputs["virtualNetworkId"] = args ? args.virtualNetworkId : undefined;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        super(VirtualNetworkDnsServers.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering VirtualNetworkDnsServers resources.
 */
export interface VirtualNetworkDnsServersState {
    dnsServers?: pulumi.Input<pulumi.Input<string>[]>;
    virtualNetworkId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a VirtualNetworkDnsServers resource.
 */
export interface VirtualNetworkDnsServersArgs {
    dnsServers?: pulumi.Input<pulumi.Input<string>[]>;
    virtualNetworkId: pulumi.Input<string>;
}
