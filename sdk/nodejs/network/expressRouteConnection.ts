// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Manages an Express Route Connection.
 *
 * > **NOTE:** The provider status of the Express Route Circuit must be set as provisioned while creating the Express Route Connection. See more details [here](https://docs.microsoft.com/azure/expressroute/expressroute-howto-circuit-portal-resource-manager#send-the-service-key-to-your-connectivity-provider-for-provisioning).
 *
 * ## Import
 *
 * Express Route Connections can be imported using the `resource id`, e.g.
 *
 * ```sh
 *  $ pulumi import azure:network/expressRouteConnection:ExpressRouteConnection example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.Network/expressRouteGateways/expressRouteGateway1/expressRouteConnections/connection1
 * ```
 */
export class ExpressRouteConnection extends pulumi.CustomResource {
    /**
     * Get an existing ExpressRouteConnection resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ExpressRouteConnectionState, opts?: pulumi.CustomResourceOptions): ExpressRouteConnection {
        return new ExpressRouteConnection(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure:network/expressRouteConnection:ExpressRouteConnection';

    /**
     * Returns true if the given object is an instance of ExpressRouteConnection.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ExpressRouteConnection {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ExpressRouteConnection.__pulumiType;
    }

    /**
     * The authorization key to establish the Express Route Connection.
     */
    public readonly authorizationKey!: pulumi.Output<string | undefined>;
    /**
     * Is Internet security enabled for this Express Route Connection?
     */
    public readonly enableInternetSecurity!: pulumi.Output<boolean | undefined>;
    /**
     * The ID of the Express Route Circuit Peering that this Express Route Connection connects with. Changing this forces a new resource to be created.
     */
    public readonly expressRouteCircuitPeeringId!: pulumi.Output<string>;
    /**
     * Specified whether Fast Path is enabled for Virtual Wan Firewall Hub. Defaults to `false`.
     */
    public readonly expressRouteGatewayBypassEnabled!: pulumi.Output<boolean | undefined>;
    /**
     * The ID of the Express Route Gateway that this Express Route Connection connects with. Changing this forces a new resource to be created.
     */
    public readonly expressRouteGatewayId!: pulumi.Output<string>;
    /**
     * The name which should be used for this Express Route Connection. Changing this forces a new resource to be created.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * A `routing` block as defined below.
     */
    public readonly routing!: pulumi.Output<outputs.network.ExpressRouteConnectionRouting>;
    /**
     * The routing weight associated to the Express Route Connection. Possible value is between `0` and `32000`. Defaults to `0`.
     */
    public readonly routingWeight!: pulumi.Output<number | undefined>;

    /**
     * Create a ExpressRouteConnection resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ExpressRouteConnectionArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ExpressRouteConnectionArgs | ExpressRouteConnectionState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ExpressRouteConnectionState | undefined;
            resourceInputs["authorizationKey"] = state ? state.authorizationKey : undefined;
            resourceInputs["enableInternetSecurity"] = state ? state.enableInternetSecurity : undefined;
            resourceInputs["expressRouteCircuitPeeringId"] = state ? state.expressRouteCircuitPeeringId : undefined;
            resourceInputs["expressRouteGatewayBypassEnabled"] = state ? state.expressRouteGatewayBypassEnabled : undefined;
            resourceInputs["expressRouteGatewayId"] = state ? state.expressRouteGatewayId : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["routing"] = state ? state.routing : undefined;
            resourceInputs["routingWeight"] = state ? state.routingWeight : undefined;
        } else {
            const args = argsOrState as ExpressRouteConnectionArgs | undefined;
            if ((!args || args.expressRouteCircuitPeeringId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'expressRouteCircuitPeeringId'");
            }
            if ((!args || args.expressRouteGatewayId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'expressRouteGatewayId'");
            }
            resourceInputs["authorizationKey"] = args ? args.authorizationKey : undefined;
            resourceInputs["enableInternetSecurity"] = args ? args.enableInternetSecurity : undefined;
            resourceInputs["expressRouteCircuitPeeringId"] = args ? args.expressRouteCircuitPeeringId : undefined;
            resourceInputs["expressRouteGatewayBypassEnabled"] = args ? args.expressRouteGatewayBypassEnabled : undefined;
            resourceInputs["expressRouteGatewayId"] = args ? args.expressRouteGatewayId : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["routing"] = args ? args.routing : undefined;
            resourceInputs["routingWeight"] = args ? args.routingWeight : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ExpressRouteConnection.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ExpressRouteConnection resources.
 */
export interface ExpressRouteConnectionState {
    /**
     * The authorization key to establish the Express Route Connection.
     */
    authorizationKey?: pulumi.Input<string>;
    /**
     * Is Internet security enabled for this Express Route Connection?
     */
    enableInternetSecurity?: pulumi.Input<boolean>;
    /**
     * The ID of the Express Route Circuit Peering that this Express Route Connection connects with. Changing this forces a new resource to be created.
     */
    expressRouteCircuitPeeringId?: pulumi.Input<string>;
    /**
     * Specified whether Fast Path is enabled for Virtual Wan Firewall Hub. Defaults to `false`.
     */
    expressRouteGatewayBypassEnabled?: pulumi.Input<boolean>;
    /**
     * The ID of the Express Route Gateway that this Express Route Connection connects with. Changing this forces a new resource to be created.
     */
    expressRouteGatewayId?: pulumi.Input<string>;
    /**
     * The name which should be used for this Express Route Connection. Changing this forces a new resource to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * A `routing` block as defined below.
     */
    routing?: pulumi.Input<inputs.network.ExpressRouteConnectionRouting>;
    /**
     * The routing weight associated to the Express Route Connection. Possible value is between `0` and `32000`. Defaults to `0`.
     */
    routingWeight?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a ExpressRouteConnection resource.
 */
export interface ExpressRouteConnectionArgs {
    /**
     * The authorization key to establish the Express Route Connection.
     */
    authorizationKey?: pulumi.Input<string>;
    /**
     * Is Internet security enabled for this Express Route Connection?
     */
    enableInternetSecurity?: pulumi.Input<boolean>;
    /**
     * The ID of the Express Route Circuit Peering that this Express Route Connection connects with. Changing this forces a new resource to be created.
     */
    expressRouteCircuitPeeringId: pulumi.Input<string>;
    /**
     * Specified whether Fast Path is enabled for Virtual Wan Firewall Hub. Defaults to `false`.
     */
    expressRouteGatewayBypassEnabled?: pulumi.Input<boolean>;
    /**
     * The ID of the Express Route Gateway that this Express Route Connection connects with. Changing this forces a new resource to be created.
     */
    expressRouteGatewayId: pulumi.Input<string>;
    /**
     * The name which should be used for this Express Route Connection. Changing this forces a new resource to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * A `routing` block as defined below.
     */
    routing?: pulumi.Input<inputs.network.ExpressRouteConnectionRouting>;
    /**
     * The routing weight associated to the Express Route Connection. Possible value is between `0` and `32000`. Defaults to `0`.
     */
    routingWeight?: pulumi.Input<number>;
}
