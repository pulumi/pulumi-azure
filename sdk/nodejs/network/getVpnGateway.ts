// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Use this data source to access information about an existing VPN Gateway within a Virtual Hub.
 */
export function getVpnGateway(args: GetVpnGatewayArgs, opts?: pulumi.InvokeOptions): Promise<GetVpnGatewayResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azure:network/getVpnGateway:getVpnGateway", {
        "name": args.name,
        "resourceGroupName": args.resourceGroupName,
    }, opts);
}

/**
 * A collection of arguments for invoking getVpnGateway.
 */
export interface GetVpnGatewayArgs {
    /**
     * The Name of the VPN Gateway.
     */
    name: string;
    /**
     * The name of the Resource Group where the VPN Gateway exists.
     */
    resourceGroupName: string;
}

/**
 * A collection of values returned by getVpnGateway.
 */
export interface GetVpnGatewayResult {
    /**
     * A `bgpSettings` block as defined below.
     */
    readonly bgpSettings: outputs.network.GetVpnGatewayBgpSetting[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The Azure location where the VPN Gateway exists.
     */
    readonly location: string;
    readonly name: string;
    readonly resourceGroupName: string;
    /**
     * The Scale Unit of this VPN Gateway.
     */
    readonly scaleUnit: number;
    /**
     * A mapping of tags assigned to the VPN Gateway.
     */
    readonly tags: {[key: string]: string};
    /**
     * The ID of the Virtual Hub within which this VPN Gateway has been created.
     */
    readonly virtualHubId: string;
}
/**
 * Use this data source to access information about an existing VPN Gateway within a Virtual Hub.
 */
export function getVpnGatewayOutput(args: GetVpnGatewayOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetVpnGatewayResult> {
    return pulumi.output(args).apply((a: any) => getVpnGateway(a, opts))
}

/**
 * A collection of arguments for invoking getVpnGateway.
 */
export interface GetVpnGatewayOutputArgs {
    /**
     * The Name of the VPN Gateway.
     */
    name: pulumi.Input<string>;
    /**
     * The name of the Resource Group where the VPN Gateway exists.
     */
    resourceGroupName: pulumi.Input<string>;
}
