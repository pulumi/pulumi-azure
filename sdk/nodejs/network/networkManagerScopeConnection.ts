// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Manages a Network Manager Scope Connection which may cross tenants.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = new azure.core.ResourceGroup("example", {
 *     name: "example-resources",
 *     location: "West Europe",
 * });
 * const current = azure.core.getClientConfig({});
 * const currentGetSubscription = azure.core.getSubscription({});
 * const alt = azure.core.getSubscription({
 *     subscriptionId: "00000000-0000-0000-0000-000000000000",
 * });
 * const exampleNetworkManager = new azure.network.NetworkManager("example", {
 *     name: "example-networkmanager",
 *     location: example.location,
 *     resourceGroupName: example.name,
 *     scope: {
 *         subscriptionIds: [currentGetSubscription.then(currentGetSubscription => currentGetSubscription.id)],
 *     },
 *     scopeAccesses: ["SecurityAdmin"],
 * });
 * const exampleNetworkManagerScopeConnection = new azure.network.NetworkManagerScopeConnection("example", {
 *     name: "example-nsc",
 *     networkManagerId: exampleNetworkManager.id,
 *     tenantId: current.then(current => current.tenantId),
 *     targetScopeId: alt.then(alt => alt.id),
 *     description: "example",
 * });
 * ```
 *
 * ## API Providers
 *
 * <!-- This section is generated, changes will be overwritten -->
 * This resource uses the following Azure API Providers:
 *
 * * `Microsoft.Network` - 2024-05-01
 *
 * ## Import
 *
 * Network Manager Scope Connection can be imported using the `resource id`, e.g.
 *
 * ```sh
 * $ pulumi import azure:network/networkManagerScopeConnection:NetworkManagerScopeConnection example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resourceGroup1/providers/Microsoft.Network/networkManagers/networkManager1/scopeConnections/scopeConnection1
 * ```
 */
export class NetworkManagerScopeConnection extends pulumi.CustomResource {
    /**
     * Get an existing NetworkManagerScopeConnection resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: NetworkManagerScopeConnectionState, opts?: pulumi.CustomResourceOptions): NetworkManagerScopeConnection {
        return new NetworkManagerScopeConnection(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure:network/networkManagerScopeConnection:NetworkManagerScopeConnection';

    /**
     * Returns true if the given object is an instance of NetworkManagerScopeConnection.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is NetworkManagerScopeConnection {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === NetworkManagerScopeConnection.__pulumiType;
    }

    /**
     * The Connection state of the Network Manager Scope Connection.
     */
    declare public /*out*/ readonly connectionState: pulumi.Output<string>;
    /**
     * A description of the Network Manager Scope Connection.
     */
    declare public readonly description: pulumi.Output<string | undefined>;
    /**
     * Specifies the name which should be used for this Network Manager Scope Connection. Changing this forces a new Network Manager Scope Connection to be created.
     */
    declare public readonly name: pulumi.Output<string>;
    /**
     * Specifies the ID of the Network Manager Scope Connection. Changing this forces a new Network Manager Scope Connection to be created.
     */
    declare public readonly networkManagerId: pulumi.Output<string>;
    /**
     * Specifies the Resource ID of the target scope which the Network Manager is connected to. It should be either Subscription ID or Management Group ID.
     */
    declare public readonly targetScopeId: pulumi.Output<string>;
    /**
     * Specifies the Tenant ID of the Resource which the Network Manager is connected to.
     */
    declare public readonly tenantId: pulumi.Output<string>;

    /**
     * Create a NetworkManagerScopeConnection resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: NetworkManagerScopeConnectionArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: NetworkManagerScopeConnectionArgs | NetworkManagerScopeConnectionState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as NetworkManagerScopeConnectionState | undefined;
            resourceInputs["connectionState"] = state?.connectionState;
            resourceInputs["description"] = state?.description;
            resourceInputs["name"] = state?.name;
            resourceInputs["networkManagerId"] = state?.networkManagerId;
            resourceInputs["targetScopeId"] = state?.targetScopeId;
            resourceInputs["tenantId"] = state?.tenantId;
        } else {
            const args = argsOrState as NetworkManagerScopeConnectionArgs | undefined;
            if (args?.networkManagerId === undefined && !opts.urn) {
                throw new Error("Missing required property 'networkManagerId'");
            }
            if (args?.targetScopeId === undefined && !opts.urn) {
                throw new Error("Missing required property 'targetScopeId'");
            }
            if (args?.tenantId === undefined && !opts.urn) {
                throw new Error("Missing required property 'tenantId'");
            }
            resourceInputs["description"] = args?.description;
            resourceInputs["name"] = args?.name;
            resourceInputs["networkManagerId"] = args?.networkManagerId;
            resourceInputs["targetScopeId"] = args?.targetScopeId;
            resourceInputs["tenantId"] = args?.tenantId;
            resourceInputs["connectionState"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(NetworkManagerScopeConnection.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering NetworkManagerScopeConnection resources.
 */
export interface NetworkManagerScopeConnectionState {
    /**
     * The Connection state of the Network Manager Scope Connection.
     */
    connectionState?: pulumi.Input<string>;
    /**
     * A description of the Network Manager Scope Connection.
     */
    description?: pulumi.Input<string>;
    /**
     * Specifies the name which should be used for this Network Manager Scope Connection. Changing this forces a new Network Manager Scope Connection to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * Specifies the ID of the Network Manager Scope Connection. Changing this forces a new Network Manager Scope Connection to be created.
     */
    networkManagerId?: pulumi.Input<string>;
    /**
     * Specifies the Resource ID of the target scope which the Network Manager is connected to. It should be either Subscription ID or Management Group ID.
     */
    targetScopeId?: pulumi.Input<string>;
    /**
     * Specifies the Tenant ID of the Resource which the Network Manager is connected to.
     */
    tenantId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a NetworkManagerScopeConnection resource.
 */
export interface NetworkManagerScopeConnectionArgs {
    /**
     * A description of the Network Manager Scope Connection.
     */
    description?: pulumi.Input<string>;
    /**
     * Specifies the name which should be used for this Network Manager Scope Connection. Changing this forces a new Network Manager Scope Connection to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * Specifies the ID of the Network Manager Scope Connection. Changing this forces a new Network Manager Scope Connection to be created.
     */
    networkManagerId: pulumi.Input<string>;
    /**
     * Specifies the Resource ID of the target scope which the Network Manager is connected to. It should be either Subscription ID or Management Group ID.
     */
    targetScopeId: pulumi.Input<string>;
    /**
     * Specifies the Tenant ID of the Resource which the Network Manager is connected to.
     */
    tenantId: pulumi.Input<string>;
}
