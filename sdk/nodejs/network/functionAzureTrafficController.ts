// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Manages a Network Function Azure Traffic Collector.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const exampleResourceGroup = new azure.core.ResourceGroup("exampleResourceGroup", {location: "West US"});
 * const exampleAzureTrafficCollector = new azure.networkfunction.AzureTrafficCollector("exampleAzureTrafficCollector", {
 *     resourceGroupName: exampleResourceGroup.name,
 *     location: "West US",
 *     tags: {
 *         key: "value",
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * Network Function Azure Traffic Collector can be imported using the `resource id`, e.g.
 *
 * ```sh
 *  $ pulumi import azure:network/functionAzureTrafficController:FunctionAzureTrafficController example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resourceGroup1/providers/Microsoft.NetworkFunction/azureTrafficCollectors/azureTrafficCollector1
 * ```
 *
 * @deprecated azure.network/functionazuretrafficcontroller.FunctionAzureTrafficController has been deprecated in favor of azure.networkfunction/azuretrafficcollector.AzureTrafficCollector
 */
export class FunctionAzureTrafficController extends pulumi.CustomResource {
    /**
     * Get an existing FunctionAzureTrafficController resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: FunctionAzureTrafficControllerState, opts?: pulumi.CustomResourceOptions): FunctionAzureTrafficController {
        pulumi.log.warn("FunctionAzureTrafficController is deprecated: azure.network/functionazuretrafficcontroller.FunctionAzureTrafficController has been deprecated in favor of azure.networkfunction/azuretrafficcollector.AzureTrafficCollector")
        return new FunctionAzureTrafficController(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure:network/functionAzureTrafficController:FunctionAzureTrafficController';

    /**
     * Returns true if the given object is an instance of FunctionAzureTrafficController.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is FunctionAzureTrafficController {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === FunctionAzureTrafficController.__pulumiType;
    }

    /**
     * The list of Resource IDs of collector policies.
     */
    public /*out*/ readonly collectorPolicyIds!: pulumi.Output<string[]>;
    /**
     * Specifies the Azure Region where the Network Function Azure Traffic Collector should exist. Changing this forces a new Network Function Azure Traffic Collector to be created.
     */
    public readonly location!: pulumi.Output<string>;
    /**
     * Specifies the name which should be used for this Network Function Azure Traffic Collector. Changing this forces a new Network Function Azure Traffic Collector to be created.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Specifies the name of the Resource Group where the Network Function Azure Traffic Collector should exist. Changing this forces a new Network Function Azure Traffic Collector to be created.
     */
    public readonly resourceGroupName!: pulumi.Output<string>;
    /**
     * A mapping of tags which should be assigned to the Network Function Azure Traffic Collector.
     */
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * The Resource ID of virtual hub.
     */
    public /*out*/ readonly virtualHubIds!: pulumi.Output<string[]>;

    /**
     * Create a FunctionAzureTrafficController resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    /** @deprecated azure.network/functionazuretrafficcontroller.FunctionAzureTrafficController has been deprecated in favor of azure.networkfunction/azuretrafficcollector.AzureTrafficCollector */
    constructor(name: string, args: FunctionAzureTrafficControllerArgs, opts?: pulumi.CustomResourceOptions)
    /** @deprecated azure.network/functionazuretrafficcontroller.FunctionAzureTrafficController has been deprecated in favor of azure.networkfunction/azuretrafficcollector.AzureTrafficCollector */
    constructor(name: string, argsOrState?: FunctionAzureTrafficControllerArgs | FunctionAzureTrafficControllerState, opts?: pulumi.CustomResourceOptions) {
        pulumi.log.warn("FunctionAzureTrafficController is deprecated: azure.network/functionazuretrafficcontroller.FunctionAzureTrafficController has been deprecated in favor of azure.networkfunction/azuretrafficcollector.AzureTrafficCollector")
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as FunctionAzureTrafficControllerState | undefined;
            resourceInputs["collectorPolicyIds"] = state ? state.collectorPolicyIds : undefined;
            resourceInputs["location"] = state ? state.location : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["resourceGroupName"] = state ? state.resourceGroupName : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["virtualHubIds"] = state ? state.virtualHubIds : undefined;
        } else {
            const args = argsOrState as FunctionAzureTrafficControllerArgs | undefined;
            if ((!args || args.resourceGroupName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            resourceInputs["location"] = args ? args.location : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["collectorPolicyIds"] = undefined /*out*/;
            resourceInputs["virtualHubIds"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(FunctionAzureTrafficController.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering FunctionAzureTrafficController resources.
 */
export interface FunctionAzureTrafficControllerState {
    /**
     * The list of Resource IDs of collector policies.
     */
    collectorPolicyIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies the Azure Region where the Network Function Azure Traffic Collector should exist. Changing this forces a new Network Function Azure Traffic Collector to be created.
     */
    location?: pulumi.Input<string>;
    /**
     * Specifies the name which should be used for this Network Function Azure Traffic Collector. Changing this forces a new Network Function Azure Traffic Collector to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * Specifies the name of the Resource Group where the Network Function Azure Traffic Collector should exist. Changing this forces a new Network Function Azure Traffic Collector to be created.
     */
    resourceGroupName?: pulumi.Input<string>;
    /**
     * A mapping of tags which should be assigned to the Network Function Azure Traffic Collector.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The Resource ID of virtual hub.
     */
    virtualHubIds?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * The set of arguments for constructing a FunctionAzureTrafficController resource.
 */
export interface FunctionAzureTrafficControllerArgs {
    /**
     * Specifies the Azure Region where the Network Function Azure Traffic Collector should exist. Changing this forces a new Network Function Azure Traffic Collector to be created.
     */
    location?: pulumi.Input<string>;
    /**
     * Specifies the name which should be used for this Network Function Azure Traffic Collector. Changing this forces a new Network Function Azure Traffic Collector to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * Specifies the name of the Resource Group where the Network Function Azure Traffic Collector should exist. Changing this forces a new Network Function Azure Traffic Collector to be created.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * A mapping of tags which should be assigned to the Network Function Azure Traffic Collector.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
