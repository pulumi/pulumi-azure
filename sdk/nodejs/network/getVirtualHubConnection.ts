// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Uses this data source to access information about an existing Virtual Hub Connection.
 */
export function getVirtualHubConnection(args: GetVirtualHubConnectionArgs, opts?: pulumi.InvokeOptions): Promise<GetVirtualHubConnectionResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azure:network/getVirtualHubConnection:getVirtualHubConnection", {
        "name": args.name,
        "resourceGroupName": args.resourceGroupName,
        "virtualHubName": args.virtualHubName,
    }, opts);
}

/**
 * A collection of arguments for invoking getVirtualHubConnection.
 */
export interface GetVirtualHubConnectionArgs {
    /**
     * The name of the Connection which should be retrieved.
     */
    name: string;
    /**
     * The Name of the Resource Group where the Virtual Hub Connection exists.
     */
    resourceGroupName: string;
    /**
     * The name of the Virtual Hub where this Connection exists.
     */
    virtualHubName: string;
}

/**
 * A collection of values returned by getVirtualHubConnection.
 */
export interface GetVirtualHubConnectionResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * Whether Internet Security is enabled to secure internet traffic on this connection
     */
    readonly internetSecurityEnabled: boolean;
    /**
     * The name which is used for this Static Route.
     */
    readonly name: string;
    /**
     * The ID of the Virtual Network which the Virtual Hub is connected
     */
    readonly remoteVirtualNetworkId: string;
    readonly resourceGroupName: string;
    /**
     * A `routing` block as defined below.
     */
    readonly routings: outputs.network.GetVirtualHubConnectionRouting[];
    /**
     * The ID of the Virtual Hub within which this connection is created
     */
    readonly virtualHubId: string;
    readonly virtualHubName: string;
}
/**
 * Uses this data source to access information about an existing Virtual Hub Connection.
 */
export function getVirtualHubConnectionOutput(args: GetVirtualHubConnectionOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetVirtualHubConnectionResult> {
    return pulumi.output(args).apply((a: any) => getVirtualHubConnection(a, opts))
}

/**
 * A collection of arguments for invoking getVirtualHubConnection.
 */
export interface GetVirtualHubConnectionOutputArgs {
    /**
     * The name of the Connection which should be retrieved.
     */
    name: pulumi.Input<string>;
    /**
     * The Name of the Resource Group where the Virtual Hub Connection exists.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * The name of the Virtual Hub where this Connection exists.
     */
    virtualHubName: pulumi.Input<string>;
}
