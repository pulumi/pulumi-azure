// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Manages an Azure File Share Backup Policy within a Recovery Services vault.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = new azure.core.ResourceGroup("example", {
 *     name: "tfex-recovery_vault",
 *     location: "West Europe",
 * });
 * const exampleVault = new azure.recoveryservices.Vault("example", {
 *     name: "tfex-recovery-vault",
 *     location: example.location,
 *     resourceGroupName: example.name,
 *     sku: "Standard",
 * });
 * const policy = new azure.backup.PolicyFileShare("policy", {
 *     name: "tfex-recovery-vault-policy",
 *     resourceGroupName: example.name,
 *     recoveryVaultName: exampleVault.name,
 *     timezone: "UTC",
 *     backup: {
 *         frequency: "Daily",
 *         time: "23:00",
 *     },
 *     retentionDaily: {
 *         count: 10,
 *     },
 *     retentionWeekly: {
 *         count: 7,
 *         weekdays: [
 *             "Sunday",
 *             "Wednesday",
 *             "Friday",
 *             "Saturday",
 *         ],
 *     },
 *     retentionMonthly: {
 *         count: 7,
 *         weekdays: [
 *             "Sunday",
 *             "Wednesday",
 *         ],
 *         weeks: [
 *             "First",
 *             "Last",
 *         ],
 *     },
 *     retentionYearly: {
 *         count: 7,
 *         weekdays: ["Sunday"],
 *         weeks: ["Last"],
 *         months: ["January"],
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * Azure File Share Backup Policies can be imported using the `resource id`, e.g.
 *
 * ```sh
 * $ pulumi import azure:backup/policyFileShare:PolicyFileShare policy1 /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.RecoveryServices/vaults/example-recovery-vault/backupPolicies/policy1
 * ```
 */
export class PolicyFileShare extends pulumi.CustomResource {
    /**
     * Get an existing PolicyFileShare resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: PolicyFileShareState, opts?: pulumi.CustomResourceOptions): PolicyFileShare {
        return new PolicyFileShare(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure:backup/policyFileShare:PolicyFileShare';

    /**
     * Returns true if the given object is an instance of PolicyFileShare.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is PolicyFileShare {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === PolicyFileShare.__pulumiType;
    }

    /**
     * Configures the Policy backup frequency and times as documented in the `backup` block below.
     */
    declare public readonly backup: pulumi.Output<outputs.backup.PolicyFileShareBackup>;
    /**
     * Specifies the name of the policy. Changing this forces a new resource to be created.
     */
    declare public readonly name: pulumi.Output<string>;
    /**
     * Specifies the name of the Recovery Services Vault to use. Changing this forces a new resource to be created.
     */
    declare public readonly recoveryVaultName: pulumi.Output<string>;
    /**
     * The name of the resource group in which to create the policy. Changing this forces a new resource to be created.
     */
    declare public readonly resourceGroupName: pulumi.Output<string>;
    /**
     * Configures the policy daily retention as documented in the `retentionDaily` block below.
     */
    declare public readonly retentionDaily: pulumi.Output<outputs.backup.PolicyFileShareRetentionDaily>;
    /**
     * Configures the policy monthly retention as documented in the `retentionMonthly` block below.
     */
    declare public readonly retentionMonthly: pulumi.Output<outputs.backup.PolicyFileShareRetentionMonthly | undefined>;
    /**
     * Configures the policy weekly retention as documented in the `retentionWeekly` block below.
     */
    declare public readonly retentionWeekly: pulumi.Output<outputs.backup.PolicyFileShareRetentionWeekly | undefined>;
    /**
     * Configures the policy yearly retention as documented in the `retentionYearly` block below.
     */
    declare public readonly retentionYearly: pulumi.Output<outputs.backup.PolicyFileShareRetentionYearly | undefined>;
    /**
     * Specifies the timezone. [the possible values are defined here](https://jackstromberg.com/2017/01/list-of-time-zones-consumed-by-azure/). Defaults to `UTC`
     *
     * > **Note:** The maximum number of snapshots that Azure Files can retain is 200. If your combined snapshot count exceeds 200 based on your retention policies, it will result in an error. See [this](https://docs.microsoft.com/azure/backup/backup-azure-files-faq#what-is-the-maximum-retention-i-can-configure-for-backups) article for more information.
     */
    declare public readonly timezone: pulumi.Output<string | undefined>;

    /**
     * Create a PolicyFileShare resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: PolicyFileShareArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: PolicyFileShareArgs | PolicyFileShareState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as PolicyFileShareState | undefined;
            resourceInputs["backup"] = state?.backup;
            resourceInputs["name"] = state?.name;
            resourceInputs["recoveryVaultName"] = state?.recoveryVaultName;
            resourceInputs["resourceGroupName"] = state?.resourceGroupName;
            resourceInputs["retentionDaily"] = state?.retentionDaily;
            resourceInputs["retentionMonthly"] = state?.retentionMonthly;
            resourceInputs["retentionWeekly"] = state?.retentionWeekly;
            resourceInputs["retentionYearly"] = state?.retentionYearly;
            resourceInputs["timezone"] = state?.timezone;
        } else {
            const args = argsOrState as PolicyFileShareArgs | undefined;
            if (args?.backup === undefined && !opts.urn) {
                throw new Error("Missing required property 'backup'");
            }
            if (args?.recoveryVaultName === undefined && !opts.urn) {
                throw new Error("Missing required property 'recoveryVaultName'");
            }
            if (args?.resourceGroupName === undefined && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            if (args?.retentionDaily === undefined && !opts.urn) {
                throw new Error("Missing required property 'retentionDaily'");
            }
            resourceInputs["backup"] = args?.backup;
            resourceInputs["name"] = args?.name;
            resourceInputs["recoveryVaultName"] = args?.recoveryVaultName;
            resourceInputs["resourceGroupName"] = args?.resourceGroupName;
            resourceInputs["retentionDaily"] = args?.retentionDaily;
            resourceInputs["retentionMonthly"] = args?.retentionMonthly;
            resourceInputs["retentionWeekly"] = args?.retentionWeekly;
            resourceInputs["retentionYearly"] = args?.retentionYearly;
            resourceInputs["timezone"] = args?.timezone;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(PolicyFileShare.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering PolicyFileShare resources.
 */
export interface PolicyFileShareState {
    /**
     * Configures the Policy backup frequency and times as documented in the `backup` block below.
     */
    backup?: pulumi.Input<inputs.backup.PolicyFileShareBackup>;
    /**
     * Specifies the name of the policy. Changing this forces a new resource to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * Specifies the name of the Recovery Services Vault to use. Changing this forces a new resource to be created.
     */
    recoveryVaultName?: pulumi.Input<string>;
    /**
     * The name of the resource group in which to create the policy. Changing this forces a new resource to be created.
     */
    resourceGroupName?: pulumi.Input<string>;
    /**
     * Configures the policy daily retention as documented in the `retentionDaily` block below.
     */
    retentionDaily?: pulumi.Input<inputs.backup.PolicyFileShareRetentionDaily>;
    /**
     * Configures the policy monthly retention as documented in the `retentionMonthly` block below.
     */
    retentionMonthly?: pulumi.Input<inputs.backup.PolicyFileShareRetentionMonthly>;
    /**
     * Configures the policy weekly retention as documented in the `retentionWeekly` block below.
     */
    retentionWeekly?: pulumi.Input<inputs.backup.PolicyFileShareRetentionWeekly>;
    /**
     * Configures the policy yearly retention as documented in the `retentionYearly` block below.
     */
    retentionYearly?: pulumi.Input<inputs.backup.PolicyFileShareRetentionYearly>;
    /**
     * Specifies the timezone. [the possible values are defined here](https://jackstromberg.com/2017/01/list-of-time-zones-consumed-by-azure/). Defaults to `UTC`
     *
     * > **Note:** The maximum number of snapshots that Azure Files can retain is 200. If your combined snapshot count exceeds 200 based on your retention policies, it will result in an error. See [this](https://docs.microsoft.com/azure/backup/backup-azure-files-faq#what-is-the-maximum-retention-i-can-configure-for-backups) article for more information.
     */
    timezone?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a PolicyFileShare resource.
 */
export interface PolicyFileShareArgs {
    /**
     * Configures the Policy backup frequency and times as documented in the `backup` block below.
     */
    backup: pulumi.Input<inputs.backup.PolicyFileShareBackup>;
    /**
     * Specifies the name of the policy. Changing this forces a new resource to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * Specifies the name of the Recovery Services Vault to use. Changing this forces a new resource to be created.
     */
    recoveryVaultName: pulumi.Input<string>;
    /**
     * The name of the resource group in which to create the policy. Changing this forces a new resource to be created.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * Configures the policy daily retention as documented in the `retentionDaily` block below.
     */
    retentionDaily: pulumi.Input<inputs.backup.PolicyFileShareRetentionDaily>;
    /**
     * Configures the policy monthly retention as documented in the `retentionMonthly` block below.
     */
    retentionMonthly?: pulumi.Input<inputs.backup.PolicyFileShareRetentionMonthly>;
    /**
     * Configures the policy weekly retention as documented in the `retentionWeekly` block below.
     */
    retentionWeekly?: pulumi.Input<inputs.backup.PolicyFileShareRetentionWeekly>;
    /**
     * Configures the policy yearly retention as documented in the `retentionYearly` block below.
     */
    retentionYearly?: pulumi.Input<inputs.backup.PolicyFileShareRetentionYearly>;
    /**
     * Specifies the timezone. [the possible values are defined here](https://jackstromberg.com/2017/01/list-of-time-zones-consumed-by-azure/). Defaults to `UTC`
     *
     * > **Note:** The maximum number of snapshots that Azure Files can retain is 200. If your combined snapshot count exceeds 200 based on your retention policies, it will result in an error. See [this](https://docs.microsoft.com/azure/backup/backup-azure-files-faq#what-is-the-maximum-retention-i-can-configure-for-backups) article for more information.
     */
    timezone?: pulumi.Input<string>;
}
