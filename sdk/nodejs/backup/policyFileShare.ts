// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * Manages an Azure File Share Backup Policy within a Recovery Services vault.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const exampleResourceGroup = new azure.core.ResourceGroup("exampleResourceGroup", {location: "West Europe"});
 * const exampleVault = new azure.recoveryservices.Vault("exampleVault", {
 *     location: exampleResourceGroup.location,
 *     resourceGroupName: exampleResourceGroup.name,
 *     sku: "Standard",
 * });
 * const policy = new azure.backup.PolicyFileShare("policy", {
 *     resourceGroupName: exampleResourceGroup.name,
 *     recoveryVaultName: azurerm_recovery_services_vault.vault.name,
 *     timezone: "UTC",
 *     backup: {
 *         frequency: "Daily",
 *         time: "23:00",
 *     },
 *     retentionDaily: {
 *         count: 10,
 *     },
 *     retentionWeekly: {
 *         count: 7,
 *         weekdays: [
 *             "Sunday",
 *             "Wednesday",
 *             "Friday",
 *             "Saturday",
 *         ],
 *     },
 *     retentionMonthly: {
 *         count: 7,
 *         weekdays: [
 *             "Sunday",
 *             "Wednesday",
 *         ],
 *         weeks: [
 *             "First",
 *             "Last",
 *         ],
 *     },
 *     retentionYearly: {
 *         count: 7,
 *         weekdays: ["Sunday"],
 *         weeks: ["Last"],
 *         months: ["January"],
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * Azure File Share Backup Policies can be imported using the `resource id`, e.g.
 *
 * ```sh
 *  $ pulumi import azure:backup/policyFileShare:PolicyFileShare policy1 /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.RecoveryServices/vaults/example-recovery-vault/backupPolicies/policy1
 * ```
 */
export class PolicyFileShare extends pulumi.CustomResource {
    /**
     * Get an existing PolicyFileShare resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: PolicyFileShareState, opts?: pulumi.CustomResourceOptions): PolicyFileShare {
        return new PolicyFileShare(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure:backup/policyFileShare:PolicyFileShare';

    /**
     * Returns true if the given object is an instance of PolicyFileShare.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is PolicyFileShare {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === PolicyFileShare.__pulumiType;
    }

    /**
     * Configures the Policy backup frequency and times as documented in the `backup` block below.
     */
    public readonly backup!: pulumi.Output<outputs.backup.PolicyFileShareBackup>;
    /**
     * Specifies the name of the policy. Changing this forces a new resource to be created.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Specifies the name of the Recovery Services Vault to use. Changing this forces a new resource to be created.
     */
    public readonly recoveryVaultName!: pulumi.Output<string>;
    /**
     * The name of the resource group in which to create the policy. Changing this forces a new resource to be created.
     */
    public readonly resourceGroupName!: pulumi.Output<string>;
    /**
     * Configures the policy daily retention as documented in the `retentionDaily` block below.
     */
    public readonly retentionDaily!: pulumi.Output<outputs.backup.PolicyFileShareRetentionDaily>;
    /**
     * Configures the policy monthly retention as documented in the `retentionMonthly` block below.
     */
    public readonly retentionMonthly!: pulumi.Output<outputs.backup.PolicyFileShareRetentionMonthly | undefined>;
    /**
     * Configures the policy weekly retention as documented in the `retentionWeekly` block below.
     */
    public readonly retentionWeekly!: pulumi.Output<outputs.backup.PolicyFileShareRetentionWeekly | undefined>;
    /**
     * Configures the policy yearly retention as documented in the `retentionYearly` block below.
     */
    public readonly retentionYearly!: pulumi.Output<outputs.backup.PolicyFileShareRetentionYearly | undefined>;
    /**
     * Specifies the timezone. [the possible values are defined here](http://jackstromberg.com/2017/01/list-of-time-zones-consumed-by-azure/). Defaults to `UTC`
     */
    public readonly timezone!: pulumi.Output<string | undefined>;

    /**
     * Create a PolicyFileShare resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: PolicyFileShareArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: PolicyFileShareArgs | PolicyFileShareState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as PolicyFileShareState | undefined;
            resourceInputs["backup"] = state ? state.backup : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["recoveryVaultName"] = state ? state.recoveryVaultName : undefined;
            resourceInputs["resourceGroupName"] = state ? state.resourceGroupName : undefined;
            resourceInputs["retentionDaily"] = state ? state.retentionDaily : undefined;
            resourceInputs["retentionMonthly"] = state ? state.retentionMonthly : undefined;
            resourceInputs["retentionWeekly"] = state ? state.retentionWeekly : undefined;
            resourceInputs["retentionYearly"] = state ? state.retentionYearly : undefined;
            resourceInputs["timezone"] = state ? state.timezone : undefined;
        } else {
            const args = argsOrState as PolicyFileShareArgs | undefined;
            if ((!args || args.backup === undefined) && !opts.urn) {
                throw new Error("Missing required property 'backup'");
            }
            if ((!args || args.recoveryVaultName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'recoveryVaultName'");
            }
            if ((!args || args.resourceGroupName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            if ((!args || args.retentionDaily === undefined) && !opts.urn) {
                throw new Error("Missing required property 'retentionDaily'");
            }
            resourceInputs["backup"] = args ? args.backup : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["recoveryVaultName"] = args ? args.recoveryVaultName : undefined;
            resourceInputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            resourceInputs["retentionDaily"] = args ? args.retentionDaily : undefined;
            resourceInputs["retentionMonthly"] = args ? args.retentionMonthly : undefined;
            resourceInputs["retentionWeekly"] = args ? args.retentionWeekly : undefined;
            resourceInputs["retentionYearly"] = args ? args.retentionYearly : undefined;
            resourceInputs["timezone"] = args ? args.timezone : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(PolicyFileShare.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering PolicyFileShare resources.
 */
export interface PolicyFileShareState {
    /**
     * Configures the Policy backup frequency and times as documented in the `backup` block below.
     */
    backup?: pulumi.Input<inputs.backup.PolicyFileShareBackup>;
    /**
     * Specifies the name of the policy. Changing this forces a new resource to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * Specifies the name of the Recovery Services Vault to use. Changing this forces a new resource to be created.
     */
    recoveryVaultName?: pulumi.Input<string>;
    /**
     * The name of the resource group in which to create the policy. Changing this forces a new resource to be created.
     */
    resourceGroupName?: pulumi.Input<string>;
    /**
     * Configures the policy daily retention as documented in the `retentionDaily` block below.
     */
    retentionDaily?: pulumi.Input<inputs.backup.PolicyFileShareRetentionDaily>;
    /**
     * Configures the policy monthly retention as documented in the `retentionMonthly` block below.
     */
    retentionMonthly?: pulumi.Input<inputs.backup.PolicyFileShareRetentionMonthly>;
    /**
     * Configures the policy weekly retention as documented in the `retentionWeekly` block below.
     */
    retentionWeekly?: pulumi.Input<inputs.backup.PolicyFileShareRetentionWeekly>;
    /**
     * Configures the policy yearly retention as documented in the `retentionYearly` block below.
     */
    retentionYearly?: pulumi.Input<inputs.backup.PolicyFileShareRetentionYearly>;
    /**
     * Specifies the timezone. [the possible values are defined here](http://jackstromberg.com/2017/01/list-of-time-zones-consumed-by-azure/). Defaults to `UTC`
     */
    timezone?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a PolicyFileShare resource.
 */
export interface PolicyFileShareArgs {
    /**
     * Configures the Policy backup frequency and times as documented in the `backup` block below.
     */
    backup: pulumi.Input<inputs.backup.PolicyFileShareBackup>;
    /**
     * Specifies the name of the policy. Changing this forces a new resource to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * Specifies the name of the Recovery Services Vault to use. Changing this forces a new resource to be created.
     */
    recoveryVaultName: pulumi.Input<string>;
    /**
     * The name of the resource group in which to create the policy. Changing this forces a new resource to be created.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * Configures the policy daily retention as documented in the `retentionDaily` block below.
     */
    retentionDaily: pulumi.Input<inputs.backup.PolicyFileShareRetentionDaily>;
    /**
     * Configures the policy monthly retention as documented in the `retentionMonthly` block below.
     */
    retentionMonthly?: pulumi.Input<inputs.backup.PolicyFileShareRetentionMonthly>;
    /**
     * Configures the policy weekly retention as documented in the `retentionWeekly` block below.
     */
    retentionWeekly?: pulumi.Input<inputs.backup.PolicyFileShareRetentionWeekly>;
    /**
     * Configures the policy yearly retention as documented in the `retentionYearly` block below.
     */
    retentionYearly?: pulumi.Input<inputs.backup.PolicyFileShareRetentionYearly>;
    /**
     * Specifies the timezone. [the possible values are defined here](http://jackstromberg.com/2017/01/list-of-time-zones-consumed-by-azure/). Defaults to `UTC`
     */
    timezone?: pulumi.Input<string>;
}
