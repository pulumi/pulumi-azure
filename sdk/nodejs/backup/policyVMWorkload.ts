// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Manages an Azure VM Workload Backup Policy within a Recovery Services vault.
 *
 * ## Import
 *
 * Azure VM Workload Backup Policies can be imported using the `resource id`, e.g.
 *
 * ```sh
 *  $ pulumi import azure:backup/policyVMWorkload:PolicyVMWorkload policy1 /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.RecoveryServices/vaults/vault1/backupPolicies/policy1
 * ```
 */
export class PolicyVMWorkload extends pulumi.CustomResource {
    /**
     * Get an existing PolicyVMWorkload resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: PolicyVMWorkloadState, opts?: pulumi.CustomResourceOptions): PolicyVMWorkload {
        return new PolicyVMWorkload(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure:backup/policyVMWorkload:PolicyVMWorkload';

    /**
     * Returns true if the given object is an instance of PolicyVMWorkload.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is PolicyVMWorkload {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === PolicyVMWorkload.__pulumiType;
    }

    /**
     * The name of the VM Workload Backup Policy. Changing this forces a new resource to be created.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * One or more `protectionPolicy` blocks as defined below.
     */
    public readonly protectionPolicies!: pulumi.Output<outputs.backup.PolicyVMWorkloadProtectionPolicy[]>;
    /**
     * The name of the Recovery Services Vault to use. Changing this forces a new resource to be created.
     */
    public readonly recoveryVaultName!: pulumi.Output<string>;
    /**
     * The name of the resource group in which to create the VM Workload Backup Policy. Changing this forces a new resource to be created.
     */
    public readonly resourceGroupName!: pulumi.Output<string>;
    /**
     * A `settings` block as defined below.
     */
    public readonly settings!: pulumi.Output<outputs.backup.PolicyVMWorkloadSettings>;
    /**
     * The VM Workload type for the Backup Policy. Possible values are `SQLDataBase` and `SAPHanaDatabase`. Changing this forces a new resource to be created.
     */
    public readonly workloadType!: pulumi.Output<string>;

    /**
     * Create a PolicyVMWorkload resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: PolicyVMWorkloadArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: PolicyVMWorkloadArgs | PolicyVMWorkloadState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as PolicyVMWorkloadState | undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["protectionPolicies"] = state ? state.protectionPolicies : undefined;
            resourceInputs["recoveryVaultName"] = state ? state.recoveryVaultName : undefined;
            resourceInputs["resourceGroupName"] = state ? state.resourceGroupName : undefined;
            resourceInputs["settings"] = state ? state.settings : undefined;
            resourceInputs["workloadType"] = state ? state.workloadType : undefined;
        } else {
            const args = argsOrState as PolicyVMWorkloadArgs | undefined;
            if ((!args || args.protectionPolicies === undefined) && !opts.urn) {
                throw new Error("Missing required property 'protectionPolicies'");
            }
            if ((!args || args.recoveryVaultName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'recoveryVaultName'");
            }
            if ((!args || args.resourceGroupName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            if ((!args || args.settings === undefined) && !opts.urn) {
                throw new Error("Missing required property 'settings'");
            }
            if ((!args || args.workloadType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'workloadType'");
            }
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["protectionPolicies"] = args ? args.protectionPolicies : undefined;
            resourceInputs["recoveryVaultName"] = args ? args.recoveryVaultName : undefined;
            resourceInputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            resourceInputs["settings"] = args ? args.settings : undefined;
            resourceInputs["workloadType"] = args ? args.workloadType : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(PolicyVMWorkload.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering PolicyVMWorkload resources.
 */
export interface PolicyVMWorkloadState {
    /**
     * The name of the VM Workload Backup Policy. Changing this forces a new resource to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * One or more `protectionPolicy` blocks as defined below.
     */
    protectionPolicies?: pulumi.Input<pulumi.Input<inputs.backup.PolicyVMWorkloadProtectionPolicy>[]>;
    /**
     * The name of the Recovery Services Vault to use. Changing this forces a new resource to be created.
     */
    recoveryVaultName?: pulumi.Input<string>;
    /**
     * The name of the resource group in which to create the VM Workload Backup Policy. Changing this forces a new resource to be created.
     */
    resourceGroupName?: pulumi.Input<string>;
    /**
     * A `settings` block as defined below.
     */
    settings?: pulumi.Input<inputs.backup.PolicyVMWorkloadSettings>;
    /**
     * The VM Workload type for the Backup Policy. Possible values are `SQLDataBase` and `SAPHanaDatabase`. Changing this forces a new resource to be created.
     */
    workloadType?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a PolicyVMWorkload resource.
 */
export interface PolicyVMWorkloadArgs {
    /**
     * The name of the VM Workload Backup Policy. Changing this forces a new resource to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * One or more `protectionPolicy` blocks as defined below.
     */
    protectionPolicies: pulumi.Input<pulumi.Input<inputs.backup.PolicyVMWorkloadProtectionPolicy>[]>;
    /**
     * The name of the Recovery Services Vault to use. Changing this forces a new resource to be created.
     */
    recoveryVaultName: pulumi.Input<string>;
    /**
     * The name of the resource group in which to create the VM Workload Backup Policy. Changing this forces a new resource to be created.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * A `settings` block as defined below.
     */
    settings: pulumi.Input<inputs.backup.PolicyVMWorkloadSettings>;
    /**
     * The VM Workload type for the Backup Policy. Possible values are `SQLDataBase` and `SAPHanaDatabase`. Changing this forces a new resource to be created.
     */
    workloadType: pulumi.Input<string>;
}
