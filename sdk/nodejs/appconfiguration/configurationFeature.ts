// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * Manages an Azure App Configuration Feature.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const rg = new azure.core.ResourceGroup("rg", {location: "West Europe"});
 * const appconf = new azure.appconfiguration.ConfigurationStore("appconf", {
 *     resourceGroupName: rg.name,
 *     location: rg.location,
 * });
 * const test = new azure.appconfiguration.ConfigurationFeature("test", {
 *     configurationStoreId: appconf.id,
 *     description: "test description",
 *     label: `acctest-ackeylabel-%d`,
 *     enabled: true,
 * });
 * ```
 *
 * ## Import
 *
 * App Configuration Features can be imported using the `resource id`, e.g.
 *
 * ```sh
 *  $ pulumi import azure:appconfiguration/configurationFeature:ConfigurationFeature test /subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/resourceGroup1/providers/Microsoft.AppConfiguration/configurationStores/appConf1/AppConfigurationFeature/appConfFeature1/Label/label1
 * ```
 *
 *  If you wish to import a key with an empty label then sustitute the label's name with `%00`, like this
 *
 * ```sh
 *  $ pulumi import azure:appconfiguration/configurationFeature:ConfigurationFeature test /subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/resourceGroup1/providers/Microsoft.AppConfiguration/configurationStores/appConf1/AppConfigurationFeature/appConfFeature1/Label/%00
 * ```
 */
export class ConfigurationFeature extends pulumi.CustomResource {
    /**
     * Get an existing ConfigurationFeature resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ConfigurationFeatureState, opts?: pulumi.CustomResourceOptions): ConfigurationFeature {
        return new ConfigurationFeature(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure:appconfiguration/configurationFeature:ConfigurationFeature';

    /**
     * Returns true if the given object is an instance of ConfigurationFeature.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ConfigurationFeature {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ConfigurationFeature.__pulumiType;
    }

    /**
     * Specifies the id of the App Configuration. Changing this forces a new resource to be created.
     */
    public readonly configurationStoreId!: pulumi.Output<string>;
    /**
     * The description of the App Configuration Feature.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * The status of the App Configuration Feature. By default, this is set to false.
     */
    public readonly enabled!: pulumi.Output<boolean | undefined>;
    public readonly etag!: pulumi.Output<string>;
    /**
     * The label of the App Configuration Feature.  Changing this forces a new resource to be created.
     */
    public readonly label!: pulumi.Output<string | undefined>;
    /**
     * Should this App Configuration Feature be Locked to prevent changes?
     */
    public readonly locked!: pulumi.Output<boolean | undefined>;
    /**
     * The name of the App Configuration Feature. Changing this foces a new resource to be crearted.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * A list of one or more numbers representing the value of the percentage required to enable this feature.
     */
    public readonly percentageFilterValue!: pulumi.Output<number | undefined>;
    /**
     * A mapping of tags to assign to the resource.
     */
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * A `targetingFilter` block as defined below.
     */
    public readonly targetingFilters!: pulumi.Output<outputs.appconfiguration.ConfigurationFeatureTargetingFilter[] | undefined>;
    /**
     * A `targetingFilter` block `timewindowFilter` as defined below.
     */
    public readonly timewindowFilters!: pulumi.Output<outputs.appconfiguration.ConfigurationFeatureTimewindowFilter[] | undefined>;

    /**
     * Create a ConfigurationFeature resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ConfigurationFeatureArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ConfigurationFeatureArgs | ConfigurationFeatureState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ConfigurationFeatureState | undefined;
            inputs["configurationStoreId"] = state ? state.configurationStoreId : undefined;
            inputs["description"] = state ? state.description : undefined;
            inputs["enabled"] = state ? state.enabled : undefined;
            inputs["etag"] = state ? state.etag : undefined;
            inputs["label"] = state ? state.label : undefined;
            inputs["locked"] = state ? state.locked : undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["percentageFilterValue"] = state ? state.percentageFilterValue : undefined;
            inputs["tags"] = state ? state.tags : undefined;
            inputs["targetingFilters"] = state ? state.targetingFilters : undefined;
            inputs["timewindowFilters"] = state ? state.timewindowFilters : undefined;
        } else {
            const args = argsOrState as ConfigurationFeatureArgs | undefined;
            if ((!args || args.configurationStoreId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'configurationStoreId'");
            }
            inputs["configurationStoreId"] = args ? args.configurationStoreId : undefined;
            inputs["description"] = args ? args.description : undefined;
            inputs["enabled"] = args ? args.enabled : undefined;
            inputs["etag"] = args ? args.etag : undefined;
            inputs["label"] = args ? args.label : undefined;
            inputs["locked"] = args ? args.locked : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["percentageFilterValue"] = args ? args.percentageFilterValue : undefined;
            inputs["tags"] = args ? args.tags : undefined;
            inputs["targetingFilters"] = args ? args.targetingFilters : undefined;
            inputs["timewindowFilters"] = args ? args.timewindowFilters : undefined;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        super(ConfigurationFeature.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ConfigurationFeature resources.
 */
export interface ConfigurationFeatureState {
    /**
     * Specifies the id of the App Configuration. Changing this forces a new resource to be created.
     */
    configurationStoreId?: pulumi.Input<string>;
    /**
     * The description of the App Configuration Feature.
     */
    description?: pulumi.Input<string>;
    /**
     * The status of the App Configuration Feature. By default, this is set to false.
     */
    enabled?: pulumi.Input<boolean>;
    etag?: pulumi.Input<string>;
    /**
     * The label of the App Configuration Feature.  Changing this forces a new resource to be created.
     */
    label?: pulumi.Input<string>;
    /**
     * Should this App Configuration Feature be Locked to prevent changes?
     */
    locked?: pulumi.Input<boolean>;
    /**
     * The name of the App Configuration Feature. Changing this foces a new resource to be crearted.
     */
    name?: pulumi.Input<string>;
    /**
     * A list of one or more numbers representing the value of the percentage required to enable this feature.
     */
    percentageFilterValue?: pulumi.Input<number>;
    /**
     * A mapping of tags to assign to the resource.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * A `targetingFilter` block as defined below.
     */
    targetingFilters?: pulumi.Input<pulumi.Input<inputs.appconfiguration.ConfigurationFeatureTargetingFilter>[]>;
    /**
     * A `targetingFilter` block `timewindowFilter` as defined below.
     */
    timewindowFilters?: pulumi.Input<pulumi.Input<inputs.appconfiguration.ConfigurationFeatureTimewindowFilter>[]>;
}

/**
 * The set of arguments for constructing a ConfigurationFeature resource.
 */
export interface ConfigurationFeatureArgs {
    /**
     * Specifies the id of the App Configuration. Changing this forces a new resource to be created.
     */
    configurationStoreId: pulumi.Input<string>;
    /**
     * The description of the App Configuration Feature.
     */
    description?: pulumi.Input<string>;
    /**
     * The status of the App Configuration Feature. By default, this is set to false.
     */
    enabled?: pulumi.Input<boolean>;
    etag?: pulumi.Input<string>;
    /**
     * The label of the App Configuration Feature.  Changing this forces a new resource to be created.
     */
    label?: pulumi.Input<string>;
    /**
     * Should this App Configuration Feature be Locked to prevent changes?
     */
    locked?: pulumi.Input<boolean>;
    /**
     * The name of the App Configuration Feature. Changing this foces a new resource to be crearted.
     */
    name?: pulumi.Input<string>;
    /**
     * A list of one or more numbers representing the value of the percentage required to enable this feature.
     */
    percentageFilterValue?: pulumi.Input<number>;
    /**
     * A mapping of tags to assign to the resource.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * A `targetingFilter` block as defined below.
     */
    targetingFilters?: pulumi.Input<pulumi.Input<inputs.appconfiguration.ConfigurationFeatureTargetingFilter>[]>;
    /**
     * A `targetingFilter` block `timewindowFilter` as defined below.
     */
    timewindowFilters?: pulumi.Input<pulumi.Input<inputs.appconfiguration.ConfigurationFeatureTimewindowFilter>[]>;
}
