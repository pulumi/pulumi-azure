// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Manages an Application Load Balancer Security Policy.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = new azure.core.ResourceGroup("example", {
 *     name: "example-rg",
 *     location: "West Europe",
 * });
 * const exampleLicationLoadBalancer = new azure.appconfiguration.LicationLoadBalancer("example", {
 *     name: "example-alb",
 *     location: example.location,
 *     resourceGroupName: example.name,
 * });
 * const examplePolicy = new azure.waf.Policy("example", {
 *     name: "example-wafpolicy",
 *     resourceGroupName: example.name,
 *     location: example.location,
 *     managedRules: {
 *         managedRuleSets: [{
 *             type: "Microsoft_DefaultRuleSet",
 *             version: "2.1",
 *         }],
 *     },
 *     policySettings: {
 *         enabled: true,
 *         mode: "Detection",
 *     },
 * });
 * const exampleLicationLoadBalancerSecurityPolicy = new azure.appconfiguration.LicationLoadBalancerSecurityPolicy("example", {
 *     name: "example-albsp",
 *     applicationLoadBalancerId: exampleLicationLoadBalancer.id,
 *     location: example.location,
 *     webApplicationFirewallPolicyId: examplePolicy.id,
 * });
 * ```
 *
 * ## API Providers
 *
 * <!-- This section is generated, changes will be overwritten -->
 * This resource uses the following Azure API Providers:
 *
 * * `Microsoft.ServiceNetworking` - 2025-01-01
 *
 * ## Import
 *
 * Application Load Balancer Security Policy can be imported using the `resource id`, e.g.
 *
 * ```sh
 * $ pulumi import azure:appconfiguration/licationLoadBalancerSecurityPolicy:LicationLoadBalancerSecurityPolicy example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rg1/providers/Microsoft.ServiceNetworking/trafficControllers/alb/securityPolicies/sp1
 * ```
 */
export class LicationLoadBalancerSecurityPolicy extends pulumi.CustomResource {
    /**
     * Get an existing LicationLoadBalancerSecurityPolicy resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: LicationLoadBalancerSecurityPolicyState, opts?: pulumi.CustomResourceOptions): LicationLoadBalancerSecurityPolicy {
        return new LicationLoadBalancerSecurityPolicy(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure:appconfiguration/licationLoadBalancerSecurityPolicy:LicationLoadBalancerSecurityPolicy';

    /**
     * Returns true if the given object is an instance of LicationLoadBalancerSecurityPolicy.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is LicationLoadBalancerSecurityPolicy {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === LicationLoadBalancerSecurityPolicy.__pulumiType;
    }

    /**
     * The ID of the Application Load Balancer. Changing this forces a new Application Gateway for Containers Security Policy to be created.
     */
    declare public readonly applicationLoadBalancerId: pulumi.Output<string>;
    /**
     * The Azure Region where the Application Load Balancer Security Policy should exist. Changing this forces a new resource to be created.
     */
    declare public readonly location: pulumi.Output<string>;
    /**
     * The name which should be used for this Application Load Balancer Security Policy. Changing this forces a new Application Load Balancer Security Policy to be created.
     */
    declare public readonly name: pulumi.Output<string>;
    /**
     * A mapping of tags which should be assigned to the Application Load Balancer Security Policy.
     */
    declare public readonly tags: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * The ID of the Web Application Firewall Policy. Changing this forces a new Application Load Balancer Security Policy to be created.
     */
    declare public readonly webApplicationFirewallPolicyId: pulumi.Output<string>;

    /**
     * Create a LicationLoadBalancerSecurityPolicy resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: LicationLoadBalancerSecurityPolicyArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: LicationLoadBalancerSecurityPolicyArgs | LicationLoadBalancerSecurityPolicyState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as LicationLoadBalancerSecurityPolicyState | undefined;
            resourceInputs["applicationLoadBalancerId"] = state?.applicationLoadBalancerId;
            resourceInputs["location"] = state?.location;
            resourceInputs["name"] = state?.name;
            resourceInputs["tags"] = state?.tags;
            resourceInputs["webApplicationFirewallPolicyId"] = state?.webApplicationFirewallPolicyId;
        } else {
            const args = argsOrState as LicationLoadBalancerSecurityPolicyArgs | undefined;
            if (args?.applicationLoadBalancerId === undefined && !opts.urn) {
                throw new Error("Missing required property 'applicationLoadBalancerId'");
            }
            if (args?.webApplicationFirewallPolicyId === undefined && !opts.urn) {
                throw new Error("Missing required property 'webApplicationFirewallPolicyId'");
            }
            resourceInputs["applicationLoadBalancerId"] = args?.applicationLoadBalancerId;
            resourceInputs["location"] = args?.location;
            resourceInputs["name"] = args?.name;
            resourceInputs["tags"] = args?.tags;
            resourceInputs["webApplicationFirewallPolicyId"] = args?.webApplicationFirewallPolicyId;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(LicationLoadBalancerSecurityPolicy.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering LicationLoadBalancerSecurityPolicy resources.
 */
export interface LicationLoadBalancerSecurityPolicyState {
    /**
     * The ID of the Application Load Balancer. Changing this forces a new Application Gateway for Containers Security Policy to be created.
     */
    applicationLoadBalancerId?: pulumi.Input<string>;
    /**
     * The Azure Region where the Application Load Balancer Security Policy should exist. Changing this forces a new resource to be created.
     */
    location?: pulumi.Input<string>;
    /**
     * The name which should be used for this Application Load Balancer Security Policy. Changing this forces a new Application Load Balancer Security Policy to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * A mapping of tags which should be assigned to the Application Load Balancer Security Policy.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The ID of the Web Application Firewall Policy. Changing this forces a new Application Load Balancer Security Policy to be created.
     */
    webApplicationFirewallPolicyId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a LicationLoadBalancerSecurityPolicy resource.
 */
export interface LicationLoadBalancerSecurityPolicyArgs {
    /**
     * The ID of the Application Load Balancer. Changing this forces a new Application Gateway for Containers Security Policy to be created.
     */
    applicationLoadBalancerId: pulumi.Input<string>;
    /**
     * The Azure Region where the Application Load Balancer Security Policy should exist. Changing this forces a new resource to be created.
     */
    location?: pulumi.Input<string>;
    /**
     * The name which should be used for this Application Load Balancer Security Policy. Changing this forces a new Application Load Balancer Security Policy to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * A mapping of tags which should be assigned to the Application Load Balancer Security Policy.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The ID of the Web Application Firewall Policy. Changing this forces a new Application Load Balancer Security Policy to be created.
     */
    webApplicationFirewallPolicyId: pulumi.Input<string>;
}
