// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Manages an association between an Application Gateway for Containers and a Subnet.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const exampleResourceGroup = new azure.core.ResourceGroup("exampleResourceGroup", {location: "westeurope"});
 * const exampleLicationLoadBalancer = new azure.appconfiguration.LicationLoadBalancer("exampleLicationLoadBalancer", {
 *     location: exampleResourceGroup.location,
 *     resourceGroupName: exampleResourceGroup.name,
 * });
 * const exampleVirtualNetwork = new azure.network.VirtualNetwork("exampleVirtualNetwork", {
 *     addressSpaces: ["10.0.0.0/16"],
 *     location: exampleResourceGroup.location,
 *     resourceGroupName: exampleResourceGroup.name,
 * });
 * const exampleSubnet = new azure.network.Subnet("exampleSubnet", {
 *     resourceGroupName: exampleResourceGroup.name,
 *     virtualNetworkName: exampleVirtualNetwork.name,
 *     addressPrefixes: ["10.0.1.0/24"],
 *     delegations: [{
 *         name: "delegation",
 *         serviceDelegation: {
 *             name: "Microsoft.ServiceNetworking/trafficControllers",
 *             actions: ["Microsoft.Network/virtualNetworks/subnets/join/action"],
 *         },
 *     }],
 * });
 * const exampleLicationLoadBalancerSubnetAssociation = new azure.appconfiguration.LicationLoadBalancerSubnetAssociation("exampleLicationLoadBalancerSubnetAssociation", {
 *     applicationLoadBalancerId: exampleLicationLoadBalancer.id,
 *     subnetId: exampleSubnet.id,
 * });
 * ```
 *
 * ## Import
 *
 * Application Gateway for Containers Associations can be imported using the `resource id`, e.g.
 *
 * ```sh
 *  $ pulumi import azure:appconfiguration/licationLoadBalancerSubnetAssociation:LicationLoadBalancerSubnetAssociation example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rg1/providers/Microsoft.ServiceNetworking/trafficControllers/alb1/associations/association1
 * ```
 */
export class LicationLoadBalancerSubnetAssociation extends pulumi.CustomResource {
    /**
     * Get an existing LicationLoadBalancerSubnetAssociation resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: LicationLoadBalancerSubnetAssociationState, opts?: pulumi.CustomResourceOptions): LicationLoadBalancerSubnetAssociation {
        return new LicationLoadBalancerSubnetAssociation(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure:appconfiguration/licationLoadBalancerSubnetAssociation:LicationLoadBalancerSubnetAssociation';

    /**
     * Returns true if the given object is an instance of LicationLoadBalancerSubnetAssociation.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is LicationLoadBalancerSubnetAssociation {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === LicationLoadBalancerSubnetAssociation.__pulumiType;
    }

    /**
     * The ID of the Application Gateway for Containers. Changing this forces a new resource to be created.
     */
    public readonly applicationLoadBalancerId!: pulumi.Output<string>;
    /**
     * The name which should be used for this Application Gateway for Containers Association. Changing this forces a new resource to be created.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The ID of the subnet which the Application Gateway for Containers associated to.
     *
     * > **Note:** The subnet to be used must have a delegation for  `Microsoft.ServiceNetworking/trafficControllers` as shown in the example above.
     */
    public readonly subnetId!: pulumi.Output<string>;
    /**
     * A mapping of tags which should be assigned to the Application Gateway for Containers Association.
     */
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;

    /**
     * Create a LicationLoadBalancerSubnetAssociation resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: LicationLoadBalancerSubnetAssociationArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: LicationLoadBalancerSubnetAssociationArgs | LicationLoadBalancerSubnetAssociationState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as LicationLoadBalancerSubnetAssociationState | undefined;
            resourceInputs["applicationLoadBalancerId"] = state ? state.applicationLoadBalancerId : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["subnetId"] = state ? state.subnetId : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
        } else {
            const args = argsOrState as LicationLoadBalancerSubnetAssociationArgs | undefined;
            if ((!args || args.applicationLoadBalancerId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'applicationLoadBalancerId'");
            }
            if ((!args || args.subnetId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'subnetId'");
            }
            resourceInputs["applicationLoadBalancerId"] = args ? args.applicationLoadBalancerId : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["subnetId"] = args ? args.subnetId : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(LicationLoadBalancerSubnetAssociation.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering LicationLoadBalancerSubnetAssociation resources.
 */
export interface LicationLoadBalancerSubnetAssociationState {
    /**
     * The ID of the Application Gateway for Containers. Changing this forces a new resource to be created.
     */
    applicationLoadBalancerId?: pulumi.Input<string>;
    /**
     * The name which should be used for this Application Gateway for Containers Association. Changing this forces a new resource to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * The ID of the subnet which the Application Gateway for Containers associated to.
     *
     * > **Note:** The subnet to be used must have a delegation for  `Microsoft.ServiceNetworking/trafficControllers` as shown in the example above.
     */
    subnetId?: pulumi.Input<string>;
    /**
     * A mapping of tags which should be assigned to the Application Gateway for Containers Association.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

/**
 * The set of arguments for constructing a LicationLoadBalancerSubnetAssociation resource.
 */
export interface LicationLoadBalancerSubnetAssociationArgs {
    /**
     * The ID of the Application Gateway for Containers. Changing this forces a new resource to be created.
     */
    applicationLoadBalancerId: pulumi.Input<string>;
    /**
     * The name which should be used for this Application Gateway for Containers Association. Changing this forces a new resource to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * The ID of the subnet which the Application Gateway for Containers associated to.
     *
     * > **Note:** The subnet to be used must have a delegation for  `Microsoft.ServiceNetworking/trafficControllers` as shown in the example above.
     */
    subnetId: pulumi.Input<string>;
    /**
     * A mapping of tags which should be assigned to the Application Gateway for Containers Association.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
