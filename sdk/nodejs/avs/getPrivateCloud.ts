// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Use this data source to access information about an existing VMware Private Cloud.
 *
 * ## Example Usage
 *
 * > **NOTE :**  Normal `pulumi up` could ignore this note. Please disable correlation request id for continuous operations in one build (like acctest). The continuous operations like `update` or `delete` could not be triggered when it shares the same `correlation-id` with its previous operation.
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = azure.avs.getPrivateCloud({
 *     name: "existing-vmware-private-cloud",
 *     resourceGroupName: "existing-resgroup",
 * });
 * export const id = example.then(example => example.id);
 * ```
 */
export function getPrivateCloud(args: GetPrivateCloudArgs, opts?: pulumi.InvokeOptions): Promise<GetPrivateCloudResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azure:avs/getPrivateCloud:getPrivateCloud", {
        "name": args.name,
        "resourceGroupName": args.resourceGroupName,
    }, opts);
}

/**
 * A collection of arguments for invoking getPrivateCloud.
 */
export interface GetPrivateCloudArgs {
    /**
     * The name of this VMware Private Cloud.
     */
    name: string;
    /**
     * The name of the Resource Group where the VMware Private Cloud exists.
     */
    resourceGroupName: string;
}

/**
 * A collection of values returned by getPrivateCloud.
 */
export interface GetPrivateCloudResult {
    /**
     * A `circuit` block as defined below.
     */
    readonly circuits: outputs.avs.GetPrivateCloudCircuit[];
    /**
     * The endpoint for the HCX Cloud Manager.
     */
    readonly hcxCloudManagerEndpoint: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * Is the VMware Private Cluster connected to the internet?
     */
    readonly internetConnectionEnabled: boolean;
    /**
     * The Azure Region where the VMware Private Cloud exists.
     */
    readonly location: string;
    /**
     * A `managementCluster` block as defined below.
     */
    readonly managementClusters: outputs.avs.GetPrivateCloudManagementCluster[];
    /**
     * The network used to access vCenter Server and NSX-T Manager.
     */
    readonly managementSubnetCidr: string;
    readonly name: string;
    /**
     * The subnet CIDR of the VMware Private Cloud.
     */
    readonly networkSubnetCidr: string;
    /**
     * The thumbprint of the NSX-T Manager SSL certificate.
     */
    readonly nsxtCertificateThumbprint: string;
    /**
     * The endpoint for the NSX-T Data Center manager.
     */
    readonly nsxtManagerEndpoint: string;
    /**
     * The network which isused for virtual machine cold migration, cloning, and snapshot migration.
     */
    readonly provisioningSubnetCidr: string;
    readonly resourceGroupName: string;
    /**
     * The Name of the SKU used for this Private Cloud.
     */
    readonly skuName: string;
    /**
     * A mapping of tags assigned to the VMware Private Cloud.
     */
    readonly tags: {[key: string]: string};
    /**
     * The thumbprint of the vCenter Server SSL certificate.
     */
    readonly vcenterCertificateThumbprint: string;
    /**
     * The endpoint for Virtual Center Server Appliance.
     */
    readonly vcsaEndpoint: string;
    /**
     * The network which is used for live migration of virtual machines.
     */
    readonly vmotionSubnetCidr: string;
}
/**
 * Use this data source to access information about an existing VMware Private Cloud.
 *
 * ## Example Usage
 *
 * > **NOTE :**  Normal `pulumi up` could ignore this note. Please disable correlation request id for continuous operations in one build (like acctest). The continuous operations like `update` or `delete` could not be triggered when it shares the same `correlation-id` with its previous operation.
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = azure.avs.getPrivateCloud({
 *     name: "existing-vmware-private-cloud",
 *     resourceGroupName: "existing-resgroup",
 * });
 * export const id = example.then(example => example.id);
 * ```
 */
export function getPrivateCloudOutput(args: GetPrivateCloudOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetPrivateCloudResult> {
    return pulumi.output(args).apply((a: any) => getPrivateCloud(a, opts))
}

/**
 * A collection of arguments for invoking getPrivateCloud.
 */
export interface GetPrivateCloudOutputArgs {
    /**
     * The name of this VMware Private Cloud.
     */
    name: pulumi.Input<string>;
    /**
     * The name of the Resource Group where the VMware Private Cloud exists.
     */
    resourceGroupName: pulumi.Input<string>;
}
