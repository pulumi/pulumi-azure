// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Use this data source to access information about an existing Azure VMware Solution Private Cloud.
 *
 * ## Example Usage
 *
 * > **Note:** Normal `pulumi up` could ignore this note. Please disable correlation request id for continuous operations in one build (like acctest). The continuous operations like `update` or `delete` could not be triggered when it shares the same `correlation-id` with its previous operation.
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = azure.avs.getPrivateCloud({
 *     name: "existing-vmware-private-cloud",
 *     resourceGroupName: "existing-resgroup",
 * });
 * export const id = example.then(example => example.id);
 * ```
 *
 * ## API Providers
 *
 * <!-- This section is generated, changes will be overwritten -->
 * This data source uses the following Azure API Providers:
 *
 * * `Microsoft.AVS`: 2022-05-01
 */
export function getPrivateCloud(args: GetPrivateCloudArgs, opts?: pulumi.InvokeOptions): Promise<GetPrivateCloudResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azure:avs/getPrivateCloud:getPrivateCloud", {
        "name": args.name,
        "resourceGroupName": args.resourceGroupName,
    }, opts);
}

/**
 * A collection of arguments for invoking getPrivateCloud.
 */
export interface GetPrivateCloudArgs {
    /**
     * The name of this Azure VMware Solution Private Cloud.
     */
    name: string;
    /**
     * The name of the Resource Group where the Azure VMware Solution Private Cloud exists.
     */
    resourceGroupName: string;
}

/**
 * A collection of values returned by getPrivateCloud.
 */
export interface GetPrivateCloudResult {
    /**
     * A `circuit` block as defined below.
     */
    readonly circuits: outputs.avs.GetPrivateCloudCircuit[];
    /**
     * The endpoint for the VMware HCX Cloud Manager.
     */
    readonly hcxCloudManagerEndpoint: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * Is the Azure VMware Solution Private Cloud connected to the internet?
     */
    readonly internetConnectionEnabled: boolean;
    /**
     * The Azure Region where the Azure VMware Solution Private Cloud exists.
     */
    readonly location: string;
    /**
     * A `managementCluster` block as defined below.
     */
    readonly managementClusters: outputs.avs.GetPrivateCloudManagementCluster[];
    /**
     * The network used to access VMware vCenter Server and NSX Manager.
     */
    readonly managementSubnetCidr: string;
    readonly name: string;
    /**
     * The subnet CIDR of the Azure VMware Solution Private Cloud.
     */
    readonly networkSubnetCidr: string;
    /**
     * The thumbprint of the VMware NSX Manager SSL certificate.
     */
    readonly nsxtCertificateThumbprint: string;
    /**
     * The endpoint for the VMware NSX Manager.
     */
    readonly nsxtManagerEndpoint: string;
    /**
     * The network which isused for virtual machine cold migration, cloning, and snapshot migration.
     */
    readonly provisioningSubnetCidr: string;
    readonly resourceGroupName: string;
    /**
     * The Name of the SKU used for this Azure VMware Solution Private Cloud.
     */
    readonly skuName: string;
    /**
     * A mapping of tags assigned to the Azure VMware Solution Private Cloud.
     */
    readonly tags: {[key: string]: string};
    /**
     * The thumbprint of the VMware vCenter Server SSL certificate.
     */
    readonly vcenterCertificateThumbprint: string;
    /**
     * The endpoint for VMware vCenter Server Appliance.
     */
    readonly vcsaEndpoint: string;
    /**
     * The network which is used for live migration of virtual machines.
     */
    readonly vmotionSubnetCidr: string;
}
/**
 * Use this data source to access information about an existing Azure VMware Solution Private Cloud.
 *
 * ## Example Usage
 *
 * > **Note:** Normal `pulumi up` could ignore this note. Please disable correlation request id for continuous operations in one build (like acctest). The continuous operations like `update` or `delete` could not be triggered when it shares the same `correlation-id` with its previous operation.
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = azure.avs.getPrivateCloud({
 *     name: "existing-vmware-private-cloud",
 *     resourceGroupName: "existing-resgroup",
 * });
 * export const id = example.then(example => example.id);
 * ```
 *
 * ## API Providers
 *
 * <!-- This section is generated, changes will be overwritten -->
 * This data source uses the following Azure API Providers:
 *
 * * `Microsoft.AVS`: 2022-05-01
 */
export function getPrivateCloudOutput(args: GetPrivateCloudOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetPrivateCloudResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("azure:avs/getPrivateCloud:getPrivateCloud", {
        "name": args.name,
        "resourceGroupName": args.resourceGroupName,
    }, opts);
}

/**
 * A collection of arguments for invoking getPrivateCloud.
 */
export interface GetPrivateCloudOutputArgs {
    /**
     * The name of this Azure VMware Solution Private Cloud.
     */
    name: pulumi.Input<string>;
    /**
     * The name of the Resource Group where the Azure VMware Solution Private Cloud exists.
     */
    resourceGroupName: pulumi.Input<string>;
}
