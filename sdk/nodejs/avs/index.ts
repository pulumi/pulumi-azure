// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { ClusterArgs, ClusterState } from "./cluster";
export type Cluster = import("./cluster").Cluster;
export const Cluster: typeof import("./cluster").Cluster = null as any;
utilities.lazyLoad(exports, ["Cluster"], () => require("./cluster"));

export { ExpressRouteAuthorizationArgs, ExpressRouteAuthorizationState } from "./expressRouteAuthorization";
export type ExpressRouteAuthorization = import("./expressRouteAuthorization").ExpressRouteAuthorization;
export const ExpressRouteAuthorization: typeof import("./expressRouteAuthorization").ExpressRouteAuthorization = null as any;
utilities.lazyLoad(exports, ["ExpressRouteAuthorization"], () => require("./expressRouteAuthorization"));

export { GetPrivateCloudArgs, GetPrivateCloudResult, GetPrivateCloudOutputArgs } from "./getPrivateCloud";
export const getPrivateCloud: typeof import("./getPrivateCloud").getPrivateCloud = null as any;
export const getPrivateCloudOutput: typeof import("./getPrivateCloud").getPrivateCloudOutput = null as any;
utilities.lazyLoad(exports, ["getPrivateCloud","getPrivateCloudOutput"], () => require("./getPrivateCloud"));

export { NetappVolumeAttachmentArgs, NetappVolumeAttachmentState } from "./netappVolumeAttachment";
export type NetappVolumeAttachment = import("./netappVolumeAttachment").NetappVolumeAttachment;
export const NetappVolumeAttachment: typeof import("./netappVolumeAttachment").NetappVolumeAttachment = null as any;
utilities.lazyLoad(exports, ["NetappVolumeAttachment"], () => require("./netappVolumeAttachment"));

export { PrivateCloudArgs, PrivateCloudState } from "./privateCloud";
export type PrivateCloud = import("./privateCloud").PrivateCloud;
export const PrivateCloud: typeof import("./privateCloud").PrivateCloud = null as any;
utilities.lazyLoad(exports, ["PrivateCloud"], () => require("./privateCloud"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "azure:avs/cluster:Cluster":
                return new Cluster(name, <any>undefined, { urn })
            case "azure:avs/expressRouteAuthorization:ExpressRouteAuthorization":
                return new ExpressRouteAuthorization(name, <any>undefined, { urn })
            case "azure:avs/netappVolumeAttachment:NetappVolumeAttachment":
                return new NetappVolumeAttachment(name, <any>undefined, { urn })
            case "azure:avs/privateCloud:PrivateCloud":
                return new PrivateCloud(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure", "avs/cluster", _module)
pulumi.runtime.registerResourceModule("azure", "avs/expressRouteAuthorization", _module)
pulumi.runtime.registerResourceModule("azure", "avs/netappVolumeAttachment", _module)
pulumi.runtime.registerResourceModule("azure", "avs/privateCloud", _module)
