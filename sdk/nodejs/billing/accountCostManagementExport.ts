// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Manages a Cost Management Export for a Billing Account.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = new azure.core.ResourceGroup("example", {
 *     name: "example-resources",
 *     location: "West Europe",
 * });
 * const exampleAccount = new azure.storage.Account("example", {
 *     name: "example",
 *     resourceGroupName: example.name,
 *     location: example.location,
 *     accountTier: "Standard",
 *     accountReplicationType: "LRS",
 * });
 * const exampleContainer = new azure.storage.Container("example", {
 *     name: "examplecontainer",
 *     storageAccountName: exampleAccount.name,
 * });
 * const exampleAccountCostManagementExport = new azure.billing.AccountCostManagementExport("example", {
 *     name: "example",
 *     billingAccountId: "example",
 *     recurrenceType: "Monthly",
 *     recurrencePeriodStartDate: "2020-08-18T00:00:00Z",
 *     recurrencePeriodEndDate: "2020-09-18T00:00:00Z",
 *     fileFormat: "Csv",
 *     exportDataStorageLocation: {
 *         containerId: exampleContainer.resourceManagerId,
 *         rootFolderPath: "/root/updated",
 *     },
 *     exportDataOptions: {
 *         type: "Usage",
 *         timeFrame: "WeekToDate",
 *     },
 * });
 * ```
 *
 * ## API Providers
 *
 * <!-- This section is generated, changes will be overwritten -->
 * This resource uses the following Azure API Providers:
 *
 * * `Microsoft.CostManagement` - 2023-08-01
 *
 * ## Import
 *
 * Billing Account Cost Management Exports can be imported using the `resource id`, e.g.
 *
 * ```sh
 * $ pulumi import azure:billing/accountCostManagementExport:AccountCostManagementExport example /providers/Microsoft.Billing/billingAccounts/12345678/providers/Microsoft.CostManagement/exports/export1
 * ```
 */
export class AccountCostManagementExport extends pulumi.CustomResource {
    /**
     * Get an existing AccountCostManagementExport resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AccountCostManagementExportState, opts?: pulumi.CustomResourceOptions): AccountCostManagementExport {
        return new AccountCostManagementExport(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure:billing/accountCostManagementExport:AccountCostManagementExport';

    /**
     * Returns true if the given object is an instance of AccountCostManagementExport.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AccountCostManagementExport {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AccountCostManagementExport.__pulumiType;
    }

    /**
     * Is the cost management export active? Default is `true`.
     *
     * * * `fileFormat` - (Optional) Format for export. Valid values are `Csv` only. Default is `Csv`.
     */
    declare public readonly active: pulumi.Output<boolean | undefined>;
    /**
     * The id of the billing account on which to create an export. Changing this forces a new resource to be created.
     */
    declare public readonly billingAccountId: pulumi.Output<string>;
    /**
     * A `exportDataOptions` block as defined below.
     */
    declare public readonly exportDataOptions: pulumi.Output<outputs.billing.AccountCostManagementExportExportDataOptions>;
    /**
     * A `exportDataStorageLocation` block as defined below.
     */
    declare public readonly exportDataStorageLocation: pulumi.Output<outputs.billing.AccountCostManagementExportExportDataStorageLocation>;
    declare public readonly fileFormat: pulumi.Output<string | undefined>;
    /**
     * Specifies the name of the Cost Management Export. Changing this forces a new resource to be created.
     */
    declare public readonly name: pulumi.Output<string>;
    /**
     * The date the export will stop capturing information.
     */
    declare public readonly recurrencePeriodEndDate: pulumi.Output<string>;
    /**
     * The date the export will start capturing information.
     */
    declare public readonly recurrencePeriodStartDate: pulumi.Output<string>;
    /**
     * How often the requested information will be exported. Valid values include `Annually`, `Daily`, `Monthly`, `Weekly`.
     */
    declare public readonly recurrenceType: pulumi.Output<string>;

    /**
     * Create a AccountCostManagementExport resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AccountCostManagementExportArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AccountCostManagementExportArgs | AccountCostManagementExportState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AccountCostManagementExportState | undefined;
            resourceInputs["active"] = state?.active;
            resourceInputs["billingAccountId"] = state?.billingAccountId;
            resourceInputs["exportDataOptions"] = state?.exportDataOptions;
            resourceInputs["exportDataStorageLocation"] = state?.exportDataStorageLocation;
            resourceInputs["fileFormat"] = state?.fileFormat;
            resourceInputs["name"] = state?.name;
            resourceInputs["recurrencePeriodEndDate"] = state?.recurrencePeriodEndDate;
            resourceInputs["recurrencePeriodStartDate"] = state?.recurrencePeriodStartDate;
            resourceInputs["recurrenceType"] = state?.recurrenceType;
        } else {
            const args = argsOrState as AccountCostManagementExportArgs | undefined;
            if (args?.billingAccountId === undefined && !opts.urn) {
                throw new Error("Missing required property 'billingAccountId'");
            }
            if (args?.exportDataOptions === undefined && !opts.urn) {
                throw new Error("Missing required property 'exportDataOptions'");
            }
            if (args?.exportDataStorageLocation === undefined && !opts.urn) {
                throw new Error("Missing required property 'exportDataStorageLocation'");
            }
            if (args?.recurrencePeriodEndDate === undefined && !opts.urn) {
                throw new Error("Missing required property 'recurrencePeriodEndDate'");
            }
            if (args?.recurrencePeriodStartDate === undefined && !opts.urn) {
                throw new Error("Missing required property 'recurrencePeriodStartDate'");
            }
            if (args?.recurrenceType === undefined && !opts.urn) {
                throw new Error("Missing required property 'recurrenceType'");
            }
            resourceInputs["active"] = args?.active;
            resourceInputs["billingAccountId"] = args?.billingAccountId;
            resourceInputs["exportDataOptions"] = args?.exportDataOptions;
            resourceInputs["exportDataStorageLocation"] = args?.exportDataStorageLocation;
            resourceInputs["fileFormat"] = args?.fileFormat;
            resourceInputs["name"] = args?.name;
            resourceInputs["recurrencePeriodEndDate"] = args?.recurrencePeriodEndDate;
            resourceInputs["recurrencePeriodStartDate"] = args?.recurrencePeriodStartDate;
            resourceInputs["recurrenceType"] = args?.recurrenceType;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AccountCostManagementExport.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering AccountCostManagementExport resources.
 */
export interface AccountCostManagementExportState {
    /**
     * Is the cost management export active? Default is `true`.
     *
     * * * `fileFormat` - (Optional) Format for export. Valid values are `Csv` only. Default is `Csv`.
     */
    active?: pulumi.Input<boolean>;
    /**
     * The id of the billing account on which to create an export. Changing this forces a new resource to be created.
     */
    billingAccountId?: pulumi.Input<string>;
    /**
     * A `exportDataOptions` block as defined below.
     */
    exportDataOptions?: pulumi.Input<inputs.billing.AccountCostManagementExportExportDataOptions>;
    /**
     * A `exportDataStorageLocation` block as defined below.
     */
    exportDataStorageLocation?: pulumi.Input<inputs.billing.AccountCostManagementExportExportDataStorageLocation>;
    fileFormat?: pulumi.Input<string>;
    /**
     * Specifies the name of the Cost Management Export. Changing this forces a new resource to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * The date the export will stop capturing information.
     */
    recurrencePeriodEndDate?: pulumi.Input<string>;
    /**
     * The date the export will start capturing information.
     */
    recurrencePeriodStartDate?: pulumi.Input<string>;
    /**
     * How often the requested information will be exported. Valid values include `Annually`, `Daily`, `Monthly`, `Weekly`.
     */
    recurrenceType?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a AccountCostManagementExport resource.
 */
export interface AccountCostManagementExportArgs {
    /**
     * Is the cost management export active? Default is `true`.
     *
     * * * `fileFormat` - (Optional) Format for export. Valid values are `Csv` only. Default is `Csv`.
     */
    active?: pulumi.Input<boolean>;
    /**
     * The id of the billing account on which to create an export. Changing this forces a new resource to be created.
     */
    billingAccountId: pulumi.Input<string>;
    /**
     * A `exportDataOptions` block as defined below.
     */
    exportDataOptions: pulumi.Input<inputs.billing.AccountCostManagementExportExportDataOptions>;
    /**
     * A `exportDataStorageLocation` block as defined below.
     */
    exportDataStorageLocation: pulumi.Input<inputs.billing.AccountCostManagementExportExportDataStorageLocation>;
    fileFormat?: pulumi.Input<string>;
    /**
     * Specifies the name of the Cost Management Export. Changing this forces a new resource to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * The date the export will stop capturing information.
     */
    recurrencePeriodEndDate: pulumi.Input<string>;
    /**
     * The date the export will start capturing information.
     */
    recurrencePeriodStartDate: pulumi.Input<string>;
    /**
     * How often the requested information will be exported. Valid values include `Annually`, `Daily`, `Monthly`, `Weekly`.
     */
    recurrenceType: pulumi.Input<string>;
}
