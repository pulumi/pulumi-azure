// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { CacheArgs, CacheState } from "./cache";
export type Cache = import("./cache").Cache;
export const Cache: typeof import("./cache").Cache = null as any;
utilities.lazyLoad(exports, ["Cache"], () => require("./cache"));

export { CacheAccessPolicyArgs, CacheAccessPolicyState } from "./cacheAccessPolicy";
export type CacheAccessPolicy = import("./cacheAccessPolicy").CacheAccessPolicy;
export const CacheAccessPolicy: typeof import("./cacheAccessPolicy").CacheAccessPolicy = null as any;
utilities.lazyLoad(exports, ["CacheAccessPolicy"], () => require("./cacheAccessPolicy"));

export { CacheBlobNfsTargetArgs, CacheBlobNfsTargetState } from "./cacheBlobNfsTarget";
export type CacheBlobNfsTarget = import("./cacheBlobNfsTarget").CacheBlobNfsTarget;
export const CacheBlobNfsTarget: typeof import("./cacheBlobNfsTarget").CacheBlobNfsTarget = null as any;
utilities.lazyLoad(exports, ["CacheBlobNfsTarget"], () => require("./cacheBlobNfsTarget"));

export { CacheBlobTargetArgs, CacheBlobTargetState } from "./cacheBlobTarget";
export type CacheBlobTarget = import("./cacheBlobTarget").CacheBlobTarget;
export const CacheBlobTarget: typeof import("./cacheBlobTarget").CacheBlobTarget = null as any;
utilities.lazyLoad(exports, ["CacheBlobTarget"], () => require("./cacheBlobTarget"));

export { CacheNfsTargetArgs, CacheNfsTargetState } from "./cacheNfsTarget";
export type CacheNfsTarget = import("./cacheNfsTarget").CacheNfsTarget;
export const CacheNfsTarget: typeof import("./cacheNfsTarget").CacheNfsTarget = null as any;
utilities.lazyLoad(exports, ["CacheNfsTarget"], () => require("./cacheNfsTarget"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "azure:hpc/cache:Cache":
                return new Cache(name, <any>undefined, { urn })
            case "azure:hpc/cacheAccessPolicy:CacheAccessPolicy":
                return new CacheAccessPolicy(name, <any>undefined, { urn })
            case "azure:hpc/cacheBlobNfsTarget:CacheBlobNfsTarget":
                return new CacheBlobNfsTarget(name, <any>undefined, { urn })
            case "azure:hpc/cacheBlobTarget:CacheBlobTarget":
                return new CacheBlobTarget(name, <any>undefined, { urn })
            case "azure:hpc/cacheNfsTarget:CacheNfsTarget":
                return new CacheNfsTarget(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure", "hpc/cache", _module)
pulumi.runtime.registerResourceModule("azure", "hpc/cacheAccessPolicy", _module)
pulumi.runtime.registerResourceModule("azure", "hpc/cacheBlobNfsTarget", _module)
pulumi.runtime.registerResourceModule("azure", "hpc/cacheBlobTarget", _module)
pulumi.runtime.registerResourceModule("azure", "hpc/cacheNfsTarget", _module)
