// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { AssignmentArgs, AssignmentState } from "./assignment";
export type Assignment = import("./assignment").Assignment;
export const Assignment: typeof import("./assignment").Assignment = null as any;
utilities.lazyLoad(exports, ["Assignment"], () => require("./assignment"));

export { GetRoleDefinitionArgs, GetRoleDefinitionResult, GetRoleDefinitionOutputArgs } from "./getRoleDefinition";
export const getRoleDefinition: typeof import("./getRoleDefinition").getRoleDefinition = null as any;
export const getRoleDefinitionOutput: typeof import("./getRoleDefinition").getRoleDefinitionOutput = null as any;
utilities.lazyLoad(exports, ["getRoleDefinition","getRoleDefinitionOutput"], () => require("./getRoleDefinition"));

export { GetUserAssignedIdentityArgs, GetUserAssignedIdentityResult, GetUserAssignedIdentityOutputArgs } from "./getUserAssignedIdentity";
export const getUserAssignedIdentity: typeof import("./getUserAssignedIdentity").getUserAssignedIdentity = null as any;
export const getUserAssignedIdentityOutput: typeof import("./getUserAssignedIdentity").getUserAssignedIdentityOutput = null as any;
utilities.lazyLoad(exports, ["getUserAssignedIdentity","getUserAssignedIdentityOutput"], () => require("./getUserAssignedIdentity"));

export { RoleDefinitionArgs, RoleDefinitionState } from "./roleDefinition";
export type RoleDefinition = import("./roleDefinition").RoleDefinition;
export const RoleDefinition: typeof import("./roleDefinition").RoleDefinition = null as any;
utilities.lazyLoad(exports, ["RoleDefinition"], () => require("./roleDefinition"));

export { UserAssignedIdentityArgs, UserAssignedIdentityState } from "./userAssignedIdentity";
export type UserAssignedIdentity = import("./userAssignedIdentity").UserAssignedIdentity;
export const UserAssignedIdentity: typeof import("./userAssignedIdentity").UserAssignedIdentity = null as any;
utilities.lazyLoad(exports, ["UserAssignedIdentity"], () => require("./userAssignedIdentity"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "azure:authorization/assignment:Assignment":
                return new Assignment(name, <any>undefined, { urn })
            case "azure:authorization/roleDefinition:RoleDefinition":
                return new RoleDefinition(name, <any>undefined, { urn })
            case "azure:authorization/userAssignedIdentity:UserAssignedIdentity":
                return new UserAssignedIdentity(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure", "authorization/assignment", _module)
pulumi.runtime.registerResourceModule("azure", "authorization/roleDefinition", _module)
pulumi.runtime.registerResourceModule("azure", "authorization/userAssignedIdentity", _module)
