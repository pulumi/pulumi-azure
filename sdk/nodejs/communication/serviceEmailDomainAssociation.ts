// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Manages a communication service email domain association.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = new azure.core.ResourceGroup("example", {
 *     name: "group1",
 *     location: "West Europe",
 * });
 * const exampleService = new azure.communication.Service("example", {
 *     name: "CommunicationService1",
 *     resourceGroupName: example.name,
 *     dataLocation: "United States",
 * });
 * const exampleEmailService = new azure.communication.EmailService("example", {
 *     name: "emailCommunicationService1",
 *     resourceGroupName: example.name,
 *     dataLocation: "United States",
 * });
 * const exampleEmailServiceDomain = new azure.communication.EmailServiceDomain("example", {
 *     name: "AzureManagedDomain",
 *     emailServiceId: exampleEmailService.id,
 *     domainManagement: "AzureManaged",
 * });
 * const exampleServiceEmailDomainAssociation = new azure.communication.ServiceEmailDomainAssociation("example", {
 *     communicationServiceId: exampleService.id,
 *     emailServiceDomainId: exampleEmailServiceDomain.id,
 * });
 * ```
 *
 * ## API Providers
 *
 * <!-- This section is generated, changes will be overwritten -->
 * This resource uses the following Azure API Providers:
 *
 * * `Microsoft.Communication`: 2023-03-31
 *
 * ## Import
 *
 * Communication service email domain association can be imported using the `resource id`, e.g.
 *
 * ```sh
 * $ pulumi import azure:communication/serviceEmailDomainAssociation:ServiceEmailDomainAssociation example "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.Communication/communicationServices/communicationService1|/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.Communication/emailServices/emailCommunicationService1/domains/domain1"
 * ```
 */
export class ServiceEmailDomainAssociation extends pulumi.CustomResource {
    /**
     * Get an existing ServiceEmailDomainAssociation resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ServiceEmailDomainAssociationState, opts?: pulumi.CustomResourceOptions): ServiceEmailDomainAssociation {
        return new ServiceEmailDomainAssociation(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure:communication/serviceEmailDomainAssociation:ServiceEmailDomainAssociation';

    /**
     * Returns true if the given object is an instance of ServiceEmailDomainAssociation.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ServiceEmailDomainAssociation {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ServiceEmailDomainAssociation.__pulumiType;
    }

    /**
     * The ID of the Communication Service. Changing this forces a new communication service email domain association to be created.
     */
    public readonly communicationServiceId!: pulumi.Output<string>;
    /**
     * The ID of the EMail Service Domain. Changing this forces a new communication service email domain association to be created.
     */
    public readonly emailServiceDomainId!: pulumi.Output<string>;

    /**
     * Create a ServiceEmailDomainAssociation resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ServiceEmailDomainAssociationArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ServiceEmailDomainAssociationArgs | ServiceEmailDomainAssociationState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ServiceEmailDomainAssociationState | undefined;
            resourceInputs["communicationServiceId"] = state ? state.communicationServiceId : undefined;
            resourceInputs["emailServiceDomainId"] = state ? state.emailServiceDomainId : undefined;
        } else {
            const args = argsOrState as ServiceEmailDomainAssociationArgs | undefined;
            if ((!args || args.communicationServiceId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'communicationServiceId'");
            }
            if ((!args || args.emailServiceDomainId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'emailServiceDomainId'");
            }
            resourceInputs["communicationServiceId"] = args ? args.communicationServiceId : undefined;
            resourceInputs["emailServiceDomainId"] = args ? args.emailServiceDomainId : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ServiceEmailDomainAssociation.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ServiceEmailDomainAssociation resources.
 */
export interface ServiceEmailDomainAssociationState {
    /**
     * The ID of the Communication Service. Changing this forces a new communication service email domain association to be created.
     */
    communicationServiceId?: pulumi.Input<string>;
    /**
     * The ID of the EMail Service Domain. Changing this forces a new communication service email domain association to be created.
     */
    emailServiceDomainId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ServiceEmailDomainAssociation resource.
 */
export interface ServiceEmailDomainAssociationArgs {
    /**
     * The ID of the Communication Service. Changing this forces a new communication service email domain association to be created.
     */
    communicationServiceId: pulumi.Input<string>;
    /**
     * The ID of the EMail Service Domain. Changing this forces a new communication service email domain association to be created.
     */
    emailServiceDomainId: pulumi.Input<string>;
}
