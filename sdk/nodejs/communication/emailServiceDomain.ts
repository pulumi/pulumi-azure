// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Manages an Email Communication Service Domain.
 *
 * ## Import
 *
 * Communication Services can be imported using the `resource id`, e.g.
 *
 * ```sh
 * $ pulumi import azure:communication/emailServiceDomain:EmailServiceDomain example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.Communication/emailServices/emailCommunicationService1/domains/domain1
 * ```
 */
export class EmailServiceDomain extends pulumi.CustomResource {
    /**
     * Get an existing EmailServiceDomain resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: EmailServiceDomainState, opts?: pulumi.CustomResourceOptions): EmailServiceDomain {
        return new EmailServiceDomain(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure:communication/emailServiceDomain:EmailServiceDomain';

    /**
     * Returns true if the given object is an instance of EmailServiceDomain.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is EmailServiceDomain {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === EmailServiceDomain.__pulumiType;
    }

    /**
     * Describes how a Domains resource is being managed. Possible values are `AzureManaged`, `CustomerManaged`, `CustomerManagedInExchangeOnline`. Changing this forces a new Email Communication Service to be created.
     */
    public readonly domainManagement!: pulumi.Output<string>;
    /**
     * The resource ID of the Email Communication Service where the Domain belongs to. Changing this forces a new Email Communication Service to be created.
     */
    public readonly emailServiceId!: pulumi.Output<string>;
    /**
     * P2 sender domain that is displayed to the email recipients [RFC 5322].
     */
    public /*out*/ readonly fromSenderDomain!: pulumi.Output<string>;
    /**
     * P1 sender domain that is present on the email envelope [RFC 5321].
     */
    public /*out*/ readonly mailFromSenderDomain!: pulumi.Output<string>;
    /**
     * The name of the Email Communication Service resource. If `domainManagement` is `AzureManaged`, the name must be `AzureManagedDomain`. Changing this forces a new Email Communication Service to be created.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * A mapping of tags which should be assigned to the Email Communication Service.
     */
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * Describes user engagement tracking is enabled or disabled. Defaults to `false`.
     */
    public readonly userEngagementTrackingEnabled!: pulumi.Output<boolean | undefined>;
    /**
     * (Optional) An `verificationRecords` block as defined below.
     */
    public /*out*/ readonly verificationRecords!: pulumi.Output<outputs.communication.EmailServiceDomainVerificationRecord[]>;

    /**
     * Create a EmailServiceDomain resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: EmailServiceDomainArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: EmailServiceDomainArgs | EmailServiceDomainState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as EmailServiceDomainState | undefined;
            resourceInputs["domainManagement"] = state ? state.domainManagement : undefined;
            resourceInputs["emailServiceId"] = state ? state.emailServiceId : undefined;
            resourceInputs["fromSenderDomain"] = state ? state.fromSenderDomain : undefined;
            resourceInputs["mailFromSenderDomain"] = state ? state.mailFromSenderDomain : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["userEngagementTrackingEnabled"] = state ? state.userEngagementTrackingEnabled : undefined;
            resourceInputs["verificationRecords"] = state ? state.verificationRecords : undefined;
        } else {
            const args = argsOrState as EmailServiceDomainArgs | undefined;
            if ((!args || args.domainManagement === undefined) && !opts.urn) {
                throw new Error("Missing required property 'domainManagement'");
            }
            if ((!args || args.emailServiceId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'emailServiceId'");
            }
            resourceInputs["domainManagement"] = args ? args.domainManagement : undefined;
            resourceInputs["emailServiceId"] = args ? args.emailServiceId : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["userEngagementTrackingEnabled"] = args ? args.userEngagementTrackingEnabled : undefined;
            resourceInputs["fromSenderDomain"] = undefined /*out*/;
            resourceInputs["mailFromSenderDomain"] = undefined /*out*/;
            resourceInputs["verificationRecords"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(EmailServiceDomain.__pulumiType, name, resourceInputs, opts, false /*remote*/);
    }
}

/**
 * Input properties used for looking up and filtering EmailServiceDomain resources.
 */
export interface EmailServiceDomainState {
    /**
     * Describes how a Domains resource is being managed. Possible values are `AzureManaged`, `CustomerManaged`, `CustomerManagedInExchangeOnline`. Changing this forces a new Email Communication Service to be created.
     */
    domainManagement?: pulumi.Input<string>;
    /**
     * The resource ID of the Email Communication Service where the Domain belongs to. Changing this forces a new Email Communication Service to be created.
     */
    emailServiceId?: pulumi.Input<string>;
    /**
     * P2 sender domain that is displayed to the email recipients [RFC 5322].
     */
    fromSenderDomain?: pulumi.Input<string>;
    /**
     * P1 sender domain that is present on the email envelope [RFC 5321].
     */
    mailFromSenderDomain?: pulumi.Input<string>;
    /**
     * The name of the Email Communication Service resource. If `domainManagement` is `AzureManaged`, the name must be `AzureManagedDomain`. Changing this forces a new Email Communication Service to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * A mapping of tags which should be assigned to the Email Communication Service.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Describes user engagement tracking is enabled or disabled. Defaults to `false`.
     */
    userEngagementTrackingEnabled?: pulumi.Input<boolean>;
    /**
     * (Optional) An `verificationRecords` block as defined below.
     */
    verificationRecords?: pulumi.Input<pulumi.Input<inputs.communication.EmailServiceDomainVerificationRecord>[]>;
}

/**
 * The set of arguments for constructing a EmailServiceDomain resource.
 */
export interface EmailServiceDomainArgs {
    /**
     * Describes how a Domains resource is being managed. Possible values are `AzureManaged`, `CustomerManaged`, `CustomerManagedInExchangeOnline`. Changing this forces a new Email Communication Service to be created.
     */
    domainManagement: pulumi.Input<string>;
    /**
     * The resource ID of the Email Communication Service where the Domain belongs to. Changing this forces a new Email Communication Service to be created.
     */
    emailServiceId: pulumi.Input<string>;
    /**
     * The name of the Email Communication Service resource. If `domainManagement` is `AzureManaged`, the name must be `AzureManagedDomain`. Changing this forces a new Email Communication Service to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * A mapping of tags which should be assigned to the Email Communication Service.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Describes user engagement tracking is enabled or disabled. Defaults to `false`.
     */
    userEngagementTrackingEnabled?: pulumi.Input<boolean>;
}
