// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Manages an Email Communication Service.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const exampleResourceGroup = new azure.core.ResourceGroup("exampleResourceGroup", {location: "West Europe"});
 * const exampleEmailService = new azure.communication.EmailService("exampleEmailService", {
 *     resourceGroupName: exampleResourceGroup.name,
 *     dataLocation: "United States",
 * });
 * ```
 *
 * ## Import
 *
 * Communication Services can be imported using the `resource id`, e.g.
 *
 * ```sh
 *  $ pulumi import azure:communication/emailService:EmailService example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.Communication/emailServices/emailCommunicationService1
 * ```
 */
export class EmailService extends pulumi.CustomResource {
    /**
     * Get an existing EmailService resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: EmailServiceState, opts?: pulumi.CustomResourceOptions): EmailService {
        return new EmailService(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure:communication/emailService:EmailService';

    /**
     * Returns true if the given object is an instance of EmailService.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is EmailService {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === EmailService.__pulumiType;
    }

    /**
     * The location where the Email Communication service stores its data at rest. Possible values are `Africa`, `Asia Pacific`, `Australia`, `Brazil`, `Canada`, `Europe`, `France`, `Germany`, `India`, `Japan`, `Korea`, `Norway`, `Switzerland`, `UAE`, `UK` and `United States`. Changing this forces a new Email Communication Service to be created.
     */
    public readonly dataLocation!: pulumi.Output<string>;
    /**
     * The name of the Email Communication Service resource. Changing this forces a new Email Communication Service to be created.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The name of the Resource Group where the Email Communication Service should exist. Changing this forces a new Email Communication Service to be created.
     */
    public readonly resourceGroupName!: pulumi.Output<string>;
    /**
     * A mapping of tags which should be assigned to the Email Communication Service.
     */
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;

    /**
     * Create a EmailService resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: EmailServiceArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: EmailServiceArgs | EmailServiceState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as EmailServiceState | undefined;
            resourceInputs["dataLocation"] = state ? state.dataLocation : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["resourceGroupName"] = state ? state.resourceGroupName : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
        } else {
            const args = argsOrState as EmailServiceArgs | undefined;
            if ((!args || args.dataLocation === undefined) && !opts.urn) {
                throw new Error("Missing required property 'dataLocation'");
            }
            if ((!args || args.resourceGroupName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            resourceInputs["dataLocation"] = args ? args.dataLocation : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(EmailService.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering EmailService resources.
 */
export interface EmailServiceState {
    /**
     * The location where the Email Communication service stores its data at rest. Possible values are `Africa`, `Asia Pacific`, `Australia`, `Brazil`, `Canada`, `Europe`, `France`, `Germany`, `India`, `Japan`, `Korea`, `Norway`, `Switzerland`, `UAE`, `UK` and `United States`. Changing this forces a new Email Communication Service to be created.
     */
    dataLocation?: pulumi.Input<string>;
    /**
     * The name of the Email Communication Service resource. Changing this forces a new Email Communication Service to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * The name of the Resource Group where the Email Communication Service should exist. Changing this forces a new Email Communication Service to be created.
     */
    resourceGroupName?: pulumi.Input<string>;
    /**
     * A mapping of tags which should be assigned to the Email Communication Service.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

/**
 * The set of arguments for constructing a EmailService resource.
 */
export interface EmailServiceArgs {
    /**
     * The location where the Email Communication service stores its data at rest. Possible values are `Africa`, `Asia Pacific`, `Australia`, `Brazil`, `Canada`, `Europe`, `France`, `Germany`, `India`, `Japan`, `Korea`, `Norway`, `Switzerland`, `UAE`, `UK` and `United States`. Changing this forces a new Email Communication Service to be created.
     */
    dataLocation: pulumi.Input<string>;
    /**
     * The name of the Email Communication Service resource. Changing this forces a new Email Communication Service to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * The name of the Resource Group where the Email Communication Service should exist. Changing this forces a new Email Communication Service to be created.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * A mapping of tags which should be assigned to the Email Communication Service.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
