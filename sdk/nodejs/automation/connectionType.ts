// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Manages anAutomation Connection Type.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const exampleResourceGroup = new azure.core.ResourceGroup("example", {
 *     name: "resourceGroup-example",
 *     location: "West Europe",
 * });
 * const example = azure.core.getClientConfig({});
 * const exampleAccount = new azure.automation.Account("example", {
 *     name: "account-example",
 *     location: exampleResourceGroup.location,
 *     resourceGroupName: exampleResourceGroup.name,
 *     skuName: "Basic",
 * });
 * const exampleConnectionType = new azure.automation.ConnectionType("example", {
 *     name: "example",
 *     resourceGroupName: exampleResourceGroup.name,
 *     automationAccountName: exampleAccount.name,
 *     fields: [{
 *         name: "example",
 *         type: "string",
 *     }],
 * });
 * ```
 *
 * ## API Providers
 *
 * <!-- This section is generated, changes will be overwritten -->
 * This resource uses the following Azure API Providers:
 *
 * * `Microsoft.Automation` - 2023-11-01
 *
 * ## Import
 *
 * Automations can be imported using the `resource id`, e.g.
 *
 * ```sh
 * $ pulumi import azure:automation/connectionType:ConnectionType example /subscriptions/12345678-1234-9876-4563-123456789012/resourceGroups/group1/providers/Microsoft.Automation/automationAccounts/account1/connectionTypes/type1
 * ```
 */
export class ConnectionType extends pulumi.CustomResource {
    /**
     * Get an existing ConnectionType resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ConnectionTypeState, opts?: pulumi.CustomResourceOptions): ConnectionType {
        return new ConnectionType(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure:automation/connectionType:ConnectionType';

    /**
     * Returns true if the given object is an instance of ConnectionType.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ConnectionType {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ConnectionType.__pulumiType;
    }

    /**
     * The name of the automation account in which the Connection is created. Changing this forces a new resource to be created.
     */
    declare public readonly automationAccountName: pulumi.Output<string>;
    /**
     * One or more `field` blocks as defined below. Changing this forces a new Automation to be created.
     */
    declare public readonly fields: pulumi.Output<outputs.automation.ConnectionTypeField[]>;
    /**
     * Whether the connection type is global. Changing this forces a new Automation to be created.
     */
    declare public readonly isGlobal: pulumi.Output<boolean | undefined>;
    /**
     * The name which should be used for this Automation Connection Type. Changing this forces a new Automation to be created.
     */
    declare public readonly name: pulumi.Output<string>;
    /**
     * The name of the Resource Group where the Automation should exist. Changing this forces a new Automation to be created.
     */
    declare public readonly resourceGroupName: pulumi.Output<string>;

    /**
     * Create a ConnectionType resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ConnectionTypeArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ConnectionTypeArgs | ConnectionTypeState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ConnectionTypeState | undefined;
            resourceInputs["automationAccountName"] = state?.automationAccountName;
            resourceInputs["fields"] = state?.fields;
            resourceInputs["isGlobal"] = state?.isGlobal;
            resourceInputs["name"] = state?.name;
            resourceInputs["resourceGroupName"] = state?.resourceGroupName;
        } else {
            const args = argsOrState as ConnectionTypeArgs | undefined;
            if (args?.automationAccountName === undefined && !opts.urn) {
                throw new Error("Missing required property 'automationAccountName'");
            }
            if (args?.fields === undefined && !opts.urn) {
                throw new Error("Missing required property 'fields'");
            }
            if (args?.resourceGroupName === undefined && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            resourceInputs["automationAccountName"] = args?.automationAccountName;
            resourceInputs["fields"] = args?.fields;
            resourceInputs["isGlobal"] = args?.isGlobal;
            resourceInputs["name"] = args?.name;
            resourceInputs["resourceGroupName"] = args?.resourceGroupName;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ConnectionType.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ConnectionType resources.
 */
export interface ConnectionTypeState {
    /**
     * The name of the automation account in which the Connection is created. Changing this forces a new resource to be created.
     */
    automationAccountName?: pulumi.Input<string>;
    /**
     * One or more `field` blocks as defined below. Changing this forces a new Automation to be created.
     */
    fields?: pulumi.Input<pulumi.Input<inputs.automation.ConnectionTypeField>[]>;
    /**
     * Whether the connection type is global. Changing this forces a new Automation to be created.
     */
    isGlobal?: pulumi.Input<boolean>;
    /**
     * The name which should be used for this Automation Connection Type. Changing this forces a new Automation to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * The name of the Resource Group where the Automation should exist. Changing this forces a new Automation to be created.
     */
    resourceGroupName?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ConnectionType resource.
 */
export interface ConnectionTypeArgs {
    /**
     * The name of the automation account in which the Connection is created. Changing this forces a new resource to be created.
     */
    automationAccountName: pulumi.Input<string>;
    /**
     * One or more `field` blocks as defined below. Changing this forces a new Automation to be created.
     */
    fields: pulumi.Input<pulumi.Input<inputs.automation.ConnectionTypeField>[]>;
    /**
     * Whether the connection type is global. Changing this forces a new Automation to be created.
     */
    isGlobal?: pulumi.Input<boolean>;
    /**
     * The name which should be used for this Automation Connection Type. Changing this forces a new Automation to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * The name of the Resource Group where the Automation should exist. Changing this forces a new Automation to be created.
     */
    resourceGroupName: pulumi.Input<string>;
}
