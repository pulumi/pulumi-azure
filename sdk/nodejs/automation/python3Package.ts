// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Manages a Automation Python3 Package.
 *
 * ## Import
 *
 * Automation Python3 Packages can be imported using the `resource id`, e.g.
 *
 * ```sh
 *  $ pulumi import azure:automation/python3Package:Python3Package example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.Automation/automationAccounts/account1/python3Packages/pkg
 * ```
 */
export class Python3Package extends pulumi.CustomResource {
    /**
     * Get an existing Python3Package resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: Python3PackageState, opts?: pulumi.CustomResourceOptions): Python3Package {
        return new Python3Package(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure:automation/python3Package:Python3Package';

    /**
     * Returns true if the given object is an instance of Python3Package.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Python3Package {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Python3Package.__pulumiType;
    }

    /**
     * The name of the automation account in which the Python3 Package is created. Changing this forces a new resource to be created.
     */
    public readonly automationAccountName!: pulumi.Output<string>;
    /**
     * The URL of the python package. Changing this forces a new Automation Python3 Package to be created.
     */
    public readonly contentUri!: pulumi.Output<string>;
    /**
     * Specify the version of the python3 package. The value should meet the system.version class format like `1.1.1`. Changing this forces a new Automation Python3 Package to be created.
     */
    public readonly contentVersion!: pulumi.Output<string | undefined>;
    /**
     * Specify the hash algorithm used to hash the content of the python3 package. Changing this forces a new Automation Python3 Package to be created.
     */
    public readonly hashAlgorithm!: pulumi.Output<string | undefined>;
    /**
     * Specity the hash value of the content. Changing this forces a new Automation Python3 Package to be created.
     */
    public readonly hashValue!: pulumi.Output<string | undefined>;
    /**
     * The name which should be used for this Automation Python3 Package. Changing this forces a new Automation Python3 Package to be created.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The name of the resource group in which the Python3 Package is created. Changing this forces a new resource to be created.
     */
    public readonly resourceGroupName!: pulumi.Output<string>;
    /**
     * A mapping of tags which should be assigned to the Automation Python3 Package.
     */
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;

    /**
     * Create a Python3Package resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: Python3PackageArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: Python3PackageArgs | Python3PackageState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as Python3PackageState | undefined;
            resourceInputs["automationAccountName"] = state ? state.automationAccountName : undefined;
            resourceInputs["contentUri"] = state ? state.contentUri : undefined;
            resourceInputs["contentVersion"] = state ? state.contentVersion : undefined;
            resourceInputs["hashAlgorithm"] = state ? state.hashAlgorithm : undefined;
            resourceInputs["hashValue"] = state ? state.hashValue : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["resourceGroupName"] = state ? state.resourceGroupName : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
        } else {
            const args = argsOrState as Python3PackageArgs | undefined;
            if ((!args || args.automationAccountName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'automationAccountName'");
            }
            if ((!args || args.contentUri === undefined) && !opts.urn) {
                throw new Error("Missing required property 'contentUri'");
            }
            if ((!args || args.resourceGroupName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            resourceInputs["automationAccountName"] = args ? args.automationAccountName : undefined;
            resourceInputs["contentUri"] = args ? args.contentUri : undefined;
            resourceInputs["contentVersion"] = args ? args.contentVersion : undefined;
            resourceInputs["hashAlgorithm"] = args ? args.hashAlgorithm : undefined;
            resourceInputs["hashValue"] = args ? args.hashValue : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Python3Package.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Python3Package resources.
 */
export interface Python3PackageState {
    /**
     * The name of the automation account in which the Python3 Package is created. Changing this forces a new resource to be created.
     */
    automationAccountName?: pulumi.Input<string>;
    /**
     * The URL of the python package. Changing this forces a new Automation Python3 Package to be created.
     */
    contentUri?: pulumi.Input<string>;
    /**
     * Specify the version of the python3 package. The value should meet the system.version class format like `1.1.1`. Changing this forces a new Automation Python3 Package to be created.
     */
    contentVersion?: pulumi.Input<string>;
    /**
     * Specify the hash algorithm used to hash the content of the python3 package. Changing this forces a new Automation Python3 Package to be created.
     */
    hashAlgorithm?: pulumi.Input<string>;
    /**
     * Specity the hash value of the content. Changing this forces a new Automation Python3 Package to be created.
     */
    hashValue?: pulumi.Input<string>;
    /**
     * The name which should be used for this Automation Python3 Package. Changing this forces a new Automation Python3 Package to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * The name of the resource group in which the Python3 Package is created. Changing this forces a new resource to be created.
     */
    resourceGroupName?: pulumi.Input<string>;
    /**
     * A mapping of tags which should be assigned to the Automation Python3 Package.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

/**
 * The set of arguments for constructing a Python3Package resource.
 */
export interface Python3PackageArgs {
    /**
     * The name of the automation account in which the Python3 Package is created. Changing this forces a new resource to be created.
     */
    automationAccountName: pulumi.Input<string>;
    /**
     * The URL of the python package. Changing this forces a new Automation Python3 Package to be created.
     */
    contentUri: pulumi.Input<string>;
    /**
     * Specify the version of the python3 package. The value should meet the system.version class format like `1.1.1`. Changing this forces a new Automation Python3 Package to be created.
     */
    contentVersion?: pulumi.Input<string>;
    /**
     * Specify the hash algorithm used to hash the content of the python3 package. Changing this forces a new Automation Python3 Package to be created.
     */
    hashAlgorithm?: pulumi.Input<string>;
    /**
     * Specity the hash value of the content. Changing this forces a new Automation Python3 Package to be created.
     */
    hashValue?: pulumi.Input<string>;
    /**
     * The name which should be used for this Automation Python3 Package. Changing this forces a new Automation Python3 Package to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * The name of the resource group in which the Python3 Package is created. Changing this forces a new resource to be created.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * A mapping of tags which should be assigned to the Automation Python3 Package.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
