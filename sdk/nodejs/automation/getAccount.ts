// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Use this data source to access information about an existing Automation Account.
 */
export function getAccount(args: GetAccountArgs, opts?: pulumi.InvokeOptions): Promise<GetAccountResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azure:automation/getAccount:getAccount", {
        "name": args.name,
        "resourceGroupName": args.resourceGroupName,
    }, opts);
}

/**
 * A collection of arguments for invoking getAccount.
 */
export interface GetAccountArgs {
    /**
     * The name of the Automation Account.
     */
    name: string;
    /**
     * Specifies the name of the Resource Group where the Automation Account exists.
     */
    resourceGroupName: string;
}

/**
 * A collection of values returned by getAccount.
 */
export interface GetAccountResult {
    /**
     * The Endpoint for this Automation Account.
     */
    readonly endpoint: string;
    /**
     * The URL of automation hybrid service which is used for hybrid worker on-boarding With this Automation Account.
     */
    readonly hybridServiceUrl: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * (Optional) An `identity` block as defined below.
     */
    readonly identities: outputs.automation.GetAccountIdentity[];
    readonly name: string;
    /**
     * The Primary Access Key for the Automation Account.
     */
    readonly primaryKey: string;
    readonly privateEndpointConnections: outputs.automation.GetAccountPrivateEndpointConnection[];
    readonly resourceGroupName: string;
    /**
     * The Secondary Access Key for the Automation Account.
     */
    readonly secondaryKey: string;
}
/**
 * Use this data source to access information about an existing Automation Account.
 */
export function getAccountOutput(args: GetAccountOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAccountResult> {
    return pulumi.output(args).apply((a: any) => getAccount(a, opts))
}

/**
 * A collection of arguments for invoking getAccount.
 */
export interface GetAccountOutputArgs {
    /**
     * The name of the Automation Account.
     */
    name: pulumi.Input<string>;
    /**
     * Specifies the name of the Resource Group where the Automation Account exists.
     */
    resourceGroupName: pulumi.Input<string>;
}
