// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Manages a Automation Account.
 *
 * ## Import
 *
 * Automation Accounts can be imported using the `resource id`, e.g.
 *
 * ```sh
 *  $ pulumi import azure:automation/account:Account account1 /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.Automation/automationAccounts/account1
 * ```
 */
export class Account extends pulumi.CustomResource {
    /**
     * Get an existing Account resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AccountState, opts?: pulumi.CustomResourceOptions): Account {
        return new Account(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure:automation/account:Account';

    /**
     * Returns true if the given object is an instance of Account.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Account {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Account.__pulumiType;
    }

    /**
     * The Primary Access Key for the DSC Endpoint associated with this Automation Account.
     */
    public /*out*/ readonly dscPrimaryAccessKey!: pulumi.Output<string>;
    /**
     * The Secondary Access Key for the DSC Endpoint associated with this Automation Account.
     */
    public /*out*/ readonly dscSecondaryAccessKey!: pulumi.Output<string>;
    /**
     * The DSC Server Endpoint associated with this Automation Account.
     */
    public /*out*/ readonly dscServerEndpoint!: pulumi.Output<string>;
    /**
     * An `encryption` block as defined below.
     */
    public readonly encryptions!: pulumi.Output<outputs.automation.AccountEncryption[] | undefined>;
    /**
     * The URL of automation hybrid service which is used for hybrid worker on-boarding With this Automation Account.
     */
    public /*out*/ readonly hybridServiceUrl!: pulumi.Output<string>;
    /**
     * An `identity` block as defined below.
     */
    public readonly identity!: pulumi.Output<outputs.automation.AccountIdentity | undefined>;
    /**
     * Whether requests using non-AAD authentication are blocked. Defaults to `true`.
     */
    public readonly localAuthenticationEnabled!: pulumi.Output<boolean | undefined>;
    /**
     * Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
     */
    public readonly location!: pulumi.Output<string>;
    /**
     * Specifies the name of the Automation Account. Changing this forces a new resource to be created.
     */
    public readonly name!: pulumi.Output<string>;
    public /*out*/ readonly privateEndpointConnections!: pulumi.Output<outputs.automation.AccountPrivateEndpointConnection[]>;
    /**
     * Whether public network access is allowed for the automation account. Defaults to `true`.
     */
    public readonly publicNetworkAccessEnabled!: pulumi.Output<boolean | undefined>;
    /**
     * The name of the resource group in which the Automation Account is created. Changing this forces a new resource to be created.
     */
    public readonly resourceGroupName!: pulumi.Output<string>;
    /**
     * The SKU of the account. Possible values are `Basic` and `Free`.
     */
    public readonly skuName!: pulumi.Output<string>;
    /**
     * A mapping of tags to assign to the resource.
     */
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;

    /**
     * Create a Account resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AccountArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AccountArgs | AccountState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AccountState | undefined;
            resourceInputs["dscPrimaryAccessKey"] = state ? state.dscPrimaryAccessKey : undefined;
            resourceInputs["dscSecondaryAccessKey"] = state ? state.dscSecondaryAccessKey : undefined;
            resourceInputs["dscServerEndpoint"] = state ? state.dscServerEndpoint : undefined;
            resourceInputs["encryptions"] = state ? state.encryptions : undefined;
            resourceInputs["hybridServiceUrl"] = state ? state.hybridServiceUrl : undefined;
            resourceInputs["identity"] = state ? state.identity : undefined;
            resourceInputs["localAuthenticationEnabled"] = state ? state.localAuthenticationEnabled : undefined;
            resourceInputs["location"] = state ? state.location : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["privateEndpointConnections"] = state ? state.privateEndpointConnections : undefined;
            resourceInputs["publicNetworkAccessEnabled"] = state ? state.publicNetworkAccessEnabled : undefined;
            resourceInputs["resourceGroupName"] = state ? state.resourceGroupName : undefined;
            resourceInputs["skuName"] = state ? state.skuName : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
        } else {
            const args = argsOrState as AccountArgs | undefined;
            if ((!args || args.resourceGroupName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            if ((!args || args.skuName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'skuName'");
            }
            resourceInputs["encryptions"] = args ? args.encryptions : undefined;
            resourceInputs["identity"] = args ? args.identity : undefined;
            resourceInputs["localAuthenticationEnabled"] = args ? args.localAuthenticationEnabled : undefined;
            resourceInputs["location"] = args ? args.location : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["publicNetworkAccessEnabled"] = args ? args.publicNetworkAccessEnabled : undefined;
            resourceInputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            resourceInputs["skuName"] = args ? args.skuName : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["dscPrimaryAccessKey"] = undefined /*out*/;
            resourceInputs["dscSecondaryAccessKey"] = undefined /*out*/;
            resourceInputs["dscServerEndpoint"] = undefined /*out*/;
            resourceInputs["hybridServiceUrl"] = undefined /*out*/;
            resourceInputs["privateEndpointConnections"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["dscPrimaryAccessKey", "dscSecondaryAccessKey"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(Account.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Account resources.
 */
export interface AccountState {
    /**
     * The Primary Access Key for the DSC Endpoint associated with this Automation Account.
     */
    dscPrimaryAccessKey?: pulumi.Input<string>;
    /**
     * The Secondary Access Key for the DSC Endpoint associated with this Automation Account.
     */
    dscSecondaryAccessKey?: pulumi.Input<string>;
    /**
     * The DSC Server Endpoint associated with this Automation Account.
     */
    dscServerEndpoint?: pulumi.Input<string>;
    /**
     * An `encryption` block as defined below.
     */
    encryptions?: pulumi.Input<pulumi.Input<inputs.automation.AccountEncryption>[]>;
    /**
     * The URL of automation hybrid service which is used for hybrid worker on-boarding With this Automation Account.
     */
    hybridServiceUrl?: pulumi.Input<string>;
    /**
     * An `identity` block as defined below.
     */
    identity?: pulumi.Input<inputs.automation.AccountIdentity>;
    /**
     * Whether requests using non-AAD authentication are blocked. Defaults to `true`.
     */
    localAuthenticationEnabled?: pulumi.Input<boolean>;
    /**
     * Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
     */
    location?: pulumi.Input<string>;
    /**
     * Specifies the name of the Automation Account. Changing this forces a new resource to be created.
     */
    name?: pulumi.Input<string>;
    privateEndpointConnections?: pulumi.Input<pulumi.Input<inputs.automation.AccountPrivateEndpointConnection>[]>;
    /**
     * Whether public network access is allowed for the automation account. Defaults to `true`.
     */
    publicNetworkAccessEnabled?: pulumi.Input<boolean>;
    /**
     * The name of the resource group in which the Automation Account is created. Changing this forces a new resource to be created.
     */
    resourceGroupName?: pulumi.Input<string>;
    /**
     * The SKU of the account. Possible values are `Basic` and `Free`.
     */
    skuName?: pulumi.Input<string>;
    /**
     * A mapping of tags to assign to the resource.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

/**
 * The set of arguments for constructing a Account resource.
 */
export interface AccountArgs {
    /**
     * An `encryption` block as defined below.
     */
    encryptions?: pulumi.Input<pulumi.Input<inputs.automation.AccountEncryption>[]>;
    /**
     * An `identity` block as defined below.
     */
    identity?: pulumi.Input<inputs.automation.AccountIdentity>;
    /**
     * Whether requests using non-AAD authentication are blocked. Defaults to `true`.
     */
    localAuthenticationEnabled?: pulumi.Input<boolean>;
    /**
     * Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
     */
    location?: pulumi.Input<string>;
    /**
     * Specifies the name of the Automation Account. Changing this forces a new resource to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * Whether public network access is allowed for the automation account. Defaults to `true`.
     */
    publicNetworkAccessEnabled?: pulumi.Input<boolean>;
    /**
     * The name of the resource group in which the Automation Account is created. Changing this forces a new resource to be created.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * The SKU of the account. Possible values are `Basic` and `Free`.
     */
    skuName: pulumi.Input<string>;
    /**
     * A mapping of tags to assign to the resource.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
