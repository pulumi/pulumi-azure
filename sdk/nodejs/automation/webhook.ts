// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Manages an Automation Runbook's Webhook.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = new azure.core.ResourceGroup("example", {
 *     name: "example-resources",
 *     location: "West Europe",
 * });
 * const exampleAccount = new azure.automation.Account("example", {
 *     name: "account1",
 *     location: example.location,
 *     resourceGroupName: example.name,
 *     skuName: "Basic",
 * });
 * const exampleRunBook = new azure.automation.RunBook("example", {
 *     name: "Get-AzureVMTutorial",
 *     location: example.location,
 *     resourceGroupName: example.name,
 *     automationAccountName: exampleAccount.name,
 *     logVerbose: true,
 *     logProgress: true,
 *     description: "This is an example runbook",
 *     runbookType: "PowerShellWorkflow",
 *     publishContentLink: {
 *         uri: "https://raw.githubusercontent.com/Azure/azure-quickstart-templates/c4935ffb69246a6058eb24f54640f53f69d3ac9f/101-automation-runbook-getvms/Runbooks/Get-AzureVMTutorial.ps1",
 *     },
 * });
 * const exampleWebhook = new azure.automation.Webhook("example", {
 *     name: "TestRunbook_webhook",
 *     resourceGroupName: example.name,
 *     automationAccountName: exampleAccount.name,
 *     expiryTime: "2021-12-31T00:00:00Z",
 *     enabled: true,
 *     runbookName: exampleRunBook.name,
 *     parameters: {
 *         input: "parameter",
 *     },
 * });
 * ```
 *
 * ## API Providers
 *
 * <!-- This section is generated, changes will be overwritten -->
 * This resource uses the following Azure API Providers:
 *
 * * `Microsoft.Automation` - 2015-10-31
 *
 * ## Import
 *
 * Automation Webhooks can be imported using the `resource id`, e.g.
 *
 * ```sh
 * $ pulumi import azure:automation/webhook:Webhook TestRunbook_webhook /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.Automation/automationAccounts/account1/webHooks/TestRunbook_webhook
 * ```
 */
export class Webhook extends pulumi.CustomResource {
    /**
     * Get an existing Webhook resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: WebhookState, opts?: pulumi.CustomResourceOptions): Webhook {
        return new Webhook(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure:automation/webhook:Webhook';

    /**
     * Returns true if the given object is an instance of Webhook.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Webhook {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Webhook.__pulumiType;
    }

    /**
     * The name of the automation account in which the Webhook is created. Changing this forces a new resource to be created.
     */
    declare public readonly automationAccountName: pulumi.Output<string>;
    /**
     * Controls if Webhook is enabled. Defaults to `true`.
     */
    declare public readonly enabled: pulumi.Output<boolean | undefined>;
    /**
     * Timestamp when the webhook expires. Changing this forces a new resource to be created.
     */
    declare public readonly expiryTime: pulumi.Output<string>;
    /**
     * Specifies the name of the Webhook. Changing this forces a new resource to be created.
     */
    declare public readonly name: pulumi.Output<string>;
    /**
     * Map of input parameters passed to runbook.
     */
    declare public readonly parameters: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * The name of the resource group in which the Webhook is created. Changing this forces a new resource to be created.
     */
    declare public readonly resourceGroupName: pulumi.Output<string>;
    /**
     * Name of the hybrid worker group the Webhook job will run on.
     */
    declare public readonly runOnWorkerGroup: pulumi.Output<string | undefined>;
    /**
     * Name of the Automation Runbook to execute by Webhook.
     */
    declare public readonly runbookName: pulumi.Output<string>;
    /**
     * URI to initiate the webhook. Can be generated using [Generate URI API](https://docs.microsoft.com/rest/api/automation/webhook/generate-uri). By default, new URI is generated on each new resource creation. Changing this forces a new resource to be created.
     */
    declare public readonly uri: pulumi.Output<string>;

    /**
     * Create a Webhook resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: WebhookArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: WebhookArgs | WebhookState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as WebhookState | undefined;
            resourceInputs["automationAccountName"] = state?.automationAccountName;
            resourceInputs["enabled"] = state?.enabled;
            resourceInputs["expiryTime"] = state?.expiryTime;
            resourceInputs["name"] = state?.name;
            resourceInputs["parameters"] = state?.parameters;
            resourceInputs["resourceGroupName"] = state?.resourceGroupName;
            resourceInputs["runOnWorkerGroup"] = state?.runOnWorkerGroup;
            resourceInputs["runbookName"] = state?.runbookName;
            resourceInputs["uri"] = state?.uri;
        } else {
            const args = argsOrState as WebhookArgs | undefined;
            if (args?.automationAccountName === undefined && !opts.urn) {
                throw new Error("Missing required property 'automationAccountName'");
            }
            if (args?.expiryTime === undefined && !opts.urn) {
                throw new Error("Missing required property 'expiryTime'");
            }
            if (args?.resourceGroupName === undefined && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            if (args?.runbookName === undefined && !opts.urn) {
                throw new Error("Missing required property 'runbookName'");
            }
            resourceInputs["automationAccountName"] = args?.automationAccountName;
            resourceInputs["enabled"] = args?.enabled;
            resourceInputs["expiryTime"] = args?.expiryTime;
            resourceInputs["name"] = args?.name;
            resourceInputs["parameters"] = args?.parameters;
            resourceInputs["resourceGroupName"] = args?.resourceGroupName;
            resourceInputs["runOnWorkerGroup"] = args?.runOnWorkerGroup;
            resourceInputs["runbookName"] = args?.runbookName;
            resourceInputs["uri"] = args?.uri ? pulumi.secret(args.uri) : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["uri"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(Webhook.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Webhook resources.
 */
export interface WebhookState {
    /**
     * The name of the automation account in which the Webhook is created. Changing this forces a new resource to be created.
     */
    automationAccountName?: pulumi.Input<string>;
    /**
     * Controls if Webhook is enabled. Defaults to `true`.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * Timestamp when the webhook expires. Changing this forces a new resource to be created.
     */
    expiryTime?: pulumi.Input<string>;
    /**
     * Specifies the name of the Webhook. Changing this forces a new resource to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * Map of input parameters passed to runbook.
     */
    parameters?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The name of the resource group in which the Webhook is created. Changing this forces a new resource to be created.
     */
    resourceGroupName?: pulumi.Input<string>;
    /**
     * Name of the hybrid worker group the Webhook job will run on.
     */
    runOnWorkerGroup?: pulumi.Input<string>;
    /**
     * Name of the Automation Runbook to execute by Webhook.
     */
    runbookName?: pulumi.Input<string>;
    /**
     * URI to initiate the webhook. Can be generated using [Generate URI API](https://docs.microsoft.com/rest/api/automation/webhook/generate-uri). By default, new URI is generated on each new resource creation. Changing this forces a new resource to be created.
     */
    uri?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Webhook resource.
 */
export interface WebhookArgs {
    /**
     * The name of the automation account in which the Webhook is created. Changing this forces a new resource to be created.
     */
    automationAccountName: pulumi.Input<string>;
    /**
     * Controls if Webhook is enabled. Defaults to `true`.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * Timestamp when the webhook expires. Changing this forces a new resource to be created.
     */
    expiryTime: pulumi.Input<string>;
    /**
     * Specifies the name of the Webhook. Changing this forces a new resource to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * Map of input parameters passed to runbook.
     */
    parameters?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The name of the resource group in which the Webhook is created. Changing this forces a new resource to be created.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * Name of the hybrid worker group the Webhook job will run on.
     */
    runOnWorkerGroup?: pulumi.Input<string>;
    /**
     * Name of the Automation Runbook to execute by Webhook.
     */
    runbookName: pulumi.Input<string>;
    /**
     * URI to initiate the webhook. Can be generated using [Generate URI API](https://docs.microsoft.com/rest/api/automation/webhook/generate-uri). By default, new URI is generated on each new resource creation. Changing this forces a new resource to be created.
     */
    uri?: pulumi.Input<string>;
}
