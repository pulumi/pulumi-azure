// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Manages an Automation Wacher.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = new azure.core.ResourceGroup("example", {
 *     name: "example-resources",
 *     location: "West Europe",
 * });
 * const exampleAccount = new azure.automation.Account("example", {
 *     name: "example-account",
 *     location: example.location,
 *     resourceGroupName: example.name,
 *     skuName: "Basic",
 * });
 * const exampleHybridRunbookWorkerGroup = new azure.automation.HybridRunbookWorkerGroup("example", {
 *     name: "example",
 *     resourceGroupName: example.name,
 *     automationAccountName: exampleAccount.name,
 * });
 * const exampleRunBook = new azure.automation.RunBook("example", {
 *     name: "Get-AzureVMTutorial",
 *     location: example.location,
 *     resourceGroupName: example.name,
 *     automationAccountName: exampleAccount.name,
 *     logVerbose: true,
 *     logProgress: true,
 *     description: "This is an example runbook",
 *     runbookType: "PowerShellWorkflow",
 *     publishContentLink: {
 *         uri: "https://raw.githubusercontent.com/Azure/azure-quickstart-templates/c4935ffb69246a6058eb24f54640f53f69d3ac9f/101-automation-runbook-getvms/Runbooks/Get-AzureVMTutorial.ps1",
 *     },
 * });
 * const exampleWatcher = new azure.automation.Watcher("example", {
 *     name: "example",
 *     automationAccountId: exampleAccount.id,
 *     location: "West Europe",
 *     scriptName: exampleRunBook.name,
 *     scriptRunOn: exampleHybridRunbookWorkerGroup.name,
 *     description: "example-watcher desc",
 *     executionFrequencyInSeconds: 42,
 *     tags: {
 *         foo: "bar",
 *     },
 *     scriptParameters: {
 *         foo: "bar",
 *     },
 * });
 * ```
 *
 * ## API Providers
 *
 * <!-- This section is generated, changes will be overwritten -->
 * This resource uses the following Azure API Providers:
 *
 * * `Microsoft.Automation` - 2020-01-13-preview
 *
 * ## Import
 *
 * Automation Watchers can be imported using the `resource id`, e.g.
 *
 * ```sh
 * $ pulumi import azure:automation/watcher:Watcher example /subscriptions/12345678-1234-9876-4563-123456789012/resourceGroups/group1/providers/Microsoft.Automation/automationAccounts/account1/watchers/watch1
 * ```
 */
export class Watcher extends pulumi.CustomResource {
    /**
     * Get an existing Watcher resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: WatcherState, opts?: pulumi.CustomResourceOptions): Watcher {
        return new Watcher(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure:automation/watcher:Watcher';

    /**
     * Returns true if the given object is an instance of Watcher.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Watcher {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Watcher.__pulumiType;
    }

    /**
     * The ID of Automation Account to manage this Watcher. Changing this forces a new Watcher to be created.
     */
    declare public readonly automationAccountId: pulumi.Output<string>;
    /**
     * A description of this Automation Watcher.
     */
    declare public readonly description: pulumi.Output<string | undefined>;
    /**
     * A string of etag assigned to this Automation Watcher.
     */
    declare public readonly etag: pulumi.Output<string | undefined>;
    /**
     * Specify the frequency at which the watcher is invoked.
     */
    declare public readonly executionFrequencyInSeconds: pulumi.Output<number>;
    /**
     * The Azure Region where the Automation Watcher should exist. Changing this forces a new Automation Watcher to be created.
     */
    declare public readonly location: pulumi.Output<string>;
    /**
     * The name which should be used for this Automation Watcher. Changing this forces a new Automation Watcher to be created.
     */
    declare public readonly name: pulumi.Output<string>;
    /**
     * Specify the name of an existing runbook this watcher is attached to. Changing this forces a new Automation to be created.
     */
    declare public readonly scriptName: pulumi.Output<string>;
    /**
     * Specifies a list of key-vaule parameters. Changing this forces a new Automation watcher to be created.
     */
    declare public readonly scriptParameters: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * Specify the name of the Hybrid work group the watcher will run on.
     */
    declare public readonly scriptRunOn: pulumi.Output<string>;
    /**
     * The current status of the Automation Watcher.
     */
    declare public /*out*/ readonly status: pulumi.Output<string>;
    /**
     * A mapping of tags which should be assigned to the Automation Watcher.
     */
    declare public readonly tags: pulumi.Output<{[key: string]: string} | undefined>;

    /**
     * Create a Watcher resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: WatcherArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: WatcherArgs | WatcherState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as WatcherState | undefined;
            resourceInputs["automationAccountId"] = state?.automationAccountId;
            resourceInputs["description"] = state?.description;
            resourceInputs["etag"] = state?.etag;
            resourceInputs["executionFrequencyInSeconds"] = state?.executionFrequencyInSeconds;
            resourceInputs["location"] = state?.location;
            resourceInputs["name"] = state?.name;
            resourceInputs["scriptName"] = state?.scriptName;
            resourceInputs["scriptParameters"] = state?.scriptParameters;
            resourceInputs["scriptRunOn"] = state?.scriptRunOn;
            resourceInputs["status"] = state?.status;
            resourceInputs["tags"] = state?.tags;
        } else {
            const args = argsOrState as WatcherArgs | undefined;
            if (args?.automationAccountId === undefined && !opts.urn) {
                throw new Error("Missing required property 'automationAccountId'");
            }
            if (args?.executionFrequencyInSeconds === undefined && !opts.urn) {
                throw new Error("Missing required property 'executionFrequencyInSeconds'");
            }
            if (args?.scriptName === undefined && !opts.urn) {
                throw new Error("Missing required property 'scriptName'");
            }
            if (args?.scriptRunOn === undefined && !opts.urn) {
                throw new Error("Missing required property 'scriptRunOn'");
            }
            resourceInputs["automationAccountId"] = args?.automationAccountId;
            resourceInputs["description"] = args?.description;
            resourceInputs["etag"] = args?.etag;
            resourceInputs["executionFrequencyInSeconds"] = args?.executionFrequencyInSeconds;
            resourceInputs["location"] = args?.location;
            resourceInputs["name"] = args?.name;
            resourceInputs["scriptName"] = args?.scriptName;
            resourceInputs["scriptParameters"] = args?.scriptParameters;
            resourceInputs["scriptRunOn"] = args?.scriptRunOn;
            resourceInputs["tags"] = args?.tags;
            resourceInputs["status"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Watcher.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Watcher resources.
 */
export interface WatcherState {
    /**
     * The ID of Automation Account to manage this Watcher. Changing this forces a new Watcher to be created.
     */
    automationAccountId?: pulumi.Input<string>;
    /**
     * A description of this Automation Watcher.
     */
    description?: pulumi.Input<string>;
    /**
     * A string of etag assigned to this Automation Watcher.
     */
    etag?: pulumi.Input<string>;
    /**
     * Specify the frequency at which the watcher is invoked.
     */
    executionFrequencyInSeconds?: pulumi.Input<number>;
    /**
     * The Azure Region where the Automation Watcher should exist. Changing this forces a new Automation Watcher to be created.
     */
    location?: pulumi.Input<string>;
    /**
     * The name which should be used for this Automation Watcher. Changing this forces a new Automation Watcher to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * Specify the name of an existing runbook this watcher is attached to. Changing this forces a new Automation to be created.
     */
    scriptName?: pulumi.Input<string>;
    /**
     * Specifies a list of key-vaule parameters. Changing this forces a new Automation watcher to be created.
     */
    scriptParameters?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Specify the name of the Hybrid work group the watcher will run on.
     */
    scriptRunOn?: pulumi.Input<string>;
    /**
     * The current status of the Automation Watcher.
     */
    status?: pulumi.Input<string>;
    /**
     * A mapping of tags which should be assigned to the Automation Watcher.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

/**
 * The set of arguments for constructing a Watcher resource.
 */
export interface WatcherArgs {
    /**
     * The ID of Automation Account to manage this Watcher. Changing this forces a new Watcher to be created.
     */
    automationAccountId: pulumi.Input<string>;
    /**
     * A description of this Automation Watcher.
     */
    description?: pulumi.Input<string>;
    /**
     * A string of etag assigned to this Automation Watcher.
     */
    etag?: pulumi.Input<string>;
    /**
     * Specify the frequency at which the watcher is invoked.
     */
    executionFrequencyInSeconds: pulumi.Input<number>;
    /**
     * The Azure Region where the Automation Watcher should exist. Changing this forces a new Automation Watcher to be created.
     */
    location?: pulumi.Input<string>;
    /**
     * The name which should be used for this Automation Watcher. Changing this forces a new Automation Watcher to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * Specify the name of an existing runbook this watcher is attached to. Changing this forces a new Automation to be created.
     */
    scriptName: pulumi.Input<string>;
    /**
     * Specifies a list of key-vaule parameters. Changing this forces a new Automation watcher to be created.
     */
    scriptParameters?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Specify the name of the Hybrid work group the watcher will run on.
     */
    scriptRunOn: pulumi.Input<string>;
    /**
     * A mapping of tags which should be assigned to the Automation Watcher.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
