// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Manages a Automation Powershell 7.2 Module.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const exampleResourceGroup = new azure.core.ResourceGroup("exampleResourceGroup", {location: "West Europe"});
 * const exampleAccount = new azure.automation.Account("exampleAccount", {
 *     location: exampleResourceGroup.location,
 *     resourceGroupName: exampleResourceGroup.name,
 *     skuName: "Basic",
 * });
 * const examplePowershell72Module = new azure.automation.Powershell72Module("examplePowershell72Module", {
 *     automationAccountId: exampleAccount.id,
 *     moduleLink: {
 *         uri: "https://devopsgallerystorage.blob.core.windows.net/packages/xactivedirectory.2.19.0.nupkg",
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * Automation Modules can be imported using the `resource id`, e.g.
 *
 * ```sh
 *  $ pulumi import azure:automation/powershell72Module:Powershell72Module module1 /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.Automation/automationAccounts/account1/powerShell72Modules/module1
 * ```
 */
export class Powershell72Module extends pulumi.CustomResource {
    /**
     * Get an existing Powershell72Module resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: Powershell72ModuleState, opts?: pulumi.CustomResourceOptions): Powershell72Module {
        return new Powershell72Module(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure:automation/powershell72Module:Powershell72Module';

    /**
     * Returns true if the given object is an instance of Powershell72Module.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Powershell72Module {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Powershell72Module.__pulumiType;
    }

    /**
     * The ID of Automation Account to manage this Watcher. Changing this forces a new Watcher to be created.
     */
    public readonly automationAccountId!: pulumi.Output<string>;
    /**
     * A `moduleLink` block as defined below.
     */
    public readonly moduleLink!: pulumi.Output<outputs.automation.Powershell72ModuleModuleLink>;
    /**
     * Specifies the name of the Module. Changing this forces a new resource to be created.
     */
    public readonly name!: pulumi.Output<string>;

    /**
     * Create a Powershell72Module resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: Powershell72ModuleArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: Powershell72ModuleArgs | Powershell72ModuleState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as Powershell72ModuleState | undefined;
            resourceInputs["automationAccountId"] = state ? state.automationAccountId : undefined;
            resourceInputs["moduleLink"] = state ? state.moduleLink : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
        } else {
            const args = argsOrState as Powershell72ModuleArgs | undefined;
            if ((!args || args.automationAccountId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'automationAccountId'");
            }
            if ((!args || args.moduleLink === undefined) && !opts.urn) {
                throw new Error("Missing required property 'moduleLink'");
            }
            resourceInputs["automationAccountId"] = args ? args.automationAccountId : undefined;
            resourceInputs["moduleLink"] = args ? args.moduleLink : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Powershell72Module.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Powershell72Module resources.
 */
export interface Powershell72ModuleState {
    /**
     * The ID of Automation Account to manage this Watcher. Changing this forces a new Watcher to be created.
     */
    automationAccountId?: pulumi.Input<string>;
    /**
     * A `moduleLink` block as defined below.
     */
    moduleLink?: pulumi.Input<inputs.automation.Powershell72ModuleModuleLink>;
    /**
     * Specifies the name of the Module. Changing this forces a new resource to be created.
     */
    name?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Powershell72Module resource.
 */
export interface Powershell72ModuleArgs {
    /**
     * The ID of Automation Account to manage this Watcher. Changing this forces a new Watcher to be created.
     */
    automationAccountId: pulumi.Input<string>;
    /**
     * A `moduleLink` block as defined below.
     */
    moduleLink: pulumi.Input<inputs.automation.Powershell72ModuleModuleLink>;
    /**
     * Specifies the name of the Module. Changing this forces a new resource to be created.
     */
    name?: pulumi.Input<string>;
}
