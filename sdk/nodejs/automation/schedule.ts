// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Manages a Automation Schedule.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = new azure.core.ResourceGroup("example", {
 *     name: "tfex-automation-account",
 *     location: "West Europe",
 * });
 * const exampleAccount = new azure.automation.Account("example", {
 *     name: "tfex-automation-account",
 *     location: example.location,
 *     resourceGroupName: example.name,
 *     skuName: "Basic",
 * });
 * const exampleSchedule = new azure.automation.Schedule("example", {
 *     name: "tfex-automation-schedule",
 *     resourceGroupName: example.name,
 *     automationAccountName: exampleAccount.name,
 *     frequency: "Week",
 *     interval: 1,
 *     timezone: "Australia/Perth",
 *     startTime: "2014-04-15T18:00:15+02:00",
 *     description: "This is an example schedule",
 *     weekDays: ["Friday"],
 * });
 * ```
 *
 * ## API Providers
 *
 * <!-- This section is generated, changes will be overwritten -->
 * This resource uses the following Azure API Providers:
 *
 * * `Microsoft.Automation` - 2023-11-01
 *
 * ## Import
 *
 * Automation Schedule can be imported using the `resource id`, e.g.
 *
 * ```sh
 * $ pulumi import azure:automation/schedule:Schedule schedule1 /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.Automation/automationAccounts/account1/schedules/schedule1
 * ```
 */
export class Schedule extends pulumi.CustomResource {
    /**
     * Get an existing Schedule resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ScheduleState, opts?: pulumi.CustomResourceOptions): Schedule {
        return new Schedule(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure:automation/schedule:Schedule';

    /**
     * Returns true if the given object is an instance of Schedule.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Schedule {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Schedule.__pulumiType;
    }

    /**
     * The name of the automation account in which the Schedule is created. Changing this forces a new resource to be created.
     */
    declare public readonly automationAccountName: pulumi.Output<string>;
    /**
     * A description for this Schedule.
     */
    declare public readonly description: pulumi.Output<string | undefined>;
    /**
     * The end time of the schedule.
     */
    declare public readonly expiryTime: pulumi.Output<string>;
    /**
     * The frequency of the schedule. - can be either `OneTime`, `Day`, `Hour`, `Week`, or `Month`.
     */
    declare public readonly frequency: pulumi.Output<string>;
    /**
     * The number of `frequency`s between runs. Only valid when frequency is `Day`, `Hour`, `Week`, or `Month` and defaults to `1`.
     */
    declare public readonly interval: pulumi.Output<number>;
    /**
     * List of days of the month that the job should execute on. Must be between `1` and `31`. `-1` for last day of the month. Only valid when frequency is `Month`.
     */
    declare public readonly monthDays: pulumi.Output<number[] | undefined>;
    /**
     * One `monthlyOccurrence` blocks as defined below to specifies occurrences of days within a month. Only valid when frequency is `Month`. The `monthlyOccurrence` block supports fields documented below.
     */
    declare public readonly monthlyOccurrence: pulumi.Output<outputs.automation.ScheduleMonthlyOccurrence | undefined>;
    /**
     * Specifies the name of the Schedule. Changing this forces a new resource to be created.
     */
    declare public readonly name: pulumi.Output<string>;
    /**
     * The name of the resource group in which the Schedule is created. Changing this forces a new resource to be created.
     */
    declare public readonly resourceGroupName: pulumi.Output<string>;
    /**
     * Start time of the schedule. Must be at least five minutes in the future. Defaults to seven minutes in the future from the time the resource is created.
     */
    declare public readonly startTime: pulumi.Output<string>;
    /**
     * The timezone of the start time. Defaults to `Etc/UTC`. For possible values see: <https://docs.microsoft.com/en-us/rest/api/maps/timezone/gettimezoneenumwindows>
     */
    declare public readonly timezone: pulumi.Output<string | undefined>;
    /**
     * List of days of the week that the job should execute on. Only valid when frequency is `Week`. Possible values are `Monday`, `Tuesday`, `Wednesday`, `Thursday`, `Friday`, `Saturday` and `Sunday`.
     */
    declare public readonly weekDays: pulumi.Output<string[] | undefined>;

    /**
     * Create a Schedule resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ScheduleArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ScheduleArgs | ScheduleState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ScheduleState | undefined;
            resourceInputs["automationAccountName"] = state?.automationAccountName;
            resourceInputs["description"] = state?.description;
            resourceInputs["expiryTime"] = state?.expiryTime;
            resourceInputs["frequency"] = state?.frequency;
            resourceInputs["interval"] = state?.interval;
            resourceInputs["monthDays"] = state?.monthDays;
            resourceInputs["monthlyOccurrence"] = state?.monthlyOccurrence;
            resourceInputs["name"] = state?.name;
            resourceInputs["resourceGroupName"] = state?.resourceGroupName;
            resourceInputs["startTime"] = state?.startTime;
            resourceInputs["timezone"] = state?.timezone;
            resourceInputs["weekDays"] = state?.weekDays;
        } else {
            const args = argsOrState as ScheduleArgs | undefined;
            if (args?.automationAccountName === undefined && !opts.urn) {
                throw new Error("Missing required property 'automationAccountName'");
            }
            if (args?.frequency === undefined && !opts.urn) {
                throw new Error("Missing required property 'frequency'");
            }
            if (args?.resourceGroupName === undefined && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            resourceInputs["automationAccountName"] = args?.automationAccountName;
            resourceInputs["description"] = args?.description;
            resourceInputs["expiryTime"] = args?.expiryTime;
            resourceInputs["frequency"] = args?.frequency;
            resourceInputs["interval"] = args?.interval;
            resourceInputs["monthDays"] = args?.monthDays;
            resourceInputs["monthlyOccurrence"] = args?.monthlyOccurrence;
            resourceInputs["name"] = args?.name;
            resourceInputs["resourceGroupName"] = args?.resourceGroupName;
            resourceInputs["startTime"] = args?.startTime;
            resourceInputs["timezone"] = args?.timezone;
            resourceInputs["weekDays"] = args?.weekDays;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Schedule.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Schedule resources.
 */
export interface ScheduleState {
    /**
     * The name of the automation account in which the Schedule is created. Changing this forces a new resource to be created.
     */
    automationAccountName?: pulumi.Input<string>;
    /**
     * A description for this Schedule.
     */
    description?: pulumi.Input<string>;
    /**
     * The end time of the schedule.
     */
    expiryTime?: pulumi.Input<string>;
    /**
     * The frequency of the schedule. - can be either `OneTime`, `Day`, `Hour`, `Week`, or `Month`.
     */
    frequency?: pulumi.Input<string>;
    /**
     * The number of `frequency`s between runs. Only valid when frequency is `Day`, `Hour`, `Week`, or `Month` and defaults to `1`.
     */
    interval?: pulumi.Input<number>;
    /**
     * List of days of the month that the job should execute on. Must be between `1` and `31`. `-1` for last day of the month. Only valid when frequency is `Month`.
     */
    monthDays?: pulumi.Input<pulumi.Input<number>[]>;
    /**
     * One `monthlyOccurrence` blocks as defined below to specifies occurrences of days within a month. Only valid when frequency is `Month`. The `monthlyOccurrence` block supports fields documented below.
     */
    monthlyOccurrence?: pulumi.Input<inputs.automation.ScheduleMonthlyOccurrence>;
    /**
     * Specifies the name of the Schedule. Changing this forces a new resource to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * The name of the resource group in which the Schedule is created. Changing this forces a new resource to be created.
     */
    resourceGroupName?: pulumi.Input<string>;
    /**
     * Start time of the schedule. Must be at least five minutes in the future. Defaults to seven minutes in the future from the time the resource is created.
     */
    startTime?: pulumi.Input<string>;
    /**
     * The timezone of the start time. Defaults to `Etc/UTC`. For possible values see: <https://docs.microsoft.com/en-us/rest/api/maps/timezone/gettimezoneenumwindows>
     */
    timezone?: pulumi.Input<string>;
    /**
     * List of days of the week that the job should execute on. Only valid when frequency is `Week`. Possible values are `Monday`, `Tuesday`, `Wednesday`, `Thursday`, `Friday`, `Saturday` and `Sunday`.
     */
    weekDays?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * The set of arguments for constructing a Schedule resource.
 */
export interface ScheduleArgs {
    /**
     * The name of the automation account in which the Schedule is created. Changing this forces a new resource to be created.
     */
    automationAccountName: pulumi.Input<string>;
    /**
     * A description for this Schedule.
     */
    description?: pulumi.Input<string>;
    /**
     * The end time of the schedule.
     */
    expiryTime?: pulumi.Input<string>;
    /**
     * The frequency of the schedule. - can be either `OneTime`, `Day`, `Hour`, `Week`, or `Month`.
     */
    frequency: pulumi.Input<string>;
    /**
     * The number of `frequency`s between runs. Only valid when frequency is `Day`, `Hour`, `Week`, or `Month` and defaults to `1`.
     */
    interval?: pulumi.Input<number>;
    /**
     * List of days of the month that the job should execute on. Must be between `1` and `31`. `-1` for last day of the month. Only valid when frequency is `Month`.
     */
    monthDays?: pulumi.Input<pulumi.Input<number>[]>;
    /**
     * One `monthlyOccurrence` blocks as defined below to specifies occurrences of days within a month. Only valid when frequency is `Month`. The `monthlyOccurrence` block supports fields documented below.
     */
    monthlyOccurrence?: pulumi.Input<inputs.automation.ScheduleMonthlyOccurrence>;
    /**
     * Specifies the name of the Schedule. Changing this forces a new resource to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * The name of the resource group in which the Schedule is created. Changing this forces a new resource to be created.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * Start time of the schedule. Must be at least five minutes in the future. Defaults to seven minutes in the future from the time the resource is created.
     */
    startTime?: pulumi.Input<string>;
    /**
     * The timezone of the start time. Defaults to `Etc/UTC`. For possible values see: <https://docs.microsoft.com/en-us/rest/api/maps/timezone/gettimezoneenumwindows>
     */
    timezone?: pulumi.Input<string>;
    /**
     * List of days of the week that the job should execute on. Only valid when frequency is `Week`. Possible values are `Monday`, `Tuesday`, `Wednesday`, `Thursday`, `Friday`, `Saturday` and `Sunday`.
     */
    weekDays?: pulumi.Input<pulumi.Input<string>[]>;
}
