// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Use this data source to access information about an existing Batch pool
 * 
 * ## Example Usage
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 * 
 * const test = pulumi.output(azure.batch.getPool({
 *     accountName: "testbatchaccount",
 *     name: "testbatchpool",
 *     resourceGroupName: "test",
 * }));
 * ```
 *
 * > This content is derived from https://github.com/terraform-providers/terraform-provider-azurerm/blob/master/website/docs/d/batch_pool.html.markdown.
 */
export function getPool(args: GetPoolArgs, opts?: pulumi.InvokeOptions): Promise<GetPoolResult> & GetPoolResult {
    const promise: Promise<GetPoolResult> = pulumi.runtime.invoke("azure:batch/getPool:getPool", {
        "accountName": args.accountName,
        "certificates": args.certificates,
        "name": args.name,
        "resourceGroupName": args.resourceGroupName,
        "startTask": args.startTask,
    }, opts);

    return pulumi.utils.liftProperties(promise, opts);
}

/**
 * A collection of arguments for invoking getPool.
 */
export interface GetPoolArgs {
    readonly accountName: string;
    readonly certificates?: { id: string, storeLocation: string, storeName?: string, visibilities?: string[] }[];
    readonly name: string;
    readonly resourceGroupName: string;
    readonly startTask?: { commandLine: string, environment?: {[key: string]: any}, maxTaskRetryCount?: number, resourceFiles?: { autoStorageContainerName?: string, blobPrefix?: string, fileMode?: string, filePath?: string, httpUrl?: string, storageContainerUrl?: string }[], userIdentities?: { autoUsers?: { elevationLevel?: string, scope?: string }[], userName?: string }[], waitForSuccess?: boolean };
}

/**
 * A collection of values returned by getPool.
 */
export interface GetPoolResult {
    /**
     * The name of the Batch account.
     */
    readonly accountName: string;
    /**
     * A `auto_scale` block that describes the scale settings when using auto scale.
     */
    readonly autoScales: { evaluationInterval: string, formula: string }[];
    /**
     * One or more `certificate` blocks that describe the certificates installed on each compute node in the pool.
     */
    readonly certificates?: { id: string, storeLocation: string, storeName?: string, visibilities?: string[] }[];
    /**
     * The container configuration used in the pool's VMs.
     */
    readonly containerConfigurations: { type: string }[];
    readonly displayName: string;
    /**
     * A `fixed_scale` block that describes the scale settings when using fixed scale.
     */
    readonly fixedScales: { resizeTimeout: string, targetDedicatedNodes: number, targetLowPriorityNodes: number }[];
    /**
     * The maximum number of tasks that can run concurrently on a single compute node in the pool.
     */
    readonly maxTasksPerNode: number;
    /**
     * The name of the Batch pool.
     */
    readonly name: string;
    /**
     * The Sku of the node agents in the Batch pool.
     */
    readonly nodeAgentSkuId: string;
    readonly resourceGroupName: string;
    /**
     * A `start_task` block that describes the start task settings for the Batch pool.
     */
    readonly startTask?: { commandLine: string, environment?: {[key: string]: any}, maxTaskRetryCount?: number, resourceFiles: { autoStorageContainerName: string, blobPrefix: string, fileMode: string, filePath: string, httpUrl: string, storageContainerUrl: string }[], userIdentities: { autoUsers: { elevationLevel: string, scope: string }[], userName: string }[], waitForSuccess?: boolean };
    /**
     * The reference of the storage image used by the nodes in the Batch pool.
     */
    readonly storageImageReferences: { id: string, offer: string, publisher: string, sku: string, version: string }[];
    /**
     * The size of the VM created in the Batch pool.
     */
    readonly vmSize: string;
    /**
     * id is the provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
}
