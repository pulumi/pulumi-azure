// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Use this data source to access information about an existing Batch Account.
 */
export function getAccount(args: GetAccountArgs, opts?: pulumi.InvokeOptions): Promise<GetAccountResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azure:batch/getAccount:getAccount", {
        "encryption": args.encryption,
        "name": args.name,
        "resourceGroupName": args.resourceGroupName,
    }, opts);
}

/**
 * A collection of arguments for invoking getAccount.
 */
export interface GetAccountArgs {
    /**
     * The `encryption` block that describes the Azure KeyVault key reference used to encrypt data for the Azure Batch account.
     */
    encryption?: inputs.batch.GetAccountEncryption;
    /**
     * The name of the Batch account.
     */
    name: string;
    /**
     * The Name of the Resource Group where this Batch account exists.
     */
    resourceGroupName: string;
}

/**
 * A collection of values returned by getAccount.
 */
export interface GetAccountResult {
    /**
     * The account endpoint used to interact with the Batch service.
     */
    readonly accountEndpoint: string;
    /**
     * The `encryption` block that describes the Azure KeyVault key reference used to encrypt data for the Azure Batch account.
     */
    readonly encryption?: outputs.batch.GetAccountEncryption;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The `keyVaultReference` block that describes the Azure KeyVault reference to use when deploying the Azure Batch account using the `UserSubscription` pool allocation mode.
     */
    readonly keyVaultReferences: outputs.batch.GetAccountKeyVaultReference[];
    /**
     * The Azure Region in which this Batch account exists.
     */
    readonly location: string;
    /**
     * The Batch account name.
     */
    readonly name: string;
    /**
     * The pool allocation mode configured for this Batch account.
     */
    readonly poolAllocationMode: string;
    /**
     * The Batch account primary access key.
     */
    readonly primaryAccessKey: string;
    readonly resourceGroupName: string;
    /**
     * The Batch account secondary access key.
     */
    readonly secondaryAccessKey: string;
    /**
     * The ID of the Storage Account used for this Batch account.
     */
    readonly storageAccountId: string;
    /**
     * A map of tags assigned to the Batch account.
     */
    readonly tags: {[key: string]: string};
}
/**
 * Use this data source to access information about an existing Batch Account.
 */
export function getAccountOutput(args: GetAccountOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAccountResult> {
    return pulumi.output(args).apply((a: any) => getAccount(a, opts))
}

/**
 * A collection of arguments for invoking getAccount.
 */
export interface GetAccountOutputArgs {
    /**
     * The `encryption` block that describes the Azure KeyVault key reference used to encrypt data for the Azure Batch account.
     */
    encryption?: pulumi.Input<inputs.batch.GetAccountEncryptionArgs>;
    /**
     * The name of the Batch account.
     */
    name: pulumi.Input<string>;
    /**
     * The Name of the Resource Group where this Batch account exists.
     */
    resourceGroupName: pulumi.Input<string>;
}
