// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Manages a Batch Job.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const exampleResourceGroup = new azure.core.ResourceGroup("exampleResourceGroup", {location: "west europe"});
 * const exampleAccount = new azure.batch.Account("exampleAccount", {
 *     resourceGroupName: exampleResourceGroup.name,
 *     location: exampleResourceGroup.location,
 * });
 * const examplePool = new azure.batch.Pool("examplePool", {
 *     resourceGroupName: exampleResourceGroup.name,
 *     accountName: exampleAccount.name,
 *     nodeAgentSkuId: "batch.node.ubuntu 16.04",
 *     vmSize: "Standard_A1",
 *     fixedScale: {
 *         targetDedicatedNodes: 1,
 *     },
 *     storageImageReference: {
 *         publisher: "Canonical",
 *         offer: "0001-com-ubuntu-server-jammy",
 *         sku: "22_04-lts",
 *         version: "latest",
 *     },
 * });
 * const exampleJob = new azure.batch.Job("exampleJob", {batchPoolId: examplePool.id});
 * ```
 *
 * ## Import
 *
 * Batch Jobs can be imported using the `resource id`, e.g.
 *
 * ```sh
 *  $ pulumi import azure:batch/job:Job example /subscriptions/12345678-1234-9876-4563-123456789012/resourceGroups/resGroup1/providers/Microsoft.Batch/batchAccounts/account1/pools/pool1/jobs/job1
 * ```
 */
export class Job extends pulumi.CustomResource {
    /**
     * Get an existing Job resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: JobState, opts?: pulumi.CustomResourceOptions): Job {
        return new Job(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure:batch/job:Job';

    /**
     * Returns true if the given object is an instance of Job.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Job {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Job.__pulumiType;
    }

    /**
     * The ID of the Batch Pool. Changing this forces a new Batch Job to be created.
     */
    public readonly batchPoolId!: pulumi.Output<string>;
    /**
     * Specifies a map of common environment settings applied to this Batch Job. Changing this forces a new Batch Job to be created.
     */
    public readonly commonEnvironmentProperties!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * The display name of this Batch Job. Changing this forces a new Batch Job to be created.
     */
    public readonly displayName!: pulumi.Output<string | undefined>;
    /**
     * The name which should be used for this Batch Job. Changing this forces a new Batch Job to be created.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The priority of this Batch Job, possible values can range from -1000 (lowest) to 1000 (highest). Defaults to `0`.
     */
    public readonly priority!: pulumi.Output<number | undefined>;
    /**
     * The number of retries to each Batch Task belongs to this Batch Job. If this is set to `0`, the Batch service does not retry Tasks. If this is set to `-1`, the Batch service retries Batch Tasks without limit.
     */
    public readonly taskRetryMaximum!: pulumi.Output<number | undefined>;

    /**
     * Create a Job resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: JobArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: JobArgs | JobState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as JobState | undefined;
            resourceInputs["batchPoolId"] = state ? state.batchPoolId : undefined;
            resourceInputs["commonEnvironmentProperties"] = state ? state.commonEnvironmentProperties : undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["priority"] = state ? state.priority : undefined;
            resourceInputs["taskRetryMaximum"] = state ? state.taskRetryMaximum : undefined;
        } else {
            const args = argsOrState as JobArgs | undefined;
            if ((!args || args.batchPoolId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'batchPoolId'");
            }
            resourceInputs["batchPoolId"] = args ? args.batchPoolId : undefined;
            resourceInputs["commonEnvironmentProperties"] = args ? args.commonEnvironmentProperties : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["priority"] = args ? args.priority : undefined;
            resourceInputs["taskRetryMaximum"] = args ? args.taskRetryMaximum : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Job.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Job resources.
 */
export interface JobState {
    /**
     * The ID of the Batch Pool. Changing this forces a new Batch Job to be created.
     */
    batchPoolId?: pulumi.Input<string>;
    /**
     * Specifies a map of common environment settings applied to this Batch Job. Changing this forces a new Batch Job to be created.
     */
    commonEnvironmentProperties?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The display name of this Batch Job. Changing this forces a new Batch Job to be created.
     */
    displayName?: pulumi.Input<string>;
    /**
     * The name which should be used for this Batch Job. Changing this forces a new Batch Job to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * The priority of this Batch Job, possible values can range from -1000 (lowest) to 1000 (highest). Defaults to `0`.
     */
    priority?: pulumi.Input<number>;
    /**
     * The number of retries to each Batch Task belongs to this Batch Job. If this is set to `0`, the Batch service does not retry Tasks. If this is set to `-1`, the Batch service retries Batch Tasks without limit.
     */
    taskRetryMaximum?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a Job resource.
 */
export interface JobArgs {
    /**
     * The ID of the Batch Pool. Changing this forces a new Batch Job to be created.
     */
    batchPoolId: pulumi.Input<string>;
    /**
     * Specifies a map of common environment settings applied to this Batch Job. Changing this forces a new Batch Job to be created.
     */
    commonEnvironmentProperties?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The display name of this Batch Job. Changing this forces a new Batch Job to be created.
     */
    displayName?: pulumi.Input<string>;
    /**
     * The name which should be used for this Batch Job. Changing this forces a new Batch Job to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * The priority of this Batch Job, possible values can range from -1000 (lowest) to 1000 (highest). Defaults to `0`.
     */
    priority?: pulumi.Input<number>;
    /**
     * The number of retries to each Batch Task belongs to this Batch Job. If this is set to `0`, the Batch service does not retry Tasks. If this is set to `-1`, the Batch service retries Batch Tasks without limit.
     */
    taskRetryMaximum?: pulumi.Input<number>;
}
