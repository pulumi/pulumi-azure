// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * Gets information about an Active Directory Domain Service.
 *
 * > **Supported Modes:** At present this data source only supports **User Forest** mode and _not_ **Resource Forest** mode. [Read more](https://docs.microsoft.com/azure/active-directory-domain-services/concepts-resource-forest) about the different operation modes for this service.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = pulumi.output(azure.domainservices.getService({
 *     name: "example-aadds",
 *     resourceGroupName: "example-aadds-rg",
 * }));
 * ```
 */
export function getService(args: GetServiceArgs, opts?: pulumi.InvokeOptions): Promise<GetServiceResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("azure:domainservices/getService:getService", {
        "name": args.name,
        "resourceGroupName": args.resourceGroupName,
        "tags": args.tags,
    }, opts);
}

/**
 * A collection of arguments for invoking getService.
 */
export interface GetServiceArgs {
    /**
     * The display name for your managed Active Directory Domain Service resource. Changing this forces a new resource to be created.
     */
    name: string;
    /**
     * The name of the Resource Group in which the Domain Service should exist. Changing this forces a new resource to be created.
     */
    resourceGroupName: string;
    /**
     * A mapping of tags assigned to the resource.
     */
    tags?: {[key: string]: string};
}

/**
 * A collection of values returned by getService.
 */
export interface GetServiceResult {
    /**
     * A unique ID for the managed domain deployment.
     */
    readonly deploymentId: string;
    /**
     * The forest type used by the managed domain. One of `ResourceTrusting`, for a _Resource Forest_, or blank, for a _User Forest_.
     */
    readonly domainConfigurationType: string;
    /**
     * The Active Directory domain of the Domain Service. See [official documentation](https://docs.microsoft.com/azure/active-directory-domain-services/tutorial-create-instance#create-a-managed-domain) for constraints and recommendations.
     */
    readonly domainName: string;
    /**
     * Whether group-based filtered sync (also called scoped synchronisation) is enabled.
     */
    readonly filteredSyncEnabled: boolean;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The Azure location in which the replica set resides.
     */
    readonly location: string;
    readonly name: string;
    /**
     * A `notifications` block as defined below.
     */
    readonly notifications: outputs.domainservices.GetServiceNotification[];
    /**
     * One or more `replicaSet` blocks as defined below.
     */
    readonly replicaSets: outputs.domainservices.GetServiceReplicaSet[];
    readonly resourceGroupName: string;
    readonly resourceId: string;
    /**
     * A `secureLdap` block as defined below.
     */
    readonly secureLdaps: outputs.domainservices.GetServiceSecureLdap[];
    /**
     * A `security` block as defined below.
     */
    readonly securities: outputs.domainservices.GetServiceSecurity[];
    /**
     * The SKU of the Domain Service resource. One of `Standard`, `Enterprise` or `Premium`.
     */
    readonly sku: string;
    readonly syncOwner: string;
    /**
     * A mapping of tags assigned to the resource.
     */
    readonly tags?: {[key: string]: string};
    readonly tenantId: string;
    readonly version: number;
}

export function getServiceOutput(args: GetServiceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetServiceResult> {
    return pulumi.output(args).apply(a => getService(a, opts))
}

/**
 * A collection of arguments for invoking getService.
 */
export interface GetServiceOutputArgs {
    /**
     * The display name for your managed Active Directory Domain Service resource. Changing this forces a new resource to be created.
     */
    name: pulumi.Input<string>;
    /**
     * The name of the Resource Group in which the Domain Service should exist. Changing this forces a new resource to be created.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * A mapping of tags assigned to the resource.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
