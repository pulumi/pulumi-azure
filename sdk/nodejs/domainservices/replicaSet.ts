// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Manages a Replica Set for an Active Directory Domain Service.
 *
 * ## Import
 *
 * Domain Service Replica Sets can be imported using the resource ID of the parent Domain Service and the Replica Set ID, e.g.
 *
 * ```sh
 *  $ pulumi import azure:domainservices/replicaSet:ReplicaSet example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/mygroup1/providers/Microsoft.AAD/domainServices/instance1/replicaSets/00000000-0000-0000-0000-000000000000
 * ```
 */
export class ReplicaSet extends pulumi.CustomResource {
    /**
     * Get an existing ReplicaSet resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ReplicaSetState, opts?: pulumi.CustomResourceOptions): ReplicaSet {
        return new ReplicaSet(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure:domainservices/replicaSet:ReplicaSet';

    /**
     * Returns true if the given object is an instance of ReplicaSet.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ReplicaSet {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ReplicaSet.__pulumiType;
    }

    /**
     * A list of subnet IP addresses for the domain controllers in this Replica Set, typically two.
     */
    public /*out*/ readonly domainControllerIpAddresses!: pulumi.Output<string[]>;
    /**
     * The ID of the Domain Service for which to create this Replica Set. Changing this forces a new resource to be created.
     */
    public readonly domainServiceId!: pulumi.Output<string>;
    /**
     * The publicly routable IP address for the domain controllers in this Replica Set.
     */
    public /*out*/ readonly externalAccessIpAddress!: pulumi.Output<string>;
    /**
     * The Azure location where this Replica Set should exist. Changing this forces a new resource to be created.
     */
    public readonly location!: pulumi.Output<string>;
    /**
     * The current service status for the replica set.
     */
    public /*out*/ readonly serviceStatus!: pulumi.Output<string>;
    /**
     * The ID of the subnet in which to place this Replica Set.
     */
    public readonly subnetId!: pulumi.Output<string>;

    /**
     * Create a ReplicaSet resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ReplicaSetArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ReplicaSetArgs | ReplicaSetState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ReplicaSetState | undefined;
            inputs["domainControllerIpAddresses"] = state ? state.domainControllerIpAddresses : undefined;
            inputs["domainServiceId"] = state ? state.domainServiceId : undefined;
            inputs["externalAccessIpAddress"] = state ? state.externalAccessIpAddress : undefined;
            inputs["location"] = state ? state.location : undefined;
            inputs["serviceStatus"] = state ? state.serviceStatus : undefined;
            inputs["subnetId"] = state ? state.subnetId : undefined;
        } else {
            const args = argsOrState as ReplicaSetArgs | undefined;
            if ((!args || args.domainServiceId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'domainServiceId'");
            }
            if ((!args || args.subnetId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'subnetId'");
            }
            inputs["domainServiceId"] = args ? args.domainServiceId : undefined;
            inputs["location"] = args ? args.location : undefined;
            inputs["subnetId"] = args ? args.subnetId : undefined;
            inputs["domainControllerIpAddresses"] = undefined /*out*/;
            inputs["externalAccessIpAddress"] = undefined /*out*/;
            inputs["serviceStatus"] = undefined /*out*/;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        super(ReplicaSet.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ReplicaSet resources.
 */
export interface ReplicaSetState {
    /**
     * A list of subnet IP addresses for the domain controllers in this Replica Set, typically two.
     */
    domainControllerIpAddresses?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The ID of the Domain Service for which to create this Replica Set. Changing this forces a new resource to be created.
     */
    domainServiceId?: pulumi.Input<string>;
    /**
     * The publicly routable IP address for the domain controllers in this Replica Set.
     */
    externalAccessIpAddress?: pulumi.Input<string>;
    /**
     * The Azure location where this Replica Set should exist. Changing this forces a new resource to be created.
     */
    location?: pulumi.Input<string>;
    /**
     * The current service status for the replica set.
     */
    serviceStatus?: pulumi.Input<string>;
    /**
     * The ID of the subnet in which to place this Replica Set.
     */
    subnetId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ReplicaSet resource.
 */
export interface ReplicaSetArgs {
    /**
     * The ID of the Domain Service for which to create this Replica Set. Changing this forces a new resource to be created.
     */
    domainServiceId: pulumi.Input<string>;
    /**
     * The Azure location where this Replica Set should exist. Changing this forces a new resource to be created.
     */
    location?: pulumi.Input<string>;
    /**
     * The ID of the subnet in which to place this Replica Set.
     */
    subnetId: pulumi.Input<string>;
}
