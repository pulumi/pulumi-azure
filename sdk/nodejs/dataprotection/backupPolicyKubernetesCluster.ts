// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Manages a Backup Policy to back up Kubernetes Cluster.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = new azure.core/resourceGroup.ResourceGroup("example", {
 *     name: "example-resources",
 *     location: "West Europe",
 * });
 * const exampleBackupVault = new azure.dataprotection/backupVault.BackupVault("example", {
 *     name: "example-backup-vault",
 *     resourceGroupName: example.name,
 *     location: example.location,
 *     datastoreType: "VaultStore",
 *     redundancy: "LocallyRedundant",
 * });
 * const exampleBackupPolicyKubernetesCluster = new azure.dataprotection/backupPolicyKubernetesCluster.BackupPolicyKubernetesCluster("example", {
 *     name: "example-backup-policy",
 *     resourceGroupName: example.name,
 *     vaultName: exampleBackupVault.name,
 *     backupRepeatingTimeIntervals: ["R/2021-05-23T02:30:00+00:00/P1W"],
 *     timeZone: "India Standard Time",
 *     defaultRetentionDuration: "P4M",
 *     retentionRules: [{
 *         name: "Daily",
 *         priority: 25,
 *         lifeCycles: [{
 *             duration: "P84D",
 *             dataStoreType: "OperationalStore",
 *         }],
 *         criteria: {
 *             absoluteCriteria: "FirstOfDay",
 *         },
 *     }],
 *     defaultRetentionRule: {
 *         lifeCycles: [{
 *             duration: "P7D",
 *             dataStoreType: "OperationalStore",
 *         }],
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * Backup Policy Kubernetes Cluster's can be imported using the `resource id`, e.g.
 *
 * ```sh
 * $ pulumi import azure:dataprotection/backupPolicyKubernetesCluster:BackupPolicyKubernetesCluster example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.DataProtection/backupVaults/vault1/backupPolicies/backupPolicy1
 * ```
 */
export class BackupPolicyKubernetesCluster extends pulumi.CustomResource {
    /**
     * Get an existing BackupPolicyKubernetesCluster resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: BackupPolicyKubernetesClusterState, opts?: pulumi.CustomResourceOptions): BackupPolicyKubernetesCluster {
        return new BackupPolicyKubernetesCluster(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure:dataprotection/backupPolicyKubernetesCluster:BackupPolicyKubernetesCluster';

    /**
     * Returns true if the given object is an instance of BackupPolicyKubernetesCluster.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is BackupPolicyKubernetesCluster {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === BackupPolicyKubernetesCluster.__pulumiType;
    }

    /**
     * Specifies a list of repeating time interval. It supports weekly back. It should follow `ISO 8601` repeating time interval. Changing this forces a new resource to be created.
     */
    public readonly backupRepeatingTimeIntervals!: pulumi.Output<string[]>;
    /**
     * A `defaultRetentionRule` block as defined below. Changing this forces a new resource to be created.
     */
    public readonly defaultRetentionRule!: pulumi.Output<outputs.dataprotection.BackupPolicyKubernetesClusterDefaultRetentionRule>;
    /**
     * The name which should be used for the Backup Policy Kubernetes Cluster. Changing this forces a new resource to be created.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The name of the Resource Group where the Backup Policy Kubernetes Cluster should exist. Changing this forces a new resource to be created.
     */
    public readonly resourceGroupName!: pulumi.Output<string>;
    /**
     * One or more `retentionRule` blocks as defined below. Changing this forces a new resource to be created.
     */
    public readonly retentionRules!: pulumi.Output<outputs.dataprotection.BackupPolicyKubernetesClusterRetentionRule[] | undefined>;
    /**
     * Specifies the Time Zone which should be used by the backup schedule. Changing this forces a new resource to be created.
     */
    public readonly timeZone!: pulumi.Output<string | undefined>;
    /**
     * The name of the Backup Vault where the Backup Policy Kubernetes Cluster should exist. Changing this forces a new resource to be created.
     */
    public readonly vaultName!: pulumi.Output<string>;

    /**
     * Create a BackupPolicyKubernetesCluster resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: BackupPolicyKubernetesClusterArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: BackupPolicyKubernetesClusterArgs | BackupPolicyKubernetesClusterState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as BackupPolicyKubernetesClusterState | undefined;
            resourceInputs["backupRepeatingTimeIntervals"] = state ? state.backupRepeatingTimeIntervals : undefined;
            resourceInputs["defaultRetentionRule"] = state ? state.defaultRetentionRule : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["resourceGroupName"] = state ? state.resourceGroupName : undefined;
            resourceInputs["retentionRules"] = state ? state.retentionRules : undefined;
            resourceInputs["timeZone"] = state ? state.timeZone : undefined;
            resourceInputs["vaultName"] = state ? state.vaultName : undefined;
        } else {
            const args = argsOrState as BackupPolicyKubernetesClusterArgs | undefined;
            if ((!args || args.backupRepeatingTimeIntervals === undefined) && !opts.urn) {
                throw new Error("Missing required property 'backupRepeatingTimeIntervals'");
            }
            if ((!args || args.defaultRetentionRule === undefined) && !opts.urn) {
                throw new Error("Missing required property 'defaultRetentionRule'");
            }
            if ((!args || args.resourceGroupName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            if ((!args || args.vaultName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'vaultName'");
            }
            resourceInputs["backupRepeatingTimeIntervals"] = args ? args.backupRepeatingTimeIntervals : undefined;
            resourceInputs["defaultRetentionRule"] = args ? args.defaultRetentionRule : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            resourceInputs["retentionRules"] = args ? args.retentionRules : undefined;
            resourceInputs["timeZone"] = args ? args.timeZone : undefined;
            resourceInputs["vaultName"] = args ? args.vaultName : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(BackupPolicyKubernetesCluster.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering BackupPolicyKubernetesCluster resources.
 */
export interface BackupPolicyKubernetesClusterState {
    /**
     * Specifies a list of repeating time interval. It supports weekly back. It should follow `ISO 8601` repeating time interval. Changing this forces a new resource to be created.
     */
    backupRepeatingTimeIntervals?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A `defaultRetentionRule` block as defined below. Changing this forces a new resource to be created.
     */
    defaultRetentionRule?: pulumi.Input<inputs.dataprotection.BackupPolicyKubernetesClusterDefaultRetentionRule>;
    /**
     * The name which should be used for the Backup Policy Kubernetes Cluster. Changing this forces a new resource to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * The name of the Resource Group where the Backup Policy Kubernetes Cluster should exist. Changing this forces a new resource to be created.
     */
    resourceGroupName?: pulumi.Input<string>;
    /**
     * One or more `retentionRule` blocks as defined below. Changing this forces a new resource to be created.
     */
    retentionRules?: pulumi.Input<pulumi.Input<inputs.dataprotection.BackupPolicyKubernetesClusterRetentionRule>[]>;
    /**
     * Specifies the Time Zone which should be used by the backup schedule. Changing this forces a new resource to be created.
     */
    timeZone?: pulumi.Input<string>;
    /**
     * The name of the Backup Vault where the Backup Policy Kubernetes Cluster should exist. Changing this forces a new resource to be created.
     */
    vaultName?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a BackupPolicyKubernetesCluster resource.
 */
export interface BackupPolicyKubernetesClusterArgs {
    /**
     * Specifies a list of repeating time interval. It supports weekly back. It should follow `ISO 8601` repeating time interval. Changing this forces a new resource to be created.
     */
    backupRepeatingTimeIntervals: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A `defaultRetentionRule` block as defined below. Changing this forces a new resource to be created.
     */
    defaultRetentionRule: pulumi.Input<inputs.dataprotection.BackupPolicyKubernetesClusterDefaultRetentionRule>;
    /**
     * The name which should be used for the Backup Policy Kubernetes Cluster. Changing this forces a new resource to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * The name of the Resource Group where the Backup Policy Kubernetes Cluster should exist. Changing this forces a new resource to be created.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * One or more `retentionRule` blocks as defined below. Changing this forces a new resource to be created.
     */
    retentionRules?: pulumi.Input<pulumi.Input<inputs.dataprotection.BackupPolicyKubernetesClusterRetentionRule>[]>;
    /**
     * Specifies the Time Zone which should be used by the backup schedule. Changing this forces a new resource to be created.
     */
    timeZone?: pulumi.Input<string>;
    /**
     * The name of the Backup Vault where the Backup Policy Kubernetes Cluster should exist. Changing this forces a new resource to be created.
     */
    vaultName: pulumi.Input<string>;
}
