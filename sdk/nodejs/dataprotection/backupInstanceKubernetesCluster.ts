// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Manages a Backup Instance to back up a Kubernetes Cluster.
 *
 * ## Import
 *
 * Backup Instance Kubernetes Cluster can be imported using the `resource id`, e.g.
 *
 * ```sh
 * $ pulumi import azure:dataprotection/backupInstanceKubernetesCluster:BackupInstanceKubernetesCluster example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.DataProtection/backupVaults/vault1/backupInstances/backupInstance1
 * ```
 */
export class BackupInstanceKubernetesCluster extends pulumi.CustomResource {
    /**
     * Get an existing BackupInstanceKubernetesCluster resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: BackupInstanceKubernetesClusterState, opts?: pulumi.CustomResourceOptions): BackupInstanceKubernetesCluster {
        return new BackupInstanceKubernetesCluster(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure:dataprotection/backupInstanceKubernetesCluster:BackupInstanceKubernetesCluster';

    /**
     * Returns true if the given object is an instance of BackupInstanceKubernetesCluster.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is BackupInstanceKubernetesCluster {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === BackupInstanceKubernetesCluster.__pulumiType;
    }

    /**
     * A `backupDatasourceParameters` block as defined below.
     */
    public readonly backupDatasourceParameters!: pulumi.Output<outputs.dataprotection.BackupInstanceKubernetesClusterBackupDatasourceParameters | undefined>;
    /**
     * The ID of the Backup Policy. Changing this forces a new resource to be created.
     */
    public readonly backupPolicyId!: pulumi.Output<string>;
    /**
     * The ID of the Kubernetes Cluster. Changing this forces a new resource to be created.
     */
    public readonly kubernetesClusterId!: pulumi.Output<string>;
    /**
     * The location of the Backup Instance Kubernetes Cluster. Changing this forces a new resource to be created.
     */
    public readonly location!: pulumi.Output<string>;
    /**
     * The name which should be used for this Backup Instance Kubernetes Cluster. Changing this forces a new resource to be created.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The name of the Resource Group where snapshots are stored. Changing this forces a new resource to be created.
     */
    public readonly snapshotResourceGroupName!: pulumi.Output<string>;
    /**
     * The ID of the Backup Vault within which the Backup Instance Kubernetes Cluster should exist. Changing this forces a new resource to be created.
     */
    public readonly vaultId!: pulumi.Output<string>;

    /**
     * Create a BackupInstanceKubernetesCluster resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: BackupInstanceKubernetesClusterArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: BackupInstanceKubernetesClusterArgs | BackupInstanceKubernetesClusterState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as BackupInstanceKubernetesClusterState | undefined;
            resourceInputs["backupDatasourceParameters"] = state ? state.backupDatasourceParameters : undefined;
            resourceInputs["backupPolicyId"] = state ? state.backupPolicyId : undefined;
            resourceInputs["kubernetesClusterId"] = state ? state.kubernetesClusterId : undefined;
            resourceInputs["location"] = state ? state.location : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["snapshotResourceGroupName"] = state ? state.snapshotResourceGroupName : undefined;
            resourceInputs["vaultId"] = state ? state.vaultId : undefined;
        } else {
            const args = argsOrState as BackupInstanceKubernetesClusterArgs | undefined;
            if ((!args || args.backupPolicyId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'backupPolicyId'");
            }
            if ((!args || args.kubernetesClusterId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'kubernetesClusterId'");
            }
            if ((!args || args.snapshotResourceGroupName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'snapshotResourceGroupName'");
            }
            if ((!args || args.vaultId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'vaultId'");
            }
            resourceInputs["backupDatasourceParameters"] = args ? args.backupDatasourceParameters : undefined;
            resourceInputs["backupPolicyId"] = args ? args.backupPolicyId : undefined;
            resourceInputs["kubernetesClusterId"] = args ? args.kubernetesClusterId : undefined;
            resourceInputs["location"] = args ? args.location : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["snapshotResourceGroupName"] = args ? args.snapshotResourceGroupName : undefined;
            resourceInputs["vaultId"] = args ? args.vaultId : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(BackupInstanceKubernetesCluster.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering BackupInstanceKubernetesCluster resources.
 */
export interface BackupInstanceKubernetesClusterState {
    /**
     * A `backupDatasourceParameters` block as defined below.
     */
    backupDatasourceParameters?: pulumi.Input<inputs.dataprotection.BackupInstanceKubernetesClusterBackupDatasourceParameters>;
    /**
     * The ID of the Backup Policy. Changing this forces a new resource to be created.
     */
    backupPolicyId?: pulumi.Input<string>;
    /**
     * The ID of the Kubernetes Cluster. Changing this forces a new resource to be created.
     */
    kubernetesClusterId?: pulumi.Input<string>;
    /**
     * The location of the Backup Instance Kubernetes Cluster. Changing this forces a new resource to be created.
     */
    location?: pulumi.Input<string>;
    /**
     * The name which should be used for this Backup Instance Kubernetes Cluster. Changing this forces a new resource to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * The name of the Resource Group where snapshots are stored. Changing this forces a new resource to be created.
     */
    snapshotResourceGroupName?: pulumi.Input<string>;
    /**
     * The ID of the Backup Vault within which the Backup Instance Kubernetes Cluster should exist. Changing this forces a new resource to be created.
     */
    vaultId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a BackupInstanceKubernetesCluster resource.
 */
export interface BackupInstanceKubernetesClusterArgs {
    /**
     * A `backupDatasourceParameters` block as defined below.
     */
    backupDatasourceParameters?: pulumi.Input<inputs.dataprotection.BackupInstanceKubernetesClusterBackupDatasourceParameters>;
    /**
     * The ID of the Backup Policy. Changing this forces a new resource to be created.
     */
    backupPolicyId: pulumi.Input<string>;
    /**
     * The ID of the Kubernetes Cluster. Changing this forces a new resource to be created.
     */
    kubernetesClusterId: pulumi.Input<string>;
    /**
     * The location of the Backup Instance Kubernetes Cluster. Changing this forces a new resource to be created.
     */
    location?: pulumi.Input<string>;
    /**
     * The name which should be used for this Backup Instance Kubernetes Cluster. Changing this forces a new resource to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * The name of the Resource Group where snapshots are stored. Changing this forces a new resource to be created.
     */
    snapshotResourceGroupName: pulumi.Input<string>;
    /**
     * The ID of the Backup Vault within which the Backup Instance Kubernetes Cluster should exist. Changing this forces a new resource to be created.
     */
    vaultId: pulumi.Input<string>;
}
