// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Gets information about an existing Private DNS Resolver Inbound Endpoint.
 */
export function getResolverInboundEndpoint(args: GetResolverInboundEndpointArgs, opts?: pulumi.InvokeOptions): Promise<GetResolverInboundEndpointResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azure:privatedns/getResolverInboundEndpoint:getResolverInboundEndpoint", {
        "name": args.name,
        "privateDnsResolverId": args.privateDnsResolverId,
    }, opts);
}

/**
 * A collection of arguments for invoking getResolverInboundEndpoint.
 */
export interface GetResolverInboundEndpointArgs {
    /**
     * Name of the Private DNS Resolver Inbound Endpoint.
     */
    name: string;
    /**
     * ID of the Private DNS Resolver.
     */
    privateDnsResolverId: string;
}

/**
 * A collection of values returned by getResolverInboundEndpoint.
 */
export interface GetResolverInboundEndpointResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * A list of `ipConfigurations` block as defined below.
     */
    readonly ipConfigurations: outputs.privatedns.GetResolverInboundEndpointIpConfiguration[];
    /**
     * The Azure Region where the Private DNS Resolver Inbound Endpoint exists.
     */
    readonly location: string;
    readonly name: string;
    readonly privateDnsResolverId: string;
    /**
     * The tags assigned to the Private DNS Resolver Inbound Endpoint.
     */
    readonly tags: {[key: string]: string};
}
/**
 * Gets information about an existing Private DNS Resolver Inbound Endpoint.
 */
export function getResolverInboundEndpointOutput(args: GetResolverInboundEndpointOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetResolverInboundEndpointResult> {
    return pulumi.output(args).apply((a: any) => getResolverInboundEndpoint(a, opts))
}

/**
 * A collection of arguments for invoking getResolverInboundEndpoint.
 */
export interface GetResolverInboundEndpointOutputArgs {
    /**
     * Name of the Private DNS Resolver Inbound Endpoint.
     */
    name: pulumi.Input<string>;
    /**
     * ID of the Private DNS Resolver.
     */
    privateDnsResolverId: pulumi.Input<string>;
}
