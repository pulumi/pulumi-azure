// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Manages a Private DNS Resolver Inbound Endpoint.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const exampleResourceGroup = new azure.core.ResourceGroup("exampleResourceGroup", {location: "West Europe"});
 * const exampleVirtualNetwork = new azure.network.VirtualNetwork("exampleVirtualNetwork", {
 *     resourceGroupName: exampleResourceGroup.name,
 *     location: exampleResourceGroup.location,
 *     addressSpaces: ["10.0.0.0/16"],
 * });
 * const test = new azure.privatedns.Resolver("test", {
 *     resourceGroupName: exampleResourceGroup.name,
 *     location: exampleResourceGroup.location,
 *     virtualNetworkId: exampleVirtualNetwork.id,
 * });
 * const exampleSubnet = new azure.network.Subnet("exampleSubnet", {
 *     resourceGroupName: azurerm_resource_group.test.name,
 *     virtualNetworkName: azurerm_virtual_network.test.name,
 *     addressPrefixes: ["10.0.0.0/28"],
 *     delegations: [{
 *         name: "Microsoft.Network.dnsResolvers",
 *         serviceDelegation: {
 *             actions: ["Microsoft.Network/virtualNetworks/subnets/join/action"],
 *             name: "Microsoft.Network/dnsResolvers",
 *         },
 *     }],
 * });
 * const exampleResolverInboundEndpoint = new azure.privatedns.ResolverInboundEndpoint("exampleResolverInboundEndpoint", {
 *     privateDnsResolverId: azurerm_private_dns_resolver.example.id,
 *     location: azurerm_private_dns_resolver.example.location,
 *     ipConfigurations: [{
 *         privateIpAllocationMethod: "Dynamic",
 *         subnetId: exampleSubnet.id,
 *     }],
 *     tags: {
 *         key: "value",
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * Private DNS Resolver Inbound Endpoint can be imported using the `resource id`, e.g.
 *
 * ```sh
 *  $ pulumi import azure:privatedns/resolverInboundEndpoint:ResolverInboundEndpoint example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resourceGroup1/providers/Microsoft.Network/dnsResolvers/dnsResolver1/inboundEndpoints/inboundEndpoint1
 * ```
 */
export class ResolverInboundEndpoint extends pulumi.CustomResource {
    /**
     * Get an existing ResolverInboundEndpoint resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ResolverInboundEndpointState, opts?: pulumi.CustomResourceOptions): ResolverInboundEndpoint {
        return new ResolverInboundEndpoint(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure:privatedns/resolverInboundEndpoint:ResolverInboundEndpoint';

    /**
     * Returns true if the given object is an instance of ResolverInboundEndpoint.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ResolverInboundEndpoint {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ResolverInboundEndpoint.__pulumiType;
    }

    /**
     * Can be specified multiple times to define multiple IP configurations. Each `ipConfigurations` block as defined below.
     */
    public readonly ipConfigurations!: pulumi.Output<outputs.privatedns.ResolverInboundEndpointIpConfiguration[]>;
    /**
     * Specifies the Azure Region where the Private DNS Resolver Inbound Endpoint should exist. Changing this forces a new Private DNS Resolver Inbound Endpoint to be created.
     */
    public readonly location!: pulumi.Output<string>;
    /**
     * Specifies the name which should be used for this Private DNS Resolver Inbound Endpoint. Changing this forces a new Private DNS Resolver Inbound Endpoint to be created.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Specifies the ID of the Private DNS Resolver Inbound Endpoint. Changing this forces a new Private DNS Resolver Inbound Endpoint to be created.
     */
    public readonly privateDnsResolverId!: pulumi.Output<string>;
    /**
     * A mapping of tags which should be assigned to the Private DNS Resolver Inbound Endpoint.
     */
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;

    /**
     * Create a ResolverInboundEndpoint resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ResolverInboundEndpointArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ResolverInboundEndpointArgs | ResolverInboundEndpointState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ResolverInboundEndpointState | undefined;
            resourceInputs["ipConfigurations"] = state ? state.ipConfigurations : undefined;
            resourceInputs["location"] = state ? state.location : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["privateDnsResolverId"] = state ? state.privateDnsResolverId : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
        } else {
            const args = argsOrState as ResolverInboundEndpointArgs | undefined;
            if ((!args || args.ipConfigurations === undefined) && !opts.urn) {
                throw new Error("Missing required property 'ipConfigurations'");
            }
            if ((!args || args.privateDnsResolverId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'privateDnsResolverId'");
            }
            resourceInputs["ipConfigurations"] = args ? args.ipConfigurations : undefined;
            resourceInputs["location"] = args ? args.location : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["privateDnsResolverId"] = args ? args.privateDnsResolverId : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ResolverInboundEndpoint.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ResolverInboundEndpoint resources.
 */
export interface ResolverInboundEndpointState {
    /**
     * Can be specified multiple times to define multiple IP configurations. Each `ipConfigurations` block as defined below.
     */
    ipConfigurations?: pulumi.Input<pulumi.Input<inputs.privatedns.ResolverInboundEndpointIpConfiguration>[]>;
    /**
     * Specifies the Azure Region where the Private DNS Resolver Inbound Endpoint should exist. Changing this forces a new Private DNS Resolver Inbound Endpoint to be created.
     */
    location?: pulumi.Input<string>;
    /**
     * Specifies the name which should be used for this Private DNS Resolver Inbound Endpoint. Changing this forces a new Private DNS Resolver Inbound Endpoint to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * Specifies the ID of the Private DNS Resolver Inbound Endpoint. Changing this forces a new Private DNS Resolver Inbound Endpoint to be created.
     */
    privateDnsResolverId?: pulumi.Input<string>;
    /**
     * A mapping of tags which should be assigned to the Private DNS Resolver Inbound Endpoint.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

/**
 * The set of arguments for constructing a ResolverInboundEndpoint resource.
 */
export interface ResolverInboundEndpointArgs {
    /**
     * Can be specified multiple times to define multiple IP configurations. Each `ipConfigurations` block as defined below.
     */
    ipConfigurations: pulumi.Input<pulumi.Input<inputs.privatedns.ResolverInboundEndpointIpConfiguration>[]>;
    /**
     * Specifies the Azure Region where the Private DNS Resolver Inbound Endpoint should exist. Changing this forces a new Private DNS Resolver Inbound Endpoint to be created.
     */
    location?: pulumi.Input<string>;
    /**
     * Specifies the name which should be used for this Private DNS Resolver Inbound Endpoint. Changing this forces a new Private DNS Resolver Inbound Endpoint to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * Specifies the ID of the Private DNS Resolver Inbound Endpoint. Changing this forces a new Private DNS Resolver Inbound Endpoint to be created.
     */
    privateDnsResolverId: pulumi.Input<string>;
    /**
     * A mapping of tags which should be assigned to the Private DNS Resolver Inbound Endpoint.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
