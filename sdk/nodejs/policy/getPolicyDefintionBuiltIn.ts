// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Use this data source to access information about a Built-In Policy Definition. Retrieves Policy Definitions from your current subscription by default.
 */
export function getPolicyDefintionBuiltIn(args?: GetPolicyDefintionBuiltInArgs, opts?: pulumi.InvokeOptions): Promise<GetPolicyDefintionBuiltInResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azure:policy/getPolicyDefintionBuiltIn:getPolicyDefintionBuiltIn", {
        "displayName": args.displayName,
        "managementGroupName": args.managementGroupName,
        "name": args.name,
    }, opts);
}

/**
 * A collection of arguments for invoking getPolicyDefintionBuiltIn.
 */
export interface GetPolicyDefintionBuiltInArgs {
    /**
     * Specifies the display name of the Policy Definition. Conflicts with `name`.
     *
     * > **NOTE** As `displayName` is not unique errors may occur when there are multiple policy definitions with same display name.
     */
    displayName?: string;
    /**
     * Only retrieve Policy Definitions from this Management Group.
     */
    managementGroupName?: string;
    /**
     * Specifies the name of the Policy Definition. Conflicts with `displayName`.
     */
    name?: string;
}

/**
 * A collection of values returned by getPolicyDefintionBuiltIn.
 */
export interface GetPolicyDefintionBuiltInResult {
    /**
     * The Description of the Policy.
     */
    readonly description: string;
    readonly displayName: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly managementGroupName?: string;
    /**
     * Any Metadata defined in the Policy.
     */
    readonly metadata: string;
    /**
     * The Mode of the Policy.
     */
    readonly mode: string;
    readonly name: string;
    /**
     * Any Parameters defined in the Policy.
     */
    readonly parameters: string;
    /**
     * The Rule as defined (in JSON) in the Policy.
     */
    readonly policyRule: string;
    /**
     * The Type of the Policy. Possible values are `BuiltIn`, `Custom` and `NotSpecified`.
     */
    readonly policyType: string;
    /**
     * A list of role definition id extracted from `policyRule` required for remediation.
     */
    readonly roleDefinitionIds: string[];
    /**
     * The Type of Policy.
     */
    readonly type: string;
}
/**
 * Use this data source to access information about a Built-In Policy Definition. Retrieves Policy Definitions from your current subscription by default.
 */
export function getPolicyDefintionBuiltInOutput(args?: GetPolicyDefintionBuiltInOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetPolicyDefintionBuiltInResult> {
    return pulumi.output(args).apply((a: any) => getPolicyDefintionBuiltIn(a, opts))
}

/**
 * A collection of arguments for invoking getPolicyDefintionBuiltIn.
 */
export interface GetPolicyDefintionBuiltInOutputArgs {
    /**
     * Specifies the display name of the Policy Definition. Conflicts with `name`.
     *
     * > **NOTE** As `displayName` is not unique errors may occur when there are multiple policy definitions with same display name.
     */
    displayName?: pulumi.Input<string>;
    /**
     * Only retrieve Policy Definitions from this Management Group.
     */
    managementGroupName?: pulumi.Input<string>;
    /**
     * Specifies the name of the Policy Definition. Conflicts with `displayName`.
     */
    name?: pulumi.Input<string>;
}
