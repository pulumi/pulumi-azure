// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * Use this data source to access information about an existing Guest Configuration Policy.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = azure.policy.getVirtualMachineConfigurationAssignment({
 *     name: "AzureWindowsBaseline",
 *     resourceGroupName: "example-RG",
 *     virtualMachineName: "example-vm",
 * });
 * export const complianceStatus = example.then(example => example.complianceStatus);
 * ```
 */
export function getVirtualMachineConfigurationAssignment(args: GetVirtualMachineConfigurationAssignmentArgs, opts?: pulumi.InvokeOptions): Promise<GetVirtualMachineConfigurationAssignmentResult> {
    if (!opts) {
        opts = {}
    }

    if (!opts.version) {
        opts.version = utilities.getVersion();
    }
    return pulumi.runtime.invoke("azure:policy/getVirtualMachineConfigurationAssignment:getVirtualMachineConfigurationAssignment", {
        "name": args.name,
        "resourceGroupName": args.resourceGroupName,
        "virtualMachineName": args.virtualMachineName,
    }, opts);
}

/**
 * A collection of arguments for invoking getVirtualMachineConfigurationAssignment.
 */
export interface GetVirtualMachineConfigurationAssignmentArgs {
    /**
     * Specifies the name of the Guest Configuration Assignment.
     */
    name: string;
    /**
     * Specifies the Name of the Resource Group where the Guest Configuration Assignment exists.
     */
    resourceGroupName: string;
    /**
     * Only retrieve Policy Set Definitions from this Management Group.
     */
    virtualMachineName: string;
}

/**
 * A collection of values returned by getVirtualMachineConfigurationAssignment.
 */
export interface GetVirtualMachineConfigurationAssignmentResult {
    /**
     * Combined hash of the configuration package and parameters.
     */
    readonly assignmentHash: string;
    /**
     * A value indicating compliance status of the machine for the assigned guest configuration. Possible return values are `Compliant`, `NonCompliant` and `Pending`.
     */
    readonly complianceStatus: string;
    /**
     * The content hash for the Guest Configuration package.
     */
    readonly contentHash: string;
    /**
     * The content URI where the Guest Configuration package is stored.
     */
    readonly contentUri: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * Date and time, in RFC3339 format, when the machines compliance status was last checked.
     */
    readonly lastComplianceStatusChecked: string;
    /**
     * The ID of the latest report for the guest configuration assignment.
     */
    readonly latestReportId: string;
    readonly name: string;
    readonly resourceGroupName: string;
    readonly virtualMachineName: string;
}
