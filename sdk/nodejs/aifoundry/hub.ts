// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Manages an AI Foundry Hub.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const current = azure.core.getClientConfig({});
 * const example = new azure.core.ResourceGroup("example", {
 *     name: "example",
 *     location: "westeurope",
 * });
 * const exampleKeyVault = new azure.keyvault.KeyVault("example", {
 *     name: "examplekv",
 *     location: example.location,
 *     resourceGroupName: example.name,
 *     tenantId: current.then(current => current.tenantId),
 *     skuName: "standard",
 *     purgeProtectionEnabled: true,
 * });
 * const test = new azure.keyvault.AccessPolicy("test", {
 *     keyVaultId: exampleKeyVault.id,
 *     tenantId: current.then(current => current.tenantId),
 *     objectId: current.then(current => current.objectId),
 *     keyPermissions: [
 *         "Create",
 *         "Get",
 *         "Delete",
 *         "Purge",
 *         "GetRotationPolicy",
 *     ],
 * });
 * const exampleAccount = new azure.storage.Account("example", {
 *     name: "examplesa",
 *     location: example.location,
 *     resourceGroupName: example.name,
 *     accountTier: "Standard",
 *     accountReplicationType: "LRS",
 * });
 * const exampleAIServices = new azure.cognitive.AIServices("example", {
 *     name: "exampleaiservices",
 *     location: example.location,
 *     resourceGroupName: example.name,
 *     skuName: "S0",
 * });
 * const exampleHub = new azure.aifoundry.Hub("example", {
 *     name: "exampleaihub",
 *     location: exampleAIServices.location,
 *     resourceGroupName: example.name,
 *     storageAccountId: exampleAccount.id,
 *     keyVaultId: exampleKeyVault.id,
 *     identity: {
 *         type: "SystemAssigned",
 *     },
 * });
 * ```
 *
 * ## API Providers
 *
 * <!-- This section is generated, changes will be overwritten -->
 * This resource uses the following Azure API Providers:
 *
 * * `Microsoft.MachineLearningServices` - 2025-06-01
 *
 * ## Import
 *
 * AI Foundry Hubs can be imported using the `resource id`, e.g.
 *
 * ```sh
 * $ pulumi import azure:aifoundry/hub:Hub example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.MachineLearningServices/workspaces/hub1
 * ```
 */
export class Hub extends pulumi.CustomResource {
    /**
     * Get an existing Hub resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: HubState, opts?: pulumi.CustomResourceOptions): Hub {
        return new Hub(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure:aifoundry/hub:Hub';

    /**
     * Returns true if the given object is an instance of Hub.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Hub {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Hub.__pulumiType;
    }

    /**
     * The Application Insights ID that should be used by this AI Foundry Hub.
     */
    declare public readonly applicationInsightsId: pulumi.Output<string | undefined>;
    /**
     * The Container Registry ID that should be used by this AI Foundry Hub.
     */
    declare public readonly containerRegistryId: pulumi.Output<string | undefined>;
    /**
     * The description of this AI Foundry Hub.
     */
    declare public readonly description: pulumi.Output<string | undefined>;
    /**
     * The URL for the discovery service to identify regional endpoints for AI Foundry Hub services.
     */
    declare public /*out*/ readonly discoveryUrl: pulumi.Output<string>;
    /**
     * An `encryption` block as defined below. Changing this forces a new AI Foundry Hub to be created.
     */
    declare public readonly encryption: pulumi.Output<outputs.aifoundry.HubEncryption | undefined>;
    /**
     * The display name of this AI Foundry Hub.
     */
    declare public readonly friendlyName: pulumi.Output<string | undefined>;
    /**
     * Whether High Business Impact (HBI) should be enabled or not. Enabling this setting will reduce diagnostic data collected by the service. Changing this forces a new AI Foundry Hub to be created. Defaults to `false`.
     *
     * > **Note:** `highBusinessImpactEnabled` will be enabled by default when creating an AI Foundry Hub with `encryption` enabled.
     */
    declare public readonly highBusinessImpactEnabled: pulumi.Output<boolean>;
    /**
     * A `identity` block as defined below.
     */
    declare public readonly identity: pulumi.Output<outputs.aifoundry.HubIdentity>;
    /**
     * The Key Vault ID that should be used by this AI Foundry Hub. Changing this forces a new AI Foundry Hub to be created.
     */
    declare public readonly keyVaultId: pulumi.Output<string>;
    /**
     * The Azure Region where the AI Foundry Hub should exist. Changing this forces a new AI Foundry Hub to be created.
     */
    declare public readonly location: pulumi.Output<string>;
    /**
     * A `managedNetwork` block as defined below.
     */
    declare public readonly managedNetwork: pulumi.Output<outputs.aifoundry.HubManagedNetwork>;
    /**
     * The name which should be used for this AI Foundry Hub. Changing this forces a new AI Foundry Hub to be created.
     */
    declare public readonly name: pulumi.Output<string>;
    /**
     * The user assigned identity ID that represents the AI Foundry Hub identity. This must be set when enabling encryption with a user assigned identity.
     */
    declare public readonly primaryUserAssignedIdentity: pulumi.Output<string | undefined>;
    /**
     * Whether public network access for this AI Service Hub should be enabled. Possible values include `Enabled` and `Disabled`. Defaults to `Enabled`.
     */
    declare public readonly publicNetworkAccess: pulumi.Output<string | undefined>;
    /**
     * The name of the Resource Group where the AI Foundry Hub should exist. Changing this forces a new AI Foundry Hub to be created.
     */
    declare public readonly resourceGroupName: pulumi.Output<string>;
    /**
     * The Storage Account ID that should be used by this AI Foundry Hub. Changing this forces a new AI Foundry Hub to be created.
     */
    declare public readonly storageAccountId: pulumi.Output<string>;
    /**
     * A mapping of tags which should be assigned to the AI Foundry Hub.
     */
    declare public readonly tags: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * The immutable ID associated with this AI Foundry Hub.
     */
    declare public /*out*/ readonly workspaceId: pulumi.Output<string>;

    /**
     * Create a Hub resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: HubArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: HubArgs | HubState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as HubState | undefined;
            resourceInputs["applicationInsightsId"] = state?.applicationInsightsId;
            resourceInputs["containerRegistryId"] = state?.containerRegistryId;
            resourceInputs["description"] = state?.description;
            resourceInputs["discoveryUrl"] = state?.discoveryUrl;
            resourceInputs["encryption"] = state?.encryption;
            resourceInputs["friendlyName"] = state?.friendlyName;
            resourceInputs["highBusinessImpactEnabled"] = state?.highBusinessImpactEnabled;
            resourceInputs["identity"] = state?.identity;
            resourceInputs["keyVaultId"] = state?.keyVaultId;
            resourceInputs["location"] = state?.location;
            resourceInputs["managedNetwork"] = state?.managedNetwork;
            resourceInputs["name"] = state?.name;
            resourceInputs["primaryUserAssignedIdentity"] = state?.primaryUserAssignedIdentity;
            resourceInputs["publicNetworkAccess"] = state?.publicNetworkAccess;
            resourceInputs["resourceGroupName"] = state?.resourceGroupName;
            resourceInputs["storageAccountId"] = state?.storageAccountId;
            resourceInputs["tags"] = state?.tags;
            resourceInputs["workspaceId"] = state?.workspaceId;
        } else {
            const args = argsOrState as HubArgs | undefined;
            if (args?.identity === undefined && !opts.urn) {
                throw new Error("Missing required property 'identity'");
            }
            if (args?.keyVaultId === undefined && !opts.urn) {
                throw new Error("Missing required property 'keyVaultId'");
            }
            if (args?.resourceGroupName === undefined && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            if (args?.storageAccountId === undefined && !opts.urn) {
                throw new Error("Missing required property 'storageAccountId'");
            }
            resourceInputs["applicationInsightsId"] = args?.applicationInsightsId;
            resourceInputs["containerRegistryId"] = args?.containerRegistryId;
            resourceInputs["description"] = args?.description;
            resourceInputs["encryption"] = args?.encryption;
            resourceInputs["friendlyName"] = args?.friendlyName;
            resourceInputs["highBusinessImpactEnabled"] = args?.highBusinessImpactEnabled;
            resourceInputs["identity"] = args?.identity;
            resourceInputs["keyVaultId"] = args?.keyVaultId;
            resourceInputs["location"] = args?.location;
            resourceInputs["managedNetwork"] = args?.managedNetwork;
            resourceInputs["name"] = args?.name;
            resourceInputs["primaryUserAssignedIdentity"] = args?.primaryUserAssignedIdentity;
            resourceInputs["publicNetworkAccess"] = args?.publicNetworkAccess;
            resourceInputs["resourceGroupName"] = args?.resourceGroupName;
            resourceInputs["storageAccountId"] = args?.storageAccountId;
            resourceInputs["tags"] = args?.tags;
            resourceInputs["discoveryUrl"] = undefined /*out*/;
            resourceInputs["workspaceId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Hub.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Hub resources.
 */
export interface HubState {
    /**
     * The Application Insights ID that should be used by this AI Foundry Hub.
     */
    applicationInsightsId?: pulumi.Input<string>;
    /**
     * The Container Registry ID that should be used by this AI Foundry Hub.
     */
    containerRegistryId?: pulumi.Input<string>;
    /**
     * The description of this AI Foundry Hub.
     */
    description?: pulumi.Input<string>;
    /**
     * The URL for the discovery service to identify regional endpoints for AI Foundry Hub services.
     */
    discoveryUrl?: pulumi.Input<string>;
    /**
     * An `encryption` block as defined below. Changing this forces a new AI Foundry Hub to be created.
     */
    encryption?: pulumi.Input<inputs.aifoundry.HubEncryption>;
    /**
     * The display name of this AI Foundry Hub.
     */
    friendlyName?: pulumi.Input<string>;
    /**
     * Whether High Business Impact (HBI) should be enabled or not. Enabling this setting will reduce diagnostic data collected by the service. Changing this forces a new AI Foundry Hub to be created. Defaults to `false`.
     *
     * > **Note:** `highBusinessImpactEnabled` will be enabled by default when creating an AI Foundry Hub with `encryption` enabled.
     */
    highBusinessImpactEnabled?: pulumi.Input<boolean>;
    /**
     * A `identity` block as defined below.
     */
    identity?: pulumi.Input<inputs.aifoundry.HubIdentity>;
    /**
     * The Key Vault ID that should be used by this AI Foundry Hub. Changing this forces a new AI Foundry Hub to be created.
     */
    keyVaultId?: pulumi.Input<string>;
    /**
     * The Azure Region where the AI Foundry Hub should exist. Changing this forces a new AI Foundry Hub to be created.
     */
    location?: pulumi.Input<string>;
    /**
     * A `managedNetwork` block as defined below.
     */
    managedNetwork?: pulumi.Input<inputs.aifoundry.HubManagedNetwork>;
    /**
     * The name which should be used for this AI Foundry Hub. Changing this forces a new AI Foundry Hub to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * The user assigned identity ID that represents the AI Foundry Hub identity. This must be set when enabling encryption with a user assigned identity.
     */
    primaryUserAssignedIdentity?: pulumi.Input<string>;
    /**
     * Whether public network access for this AI Service Hub should be enabled. Possible values include `Enabled` and `Disabled`. Defaults to `Enabled`.
     */
    publicNetworkAccess?: pulumi.Input<string>;
    /**
     * The name of the Resource Group where the AI Foundry Hub should exist. Changing this forces a new AI Foundry Hub to be created.
     */
    resourceGroupName?: pulumi.Input<string>;
    /**
     * The Storage Account ID that should be used by this AI Foundry Hub. Changing this forces a new AI Foundry Hub to be created.
     */
    storageAccountId?: pulumi.Input<string>;
    /**
     * A mapping of tags which should be assigned to the AI Foundry Hub.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The immutable ID associated with this AI Foundry Hub.
     */
    workspaceId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Hub resource.
 */
export interface HubArgs {
    /**
     * The Application Insights ID that should be used by this AI Foundry Hub.
     */
    applicationInsightsId?: pulumi.Input<string>;
    /**
     * The Container Registry ID that should be used by this AI Foundry Hub.
     */
    containerRegistryId?: pulumi.Input<string>;
    /**
     * The description of this AI Foundry Hub.
     */
    description?: pulumi.Input<string>;
    /**
     * An `encryption` block as defined below. Changing this forces a new AI Foundry Hub to be created.
     */
    encryption?: pulumi.Input<inputs.aifoundry.HubEncryption>;
    /**
     * The display name of this AI Foundry Hub.
     */
    friendlyName?: pulumi.Input<string>;
    /**
     * Whether High Business Impact (HBI) should be enabled or not. Enabling this setting will reduce diagnostic data collected by the service. Changing this forces a new AI Foundry Hub to be created. Defaults to `false`.
     *
     * > **Note:** `highBusinessImpactEnabled` will be enabled by default when creating an AI Foundry Hub with `encryption` enabled.
     */
    highBusinessImpactEnabled?: pulumi.Input<boolean>;
    /**
     * A `identity` block as defined below.
     */
    identity: pulumi.Input<inputs.aifoundry.HubIdentity>;
    /**
     * The Key Vault ID that should be used by this AI Foundry Hub. Changing this forces a new AI Foundry Hub to be created.
     */
    keyVaultId: pulumi.Input<string>;
    /**
     * The Azure Region where the AI Foundry Hub should exist. Changing this forces a new AI Foundry Hub to be created.
     */
    location?: pulumi.Input<string>;
    /**
     * A `managedNetwork` block as defined below.
     */
    managedNetwork?: pulumi.Input<inputs.aifoundry.HubManagedNetwork>;
    /**
     * The name which should be used for this AI Foundry Hub. Changing this forces a new AI Foundry Hub to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * The user assigned identity ID that represents the AI Foundry Hub identity. This must be set when enabling encryption with a user assigned identity.
     */
    primaryUserAssignedIdentity?: pulumi.Input<string>;
    /**
     * Whether public network access for this AI Service Hub should be enabled. Possible values include `Enabled` and `Disabled`. Defaults to `Enabled`.
     */
    publicNetworkAccess?: pulumi.Input<string>;
    /**
     * The name of the Resource Group where the AI Foundry Hub should exist. Changing this forces a new AI Foundry Hub to be created.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * The Storage Account ID that should be used by this AI Foundry Hub. Changing this forces a new AI Foundry Hub to be created.
     */
    storageAccountId: pulumi.Input<string>;
    /**
     * A mapping of tags which should be assigned to the AI Foundry Hub.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
