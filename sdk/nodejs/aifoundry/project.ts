// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Manages an AI Foundry Project.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const current = azure.core.getClientConfig({});
 * const example = new azure.core.ResourceGroup("example", {
 *     name: "example",
 *     location: "westeurope",
 * });
 * const exampleKeyVault = new azure.keyvault.KeyVault("example", {
 *     name: "examplekv",
 *     location: example.location,
 *     resourceGroupName: example.name,
 *     tenantId: current.then(current => current.tenantId),
 *     skuName: "standard",
 *     purgeProtectionEnabled: true,
 * });
 * const test = new azure.keyvault.AccessPolicy("test", {
 *     keyVaultId: exampleKeyVault.id,
 *     tenantId: current.then(current => current.tenantId),
 *     objectId: current.then(current => current.objectId),
 *     keyPermissions: [
 *         "Create",
 *         "Get",
 *         "Delete",
 *         "Purge",
 *         "GetRotationPolicy",
 *     ],
 * });
 * const exampleAccount = new azure.storage.Account("example", {
 *     name: "examplesa",
 *     location: example.location,
 *     resourceGroupName: example.name,
 *     accountTier: "Standard",
 *     accountReplicationType: "LRS",
 * });
 * const exampleAIServices = new azure.cognitive.AIServices("example", {
 *     name: "exampleaiservices",
 *     location: example.location,
 *     resourceGroupName: example.name,
 *     skuName: "S0",
 * });
 * const exampleHub = new azure.aifoundry.Hub("example", {
 *     name: "exampleaihub",
 *     location: exampleAIServices.location,
 *     resourceGroupName: example.name,
 *     storageAccountId: exampleAccount.id,
 *     keyVaultId: exampleKeyVault.id,
 *     identity: {
 *         type: "SystemAssigned",
 *     },
 * });
 * const exampleProject = new azure.aifoundry.Project("example", {
 *     name: "example",
 *     location: exampleAzurermAiServicesHub.location,
 *     aiServicesHubId: exampleAzurermAiServicesHub.id,
 * });
 * ```
 *
 * ## Import
 *
 * AI Foundry Projects can be imported using the `resource id`, e.g.
 *
 * ```sh
 * $ pulumi import azure:aifoundry/project:Project example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.MachineLearningServices/workspaces/project1
 * ```
 */
export class Project extends pulumi.CustomResource {
    /**
     * Get an existing Project resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ProjectState, opts?: pulumi.CustomResourceOptions): Project {
        return new Project(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure:aifoundry/project:Project';

    /**
     * Returns true if the given object is an instance of Project.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Project {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Project.__pulumiType;
    }

    /**
     * The AI Services Hub ID under which this Project should be created. Changing this forces a new AI Foundry Project to be created.
     */
    public readonly aiServicesHubId!: pulumi.Output<string>;
    /**
     * The description of this AI Foundry Project.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * The display name of this AI Foundry Project.
     */
    public readonly friendlyName!: pulumi.Output<string | undefined>;
    /**
     * Whether High Business Impact (HBI) should be enabled or not. Enabling this setting will reduce diagnostic data collected by the service. Changing this forces a new AI Foundry Project to be created. Defaults to `false`.
     */
    public readonly highBusinessImpactEnabled!: pulumi.Output<boolean>;
    /**
     * A `identity` block as defined below.
     */
    public readonly identity!: pulumi.Output<outputs.aifoundry.ProjectIdentity | undefined>;
    /**
     * The Azure Region where the AI Foundry Project should exist. Changing this forces a new AI Foundry Project to be created.
     */
    public readonly location!: pulumi.Output<string>;
    /**
     * The name which should be used for this AI Foundry Project. Changing this forces a new AI Foundry Project to be created.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The immutable project ID associated with this AI Foundry Project.
     */
    public /*out*/ readonly projectId!: pulumi.Output<string>;
    /**
     * A mapping of tags which should be assigned to the AI Foundry Project.
     */
    public readonly tags!: pulumi.Output<{[key: string]: string} | undefined>;

    /**
     * Create a Project resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ProjectArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ProjectArgs | ProjectState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ProjectState | undefined;
            resourceInputs["aiServicesHubId"] = state ? state.aiServicesHubId : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["friendlyName"] = state ? state.friendlyName : undefined;
            resourceInputs["highBusinessImpactEnabled"] = state ? state.highBusinessImpactEnabled : undefined;
            resourceInputs["identity"] = state ? state.identity : undefined;
            resourceInputs["location"] = state ? state.location : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["projectId"] = state ? state.projectId : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
        } else {
            const args = argsOrState as ProjectArgs | undefined;
            if ((!args || args.aiServicesHubId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'aiServicesHubId'");
            }
            resourceInputs["aiServicesHubId"] = args ? args.aiServicesHubId : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["friendlyName"] = args ? args.friendlyName : undefined;
            resourceInputs["highBusinessImpactEnabled"] = args ? args.highBusinessImpactEnabled : undefined;
            resourceInputs["identity"] = args ? args.identity : undefined;
            resourceInputs["location"] = args ? args.location : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["projectId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Project.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Project resources.
 */
export interface ProjectState {
    /**
     * The AI Services Hub ID under which this Project should be created. Changing this forces a new AI Foundry Project to be created.
     */
    aiServicesHubId?: pulumi.Input<string>;
    /**
     * The description of this AI Foundry Project.
     */
    description?: pulumi.Input<string>;
    /**
     * The display name of this AI Foundry Project.
     */
    friendlyName?: pulumi.Input<string>;
    /**
     * Whether High Business Impact (HBI) should be enabled or not. Enabling this setting will reduce diagnostic data collected by the service. Changing this forces a new AI Foundry Project to be created. Defaults to `false`.
     */
    highBusinessImpactEnabled?: pulumi.Input<boolean>;
    /**
     * A `identity` block as defined below.
     */
    identity?: pulumi.Input<inputs.aifoundry.ProjectIdentity>;
    /**
     * The Azure Region where the AI Foundry Project should exist. Changing this forces a new AI Foundry Project to be created.
     */
    location?: pulumi.Input<string>;
    /**
     * The name which should be used for this AI Foundry Project. Changing this forces a new AI Foundry Project to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * The immutable project ID associated with this AI Foundry Project.
     */
    projectId?: pulumi.Input<string>;
    /**
     * A mapping of tags which should be assigned to the AI Foundry Project.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

/**
 * The set of arguments for constructing a Project resource.
 */
export interface ProjectArgs {
    /**
     * The AI Services Hub ID under which this Project should be created. Changing this forces a new AI Foundry Project to be created.
     */
    aiServicesHubId: pulumi.Input<string>;
    /**
     * The description of this AI Foundry Project.
     */
    description?: pulumi.Input<string>;
    /**
     * The display name of this AI Foundry Project.
     */
    friendlyName?: pulumi.Input<string>;
    /**
     * Whether High Business Impact (HBI) should be enabled or not. Enabling this setting will reduce diagnostic data collected by the service. Changing this forces a new AI Foundry Project to be created. Defaults to `false`.
     */
    highBusinessImpactEnabled?: pulumi.Input<boolean>;
    /**
     * A `identity` block as defined below.
     */
    identity?: pulumi.Input<inputs.aifoundry.ProjectIdentity>;
    /**
     * The Azure Region where the AI Foundry Project should exist. Changing this forces a new AI Foundry Project to be created.
     */
    location?: pulumi.Input<string>;
    /**
     * The name which should be used for this AI Foundry Project. Changing this forces a new AI Foundry Project to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * A mapping of tags which should be assigned to the AI Foundry Project.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
