// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * Manages the Custom Https Configuration for an Azure Front Door Frontend Endpoint..
 *
 * > **NOTE:** Custom https configurations for a Front Door Frontend Endpoint can be defined both within the `azure.frontdoor.Frontdoor` resource via the `customHttpsConfiguration` block and by using a separate resource, as described in the following sections.
 *
 * > **NOTE:** Defining custom https configurations using a separate `azure.frontdoor.CustomHttpsConfiguration` resource allows for parallel creation/update.
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const exampleResourceGroup = new azure.core.ResourceGroup("exampleResourceGroup", {location: "EastUS2"});
 * const vault = azure.keyvault.getKeyVault({
 *     name: "example-vault",
 *     resourceGroupName: "example-vault-rg",
 * });
 * const exampleFrontdoor = new azure.frontdoor.Frontdoor("exampleFrontdoor", {
 *     resourceGroupName: exampleResourceGroup.name,
 *     enforceBackendPoolsCertificateNameCheck: false,
 *     routingRules: [{
 *         name: "exampleRoutingRule1",
 *         acceptedProtocols: [
 *             "Http",
 *             "Https",
 *         ],
 *         patternsToMatches: ["/*"],
 *         frontendEndpoints: ["exampleFrontendEndpoint1"],
 *         forwardingConfiguration: {
 *             forwardingProtocol: "MatchRequest",
 *             backendPoolName: "exampleBackendBing",
 *         },
 *     }],
 *     backendPoolLoadBalancings: [{
 *         name: "exampleLoadBalancingSettings1",
 *     }],
 *     backendPoolHealthProbes: [{
 *         name: "exampleHealthProbeSetting1",
 *     }],
 *     backendPools: [{
 *         name: "exampleBackendBing",
 *         backends: [{
 *             hostHeader: "www.bing.com",
 *             address: "www.bing.com",
 *             httpPort: 80,
 *             httpsPort: 443,
 *         }],
 *         loadBalancingName: "exampleLoadBalancingSettings1",
 *         healthProbeName: "exampleHealthProbeSetting1",
 *     }],
 *     frontendEndpoints: [
 *         {
 *             name: "exampleFrontendEndpoint1",
 *             hostName: "example-FrontDoor.azurefd.net",
 *         },
 *         {
 *             name: "exampleFrontendEndpoint2",
 *             hostName: "examplefd1.examplefd.net",
 *         },
 *     ],
 * });
 * const exampleCustomHttps0 = new azure.frontdoor.CustomHttpsConfiguration("exampleCustomHttps0", {
 *     frontendEndpointId: exampleFrontdoor.frontendEndpoints.apply(frontendEndpoints => frontendEndpoints[0].id),
 *     customHttpsProvisioningEnabled: false,
 * });
 * const exampleCustomHttps1 = new azure.frontdoor.CustomHttpsConfiguration("exampleCustomHttps1", {
 *     frontendEndpointId: exampleFrontdoor.frontendEndpoints.apply(frontendEndpoints => frontendEndpoints[1].id),
 *     customHttpsProvisioningEnabled: true,
 *     customHttpsConfiguration: {
 *         certificateSource: "AzureKeyVault",
 *         azureKeyVaultCertificateSecretName: "examplefd1",
 *         azureKeyVaultCertificateSecretVersion: "ec8d0737e0df4f4gb52ecea858e97a73",
 *         azureKeyVaultCertificateVaultId: vault.then(vault => vault.id),
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * Front Door Custom Https Configurations can be imported using the `resource id` of the Frontend Endpoint, e.g.
 *
 * ```sh
 *  $ pulumi import azure:frontdoor/customHttpsConfiguration:CustomHttpsConfiguration example_custom_https_1 /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/mygroup1/providers/Microsoft.Network/frontdoors/frontdoor1/frontendEndpoints/endpoint1
 * ```
 */
export class CustomHttpsConfiguration extends pulumi.CustomResource {
    /**
     * Get an existing CustomHttpsConfiguration resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CustomHttpsConfigurationState, opts?: pulumi.CustomResourceOptions): CustomHttpsConfiguration {
        return new CustomHttpsConfiguration(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure:frontdoor/customHttpsConfiguration:CustomHttpsConfiguration';

    /**
     * Returns true if the given object is an instance of CustomHttpsConfiguration.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CustomHttpsConfiguration {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CustomHttpsConfiguration.__pulumiType;
    }

    /**
     * A `customHttpsConfiguration` block as defined below.
     */
    public readonly customHttpsConfiguration!: pulumi.Output<outputs.frontdoor.CustomHttpsConfigurationCustomHttpsConfiguration | undefined>;
    /**
     * Should the HTTPS protocol be enabled for this custom domain associated with the Front Door?
     */
    public readonly customHttpsProvisioningEnabled!: pulumi.Output<boolean>;
    /**
     * The ID of the FrontDoor Frontend Endpoint which this configuration refers to.
     */
    public readonly frontendEndpointId!: pulumi.Output<string>;
    /**
     * @deprecated This field is no longer used and will be removed in the next major version of the Azure Provider
     */
    public readonly resourceGroupName!: pulumi.Output<string | undefined>;

    /**
     * Create a CustomHttpsConfiguration resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CustomHttpsConfigurationArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CustomHttpsConfigurationArgs | CustomHttpsConfigurationState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        if (opts && opts.id) {
            const state = argsOrState as CustomHttpsConfigurationState | undefined;
            inputs["customHttpsConfiguration"] = state ? state.customHttpsConfiguration : undefined;
            inputs["customHttpsProvisioningEnabled"] = state ? state.customHttpsProvisioningEnabled : undefined;
            inputs["frontendEndpointId"] = state ? state.frontendEndpointId : undefined;
            inputs["resourceGroupName"] = state ? state.resourceGroupName : undefined;
        } else {
            const args = argsOrState as CustomHttpsConfigurationArgs | undefined;
            if (!args || args.customHttpsProvisioningEnabled === undefined) {
                throw new Error("Missing required property 'customHttpsProvisioningEnabled'");
            }
            if (!args || args.frontendEndpointId === undefined) {
                throw new Error("Missing required property 'frontendEndpointId'");
            }
            inputs["customHttpsConfiguration"] = args ? args.customHttpsConfiguration : undefined;
            inputs["customHttpsProvisioningEnabled"] = args ? args.customHttpsProvisioningEnabled : undefined;
            inputs["frontendEndpointId"] = args ? args.frontendEndpointId : undefined;
            inputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
        }
        if (!opts) {
            opts = {}
        }

        if (!opts.version) {
            opts.version = utilities.getVersion();
        }
        super(CustomHttpsConfiguration.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering CustomHttpsConfiguration resources.
 */
export interface CustomHttpsConfigurationState {
    /**
     * A `customHttpsConfiguration` block as defined below.
     */
    readonly customHttpsConfiguration?: pulumi.Input<inputs.frontdoor.CustomHttpsConfigurationCustomHttpsConfiguration>;
    /**
     * Should the HTTPS protocol be enabled for this custom domain associated with the Front Door?
     */
    readonly customHttpsProvisioningEnabled?: pulumi.Input<boolean>;
    /**
     * The ID of the FrontDoor Frontend Endpoint which this configuration refers to.
     */
    readonly frontendEndpointId?: pulumi.Input<string>;
    /**
     * @deprecated This field is no longer used and will be removed in the next major version of the Azure Provider
     */
    readonly resourceGroupName?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a CustomHttpsConfiguration resource.
 */
export interface CustomHttpsConfigurationArgs {
    /**
     * A `customHttpsConfiguration` block as defined below.
     */
    readonly customHttpsConfiguration?: pulumi.Input<inputs.frontdoor.CustomHttpsConfigurationCustomHttpsConfiguration>;
    /**
     * Should the HTTPS protocol be enabled for this custom domain associated with the Front Door?
     */
    readonly customHttpsProvisioningEnabled: pulumi.Input<boolean>;
    /**
     * The ID of the FrontDoor Frontend Endpoint which this configuration refers to.
     */
    readonly frontendEndpointId: pulumi.Input<string>;
    /**
     * @deprecated This field is no longer used and will be removed in the next major version of the Azure Provider
     */
    readonly resourceGroupName?: pulumi.Input<string>;
}
