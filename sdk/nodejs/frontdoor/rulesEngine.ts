// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * !> **IMPORTANT** This deploys an Azure Front Door (classic) resource which has been deprecated and will receive security updates only. Please migrate your existing Azure Front Door (classic) deployments to the new Azure Front Door (standard/premium) resources. For your convenience, the service team has exposed a `Front Door Classic` to `Front Door Standard/Premium` [migration tool](https://learn.microsoft.com/azure/frontdoor/tier-migration) to allow you to migrate your existing `Front Door Classic` instances to the new `Front Door Standard/Premium` product tiers.
 *
 * Manages an Azure Front Door (classic) Rules Engine configuration and rules.
 *
 * ## Import
 *
 * Azure Front Door Rules Engine's can be imported using the `resource id`, e.g.
 *
 * ```sh
 *  $ pulumi import azure:frontdoor/rulesEngine:RulesEngine example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resGroup1/providers/Microsoft.Network/frontdoors/frontdoor1/rulesEngines/rule1
 * ```
 */
export class RulesEngine extends pulumi.CustomResource {
    /**
     * Get an existing RulesEngine resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: RulesEngineState, opts?: pulumi.CustomResourceOptions): RulesEngine {
        return new RulesEngine(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure:frontdoor/rulesEngine:RulesEngine';

    /**
     * Returns true if the given object is an instance of RulesEngine.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is RulesEngine {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === RulesEngine.__pulumiType;
    }

    /**
     * Whether this Rules engine configuration is enabled? Defaults to `true`.
     */
    public readonly enabled!: pulumi.Output<boolean | undefined>;
    /**
     * The name of the Front Door instance. Changing this forces a new resource to be created.
     */
    public readonly frontdoorName!: pulumi.Output<string>;
    public /*out*/ readonly location!: pulumi.Output<string>;
    /**
     * The name of the Rules engine configuration. Changing this forces a new resource to be created.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The name of the resource group. Changing this forces a new resource to be created.
     */
    public readonly resourceGroupName!: pulumi.Output<string>;
    /**
     * A `rule` block as defined below.
     */
    public readonly rules!: pulumi.Output<outputs.frontdoor.RulesEngineRule[] | undefined>;

    /**
     * Create a RulesEngine resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: RulesEngineArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: RulesEngineArgs | RulesEngineState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as RulesEngineState | undefined;
            resourceInputs["enabled"] = state ? state.enabled : undefined;
            resourceInputs["frontdoorName"] = state ? state.frontdoorName : undefined;
            resourceInputs["location"] = state ? state.location : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["resourceGroupName"] = state ? state.resourceGroupName : undefined;
            resourceInputs["rules"] = state ? state.rules : undefined;
        } else {
            const args = argsOrState as RulesEngineArgs | undefined;
            if ((!args || args.frontdoorName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'frontdoorName'");
            }
            if ((!args || args.resourceGroupName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            resourceInputs["enabled"] = args ? args.enabled : undefined;
            resourceInputs["frontdoorName"] = args ? args.frontdoorName : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            resourceInputs["rules"] = args ? args.rules : undefined;
            resourceInputs["location"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(RulesEngine.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering RulesEngine resources.
 */
export interface RulesEngineState {
    /**
     * Whether this Rules engine configuration is enabled? Defaults to `true`.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * The name of the Front Door instance. Changing this forces a new resource to be created.
     */
    frontdoorName?: pulumi.Input<string>;
    location?: pulumi.Input<string>;
    /**
     * The name of the Rules engine configuration. Changing this forces a new resource to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * The name of the resource group. Changing this forces a new resource to be created.
     */
    resourceGroupName?: pulumi.Input<string>;
    /**
     * A `rule` block as defined below.
     */
    rules?: pulumi.Input<pulumi.Input<inputs.frontdoor.RulesEngineRule>[]>;
}

/**
 * The set of arguments for constructing a RulesEngine resource.
 */
export interface RulesEngineArgs {
    /**
     * Whether this Rules engine configuration is enabled? Defaults to `true`.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * The name of the Front Door instance. Changing this forces a new resource to be created.
     */
    frontdoorName: pulumi.Input<string>;
    /**
     * The name of the Rules engine configuration. Changing this forces a new resource to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * The name of the resource group. Changing this forces a new resource to be created.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * A `rule` block as defined below.
     */
    rules?: pulumi.Input<pulumi.Input<inputs.frontdoor.RulesEngineRule>[]>;
}
