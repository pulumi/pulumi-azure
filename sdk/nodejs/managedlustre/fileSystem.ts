// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Manages an Azure Managed Lustre File System.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azure from "@pulumi/azure";
 *
 * const example = new azure.core.ResourceGroup("example", {
 *     name: "example-resources",
 *     location: "West Europe",
 * });
 * const exampleVirtualNetwork = new azure.network.VirtualNetwork("example", {
 *     name: "example-vnet",
 *     addressSpaces: ["10.0.0.0/16"],
 *     location: example.location,
 *     resourceGroupName: example.name,
 * });
 * const exampleSubnet = new azure.network.Subnet("example", {
 *     name: "example-subnet",
 *     resourceGroupName: example.name,
 *     virtualNetworkName: exampleVirtualNetwork.name,
 *     addressPrefixes: ["10.0.2.0/24"],
 * });
 * const exampleFileSystem = new azure.managedlustre.FileSystem("example", {
 *     name: "example-amlfs",
 *     resourceGroupName: example.name,
 *     location: example.location,
 *     skuName: "AMLFS-Durable-Premium-250",
 *     subnetId: exampleSubnet.id,
 *     storageCapacityInTb: 8,
 *     zones: ["2"],
 *     maintenanceWindow: {
 *         dayOfWeek: "Friday",
 *         timeOfDayUtc: "22:00",
 *     },
 * });
 * ```
 *
 * ## API Providers
 *
 * <!-- This section is generated, changes will be overwritten -->
 * This resource uses the following Azure API Providers:
 *
 * * `Microsoft.StorageCache` - 2024-07-01
 *
 * ## Import
 *
 * Azure Managed Lustre File Systems can be imported using the `resource id`, e.g.
 *
 * ```sh
 * $ pulumi import azure:managedlustre/fileSystem:FileSystem example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resourceGroup1/providers/Microsoft.StorageCache/amlFilesystems/amlFilesystem1
 * ```
 */
export class FileSystem extends pulumi.CustomResource {
    /**
     * Get an existing FileSystem resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: FileSystemState, opts?: pulumi.CustomResourceOptions): FileSystem {
        return new FileSystem(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure:managedlustre/fileSystem:FileSystem';

    /**
     * Returns true if the given object is an instance of FileSystem.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is FileSystem {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === FileSystem.__pulumiType;
    }

    /**
     * An `encryptionKey` block as defined below.
     *
     * > **Note:** Removing `encryptionKey` forces a new resource to be created.
     */
    declare public readonly encryptionKey: pulumi.Output<outputs.managedlustre.FileSystemEncryptionKey | undefined>;
    /**
     * A `hsmSetting` block as defined below. Changing this forces a new resource to be created.
     */
    declare public readonly hsmSetting: pulumi.Output<outputs.managedlustre.FileSystemHsmSetting | undefined>;
    /**
     * An `identity` block as defined below. Changing this forces a new resource to be created.
     */
    declare public readonly identity: pulumi.Output<outputs.managedlustre.FileSystemIdentity | undefined>;
    /**
     * The Azure Region where the Azure Managed Lustre File System should exist. Changing this forces a new resource to be created.
     */
    declare public readonly location: pulumi.Output<string>;
    /**
     * A `maintenanceWindow` block as defined below.
     */
    declare public readonly maintenanceWindow: pulumi.Output<outputs.managedlustre.FileSystemMaintenanceWindow>;
    /**
     * IP Address of Managed Lustre File System Services.
     */
    declare public /*out*/ readonly mgsAddress: pulumi.Output<string>;
    /**
     * The name which should be used for this Azure Managed Lustre File System. Changing this forces a new resource to be created.
     */
    declare public readonly name: pulumi.Output<string>;
    /**
     * The name of the Resource Group where the Azure Managed Lustre File System should exist. Changing this forces a new resource to be created.
     */
    declare public readonly resourceGroupName: pulumi.Output<string>;
    /**
     * A `rootSquash` block as defined below.
     */
    declare public readonly rootSquash: pulumi.Output<outputs.managedlustre.FileSystemRootSquash | undefined>;
    /**
     * The SKU name for the Azure Managed Lustre File System. Possible values are `AMLFS-Durable-Premium-40`, `AMLFS-Durable-Premium-125`, `AMLFS-Durable-Premium-250` and `AMLFS-Durable-Premium-500`. Changing this forces a new resource to be created.
     */
    declare public readonly skuName: pulumi.Output<string>;
    /**
     * The size of the Azure Managed Lustre File System in TiB. The valid values for this field are dependant on which `skuName` has been defined in the configuration file. For more information on the valid values for this field please see the [product documentation](https://learn.microsoft.com/azure/azure-managed-lustre/create-file-system-resource-manager#file-system-type-and-size-options). Changing this forces a new resource to be created.
     */
    declare public readonly storageCapacityInTb: pulumi.Output<number>;
    /**
     * The resource ID of the Subnet that is used for managing the Azure Managed Lustre file system and for client-facing operations. This subnet should have at least a /24 subnet mask within the Virtual Network's address space. Changing this forces a new resource to be created.
     */
    declare public readonly subnetId: pulumi.Output<string>;
    /**
     * A mapping of tags which should be assigned to the Azure Managed Lustre File System.
     */
    declare public readonly tags: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * A list of availability zones for the Azure Managed Lustre File System. Changing this forces a new resource to be created.
     */
    declare public readonly zones: pulumi.Output<string[]>;

    /**
     * Create a FileSystem resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: FileSystemArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: FileSystemArgs | FileSystemState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as FileSystemState | undefined;
            resourceInputs["encryptionKey"] = state?.encryptionKey;
            resourceInputs["hsmSetting"] = state?.hsmSetting;
            resourceInputs["identity"] = state?.identity;
            resourceInputs["location"] = state?.location;
            resourceInputs["maintenanceWindow"] = state?.maintenanceWindow;
            resourceInputs["mgsAddress"] = state?.mgsAddress;
            resourceInputs["name"] = state?.name;
            resourceInputs["resourceGroupName"] = state?.resourceGroupName;
            resourceInputs["rootSquash"] = state?.rootSquash;
            resourceInputs["skuName"] = state?.skuName;
            resourceInputs["storageCapacityInTb"] = state?.storageCapacityInTb;
            resourceInputs["subnetId"] = state?.subnetId;
            resourceInputs["tags"] = state?.tags;
            resourceInputs["zones"] = state?.zones;
        } else {
            const args = argsOrState as FileSystemArgs | undefined;
            if (args?.maintenanceWindow === undefined && !opts.urn) {
                throw new Error("Missing required property 'maintenanceWindow'");
            }
            if (args?.resourceGroupName === undefined && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            if (args?.skuName === undefined && !opts.urn) {
                throw new Error("Missing required property 'skuName'");
            }
            if (args?.storageCapacityInTb === undefined && !opts.urn) {
                throw new Error("Missing required property 'storageCapacityInTb'");
            }
            if (args?.subnetId === undefined && !opts.urn) {
                throw new Error("Missing required property 'subnetId'");
            }
            if (args?.zones === undefined && !opts.urn) {
                throw new Error("Missing required property 'zones'");
            }
            resourceInputs["encryptionKey"] = args?.encryptionKey;
            resourceInputs["hsmSetting"] = args?.hsmSetting;
            resourceInputs["identity"] = args?.identity;
            resourceInputs["location"] = args?.location;
            resourceInputs["maintenanceWindow"] = args?.maintenanceWindow;
            resourceInputs["name"] = args?.name;
            resourceInputs["resourceGroupName"] = args?.resourceGroupName;
            resourceInputs["rootSquash"] = args?.rootSquash;
            resourceInputs["skuName"] = args?.skuName;
            resourceInputs["storageCapacityInTb"] = args?.storageCapacityInTb;
            resourceInputs["subnetId"] = args?.subnetId;
            resourceInputs["tags"] = args?.tags;
            resourceInputs["zones"] = args?.zones;
            resourceInputs["mgsAddress"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(FileSystem.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering FileSystem resources.
 */
export interface FileSystemState {
    /**
     * An `encryptionKey` block as defined below.
     *
     * > **Note:** Removing `encryptionKey` forces a new resource to be created.
     */
    encryptionKey?: pulumi.Input<inputs.managedlustre.FileSystemEncryptionKey>;
    /**
     * A `hsmSetting` block as defined below. Changing this forces a new resource to be created.
     */
    hsmSetting?: pulumi.Input<inputs.managedlustre.FileSystemHsmSetting>;
    /**
     * An `identity` block as defined below. Changing this forces a new resource to be created.
     */
    identity?: pulumi.Input<inputs.managedlustre.FileSystemIdentity>;
    /**
     * The Azure Region where the Azure Managed Lustre File System should exist. Changing this forces a new resource to be created.
     */
    location?: pulumi.Input<string>;
    /**
     * A `maintenanceWindow` block as defined below.
     */
    maintenanceWindow?: pulumi.Input<inputs.managedlustre.FileSystemMaintenanceWindow>;
    /**
     * IP Address of Managed Lustre File System Services.
     */
    mgsAddress?: pulumi.Input<string>;
    /**
     * The name which should be used for this Azure Managed Lustre File System. Changing this forces a new resource to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * The name of the Resource Group where the Azure Managed Lustre File System should exist. Changing this forces a new resource to be created.
     */
    resourceGroupName?: pulumi.Input<string>;
    /**
     * A `rootSquash` block as defined below.
     */
    rootSquash?: pulumi.Input<inputs.managedlustre.FileSystemRootSquash>;
    /**
     * The SKU name for the Azure Managed Lustre File System. Possible values are `AMLFS-Durable-Premium-40`, `AMLFS-Durable-Premium-125`, `AMLFS-Durable-Premium-250` and `AMLFS-Durable-Premium-500`. Changing this forces a new resource to be created.
     */
    skuName?: pulumi.Input<string>;
    /**
     * The size of the Azure Managed Lustre File System in TiB. The valid values for this field are dependant on which `skuName` has been defined in the configuration file. For more information on the valid values for this field please see the [product documentation](https://learn.microsoft.com/azure/azure-managed-lustre/create-file-system-resource-manager#file-system-type-and-size-options). Changing this forces a new resource to be created.
     */
    storageCapacityInTb?: pulumi.Input<number>;
    /**
     * The resource ID of the Subnet that is used for managing the Azure Managed Lustre file system and for client-facing operations. This subnet should have at least a /24 subnet mask within the Virtual Network's address space. Changing this forces a new resource to be created.
     */
    subnetId?: pulumi.Input<string>;
    /**
     * A mapping of tags which should be assigned to the Azure Managed Lustre File System.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * A list of availability zones for the Azure Managed Lustre File System. Changing this forces a new resource to be created.
     */
    zones?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * The set of arguments for constructing a FileSystem resource.
 */
export interface FileSystemArgs {
    /**
     * An `encryptionKey` block as defined below.
     *
     * > **Note:** Removing `encryptionKey` forces a new resource to be created.
     */
    encryptionKey?: pulumi.Input<inputs.managedlustre.FileSystemEncryptionKey>;
    /**
     * A `hsmSetting` block as defined below. Changing this forces a new resource to be created.
     */
    hsmSetting?: pulumi.Input<inputs.managedlustre.FileSystemHsmSetting>;
    /**
     * An `identity` block as defined below. Changing this forces a new resource to be created.
     */
    identity?: pulumi.Input<inputs.managedlustre.FileSystemIdentity>;
    /**
     * The Azure Region where the Azure Managed Lustre File System should exist. Changing this forces a new resource to be created.
     */
    location?: pulumi.Input<string>;
    /**
     * A `maintenanceWindow` block as defined below.
     */
    maintenanceWindow: pulumi.Input<inputs.managedlustre.FileSystemMaintenanceWindow>;
    /**
     * The name which should be used for this Azure Managed Lustre File System. Changing this forces a new resource to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * The name of the Resource Group where the Azure Managed Lustre File System should exist. Changing this forces a new resource to be created.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * A `rootSquash` block as defined below.
     */
    rootSquash?: pulumi.Input<inputs.managedlustre.FileSystemRootSquash>;
    /**
     * The SKU name for the Azure Managed Lustre File System. Possible values are `AMLFS-Durable-Premium-40`, `AMLFS-Durable-Premium-125`, `AMLFS-Durable-Premium-250` and `AMLFS-Durable-Premium-500`. Changing this forces a new resource to be created.
     */
    skuName: pulumi.Input<string>;
    /**
     * The size of the Azure Managed Lustre File System in TiB. The valid values for this field are dependant on which `skuName` has been defined in the configuration file. For more information on the valid values for this field please see the [product documentation](https://learn.microsoft.com/azure/azure-managed-lustre/create-file-system-resource-manager#file-system-type-and-size-options). Changing this forces a new resource to be created.
     */
    storageCapacityInTb: pulumi.Input<number>;
    /**
     * The resource ID of the Subnet that is used for managing the Azure Managed Lustre file system and for client-facing operations. This subnet should have at least a /24 subnet mask within the Virtual Network's address space. Changing this forces a new resource to be created.
     */
    subnetId: pulumi.Input<string>;
    /**
     * A mapping of tags which should be assigned to the Azure Managed Lustre File System.
     */
    tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * A list of availability zones for the Azure Managed Lustre File System. Changing this forces a new resource to be created.
     */
    zones: pulumi.Input<pulumi.Input<string>[]>;
}
