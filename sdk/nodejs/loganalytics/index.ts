// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { ClusterArgs, ClusterState } from "./cluster";
export type Cluster = import("./cluster").Cluster;
export const Cluster: typeof import("./cluster").Cluster = null as any;
utilities.lazyLoad(exports, ["Cluster"], () => require("./cluster"));

export { ClusterCustomerManagedKeyArgs, ClusterCustomerManagedKeyState } from "./clusterCustomerManagedKey";
export type ClusterCustomerManagedKey = import("./clusterCustomerManagedKey").ClusterCustomerManagedKey;
export const ClusterCustomerManagedKey: typeof import("./clusterCustomerManagedKey").ClusterCustomerManagedKey = null as any;
utilities.lazyLoad(exports, ["ClusterCustomerManagedKey"], () => require("./clusterCustomerManagedKey"));

export { DataExportRuleArgs, DataExportRuleState } from "./dataExportRule";
export type DataExportRule = import("./dataExportRule").DataExportRule;
export const DataExportRule: typeof import("./dataExportRule").DataExportRule = null as any;
utilities.lazyLoad(exports, ["DataExportRule"], () => require("./dataExportRule"));

export { DataSourceWindowsEventArgs, DataSourceWindowsEventState } from "./dataSourceWindowsEvent";
export type DataSourceWindowsEvent = import("./dataSourceWindowsEvent").DataSourceWindowsEvent;
export const DataSourceWindowsEvent: typeof import("./dataSourceWindowsEvent").DataSourceWindowsEvent = null as any;
utilities.lazyLoad(exports, ["DataSourceWindowsEvent"], () => require("./dataSourceWindowsEvent"));

export { DataSourceWindowsPerformanceCounterArgs, DataSourceWindowsPerformanceCounterState } from "./dataSourceWindowsPerformanceCounter";
export type DataSourceWindowsPerformanceCounter = import("./dataSourceWindowsPerformanceCounter").DataSourceWindowsPerformanceCounter;
export const DataSourceWindowsPerformanceCounter: typeof import("./dataSourceWindowsPerformanceCounter").DataSourceWindowsPerformanceCounter = null as any;
utilities.lazyLoad(exports, ["DataSourceWindowsPerformanceCounter"], () => require("./dataSourceWindowsPerformanceCounter"));

export { LinkedServiceArgs, LinkedServiceState } from "./linkedService";
export type LinkedService = import("./linkedService").LinkedService;
export const LinkedService: typeof import("./linkedService").LinkedService = null as any;
utilities.lazyLoad(exports, ["LinkedService"], () => require("./linkedService"));

export { LinkedStorageAccountArgs, LinkedStorageAccountState } from "./linkedStorageAccount";
export type LinkedStorageAccount = import("./linkedStorageAccount").LinkedStorageAccount;
export const LinkedStorageAccount: typeof import("./linkedStorageAccount").LinkedStorageAccount = null as any;
utilities.lazyLoad(exports, ["LinkedStorageAccount"], () => require("./linkedStorageAccount"));

export { QueryPackArgs, QueryPackState } from "./queryPack";
export type QueryPack = import("./queryPack").QueryPack;
export const QueryPack: typeof import("./queryPack").QueryPack = null as any;
utilities.lazyLoad(exports, ["QueryPack"], () => require("./queryPack"));

export { SavedSearchArgs, SavedSearchState } from "./savedSearch";
export type SavedSearch = import("./savedSearch").SavedSearch;
export const SavedSearch: typeof import("./savedSearch").SavedSearch = null as any;
utilities.lazyLoad(exports, ["SavedSearch"], () => require("./savedSearch"));

export { StorageInsightsArgs, StorageInsightsState } from "./storageInsights";
export type StorageInsights = import("./storageInsights").StorageInsights;
export const StorageInsights: typeof import("./storageInsights").StorageInsights = null as any;
utilities.lazyLoad(exports, ["StorageInsights"], () => require("./storageInsights"));

export { WorkspaceTableArgs, WorkspaceTableState } from "./workspaceTable";
export type WorkspaceTable = import("./workspaceTable").WorkspaceTable;
export const WorkspaceTable: typeof import("./workspaceTable").WorkspaceTable = null as any;
utilities.lazyLoad(exports, ["WorkspaceTable"], () => require("./workspaceTable"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "azure:loganalytics/cluster:Cluster":
                return new Cluster(name, <any>undefined, { urn })
            case "azure:loganalytics/clusterCustomerManagedKey:ClusterCustomerManagedKey":
                return new ClusterCustomerManagedKey(name, <any>undefined, { urn })
            case "azure:loganalytics/dataExportRule:DataExportRule":
                return new DataExportRule(name, <any>undefined, { urn })
            case "azure:loganalytics/dataSourceWindowsEvent:DataSourceWindowsEvent":
                return new DataSourceWindowsEvent(name, <any>undefined, { urn })
            case "azure:loganalytics/dataSourceWindowsPerformanceCounter:DataSourceWindowsPerformanceCounter":
                return new DataSourceWindowsPerformanceCounter(name, <any>undefined, { urn })
            case "azure:loganalytics/linkedService:LinkedService":
                return new LinkedService(name, <any>undefined, { urn })
            case "azure:loganalytics/linkedStorageAccount:LinkedStorageAccount":
                return new LinkedStorageAccount(name, <any>undefined, { urn })
            case "azure:loganalytics/queryPack:QueryPack":
                return new QueryPack(name, <any>undefined, { urn })
            case "azure:loganalytics/savedSearch:SavedSearch":
                return new SavedSearch(name, <any>undefined, { urn })
            case "azure:loganalytics/storageInsights:StorageInsights":
                return new StorageInsights(name, <any>undefined, { urn })
            case "azure:loganalytics/workspaceTable:WorkspaceTable":
                return new WorkspaceTable(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azure", "loganalytics/cluster", _module)
pulumi.runtime.registerResourceModule("azure", "loganalytics/clusterCustomerManagedKey", _module)
pulumi.runtime.registerResourceModule("azure", "loganalytics/dataExportRule", _module)
pulumi.runtime.registerResourceModule("azure", "loganalytics/dataSourceWindowsEvent", _module)
pulumi.runtime.registerResourceModule("azure", "loganalytics/dataSourceWindowsPerformanceCounter", _module)
pulumi.runtime.registerResourceModule("azure", "loganalytics/linkedService", _module)
pulumi.runtime.registerResourceModule("azure", "loganalytics/linkedStorageAccount", _module)
pulumi.runtime.registerResourceModule("azure", "loganalytics/queryPack", _module)
pulumi.runtime.registerResourceModule("azure", "loganalytics/savedSearch", _module)
pulumi.runtime.registerResourceModule("azure", "loganalytics/storageInsights", _module)
pulumi.runtime.registerResourceModule("azure", "loganalytics/workspaceTable", _module)
