// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Manages a Log Analytics Linked Service.
 *
 * ## Import
 *
 * Log Analytics Workspaces can be imported using the `resource id`, e.g.
 *
 * ```sh
 *  $ pulumi import azure:loganalytics/linkedService:LinkedService example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/mygroup1/providers/Microsoft.OperationalInsights/workspaces/workspace1/linkedServices/Automation
 * ```
 */
export class LinkedService extends pulumi.CustomResource {
    /**
     * Get an existing LinkedService resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: LinkedServiceState, opts?: pulumi.CustomResourceOptions): LinkedService {
        return new LinkedService(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azure:loganalytics/linkedService:LinkedService';

    /**
     * Returns true if the given object is an instance of LinkedService.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is LinkedService {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === LinkedService.__pulumiType;
    }

    /**
     * The generated name of the Linked Service. The format for this attribute is always `<workspace name>/<linked service type>`(e.g. `workspace1/Automation` or `workspace1/Cluster`)
     */
    public /*out*/ readonly name!: pulumi.Output<string>;
    /**
     * The ID of the readable Resource that will be linked to the workspace. This should be used for linking to an Automation Account resource.
     */
    public readonly readAccessId!: pulumi.Output<string>;
    /**
     * The name of the resource group in which the Log Analytics Linked Service is created. Changing this forces a new resource to be created.
     */
    public readonly resourceGroupName!: pulumi.Output<string>;
    /**
     * The ID of the Log Analytics Workspace that will contain the Log Analytics Linked Service resource.
     */
    public readonly workspaceId!: pulumi.Output<string>;
    /**
     * The ID of the writable Resource that will be linked to the workspace. This should be used for linking to a Log Analytics Cluster resource.
     *
     * > **NOTE:** You must define at least one of the above access resource id attributes (e.g. `readAccessId` or `writeAccessId`).
     */
    public readonly writeAccessId!: pulumi.Output<string | undefined>;

    /**
     * Create a LinkedService resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: LinkedServiceArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: LinkedServiceArgs | LinkedServiceState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as LinkedServiceState | undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["readAccessId"] = state ? state.readAccessId : undefined;
            resourceInputs["resourceGroupName"] = state ? state.resourceGroupName : undefined;
            resourceInputs["workspaceId"] = state ? state.workspaceId : undefined;
            resourceInputs["writeAccessId"] = state ? state.writeAccessId : undefined;
        } else {
            const args = argsOrState as LinkedServiceArgs | undefined;
            if ((!args || args.resourceGroupName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceGroupName'");
            }
            if ((!args || args.workspaceId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'workspaceId'");
            }
            resourceInputs["readAccessId"] = args ? args.readAccessId : undefined;
            resourceInputs["resourceGroupName"] = args ? args.resourceGroupName : undefined;
            resourceInputs["workspaceId"] = args ? args.workspaceId : undefined;
            resourceInputs["writeAccessId"] = args ? args.writeAccessId : undefined;
            resourceInputs["name"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(LinkedService.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering LinkedService resources.
 */
export interface LinkedServiceState {
    /**
     * The generated name of the Linked Service. The format for this attribute is always `<workspace name>/<linked service type>`(e.g. `workspace1/Automation` or `workspace1/Cluster`)
     */
    name?: pulumi.Input<string>;
    /**
     * The ID of the readable Resource that will be linked to the workspace. This should be used for linking to an Automation Account resource.
     */
    readAccessId?: pulumi.Input<string>;
    /**
     * The name of the resource group in which the Log Analytics Linked Service is created. Changing this forces a new resource to be created.
     */
    resourceGroupName?: pulumi.Input<string>;
    /**
     * The ID of the Log Analytics Workspace that will contain the Log Analytics Linked Service resource.
     */
    workspaceId?: pulumi.Input<string>;
    /**
     * The ID of the writable Resource that will be linked to the workspace. This should be used for linking to a Log Analytics Cluster resource.
     *
     * > **NOTE:** You must define at least one of the above access resource id attributes (e.g. `readAccessId` or `writeAccessId`).
     */
    writeAccessId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a LinkedService resource.
 */
export interface LinkedServiceArgs {
    /**
     * The ID of the readable Resource that will be linked to the workspace. This should be used for linking to an Automation Account resource.
     */
    readAccessId?: pulumi.Input<string>;
    /**
     * The name of the resource group in which the Log Analytics Linked Service is created. Changing this forces a new resource to be created.
     */
    resourceGroupName: pulumi.Input<string>;
    /**
     * The ID of the Log Analytics Workspace that will contain the Log Analytics Linked Service resource.
     */
    workspaceId: pulumi.Input<string>;
    /**
     * The ID of the writable Resource that will be linked to the workspace. This should be used for linking to a Log Analytics Cluster resource.
     *
     * > **NOTE:** You must define at least one of the above access resource id attributes (e.g. `readAccessId` or `writeAccessId`).
     */
    writeAccessId?: pulumi.Input<string>;
}
