// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Manages an ExpressRoute Circuit Peering.
 *
 * ## Example Usage
 */
export function getCircuitPeering(args: GetCircuitPeeringArgs, opts?: pulumi.InvokeOptions): Promise<GetCircuitPeeringResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azure:expressroute/getCircuitPeering:getCircuitPeering", {
        "expressRouteCircuitName": args.expressRouteCircuitName,
        "peeringType": args.peeringType,
        "resourceGroupName": args.resourceGroupName,
    }, opts);
}

/**
 * A collection of arguments for invoking getCircuitPeering.
 */
export interface GetCircuitPeeringArgs {
    /**
     * The name of the ExpressRoute Circuit in which to create the Peering. Changing this forces a new resource to be created.
     */
    expressRouteCircuitName: string;
    /**
     * The type of the ExpressRoute Circuit Peering. Acceptable values include `AzurePrivatePeering`, `AzurePublicPeering` and `MicrosoftPeering`.
     */
    peeringType: string;
    /**
     * The name of the resource group in which to create the Express Route Circuit Peering. Changing this forces a new resource to be created.
     */
    resourceGroupName: string;
}

/**
 * A collection of values returned by getCircuitPeering.
 */
export interface GetCircuitPeeringResult {
    /**
     * The ASN used by Azure for the peering.
     */
    readonly azureAsn: number;
    readonly expressRouteCircuitName: string;
    readonly gatewayManagerEtag: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * Indicates if IPv4 is enabled.
     */
    readonly ipv4Enabled: boolean;
    readonly peerAsn: number;
    /**
     * The type of the ExpressRoute Circuit Peering.
     */
    readonly peeringType: string;
    /**
     * The primary port used by Azure for this peering.
     */
    readonly primaryAzurePort: string;
    /**
     * The primary peer address prefix.
     */
    readonly primaryPeerAddressPrefix: string;
    readonly resourceGroupName: string;
    readonly routeFilterId: string;
    /**
     * The secondary port used by Azure for this peering.
     */
    readonly secondaryAzurePort: string;
    /**
     * The secondary peer address prefix.
     */
    readonly secondaryPeerAddressPrefix: string;
    readonly sharedKey: string;
    /**
     * The VLAN ID used for this peering.
     */
    readonly vlanId: number;
}
/**
 * Manages an ExpressRoute Circuit Peering.
 *
 * ## Example Usage
 */
export function getCircuitPeeringOutput(args: GetCircuitPeeringOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCircuitPeeringResult> {
    return pulumi.output(args).apply((a: any) => getCircuitPeering(a, opts))
}

/**
 * A collection of arguments for invoking getCircuitPeering.
 */
export interface GetCircuitPeeringOutputArgs {
    /**
     * The name of the ExpressRoute Circuit in which to create the Peering. Changing this forces a new resource to be created.
     */
    expressRouteCircuitName: pulumi.Input<string>;
    /**
     * The type of the ExpressRoute Circuit Peering. Acceptable values include `AzurePrivatePeering`, `AzurePublicPeering` and `MicrosoftPeering`.
     */
    peeringType: pulumi.Input<string>;
    /**
     * The name of the resource group in which to create the Express Route Circuit Peering. Changing this forces a new resource to be created.
     */
    resourceGroupName: pulumi.Input<string>;
}
