// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.compute;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DedicatedHostGroupArgs extends com.pulumi.resources.ResourceArgs {

    public static final DedicatedHostGroupArgs Empty = new DedicatedHostGroupArgs();

    /**
     * Would virtual machines or virtual machine scale sets be placed automatically on this Dedicated Host Group? Defaults to `false`. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="automaticPlacementEnabled")
    private @Nullable Output<Boolean> automaticPlacementEnabled;

    /**
     * @return Would virtual machines or virtual machine scale sets be placed automatically on this Dedicated Host Group? Defaults to `false`. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<Boolean>> automaticPlacementEnabled() {
        return Optional.ofNullable(this.automaticPlacementEnabled);
    }

    /**
     * The Azure location where the Dedicated Host Group exists. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="location")
    private @Nullable Output<String> location;

    /**
     * @return The Azure location where the Dedicated Host Group exists. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * Specifies the name of the Dedicated Host Group. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Specifies the name of the Dedicated Host Group. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The number of fault domains that the Dedicated Host Group spans. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="platformFaultDomainCount", required=true)
    private Output<Integer> platformFaultDomainCount;

    /**
     * @return The number of fault domains that the Dedicated Host Group spans. Changing this forces a new resource to be created.
     * 
     */
    public Output<Integer> platformFaultDomainCount() {
        return this.platformFaultDomainCount;
    }

    /**
     * Specifies the name of the resource group the Dedicated Host Group is located in. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    /**
     * @return Specifies the name of the resource group the Dedicated Host Group is located in. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * A mapping of tags to assign to the resource.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return A mapping of tags to assign to the resource.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * Specifies the Availability Zone in which this Dedicated Host Group should be located. Changing this forces a new Dedicated Host Group to be created.
     * 
     */
    @Import(name="zone")
    private @Nullable Output<String> zone;

    /**
     * @return Specifies the Availability Zone in which this Dedicated Host Group should be located. Changing this forces a new Dedicated Host Group to be created.
     * 
     */
    public Optional<Output<String>> zone() {
        return Optional.ofNullable(this.zone);
    }

    private DedicatedHostGroupArgs() {}

    private DedicatedHostGroupArgs(DedicatedHostGroupArgs $) {
        this.automaticPlacementEnabled = $.automaticPlacementEnabled;
        this.location = $.location;
        this.name = $.name;
        this.platformFaultDomainCount = $.platformFaultDomainCount;
        this.resourceGroupName = $.resourceGroupName;
        this.tags = $.tags;
        this.zone = $.zone;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DedicatedHostGroupArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DedicatedHostGroupArgs $;

        public Builder() {
            $ = new DedicatedHostGroupArgs();
        }

        public Builder(DedicatedHostGroupArgs defaults) {
            $ = new DedicatedHostGroupArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param automaticPlacementEnabled Would virtual machines or virtual machine scale sets be placed automatically on this Dedicated Host Group? Defaults to `false`. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder automaticPlacementEnabled(@Nullable Output<Boolean> automaticPlacementEnabled) {
            $.automaticPlacementEnabled = automaticPlacementEnabled;
            return this;
        }

        /**
         * @param automaticPlacementEnabled Would virtual machines or virtual machine scale sets be placed automatically on this Dedicated Host Group? Defaults to `false`. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder automaticPlacementEnabled(Boolean automaticPlacementEnabled) {
            return automaticPlacementEnabled(Output.of(automaticPlacementEnabled));
        }

        /**
         * @param location The Azure location where the Dedicated Host Group exists. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location The Azure location where the Dedicated Host Group exists. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param name Specifies the name of the Dedicated Host Group. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Specifies the name of the Dedicated Host Group. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param platformFaultDomainCount The number of fault domains that the Dedicated Host Group spans. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder platformFaultDomainCount(Output<Integer> platformFaultDomainCount) {
            $.platformFaultDomainCount = platformFaultDomainCount;
            return this;
        }

        /**
         * @param platformFaultDomainCount The number of fault domains that the Dedicated Host Group spans. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder platformFaultDomainCount(Integer platformFaultDomainCount) {
            return platformFaultDomainCount(Output.of(platformFaultDomainCount));
        }

        /**
         * @param resourceGroupName Specifies the name of the resource group the Dedicated Host Group is located in. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName Specifies the name of the resource group the Dedicated Host Group is located in. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        /**
         * @param tags A mapping of tags to assign to the resource.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags A mapping of tags to assign to the resource.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param zone Specifies the Availability Zone in which this Dedicated Host Group should be located. Changing this forces a new Dedicated Host Group to be created.
         * 
         * @return builder
         * 
         */
        public Builder zone(@Nullable Output<String> zone) {
            $.zone = zone;
            return this;
        }

        /**
         * @param zone Specifies the Availability Zone in which this Dedicated Host Group should be located. Changing this forces a new Dedicated Host Group to be created.
         * 
         * @return builder
         * 
         */
        public Builder zone(String zone) {
            return zone(Output.of(zone));
        }

        public DedicatedHostGroupArgs build() {
            if ($.platformFaultDomainCount == null) {
                throw new MissingRequiredPropertyException("DedicatedHostGroupArgs", "platformFaultDomainCount");
            }
            if ($.resourceGroupName == null) {
                throw new MissingRequiredPropertyException("DedicatedHostGroupArgs", "resourceGroupName");
            }
            return $;
        }
    }

}
