// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.management.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class PrivateLinkAssociationState extends com.pulumi.resources.ResourceArgs {

    public static final PrivateLinkAssociationState Empty = new PrivateLinkAssociationState();

    /**
     * Specifies the Management Group ID within which this Private Link Association should exist. Changing this forces a new Private Link Association to be created.
     * 
     * &gt; **Note:** For now, `management_group_id` must be the ID of [Root Management Group](https://learn.microsoft.com/en-us/azure/governance/management-groups/overview#root-management-group-for-each-directory).
     * 
     */
    @Import(name="managementGroupId")
    private @Nullable Output<String> managementGroupId;

    /**
     * @return Specifies the Management Group ID within which this Private Link Association should exist. Changing this forces a new Private Link Association to be created.
     * 
     * &gt; **Note:** For now, `management_group_id` must be the ID of [Root Management Group](https://learn.microsoft.com/en-us/azure/governance/management-groups/overview#root-management-group-for-each-directory).
     * 
     */
    public Optional<Output<String>> managementGroupId() {
        return Optional.ofNullable(this.managementGroupId);
    }

    /**
     * Specifies the name of this Private Link Association, which should be a UUID. If `name` is not provided, a UUID will be generated, you should use the `ignore_changes` attribute to ignore changes to this field. Changing this forces a new Private Link Association to be created.
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azure.management.PrivateLinkAssociation;
     * import com.pulumi.azure.management.PrivateLinkAssociationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var example = new PrivateLinkAssociation(&#34;example&#34;, PrivateLinkAssociationArgs.builder()        
     *             .managementGroupId(azurerm_management_group.example().id())
     *             .resourceManagementPrivateLinkId(azurerm_resource_management_private_link.example().id())
     *             .publicNetworkAccessEnabled(true)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Specifies the name of this Private Link Association, which should be a UUID. If `name` is not provided, a UUID will be generated, you should use the `ignore_changes` attribute to ignore changes to this field. Changing this forces a new Private Link Association to be created.
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azure.management.PrivateLinkAssociation;
     * import com.pulumi.azure.management.PrivateLinkAssociationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var example = new PrivateLinkAssociation(&#34;example&#34;, PrivateLinkAssociationArgs.builder()        
     *             .managementGroupId(azurerm_management_group.example().id())
     *             .resourceManagementPrivateLinkId(azurerm_resource_management_private_link.example().id())
     *             .publicNetworkAccessEnabled(true)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Whether public network access is allowed. Changing this forces a new Private Link Association to be created.
     * 
     */
    @Import(name="publicNetworkAccessEnabled")
    private @Nullable Output<Boolean> publicNetworkAccessEnabled;

    /**
     * @return Whether public network access is allowed. Changing this forces a new Private Link Association to be created.
     * 
     */
    public Optional<Output<Boolean>> publicNetworkAccessEnabled() {
        return Optional.ofNullable(this.publicNetworkAccessEnabled);
    }

    /**
     * The Resource ID of Resource Management Private Link. Changing this forces a new Private Link Association to be created.
     * 
     */
    @Import(name="resourceManagementPrivateLinkId")
    private @Nullable Output<String> resourceManagementPrivateLinkId;

    /**
     * @return The Resource ID of Resource Management Private Link. Changing this forces a new Private Link Association to be created.
     * 
     */
    public Optional<Output<String>> resourceManagementPrivateLinkId() {
        return Optional.ofNullable(this.resourceManagementPrivateLinkId);
    }

    /**
     * The Tenant ID.
     * 
     */
    @Import(name="tenantId")
    private @Nullable Output<String> tenantId;

    /**
     * @return The Tenant ID.
     * 
     */
    public Optional<Output<String>> tenantId() {
        return Optional.ofNullable(this.tenantId);
    }

    private PrivateLinkAssociationState() {}

    private PrivateLinkAssociationState(PrivateLinkAssociationState $) {
        this.managementGroupId = $.managementGroupId;
        this.name = $.name;
        this.publicNetworkAccessEnabled = $.publicNetworkAccessEnabled;
        this.resourceManagementPrivateLinkId = $.resourceManagementPrivateLinkId;
        this.tenantId = $.tenantId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PrivateLinkAssociationState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PrivateLinkAssociationState $;

        public Builder() {
            $ = new PrivateLinkAssociationState();
        }

        public Builder(PrivateLinkAssociationState defaults) {
            $ = new PrivateLinkAssociationState(Objects.requireNonNull(defaults));
        }

        /**
         * @param managementGroupId Specifies the Management Group ID within which this Private Link Association should exist. Changing this forces a new Private Link Association to be created.
         * 
         * &gt; **Note:** For now, `management_group_id` must be the ID of [Root Management Group](https://learn.microsoft.com/en-us/azure/governance/management-groups/overview#root-management-group-for-each-directory).
         * 
         * @return builder
         * 
         */
        public Builder managementGroupId(@Nullable Output<String> managementGroupId) {
            $.managementGroupId = managementGroupId;
            return this;
        }

        /**
         * @param managementGroupId Specifies the Management Group ID within which this Private Link Association should exist. Changing this forces a new Private Link Association to be created.
         * 
         * &gt; **Note:** For now, `management_group_id` must be the ID of [Root Management Group](https://learn.microsoft.com/en-us/azure/governance/management-groups/overview#root-management-group-for-each-directory).
         * 
         * @return builder
         * 
         */
        public Builder managementGroupId(String managementGroupId) {
            return managementGroupId(Output.of(managementGroupId));
        }

        /**
         * @param name Specifies the name of this Private Link Association, which should be a UUID. If `name` is not provided, a UUID will be generated, you should use the `ignore_changes` attribute to ignore changes to this field. Changing this forces a new Private Link Association to be created.
         * ```java
         * package generated_program;
         * 
         * import com.pulumi.Context;
         * import com.pulumi.Pulumi;
         * import com.pulumi.core.Output;
         * import com.pulumi.azure.management.PrivateLinkAssociation;
         * import com.pulumi.azure.management.PrivateLinkAssociationArgs;
         * import java.util.List;
         * import java.util.ArrayList;
         * import java.util.Map;
         * import java.io.File;
         * import java.nio.file.Files;
         * import java.nio.file.Paths;
         * 
         * public class App {
         *     public static void main(String[] args) {
         *         Pulumi.run(App::stack);
         *     }
         * 
         *     public static void stack(Context ctx) {
         *         var example = new PrivateLinkAssociation(&#34;example&#34;, PrivateLinkAssociationArgs.builder()        
         *             .managementGroupId(azurerm_management_group.example().id())
         *             .resourceManagementPrivateLinkId(azurerm_resource_management_private_link.example().id())
         *             .publicNetworkAccessEnabled(true)
         *             .build());
         * 
         *     }
         * }
         * ```
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Specifies the name of this Private Link Association, which should be a UUID. If `name` is not provided, a UUID will be generated, you should use the `ignore_changes` attribute to ignore changes to this field. Changing this forces a new Private Link Association to be created.
         * ```java
         * package generated_program;
         * 
         * import com.pulumi.Context;
         * import com.pulumi.Pulumi;
         * import com.pulumi.core.Output;
         * import com.pulumi.azure.management.PrivateLinkAssociation;
         * import com.pulumi.azure.management.PrivateLinkAssociationArgs;
         * import java.util.List;
         * import java.util.ArrayList;
         * import java.util.Map;
         * import java.io.File;
         * import java.nio.file.Files;
         * import java.nio.file.Paths;
         * 
         * public class App {
         *     public static void main(String[] args) {
         *         Pulumi.run(App::stack);
         *     }
         * 
         *     public static void stack(Context ctx) {
         *         var example = new PrivateLinkAssociation(&#34;example&#34;, PrivateLinkAssociationArgs.builder()        
         *             .managementGroupId(azurerm_management_group.example().id())
         *             .resourceManagementPrivateLinkId(azurerm_resource_management_private_link.example().id())
         *             .publicNetworkAccessEnabled(true)
         *             .build());
         * 
         *     }
         * }
         * ```
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param publicNetworkAccessEnabled Whether public network access is allowed. Changing this forces a new Private Link Association to be created.
         * 
         * @return builder
         * 
         */
        public Builder publicNetworkAccessEnabled(@Nullable Output<Boolean> publicNetworkAccessEnabled) {
            $.publicNetworkAccessEnabled = publicNetworkAccessEnabled;
            return this;
        }

        /**
         * @param publicNetworkAccessEnabled Whether public network access is allowed. Changing this forces a new Private Link Association to be created.
         * 
         * @return builder
         * 
         */
        public Builder publicNetworkAccessEnabled(Boolean publicNetworkAccessEnabled) {
            return publicNetworkAccessEnabled(Output.of(publicNetworkAccessEnabled));
        }

        /**
         * @param resourceManagementPrivateLinkId The Resource ID of Resource Management Private Link. Changing this forces a new Private Link Association to be created.
         * 
         * @return builder
         * 
         */
        public Builder resourceManagementPrivateLinkId(@Nullable Output<String> resourceManagementPrivateLinkId) {
            $.resourceManagementPrivateLinkId = resourceManagementPrivateLinkId;
            return this;
        }

        /**
         * @param resourceManagementPrivateLinkId The Resource ID of Resource Management Private Link. Changing this forces a new Private Link Association to be created.
         * 
         * @return builder
         * 
         */
        public Builder resourceManagementPrivateLinkId(String resourceManagementPrivateLinkId) {
            return resourceManagementPrivateLinkId(Output.of(resourceManagementPrivateLinkId));
        }

        /**
         * @param tenantId The Tenant ID.
         * 
         * @return builder
         * 
         */
        public Builder tenantId(@Nullable Output<String> tenantId) {
            $.tenantId = tenantId;
            return this;
        }

        /**
         * @param tenantId The Tenant ID.
         * 
         * @return builder
         * 
         */
        public Builder tenantId(String tenantId) {
            return tenantId(Output.of(tenantId));
        }

        public PrivateLinkAssociationState build() {
            return $;
        }
    }

}
