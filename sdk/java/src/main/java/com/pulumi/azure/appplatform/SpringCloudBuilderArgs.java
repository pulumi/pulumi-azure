// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.appplatform;

import com.pulumi.azure.appplatform.inputs.SpringCloudBuilderBuildPackGroupArgs;
import com.pulumi.azure.appplatform.inputs.SpringCloudBuilderStackArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SpringCloudBuilderArgs extends com.pulumi.resources.ResourceArgs {

    public static final SpringCloudBuilderArgs Empty = new SpringCloudBuilderArgs();

    /**
     * One or more `build_pack_group` blocks as defined below.
     * 
     */
    @Import(name="buildPackGroups", required=true)
    private Output<List<SpringCloudBuilderBuildPackGroupArgs>> buildPackGroups;

    /**
     * @return One or more `build_pack_group` blocks as defined below.
     * 
     */
    public Output<List<SpringCloudBuilderBuildPackGroupArgs>> buildPackGroups() {
        return this.buildPackGroups;
    }

    /**
     * The name which should be used for this Spring Cloud Builder. Changing this forces a new Spring Cloud Builder to be created.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name which should be used for this Spring Cloud Builder. Changing this forces a new Spring Cloud Builder to be created.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The ID of the Spring Cloud Service. Changing this forces a new Spring Cloud Builder to be created.
     * 
     */
    @Import(name="springCloudServiceId", required=true)
    private Output<String> springCloudServiceId;

    /**
     * @return The ID of the Spring Cloud Service. Changing this forces a new Spring Cloud Builder to be created.
     * 
     */
    public Output<String> springCloudServiceId() {
        return this.springCloudServiceId;
    }

    /**
     * A `stack` block as defined below.
     * 
     */
    @Import(name="stack", required=true)
    private Output<SpringCloudBuilderStackArgs> stack;

    /**
     * @return A `stack` block as defined below.
     * 
     */
    public Output<SpringCloudBuilderStackArgs> stack() {
        return this.stack;
    }

    private SpringCloudBuilderArgs() {}

    private SpringCloudBuilderArgs(SpringCloudBuilderArgs $) {
        this.buildPackGroups = $.buildPackGroups;
        this.name = $.name;
        this.springCloudServiceId = $.springCloudServiceId;
        this.stack = $.stack;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SpringCloudBuilderArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SpringCloudBuilderArgs $;

        public Builder() {
            $ = new SpringCloudBuilderArgs();
        }

        public Builder(SpringCloudBuilderArgs defaults) {
            $ = new SpringCloudBuilderArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param buildPackGroups One or more `build_pack_group` blocks as defined below.
         * 
         * @return builder
         * 
         */
        public Builder buildPackGroups(Output<List<SpringCloudBuilderBuildPackGroupArgs>> buildPackGroups) {
            $.buildPackGroups = buildPackGroups;
            return this;
        }

        /**
         * @param buildPackGroups One or more `build_pack_group` blocks as defined below.
         * 
         * @return builder
         * 
         */
        public Builder buildPackGroups(List<SpringCloudBuilderBuildPackGroupArgs> buildPackGroups) {
            return buildPackGroups(Output.of(buildPackGroups));
        }

        /**
         * @param buildPackGroups One or more `build_pack_group` blocks as defined below.
         * 
         * @return builder
         * 
         */
        public Builder buildPackGroups(SpringCloudBuilderBuildPackGroupArgs... buildPackGroups) {
            return buildPackGroups(List.of(buildPackGroups));
        }

        /**
         * @param name The name which should be used for this Spring Cloud Builder. Changing this forces a new Spring Cloud Builder to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name which should be used for this Spring Cloud Builder. Changing this forces a new Spring Cloud Builder to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param springCloudServiceId The ID of the Spring Cloud Service. Changing this forces a new Spring Cloud Builder to be created.
         * 
         * @return builder
         * 
         */
        public Builder springCloudServiceId(Output<String> springCloudServiceId) {
            $.springCloudServiceId = springCloudServiceId;
            return this;
        }

        /**
         * @param springCloudServiceId The ID of the Spring Cloud Service. Changing this forces a new Spring Cloud Builder to be created.
         * 
         * @return builder
         * 
         */
        public Builder springCloudServiceId(String springCloudServiceId) {
            return springCloudServiceId(Output.of(springCloudServiceId));
        }

        /**
         * @param stack A `stack` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder stack(Output<SpringCloudBuilderStackArgs> stack) {
            $.stack = stack;
            return this;
        }

        /**
         * @param stack A `stack` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder stack(SpringCloudBuilderStackArgs stack) {
            return stack(Output.of(stack));
        }

        public SpringCloudBuilderArgs build() {
            if ($.buildPackGroups == null) {
                throw new MissingRequiredPropertyException("SpringCloudBuilderArgs", "buildPackGroups");
            }
            if ($.springCloudServiceId == null) {
                throw new MissingRequiredPropertyException("SpringCloudBuilderArgs", "springCloudServiceId");
            }
            if ($.stack == null) {
                throw new MissingRequiredPropertyException("SpringCloudBuilderArgs", "stack");
            }
            return $;
        }
    }

}
