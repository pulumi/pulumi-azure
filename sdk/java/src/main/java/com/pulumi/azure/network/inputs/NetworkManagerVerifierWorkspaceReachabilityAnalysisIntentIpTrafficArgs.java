// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.network.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class NetworkManagerVerifierWorkspaceReachabilityAnalysisIntentIpTrafficArgs extends com.pulumi.resources.ResourceArgs {

    public static final NetworkManagerVerifierWorkspaceReachabilityAnalysisIntentIpTrafficArgs Empty = new NetworkManagerVerifierWorkspaceReachabilityAnalysisIntentIpTrafficArgs();

    /**
     * Specifies a list of IPv4 or IPv6 addresses or ranges using CIDR notation of the source you want to verify. Changing this forces a new Network Manager Verifier Workspace Reachability Analysis Intent to be created.
     * 
     */
    @Import(name="destinationIps", required=true)
    private Output<List<String>> destinationIps;

    /**
     * @return Specifies a list of IPv4 or IPv6 addresses or ranges using CIDR notation of the source you want to verify. Changing this forces a new Network Manager Verifier Workspace Reachability Analysis Intent to be created.
     * 
     */
    public Output<List<String>> destinationIps() {
        return this.destinationIps;
    }

    /**
     * Specifies a list of ports or ranges of the destination you want to verify. To specify any port, use `[&#34;*&#34;]`. Changing this forces a new Network Manager Verifier Workspace Reachability Analysis Intent to be created.
     * 
     */
    @Import(name="destinationPorts", required=true)
    private Output<List<String>> destinationPorts;

    /**
     * @return Specifies a list of ports or ranges of the destination you want to verify. To specify any port, use `[&#34;*&#34;]`. Changing this forces a new Network Manager Verifier Workspace Reachability Analysis Intent to be created.
     * 
     */
    public Output<List<String>> destinationPorts() {
        return this.destinationPorts;
    }

    /**
     * Specifies a list of network protocols. Possible values are `Any`, `TCP`, `UDP` and `ICMP`. Changing this forces a new Network Manager Verifier Workspace Reachability Analysis Intent to be created.
     * 
     */
    @Import(name="protocols", required=true)
    private Output<List<String>> protocols;

    /**
     * @return Specifies a list of network protocols. Possible values are `Any`, `TCP`, `UDP` and `ICMP`. Changing this forces a new Network Manager Verifier Workspace Reachability Analysis Intent to be created.
     * 
     */
    public Output<List<String>> protocols() {
        return this.protocols;
    }

    /**
     * Specifies a list of IPv4 or IPv6 addresses or ranges using CIDR notation of the source you want to verify. Changing this forces a new Network Manager Verifier Workspace Reachability Analysis Intent to be created.
     * 
     */
    @Import(name="sourceIps", required=true)
    private Output<List<String>> sourceIps;

    /**
     * @return Specifies a list of IPv4 or IPv6 addresses or ranges using CIDR notation of the source you want to verify. Changing this forces a new Network Manager Verifier Workspace Reachability Analysis Intent to be created.
     * 
     */
    public Output<List<String>> sourceIps() {
        return this.sourceIps;
    }

    /**
     * Specifies a list of ports or ranges of the source you want to verify. To specify any port, use `[&#34;*&#34;]`. Changing this forces a new Network Manager Verifier Workspace Reachability Analysis Intent to be created.
     * 
     */
    @Import(name="sourcePorts", required=true)
    private Output<List<String>> sourcePorts;

    /**
     * @return Specifies a list of ports or ranges of the source you want to verify. To specify any port, use `[&#34;*&#34;]`. Changing this forces a new Network Manager Verifier Workspace Reachability Analysis Intent to be created.
     * 
     */
    public Output<List<String>> sourcePorts() {
        return this.sourcePorts;
    }

    private NetworkManagerVerifierWorkspaceReachabilityAnalysisIntentIpTrafficArgs() {}

    private NetworkManagerVerifierWorkspaceReachabilityAnalysisIntentIpTrafficArgs(NetworkManagerVerifierWorkspaceReachabilityAnalysisIntentIpTrafficArgs $) {
        this.destinationIps = $.destinationIps;
        this.destinationPorts = $.destinationPorts;
        this.protocols = $.protocols;
        this.sourceIps = $.sourceIps;
        this.sourcePorts = $.sourcePorts;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(NetworkManagerVerifierWorkspaceReachabilityAnalysisIntentIpTrafficArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private NetworkManagerVerifierWorkspaceReachabilityAnalysisIntentIpTrafficArgs $;

        public Builder() {
            $ = new NetworkManagerVerifierWorkspaceReachabilityAnalysisIntentIpTrafficArgs();
        }

        public Builder(NetworkManagerVerifierWorkspaceReachabilityAnalysisIntentIpTrafficArgs defaults) {
            $ = new NetworkManagerVerifierWorkspaceReachabilityAnalysisIntentIpTrafficArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param destinationIps Specifies a list of IPv4 or IPv6 addresses or ranges using CIDR notation of the source you want to verify. Changing this forces a new Network Manager Verifier Workspace Reachability Analysis Intent to be created.
         * 
         * @return builder
         * 
         */
        public Builder destinationIps(Output<List<String>> destinationIps) {
            $.destinationIps = destinationIps;
            return this;
        }

        /**
         * @param destinationIps Specifies a list of IPv4 or IPv6 addresses or ranges using CIDR notation of the source you want to verify. Changing this forces a new Network Manager Verifier Workspace Reachability Analysis Intent to be created.
         * 
         * @return builder
         * 
         */
        public Builder destinationIps(List<String> destinationIps) {
            return destinationIps(Output.of(destinationIps));
        }

        /**
         * @param destinationIps Specifies a list of IPv4 or IPv6 addresses or ranges using CIDR notation of the source you want to verify. Changing this forces a new Network Manager Verifier Workspace Reachability Analysis Intent to be created.
         * 
         * @return builder
         * 
         */
        public Builder destinationIps(String... destinationIps) {
            return destinationIps(List.of(destinationIps));
        }

        /**
         * @param destinationPorts Specifies a list of ports or ranges of the destination you want to verify. To specify any port, use `[&#34;*&#34;]`. Changing this forces a new Network Manager Verifier Workspace Reachability Analysis Intent to be created.
         * 
         * @return builder
         * 
         */
        public Builder destinationPorts(Output<List<String>> destinationPorts) {
            $.destinationPorts = destinationPorts;
            return this;
        }

        /**
         * @param destinationPorts Specifies a list of ports or ranges of the destination you want to verify. To specify any port, use `[&#34;*&#34;]`. Changing this forces a new Network Manager Verifier Workspace Reachability Analysis Intent to be created.
         * 
         * @return builder
         * 
         */
        public Builder destinationPorts(List<String> destinationPorts) {
            return destinationPorts(Output.of(destinationPorts));
        }

        /**
         * @param destinationPorts Specifies a list of ports or ranges of the destination you want to verify. To specify any port, use `[&#34;*&#34;]`. Changing this forces a new Network Manager Verifier Workspace Reachability Analysis Intent to be created.
         * 
         * @return builder
         * 
         */
        public Builder destinationPorts(String... destinationPorts) {
            return destinationPorts(List.of(destinationPorts));
        }

        /**
         * @param protocols Specifies a list of network protocols. Possible values are `Any`, `TCP`, `UDP` and `ICMP`. Changing this forces a new Network Manager Verifier Workspace Reachability Analysis Intent to be created.
         * 
         * @return builder
         * 
         */
        public Builder protocols(Output<List<String>> protocols) {
            $.protocols = protocols;
            return this;
        }

        /**
         * @param protocols Specifies a list of network protocols. Possible values are `Any`, `TCP`, `UDP` and `ICMP`. Changing this forces a new Network Manager Verifier Workspace Reachability Analysis Intent to be created.
         * 
         * @return builder
         * 
         */
        public Builder protocols(List<String> protocols) {
            return protocols(Output.of(protocols));
        }

        /**
         * @param protocols Specifies a list of network protocols. Possible values are `Any`, `TCP`, `UDP` and `ICMP`. Changing this forces a new Network Manager Verifier Workspace Reachability Analysis Intent to be created.
         * 
         * @return builder
         * 
         */
        public Builder protocols(String... protocols) {
            return protocols(List.of(protocols));
        }

        /**
         * @param sourceIps Specifies a list of IPv4 or IPv6 addresses or ranges using CIDR notation of the source you want to verify. Changing this forces a new Network Manager Verifier Workspace Reachability Analysis Intent to be created.
         * 
         * @return builder
         * 
         */
        public Builder sourceIps(Output<List<String>> sourceIps) {
            $.sourceIps = sourceIps;
            return this;
        }

        /**
         * @param sourceIps Specifies a list of IPv4 or IPv6 addresses or ranges using CIDR notation of the source you want to verify. Changing this forces a new Network Manager Verifier Workspace Reachability Analysis Intent to be created.
         * 
         * @return builder
         * 
         */
        public Builder sourceIps(List<String> sourceIps) {
            return sourceIps(Output.of(sourceIps));
        }

        /**
         * @param sourceIps Specifies a list of IPv4 or IPv6 addresses or ranges using CIDR notation of the source you want to verify. Changing this forces a new Network Manager Verifier Workspace Reachability Analysis Intent to be created.
         * 
         * @return builder
         * 
         */
        public Builder sourceIps(String... sourceIps) {
            return sourceIps(List.of(sourceIps));
        }

        /**
         * @param sourcePorts Specifies a list of ports or ranges of the source you want to verify. To specify any port, use `[&#34;*&#34;]`. Changing this forces a new Network Manager Verifier Workspace Reachability Analysis Intent to be created.
         * 
         * @return builder
         * 
         */
        public Builder sourcePorts(Output<List<String>> sourcePorts) {
            $.sourcePorts = sourcePorts;
            return this;
        }

        /**
         * @param sourcePorts Specifies a list of ports or ranges of the source you want to verify. To specify any port, use `[&#34;*&#34;]`. Changing this forces a new Network Manager Verifier Workspace Reachability Analysis Intent to be created.
         * 
         * @return builder
         * 
         */
        public Builder sourcePorts(List<String> sourcePorts) {
            return sourcePorts(Output.of(sourcePorts));
        }

        /**
         * @param sourcePorts Specifies a list of ports or ranges of the source you want to verify. To specify any port, use `[&#34;*&#34;]`. Changing this forces a new Network Manager Verifier Workspace Reachability Analysis Intent to be created.
         * 
         * @return builder
         * 
         */
        public Builder sourcePorts(String... sourcePorts) {
            return sourcePorts(List.of(sourcePorts));
        }

        public NetworkManagerVerifierWorkspaceReachabilityAnalysisIntentIpTrafficArgs build() {
            if ($.destinationIps == null) {
                throw new MissingRequiredPropertyException("NetworkManagerVerifierWorkspaceReachabilityAnalysisIntentIpTrafficArgs", "destinationIps");
            }
            if ($.destinationPorts == null) {
                throw new MissingRequiredPropertyException("NetworkManagerVerifierWorkspaceReachabilityAnalysisIntentIpTrafficArgs", "destinationPorts");
            }
            if ($.protocols == null) {
                throw new MissingRequiredPropertyException("NetworkManagerVerifierWorkspaceReachabilityAnalysisIntentIpTrafficArgs", "protocols");
            }
            if ($.sourceIps == null) {
                throw new MissingRequiredPropertyException("NetworkManagerVerifierWorkspaceReachabilityAnalysisIntentIpTrafficArgs", "sourceIps");
            }
            if ($.sourcePorts == null) {
                throw new MissingRequiredPropertyException("NetworkManagerVerifierWorkspaceReachabilityAnalysisIntentIpTrafficArgs", "sourcePorts");
            }
            return $;
        }
    }

}
