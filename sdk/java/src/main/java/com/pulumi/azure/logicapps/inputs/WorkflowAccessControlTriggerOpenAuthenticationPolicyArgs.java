// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.logicapps.inputs;

import com.pulumi.azure.logicapps.inputs.WorkflowAccessControlTriggerOpenAuthenticationPolicyClaimArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class WorkflowAccessControlTriggerOpenAuthenticationPolicyArgs extends com.pulumi.resources.ResourceArgs {

    public static final WorkflowAccessControlTriggerOpenAuthenticationPolicyArgs Empty = new WorkflowAccessControlTriggerOpenAuthenticationPolicyArgs();

    /**
     * A `claim` block as defined below.
     * 
     */
    @Import(name="claims", required=true)
    private Output<List<WorkflowAccessControlTriggerOpenAuthenticationPolicyClaimArgs>> claims;

    /**
     * @return A `claim` block as defined below.
     * 
     */
    public Output<List<WorkflowAccessControlTriggerOpenAuthenticationPolicyClaimArgs>> claims() {
        return this.claims;
    }

    /**
     * The OAuth policy name for the Logic App Workflow.
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    /**
     * @return The OAuth policy name for the Logic App Workflow.
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    private WorkflowAccessControlTriggerOpenAuthenticationPolicyArgs() {}

    private WorkflowAccessControlTriggerOpenAuthenticationPolicyArgs(WorkflowAccessControlTriggerOpenAuthenticationPolicyArgs $) {
        this.claims = $.claims;
        this.name = $.name;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(WorkflowAccessControlTriggerOpenAuthenticationPolicyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private WorkflowAccessControlTriggerOpenAuthenticationPolicyArgs $;

        public Builder() {
            $ = new WorkflowAccessControlTriggerOpenAuthenticationPolicyArgs();
        }

        public Builder(WorkflowAccessControlTriggerOpenAuthenticationPolicyArgs defaults) {
            $ = new WorkflowAccessControlTriggerOpenAuthenticationPolicyArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param claims A `claim` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder claims(Output<List<WorkflowAccessControlTriggerOpenAuthenticationPolicyClaimArgs>> claims) {
            $.claims = claims;
            return this;
        }

        /**
         * @param claims A `claim` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder claims(List<WorkflowAccessControlTriggerOpenAuthenticationPolicyClaimArgs> claims) {
            return claims(Output.of(claims));
        }

        /**
         * @param claims A `claim` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder claims(WorkflowAccessControlTriggerOpenAuthenticationPolicyClaimArgs... claims) {
            return claims(List.of(claims));
        }

        /**
         * @param name The OAuth policy name for the Logic App Workflow.
         * 
         * @return builder
         * 
         */
        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The OAuth policy name for the Logic App Workflow.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        public WorkflowAccessControlTriggerOpenAuthenticationPolicyArgs build() {
            if ($.claims == null) {
                throw new MissingRequiredPropertyException("WorkflowAccessControlTriggerOpenAuthenticationPolicyArgs", "claims");
            }
            if ($.name == null) {
                throw new MissingRequiredPropertyException("WorkflowAccessControlTriggerOpenAuthenticationPolicyArgs", "name");
            }
            return $;
        }
    }

}
