// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.storage.outputs;

import com.pulumi.azure.storage.outputs.AccountBlobPropertiesContainerDeleteRetentionPolicy;
import com.pulumi.azure.storage.outputs.AccountBlobPropertiesCorsRule;
import com.pulumi.azure.storage.outputs.AccountBlobPropertiesDeleteRetentionPolicy;
import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class AccountBlobProperties {
    /**
     * @return Is the blob service properties for change feed events enabled? Default to `false`.
     * 
     */
    private final @Nullable Boolean changeFeedEnabled;
    /**
     * @return The duration of change feed events retention in days. The possible values are between 1 and 146000 days (400 years). Setting this to null (or omit this in the configuration file) indicates an infinite retention of the change feed.
     * 
     */
    private final @Nullable Integer changeFeedRetentionInDays;
    /**
     * @return A `container_delete_retention_policy` block as defined below.
     * 
     */
    private final @Nullable AccountBlobPropertiesContainerDeleteRetentionPolicy containerDeleteRetentionPolicy;
    /**
     * @return A `cors_rule` block as defined below.
     * 
     */
    private final @Nullable List<AccountBlobPropertiesCorsRule> corsRules;
    /**
     * @return The API Version which should be used by default for requests to the Data Plane API if an incoming request doesn&#39;t specify an API Version. Defaults to `2020-06-12`.
     * 
     */
    private final @Nullable String defaultServiceVersion;
    /**
     * @return A `delete_retention_policy` block as defined below.
     * 
     */
    private final @Nullable AccountBlobPropertiesDeleteRetentionPolicy deleteRetentionPolicy;
    /**
     * @return Is the last access time based tracking enabled? Default to `false`.
     * 
     */
    private final @Nullable Boolean lastAccessTimeEnabled;
    /**
     * @return Is versioning enabled? Default to `false`.
     * 
     */
    private final @Nullable Boolean versioningEnabled;

    @CustomType.Constructor
    private AccountBlobProperties(
        @CustomType.Parameter("changeFeedEnabled") @Nullable Boolean changeFeedEnabled,
        @CustomType.Parameter("changeFeedRetentionInDays") @Nullable Integer changeFeedRetentionInDays,
        @CustomType.Parameter("containerDeleteRetentionPolicy") @Nullable AccountBlobPropertiesContainerDeleteRetentionPolicy containerDeleteRetentionPolicy,
        @CustomType.Parameter("corsRules") @Nullable List<AccountBlobPropertiesCorsRule> corsRules,
        @CustomType.Parameter("defaultServiceVersion") @Nullable String defaultServiceVersion,
        @CustomType.Parameter("deleteRetentionPolicy") @Nullable AccountBlobPropertiesDeleteRetentionPolicy deleteRetentionPolicy,
        @CustomType.Parameter("lastAccessTimeEnabled") @Nullable Boolean lastAccessTimeEnabled,
        @CustomType.Parameter("versioningEnabled") @Nullable Boolean versioningEnabled) {
        this.changeFeedEnabled = changeFeedEnabled;
        this.changeFeedRetentionInDays = changeFeedRetentionInDays;
        this.containerDeleteRetentionPolicy = containerDeleteRetentionPolicy;
        this.corsRules = corsRules;
        this.defaultServiceVersion = defaultServiceVersion;
        this.deleteRetentionPolicy = deleteRetentionPolicy;
        this.lastAccessTimeEnabled = lastAccessTimeEnabled;
        this.versioningEnabled = versioningEnabled;
    }

    /**
     * @return Is the blob service properties for change feed events enabled? Default to `false`.
     * 
     */
    public Optional<Boolean> changeFeedEnabled() {
        return Optional.ofNullable(this.changeFeedEnabled);
    }
    /**
     * @return The duration of change feed events retention in days. The possible values are between 1 and 146000 days (400 years). Setting this to null (or omit this in the configuration file) indicates an infinite retention of the change feed.
     * 
     */
    public Optional<Integer> changeFeedRetentionInDays() {
        return Optional.ofNullable(this.changeFeedRetentionInDays);
    }
    /**
     * @return A `container_delete_retention_policy` block as defined below.
     * 
     */
    public Optional<AccountBlobPropertiesContainerDeleteRetentionPolicy> containerDeleteRetentionPolicy() {
        return Optional.ofNullable(this.containerDeleteRetentionPolicy);
    }
    /**
     * @return A `cors_rule` block as defined below.
     * 
     */
    public List<AccountBlobPropertiesCorsRule> corsRules() {
        return this.corsRules == null ? List.of() : this.corsRules;
    }
    /**
     * @return The API Version which should be used by default for requests to the Data Plane API if an incoming request doesn&#39;t specify an API Version. Defaults to `2020-06-12`.
     * 
     */
    public Optional<String> defaultServiceVersion() {
        return Optional.ofNullable(this.defaultServiceVersion);
    }
    /**
     * @return A `delete_retention_policy` block as defined below.
     * 
     */
    public Optional<AccountBlobPropertiesDeleteRetentionPolicy> deleteRetentionPolicy() {
        return Optional.ofNullable(this.deleteRetentionPolicy);
    }
    /**
     * @return Is the last access time based tracking enabled? Default to `false`.
     * 
     */
    public Optional<Boolean> lastAccessTimeEnabled() {
        return Optional.ofNullable(this.lastAccessTimeEnabled);
    }
    /**
     * @return Is versioning enabled? Default to `false`.
     * 
     */
    public Optional<Boolean> versioningEnabled() {
        return Optional.ofNullable(this.versioningEnabled);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AccountBlobProperties defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Boolean changeFeedEnabled;
        private @Nullable Integer changeFeedRetentionInDays;
        private @Nullable AccountBlobPropertiesContainerDeleteRetentionPolicy containerDeleteRetentionPolicy;
        private @Nullable List<AccountBlobPropertiesCorsRule> corsRules;
        private @Nullable String defaultServiceVersion;
        private @Nullable AccountBlobPropertiesDeleteRetentionPolicy deleteRetentionPolicy;
        private @Nullable Boolean lastAccessTimeEnabled;
        private @Nullable Boolean versioningEnabled;

        public Builder() {
    	      // Empty
        }

        public Builder(AccountBlobProperties defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.changeFeedEnabled = defaults.changeFeedEnabled;
    	      this.changeFeedRetentionInDays = defaults.changeFeedRetentionInDays;
    	      this.containerDeleteRetentionPolicy = defaults.containerDeleteRetentionPolicy;
    	      this.corsRules = defaults.corsRules;
    	      this.defaultServiceVersion = defaults.defaultServiceVersion;
    	      this.deleteRetentionPolicy = defaults.deleteRetentionPolicy;
    	      this.lastAccessTimeEnabled = defaults.lastAccessTimeEnabled;
    	      this.versioningEnabled = defaults.versioningEnabled;
        }

        public Builder changeFeedEnabled(@Nullable Boolean changeFeedEnabled) {
            this.changeFeedEnabled = changeFeedEnabled;
            return this;
        }
        public Builder changeFeedRetentionInDays(@Nullable Integer changeFeedRetentionInDays) {
            this.changeFeedRetentionInDays = changeFeedRetentionInDays;
            return this;
        }
        public Builder containerDeleteRetentionPolicy(@Nullable AccountBlobPropertiesContainerDeleteRetentionPolicy containerDeleteRetentionPolicy) {
            this.containerDeleteRetentionPolicy = containerDeleteRetentionPolicy;
            return this;
        }
        public Builder corsRules(@Nullable List<AccountBlobPropertiesCorsRule> corsRules) {
            this.corsRules = corsRules;
            return this;
        }
        public Builder corsRules(AccountBlobPropertiesCorsRule... corsRules) {
            return corsRules(List.of(corsRules));
        }
        public Builder defaultServiceVersion(@Nullable String defaultServiceVersion) {
            this.defaultServiceVersion = defaultServiceVersion;
            return this;
        }
        public Builder deleteRetentionPolicy(@Nullable AccountBlobPropertiesDeleteRetentionPolicy deleteRetentionPolicy) {
            this.deleteRetentionPolicy = deleteRetentionPolicy;
            return this;
        }
        public Builder lastAccessTimeEnabled(@Nullable Boolean lastAccessTimeEnabled) {
            this.lastAccessTimeEnabled = lastAccessTimeEnabled;
            return this;
        }
        public Builder versioningEnabled(@Nullable Boolean versioningEnabled) {
            this.versioningEnabled = versioningEnabled;
            return this;
        }        public AccountBlobProperties build() {
            return new AccountBlobProperties(changeFeedEnabled, changeFeedRetentionInDays, containerDeleteRetentionPolicy, corsRules, defaultServiceVersion, deleteRetentionPolicy, lastAccessTimeEnabled, versioningEnabled);
        }
    }
}
