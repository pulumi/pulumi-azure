// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.dataprotection;

import com.pulumi.azure.Utilities;
import com.pulumi.azure.dataprotection.BackupInstanceMysqlFlexibleServerArgs;
import com.pulumi.azure.dataprotection.inputs.BackupInstanceMysqlFlexibleServerState;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import javax.annotation.Nullable;

/**
 * Manages a Backup Instance to back up MySQL Flexible Server.
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.azure.core.ResourceGroup;
 * import com.pulumi.azure.core.ResourceGroupArgs;
 * import com.pulumi.azure.mysql.FlexibleServer;
 * import com.pulumi.azure.mysql.FlexibleServerArgs;
 * import com.pulumi.azure.dataprotection.BackupVault;
 * import com.pulumi.azure.dataprotection.BackupVaultArgs;
 * import com.pulumi.azure.dataprotection.inputs.BackupVaultIdentityArgs;
 * import com.pulumi.azure.authorization.Assignment;
 * import com.pulumi.azure.authorization.AssignmentArgs;
 * import com.pulumi.azure.dataprotection.BackupPolicyMysqlFlexibleServer;
 * import com.pulumi.azure.dataprotection.BackupPolicyMysqlFlexibleServerArgs;
 * import com.pulumi.azure.dataprotection.inputs.BackupPolicyMysqlFlexibleServerDefaultRetentionRuleArgs;
 * import com.pulumi.azure.dataprotection.BackupInstanceMysqlFlexibleServer;
 * import com.pulumi.azure.dataprotection.BackupInstanceMysqlFlexibleServerArgs;
 * import com.pulumi.resources.CustomResourceOptions;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new ResourceGroup("example", ResourceGroupArgs.builder()
 *             .name("example-resources")
 *             .location("West Europe")
 *             .build());
 * 
 *         var exampleFlexibleServer = new FlexibleServer("exampleFlexibleServer", FlexibleServerArgs.builder()
 *             .name("example-mysqlfs")
 *             .resourceGroupName(example.name())
 *             .location(example.location())
 *             .administratorLogin("adminTerraform")
 *             .administratorPassword("QAZwsx123")
 *             .version("8.0.21")
 *             .skuName("B_Standard_B1s")
 *             .zone("1")
 *             .build());
 * 
 *         var exampleBackupVault = new BackupVault("exampleBackupVault", BackupVaultArgs.builder()
 *             .name("example-backupvault")
 *             .resourceGroupName(example.name())
 *             .location(example.location())
 *             .datastoreType("VaultStore")
 *             .redundancy("LocallyRedundant")
 *             .softDelete("Off")
 *             .identity(BackupVaultIdentityArgs.builder()
 *                 .type("SystemAssigned")
 *                 .build())
 *             .build());
 * 
 *         var exampleAssignment = new Assignment("exampleAssignment", AssignmentArgs.builder()
 *             .scope(example.id())
 *             .roleDefinitionName("Reader")
 *             .principalId(exampleBackupVault.identity().applyValue(identity -> identity.principalId()))
 *             .build());
 * 
 *         var example2 = new Assignment("example2", AssignmentArgs.builder()
 *             .scope(exampleFlexibleServer.id())
 *             .roleDefinitionName("MySQL Backup And Export Operator")
 *             .principalId(exampleBackupVault.identity().applyValue(identity -> identity.principalId()))
 *             .build());
 * 
 *         var exampleBackupPolicyMysqlFlexibleServer = new BackupPolicyMysqlFlexibleServer("exampleBackupPolicyMysqlFlexibleServer", BackupPolicyMysqlFlexibleServerArgs.builder()
 *             .name("example-dp")
 *             .vaultId(exampleBackupVault.id())
 *             .backupRepeatingTimeIntervals("R/2021-05-23T02:30:00+00:00/P1W")
 *             .defaultRetentionRule(BackupPolicyMysqlFlexibleServerDefaultRetentionRuleArgs.builder()
 *                 .lifeCycles(BackupPolicyMysqlFlexibleServerDefaultRetentionRuleLifeCycleArgs.builder()
 *                     .duration("P4M")
 *                     .dataStoreType("VaultStore")
 *                     .build())
 *                 .build())
 *             .build(), CustomResourceOptions.builder()
 *                 .dependsOn(                
 *                     exampleAssignment,
 *                     example2)
 *                 .build());
 * 
 *         var exampleBackupInstanceMysqlFlexibleServer = new BackupInstanceMysqlFlexibleServer("exampleBackupInstanceMysqlFlexibleServer", BackupInstanceMysqlFlexibleServerArgs.builder()
 *             .name("example-dbi")
 *             .location(example.location())
 *             .vaultId(exampleBackupVault.id())
 *             .serverId(exampleFlexibleServer.id())
 *             .backupPolicyId(exampleBackupPolicyMysqlFlexibleServer.id())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * Backup Instance MySQL Flexible Servers can be imported using the `resource id`, e.g.
 * 
 * ```sh
 * $ pulumi import azure:dataprotection/backupInstanceMysqlFlexibleServer:BackupInstanceMysqlFlexibleServer example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.DataProtection/backupVaults/vault1/backupInstances/backupInstance1
 * ```
 * 
 */
@ResourceType(type="azure:dataprotection/backupInstanceMysqlFlexibleServer:BackupInstanceMysqlFlexibleServer")
public class BackupInstanceMysqlFlexibleServer extends com.pulumi.resources.CustomResource {
    /**
     * The ID of the Backup Policy.
     * 
     */
    @Export(name="backupPolicyId", refs={String.class}, tree="[0]")
    private Output<String> backupPolicyId;

    /**
     * @return The ID of the Backup Policy.
     * 
     */
    public Output<String> backupPolicyId() {
        return this.backupPolicyId;
    }
    /**
     * The location of the source database. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="location", refs={String.class}, tree="[0]")
    private Output<String> location;

    /**
     * @return The location of the source database. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> location() {
        return this.location;
    }
    /**
     * Specifies the name of the Backup Instance for the MySQL Flexible Server. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return Specifies the name of the Backup Instance for the MySQL Flexible Server. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The ID of the source server. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="serverId", refs={String.class}, tree="[0]")
    private Output<String> serverId;

    /**
     * @return The ID of the source server. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> serverId() {
        return this.serverId;
    }
    /**
     * The ID of the Backup Vault within which the MySQL Flexible Server Backup Instance should exist. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="vaultId", refs={String.class}, tree="[0]")
    private Output<String> vaultId;

    /**
     * @return The ID of the Backup Vault within which the MySQL Flexible Server Backup Instance should exist. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> vaultId() {
        return this.vaultId;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public BackupInstanceMysqlFlexibleServer(java.lang.String name) {
        this(name, BackupInstanceMysqlFlexibleServerArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public BackupInstanceMysqlFlexibleServer(java.lang.String name, BackupInstanceMysqlFlexibleServerArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public BackupInstanceMysqlFlexibleServer(java.lang.String name, BackupInstanceMysqlFlexibleServerArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:dataprotection/backupInstanceMysqlFlexibleServer:BackupInstanceMysqlFlexibleServer", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private BackupInstanceMysqlFlexibleServer(java.lang.String name, Output<java.lang.String> id, @Nullable BackupInstanceMysqlFlexibleServerState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:dataprotection/backupInstanceMysqlFlexibleServer:BackupInstanceMysqlFlexibleServer", name, state, makeResourceOptions(options, id), false);
    }

    private static BackupInstanceMysqlFlexibleServerArgs makeArgs(BackupInstanceMysqlFlexibleServerArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? BackupInstanceMysqlFlexibleServerArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static BackupInstanceMysqlFlexibleServer get(java.lang.String name, Output<java.lang.String> id, @Nullable BackupInstanceMysqlFlexibleServerState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new BackupInstanceMysqlFlexibleServer(name, id, state, options);
    }
}
