// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.monitoring.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class DataCollectionRuleDataFlow {
    /**
     * @return Specifies a list of destination names. A `azure_monitor_metrics` data source only allows for stream of kind `Microsoft-InsightsMetrics`.
     * 
     */
    private final List<String> destinations;
    /**
     * @return Specifies a list of streams. Possible values are `Microsoft-Event`, `Microsoft-InsightsMetrics`, `Microsoft-Perf`, `Microsoft-Syslog`,and `Microsoft-WindowsEvent`.
     * 
     */
    private final List<String> streams;

    @CustomType.Constructor
    private DataCollectionRuleDataFlow(
        @CustomType.Parameter("destinations") List<String> destinations,
        @CustomType.Parameter("streams") List<String> streams) {
        this.destinations = destinations;
        this.streams = streams;
    }

    /**
     * @return Specifies a list of destination names. A `azure_monitor_metrics` data source only allows for stream of kind `Microsoft-InsightsMetrics`.
     * 
     */
    public List<String> destinations() {
        return this.destinations;
    }
    /**
     * @return Specifies a list of streams. Possible values are `Microsoft-Event`, `Microsoft-InsightsMetrics`, `Microsoft-Perf`, `Microsoft-Syslog`,and `Microsoft-WindowsEvent`.
     * 
     */
    public List<String> streams() {
        return this.streams;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DataCollectionRuleDataFlow defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private List<String> destinations;
        private List<String> streams;

        public Builder() {
    	      // Empty
        }

        public Builder(DataCollectionRuleDataFlow defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.destinations = defaults.destinations;
    	      this.streams = defaults.streams;
        }

        public Builder destinations(List<String> destinations) {
            this.destinations = Objects.requireNonNull(destinations);
            return this;
        }
        public Builder destinations(String... destinations) {
            return destinations(List.of(destinations));
        }
        public Builder streams(List<String> streams) {
            this.streams = Objects.requireNonNull(streams);
            return this;
        }
        public Builder streams(String... streams) {
            return streams(List.of(streams));
        }        public DataCollectionRuleDataFlow build() {
            return new DataCollectionRuleDataFlow(destinations, streams);
        }
    }
}
