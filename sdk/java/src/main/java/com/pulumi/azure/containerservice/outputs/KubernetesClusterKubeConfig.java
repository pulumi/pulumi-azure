// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.containerservice.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class KubernetesClusterKubeConfig {
    /**
     * @return Base64 encoded public certificate used by clients to authenticate to the Kubernetes cluster.
     * 
     */
    private @Nullable String clientCertificate;
    /**
     * @return Base64 encoded private key used by clients to authenticate to the Kubernetes cluster.
     * 
     */
    private @Nullable String clientKey;
    /**
     * @return Base64 encoded public CA certificate used as the root of trust for the Kubernetes cluster.
     * 
     */
    private @Nullable String clusterCaCertificate;
    /**
     * @return The Kubernetes cluster server host.
     * 
     */
    private @Nullable String host;
    /**
     * @return A password or token used to authenticate to the Kubernetes cluster.
     * 
     */
    private @Nullable String password;
    /**
     * @return A username used to authenticate to the Kubernetes cluster.
     * 
     */
    private @Nullable String username;

    private KubernetesClusterKubeConfig() {}
    /**
     * @return Base64 encoded public certificate used by clients to authenticate to the Kubernetes cluster.
     * 
     */
    public Optional<String> clientCertificate() {
        return Optional.ofNullable(this.clientCertificate);
    }
    /**
     * @return Base64 encoded private key used by clients to authenticate to the Kubernetes cluster.
     * 
     */
    public Optional<String> clientKey() {
        return Optional.ofNullable(this.clientKey);
    }
    /**
     * @return Base64 encoded public CA certificate used as the root of trust for the Kubernetes cluster.
     * 
     */
    public Optional<String> clusterCaCertificate() {
        return Optional.ofNullable(this.clusterCaCertificate);
    }
    /**
     * @return The Kubernetes cluster server host.
     * 
     */
    public Optional<String> host() {
        return Optional.ofNullable(this.host);
    }
    /**
     * @return A password or token used to authenticate to the Kubernetes cluster.
     * 
     */
    public Optional<String> password() {
        return Optional.ofNullable(this.password);
    }
    /**
     * @return A username used to authenticate to the Kubernetes cluster.
     * 
     */
    public Optional<String> username() {
        return Optional.ofNullable(this.username);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(KubernetesClusterKubeConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String clientCertificate;
        private @Nullable String clientKey;
        private @Nullable String clusterCaCertificate;
        private @Nullable String host;
        private @Nullable String password;
        private @Nullable String username;
        public Builder() {}
        public Builder(KubernetesClusterKubeConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.clientCertificate = defaults.clientCertificate;
    	      this.clientKey = defaults.clientKey;
    	      this.clusterCaCertificate = defaults.clusterCaCertificate;
    	      this.host = defaults.host;
    	      this.password = defaults.password;
    	      this.username = defaults.username;
        }

        @CustomType.Setter
        public Builder clientCertificate(@Nullable String clientCertificate) {

            this.clientCertificate = clientCertificate;
            return this;
        }
        @CustomType.Setter
        public Builder clientKey(@Nullable String clientKey) {

            this.clientKey = clientKey;
            return this;
        }
        @CustomType.Setter
        public Builder clusterCaCertificate(@Nullable String clusterCaCertificate) {

            this.clusterCaCertificate = clusterCaCertificate;
            return this;
        }
        @CustomType.Setter
        public Builder host(@Nullable String host) {

            this.host = host;
            return this;
        }
        @CustomType.Setter
        public Builder password(@Nullable String password) {

            this.password = password;
            return this;
        }
        @CustomType.Setter
        public Builder username(@Nullable String username) {

            this.username = username;
            return this;
        }
        public KubernetesClusterKubeConfig build() {
            final var _resultValue = new KubernetesClusterKubeConfig();
            _resultValue.clientCertificate = clientCertificate;
            _resultValue.clientKey = clientKey;
            _resultValue.clusterCaCertificate = clusterCaCertificate;
            _resultValue.host = host;
            _resultValue.password = password;
            _resultValue.username = username;
            return _resultValue;
        }
    }
}
