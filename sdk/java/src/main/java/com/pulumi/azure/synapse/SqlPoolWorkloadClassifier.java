// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.synapse;

import com.pulumi.azure.Utilities;
import com.pulumi.azure.synapse.SqlPoolWorkloadClassifierArgs;
import com.pulumi.azure.synapse.inputs.SqlPoolWorkloadClassifierState;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Manages a Synapse SQL Pool Workload Classifier.
 * 
 * ## Example Usage
 * 
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.azure.core.ResourceGroup;
 * import com.pulumi.azure.core.ResourceGroupArgs;
 * import com.pulumi.azure.storage.Account;
 * import com.pulumi.azure.storage.AccountArgs;
 * import com.pulumi.azure.storage.DataLakeGen2Filesystem;
 * import com.pulumi.azure.storage.DataLakeGen2FilesystemArgs;
 * import com.pulumi.azure.synapse.Workspace;
 * import com.pulumi.azure.synapse.WorkspaceArgs;
 * import com.pulumi.azure.synapse.inputs.WorkspaceIdentityArgs;
 * import com.pulumi.azure.synapse.SqlPool;
 * import com.pulumi.azure.synapse.SqlPoolArgs;
 * import com.pulumi.azure.synapse.SqlPoolWorkloadGroup;
 * import com.pulumi.azure.synapse.SqlPoolWorkloadGroupArgs;
 * import com.pulumi.azure.synapse.SqlPoolWorkloadClassifier;
 * import com.pulumi.azure.synapse.SqlPoolWorkloadClassifierArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App }{{@code
 *     public static void main(String[] args) }{{@code
 *         Pulumi.run(App::stack);
 *     }}{@code
 * 
 *     public static void stack(Context ctx) }{{@code
 *         var example = new ResourceGroup("example", ResourceGroupArgs.builder()
 *             .name("example-resources")
 *             .location("West Europe")
 *             .build());
 * 
 *         var exampleAccount = new Account("exampleAccount", AccountArgs.builder()
 *             .name("example")
 *             .resourceGroupName(example.name())
 *             .location(example.location())
 *             .accountKind("BlobStorage")
 *             .accountTier("Standard")
 *             .accountReplicationType("LRS")
 *             .build());
 * 
 *         var exampleDataLakeGen2Filesystem = new DataLakeGen2Filesystem("exampleDataLakeGen2Filesystem", DataLakeGen2FilesystemArgs.builder()
 *             .name("example")
 *             .storageAccountId(exampleAccount.id())
 *             .build());
 * 
 *         var exampleWorkspace = new Workspace("exampleWorkspace", WorkspaceArgs.builder()
 *             .name("example")
 *             .resourceGroupName(example.name())
 *             .location(example.location())
 *             .storageDataLakeGen2FilesystemId(exampleDataLakeGen2Filesystem.id())
 *             .sqlAdministratorLogin("sqladminuser")
 *             .sqlAdministratorLoginPassword("H}{@literal @}{@code Sh1CoR3!")
 *             .identity(WorkspaceIdentityArgs.builder()
 *                 .type("SystemAssigned")
 *                 .build())
 *             .build());
 * 
 *         var exampleSqlPool = new SqlPool("exampleSqlPool", SqlPoolArgs.builder()
 *             .name("example")
 *             .synapseWorkspaceId(exampleWorkspace.id())
 *             .skuName("DW100c")
 *             .createMode("Default")
 *             .build());
 * 
 *         var exampleSqlPoolWorkloadGroup = new SqlPoolWorkloadGroup("exampleSqlPoolWorkloadGroup", SqlPoolWorkloadGroupArgs.builder()
 *             .name("example")
 *             .sqlPoolId(exampleSqlPool.id())
 *             .importance("normal")
 *             .maxResourcePercent(100)
 *             .minResourcePercent(0)
 *             .maxResourcePercentPerRequest(3.0)
 *             .minResourcePercentPerRequest(3.0)
 *             .queryExecutionTimeoutInSeconds(0)
 *             .build());
 * 
 *         var exampleSqlPoolWorkloadClassifier = new SqlPoolWorkloadClassifier("exampleSqlPoolWorkloadClassifier", SqlPoolWorkloadClassifierArgs.builder()
 *             .name("example")
 *             .workloadGroupId(exampleSqlPoolWorkloadGroup.id())
 *             .context("example_context")
 *             .endTime("14:00")
 *             .importance("high")
 *             .label("example_label")
 *             .memberName("dbo")
 *             .startTime("12:00")
 *             .build());
 * 
 *     }}{@code
 * }}{@code
 * }
 * </pre>
 * 
 * ## Import
 * 
 * Synapse SQL Pool Workload Classifiers can be imported using the `resource id`, e.g.
 * 
 * ```sh
 * $ pulumi import azure:synapse/sqlPoolWorkloadClassifier:SqlPoolWorkloadClassifier example /subscriptions/12345678-1234-9876-4563-123456789012/resourceGroups/resGroup1/providers/Microsoft.Synapse/workspaces/workspace1/sqlPools/sqlPool1/workloadGroups/workloadGroup1/workloadClassifiers/workloadClassifier1
 * ```
 * 
 */
@ResourceType(type="azure:synapse/sqlPoolWorkloadClassifier:SqlPoolWorkloadClassifier")
public class SqlPoolWorkloadClassifier extends com.pulumi.resources.CustomResource {
    /**
     * Specifies the session context value that a request can be classified against.
     * 
     */
    @Export(name="context", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> context;

    /**
     * @return Specifies the session context value that a request can be classified against.
     * 
     */
    public Output<Optional<String>> context() {
        return Codegen.optional(this.context);
    }
    /**
     * The workload classifier end time for classification. It&#39;s of the `HH:MM` format in UTC time zone.
     * 
     */
    @Export(name="endTime", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> endTime;

    /**
     * @return The workload classifier end time for classification. It&#39;s of the `HH:MM` format in UTC time zone.
     * 
     */
    public Output<Optional<String>> endTime() {
        return Codegen.optional(this.endTime);
    }
    /**
     * The workload classifier importance. The allowed values are `low`, `below_normal`, `normal`, `above_normal` and `high`.
     * 
     */
    @Export(name="importance", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> importance;

    /**
     * @return The workload classifier importance. The allowed values are `low`, `below_normal`, `normal`, `above_normal` and `high`.
     * 
     */
    public Output<Optional<String>> importance() {
        return Codegen.optional(this.importance);
    }
    /**
     * Specifies the label value that a request can be classified against.
     * 
     */
    @Export(name="label", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> label;

    /**
     * @return Specifies the label value that a request can be classified against.
     * 
     */
    public Output<Optional<String>> label() {
        return Codegen.optional(this.label);
    }
    /**
     * The workload classifier member name used to classified against.
     * 
     */
    @Export(name="memberName", refs={String.class}, tree="[0]")
    private Output<String> memberName;

    /**
     * @return The workload classifier member name used to classified against.
     * 
     */
    public Output<String> memberName() {
        return this.memberName;
    }
    /**
     * The name which should be used for this Synapse SQL Pool Workload Classifier. Changing this forces a new Synapse SQL Pool Workload Classifier to be created.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The name which should be used for this Synapse SQL Pool Workload Classifier. Changing this forces a new Synapse SQL Pool Workload Classifier to be created.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The workload classifier start time for classification. It&#39;s of the `HH:MM` format in UTC time zone.
     * 
     */
    @Export(name="startTime", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> startTime;

    /**
     * @return The workload classifier start time for classification. It&#39;s of the `HH:MM` format in UTC time zone.
     * 
     */
    public Output<Optional<String>> startTime() {
        return Codegen.optional(this.startTime);
    }
    /**
     * The ID of the Synapse SQL Pool Workload Group. Changing this forces a new Synapse SQL Pool Workload Classifier to be created.
     * 
     */
    @Export(name="workloadGroupId", refs={String.class}, tree="[0]")
    private Output<String> workloadGroupId;

    /**
     * @return The ID of the Synapse SQL Pool Workload Group. Changing this forces a new Synapse SQL Pool Workload Classifier to be created.
     * 
     */
    public Output<String> workloadGroupId() {
        return this.workloadGroupId;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public SqlPoolWorkloadClassifier(java.lang.String name) {
        this(name, SqlPoolWorkloadClassifierArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public SqlPoolWorkloadClassifier(java.lang.String name, SqlPoolWorkloadClassifierArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public SqlPoolWorkloadClassifier(java.lang.String name, SqlPoolWorkloadClassifierArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:synapse/sqlPoolWorkloadClassifier:SqlPoolWorkloadClassifier", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private SqlPoolWorkloadClassifier(java.lang.String name, Output<java.lang.String> id, @Nullable SqlPoolWorkloadClassifierState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:synapse/sqlPoolWorkloadClassifier:SqlPoolWorkloadClassifier", name, state, makeResourceOptions(options, id), false);
    }

    private static SqlPoolWorkloadClassifierArgs makeArgs(SqlPoolWorkloadClassifierArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? SqlPoolWorkloadClassifierArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static SqlPoolWorkloadClassifier get(java.lang.String name, Output<java.lang.String> id, @Nullable SqlPoolWorkloadClassifierState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new SqlPoolWorkloadClassifier(name, id, state, options);
    }
}
