// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.apimanagement.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class LoggerEventhub {
    /**
     * @return The connection string of an EventHub Namespace.
     * 
     * &gt; **Note:** At least one of `connection_string` or `endpoint_uri` must be specified
     * 
     */
    private @Nullable String connectionString;
    /**
     * @return The endpoint address of an EventHub Namespace. Required when `client_id` is set.
     * 
     */
    private @Nullable String endpointUri;
    /**
     * @return The name of an EventHub.
     * 
     */
    private String name;
    /**
     * @return The Client Id of the User Assigned Identity  with the &#34;Azure Event Hubs Data Sender&#34; role to the target EventHub Namespace. Required when `endpoint_uri` is set. If not specified the System Assigned Identity will be used.
     * 
     */
    private @Nullable String userAssignedIdentityClientId;

    private LoggerEventhub() {}
    /**
     * @return The connection string of an EventHub Namespace.
     * 
     * &gt; **Note:** At least one of `connection_string` or `endpoint_uri` must be specified
     * 
     */
    public Optional<String> connectionString() {
        return Optional.ofNullable(this.connectionString);
    }
    /**
     * @return The endpoint address of an EventHub Namespace. Required when `client_id` is set.
     * 
     */
    public Optional<String> endpointUri() {
        return Optional.ofNullable(this.endpointUri);
    }
    /**
     * @return The name of an EventHub.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The Client Id of the User Assigned Identity  with the &#34;Azure Event Hubs Data Sender&#34; role to the target EventHub Namespace. Required when `endpoint_uri` is set. If not specified the System Assigned Identity will be used.
     * 
     */
    public Optional<String> userAssignedIdentityClientId() {
        return Optional.ofNullable(this.userAssignedIdentityClientId);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(LoggerEventhub defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String connectionString;
        private @Nullable String endpointUri;
        private String name;
        private @Nullable String userAssignedIdentityClientId;
        public Builder() {}
        public Builder(LoggerEventhub defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.connectionString = defaults.connectionString;
    	      this.endpointUri = defaults.endpointUri;
    	      this.name = defaults.name;
    	      this.userAssignedIdentityClientId = defaults.userAssignedIdentityClientId;
        }

        @CustomType.Setter
        public Builder connectionString(@Nullable String connectionString) {

            this.connectionString = connectionString;
            return this;
        }
        @CustomType.Setter
        public Builder endpointUri(@Nullable String endpointUri) {

            this.endpointUri = endpointUri;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("LoggerEventhub", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder userAssignedIdentityClientId(@Nullable String userAssignedIdentityClientId) {

            this.userAssignedIdentityClientId = userAssignedIdentityClientId;
            return this;
        }
        public LoggerEventhub build() {
            final var _resultValue = new LoggerEventhub();
            _resultValue.connectionString = connectionString;
            _resultValue.endpointUri = endpointUri;
            _resultValue.name = name;
            _resultValue.userAssignedIdentityClientId = userAssignedIdentityClientId;
            return _resultValue;
        }
    }
}
