// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.cosmosdb;

import com.pulumi.azure.cosmosdb.inputs.CassandraClusterIdentityArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CassandraClusterArgs extends com.pulumi.resources.ResourceArgs {

    public static final CassandraClusterArgs Empty = new CassandraClusterArgs();

    /**
     * The authentication method that is used to authenticate clients. Possible values are `None` and `Cassandra`. Defaults to `Cassandra`.
     * 
     */
    @Import(name="authenticationMethod")
    private @Nullable Output<String> authenticationMethod;

    /**
     * @return The authentication method that is used to authenticate clients. Possible values are `None` and `Cassandra`. Defaults to `Cassandra`.
     * 
     */
    public Optional<Output<String>> authenticationMethod() {
        return Optional.ofNullable(this.authenticationMethod);
    }

    /**
     * A list of TLS certificates that is used to authorize client connecting to the Cassandra Cluster.
     * 
     */
    @Import(name="clientCertificatePems")
    private @Nullable Output<List<String>> clientCertificatePems;

    /**
     * @return A list of TLS certificates that is used to authorize client connecting to the Cassandra Cluster.
     * 
     */
    public Optional<Output<List<String>>> clientCertificatePems() {
        return Optional.ofNullable(this.clientCertificatePems);
    }

    /**
     * The initial admin password for this Cassandra Cluster. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="defaultAdminPassword", required=true)
    private Output<String> defaultAdminPassword;

    /**
     * @return The initial admin password for this Cassandra Cluster. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> defaultAdminPassword() {
        return this.defaultAdminPassword;
    }

    /**
     * The ID of the delegated management subnet for this Cassandra Cluster. Changing this forces a new Cassandra Cluster to be created.
     * 
     */
    @Import(name="delegatedManagementSubnetId", required=true)
    private Output<String> delegatedManagementSubnetId;

    /**
     * @return The ID of the delegated management subnet for this Cassandra Cluster. Changing this forces a new Cassandra Cluster to be created.
     * 
     */
    public Output<String> delegatedManagementSubnetId() {
        return this.delegatedManagementSubnetId;
    }

    /**
     * A list of TLS certificates that is used to authorize gossip from unmanaged Cassandra Data Center.
     * 
     */
    @Import(name="externalGossipCertificatePems")
    private @Nullable Output<List<String>> externalGossipCertificatePems;

    /**
     * @return A list of TLS certificates that is used to authorize gossip from unmanaged Cassandra Data Center.
     * 
     */
    public Optional<Output<List<String>>> externalGossipCertificatePems() {
        return Optional.ofNullable(this.externalGossipCertificatePems);
    }

    /**
     * A list of IP Addresses of the seed nodes in unmanaged the Cassandra Data Center which will be added to the seed node lists of all managed nodes.
     * 
     */
    @Import(name="externalSeedNodeIpAddresses")
    private @Nullable Output<List<String>> externalSeedNodeIpAddresses;

    /**
     * @return A list of IP Addresses of the seed nodes in unmanaged the Cassandra Data Center which will be added to the seed node lists of all managed nodes.
     * 
     */
    public Optional<Output<List<String>>> externalSeedNodeIpAddresses() {
        return Optional.ofNullable(this.externalSeedNodeIpAddresses);
    }

    /**
     * The number of hours to wait between taking a backup of the Cassandra Cluster. Defaults to `24`.
     * 
     * &gt; **Note:** To disable this feature, set this property to `0`.
     * 
     */
    @Import(name="hoursBetweenBackups")
    private @Nullable Output<Integer> hoursBetweenBackups;

    /**
     * @return The number of hours to wait between taking a backup of the Cassandra Cluster. Defaults to `24`.
     * 
     * &gt; **Note:** To disable this feature, set this property to `0`.
     * 
     */
    public Optional<Output<Integer>> hoursBetweenBackups() {
        return Optional.ofNullable(this.hoursBetweenBackups);
    }

    /**
     * An `identity` block as defined below.
     * 
     */
    @Import(name="identity")
    private @Nullable Output<CassandraClusterIdentityArgs> identity;

    /**
     * @return An `identity` block as defined below.
     * 
     */
    public Optional<Output<CassandraClusterIdentityArgs>> identity() {
        return Optional.ofNullable(this.identity);
    }

    /**
     * The Azure Region where the Cassandra Cluster should exist. Changing this forces a new Cassandra Cluster to be created.
     * 
     */
    @Import(name="location")
    private @Nullable Output<String> location;

    /**
     * @return The Azure Region where the Cassandra Cluster should exist. Changing this forces a new Cassandra Cluster to be created.
     * 
     */
    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * The name which should be used for this Cassandra Cluster. Changing this forces a new Cassandra Cluster to be created.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name which should be used for this Cassandra Cluster. Changing this forces a new Cassandra Cluster to be created.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Is the automatic repair enabled on the Cassandra Cluster? Defaults to `true`.
     * 
     */
    @Import(name="repairEnabled")
    private @Nullable Output<Boolean> repairEnabled;

    /**
     * @return Is the automatic repair enabled on the Cassandra Cluster? Defaults to `true`.
     * 
     */
    public Optional<Output<Boolean>> repairEnabled() {
        return Optional.ofNullable(this.repairEnabled);
    }

    /**
     * The name of the Resource Group where the Cassandra Cluster should exist. Changing this forces a new Cassandra Cluster to be created.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    /**
     * @return The name of the Resource Group where the Cassandra Cluster should exist. Changing this forces a new Cassandra Cluster to be created.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * A mapping of tags assigned to the resource.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return A mapping of tags assigned to the resource.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * The version of Cassandra what the Cluster converges to run. Possible values are `3.11` and `4.0`. Defaults to `3.11`. Changing this forces a new Cassandra Cluster to be created.
     * 
     */
    @Import(name="version")
    private @Nullable Output<String> version;

    /**
     * @return The version of Cassandra what the Cluster converges to run. Possible values are `3.11` and `4.0`. Defaults to `3.11`. Changing this forces a new Cassandra Cluster to be created.
     * 
     */
    public Optional<Output<String>> version() {
        return Optional.ofNullable(this.version);
    }

    private CassandraClusterArgs() {}

    private CassandraClusterArgs(CassandraClusterArgs $) {
        this.authenticationMethod = $.authenticationMethod;
        this.clientCertificatePems = $.clientCertificatePems;
        this.defaultAdminPassword = $.defaultAdminPassword;
        this.delegatedManagementSubnetId = $.delegatedManagementSubnetId;
        this.externalGossipCertificatePems = $.externalGossipCertificatePems;
        this.externalSeedNodeIpAddresses = $.externalSeedNodeIpAddresses;
        this.hoursBetweenBackups = $.hoursBetweenBackups;
        this.identity = $.identity;
        this.location = $.location;
        this.name = $.name;
        this.repairEnabled = $.repairEnabled;
        this.resourceGroupName = $.resourceGroupName;
        this.tags = $.tags;
        this.version = $.version;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CassandraClusterArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CassandraClusterArgs $;

        public Builder() {
            $ = new CassandraClusterArgs();
        }

        public Builder(CassandraClusterArgs defaults) {
            $ = new CassandraClusterArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param authenticationMethod The authentication method that is used to authenticate clients. Possible values are `None` and `Cassandra`. Defaults to `Cassandra`.
         * 
         * @return builder
         * 
         */
        public Builder authenticationMethod(@Nullable Output<String> authenticationMethod) {
            $.authenticationMethod = authenticationMethod;
            return this;
        }

        /**
         * @param authenticationMethod The authentication method that is used to authenticate clients. Possible values are `None` and `Cassandra`. Defaults to `Cassandra`.
         * 
         * @return builder
         * 
         */
        public Builder authenticationMethod(String authenticationMethod) {
            return authenticationMethod(Output.of(authenticationMethod));
        }

        /**
         * @param clientCertificatePems A list of TLS certificates that is used to authorize client connecting to the Cassandra Cluster.
         * 
         * @return builder
         * 
         */
        public Builder clientCertificatePems(@Nullable Output<List<String>> clientCertificatePems) {
            $.clientCertificatePems = clientCertificatePems;
            return this;
        }

        /**
         * @param clientCertificatePems A list of TLS certificates that is used to authorize client connecting to the Cassandra Cluster.
         * 
         * @return builder
         * 
         */
        public Builder clientCertificatePems(List<String> clientCertificatePems) {
            return clientCertificatePems(Output.of(clientCertificatePems));
        }

        /**
         * @param clientCertificatePems A list of TLS certificates that is used to authorize client connecting to the Cassandra Cluster.
         * 
         * @return builder
         * 
         */
        public Builder clientCertificatePems(String... clientCertificatePems) {
            return clientCertificatePems(List.of(clientCertificatePems));
        }

        /**
         * @param defaultAdminPassword The initial admin password for this Cassandra Cluster. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder defaultAdminPassword(Output<String> defaultAdminPassword) {
            $.defaultAdminPassword = defaultAdminPassword;
            return this;
        }

        /**
         * @param defaultAdminPassword The initial admin password for this Cassandra Cluster. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder defaultAdminPassword(String defaultAdminPassword) {
            return defaultAdminPassword(Output.of(defaultAdminPassword));
        }

        /**
         * @param delegatedManagementSubnetId The ID of the delegated management subnet for this Cassandra Cluster. Changing this forces a new Cassandra Cluster to be created.
         * 
         * @return builder
         * 
         */
        public Builder delegatedManagementSubnetId(Output<String> delegatedManagementSubnetId) {
            $.delegatedManagementSubnetId = delegatedManagementSubnetId;
            return this;
        }

        /**
         * @param delegatedManagementSubnetId The ID of the delegated management subnet for this Cassandra Cluster. Changing this forces a new Cassandra Cluster to be created.
         * 
         * @return builder
         * 
         */
        public Builder delegatedManagementSubnetId(String delegatedManagementSubnetId) {
            return delegatedManagementSubnetId(Output.of(delegatedManagementSubnetId));
        }

        /**
         * @param externalGossipCertificatePems A list of TLS certificates that is used to authorize gossip from unmanaged Cassandra Data Center.
         * 
         * @return builder
         * 
         */
        public Builder externalGossipCertificatePems(@Nullable Output<List<String>> externalGossipCertificatePems) {
            $.externalGossipCertificatePems = externalGossipCertificatePems;
            return this;
        }

        /**
         * @param externalGossipCertificatePems A list of TLS certificates that is used to authorize gossip from unmanaged Cassandra Data Center.
         * 
         * @return builder
         * 
         */
        public Builder externalGossipCertificatePems(List<String> externalGossipCertificatePems) {
            return externalGossipCertificatePems(Output.of(externalGossipCertificatePems));
        }

        /**
         * @param externalGossipCertificatePems A list of TLS certificates that is used to authorize gossip from unmanaged Cassandra Data Center.
         * 
         * @return builder
         * 
         */
        public Builder externalGossipCertificatePems(String... externalGossipCertificatePems) {
            return externalGossipCertificatePems(List.of(externalGossipCertificatePems));
        }

        /**
         * @param externalSeedNodeIpAddresses A list of IP Addresses of the seed nodes in unmanaged the Cassandra Data Center which will be added to the seed node lists of all managed nodes.
         * 
         * @return builder
         * 
         */
        public Builder externalSeedNodeIpAddresses(@Nullable Output<List<String>> externalSeedNodeIpAddresses) {
            $.externalSeedNodeIpAddresses = externalSeedNodeIpAddresses;
            return this;
        }

        /**
         * @param externalSeedNodeIpAddresses A list of IP Addresses of the seed nodes in unmanaged the Cassandra Data Center which will be added to the seed node lists of all managed nodes.
         * 
         * @return builder
         * 
         */
        public Builder externalSeedNodeIpAddresses(List<String> externalSeedNodeIpAddresses) {
            return externalSeedNodeIpAddresses(Output.of(externalSeedNodeIpAddresses));
        }

        /**
         * @param externalSeedNodeIpAddresses A list of IP Addresses of the seed nodes in unmanaged the Cassandra Data Center which will be added to the seed node lists of all managed nodes.
         * 
         * @return builder
         * 
         */
        public Builder externalSeedNodeIpAddresses(String... externalSeedNodeIpAddresses) {
            return externalSeedNodeIpAddresses(List.of(externalSeedNodeIpAddresses));
        }

        /**
         * @param hoursBetweenBackups The number of hours to wait between taking a backup of the Cassandra Cluster. Defaults to `24`.
         * 
         * &gt; **Note:** To disable this feature, set this property to `0`.
         * 
         * @return builder
         * 
         */
        public Builder hoursBetweenBackups(@Nullable Output<Integer> hoursBetweenBackups) {
            $.hoursBetweenBackups = hoursBetweenBackups;
            return this;
        }

        /**
         * @param hoursBetweenBackups The number of hours to wait between taking a backup of the Cassandra Cluster. Defaults to `24`.
         * 
         * &gt; **Note:** To disable this feature, set this property to `0`.
         * 
         * @return builder
         * 
         */
        public Builder hoursBetweenBackups(Integer hoursBetweenBackups) {
            return hoursBetweenBackups(Output.of(hoursBetweenBackups));
        }

        /**
         * @param identity An `identity` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder identity(@Nullable Output<CassandraClusterIdentityArgs> identity) {
            $.identity = identity;
            return this;
        }

        /**
         * @param identity An `identity` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder identity(CassandraClusterIdentityArgs identity) {
            return identity(Output.of(identity));
        }

        /**
         * @param location The Azure Region where the Cassandra Cluster should exist. Changing this forces a new Cassandra Cluster to be created.
         * 
         * @return builder
         * 
         */
        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location The Azure Region where the Cassandra Cluster should exist. Changing this forces a new Cassandra Cluster to be created.
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param name The name which should be used for this Cassandra Cluster. Changing this forces a new Cassandra Cluster to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name which should be used for this Cassandra Cluster. Changing this forces a new Cassandra Cluster to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param repairEnabled Is the automatic repair enabled on the Cassandra Cluster? Defaults to `true`.
         * 
         * @return builder
         * 
         */
        public Builder repairEnabled(@Nullable Output<Boolean> repairEnabled) {
            $.repairEnabled = repairEnabled;
            return this;
        }

        /**
         * @param repairEnabled Is the automatic repair enabled on the Cassandra Cluster? Defaults to `true`.
         * 
         * @return builder
         * 
         */
        public Builder repairEnabled(Boolean repairEnabled) {
            return repairEnabled(Output.of(repairEnabled));
        }

        /**
         * @param resourceGroupName The name of the Resource Group where the Cassandra Cluster should exist. Changing this forces a new Cassandra Cluster to be created.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName The name of the Resource Group where the Cassandra Cluster should exist. Changing this forces a new Cassandra Cluster to be created.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        /**
         * @param tags A mapping of tags assigned to the resource.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags A mapping of tags assigned to the resource.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param version The version of Cassandra what the Cluster converges to run. Possible values are `3.11` and `4.0`. Defaults to `3.11`. Changing this forces a new Cassandra Cluster to be created.
         * 
         * @return builder
         * 
         */
        public Builder version(@Nullable Output<String> version) {
            $.version = version;
            return this;
        }

        /**
         * @param version The version of Cassandra what the Cluster converges to run. Possible values are `3.11` and `4.0`. Defaults to `3.11`. Changing this forces a new Cassandra Cluster to be created.
         * 
         * @return builder
         * 
         */
        public Builder version(String version) {
            return version(Output.of(version));
        }

        public CassandraClusterArgs build() {
            if ($.defaultAdminPassword == null) {
                throw new MissingRequiredPropertyException("CassandraClusterArgs", "defaultAdminPassword");
            }
            if ($.delegatedManagementSubnetId == null) {
                throw new MissingRequiredPropertyException("CassandraClusterArgs", "delegatedManagementSubnetId");
            }
            if ($.resourceGroupName == null) {
                throw new MissingRequiredPropertyException("CassandraClusterArgs", "resourceGroupName");
            }
            return $;
        }
    }

}
