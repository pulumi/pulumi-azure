// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.netapp;

import com.pulumi.azure.netapp.inputs.SnapshotPolicyDailyScheduleArgs;
import com.pulumi.azure.netapp.inputs.SnapshotPolicyHourlyScheduleArgs;
import com.pulumi.azure.netapp.inputs.SnapshotPolicyMonthlyScheduleArgs;
import com.pulumi.azure.netapp.inputs.SnapshotPolicyWeeklyScheduleArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SnapshotPolicyArgs extends com.pulumi.resources.ResourceArgs {

    public static final SnapshotPolicyArgs Empty = new SnapshotPolicyArgs();

    /**
     * The name of the NetApp Account in which the NetApp Snapshot Policy should be created. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="accountName", required=true)
    private Output<String> accountName;

    /**
     * @return The name of the NetApp Account in which the NetApp Snapshot Policy should be created. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> accountName() {
        return this.accountName;
    }

    /**
     * Sets a daily snapshot schedule. A `daily_schedule` block as defined below.
     * 
     */
    @Import(name="dailySchedule")
    private @Nullable Output<SnapshotPolicyDailyScheduleArgs> dailySchedule;

    /**
     * @return Sets a daily snapshot schedule. A `daily_schedule` block as defined below.
     * 
     */
    public Optional<Output<SnapshotPolicyDailyScheduleArgs>> dailySchedule() {
        return Optional.ofNullable(this.dailySchedule);
    }

    /**
     * Defines that the NetApp Snapshot Policy is enabled or not.
     * 
     */
    @Import(name="enabled", required=true)
    private Output<Boolean> enabled;

    /**
     * @return Defines that the NetApp Snapshot Policy is enabled or not.
     * 
     */
    public Output<Boolean> enabled() {
        return this.enabled;
    }

    /**
     * Sets an hourly snapshot schedule. A `hourly_schedule` block as defined below.
     * 
     */
    @Import(name="hourlySchedule")
    private @Nullable Output<SnapshotPolicyHourlyScheduleArgs> hourlySchedule;

    /**
     * @return Sets an hourly snapshot schedule. A `hourly_schedule` block as defined below.
     * 
     */
    public Optional<Output<SnapshotPolicyHourlyScheduleArgs>> hourlySchedule() {
        return Optional.ofNullable(this.hourlySchedule);
    }

    /**
     * Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="location")
    private @Nullable Output<String> location;

    /**
     * @return Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * Sets a monthly snapshot schedule. A `monthly_schedule` block as defined below.
     * 
     */
    @Import(name="monthlySchedule")
    private @Nullable Output<SnapshotPolicyMonthlyScheduleArgs> monthlySchedule;

    /**
     * @return Sets a monthly snapshot schedule. A `monthly_schedule` block as defined below.
     * 
     */
    public Optional<Output<SnapshotPolicyMonthlyScheduleArgs>> monthlySchedule() {
        return Optional.ofNullable(this.monthlySchedule);
    }

    /**
     * The name of the NetApp Snapshot Policy. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the NetApp Snapshot Policy. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The name of the resource group where the NetApp Snapshot Policy should be created. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    /**
     * @return The name of the resource group where the NetApp Snapshot Policy should be created. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * A mapping of tags to assign to the resource.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return A mapping of tags to assign to the resource.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * Sets a weekly snapshot schedule. A `weekly_schedule` block as defined below.
     * 
     */
    @Import(name="weeklySchedule")
    private @Nullable Output<SnapshotPolicyWeeklyScheduleArgs> weeklySchedule;

    /**
     * @return Sets a weekly snapshot schedule. A `weekly_schedule` block as defined below.
     * 
     */
    public Optional<Output<SnapshotPolicyWeeklyScheduleArgs>> weeklySchedule() {
        return Optional.ofNullable(this.weeklySchedule);
    }

    private SnapshotPolicyArgs() {}

    private SnapshotPolicyArgs(SnapshotPolicyArgs $) {
        this.accountName = $.accountName;
        this.dailySchedule = $.dailySchedule;
        this.enabled = $.enabled;
        this.hourlySchedule = $.hourlySchedule;
        this.location = $.location;
        this.monthlySchedule = $.monthlySchedule;
        this.name = $.name;
        this.resourceGroupName = $.resourceGroupName;
        this.tags = $.tags;
        this.weeklySchedule = $.weeklySchedule;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SnapshotPolicyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SnapshotPolicyArgs $;

        public Builder() {
            $ = new SnapshotPolicyArgs();
        }

        public Builder(SnapshotPolicyArgs defaults) {
            $ = new SnapshotPolicyArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param accountName The name of the NetApp Account in which the NetApp Snapshot Policy should be created. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder accountName(Output<String> accountName) {
            $.accountName = accountName;
            return this;
        }

        /**
         * @param accountName The name of the NetApp Account in which the NetApp Snapshot Policy should be created. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder accountName(String accountName) {
            return accountName(Output.of(accountName));
        }

        /**
         * @param dailySchedule Sets a daily snapshot schedule. A `daily_schedule` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder dailySchedule(@Nullable Output<SnapshotPolicyDailyScheduleArgs> dailySchedule) {
            $.dailySchedule = dailySchedule;
            return this;
        }

        /**
         * @param dailySchedule Sets a daily snapshot schedule. A `daily_schedule` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder dailySchedule(SnapshotPolicyDailyScheduleArgs dailySchedule) {
            return dailySchedule(Output.of(dailySchedule));
        }

        /**
         * @param enabled Defines that the NetApp Snapshot Policy is enabled or not.
         * 
         * @return builder
         * 
         */
        public Builder enabled(Output<Boolean> enabled) {
            $.enabled = enabled;
            return this;
        }

        /**
         * @param enabled Defines that the NetApp Snapshot Policy is enabled or not.
         * 
         * @return builder
         * 
         */
        public Builder enabled(Boolean enabled) {
            return enabled(Output.of(enabled));
        }

        /**
         * @param hourlySchedule Sets an hourly snapshot schedule. A `hourly_schedule` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder hourlySchedule(@Nullable Output<SnapshotPolicyHourlyScheduleArgs> hourlySchedule) {
            $.hourlySchedule = hourlySchedule;
            return this;
        }

        /**
         * @param hourlySchedule Sets an hourly snapshot schedule. A `hourly_schedule` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder hourlySchedule(SnapshotPolicyHourlyScheduleArgs hourlySchedule) {
            return hourlySchedule(Output.of(hourlySchedule));
        }

        /**
         * @param location Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param monthlySchedule Sets a monthly snapshot schedule. A `monthly_schedule` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder monthlySchedule(@Nullable Output<SnapshotPolicyMonthlyScheduleArgs> monthlySchedule) {
            $.monthlySchedule = monthlySchedule;
            return this;
        }

        /**
         * @param monthlySchedule Sets a monthly snapshot schedule. A `monthly_schedule` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder monthlySchedule(SnapshotPolicyMonthlyScheduleArgs monthlySchedule) {
            return monthlySchedule(Output.of(monthlySchedule));
        }

        /**
         * @param name The name of the NetApp Snapshot Policy. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the NetApp Snapshot Policy. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param resourceGroupName The name of the resource group where the NetApp Snapshot Policy should be created. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName The name of the resource group where the NetApp Snapshot Policy should be created. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        /**
         * @param tags A mapping of tags to assign to the resource.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags A mapping of tags to assign to the resource.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param weeklySchedule Sets a weekly snapshot schedule. A `weekly_schedule` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder weeklySchedule(@Nullable Output<SnapshotPolicyWeeklyScheduleArgs> weeklySchedule) {
            $.weeklySchedule = weeklySchedule;
            return this;
        }

        /**
         * @param weeklySchedule Sets a weekly snapshot schedule. A `weekly_schedule` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder weeklySchedule(SnapshotPolicyWeeklyScheduleArgs weeklySchedule) {
            return weeklySchedule(Output.of(weeklySchedule));
        }

        public SnapshotPolicyArgs build() {
            $.accountName = Objects.requireNonNull($.accountName, "expected parameter 'accountName' to be non-null");
            $.enabled = Objects.requireNonNull($.enabled, "expected parameter 'enabled' to be non-null");
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            return $;
        }
    }

}
