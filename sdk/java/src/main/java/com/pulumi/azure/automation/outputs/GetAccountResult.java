// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.automation.outputs;

import com.pulumi.azure.automation.outputs.GetAccountIdentity;
import com.pulumi.azure.automation.outputs.GetAccountPrivateEndpointConnection;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetAccountResult {
    /**
     * @return The Endpoint for this Automation Account.
     * 
     */
    private String endpoint;
    /**
     * @return The URL of automation hybrid service which is used for hybrid worker on-boarding With this Automation Account.
     * 
     */
    private String hybridServiceUrl;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return (Optional) An `identity` block as defined below.
     * 
     */
    private List<GetAccountIdentity> identities;
    private String name;
    /**
     * @return The Primary Access Key for the Automation Account.
     * 
     */
    private String primaryKey;
    private List<GetAccountPrivateEndpointConnection> privateEndpointConnections;
    private String resourceGroupName;
    /**
     * @return The Secondary Access Key for the Automation Account.
     * 
     */
    private String secondaryKey;

    private GetAccountResult() {}
    /**
     * @return The Endpoint for this Automation Account.
     * 
     */
    public String endpoint() {
        return this.endpoint;
    }
    /**
     * @return The URL of automation hybrid service which is used for hybrid worker on-boarding With this Automation Account.
     * 
     */
    public String hybridServiceUrl() {
        return this.hybridServiceUrl;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return (Optional) An `identity` block as defined below.
     * 
     */
    public List<GetAccountIdentity> identities() {
        return this.identities;
    }
    public String name() {
        return this.name;
    }
    /**
     * @return The Primary Access Key for the Automation Account.
     * 
     */
    public String primaryKey() {
        return this.primaryKey;
    }
    public List<GetAccountPrivateEndpointConnection> privateEndpointConnections() {
        return this.privateEndpointConnections;
    }
    public String resourceGroupName() {
        return this.resourceGroupName;
    }
    /**
     * @return The Secondary Access Key for the Automation Account.
     * 
     */
    public String secondaryKey() {
        return this.secondaryKey;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAccountResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String endpoint;
        private String hybridServiceUrl;
        private String id;
        private List<GetAccountIdentity> identities;
        private String name;
        private String primaryKey;
        private List<GetAccountPrivateEndpointConnection> privateEndpointConnections;
        private String resourceGroupName;
        private String secondaryKey;
        public Builder() {}
        public Builder(GetAccountResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.endpoint = defaults.endpoint;
    	      this.hybridServiceUrl = defaults.hybridServiceUrl;
    	      this.id = defaults.id;
    	      this.identities = defaults.identities;
    	      this.name = defaults.name;
    	      this.primaryKey = defaults.primaryKey;
    	      this.privateEndpointConnections = defaults.privateEndpointConnections;
    	      this.resourceGroupName = defaults.resourceGroupName;
    	      this.secondaryKey = defaults.secondaryKey;
        }

        @CustomType.Setter
        public Builder endpoint(String endpoint) {
            if (endpoint == null) {
              throw new MissingRequiredPropertyException("GetAccountResult", "endpoint");
            }
            this.endpoint = endpoint;
            return this;
        }
        @CustomType.Setter
        public Builder hybridServiceUrl(String hybridServiceUrl) {
            if (hybridServiceUrl == null) {
              throw new MissingRequiredPropertyException("GetAccountResult", "hybridServiceUrl");
            }
            this.hybridServiceUrl = hybridServiceUrl;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetAccountResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder identities(List<GetAccountIdentity> identities) {
            if (identities == null) {
              throw new MissingRequiredPropertyException("GetAccountResult", "identities");
            }
            this.identities = identities;
            return this;
        }
        public Builder identities(GetAccountIdentity... identities) {
            return identities(List.of(identities));
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetAccountResult", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder primaryKey(String primaryKey) {
            if (primaryKey == null) {
              throw new MissingRequiredPropertyException("GetAccountResult", "primaryKey");
            }
            this.primaryKey = primaryKey;
            return this;
        }
        @CustomType.Setter
        public Builder privateEndpointConnections(List<GetAccountPrivateEndpointConnection> privateEndpointConnections) {
            if (privateEndpointConnections == null) {
              throw new MissingRequiredPropertyException("GetAccountResult", "privateEndpointConnections");
            }
            this.privateEndpointConnections = privateEndpointConnections;
            return this;
        }
        public Builder privateEndpointConnections(GetAccountPrivateEndpointConnection... privateEndpointConnections) {
            return privateEndpointConnections(List.of(privateEndpointConnections));
        }
        @CustomType.Setter
        public Builder resourceGroupName(String resourceGroupName) {
            if (resourceGroupName == null) {
              throw new MissingRequiredPropertyException("GetAccountResult", "resourceGroupName");
            }
            this.resourceGroupName = resourceGroupName;
            return this;
        }
        @CustomType.Setter
        public Builder secondaryKey(String secondaryKey) {
            if (secondaryKey == null) {
              throw new MissingRequiredPropertyException("GetAccountResult", "secondaryKey");
            }
            this.secondaryKey = secondaryKey;
            return this;
        }
        public GetAccountResult build() {
            final var _resultValue = new GetAccountResult();
            _resultValue.endpoint = endpoint;
            _resultValue.hybridServiceUrl = hybridServiceUrl;
            _resultValue.id = id;
            _resultValue.identities = identities;
            _resultValue.name = name;
            _resultValue.primaryKey = primaryKey;
            _resultValue.privateEndpointConnections = privateEndpointConnections;
            _resultValue.resourceGroupName = resourceGroupName;
            _resultValue.secondaryKey = secondaryKey;
            return _resultValue;
        }
    }
}
