// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.netapp.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.util.List;
import java.util.Objects;


public final class SnapshotPolicyMonthlyScheduleArgs extends com.pulumi.resources.ResourceArgs {

    public static final SnapshotPolicyMonthlyScheduleArgs Empty = new SnapshotPolicyMonthlyScheduleArgs();

    /**
     * List of the days of the month when the snapshots will be created, valid range is from 1 to 30.
     * 
     */
    @Import(name="daysOfMonths", required=true)
    private Output<List<Integer>> daysOfMonths;

    /**
     * @return List of the days of the month when the snapshots will be created, valid range is from 1 to 30.
     * 
     */
    public Output<List<Integer>> daysOfMonths() {
        return this.daysOfMonths;
    }

    /**
     * Hour of the day that the snapshots will be created, valid range is from 0 to 23.
     * 
     */
    @Import(name="hour", required=true)
    private Output<Integer> hour;

    /**
     * @return Hour of the day that the snapshots will be created, valid range is from 0 to 23.
     * 
     */
    public Output<Integer> hour() {
        return this.hour;
    }

    /**
     * Minute of the hour that the snapshots will be created, valid range is from 0 to 59.
     * 
     */
    @Import(name="minute", required=true)
    private Output<Integer> minute;

    /**
     * @return Minute of the hour that the snapshots will be created, valid range is from 0 to 59.
     * 
     */
    public Output<Integer> minute() {
        return this.minute;
    }

    /**
     * How many hourly snapshots to keep, valid range is from 0 to 255.
     * 
     */
    @Import(name="snapshotsToKeep", required=true)
    private Output<Integer> snapshotsToKeep;

    /**
     * @return How many hourly snapshots to keep, valid range is from 0 to 255.
     * 
     */
    public Output<Integer> snapshotsToKeep() {
        return this.snapshotsToKeep;
    }

    private SnapshotPolicyMonthlyScheduleArgs() {}

    private SnapshotPolicyMonthlyScheduleArgs(SnapshotPolicyMonthlyScheduleArgs $) {
        this.daysOfMonths = $.daysOfMonths;
        this.hour = $.hour;
        this.minute = $.minute;
        this.snapshotsToKeep = $.snapshotsToKeep;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SnapshotPolicyMonthlyScheduleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SnapshotPolicyMonthlyScheduleArgs $;

        public Builder() {
            $ = new SnapshotPolicyMonthlyScheduleArgs();
        }

        public Builder(SnapshotPolicyMonthlyScheduleArgs defaults) {
            $ = new SnapshotPolicyMonthlyScheduleArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param daysOfMonths List of the days of the month when the snapshots will be created, valid range is from 1 to 30.
         * 
         * @return builder
         * 
         */
        public Builder daysOfMonths(Output<List<Integer>> daysOfMonths) {
            $.daysOfMonths = daysOfMonths;
            return this;
        }

        /**
         * @param daysOfMonths List of the days of the month when the snapshots will be created, valid range is from 1 to 30.
         * 
         * @return builder
         * 
         */
        public Builder daysOfMonths(List<Integer> daysOfMonths) {
            return daysOfMonths(Output.of(daysOfMonths));
        }

        /**
         * @param daysOfMonths List of the days of the month when the snapshots will be created, valid range is from 1 to 30.
         * 
         * @return builder
         * 
         */
        public Builder daysOfMonths(Integer... daysOfMonths) {
            return daysOfMonths(List.of(daysOfMonths));
        }

        /**
         * @param hour Hour of the day that the snapshots will be created, valid range is from 0 to 23.
         * 
         * @return builder
         * 
         */
        public Builder hour(Output<Integer> hour) {
            $.hour = hour;
            return this;
        }

        /**
         * @param hour Hour of the day that the snapshots will be created, valid range is from 0 to 23.
         * 
         * @return builder
         * 
         */
        public Builder hour(Integer hour) {
            return hour(Output.of(hour));
        }

        /**
         * @param minute Minute of the hour that the snapshots will be created, valid range is from 0 to 59.
         * 
         * @return builder
         * 
         */
        public Builder minute(Output<Integer> minute) {
            $.minute = minute;
            return this;
        }

        /**
         * @param minute Minute of the hour that the snapshots will be created, valid range is from 0 to 59.
         * 
         * @return builder
         * 
         */
        public Builder minute(Integer minute) {
            return minute(Output.of(minute));
        }

        /**
         * @param snapshotsToKeep How many hourly snapshots to keep, valid range is from 0 to 255.
         * 
         * @return builder
         * 
         */
        public Builder snapshotsToKeep(Output<Integer> snapshotsToKeep) {
            $.snapshotsToKeep = snapshotsToKeep;
            return this;
        }

        /**
         * @param snapshotsToKeep How many hourly snapshots to keep, valid range is from 0 to 255.
         * 
         * @return builder
         * 
         */
        public Builder snapshotsToKeep(Integer snapshotsToKeep) {
            return snapshotsToKeep(Output.of(snapshotsToKeep));
        }

        public SnapshotPolicyMonthlyScheduleArgs build() {
            if ($.daysOfMonths == null) {
                throw new MissingRequiredPropertyException("SnapshotPolicyMonthlyScheduleArgs", "daysOfMonths");
            }
            if ($.hour == null) {
                throw new MissingRequiredPropertyException("SnapshotPolicyMonthlyScheduleArgs", "hour");
            }
            if ($.minute == null) {
                throw new MissingRequiredPropertyException("SnapshotPolicyMonthlyScheduleArgs", "minute");
            }
            if ($.snapshotsToKeep == null) {
                throw new MissingRequiredPropertyException("SnapshotPolicyMonthlyScheduleArgs", "snapshotsToKeep");
            }
            return $;
        }
    }

}
