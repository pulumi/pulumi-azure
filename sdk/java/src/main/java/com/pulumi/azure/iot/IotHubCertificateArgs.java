// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.iot;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class IotHubCertificateArgs extends com.pulumi.resources.ResourceArgs {

    public static final IotHubCertificateArgs Empty = new IotHubCertificateArgs();

    /**
     * The Base-64 representation of the X509 leaf certificate .cer file or just a .pem file content.
     * 
     */
    @Import(name="certificateContent", required=true)
    private Output<String> certificateContent;

    /**
     * @return The Base-64 representation of the X509 leaf certificate .cer file or just a .pem file content.
     * 
     */
    public Output<String> certificateContent() {
        return this.certificateContent;
    }

    /**
     * The name of the IoT Device Provisioning Service that this certificate will be attached to. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="iotDpsName", required=true)
    private Output<String> iotDpsName;

    /**
     * @return The name of the IoT Device Provisioning Service that this certificate will be attached to. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> iotDpsName() {
        return this.iotDpsName;
    }

    /**
     * Specifies if the certificate is created in verified state. Defaults to `false`. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="isVerified")
    private @Nullable Output<Boolean> isVerified;

    /**
     * @return Specifies if the certificate is created in verified state. Defaults to `false`. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<Boolean>> isVerified() {
        return Optional.ofNullable(this.isVerified);
    }

    /**
     * Specifies the name of the Iot Device Provisioning Service Certificate resource. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Specifies the name of the Iot Device Provisioning Service Certificate resource. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The name of the resource group under which the Iot Device Provisioning Service Certificate resource has to be created. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    /**
     * @return The name of the resource group under which the Iot Device Provisioning Service Certificate resource has to be created. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    private IotHubCertificateArgs() {}

    private IotHubCertificateArgs(IotHubCertificateArgs $) {
        this.certificateContent = $.certificateContent;
        this.iotDpsName = $.iotDpsName;
        this.isVerified = $.isVerified;
        this.name = $.name;
        this.resourceGroupName = $.resourceGroupName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(IotHubCertificateArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private IotHubCertificateArgs $;

        public Builder() {
            $ = new IotHubCertificateArgs();
        }

        public Builder(IotHubCertificateArgs defaults) {
            $ = new IotHubCertificateArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param certificateContent The Base-64 representation of the X509 leaf certificate .cer file or just a .pem file content.
         * 
         * @return builder
         * 
         */
        public Builder certificateContent(Output<String> certificateContent) {
            $.certificateContent = certificateContent;
            return this;
        }

        /**
         * @param certificateContent The Base-64 representation of the X509 leaf certificate .cer file or just a .pem file content.
         * 
         * @return builder
         * 
         */
        public Builder certificateContent(String certificateContent) {
            return certificateContent(Output.of(certificateContent));
        }

        /**
         * @param iotDpsName The name of the IoT Device Provisioning Service that this certificate will be attached to. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder iotDpsName(Output<String> iotDpsName) {
            $.iotDpsName = iotDpsName;
            return this;
        }

        /**
         * @param iotDpsName The name of the IoT Device Provisioning Service that this certificate will be attached to. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder iotDpsName(String iotDpsName) {
            return iotDpsName(Output.of(iotDpsName));
        }

        /**
         * @param isVerified Specifies if the certificate is created in verified state. Defaults to `false`. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder isVerified(@Nullable Output<Boolean> isVerified) {
            $.isVerified = isVerified;
            return this;
        }

        /**
         * @param isVerified Specifies if the certificate is created in verified state. Defaults to `false`. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder isVerified(Boolean isVerified) {
            return isVerified(Output.of(isVerified));
        }

        /**
         * @param name Specifies the name of the Iot Device Provisioning Service Certificate resource. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Specifies the name of the Iot Device Provisioning Service Certificate resource. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param resourceGroupName The name of the resource group under which the Iot Device Provisioning Service Certificate resource has to be created. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName The name of the resource group under which the Iot Device Provisioning Service Certificate resource has to be created. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        public IotHubCertificateArgs build() {
            if ($.certificateContent == null) {
                throw new MissingRequiredPropertyException("IotHubCertificateArgs", "certificateContent");
            }
            if ($.iotDpsName == null) {
                throw new MissingRequiredPropertyException("IotHubCertificateArgs", "iotDpsName");
            }
            if ($.resourceGroupName == null) {
                throw new MissingRequiredPropertyException("IotHubCertificateArgs", "resourceGroupName");
            }
            return $;
        }
    }

}
