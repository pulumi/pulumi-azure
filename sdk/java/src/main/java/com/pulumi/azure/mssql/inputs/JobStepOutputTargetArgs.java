// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.mssql.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class JobStepOutputTargetArgs extends com.pulumi.resources.ResourceArgs {

    public static final JobStepOutputTargetArgs Empty = new JobStepOutputTargetArgs();

    /**
     * The ID of the Elastic Job Credential to use when connecting to the output destination.
     * 
     */
    @Import(name="jobCredentialId")
    private @Nullable Output<String> jobCredentialId;

    /**
     * @return The ID of the Elastic Job Credential to use when connecting to the output destination.
     * 
     */
    public Optional<Output<String>> jobCredentialId() {
        return Optional.ofNullable(this.jobCredentialId);
    }

    /**
     * The ID of the output database.
     * 
     */
    @Import(name="mssqlDatabaseId", required=true)
    private Output<String> mssqlDatabaseId;

    /**
     * @return The ID of the output database.
     * 
     */
    public Output<String> mssqlDatabaseId() {
        return this.mssqlDatabaseId;
    }

    /**
     * The name of the output schema. Defaults to `dbo`.
     * 
     */
    @Import(name="schemaName")
    private @Nullable Output<String> schemaName;

    /**
     * @return The name of the output schema. Defaults to `dbo`.
     * 
     */
    public Optional<Output<String>> schemaName() {
        return Optional.ofNullable(this.schemaName);
    }

    /**
     * The name of the output table.
     * 
     */
    @Import(name="tableName", required=true)
    private Output<String> tableName;

    /**
     * @return The name of the output table.
     * 
     */
    public Output<String> tableName() {
        return this.tableName;
    }

    private JobStepOutputTargetArgs() {}

    private JobStepOutputTargetArgs(JobStepOutputTargetArgs $) {
        this.jobCredentialId = $.jobCredentialId;
        this.mssqlDatabaseId = $.mssqlDatabaseId;
        this.schemaName = $.schemaName;
        this.tableName = $.tableName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(JobStepOutputTargetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private JobStepOutputTargetArgs $;

        public Builder() {
            $ = new JobStepOutputTargetArgs();
        }

        public Builder(JobStepOutputTargetArgs defaults) {
            $ = new JobStepOutputTargetArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param jobCredentialId The ID of the Elastic Job Credential to use when connecting to the output destination.
         * 
         * @return builder
         * 
         */
        public Builder jobCredentialId(@Nullable Output<String> jobCredentialId) {
            $.jobCredentialId = jobCredentialId;
            return this;
        }

        /**
         * @param jobCredentialId The ID of the Elastic Job Credential to use when connecting to the output destination.
         * 
         * @return builder
         * 
         */
        public Builder jobCredentialId(String jobCredentialId) {
            return jobCredentialId(Output.of(jobCredentialId));
        }

        /**
         * @param mssqlDatabaseId The ID of the output database.
         * 
         * @return builder
         * 
         */
        public Builder mssqlDatabaseId(Output<String> mssqlDatabaseId) {
            $.mssqlDatabaseId = mssqlDatabaseId;
            return this;
        }

        /**
         * @param mssqlDatabaseId The ID of the output database.
         * 
         * @return builder
         * 
         */
        public Builder mssqlDatabaseId(String mssqlDatabaseId) {
            return mssqlDatabaseId(Output.of(mssqlDatabaseId));
        }

        /**
         * @param schemaName The name of the output schema. Defaults to `dbo`.
         * 
         * @return builder
         * 
         */
        public Builder schemaName(@Nullable Output<String> schemaName) {
            $.schemaName = schemaName;
            return this;
        }

        /**
         * @param schemaName The name of the output schema. Defaults to `dbo`.
         * 
         * @return builder
         * 
         */
        public Builder schemaName(String schemaName) {
            return schemaName(Output.of(schemaName));
        }

        /**
         * @param tableName The name of the output table.
         * 
         * @return builder
         * 
         */
        public Builder tableName(Output<String> tableName) {
            $.tableName = tableName;
            return this;
        }

        /**
         * @param tableName The name of the output table.
         * 
         * @return builder
         * 
         */
        public Builder tableName(String tableName) {
            return tableName(Output.of(tableName));
        }

        public JobStepOutputTargetArgs build() {
            if ($.mssqlDatabaseId == null) {
                throw new MissingRequiredPropertyException("JobStepOutputTargetArgs", "mssqlDatabaseId");
            }
            if ($.tableName == null) {
                throw new MissingRequiredPropertyException("JobStepOutputTargetArgs", "tableName");
            }
            return $;
        }
    }

}
