// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.keyvault.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class GetManagedHardwareSecurityModuleKeyPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetManagedHardwareSecurityModuleKeyPlainArgs Empty = new GetManagedHardwareSecurityModuleKeyPlainArgs();

    /**
     * Specifies the ID of the Managed Hardware Security Module instance where the Secret resides, available on the `azure.keyvault.ManagedHardwareSecurityModuleKey` Data Source / Resource.
     * 
     * &gt; **Note:** The Managed Hardware Security Module must be in the same subscription as the provider. If the Managed Hardware Security Module is in another subscription, you must create an aliased provider for that subscription.
     * 
     */
    @Import(name="managedHsmId", required=true)
    private String managedHsmId;

    /**
     * @return Specifies the ID of the Managed Hardware Security Module instance where the Secret resides, available on the `azure.keyvault.ManagedHardwareSecurityModuleKey` Data Source / Resource.
     * 
     * &gt; **Note:** The Managed Hardware Security Module must be in the same subscription as the provider. If the Managed Hardware Security Module is in another subscription, you must create an aliased provider for that subscription.
     * 
     */
    public String managedHsmId() {
        return this.managedHsmId;
    }

    /**
     * Specifies the name of the Managed Hardware Security Module Key.
     * 
     */
    @Import(name="name", required=true)
    private String name;

    /**
     * @return Specifies the name of the Managed Hardware Security Module Key.
     * 
     */
    public String name() {
        return this.name;
    }

    private GetManagedHardwareSecurityModuleKeyPlainArgs() {}

    private GetManagedHardwareSecurityModuleKeyPlainArgs(GetManagedHardwareSecurityModuleKeyPlainArgs $) {
        this.managedHsmId = $.managedHsmId;
        this.name = $.name;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetManagedHardwareSecurityModuleKeyPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetManagedHardwareSecurityModuleKeyPlainArgs $;

        public Builder() {
            $ = new GetManagedHardwareSecurityModuleKeyPlainArgs();
        }

        public Builder(GetManagedHardwareSecurityModuleKeyPlainArgs defaults) {
            $ = new GetManagedHardwareSecurityModuleKeyPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param managedHsmId Specifies the ID of the Managed Hardware Security Module instance where the Secret resides, available on the `azure.keyvault.ManagedHardwareSecurityModuleKey` Data Source / Resource.
         * 
         * &gt; **Note:** The Managed Hardware Security Module must be in the same subscription as the provider. If the Managed Hardware Security Module is in another subscription, you must create an aliased provider for that subscription.
         * 
         * @return builder
         * 
         */
        public Builder managedHsmId(String managedHsmId) {
            $.managedHsmId = managedHsmId;
            return this;
        }

        /**
         * @param name Specifies the name of the Managed Hardware Security Module Key.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            $.name = name;
            return this;
        }

        public GetManagedHardwareSecurityModuleKeyPlainArgs build() {
            if ($.managedHsmId == null) {
                throw new MissingRequiredPropertyException("GetManagedHardwareSecurityModuleKeyPlainArgs", "managedHsmId");
            }
            if ($.name == null) {
                throw new MissingRequiredPropertyException("GetManagedHardwareSecurityModuleKeyPlainArgs", "name");
            }
            return $;
        }
    }

}
