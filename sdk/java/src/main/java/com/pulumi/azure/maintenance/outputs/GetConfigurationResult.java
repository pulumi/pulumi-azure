// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.maintenance.outputs;

import com.pulumi.azure.maintenance.outputs.GetConfigurationInstallPatch;
import com.pulumi.azure.maintenance.outputs.GetConfigurationWindow;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetConfigurationResult {
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return The in guest user patch mode.
     * 
     */
    private String inGuestUserPatchMode;
    /**
     * @return An `install_patches` block as defined below.
     * 
     */
    private List<GetConfigurationInstallPatch> installPatches;
    /**
     * @return The Azure location where the resource exists.
     * 
     */
    private String location;
    private String name;
    /**
     * @return The properties assigned to the resource.
     * 
     */
    private Map<String,String> properties;
    private String resourceGroupName;
    /**
     * @return The scope of the Maintenance Configuration.
     * 
     */
    private String scope;
    /**
     * @return A mapping of tags assigned to the resource.
     * 
     */
    private Map<String,String> tags;
    /**
     * @return The visibility of the Maintenance Configuration.
     * 
     */
    private String visibility;
    /**
     * @return A `window` block as defined below.
     * 
     */
    private List<GetConfigurationWindow> windows;

    private GetConfigurationResult() {}
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The in guest user patch mode.
     * 
     */
    public String inGuestUserPatchMode() {
        return this.inGuestUserPatchMode;
    }
    /**
     * @return An `install_patches` block as defined below.
     * 
     */
    public List<GetConfigurationInstallPatch> installPatches() {
        return this.installPatches;
    }
    /**
     * @return The Azure location where the resource exists.
     * 
     */
    public String location() {
        return this.location;
    }
    public String name() {
        return this.name;
    }
    /**
     * @return The properties assigned to the resource.
     * 
     */
    public Map<String,String> properties() {
        return this.properties;
    }
    public String resourceGroupName() {
        return this.resourceGroupName;
    }
    /**
     * @return The scope of the Maintenance Configuration.
     * 
     */
    public String scope() {
        return this.scope;
    }
    /**
     * @return A mapping of tags assigned to the resource.
     * 
     */
    public Map<String,String> tags() {
        return this.tags;
    }
    /**
     * @return The visibility of the Maintenance Configuration.
     * 
     */
    public String visibility() {
        return this.visibility;
    }
    /**
     * @return A `window` block as defined below.
     * 
     */
    public List<GetConfigurationWindow> windows() {
        return this.windows;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetConfigurationResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String id;
        private String inGuestUserPatchMode;
        private List<GetConfigurationInstallPatch> installPatches;
        private String location;
        private String name;
        private Map<String,String> properties;
        private String resourceGroupName;
        private String scope;
        private Map<String,String> tags;
        private String visibility;
        private List<GetConfigurationWindow> windows;
        public Builder() {}
        public Builder(GetConfigurationResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.id = defaults.id;
    	      this.inGuestUserPatchMode = defaults.inGuestUserPatchMode;
    	      this.installPatches = defaults.installPatches;
    	      this.location = defaults.location;
    	      this.name = defaults.name;
    	      this.properties = defaults.properties;
    	      this.resourceGroupName = defaults.resourceGroupName;
    	      this.scope = defaults.scope;
    	      this.tags = defaults.tags;
    	      this.visibility = defaults.visibility;
    	      this.windows = defaults.windows;
        }

        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder inGuestUserPatchMode(String inGuestUserPatchMode) {
            this.inGuestUserPatchMode = Objects.requireNonNull(inGuestUserPatchMode);
            return this;
        }
        @CustomType.Setter
        public Builder installPatches(List<GetConfigurationInstallPatch> installPatches) {
            this.installPatches = Objects.requireNonNull(installPatches);
            return this;
        }
        public Builder installPatches(GetConfigurationInstallPatch... installPatches) {
            return installPatches(List.of(installPatches));
        }
        @CustomType.Setter
        public Builder location(String location) {
            this.location = Objects.requireNonNull(location);
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder properties(Map<String,String> properties) {
            this.properties = Objects.requireNonNull(properties);
            return this;
        }
        @CustomType.Setter
        public Builder resourceGroupName(String resourceGroupName) {
            this.resourceGroupName = Objects.requireNonNull(resourceGroupName);
            return this;
        }
        @CustomType.Setter
        public Builder scope(String scope) {
            this.scope = Objects.requireNonNull(scope);
            return this;
        }
        @CustomType.Setter
        public Builder tags(Map<String,String> tags) {
            this.tags = Objects.requireNonNull(tags);
            return this;
        }
        @CustomType.Setter
        public Builder visibility(String visibility) {
            this.visibility = Objects.requireNonNull(visibility);
            return this;
        }
        @CustomType.Setter
        public Builder windows(List<GetConfigurationWindow> windows) {
            this.windows = Objects.requireNonNull(windows);
            return this;
        }
        public Builder windows(GetConfigurationWindow... windows) {
            return windows(List.of(windows));
        }
        public GetConfigurationResult build() {
            final var _resultValue = new GetConfigurationResult();
            _resultValue.id = id;
            _resultValue.inGuestUserPatchMode = inGuestUserPatchMode;
            _resultValue.installPatches = installPatches;
            _resultValue.location = location;
            _resultValue.name = name;
            _resultValue.properties = properties;
            _resultValue.resourceGroupName = resourceGroupName;
            _resultValue.scope = scope;
            _resultValue.tags = tags;
            _resultValue.visibility = visibility;
            _resultValue.windows = windows;
            return _resultValue;
        }
    }
}
