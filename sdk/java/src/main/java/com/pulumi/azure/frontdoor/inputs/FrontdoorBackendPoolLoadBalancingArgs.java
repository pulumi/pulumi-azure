// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.frontdoor.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class FrontdoorBackendPoolLoadBalancingArgs extends com.pulumi.resources.ResourceArgs {

    public static final FrontdoorBackendPoolLoadBalancingArgs Empty = new FrontdoorBackendPoolLoadBalancingArgs();

    /**
     * The additional latency in milliseconds for probes to fall into the lowest latency bucket. Defaults to `0`.
     * 
     */
    @Import(name="additionalLatencyMilliseconds")
    private @Nullable Output<Integer> additionalLatencyMilliseconds;

    /**
     * @return The additional latency in milliseconds for probes to fall into the lowest latency bucket. Defaults to `0`.
     * 
     */
    public Optional<Output<Integer>> additionalLatencyMilliseconds() {
        return Optional.ofNullable(this.additionalLatencyMilliseconds);
    }

    /**
     * The ID of the FrontDoor.
     * 
     */
    @Import(name="id")
    private @Nullable Output<String> id;

    /**
     * @return The ID of the FrontDoor.
     * 
     */
    public Optional<Output<String>> id() {
        return Optional.ofNullable(this.id);
    }

    /**
     * Specifies the name of the Load Balancer.
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    /**
     * @return Specifies the name of the Load Balancer.
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    /**
     * The number of samples to consider for load balancing decisions. Defaults to `4`.
     * 
     */
    @Import(name="sampleSize")
    private @Nullable Output<Integer> sampleSize;

    /**
     * @return The number of samples to consider for load balancing decisions. Defaults to `4`.
     * 
     */
    public Optional<Output<Integer>> sampleSize() {
        return Optional.ofNullable(this.sampleSize);
    }

    /**
     * The number of samples within the sample period that must succeed. Defaults to `2`.
     * 
     */
    @Import(name="successfulSamplesRequired")
    private @Nullable Output<Integer> successfulSamplesRequired;

    /**
     * @return The number of samples within the sample period that must succeed. Defaults to `2`.
     * 
     */
    public Optional<Output<Integer>> successfulSamplesRequired() {
        return Optional.ofNullable(this.successfulSamplesRequired);
    }

    private FrontdoorBackendPoolLoadBalancingArgs() {}

    private FrontdoorBackendPoolLoadBalancingArgs(FrontdoorBackendPoolLoadBalancingArgs $) {
        this.additionalLatencyMilliseconds = $.additionalLatencyMilliseconds;
        this.id = $.id;
        this.name = $.name;
        this.sampleSize = $.sampleSize;
        this.successfulSamplesRequired = $.successfulSamplesRequired;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FrontdoorBackendPoolLoadBalancingArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FrontdoorBackendPoolLoadBalancingArgs $;

        public Builder() {
            $ = new FrontdoorBackendPoolLoadBalancingArgs();
        }

        public Builder(FrontdoorBackendPoolLoadBalancingArgs defaults) {
            $ = new FrontdoorBackendPoolLoadBalancingArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param additionalLatencyMilliseconds The additional latency in milliseconds for probes to fall into the lowest latency bucket. Defaults to `0`.
         * 
         * @return builder
         * 
         */
        public Builder additionalLatencyMilliseconds(@Nullable Output<Integer> additionalLatencyMilliseconds) {
            $.additionalLatencyMilliseconds = additionalLatencyMilliseconds;
            return this;
        }

        /**
         * @param additionalLatencyMilliseconds The additional latency in milliseconds for probes to fall into the lowest latency bucket. Defaults to `0`.
         * 
         * @return builder
         * 
         */
        public Builder additionalLatencyMilliseconds(Integer additionalLatencyMilliseconds) {
            return additionalLatencyMilliseconds(Output.of(additionalLatencyMilliseconds));
        }

        /**
         * @param id The ID of the FrontDoor.
         * 
         * @return builder
         * 
         */
        public Builder id(@Nullable Output<String> id) {
            $.id = id;
            return this;
        }

        /**
         * @param id The ID of the FrontDoor.
         * 
         * @return builder
         * 
         */
        public Builder id(String id) {
            return id(Output.of(id));
        }

        /**
         * @param name Specifies the name of the Load Balancer.
         * 
         * @return builder
         * 
         */
        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Specifies the name of the Load Balancer.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param sampleSize The number of samples to consider for load balancing decisions. Defaults to `4`.
         * 
         * @return builder
         * 
         */
        public Builder sampleSize(@Nullable Output<Integer> sampleSize) {
            $.sampleSize = sampleSize;
            return this;
        }

        /**
         * @param sampleSize The number of samples to consider for load balancing decisions. Defaults to `4`.
         * 
         * @return builder
         * 
         */
        public Builder sampleSize(Integer sampleSize) {
            return sampleSize(Output.of(sampleSize));
        }

        /**
         * @param successfulSamplesRequired The number of samples within the sample period that must succeed. Defaults to `2`.
         * 
         * @return builder
         * 
         */
        public Builder successfulSamplesRequired(@Nullable Output<Integer> successfulSamplesRequired) {
            $.successfulSamplesRequired = successfulSamplesRequired;
            return this;
        }

        /**
         * @param successfulSamplesRequired The number of samples within the sample period that must succeed. Defaults to `2`.
         * 
         * @return builder
         * 
         */
        public Builder successfulSamplesRequired(Integer successfulSamplesRequired) {
            return successfulSamplesRequired(Output.of(successfulSamplesRequired));
        }

        public FrontdoorBackendPoolLoadBalancingArgs build() {
            if ($.name == null) {
                throw new MissingRequiredPropertyException("FrontdoorBackendPoolLoadBalancingArgs", "name");
            }
            return $;
        }
    }

}
