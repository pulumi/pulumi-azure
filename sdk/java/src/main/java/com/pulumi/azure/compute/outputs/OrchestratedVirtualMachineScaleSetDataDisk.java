// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.compute.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class OrchestratedVirtualMachineScaleSetDataDisk {
    private final String caching;
    private final @Nullable String createOption;
    private final @Nullable String diskEncryptionSetId;
    private final Integer diskSizeGb;
    private final Integer lun;
    private final String storageAccountType;
    private final @Nullable Integer ultraSsdDiskIopsReadWrite;
    private final @Nullable Integer ultraSsdDiskMbpsReadWrite;
    private final @Nullable Boolean writeAcceleratorEnabled;

    @CustomType.Constructor
    private OrchestratedVirtualMachineScaleSetDataDisk(
        @CustomType.Parameter("caching") String caching,
        @CustomType.Parameter("createOption") @Nullable String createOption,
        @CustomType.Parameter("diskEncryptionSetId") @Nullable String diskEncryptionSetId,
        @CustomType.Parameter("diskSizeGb") Integer diskSizeGb,
        @CustomType.Parameter("lun") Integer lun,
        @CustomType.Parameter("storageAccountType") String storageAccountType,
        @CustomType.Parameter("ultraSsdDiskIopsReadWrite") @Nullable Integer ultraSsdDiskIopsReadWrite,
        @CustomType.Parameter("ultraSsdDiskMbpsReadWrite") @Nullable Integer ultraSsdDiskMbpsReadWrite,
        @CustomType.Parameter("writeAcceleratorEnabled") @Nullable Boolean writeAcceleratorEnabled) {
        this.caching = caching;
        this.createOption = createOption;
        this.diskEncryptionSetId = diskEncryptionSetId;
        this.diskSizeGb = diskSizeGb;
        this.lun = lun;
        this.storageAccountType = storageAccountType;
        this.ultraSsdDiskIopsReadWrite = ultraSsdDiskIopsReadWrite;
        this.ultraSsdDiskMbpsReadWrite = ultraSsdDiskMbpsReadWrite;
        this.writeAcceleratorEnabled = writeAcceleratorEnabled;
    }

    public String caching() {
        return this.caching;
    }
    public Optional<String> createOption() {
        return Optional.ofNullable(this.createOption);
    }
    public Optional<String> diskEncryptionSetId() {
        return Optional.ofNullable(this.diskEncryptionSetId);
    }
    public Integer diskSizeGb() {
        return this.diskSizeGb;
    }
    public Integer lun() {
        return this.lun;
    }
    public String storageAccountType() {
        return this.storageAccountType;
    }
    public Optional<Integer> ultraSsdDiskIopsReadWrite() {
        return Optional.ofNullable(this.ultraSsdDiskIopsReadWrite);
    }
    public Optional<Integer> ultraSsdDiskMbpsReadWrite() {
        return Optional.ofNullable(this.ultraSsdDiskMbpsReadWrite);
    }
    public Optional<Boolean> writeAcceleratorEnabled() {
        return Optional.ofNullable(this.writeAcceleratorEnabled);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(OrchestratedVirtualMachineScaleSetDataDisk defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String caching;
        private @Nullable String createOption;
        private @Nullable String diskEncryptionSetId;
        private Integer diskSizeGb;
        private Integer lun;
        private String storageAccountType;
        private @Nullable Integer ultraSsdDiskIopsReadWrite;
        private @Nullable Integer ultraSsdDiskMbpsReadWrite;
        private @Nullable Boolean writeAcceleratorEnabled;

        public Builder() {
    	      // Empty
        }

        public Builder(OrchestratedVirtualMachineScaleSetDataDisk defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.caching = defaults.caching;
    	      this.createOption = defaults.createOption;
    	      this.diskEncryptionSetId = defaults.diskEncryptionSetId;
    	      this.diskSizeGb = defaults.diskSizeGb;
    	      this.lun = defaults.lun;
    	      this.storageAccountType = defaults.storageAccountType;
    	      this.ultraSsdDiskIopsReadWrite = defaults.ultraSsdDiskIopsReadWrite;
    	      this.ultraSsdDiskMbpsReadWrite = defaults.ultraSsdDiskMbpsReadWrite;
    	      this.writeAcceleratorEnabled = defaults.writeAcceleratorEnabled;
        }

        public Builder caching(String caching) {
            this.caching = Objects.requireNonNull(caching);
            return this;
        }
        public Builder createOption(@Nullable String createOption) {
            this.createOption = createOption;
            return this;
        }
        public Builder diskEncryptionSetId(@Nullable String diskEncryptionSetId) {
            this.diskEncryptionSetId = diskEncryptionSetId;
            return this;
        }
        public Builder diskSizeGb(Integer diskSizeGb) {
            this.diskSizeGb = Objects.requireNonNull(diskSizeGb);
            return this;
        }
        public Builder lun(Integer lun) {
            this.lun = Objects.requireNonNull(lun);
            return this;
        }
        public Builder storageAccountType(String storageAccountType) {
            this.storageAccountType = Objects.requireNonNull(storageAccountType);
            return this;
        }
        public Builder ultraSsdDiskIopsReadWrite(@Nullable Integer ultraSsdDiskIopsReadWrite) {
            this.ultraSsdDiskIopsReadWrite = ultraSsdDiskIopsReadWrite;
            return this;
        }
        public Builder ultraSsdDiskMbpsReadWrite(@Nullable Integer ultraSsdDiskMbpsReadWrite) {
            this.ultraSsdDiskMbpsReadWrite = ultraSsdDiskMbpsReadWrite;
            return this;
        }
        public Builder writeAcceleratorEnabled(@Nullable Boolean writeAcceleratorEnabled) {
            this.writeAcceleratorEnabled = writeAcceleratorEnabled;
            return this;
        }        public OrchestratedVirtualMachineScaleSetDataDisk build() {
            return new OrchestratedVirtualMachineScaleSetDataDisk(caching, createOption, diskEncryptionSetId, diskSizeGb, lun, storageAccountType, ultraSsdDiskIopsReadWrite, ultraSsdDiskMbpsReadWrite, writeAcceleratorEnabled);
        }
    }
}
