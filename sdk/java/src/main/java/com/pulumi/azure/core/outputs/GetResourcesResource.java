// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.core.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetResourcesResource {
    /**
     * @return The ID of this Resource.
     * 
     */
    private String id;
    /**
     * @return The Azure Region in which this Resource exists.
     * 
     */
    private String location;
    /**
     * @return The name of the Resource.
     * 
     */
    private String name;
    /**
     * @return The name of the Resource group where the Resources are located.
     * 
     */
    private String resourceGroupName;
    /**
     * @return A map of tags assigned to this Resource.
     * 
     */
    private Map<String,String> tags;
    /**
     * @return The Resource Type of the Resources you want to list (e.g. `Microsoft.Network/virtualNetworks`). A resource type&#39;s name follows the format: `{resource-provider}/{resource-type}`. The resource type for a key vault is `Microsoft.KeyVault/vaults`. A full list of available Resource Providers can be found [here](https://docs.microsoft.com/azure/azure-resource-manager/azure-services-resource-providers). A full list of Resources Types can be found [here](https://learn.microsoft.com/en-us/azure/templates/#find-resources).
     * 
     */
    private String type;

    private GetResourcesResource() {}
    /**
     * @return The ID of this Resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The Azure Region in which this Resource exists.
     * 
     */
    public String location() {
        return this.location;
    }
    /**
     * @return The name of the Resource.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The name of the Resource group where the Resources are located.
     * 
     */
    public String resourceGroupName() {
        return this.resourceGroupName;
    }
    /**
     * @return A map of tags assigned to this Resource.
     * 
     */
    public Map<String,String> tags() {
        return this.tags;
    }
    /**
     * @return The Resource Type of the Resources you want to list (e.g. `Microsoft.Network/virtualNetworks`). A resource type&#39;s name follows the format: `{resource-provider}/{resource-type}`. The resource type for a key vault is `Microsoft.KeyVault/vaults`. A full list of available Resource Providers can be found [here](https://docs.microsoft.com/azure/azure-resource-manager/azure-services-resource-providers). A full list of Resources Types can be found [here](https://learn.microsoft.com/en-us/azure/templates/#find-resources).
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetResourcesResource defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String id;
        private String location;
        private String name;
        private String resourceGroupName;
        private Map<String,String> tags;
        private String type;
        public Builder() {}
        public Builder(GetResourcesResource defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.id = defaults.id;
    	      this.location = defaults.location;
    	      this.name = defaults.name;
    	      this.resourceGroupName = defaults.resourceGroupName;
    	      this.tags = defaults.tags;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder location(String location) {
            this.location = Objects.requireNonNull(location);
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder resourceGroupName(String resourceGroupName) {
            this.resourceGroupName = Objects.requireNonNull(resourceGroupName);
            return this;
        }
        @CustomType.Setter
        public Builder tags(Map<String,String> tags) {
            this.tags = Objects.requireNonNull(tags);
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        public GetResourcesResource build() {
            final var _resultValue = new GetResourcesResource();
            _resultValue.id = id;
            _resultValue.location = location;
            _resultValue.name = name;
            _resultValue.resourceGroupName = resourceGroupName;
            _resultValue.tags = tags;
            _resultValue.type = type;
            return _resultValue;
        }
    }
}
