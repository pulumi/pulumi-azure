// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.operationalinsights;

import com.pulumi.azure.operationalinsights.inputs.AnalyticsSolutionPlanArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AnalyticsSolutionArgs extends com.pulumi.resources.ResourceArgs {

    public static final AnalyticsSolutionArgs Empty = new AnalyticsSolutionArgs();

    /**
     * Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="location")
    private @Nullable Output<String> location;

    /**
     * @return Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * A `plan` block as documented below.
     * 
     */
    @Import(name="plan", required=true)
    private Output<AnalyticsSolutionPlanArgs> plan;

    /**
     * @return A `plan` block as documented below.
     * 
     */
    public Output<AnalyticsSolutionPlanArgs> plan() {
        return this.plan;
    }

    /**
     * The name of the resource group in which the Log Analytics solution is created. Changing this forces a new resource to be created. Note: The solution and its related workspace can only exist in the same resource group.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    /**
     * @return The name of the resource group in which the Log Analytics solution is created. Changing this forces a new resource to be created. Note: The solution and its related workspace can only exist in the same resource group.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * Specifies the name of the solution to be deployed. See [here for options](https://docs.microsoft.com/azure/log-analytics/log-analytics-add-solutions).Changing this forces a new resource to be created.
     * 
     */
    @Import(name="solutionName", required=true)
    private Output<String> solutionName;

    /**
     * @return Specifies the name of the solution to be deployed. See [here for options](https://docs.microsoft.com/azure/log-analytics/log-analytics-add-solutions).Changing this forces a new resource to be created.
     * 
     */
    public Output<String> solutionName() {
        return this.solutionName;
    }

    /**
     * A mapping of tags to assign to the resource.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return A mapping of tags to assign to the resource.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * The full name of the Log Analytics workspace with which the solution will be linked. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="workspaceName", required=true)
    private Output<String> workspaceName;

    /**
     * @return The full name of the Log Analytics workspace with which the solution will be linked. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> workspaceName() {
        return this.workspaceName;
    }

    /**
     * The full resource ID of the Log Analytics workspace with which the solution will be linked. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="workspaceResourceId", required=true)
    private Output<String> workspaceResourceId;

    /**
     * @return The full resource ID of the Log Analytics workspace with which the solution will be linked. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> workspaceResourceId() {
        return this.workspaceResourceId;
    }

    private AnalyticsSolutionArgs() {}

    private AnalyticsSolutionArgs(AnalyticsSolutionArgs $) {
        this.location = $.location;
        this.plan = $.plan;
        this.resourceGroupName = $.resourceGroupName;
        this.solutionName = $.solutionName;
        this.tags = $.tags;
        this.workspaceName = $.workspaceName;
        this.workspaceResourceId = $.workspaceResourceId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AnalyticsSolutionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AnalyticsSolutionArgs $;

        public Builder() {
            $ = new AnalyticsSolutionArgs();
        }

        public Builder(AnalyticsSolutionArgs defaults) {
            $ = new AnalyticsSolutionArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param location Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param plan A `plan` block as documented below.
         * 
         * @return builder
         * 
         */
        public Builder plan(Output<AnalyticsSolutionPlanArgs> plan) {
            $.plan = plan;
            return this;
        }

        /**
         * @param plan A `plan` block as documented below.
         * 
         * @return builder
         * 
         */
        public Builder plan(AnalyticsSolutionPlanArgs plan) {
            return plan(Output.of(plan));
        }

        /**
         * @param resourceGroupName The name of the resource group in which the Log Analytics solution is created. Changing this forces a new resource to be created. Note: The solution and its related workspace can only exist in the same resource group.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName The name of the resource group in which the Log Analytics solution is created. Changing this forces a new resource to be created. Note: The solution and its related workspace can only exist in the same resource group.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        /**
         * @param solutionName Specifies the name of the solution to be deployed. See [here for options](https://docs.microsoft.com/azure/log-analytics/log-analytics-add-solutions).Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder solutionName(Output<String> solutionName) {
            $.solutionName = solutionName;
            return this;
        }

        /**
         * @param solutionName Specifies the name of the solution to be deployed. See [here for options](https://docs.microsoft.com/azure/log-analytics/log-analytics-add-solutions).Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder solutionName(String solutionName) {
            return solutionName(Output.of(solutionName));
        }

        /**
         * @param tags A mapping of tags to assign to the resource.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags A mapping of tags to assign to the resource.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param workspaceName The full name of the Log Analytics workspace with which the solution will be linked. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder workspaceName(Output<String> workspaceName) {
            $.workspaceName = workspaceName;
            return this;
        }

        /**
         * @param workspaceName The full name of the Log Analytics workspace with which the solution will be linked. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder workspaceName(String workspaceName) {
            return workspaceName(Output.of(workspaceName));
        }

        /**
         * @param workspaceResourceId The full resource ID of the Log Analytics workspace with which the solution will be linked. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder workspaceResourceId(Output<String> workspaceResourceId) {
            $.workspaceResourceId = workspaceResourceId;
            return this;
        }

        /**
         * @param workspaceResourceId The full resource ID of the Log Analytics workspace with which the solution will be linked. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder workspaceResourceId(String workspaceResourceId) {
            return workspaceResourceId(Output.of(workspaceResourceId));
        }

        public AnalyticsSolutionArgs build() {
            if ($.plan == null) {
                throw new MissingRequiredPropertyException("AnalyticsSolutionArgs", "plan");
            }
            if ($.resourceGroupName == null) {
                throw new MissingRequiredPropertyException("AnalyticsSolutionArgs", "resourceGroupName");
            }
            if ($.solutionName == null) {
                throw new MissingRequiredPropertyException("AnalyticsSolutionArgs", "solutionName");
            }
            if ($.workspaceName == null) {
                throw new MissingRequiredPropertyException("AnalyticsSolutionArgs", "workspaceName");
            }
            if ($.workspaceResourceId == null) {
                throw new MissingRequiredPropertyException("AnalyticsSolutionArgs", "workspaceResourceId");
            }
            return $;
        }
    }

}
