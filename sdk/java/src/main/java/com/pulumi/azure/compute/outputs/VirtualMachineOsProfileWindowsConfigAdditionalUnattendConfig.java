// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.compute.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class VirtualMachineOsProfileWindowsConfigAdditionalUnattendConfig {
    /**
     * @return Specifies the name of the component to configure with the added content. The only allowable value is `Microsoft-Windows-Shell-Setup`.
     * 
     */
    private final String component;
    /**
     * @return Specifies the base-64 encoded XML formatted content that is added to the unattend.xml file for the specified path and component.
     * 
     */
    private final String content;
    /**
     * @return Specifies the name of the pass that the content applies to. The only allowable value is `oobeSystem`.
     * 
     */
    private final String pass;
    /**
     * @return Specifies the name of the setting to which the content applies. Possible values are: `FirstLogonCommands` and `AutoLogon`.
     * 
     */
    private final String settingName;

    @CustomType.Constructor
    private VirtualMachineOsProfileWindowsConfigAdditionalUnattendConfig(
        @CustomType.Parameter("component") String component,
        @CustomType.Parameter("content") String content,
        @CustomType.Parameter("pass") String pass,
        @CustomType.Parameter("settingName") String settingName) {
        this.component = component;
        this.content = content;
        this.pass = pass;
        this.settingName = settingName;
    }

    /**
     * @return Specifies the name of the component to configure with the added content. The only allowable value is `Microsoft-Windows-Shell-Setup`.
     * 
     */
    public String component() {
        return this.component;
    }
    /**
     * @return Specifies the base-64 encoded XML formatted content that is added to the unattend.xml file for the specified path and component.
     * 
     */
    public String content() {
        return this.content;
    }
    /**
     * @return Specifies the name of the pass that the content applies to. The only allowable value is `oobeSystem`.
     * 
     */
    public String pass() {
        return this.pass;
    }
    /**
     * @return Specifies the name of the setting to which the content applies. Possible values are: `FirstLogonCommands` and `AutoLogon`.
     * 
     */
    public String settingName() {
        return this.settingName;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(VirtualMachineOsProfileWindowsConfigAdditionalUnattendConfig defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String component;
        private String content;
        private String pass;
        private String settingName;

        public Builder() {
    	      // Empty
        }

        public Builder(VirtualMachineOsProfileWindowsConfigAdditionalUnattendConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.component = defaults.component;
    	      this.content = defaults.content;
    	      this.pass = defaults.pass;
    	      this.settingName = defaults.settingName;
        }

        public Builder component(String component) {
            this.component = Objects.requireNonNull(component);
            return this;
        }
        public Builder content(String content) {
            this.content = Objects.requireNonNull(content);
            return this;
        }
        public Builder pass(String pass) {
            this.pass = Objects.requireNonNull(pass);
            return this;
        }
        public Builder settingName(String settingName) {
            this.settingName = Objects.requireNonNull(settingName);
            return this;
        }        public VirtualMachineOsProfileWindowsConfigAdditionalUnattendConfig build() {
            return new VirtualMachineOsProfileWindowsConfigAdditionalUnattendConfig(component, content, pass, settingName);
        }
    }
}
