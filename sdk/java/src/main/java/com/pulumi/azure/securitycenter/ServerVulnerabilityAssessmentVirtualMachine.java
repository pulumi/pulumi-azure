// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.securitycenter;

import com.pulumi.azure.Utilities;
import com.pulumi.azure.securitycenter.ServerVulnerabilityAssessmentVirtualMachineArgs;
import com.pulumi.azure.securitycenter.inputs.ServerVulnerabilityAssessmentVirtualMachineState;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import javax.annotation.Nullable;

/**
 * Manages an Azure Server Vulnerability Assessment (Qualys) to a VM.
 * 
 * &gt; **NOTE** Azure Defender has to be enabled on the subscription in order for this resource to work.
 * See this [documentation](https://docs.microsoft.com/azure/security-center/security-center-get-started) to get started.
 * 
 * ## Example Usage
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.azure.core.ResourceGroup;
 * import com.pulumi.azure.core.ResourceGroupArgs;
 * import com.pulumi.azure.network.VirtualNetwork;
 * import com.pulumi.azure.network.VirtualNetworkArgs;
 * import com.pulumi.azure.network.Subnet;
 * import com.pulumi.azure.network.SubnetArgs;
 * import com.pulumi.azure.network.NetworkInterface;
 * import com.pulumi.azure.network.NetworkInterfaceArgs;
 * import com.pulumi.azure.network.inputs.NetworkInterfaceIpConfigurationArgs;
 * import com.pulumi.azure.compute.LinuxVirtualMachine;
 * import com.pulumi.azure.compute.LinuxVirtualMachineArgs;
 * import com.pulumi.azure.compute.inputs.LinuxVirtualMachineSourceImageReferenceArgs;
 * import com.pulumi.azure.compute.inputs.LinuxVirtualMachineOsDiskArgs;
 * import com.pulumi.azure.securitycenter.ServerVulnerabilityAssessmentVirtualMachine;
 * import com.pulumi.azure.securitycenter.ServerVulnerabilityAssessmentVirtualMachineArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var exampleResourceGroup = new ResourceGroup(&#34;exampleResourceGroup&#34;, ResourceGroupArgs.builder()        
 *             .location(&#34;West Europe&#34;)
 *             .build());
 * 
 *         var exampleVirtualNetwork = new VirtualNetwork(&#34;exampleVirtualNetwork&#34;, VirtualNetworkArgs.builder()        
 *             .resourceGroupName(exampleResourceGroup.name())
 *             .addressSpaces(&#34;192.168.1.0/24&#34;)
 *             .location(exampleResourceGroup.location())
 *             .build());
 * 
 *         var exampleSubnet = new Subnet(&#34;exampleSubnet&#34;, SubnetArgs.builder()        
 *             .resourceGroupName(exampleResourceGroup.name())
 *             .virtualNetworkName(exampleVirtualNetwork.name())
 *             .addressPrefixes(&#34;192.168.1.0/24&#34;)
 *             .build());
 * 
 *         var exampleNetworkInterface = new NetworkInterface(&#34;exampleNetworkInterface&#34;, NetworkInterfaceArgs.builder()        
 *             .location(exampleResourceGroup.location())
 *             .resourceGroupName(exampleResourceGroup.name())
 *             .ipConfigurations(NetworkInterfaceIpConfigurationArgs.builder()
 *                 .name(&#34;vm-example&#34;)
 *                 .subnetId(exampleSubnet.id())
 *                 .privateIpAddressAllocation(&#34;Dynamic&#34;)
 *                 .build())
 *             .build());
 * 
 *         var exampleLinuxVirtualMachine = new LinuxVirtualMachine(&#34;exampleLinuxVirtualMachine&#34;, LinuxVirtualMachineArgs.builder()        
 *             .location(exampleResourceGroup.location())
 *             .resourceGroupName(exampleResourceGroup.name())
 *             .size(&#34;Standard_B1s&#34;)
 *             .adminUsername(&#34;testadmin&#34;)
 *             .adminPassword(&#34;Password1234!&#34;)
 *             .disablePasswordAuthentication(false)
 *             .sourceImageReference(LinuxVirtualMachineSourceImageReferenceArgs.builder()
 *                 .publisher(&#34;Canonical&#34;)
 *                 .offer(&#34;0001-com-ubuntu-server-jammy&#34;)
 *                 .sku(&#34;22_04-lts&#34;)
 *                 .version(&#34;latest&#34;)
 *                 .build())
 *             .osDisk(LinuxVirtualMachineOsDiskArgs.builder()
 *                 .caching(&#34;ReadWrite&#34;)
 *                 .storageAccountType(&#34;Standard_LRS&#34;)
 *                 .build())
 *             .networkInterfaceIds(exampleNetworkInterface.id())
 *             .build());
 * 
 *         var exampleServerVulnerabilityAssessmentVirtualMachine = new ServerVulnerabilityAssessmentVirtualMachine(&#34;exampleServerVulnerabilityAssessmentVirtualMachine&#34;, ServerVulnerabilityAssessmentVirtualMachineArgs.builder()        
 *             .virtualMachineId(exampleLinuxVirtualMachine.id())
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * Server Vulnerability Assessments can be imported using the `resource id`, e.g.
 * 
 * ```sh
 *  $ pulumi import azure:securitycenter/serverVulnerabilityAssessmentVirtualMachine:ServerVulnerabilityAssessmentVirtualMachine example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resource-group-name/providers/Microsoft.Compute/virtualMachines/vm-name/providers/Microsoft.Security/serverVulnerabilityAssessments/Default
 * ```
 * 
 */
@ResourceType(type="azure:securitycenter/serverVulnerabilityAssessmentVirtualMachine:ServerVulnerabilityAssessmentVirtualMachine")
public class ServerVulnerabilityAssessmentVirtualMachine extends com.pulumi.resources.CustomResource {
    /**
     * The ID of the virtual machine to be monitored by vulnerability assessment. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="virtualMachineId", refs={String.class}, tree="[0]")
    private Output<String> virtualMachineId;

    /**
     * @return The ID of the virtual machine to be monitored by vulnerability assessment. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> virtualMachineId() {
        return this.virtualMachineId;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public ServerVulnerabilityAssessmentVirtualMachine(String name) {
        this(name, ServerVulnerabilityAssessmentVirtualMachineArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public ServerVulnerabilityAssessmentVirtualMachine(String name, ServerVulnerabilityAssessmentVirtualMachineArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public ServerVulnerabilityAssessmentVirtualMachine(String name, ServerVulnerabilityAssessmentVirtualMachineArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:securitycenter/serverVulnerabilityAssessmentVirtualMachine:ServerVulnerabilityAssessmentVirtualMachine", name, args == null ? ServerVulnerabilityAssessmentVirtualMachineArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private ServerVulnerabilityAssessmentVirtualMachine(String name, Output<String> id, @Nullable ServerVulnerabilityAssessmentVirtualMachineState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:securitycenter/serverVulnerabilityAssessmentVirtualMachine:ServerVulnerabilityAssessmentVirtualMachine", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static ServerVulnerabilityAssessmentVirtualMachine get(String name, Output<String> id, @Nullable ServerVulnerabilityAssessmentVirtualMachineState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new ServerVulnerabilityAssessmentVirtualMachine(name, id, state, options);
    }
}
