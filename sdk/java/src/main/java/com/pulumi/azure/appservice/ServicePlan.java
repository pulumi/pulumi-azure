// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.appservice;

import com.pulumi.azure.Utilities;
import com.pulumi.azure.appservice.ServicePlanArgs;
import com.pulumi.azure.appservice.inputs.ServicePlanState;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Manages an App Service: Service Plan.
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.azure.core.ResourceGroup;
 * import com.pulumi.azure.core.ResourceGroupArgs;
 * import com.pulumi.azure.appservice.ServicePlan;
 * import com.pulumi.azure.appservice.ServicePlanArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new ResourceGroup("example", ResourceGroupArgs.builder()
 *             .name("example-resources")
 *             .location("West Europe")
 *             .build());
 * 
 *         var exampleServicePlan = new ServicePlan("exampleServicePlan", ServicePlanArgs.builder()
 *             .name("example")
 *             .resourceGroupName(example.name())
 *             .location(example.location())
 *             .osType("Linux")
 *             .skuName("P1v2")
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## API Providers
 * 
 * &lt;!-- This section is generated, changes will be overwritten --&gt;
 * This resource uses the following Azure API Providers:
 * 
 * * `Microsoft.Web`: 2023-12-01
 * 
 * ## Import
 * 
 * AppServices can be imported using the `resource id`, e.g.
 * 
 * ```sh
 * $ pulumi import azure:appservice/servicePlan:ServicePlan example /subscriptions/12345678-1234-9876-4563-123456789012/resourceGroups/resGroup1/providers/Microsoft.Web/serverFarms/farm1
 * ```
 * 
 */
@ResourceType(type="azure:appservice/servicePlan:ServicePlan")
public class ServicePlan extends com.pulumi.resources.CustomResource {
    /**
     * The ID of the App Service Environment to create this Service Plan in.
     * 
     * &gt; **Note:** Requires an Isolated SKU for `azure.appservice.EnvironmentV3`, supported values include `I1v2`, `I1mv2`, `I2v2`, `I2mv2`, `I3v2`, `I3mv2`, `I4v2`, `I4mv2`, `I5v2`, `I5mv2`, and `I6v2`.
     * 
     */
    @Export(name="appServiceEnvironmentId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> appServiceEnvironmentId;

    /**
     * @return The ID of the App Service Environment to create this Service Plan in.
     * 
     * &gt; **Note:** Requires an Isolated SKU for `azure.appservice.EnvironmentV3`, supported values include `I1v2`, `I1mv2`, `I2v2`, `I2mv2`, `I3v2`, `I3mv2`, `I4v2`, `I4mv2`, `I5v2`, `I5mv2`, and `I6v2`.
     * 
     */
    public Output<Optional<String>> appServiceEnvironmentId() {
        return Codegen.optional(this.appServiceEnvironmentId);
    }
    /**
     * A string representing the Kind of Service Plan.
     * 
     */
    @Export(name="kind", refs={String.class}, tree="[0]")
    private Output<String> kind;

    /**
     * @return A string representing the Kind of Service Plan.
     * 
     */
    public Output<String> kind() {
        return this.kind;
    }
    /**
     * The Azure Region where the Service Plan should exist. Changing this forces a new Service Plan to be created.
     * 
     */
    @Export(name="location", refs={String.class}, tree="[0]")
    private Output<String> location;

    /**
     * @return The Azure Region where the Service Plan should exist. Changing this forces a new Service Plan to be created.
     * 
     */
    public Output<String> location() {
        return this.location;
    }
    /**
     * The maximum number of workers to use in an Elastic SKU Plan or Premium Plan that have `premium_plan_auto_scale_enabled` set to `true`. Cannot be set unless using an Elastic or Premium SKU.
     * 
     */
    @Export(name="maximumElasticWorkerCount", refs={Integer.class}, tree="[0]")
    private Output<Integer> maximumElasticWorkerCount;

    /**
     * @return The maximum number of workers to use in an Elastic SKU Plan or Premium Plan that have `premium_plan_auto_scale_enabled` set to `true`. Cannot be set unless using an Elastic or Premium SKU.
     * 
     */
    public Output<Integer> maximumElasticWorkerCount() {
        return this.maximumElasticWorkerCount;
    }
    /**
     * The name which should be used for this Service Plan. Changing this forces a new Service Plan to be created.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The name which should be used for this Service Plan. Changing this forces a new Service Plan to be created.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The O/S type for the App Services to be hosted in this plan. Possible values include `Windows`, `Linux`, and `WindowsContainer`. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="osType", refs={String.class}, tree="[0]")
    private Output<String> osType;

    /**
     * @return The O/S type for the App Services to be hosted in this plan. Possible values include `Windows`, `Linux`, and `WindowsContainer`. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> osType() {
        return this.osType;
    }
    /**
     * Should Per Site Scaling be enabled. Defaults to `false`.
     * 
     */
    @Export(name="perSiteScalingEnabled", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> perSiteScalingEnabled;

    /**
     * @return Should Per Site Scaling be enabled. Defaults to `false`.
     * 
     */
    public Output<Optional<Boolean>> perSiteScalingEnabled() {
        return Codegen.optional(this.perSiteScalingEnabled);
    }
    /**
     * Should automatic scaling be enabled for the Premium SKU Plan. Defaults to `false`. Cannot be set unless using a Premium SKU.
     * 
     */
    @Export(name="premiumPlanAutoScaleEnabled", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> premiumPlanAutoScaleEnabled;

    /**
     * @return Should automatic scaling be enabled for the Premium SKU Plan. Defaults to `false`. Cannot be set unless using a Premium SKU.
     * 
     */
    public Output<Optional<Boolean>> premiumPlanAutoScaleEnabled() {
        return Codegen.optional(this.premiumPlanAutoScaleEnabled);
    }
    /**
     * Whether this is a reserved Service Plan Type. `true` if `os_type` is `Linux`, otherwise `false`.
     * 
     */
    @Export(name="reserved", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> reserved;

    /**
     * @return Whether this is a reserved Service Plan Type. `true` if `os_type` is `Linux`, otherwise `false`.
     * 
     */
    public Output<Boolean> reserved() {
        return this.reserved;
    }
    /**
     * The name of the Resource Group where the Service Plan should exist. Changing this forces a new Service Plan to be created.
     * 
     */
    @Export(name="resourceGroupName", refs={String.class}, tree="[0]")
    private Output<String> resourceGroupName;

    /**
     * @return The name of the Resource Group where the Service Plan should exist. Changing this forces a new Service Plan to be created.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }
    /**
     * The SKU for the plan. Possible values include `B1`, `B2`, `B3`, `D1`, `F1`, `I1`, `I2`, `I3`, `I1v2`, `I1mv2`, `I2v2`, `I2mv2`, `I3v2`, `I3mv2`, `I4v2`, `I4mv2`, `I5v2`, `I5mv2`, `I6v2`, `P1v2`, `P2v2`, `P3v2`, `P0v3`, `P1v3`, `P2v3`, `P3v3`, `P1mv3`, `P2mv3`, `P3mv3`, `P4mv3`, `P5mv3`, `S1`, `S2`, `S3`, `SHARED`, `EP1`, `EP2`, `EP3`, `FC1`, `WS1`, `WS2`, `WS3`, and `Y1`.
     * 
     * &gt; **Note:** Isolated SKUs (`I1`, `I2`, `I3`, `I1v2`, `I1mv2`, `I2v2`, `I2mv2`, `I3v2`, `I3mv2`) can only be used with App Service Environments
     * 
     * &gt; **Note:** Elastic and Consumption SKUs (`Y1`, `FC1`, `EP1`, `EP2`, and `EP3`) are for use with Function Apps.
     * 
     */
    @Export(name="skuName", refs={String.class}, tree="[0]")
    private Output<String> skuName;

    /**
     * @return The SKU for the plan. Possible values include `B1`, `B2`, `B3`, `D1`, `F1`, `I1`, `I2`, `I3`, `I1v2`, `I1mv2`, `I2v2`, `I2mv2`, `I3v2`, `I3mv2`, `I4v2`, `I4mv2`, `I5v2`, `I5mv2`, `I6v2`, `P1v2`, `P2v2`, `P3v2`, `P0v3`, `P1v3`, `P2v3`, `P3v3`, `P1mv3`, `P2mv3`, `P3mv3`, `P4mv3`, `P5mv3`, `S1`, `S2`, `S3`, `SHARED`, `EP1`, `EP2`, `EP3`, `FC1`, `WS1`, `WS2`, `WS3`, and `Y1`.
     * 
     * &gt; **Note:** Isolated SKUs (`I1`, `I2`, `I3`, `I1v2`, `I1mv2`, `I2v2`, `I2mv2`, `I3v2`, `I3mv2`) can only be used with App Service Environments
     * 
     * &gt; **Note:** Elastic and Consumption SKUs (`Y1`, `FC1`, `EP1`, `EP2`, and `EP3`) are for use with Function Apps.
     * 
     */
    public Output<String> skuName() {
        return this.skuName;
    }
    /**
     * A mapping of tags which should be assigned to the AppService.
     * 
     */
    @Export(name="tags", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output</* @Nullable */ Map<String,String>> tags;

    /**
     * @return A mapping of tags which should be assigned to the AppService.
     * 
     */
    public Output<Optional<Map<String,String>>> tags() {
        return Codegen.optional(this.tags);
    }
    /**
     * The number of Workers (instances) to be allocated.
     * 
     */
    @Export(name="workerCount", refs={Integer.class}, tree="[0]")
    private Output<Integer> workerCount;

    /**
     * @return The number of Workers (instances) to be allocated.
     * 
     */
    public Output<Integer> workerCount() {
        return this.workerCount;
    }
    /**
     * Should the Service Plan balance across Availability Zones in the region. Changing this forces a new resource to be created.
     * 
     * &gt; **Note:** If this setting is set to `true` and the `worker_count` value is specified, it should be set to a multiple of the number of availability zones in the region. Please see the Azure documentation for the number of Availability Zones in your region.
     * 
     */
    @Export(name="zoneBalancingEnabled", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> zoneBalancingEnabled;

    /**
     * @return Should the Service Plan balance across Availability Zones in the region. Changing this forces a new resource to be created.
     * 
     * &gt; **Note:** If this setting is set to `true` and the `worker_count` value is specified, it should be set to a multiple of the number of availability zones in the region. Please see the Azure documentation for the number of Availability Zones in your region.
     * 
     */
    public Output<Optional<Boolean>> zoneBalancingEnabled() {
        return Codegen.optional(this.zoneBalancingEnabled);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public ServicePlan(java.lang.String name) {
        this(name, ServicePlanArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public ServicePlan(java.lang.String name, ServicePlanArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public ServicePlan(java.lang.String name, ServicePlanArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:appservice/servicePlan:ServicePlan", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private ServicePlan(java.lang.String name, Output<java.lang.String> id, @Nullable ServicePlanState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:appservice/servicePlan:ServicePlan", name, state, makeResourceOptions(options, id), false);
    }

    private static ServicePlanArgs makeArgs(ServicePlanArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? ServicePlanArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static ServicePlan get(java.lang.String name, Output<java.lang.String> id, @Nullable ServicePlanState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new ServicePlan(name, id, state, options);
    }
}
