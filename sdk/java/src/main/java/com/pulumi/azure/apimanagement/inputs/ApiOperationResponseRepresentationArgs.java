// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.apimanagement.inputs;

import com.pulumi.azure.apimanagement.inputs.ApiOperationResponseRepresentationExampleArgs;
import com.pulumi.azure.apimanagement.inputs.ApiOperationResponseRepresentationFormParameterArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ApiOperationResponseRepresentationArgs extends com.pulumi.resources.ResourceArgs {

    public static final ApiOperationResponseRepresentationArgs Empty = new ApiOperationResponseRepresentationArgs();

    /**
     * The Content Type of this representation, such as `application/json`.
     * 
     */
    @Import(name="contentType", required=true)
    private Output<String> contentType;

    /**
     * @return The Content Type of this representation, such as `application/json`.
     * 
     */
    public Output<String> contentType() {
        return this.contentType;
    }

    /**
     * One or more `example` blocks as defined above.
     * 
     */
    @Import(name="examples")
    private @Nullable Output<List<ApiOperationResponseRepresentationExampleArgs>> examples;

    /**
     * @return One or more `example` blocks as defined above.
     * 
     */
    public Optional<Output<List<ApiOperationResponseRepresentationExampleArgs>>> examples() {
        return Optional.ofNullable(this.examples);
    }

    /**
     * One or more `form_parameter` block as defined above.
     * 
     * &gt; **NOTE:** This is Required when `content_type` is set to `application/x-www-form-urlencoded` or `multipart/form-data`.
     * 
     */
    @Import(name="formParameters")
    private @Nullable Output<List<ApiOperationResponseRepresentationFormParameterArgs>> formParameters;

    /**
     * @return One or more `form_parameter` block as defined above.
     * 
     * &gt; **NOTE:** This is Required when `content_type` is set to `application/x-www-form-urlencoded` or `multipart/form-data`.
     * 
     */
    public Optional<Output<List<ApiOperationResponseRepresentationFormParameterArgs>>> formParameters() {
        return Optional.ofNullable(this.formParameters);
    }

    /**
     * The ID of an API Management Schema which represents this Response.
     * 
     * &gt; **NOTE:** This can only be specified when `content_type` is not set to `application/x-www-form-urlencoded` or `multipart/form-data`.
     * 
     */
    @Import(name="schemaId")
    private @Nullable Output<String> schemaId;

    /**
     * @return The ID of an API Management Schema which represents this Response.
     * 
     * &gt; **NOTE:** This can only be specified when `content_type` is not set to `application/x-www-form-urlencoded` or `multipart/form-data`.
     * 
     */
    public Optional<Output<String>> schemaId() {
        return Optional.ofNullable(this.schemaId);
    }

    /**
     * The Type Name defined by the Schema.
     * 
     * &gt; **NOTE:** This can only be specified when `content_type` is not set to `application/x-www-form-urlencoded` or `multipart/form-data`.
     * 
     */
    @Import(name="typeName")
    private @Nullable Output<String> typeName;

    /**
     * @return The Type Name defined by the Schema.
     * 
     * &gt; **NOTE:** This can only be specified when `content_type` is not set to `application/x-www-form-urlencoded` or `multipart/form-data`.
     * 
     */
    public Optional<Output<String>> typeName() {
        return Optional.ofNullable(this.typeName);
    }

    private ApiOperationResponseRepresentationArgs() {}

    private ApiOperationResponseRepresentationArgs(ApiOperationResponseRepresentationArgs $) {
        this.contentType = $.contentType;
        this.examples = $.examples;
        this.formParameters = $.formParameters;
        this.schemaId = $.schemaId;
        this.typeName = $.typeName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ApiOperationResponseRepresentationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ApiOperationResponseRepresentationArgs $;

        public Builder() {
            $ = new ApiOperationResponseRepresentationArgs();
        }

        public Builder(ApiOperationResponseRepresentationArgs defaults) {
            $ = new ApiOperationResponseRepresentationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param contentType The Content Type of this representation, such as `application/json`.
         * 
         * @return builder
         * 
         */
        public Builder contentType(Output<String> contentType) {
            $.contentType = contentType;
            return this;
        }

        /**
         * @param contentType The Content Type of this representation, such as `application/json`.
         * 
         * @return builder
         * 
         */
        public Builder contentType(String contentType) {
            return contentType(Output.of(contentType));
        }

        /**
         * @param examples One or more `example` blocks as defined above.
         * 
         * @return builder
         * 
         */
        public Builder examples(@Nullable Output<List<ApiOperationResponseRepresentationExampleArgs>> examples) {
            $.examples = examples;
            return this;
        }

        /**
         * @param examples One or more `example` blocks as defined above.
         * 
         * @return builder
         * 
         */
        public Builder examples(List<ApiOperationResponseRepresentationExampleArgs> examples) {
            return examples(Output.of(examples));
        }

        /**
         * @param examples One or more `example` blocks as defined above.
         * 
         * @return builder
         * 
         */
        public Builder examples(ApiOperationResponseRepresentationExampleArgs... examples) {
            return examples(List.of(examples));
        }

        /**
         * @param formParameters One or more `form_parameter` block as defined above.
         * 
         * &gt; **NOTE:** This is Required when `content_type` is set to `application/x-www-form-urlencoded` or `multipart/form-data`.
         * 
         * @return builder
         * 
         */
        public Builder formParameters(@Nullable Output<List<ApiOperationResponseRepresentationFormParameterArgs>> formParameters) {
            $.formParameters = formParameters;
            return this;
        }

        /**
         * @param formParameters One or more `form_parameter` block as defined above.
         * 
         * &gt; **NOTE:** This is Required when `content_type` is set to `application/x-www-form-urlencoded` or `multipart/form-data`.
         * 
         * @return builder
         * 
         */
        public Builder formParameters(List<ApiOperationResponseRepresentationFormParameterArgs> formParameters) {
            return formParameters(Output.of(formParameters));
        }

        /**
         * @param formParameters One or more `form_parameter` block as defined above.
         * 
         * &gt; **NOTE:** This is Required when `content_type` is set to `application/x-www-form-urlencoded` or `multipart/form-data`.
         * 
         * @return builder
         * 
         */
        public Builder formParameters(ApiOperationResponseRepresentationFormParameterArgs... formParameters) {
            return formParameters(List.of(formParameters));
        }

        /**
         * @param schemaId The ID of an API Management Schema which represents this Response.
         * 
         * &gt; **NOTE:** This can only be specified when `content_type` is not set to `application/x-www-form-urlencoded` or `multipart/form-data`.
         * 
         * @return builder
         * 
         */
        public Builder schemaId(@Nullable Output<String> schemaId) {
            $.schemaId = schemaId;
            return this;
        }

        /**
         * @param schemaId The ID of an API Management Schema which represents this Response.
         * 
         * &gt; **NOTE:** This can only be specified when `content_type` is not set to `application/x-www-form-urlencoded` or `multipart/form-data`.
         * 
         * @return builder
         * 
         */
        public Builder schemaId(String schemaId) {
            return schemaId(Output.of(schemaId));
        }

        /**
         * @param typeName The Type Name defined by the Schema.
         * 
         * &gt; **NOTE:** This can only be specified when `content_type` is not set to `application/x-www-form-urlencoded` or `multipart/form-data`.
         * 
         * @return builder
         * 
         */
        public Builder typeName(@Nullable Output<String> typeName) {
            $.typeName = typeName;
            return this;
        }

        /**
         * @param typeName The Type Name defined by the Schema.
         * 
         * &gt; **NOTE:** This can only be specified when `content_type` is not set to `application/x-www-form-urlencoded` or `multipart/form-data`.
         * 
         * @return builder
         * 
         */
        public Builder typeName(String typeName) {
            return typeName(Output.of(typeName));
        }

        public ApiOperationResponseRepresentationArgs build() {
            if ($.contentType == null) {
                throw new MissingRequiredPropertyException("ApiOperationResponseRepresentationArgs", "contentType");
            }
            return $;
        }
    }

}
