// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.apimanagement;

import com.pulumi.azure.Utilities;
import com.pulumi.azure.apimanagement.DiagnosticArgs;
import com.pulumi.azure.apimanagement.inputs.DiagnosticState;
import com.pulumi.azure.apimanagement.outputs.DiagnosticBackendRequest;
import com.pulumi.azure.apimanagement.outputs.DiagnosticBackendResponse;
import com.pulumi.azure.apimanagement.outputs.DiagnosticFrontendRequest;
import com.pulumi.azure.apimanagement.outputs.DiagnosticFrontendResponse;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Manages an API Management Service Diagnostic.
 * 
 * ## Example Usage
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.azure.core.ResourceGroup;
 * import com.pulumi.azure.core.ResourceGroupArgs;
 * import com.pulumi.azure.appinsights.Insights;
 * import com.pulumi.azure.appinsights.InsightsArgs;
 * import com.pulumi.azure.apimanagement.Service;
 * import com.pulumi.azure.apimanagement.ServiceArgs;
 * import com.pulumi.azure.apimanagement.Logger;
 * import com.pulumi.azure.apimanagement.LoggerArgs;
 * import com.pulumi.azure.apimanagement.inputs.LoggerApplicationInsightsArgs;
 * import com.pulumi.azure.apimanagement.Diagnostic;
 * import com.pulumi.azure.apimanagement.DiagnosticArgs;
 * import com.pulumi.azure.apimanagement.inputs.DiagnosticFrontendRequestArgs;
 * import com.pulumi.azure.apimanagement.inputs.DiagnosticFrontendResponseArgs;
 * import com.pulumi.azure.apimanagement.inputs.DiagnosticBackendRequestArgs;
 * import com.pulumi.azure.apimanagement.inputs.DiagnosticBackendResponseArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var exampleResourceGroup = new ResourceGroup(&#34;exampleResourceGroup&#34;, ResourceGroupArgs.builder()        
 *             .location(&#34;West Europe&#34;)
 *             .build());
 * 
 *         var exampleInsights = new Insights(&#34;exampleInsights&#34;, InsightsArgs.builder()        
 *             .location(exampleResourceGroup.location())
 *             .resourceGroupName(exampleResourceGroup.name())
 *             .applicationType(&#34;web&#34;)
 *             .build());
 * 
 *         var exampleService = new Service(&#34;exampleService&#34;, ServiceArgs.builder()        
 *             .location(exampleResourceGroup.location())
 *             .resourceGroupName(exampleResourceGroup.name())
 *             .publisherName(&#34;My Company&#34;)
 *             .publisherEmail(&#34;company@mycompany.io&#34;)
 *             .skuName(&#34;Developer_1&#34;)
 *             .build());
 * 
 *         var exampleLogger = new Logger(&#34;exampleLogger&#34;, LoggerArgs.builder()        
 *             .apiManagementName(exampleService.name())
 *             .resourceGroupName(exampleResourceGroup.name())
 *             .applicationInsights(LoggerApplicationInsightsArgs.builder()
 *                 .instrumentationKey(exampleInsights.instrumentationKey())
 *                 .build())
 *             .build());
 * 
 *         var exampleDiagnostic = new Diagnostic(&#34;exampleDiagnostic&#34;, DiagnosticArgs.builder()        
 *             .identifier(&#34;applicationinsights&#34;)
 *             .resourceGroupName(exampleResourceGroup.name())
 *             .apiManagementName(exampleService.name())
 *             .apiManagementLoggerId(exampleLogger.id())
 *             .samplingPercentage(5)
 *             .alwaysLogErrors(true)
 *             .logClientIp(true)
 *             .verbosity(&#34;verbose&#34;)
 *             .httpCorrelationProtocol(&#34;W3C&#34;)
 *             .frontendRequest(DiagnosticFrontendRequestArgs.builder()
 *                 .bodyBytes(32)
 *                 .headersToLogs(                
 *                     &#34;content-type&#34;,
 *                     &#34;accept&#34;,
 *                     &#34;origin&#34;)
 *                 .build())
 *             .frontendResponse(DiagnosticFrontendResponseArgs.builder()
 *                 .bodyBytes(32)
 *                 .headersToLogs(                
 *                     &#34;content-type&#34;,
 *                     &#34;content-length&#34;,
 *                     &#34;origin&#34;)
 *                 .build())
 *             .backendRequest(DiagnosticBackendRequestArgs.builder()
 *                 .bodyBytes(32)
 *                 .headersToLogs(                
 *                     &#34;content-type&#34;,
 *                     &#34;accept&#34;,
 *                     &#34;origin&#34;)
 *                 .build())
 *             .backendResponse(DiagnosticBackendResponseArgs.builder()
 *                 .bodyBytes(32)
 *                 .headersToLogs(                
 *                     &#34;content-type&#34;,
 *                     &#34;content-length&#34;,
 *                     &#34;origin&#34;)
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * API Management Diagnostics can be imported using the `resource id`, e.g.
 * 
 * ```sh
 *  $ pulumi import azure:apimanagement/diagnostic:Diagnostic example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/mygroup1/providers/Microsoft.ApiManagement/service/instance1/diagnostics/applicationinsights
 * ```
 * 
 */
@ResourceType(type="azure:apimanagement/diagnostic:Diagnostic")
public class Diagnostic extends com.pulumi.resources.CustomResource {
    /**
     * Always log errors. Send telemetry if there is an erroneous condition, regardless of sampling settings.
     * 
     */
    @Export(name="alwaysLogErrors", type=Boolean.class, parameters={})
    private Output<Boolean> alwaysLogErrors;

    /**
     * @return Always log errors. Send telemetry if there is an erroneous condition, regardless of sampling settings.
     * 
     */
    public Output<Boolean> alwaysLogErrors() {
        return this.alwaysLogErrors;
    }
    /**
     * The id of the target API Management Logger where the API Management Diagnostic should be saved.
     * 
     */
    @Export(name="apiManagementLoggerId", type=String.class, parameters={})
    private Output<String> apiManagementLoggerId;

    /**
     * @return The id of the target API Management Logger where the API Management Diagnostic should be saved.
     * 
     */
    public Output<String> apiManagementLoggerId() {
        return this.apiManagementLoggerId;
    }
    /**
     * The Name of the API Management Service where this Diagnostic should be created. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="apiManagementName", type=String.class, parameters={})
    private Output<String> apiManagementName;

    /**
     * @return The Name of the API Management Service where this Diagnostic should be created. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> apiManagementName() {
        return this.apiManagementName;
    }
    /**
     * A `backend_request` block as defined below.
     * 
     */
    @Export(name="backendRequest", type=DiagnosticBackendRequest.class, parameters={})
    private Output<DiagnosticBackendRequest> backendRequest;

    /**
     * @return A `backend_request` block as defined below.
     * 
     */
    public Output<DiagnosticBackendRequest> backendRequest() {
        return this.backendRequest;
    }
    /**
     * A `backend_response` block as defined below.
     * 
     */
    @Export(name="backendResponse", type=DiagnosticBackendResponse.class, parameters={})
    private Output<DiagnosticBackendResponse> backendResponse;

    /**
     * @return A `backend_response` block as defined below.
     * 
     */
    public Output<DiagnosticBackendResponse> backendResponse() {
        return this.backendResponse;
    }
    /**
     * A `frontend_request` block as defined below.
     * 
     */
    @Export(name="frontendRequest", type=DiagnosticFrontendRequest.class, parameters={})
    private Output<DiagnosticFrontendRequest> frontendRequest;

    /**
     * @return A `frontend_request` block as defined below.
     * 
     */
    public Output<DiagnosticFrontendRequest> frontendRequest() {
        return this.frontendRequest;
    }
    /**
     * A `frontend_response` block as defined below.
     * 
     */
    @Export(name="frontendResponse", type=DiagnosticFrontendResponse.class, parameters={})
    private Output<DiagnosticFrontendResponse> frontendResponse;

    /**
     * @return A `frontend_response` block as defined below.
     * 
     */
    public Output<DiagnosticFrontendResponse> frontendResponse() {
        return this.frontendResponse;
    }
    /**
     * The HTTP Correlation Protocol to use. Possible values are `None`, `Legacy` or `W3C`.
     * 
     */
    @Export(name="httpCorrelationProtocol", type=String.class, parameters={})
    private Output<String> httpCorrelationProtocol;

    /**
     * @return The HTTP Correlation Protocol to use. Possible values are `None`, `Legacy` or `W3C`.
     * 
     */
    public Output<String> httpCorrelationProtocol() {
        return this.httpCorrelationProtocol;
    }
    /**
     * The diagnostic identifier for the API Management Service. At this time the only supported value is `applicationinsights`. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="identifier", type=String.class, parameters={})
    private Output<String> identifier;

    /**
     * @return The diagnostic identifier for the API Management Service. At this time the only supported value is `applicationinsights`. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> identifier() {
        return this.identifier;
    }
    /**
     * Log client IP address.
     * 
     */
    @Export(name="logClientIp", type=Boolean.class, parameters={})
    private Output<Boolean> logClientIp;

    /**
     * @return Log client IP address.
     * 
     */
    public Output<Boolean> logClientIp() {
        return this.logClientIp;
    }
    /**
     * The format of the Operation Name for Application Insights telemetries. Possible values are `Name`, and `Url`. Defaults to `Name`.
     * 
     */
    @Export(name="operationNameFormat", type=String.class, parameters={})
    private Output</* @Nullable */ String> operationNameFormat;

    /**
     * @return The format of the Operation Name for Application Insights telemetries. Possible values are `Name`, and `Url`. Defaults to `Name`.
     * 
     */
    public Output<Optional<String>> operationNameFormat() {
        return Codegen.optional(this.operationNameFormat);
    }
    /**
     * The Name of the Resource Group where the API Management Service exists. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="resourceGroupName", type=String.class, parameters={})
    private Output<String> resourceGroupName;

    /**
     * @return The Name of the Resource Group where the API Management Service exists. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }
    /**
     * Sampling (%). For high traffic APIs, please read this [documentation](https://docs.microsoft.com/azure/api-management/api-management-howto-app-insights#performance-implications-and-log-sampling) to understand performance implications and log sampling. Valid values are between `0.0` and `100.0`.
     * 
     */
    @Export(name="samplingPercentage", type=Double.class, parameters={})
    private Output<Double> samplingPercentage;

    /**
     * @return Sampling (%). For high traffic APIs, please read this [documentation](https://docs.microsoft.com/azure/api-management/api-management-howto-app-insights#performance-implications-and-log-sampling) to understand performance implications and log sampling. Valid values are between `0.0` and `100.0`.
     * 
     */
    public Output<Double> samplingPercentage() {
        return this.samplingPercentage;
    }
    /**
     * Logging verbosity. Possible values are `verbose`, `information` or `error`.
     * 
     */
    @Export(name="verbosity", type=String.class, parameters={})
    private Output<String> verbosity;

    /**
     * @return Logging verbosity. Possible values are `verbose`, `information` or `error`.
     * 
     */
    public Output<String> verbosity() {
        return this.verbosity;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Diagnostic(String name) {
        this(name, DiagnosticArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Diagnostic(String name, DiagnosticArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Diagnostic(String name, DiagnosticArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:apimanagement/diagnostic:Diagnostic", name, args == null ? DiagnosticArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private Diagnostic(String name, Output<String> id, @Nullable DiagnosticState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:apimanagement/diagnostic:Diagnostic", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Diagnostic get(String name, Output<String> id, @Nullable DiagnosticState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Diagnostic(name, id, state, options);
    }
}
