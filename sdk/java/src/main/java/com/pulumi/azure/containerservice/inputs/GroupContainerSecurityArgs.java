// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.containerservice.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.util.Objects;


public final class GroupContainerSecurityArgs extends com.pulumi.resources.ResourceArgs {

    public static final GroupContainerSecurityArgs Empty = new GroupContainerSecurityArgs();

    /**
     * Whether the container&#39;s permission is elevated to privileged? Changing this forces a new resource to be created.
     * 
     * &gt; **NOTE:** Currently, this only applies when the `os_type` is `Linux` and the `sku` is `Confidential`.
     * 
     */
    @Import(name="privilegeEnabled", required=true)
    private Output<Boolean> privilegeEnabled;

    /**
     * @return Whether the container&#39;s permission is elevated to privileged? Changing this forces a new resource to be created.
     * 
     * &gt; **NOTE:** Currently, this only applies when the `os_type` is `Linux` and the `sku` is `Confidential`.
     * 
     */
    public Output<Boolean> privilegeEnabled() {
        return this.privilegeEnabled;
    }

    private GroupContainerSecurityArgs() {}

    private GroupContainerSecurityArgs(GroupContainerSecurityArgs $) {
        this.privilegeEnabled = $.privilegeEnabled;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GroupContainerSecurityArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GroupContainerSecurityArgs $;

        public Builder() {
            $ = new GroupContainerSecurityArgs();
        }

        public Builder(GroupContainerSecurityArgs defaults) {
            $ = new GroupContainerSecurityArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param privilegeEnabled Whether the container&#39;s permission is elevated to privileged? Changing this forces a new resource to be created.
         * 
         * &gt; **NOTE:** Currently, this only applies when the `os_type` is `Linux` and the `sku` is `Confidential`.
         * 
         * @return builder
         * 
         */
        public Builder privilegeEnabled(Output<Boolean> privilegeEnabled) {
            $.privilegeEnabled = privilegeEnabled;
            return this;
        }

        /**
         * @param privilegeEnabled Whether the container&#39;s permission is elevated to privileged? Changing this forces a new resource to be created.
         * 
         * &gt; **NOTE:** Currently, this only applies when the `os_type` is `Linux` and the `sku` is `Confidential`.
         * 
         * @return builder
         * 
         */
        public Builder privilegeEnabled(Boolean privilegeEnabled) {
            return privilegeEnabled(Output.of(privilegeEnabled));
        }

        public GroupContainerSecurityArgs build() {
            if ($.privilegeEnabled == null) {
                throw new MissingRequiredPropertyException("GroupContainerSecurityArgs", "privilegeEnabled");
            }
            return $;
        }
    }

}
