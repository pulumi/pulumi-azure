// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.keyvault;

import com.pulumi.azure.Utilities;
import com.pulumi.azure.keyvault.inputs.GetAccessPolicyArgs;
import com.pulumi.azure.keyvault.inputs.GetAccessPolicyPlainArgs;
import com.pulumi.azure.keyvault.inputs.GetCertificateArgs;
import com.pulumi.azure.keyvault.inputs.GetCertificateDataArgs;
import com.pulumi.azure.keyvault.inputs.GetCertificateDataPlainArgs;
import com.pulumi.azure.keyvault.inputs.GetCertificateIssuerArgs;
import com.pulumi.azure.keyvault.inputs.GetCertificateIssuerPlainArgs;
import com.pulumi.azure.keyvault.inputs.GetCertificatePlainArgs;
import com.pulumi.azure.keyvault.inputs.GetCertificatesArgs;
import com.pulumi.azure.keyvault.inputs.GetCertificatesPlainArgs;
import com.pulumi.azure.keyvault.inputs.GetEncryptedValueArgs;
import com.pulumi.azure.keyvault.inputs.GetEncryptedValuePlainArgs;
import com.pulumi.azure.keyvault.inputs.GetKeyArgs;
import com.pulumi.azure.keyvault.inputs.GetKeyPlainArgs;
import com.pulumi.azure.keyvault.inputs.GetKeyVaultArgs;
import com.pulumi.azure.keyvault.inputs.GetKeyVaultPlainArgs;
import com.pulumi.azure.keyvault.inputs.GetManagedHardwareSecurityModuleArgs;
import com.pulumi.azure.keyvault.inputs.GetManagedHardwareSecurityModuleKeyArgs;
import com.pulumi.azure.keyvault.inputs.GetManagedHardwareSecurityModuleKeyPlainArgs;
import com.pulumi.azure.keyvault.inputs.GetManagedHardwareSecurityModulePlainArgs;
import com.pulumi.azure.keyvault.inputs.GetManagedHardwareSecurityModuleRoleDefinitionArgs;
import com.pulumi.azure.keyvault.inputs.GetManagedHardwareSecurityModuleRoleDefinitionPlainArgs;
import com.pulumi.azure.keyvault.inputs.GetSecretArgs;
import com.pulumi.azure.keyvault.inputs.GetSecretPlainArgs;
import com.pulumi.azure.keyvault.inputs.GetSecretsArgs;
import com.pulumi.azure.keyvault.inputs.GetSecretsPlainArgs;
import com.pulumi.azure.keyvault.outputs.GetAccessPolicyResult;
import com.pulumi.azure.keyvault.outputs.GetCertificateDataResult;
import com.pulumi.azure.keyvault.outputs.GetCertificateIssuerResult;
import com.pulumi.azure.keyvault.outputs.GetCertificateResult;
import com.pulumi.azure.keyvault.outputs.GetCertificatesResult;
import com.pulumi.azure.keyvault.outputs.GetEncryptedValueResult;
import com.pulumi.azure.keyvault.outputs.GetKeyResult;
import com.pulumi.azure.keyvault.outputs.GetKeyVaultResult;
import com.pulumi.azure.keyvault.outputs.GetManagedHardwareSecurityModuleKeyResult;
import com.pulumi.azure.keyvault.outputs.GetManagedHardwareSecurityModuleResult;
import com.pulumi.azure.keyvault.outputs.GetManagedHardwareSecurityModuleRoleDefinitionResult;
import com.pulumi.azure.keyvault.outputs.GetSecretResult;
import com.pulumi.azure.keyvault.outputs.GetSecretsResult;
import com.pulumi.core.Output;
import com.pulumi.core.TypeShape;
import com.pulumi.deployment.Deployment;
import com.pulumi.deployment.InvokeOptions;
import com.pulumi.deployment.InvokeOutputOptions;
import java.util.concurrent.CompletableFuture;

public final class KeyvaultFunctions {
    /**
     * Use this data source to access information about the permissions from the Management Key Vault Templates.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azure.keyvault.KeyvaultFunctions;
     * import com.pulumi.azure.keyvault.inputs.GetAccessPolicyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var contributor = KeyvaultFunctions.getAccessPolicy(GetAccessPolicyArgs.builder()
     *             .name("Key Management")
     *             .build());
     * 
     *         ctx.export("accessPolicyKeyPermissions", contributor.keyPermissions());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetAccessPolicyResult> getAccessPolicy(GetAccessPolicyArgs args) {
        return getAccessPolicy(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to access information about the permissions from the Management Key Vault Templates.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azure.keyvault.KeyvaultFunctions;
     * import com.pulumi.azure.keyvault.inputs.GetAccessPolicyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var contributor = KeyvaultFunctions.getAccessPolicy(GetAccessPolicyArgs.builder()
     *             .name("Key Management")
     *             .build());
     * 
     *         ctx.export("accessPolicyKeyPermissions", contributor.keyPermissions());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetAccessPolicyResult> getAccessPolicyPlain(GetAccessPolicyPlainArgs args) {
        return getAccessPolicyPlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to access information about the permissions from the Management Key Vault Templates.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azure.keyvault.KeyvaultFunctions;
     * import com.pulumi.azure.keyvault.inputs.GetAccessPolicyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var contributor = KeyvaultFunctions.getAccessPolicy(GetAccessPolicyArgs.builder()
     *             .name("Key Management")
     *             .build());
     * 
     *         ctx.export("accessPolicyKeyPermissions", contributor.keyPermissions());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetAccessPolicyResult> getAccessPolicy(GetAccessPolicyArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("azure:keyvault/getAccessPolicy:getAccessPolicy", TypeShape.of(GetAccessPolicyResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to access information about the permissions from the Management Key Vault Templates.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azure.keyvault.KeyvaultFunctions;
     * import com.pulumi.azure.keyvault.inputs.GetAccessPolicyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var contributor = KeyvaultFunctions.getAccessPolicy(GetAccessPolicyArgs.builder()
     *             .name("Key Management")
     *             .build());
     * 
     *         ctx.export("accessPolicyKeyPermissions", contributor.keyPermissions());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetAccessPolicyResult> getAccessPolicy(GetAccessPolicyArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("azure:keyvault/getAccessPolicy:getAccessPolicy", TypeShape.of(GetAccessPolicyResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to access information about the permissions from the Management Key Vault Templates.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azure.keyvault.KeyvaultFunctions;
     * import com.pulumi.azure.keyvault.inputs.GetAccessPolicyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var contributor = KeyvaultFunctions.getAccessPolicy(GetAccessPolicyArgs.builder()
     *             .name("Key Management")
     *             .build());
     * 
     *         ctx.export("accessPolicyKeyPermissions", contributor.keyPermissions());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetAccessPolicyResult> getAccessPolicyPlain(GetAccessPolicyPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("azure:keyvault/getAccessPolicy:getAccessPolicy", TypeShape.of(GetAccessPolicyResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to access information about an existing Key Vault Certificate.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azure.keyvault.KeyvaultFunctions;
     * import com.pulumi.azure.keyvault.inputs.GetKeyVaultArgs;
     * import com.pulumi.azure.keyvault.inputs.GetCertificateArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = KeyvaultFunctions.getKeyVault(GetKeyVaultArgs.builder()
     *             .name("examplekv")
     *             .resourceGroupName("some-resource-group")
     *             .build());
     * 
     *         final var exampleGetCertificate = KeyvaultFunctions.getCertificate(GetCertificateArgs.builder()
     *             .name("secret-sauce")
     *             .keyVaultId(example.id())
     *             .build());
     * 
     *         ctx.export("certificateThumbprint", exampleGetCertificate.thumbprint());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetCertificateResult> getCertificate(GetCertificateArgs args) {
        return getCertificate(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to access information about an existing Key Vault Certificate.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azure.keyvault.KeyvaultFunctions;
     * import com.pulumi.azure.keyvault.inputs.GetKeyVaultArgs;
     * import com.pulumi.azure.keyvault.inputs.GetCertificateArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = KeyvaultFunctions.getKeyVault(GetKeyVaultArgs.builder()
     *             .name("examplekv")
     *             .resourceGroupName("some-resource-group")
     *             .build());
     * 
     *         final var exampleGetCertificate = KeyvaultFunctions.getCertificate(GetCertificateArgs.builder()
     *             .name("secret-sauce")
     *             .keyVaultId(example.id())
     *             .build());
     * 
     *         ctx.export("certificateThumbprint", exampleGetCertificate.thumbprint());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetCertificateResult> getCertificatePlain(GetCertificatePlainArgs args) {
        return getCertificatePlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to access information about an existing Key Vault Certificate.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azure.keyvault.KeyvaultFunctions;
     * import com.pulumi.azure.keyvault.inputs.GetKeyVaultArgs;
     * import com.pulumi.azure.keyvault.inputs.GetCertificateArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = KeyvaultFunctions.getKeyVault(GetKeyVaultArgs.builder()
     *             .name("examplekv")
     *             .resourceGroupName("some-resource-group")
     *             .build());
     * 
     *         final var exampleGetCertificate = KeyvaultFunctions.getCertificate(GetCertificateArgs.builder()
     *             .name("secret-sauce")
     *             .keyVaultId(example.id())
     *             .build());
     * 
     *         ctx.export("certificateThumbprint", exampleGetCertificate.thumbprint());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetCertificateResult> getCertificate(GetCertificateArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("azure:keyvault/getCertificate:getCertificate", TypeShape.of(GetCertificateResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to access information about an existing Key Vault Certificate.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azure.keyvault.KeyvaultFunctions;
     * import com.pulumi.azure.keyvault.inputs.GetKeyVaultArgs;
     * import com.pulumi.azure.keyvault.inputs.GetCertificateArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = KeyvaultFunctions.getKeyVault(GetKeyVaultArgs.builder()
     *             .name("examplekv")
     *             .resourceGroupName("some-resource-group")
     *             .build());
     * 
     *         final var exampleGetCertificate = KeyvaultFunctions.getCertificate(GetCertificateArgs.builder()
     *             .name("secret-sauce")
     *             .keyVaultId(example.id())
     *             .build());
     * 
     *         ctx.export("certificateThumbprint", exampleGetCertificate.thumbprint());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetCertificateResult> getCertificate(GetCertificateArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("azure:keyvault/getCertificate:getCertificate", TypeShape.of(GetCertificateResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to access information about an existing Key Vault Certificate.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azure.keyvault.KeyvaultFunctions;
     * import com.pulumi.azure.keyvault.inputs.GetKeyVaultArgs;
     * import com.pulumi.azure.keyvault.inputs.GetCertificateArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = KeyvaultFunctions.getKeyVault(GetKeyVaultArgs.builder()
     *             .name("examplekv")
     *             .resourceGroupName("some-resource-group")
     *             .build());
     * 
     *         final var exampleGetCertificate = KeyvaultFunctions.getCertificate(GetCertificateArgs.builder()
     *             .name("secret-sauce")
     *             .keyVaultId(example.id())
     *             .build());
     * 
     *         ctx.export("certificateThumbprint", exampleGetCertificate.thumbprint());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetCertificateResult> getCertificatePlain(GetCertificatePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("azure:keyvault/getCertificate:getCertificate", TypeShape.of(GetCertificateResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to access data stored in an existing Key Vault Certificate.
     * 
     * &gt; **Note:** This data source uses the `GetSecret` function of the Azure API, to get the key of the certificate. Therefore you need secret/get permission
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azure.keyvault.KeyvaultFunctions;
     * import com.pulumi.azure.keyvault.inputs.GetKeyVaultArgs;
     * import com.pulumi.azure.keyvault.inputs.GetCertificateDataArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = KeyvaultFunctions.getKeyVault(GetKeyVaultArgs.builder()
     *             .name("examplekv")
     *             .resourceGroupName("some-resource-group")
     *             .build());
     * 
     *         final var exampleGetCertificateData = KeyvaultFunctions.getCertificateData(GetCertificateDataArgs.builder()
     *             .name("secret-sauce")
     *             .keyVaultId(example.id())
     *             .build());
     * 
     *         ctx.export("examplePem", exampleGetCertificateData.pem());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetCertificateDataResult> getCertificateData(GetCertificateDataArgs args) {
        return getCertificateData(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to access data stored in an existing Key Vault Certificate.
     * 
     * &gt; **Note:** This data source uses the `GetSecret` function of the Azure API, to get the key of the certificate. Therefore you need secret/get permission
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azure.keyvault.KeyvaultFunctions;
     * import com.pulumi.azure.keyvault.inputs.GetKeyVaultArgs;
     * import com.pulumi.azure.keyvault.inputs.GetCertificateDataArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = KeyvaultFunctions.getKeyVault(GetKeyVaultArgs.builder()
     *             .name("examplekv")
     *             .resourceGroupName("some-resource-group")
     *             .build());
     * 
     *         final var exampleGetCertificateData = KeyvaultFunctions.getCertificateData(GetCertificateDataArgs.builder()
     *             .name("secret-sauce")
     *             .keyVaultId(example.id())
     *             .build());
     * 
     *         ctx.export("examplePem", exampleGetCertificateData.pem());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetCertificateDataResult> getCertificateDataPlain(GetCertificateDataPlainArgs args) {
        return getCertificateDataPlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to access data stored in an existing Key Vault Certificate.
     * 
     * &gt; **Note:** This data source uses the `GetSecret` function of the Azure API, to get the key of the certificate. Therefore you need secret/get permission
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azure.keyvault.KeyvaultFunctions;
     * import com.pulumi.azure.keyvault.inputs.GetKeyVaultArgs;
     * import com.pulumi.azure.keyvault.inputs.GetCertificateDataArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = KeyvaultFunctions.getKeyVault(GetKeyVaultArgs.builder()
     *             .name("examplekv")
     *             .resourceGroupName("some-resource-group")
     *             .build());
     * 
     *         final var exampleGetCertificateData = KeyvaultFunctions.getCertificateData(GetCertificateDataArgs.builder()
     *             .name("secret-sauce")
     *             .keyVaultId(example.id())
     *             .build());
     * 
     *         ctx.export("examplePem", exampleGetCertificateData.pem());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetCertificateDataResult> getCertificateData(GetCertificateDataArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("azure:keyvault/getCertificateData:getCertificateData", TypeShape.of(GetCertificateDataResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to access data stored in an existing Key Vault Certificate.
     * 
     * &gt; **Note:** This data source uses the `GetSecret` function of the Azure API, to get the key of the certificate. Therefore you need secret/get permission
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azure.keyvault.KeyvaultFunctions;
     * import com.pulumi.azure.keyvault.inputs.GetKeyVaultArgs;
     * import com.pulumi.azure.keyvault.inputs.GetCertificateDataArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = KeyvaultFunctions.getKeyVault(GetKeyVaultArgs.builder()
     *             .name("examplekv")
     *             .resourceGroupName("some-resource-group")
     *             .build());
     * 
     *         final var exampleGetCertificateData = KeyvaultFunctions.getCertificateData(GetCertificateDataArgs.builder()
     *             .name("secret-sauce")
     *             .keyVaultId(example.id())
     *             .build());
     * 
     *         ctx.export("examplePem", exampleGetCertificateData.pem());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetCertificateDataResult> getCertificateData(GetCertificateDataArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("azure:keyvault/getCertificateData:getCertificateData", TypeShape.of(GetCertificateDataResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to access data stored in an existing Key Vault Certificate.
     * 
     * &gt; **Note:** This data source uses the `GetSecret` function of the Azure API, to get the key of the certificate. Therefore you need secret/get permission
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azure.keyvault.KeyvaultFunctions;
     * import com.pulumi.azure.keyvault.inputs.GetKeyVaultArgs;
     * import com.pulumi.azure.keyvault.inputs.GetCertificateDataArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = KeyvaultFunctions.getKeyVault(GetKeyVaultArgs.builder()
     *             .name("examplekv")
     *             .resourceGroupName("some-resource-group")
     *             .build());
     * 
     *         final var exampleGetCertificateData = KeyvaultFunctions.getCertificateData(GetCertificateDataArgs.builder()
     *             .name("secret-sauce")
     *             .keyVaultId(example.id())
     *             .build());
     * 
     *         ctx.export("examplePem", exampleGetCertificateData.pem());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetCertificateDataResult> getCertificateDataPlain(GetCertificateDataPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("azure:keyvault/getCertificateData:getCertificateData", TypeShape.of(GetCertificateDataResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to access information about an existing Key Vault Certificate Issuer.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azure.keyvault.KeyvaultFunctions;
     * import com.pulumi.azure.keyvault.inputs.GetKeyVaultArgs;
     * import com.pulumi.azure.keyvault.inputs.GetCertificateIssuerArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = KeyvaultFunctions.getKeyVault(GetKeyVaultArgs.builder()
     *             .name("mykeyvault")
     *             .resourceGroupName("some-resource-group")
     *             .build());
     * 
     *         final var exampleGetCertificateIssuer = KeyvaultFunctions.getCertificateIssuer(GetCertificateIssuerArgs.builder()
     *             .name("existing")
     *             .keyVaultId(example.id())
     *             .build());
     * 
     *         ctx.export("id", exampleGetCertificateIssuer.id());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetCertificateIssuerResult> getCertificateIssuer(GetCertificateIssuerArgs args) {
        return getCertificateIssuer(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to access information about an existing Key Vault Certificate Issuer.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azure.keyvault.KeyvaultFunctions;
     * import com.pulumi.azure.keyvault.inputs.GetKeyVaultArgs;
     * import com.pulumi.azure.keyvault.inputs.GetCertificateIssuerArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = KeyvaultFunctions.getKeyVault(GetKeyVaultArgs.builder()
     *             .name("mykeyvault")
     *             .resourceGroupName("some-resource-group")
     *             .build());
     * 
     *         final var exampleGetCertificateIssuer = KeyvaultFunctions.getCertificateIssuer(GetCertificateIssuerArgs.builder()
     *             .name("existing")
     *             .keyVaultId(example.id())
     *             .build());
     * 
     *         ctx.export("id", exampleGetCertificateIssuer.id());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetCertificateIssuerResult> getCertificateIssuerPlain(GetCertificateIssuerPlainArgs args) {
        return getCertificateIssuerPlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to access information about an existing Key Vault Certificate Issuer.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azure.keyvault.KeyvaultFunctions;
     * import com.pulumi.azure.keyvault.inputs.GetKeyVaultArgs;
     * import com.pulumi.azure.keyvault.inputs.GetCertificateIssuerArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = KeyvaultFunctions.getKeyVault(GetKeyVaultArgs.builder()
     *             .name("mykeyvault")
     *             .resourceGroupName("some-resource-group")
     *             .build());
     * 
     *         final var exampleGetCertificateIssuer = KeyvaultFunctions.getCertificateIssuer(GetCertificateIssuerArgs.builder()
     *             .name("existing")
     *             .keyVaultId(example.id())
     *             .build());
     * 
     *         ctx.export("id", exampleGetCertificateIssuer.id());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetCertificateIssuerResult> getCertificateIssuer(GetCertificateIssuerArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("azure:keyvault/getCertificateIssuer:getCertificateIssuer", TypeShape.of(GetCertificateIssuerResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to access information about an existing Key Vault Certificate Issuer.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azure.keyvault.KeyvaultFunctions;
     * import com.pulumi.azure.keyvault.inputs.GetKeyVaultArgs;
     * import com.pulumi.azure.keyvault.inputs.GetCertificateIssuerArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = KeyvaultFunctions.getKeyVault(GetKeyVaultArgs.builder()
     *             .name("mykeyvault")
     *             .resourceGroupName("some-resource-group")
     *             .build());
     * 
     *         final var exampleGetCertificateIssuer = KeyvaultFunctions.getCertificateIssuer(GetCertificateIssuerArgs.builder()
     *             .name("existing")
     *             .keyVaultId(example.id())
     *             .build());
     * 
     *         ctx.export("id", exampleGetCertificateIssuer.id());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetCertificateIssuerResult> getCertificateIssuer(GetCertificateIssuerArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("azure:keyvault/getCertificateIssuer:getCertificateIssuer", TypeShape.of(GetCertificateIssuerResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to access information about an existing Key Vault Certificate Issuer.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azure.keyvault.KeyvaultFunctions;
     * import com.pulumi.azure.keyvault.inputs.GetKeyVaultArgs;
     * import com.pulumi.azure.keyvault.inputs.GetCertificateIssuerArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = KeyvaultFunctions.getKeyVault(GetKeyVaultArgs.builder()
     *             .name("mykeyvault")
     *             .resourceGroupName("some-resource-group")
     *             .build());
     * 
     *         final var exampleGetCertificateIssuer = KeyvaultFunctions.getCertificateIssuer(GetCertificateIssuerArgs.builder()
     *             .name("existing")
     *             .keyVaultId(example.id())
     *             .build());
     * 
     *         ctx.export("id", exampleGetCertificateIssuer.id());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetCertificateIssuerResult> getCertificateIssuerPlain(GetCertificateIssuerPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("azure:keyvault/getCertificateIssuer:getCertificateIssuer", TypeShape.of(GetCertificateIssuerResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to retrieve a list of certificate names from an existing Key Vault.
     * 
     */
    public static Output<GetCertificatesResult> getCertificates(GetCertificatesArgs args) {
        return getCertificates(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to retrieve a list of certificate names from an existing Key Vault.
     * 
     */
    public static CompletableFuture<GetCertificatesResult> getCertificatesPlain(GetCertificatesPlainArgs args) {
        return getCertificatesPlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to retrieve a list of certificate names from an existing Key Vault.
     * 
     */
    public static Output<GetCertificatesResult> getCertificates(GetCertificatesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("azure:keyvault/getCertificates:getCertificates", TypeShape.of(GetCertificatesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to retrieve a list of certificate names from an existing Key Vault.
     * 
     */
    public static Output<GetCertificatesResult> getCertificates(GetCertificatesArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("azure:keyvault/getCertificates:getCertificates", TypeShape.of(GetCertificatesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to retrieve a list of certificate names from an existing Key Vault.
     * 
     */
    public static CompletableFuture<GetCertificatesResult> getCertificatesPlain(GetCertificatesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("azure:keyvault/getCertificates:getCertificates", TypeShape.of(GetCertificatesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Encrypts or Decrypts a value using a Key Vault Key.
     * 
     */
    public static Output<GetEncryptedValueResult> getEncryptedValue(GetEncryptedValueArgs args) {
        return getEncryptedValue(args, InvokeOptions.Empty);
    }
    /**
     * Encrypts or Decrypts a value using a Key Vault Key.
     * 
     */
    public static CompletableFuture<GetEncryptedValueResult> getEncryptedValuePlain(GetEncryptedValuePlainArgs args) {
        return getEncryptedValuePlain(args, InvokeOptions.Empty);
    }
    /**
     * Encrypts or Decrypts a value using a Key Vault Key.
     * 
     */
    public static Output<GetEncryptedValueResult> getEncryptedValue(GetEncryptedValueArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("azure:keyvault/getEncryptedValue:getEncryptedValue", TypeShape.of(GetEncryptedValueResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Encrypts or Decrypts a value using a Key Vault Key.
     * 
     */
    public static Output<GetEncryptedValueResult> getEncryptedValue(GetEncryptedValueArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("azure:keyvault/getEncryptedValue:getEncryptedValue", TypeShape.of(GetEncryptedValueResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Encrypts or Decrypts a value using a Key Vault Key.
     * 
     */
    public static CompletableFuture<GetEncryptedValueResult> getEncryptedValuePlain(GetEncryptedValuePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("azure:keyvault/getEncryptedValue:getEncryptedValue", TypeShape.of(GetEncryptedValueResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to access information about an existing Key Vault Key.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azure.keyvault.KeyvaultFunctions;
     * import com.pulumi.azure.keyvault.inputs.GetKeyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = KeyvaultFunctions.getKey(GetKeyArgs.builder()
     *             .name("secret-sauce")
     *             .keyVaultId(existing.id())
     *             .build());
     * 
     *         ctx.export("keyType", example.keyType());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetKeyResult> getKey(GetKeyArgs args) {
        return getKey(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to access information about an existing Key Vault Key.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azure.keyvault.KeyvaultFunctions;
     * import com.pulumi.azure.keyvault.inputs.GetKeyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = KeyvaultFunctions.getKey(GetKeyArgs.builder()
     *             .name("secret-sauce")
     *             .keyVaultId(existing.id())
     *             .build());
     * 
     *         ctx.export("keyType", example.keyType());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetKeyResult> getKeyPlain(GetKeyPlainArgs args) {
        return getKeyPlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to access information about an existing Key Vault Key.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azure.keyvault.KeyvaultFunctions;
     * import com.pulumi.azure.keyvault.inputs.GetKeyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = KeyvaultFunctions.getKey(GetKeyArgs.builder()
     *             .name("secret-sauce")
     *             .keyVaultId(existing.id())
     *             .build());
     * 
     *         ctx.export("keyType", example.keyType());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetKeyResult> getKey(GetKeyArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("azure:keyvault/getKey:getKey", TypeShape.of(GetKeyResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to access information about an existing Key Vault Key.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azure.keyvault.KeyvaultFunctions;
     * import com.pulumi.azure.keyvault.inputs.GetKeyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = KeyvaultFunctions.getKey(GetKeyArgs.builder()
     *             .name("secret-sauce")
     *             .keyVaultId(existing.id())
     *             .build());
     * 
     *         ctx.export("keyType", example.keyType());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetKeyResult> getKey(GetKeyArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("azure:keyvault/getKey:getKey", TypeShape.of(GetKeyResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to access information about an existing Key Vault Key.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azure.keyvault.KeyvaultFunctions;
     * import com.pulumi.azure.keyvault.inputs.GetKeyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = KeyvaultFunctions.getKey(GetKeyArgs.builder()
     *             .name("secret-sauce")
     *             .keyVaultId(existing.id())
     *             .build());
     * 
     *         ctx.export("keyType", example.keyType());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetKeyResult> getKeyPlain(GetKeyPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("azure:keyvault/getKey:getKey", TypeShape.of(GetKeyResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to access information about an existing Key Vault.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azure.keyvault.KeyvaultFunctions;
     * import com.pulumi.azure.keyvault.inputs.GetKeyVaultArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = KeyvaultFunctions.getKeyVault(GetKeyVaultArgs.builder()
     *             .name("mykeyvault")
     *             .resourceGroupName("some-resource-group")
     *             .build());
     * 
     *         ctx.export("vaultUri", example.vaultUri());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetKeyVaultResult> getKeyVault(GetKeyVaultArgs args) {
        return getKeyVault(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to access information about an existing Key Vault.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azure.keyvault.KeyvaultFunctions;
     * import com.pulumi.azure.keyvault.inputs.GetKeyVaultArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = KeyvaultFunctions.getKeyVault(GetKeyVaultArgs.builder()
     *             .name("mykeyvault")
     *             .resourceGroupName("some-resource-group")
     *             .build());
     * 
     *         ctx.export("vaultUri", example.vaultUri());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetKeyVaultResult> getKeyVaultPlain(GetKeyVaultPlainArgs args) {
        return getKeyVaultPlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to access information about an existing Key Vault.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azure.keyvault.KeyvaultFunctions;
     * import com.pulumi.azure.keyvault.inputs.GetKeyVaultArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = KeyvaultFunctions.getKeyVault(GetKeyVaultArgs.builder()
     *             .name("mykeyvault")
     *             .resourceGroupName("some-resource-group")
     *             .build());
     * 
     *         ctx.export("vaultUri", example.vaultUri());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetKeyVaultResult> getKeyVault(GetKeyVaultArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("azure:keyvault/getKeyVault:getKeyVault", TypeShape.of(GetKeyVaultResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to access information about an existing Key Vault.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azure.keyvault.KeyvaultFunctions;
     * import com.pulumi.azure.keyvault.inputs.GetKeyVaultArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = KeyvaultFunctions.getKeyVault(GetKeyVaultArgs.builder()
     *             .name("mykeyvault")
     *             .resourceGroupName("some-resource-group")
     *             .build());
     * 
     *         ctx.export("vaultUri", example.vaultUri());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetKeyVaultResult> getKeyVault(GetKeyVaultArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("azure:keyvault/getKeyVault:getKeyVault", TypeShape.of(GetKeyVaultResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to access information about an existing Key Vault.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azure.keyvault.KeyvaultFunctions;
     * import com.pulumi.azure.keyvault.inputs.GetKeyVaultArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = KeyvaultFunctions.getKeyVault(GetKeyVaultArgs.builder()
     *             .name("mykeyvault")
     *             .resourceGroupName("some-resource-group")
     *             .build());
     * 
     *         ctx.export("vaultUri", example.vaultUri());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetKeyVaultResult> getKeyVaultPlain(GetKeyVaultPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("azure:keyvault/getKeyVault:getKeyVault", TypeShape.of(GetKeyVaultResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to access information about an existing Key Vault Managed Hardware Security Module.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azure.keyvault.KeyvaultFunctions;
     * import com.pulumi.azure.keyvault.inputs.GetManagedHardwareSecurityModuleArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = KeyvaultFunctions.getManagedHardwareSecurityModule(GetManagedHardwareSecurityModuleArgs.builder()
     *             .name("mykeyvaultHsm")
     *             .resourceGroupName("some-resource-group")
     *             .build());
     * 
     *         ctx.export("hsmUri", example.hsmUri());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetManagedHardwareSecurityModuleResult> getManagedHardwareSecurityModule(GetManagedHardwareSecurityModuleArgs args) {
        return getManagedHardwareSecurityModule(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to access information about an existing Key Vault Managed Hardware Security Module.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azure.keyvault.KeyvaultFunctions;
     * import com.pulumi.azure.keyvault.inputs.GetManagedHardwareSecurityModuleArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = KeyvaultFunctions.getManagedHardwareSecurityModule(GetManagedHardwareSecurityModuleArgs.builder()
     *             .name("mykeyvaultHsm")
     *             .resourceGroupName("some-resource-group")
     *             .build());
     * 
     *         ctx.export("hsmUri", example.hsmUri());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetManagedHardwareSecurityModuleResult> getManagedHardwareSecurityModulePlain(GetManagedHardwareSecurityModulePlainArgs args) {
        return getManagedHardwareSecurityModulePlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to access information about an existing Key Vault Managed Hardware Security Module.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azure.keyvault.KeyvaultFunctions;
     * import com.pulumi.azure.keyvault.inputs.GetManagedHardwareSecurityModuleArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = KeyvaultFunctions.getManagedHardwareSecurityModule(GetManagedHardwareSecurityModuleArgs.builder()
     *             .name("mykeyvaultHsm")
     *             .resourceGroupName("some-resource-group")
     *             .build());
     * 
     *         ctx.export("hsmUri", example.hsmUri());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetManagedHardwareSecurityModuleResult> getManagedHardwareSecurityModule(GetManagedHardwareSecurityModuleArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("azure:keyvault/getManagedHardwareSecurityModule:getManagedHardwareSecurityModule", TypeShape.of(GetManagedHardwareSecurityModuleResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to access information about an existing Key Vault Managed Hardware Security Module.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azure.keyvault.KeyvaultFunctions;
     * import com.pulumi.azure.keyvault.inputs.GetManagedHardwareSecurityModuleArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = KeyvaultFunctions.getManagedHardwareSecurityModule(GetManagedHardwareSecurityModuleArgs.builder()
     *             .name("mykeyvaultHsm")
     *             .resourceGroupName("some-resource-group")
     *             .build());
     * 
     *         ctx.export("hsmUri", example.hsmUri());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetManagedHardwareSecurityModuleResult> getManagedHardwareSecurityModule(GetManagedHardwareSecurityModuleArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("azure:keyvault/getManagedHardwareSecurityModule:getManagedHardwareSecurityModule", TypeShape.of(GetManagedHardwareSecurityModuleResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to access information about an existing Key Vault Managed Hardware Security Module.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azure.keyvault.KeyvaultFunctions;
     * import com.pulumi.azure.keyvault.inputs.GetManagedHardwareSecurityModuleArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = KeyvaultFunctions.getManagedHardwareSecurityModule(GetManagedHardwareSecurityModuleArgs.builder()
     *             .name("mykeyvaultHsm")
     *             .resourceGroupName("some-resource-group")
     *             .build());
     * 
     *         ctx.export("hsmUri", example.hsmUri());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetManagedHardwareSecurityModuleResult> getManagedHardwareSecurityModulePlain(GetManagedHardwareSecurityModulePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("azure:keyvault/getManagedHardwareSecurityModule:getManagedHardwareSecurityModule", TypeShape.of(GetManagedHardwareSecurityModuleResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to access information about an existing Managed Hardware Security Module Key.
     * 
     * &gt; **Note:** All arguments including the secret value will be stored in the raw state as plain-text.
     * [Read more about sensitive data in state](https://www.terraform.io/docs/state/sensitive-data.html).
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azure.keyvault.KeyvaultFunctions;
     * import com.pulumi.azure.keyvault.inputs.GetManagedHardwareSecurityModuleKeyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = KeyvaultFunctions.getManagedHardwareSecurityModuleKey(GetManagedHardwareSecurityModuleKeyArgs.builder()
     *             .managedHsmId(exampleAzurermKeyVaultManagedHardwareSecurityModule.id())
     *             .name(exampleAzurermKeyVaultManagedHardwareSecurityModuleKey.name())
     *             .build());
     * 
     *         ctx.export("hsm-key-vesrion", example.version());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetManagedHardwareSecurityModuleKeyResult> getManagedHardwareSecurityModuleKey(GetManagedHardwareSecurityModuleKeyArgs args) {
        return getManagedHardwareSecurityModuleKey(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to access information about an existing Managed Hardware Security Module Key.
     * 
     * &gt; **Note:** All arguments including the secret value will be stored in the raw state as plain-text.
     * [Read more about sensitive data in state](https://www.terraform.io/docs/state/sensitive-data.html).
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azure.keyvault.KeyvaultFunctions;
     * import com.pulumi.azure.keyvault.inputs.GetManagedHardwareSecurityModuleKeyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = KeyvaultFunctions.getManagedHardwareSecurityModuleKey(GetManagedHardwareSecurityModuleKeyArgs.builder()
     *             .managedHsmId(exampleAzurermKeyVaultManagedHardwareSecurityModule.id())
     *             .name(exampleAzurermKeyVaultManagedHardwareSecurityModuleKey.name())
     *             .build());
     * 
     *         ctx.export("hsm-key-vesrion", example.version());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetManagedHardwareSecurityModuleKeyResult> getManagedHardwareSecurityModuleKeyPlain(GetManagedHardwareSecurityModuleKeyPlainArgs args) {
        return getManagedHardwareSecurityModuleKeyPlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to access information about an existing Managed Hardware Security Module Key.
     * 
     * &gt; **Note:** All arguments including the secret value will be stored in the raw state as plain-text.
     * [Read more about sensitive data in state](https://www.terraform.io/docs/state/sensitive-data.html).
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azure.keyvault.KeyvaultFunctions;
     * import com.pulumi.azure.keyvault.inputs.GetManagedHardwareSecurityModuleKeyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = KeyvaultFunctions.getManagedHardwareSecurityModuleKey(GetManagedHardwareSecurityModuleKeyArgs.builder()
     *             .managedHsmId(exampleAzurermKeyVaultManagedHardwareSecurityModule.id())
     *             .name(exampleAzurermKeyVaultManagedHardwareSecurityModuleKey.name())
     *             .build());
     * 
     *         ctx.export("hsm-key-vesrion", example.version());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetManagedHardwareSecurityModuleKeyResult> getManagedHardwareSecurityModuleKey(GetManagedHardwareSecurityModuleKeyArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("azure:keyvault/getManagedHardwareSecurityModuleKey:getManagedHardwareSecurityModuleKey", TypeShape.of(GetManagedHardwareSecurityModuleKeyResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to access information about an existing Managed Hardware Security Module Key.
     * 
     * &gt; **Note:** All arguments including the secret value will be stored in the raw state as plain-text.
     * [Read more about sensitive data in state](https://www.terraform.io/docs/state/sensitive-data.html).
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azure.keyvault.KeyvaultFunctions;
     * import com.pulumi.azure.keyvault.inputs.GetManagedHardwareSecurityModuleKeyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = KeyvaultFunctions.getManagedHardwareSecurityModuleKey(GetManagedHardwareSecurityModuleKeyArgs.builder()
     *             .managedHsmId(exampleAzurermKeyVaultManagedHardwareSecurityModule.id())
     *             .name(exampleAzurermKeyVaultManagedHardwareSecurityModuleKey.name())
     *             .build());
     * 
     *         ctx.export("hsm-key-vesrion", example.version());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetManagedHardwareSecurityModuleKeyResult> getManagedHardwareSecurityModuleKey(GetManagedHardwareSecurityModuleKeyArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("azure:keyvault/getManagedHardwareSecurityModuleKey:getManagedHardwareSecurityModuleKey", TypeShape.of(GetManagedHardwareSecurityModuleKeyResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to access information about an existing Managed Hardware Security Module Key.
     * 
     * &gt; **Note:** All arguments including the secret value will be stored in the raw state as plain-text.
     * [Read more about sensitive data in state](https://www.terraform.io/docs/state/sensitive-data.html).
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azure.keyvault.KeyvaultFunctions;
     * import com.pulumi.azure.keyvault.inputs.GetManagedHardwareSecurityModuleKeyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = KeyvaultFunctions.getManagedHardwareSecurityModuleKey(GetManagedHardwareSecurityModuleKeyArgs.builder()
     *             .managedHsmId(exampleAzurermKeyVaultManagedHardwareSecurityModule.id())
     *             .name(exampleAzurermKeyVaultManagedHardwareSecurityModuleKey.name())
     *             .build());
     * 
     *         ctx.export("hsm-key-vesrion", example.version());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetManagedHardwareSecurityModuleKeyResult> getManagedHardwareSecurityModuleKeyPlain(GetManagedHardwareSecurityModuleKeyPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("azure:keyvault/getManagedHardwareSecurityModuleKey:getManagedHardwareSecurityModuleKey", TypeShape.of(GetManagedHardwareSecurityModuleKeyResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to access information about an existing Key Vault Managed Hardware Security Module Role Definition.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azure.keyvault.KeyvaultFunctions;
     * import com.pulumi.azure.keyvault.inputs.GetManagedHardwareSecurityModuleRoleDefinitionArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = KeyvaultFunctions.getManagedHardwareSecurityModuleRoleDefinition(GetManagedHardwareSecurityModuleRoleDefinitionArgs.builder()
     *             .managedHsmId(exampleAzurermKeyVaultManagedHardwareSecurityModule.id())
     *             .name("21dbd100-6940-42c2-9190-5d6cb909625b")
     *             .build());
     * 
     *         ctx.export("id", example.resourceManagerId());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetManagedHardwareSecurityModuleRoleDefinitionResult> getManagedHardwareSecurityModuleRoleDefinition(GetManagedHardwareSecurityModuleRoleDefinitionArgs args) {
        return getManagedHardwareSecurityModuleRoleDefinition(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to access information about an existing Key Vault Managed Hardware Security Module Role Definition.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azure.keyvault.KeyvaultFunctions;
     * import com.pulumi.azure.keyvault.inputs.GetManagedHardwareSecurityModuleRoleDefinitionArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = KeyvaultFunctions.getManagedHardwareSecurityModuleRoleDefinition(GetManagedHardwareSecurityModuleRoleDefinitionArgs.builder()
     *             .managedHsmId(exampleAzurermKeyVaultManagedHardwareSecurityModule.id())
     *             .name("21dbd100-6940-42c2-9190-5d6cb909625b")
     *             .build());
     * 
     *         ctx.export("id", example.resourceManagerId());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetManagedHardwareSecurityModuleRoleDefinitionResult> getManagedHardwareSecurityModuleRoleDefinitionPlain(GetManagedHardwareSecurityModuleRoleDefinitionPlainArgs args) {
        return getManagedHardwareSecurityModuleRoleDefinitionPlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to access information about an existing Key Vault Managed Hardware Security Module Role Definition.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azure.keyvault.KeyvaultFunctions;
     * import com.pulumi.azure.keyvault.inputs.GetManagedHardwareSecurityModuleRoleDefinitionArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = KeyvaultFunctions.getManagedHardwareSecurityModuleRoleDefinition(GetManagedHardwareSecurityModuleRoleDefinitionArgs.builder()
     *             .managedHsmId(exampleAzurermKeyVaultManagedHardwareSecurityModule.id())
     *             .name("21dbd100-6940-42c2-9190-5d6cb909625b")
     *             .build());
     * 
     *         ctx.export("id", example.resourceManagerId());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetManagedHardwareSecurityModuleRoleDefinitionResult> getManagedHardwareSecurityModuleRoleDefinition(GetManagedHardwareSecurityModuleRoleDefinitionArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("azure:keyvault/getManagedHardwareSecurityModuleRoleDefinition:getManagedHardwareSecurityModuleRoleDefinition", TypeShape.of(GetManagedHardwareSecurityModuleRoleDefinitionResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to access information about an existing Key Vault Managed Hardware Security Module Role Definition.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azure.keyvault.KeyvaultFunctions;
     * import com.pulumi.azure.keyvault.inputs.GetManagedHardwareSecurityModuleRoleDefinitionArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = KeyvaultFunctions.getManagedHardwareSecurityModuleRoleDefinition(GetManagedHardwareSecurityModuleRoleDefinitionArgs.builder()
     *             .managedHsmId(exampleAzurermKeyVaultManagedHardwareSecurityModule.id())
     *             .name("21dbd100-6940-42c2-9190-5d6cb909625b")
     *             .build());
     * 
     *         ctx.export("id", example.resourceManagerId());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetManagedHardwareSecurityModuleRoleDefinitionResult> getManagedHardwareSecurityModuleRoleDefinition(GetManagedHardwareSecurityModuleRoleDefinitionArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("azure:keyvault/getManagedHardwareSecurityModuleRoleDefinition:getManagedHardwareSecurityModuleRoleDefinition", TypeShape.of(GetManagedHardwareSecurityModuleRoleDefinitionResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to access information about an existing Key Vault Managed Hardware Security Module Role Definition.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azure.keyvault.KeyvaultFunctions;
     * import com.pulumi.azure.keyvault.inputs.GetManagedHardwareSecurityModuleRoleDefinitionArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = KeyvaultFunctions.getManagedHardwareSecurityModuleRoleDefinition(GetManagedHardwareSecurityModuleRoleDefinitionArgs.builder()
     *             .managedHsmId(exampleAzurermKeyVaultManagedHardwareSecurityModule.id())
     *             .name("21dbd100-6940-42c2-9190-5d6cb909625b")
     *             .build());
     * 
     *         ctx.export("id", example.resourceManagerId());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetManagedHardwareSecurityModuleRoleDefinitionResult> getManagedHardwareSecurityModuleRoleDefinitionPlain(GetManagedHardwareSecurityModuleRoleDefinitionPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("azure:keyvault/getManagedHardwareSecurityModuleRoleDefinition:getManagedHardwareSecurityModuleRoleDefinition", TypeShape.of(GetManagedHardwareSecurityModuleRoleDefinitionResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to access information about an existing Key Vault Secret.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azure.keyvault.KeyvaultFunctions;
     * import com.pulumi.azure.keyvault.inputs.GetSecretArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = KeyvaultFunctions.getSecret(GetSecretArgs.builder()
     *             .name("secret-sauce")
     *             .keyVaultId(existing.id())
     *             .build());
     * 
     *         ctx.export("secretValue", example.value());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetSecretResult> getSecret(GetSecretArgs args) {
        return getSecret(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to access information about an existing Key Vault Secret.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azure.keyvault.KeyvaultFunctions;
     * import com.pulumi.azure.keyvault.inputs.GetSecretArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = KeyvaultFunctions.getSecret(GetSecretArgs.builder()
     *             .name("secret-sauce")
     *             .keyVaultId(existing.id())
     *             .build());
     * 
     *         ctx.export("secretValue", example.value());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetSecretResult> getSecretPlain(GetSecretPlainArgs args) {
        return getSecretPlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to access information about an existing Key Vault Secret.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azure.keyvault.KeyvaultFunctions;
     * import com.pulumi.azure.keyvault.inputs.GetSecretArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = KeyvaultFunctions.getSecret(GetSecretArgs.builder()
     *             .name("secret-sauce")
     *             .keyVaultId(existing.id())
     *             .build());
     * 
     *         ctx.export("secretValue", example.value());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetSecretResult> getSecret(GetSecretArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("azure:keyvault/getSecret:getSecret", TypeShape.of(GetSecretResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to access information about an existing Key Vault Secret.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azure.keyvault.KeyvaultFunctions;
     * import com.pulumi.azure.keyvault.inputs.GetSecretArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = KeyvaultFunctions.getSecret(GetSecretArgs.builder()
     *             .name("secret-sauce")
     *             .keyVaultId(existing.id())
     *             .build());
     * 
     *         ctx.export("secretValue", example.value());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetSecretResult> getSecret(GetSecretArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("azure:keyvault/getSecret:getSecret", TypeShape.of(GetSecretResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to access information about an existing Key Vault Secret.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azure.keyvault.KeyvaultFunctions;
     * import com.pulumi.azure.keyvault.inputs.GetSecretArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = KeyvaultFunctions.getSecret(GetSecretArgs.builder()
     *             .name("secret-sauce")
     *             .keyVaultId(existing.id())
     *             .build());
     * 
     *         ctx.export("secretValue", example.value());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetSecretResult> getSecretPlain(GetSecretPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("azure:keyvault/getSecret:getSecret", TypeShape.of(GetSecretResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to retrieve a list of secret names from an existing Key Vault Secret.
     * 
     */
    public static Output<GetSecretsResult> getSecrets(GetSecretsArgs args) {
        return getSecrets(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to retrieve a list of secret names from an existing Key Vault Secret.
     * 
     */
    public static CompletableFuture<GetSecretsResult> getSecretsPlain(GetSecretsPlainArgs args) {
        return getSecretsPlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to retrieve a list of secret names from an existing Key Vault Secret.
     * 
     */
    public static Output<GetSecretsResult> getSecrets(GetSecretsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("azure:keyvault/getSecrets:getSecrets", TypeShape.of(GetSecretsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to retrieve a list of secret names from an existing Key Vault Secret.
     * 
     */
    public static Output<GetSecretsResult> getSecrets(GetSecretsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("azure:keyvault/getSecrets:getSecrets", TypeShape.of(GetSecretsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to retrieve a list of secret names from an existing Key Vault Secret.
     * 
     */
    public static CompletableFuture<GetSecretsResult> getSecretsPlain(GetSecretsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("azure:keyvault/getSecrets:getSecrets", TypeShape.of(GetSecretsResult.class), args, Utilities.withVersion(options));
    }
}
