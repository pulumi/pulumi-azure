// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.datadog;

import com.pulumi.azure.datadog.inputs.MonitorTagRuleLogArgs;
import com.pulumi.azure.datadog.inputs.MonitorTagRuleMetricArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class MonitorTagRuleArgs extends com.pulumi.resources.ResourceArgs {

    public static final MonitorTagRuleArgs Empty = new MonitorTagRuleArgs();

    /**
     * The Datadog Monitor Id which should be used for this Datadog Monitor Tag Rule. Changing this forces a new Datadog Monitor Tag Rule to be created.
     * 
     */
    @Import(name="datadogMonitorId", required=true)
    private Output<String> datadogMonitorId;

    /**
     * @return The Datadog Monitor Id which should be used for this Datadog Monitor Tag Rule. Changing this forces a new Datadog Monitor Tag Rule to be created.
     * 
     */
    public Output<String> datadogMonitorId() {
        return this.datadogMonitorId;
    }

    /**
     * A `log` block as defined below.
     * 
     */
    @Import(name="logs")
    private @Nullable Output<List<MonitorTagRuleLogArgs>> logs;

    /**
     * @return A `log` block as defined below.
     * 
     */
    public Optional<Output<List<MonitorTagRuleLogArgs>>> logs() {
        return Optional.ofNullable(this.logs);
    }

    /**
     * A `metric` block as defined below.
     * 
     */
    @Import(name="metrics")
    private @Nullable Output<List<MonitorTagRuleMetricArgs>> metrics;

    /**
     * @return A `metric` block as defined below.
     * 
     */
    public Optional<Output<List<MonitorTagRuleMetricArgs>>> metrics() {
        return Optional.ofNullable(this.metrics);
    }

    /**
     * The name of the Tag Rules configuration. The allowed value is `default`. Defaults to `default`.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the Tag Rules configuration. The allowed value is `default`. Defaults to `default`.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    private MonitorTagRuleArgs() {}

    private MonitorTagRuleArgs(MonitorTagRuleArgs $) {
        this.datadogMonitorId = $.datadogMonitorId;
        this.logs = $.logs;
        this.metrics = $.metrics;
        this.name = $.name;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(MonitorTagRuleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private MonitorTagRuleArgs $;

        public Builder() {
            $ = new MonitorTagRuleArgs();
        }

        public Builder(MonitorTagRuleArgs defaults) {
            $ = new MonitorTagRuleArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param datadogMonitorId The Datadog Monitor Id which should be used for this Datadog Monitor Tag Rule. Changing this forces a new Datadog Monitor Tag Rule to be created.
         * 
         * @return builder
         * 
         */
        public Builder datadogMonitorId(Output<String> datadogMonitorId) {
            $.datadogMonitorId = datadogMonitorId;
            return this;
        }

        /**
         * @param datadogMonitorId The Datadog Monitor Id which should be used for this Datadog Monitor Tag Rule. Changing this forces a new Datadog Monitor Tag Rule to be created.
         * 
         * @return builder
         * 
         */
        public Builder datadogMonitorId(String datadogMonitorId) {
            return datadogMonitorId(Output.of(datadogMonitorId));
        }

        /**
         * @param logs A `log` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder logs(@Nullable Output<List<MonitorTagRuleLogArgs>> logs) {
            $.logs = logs;
            return this;
        }

        /**
         * @param logs A `log` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder logs(List<MonitorTagRuleLogArgs> logs) {
            return logs(Output.of(logs));
        }

        /**
         * @param logs A `log` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder logs(MonitorTagRuleLogArgs... logs) {
            return logs(List.of(logs));
        }

        /**
         * @param metrics A `metric` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder metrics(@Nullable Output<List<MonitorTagRuleMetricArgs>> metrics) {
            $.metrics = metrics;
            return this;
        }

        /**
         * @param metrics A `metric` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder metrics(List<MonitorTagRuleMetricArgs> metrics) {
            return metrics(Output.of(metrics));
        }

        /**
         * @param metrics A `metric` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder metrics(MonitorTagRuleMetricArgs... metrics) {
            return metrics(List.of(metrics));
        }

        /**
         * @param name The name of the Tag Rules configuration. The allowed value is `default`. Defaults to `default`.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the Tag Rules configuration. The allowed value is `default`. Defaults to `default`.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        public MonitorTagRuleArgs build() {
            if ($.datadogMonitorId == null) {
                throw new MissingRequiredPropertyException("MonitorTagRuleArgs", "datadogMonitorId");
            }
            return $;
        }
    }

}
