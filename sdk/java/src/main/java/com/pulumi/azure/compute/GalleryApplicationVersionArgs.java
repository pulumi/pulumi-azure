// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.compute;

import com.pulumi.azure.compute.inputs.GalleryApplicationVersionManageActionArgs;
import com.pulumi.azure.compute.inputs.GalleryApplicationVersionSourceArgs;
import com.pulumi.azure.compute.inputs.GalleryApplicationVersionTargetRegionArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GalleryApplicationVersionArgs extends com.pulumi.resources.ResourceArgs {

    public static final GalleryApplicationVersionArgs Empty = new GalleryApplicationVersionArgs();

    /**
     * Specifies the name of the config file on the VM. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="configFile")
    private @Nullable Output<String> configFile;

    /**
     * @return Specifies the name of the config file on the VM. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> configFile() {
        return Optional.ofNullable(this.configFile);
    }

    /**
     * Should the Gallery Application reports health. Defaults to `false`.
     * 
     */
    @Import(name="enableHealthCheck")
    private @Nullable Output<Boolean> enableHealthCheck;

    /**
     * @return Should the Gallery Application reports health. Defaults to `false`.
     * 
     */
    public Optional<Output<Boolean>> enableHealthCheck() {
        return Optional.ofNullable(this.enableHealthCheck);
    }

    /**
     * The end of life date in RFC3339 format of the Gallery Application Version.
     * 
     */
    @Import(name="endOfLifeDate")
    private @Nullable Output<String> endOfLifeDate;

    /**
     * @return The end of life date in RFC3339 format of the Gallery Application Version.
     * 
     */
    public Optional<Output<String>> endOfLifeDate() {
        return Optional.ofNullable(this.endOfLifeDate);
    }

    /**
     * Should the Gallery Application Version be excluded from the `latest` filter? If set to `true` this Gallery Application Version won&#39;t be returned for the `latest` version. Defaults to `false`.
     * 
     */
    @Import(name="excludeFromLatest")
    private @Nullable Output<Boolean> excludeFromLatest;

    /**
     * @return Should the Gallery Application Version be excluded from the `latest` filter? If set to `true` this Gallery Application Version won&#39;t be returned for the `latest` version. Defaults to `false`.
     * 
     */
    public Optional<Output<Boolean>> excludeFromLatest() {
        return Optional.ofNullable(this.excludeFromLatest);
    }

    /**
     * The ID of the Gallery Application. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="galleryApplicationId", required=true)
    private Output<String> galleryApplicationId;

    /**
     * @return The ID of the Gallery Application. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> galleryApplicationId() {
        return this.galleryApplicationId;
    }

    /**
     * The Azure Region where the Gallery Application Version exists. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="location")
    private @Nullable Output<String> location;

    /**
     * @return The Azure Region where the Gallery Application Version exists. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * A `manage_action` block as defined below.
     * 
     */
    @Import(name="manageAction", required=true)
    private Output<GalleryApplicationVersionManageActionArgs> manageAction;

    /**
     * @return A `manage_action` block as defined below.
     * 
     */
    public Output<GalleryApplicationVersionManageActionArgs> manageAction() {
        return this.manageAction;
    }

    /**
     * The version name of the Gallery Application Version, such as `1.0.0`. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The version name of the Gallery Application Version, such as `1.0.0`. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Specifies the name of the package file on the VM. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="packageFile")
    private @Nullable Output<String> packageFile;

    /**
     * @return Specifies the name of the package file on the VM. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> packageFile() {
        return Optional.ofNullable(this.packageFile);
    }

    /**
     * A `source` block as defined below.
     * 
     */
    @Import(name="source", required=true)
    private Output<GalleryApplicationVersionSourceArgs> source;

    /**
     * @return A `source` block as defined below.
     * 
     */
    public Output<GalleryApplicationVersionSourceArgs> source() {
        return this.source;
    }

    /**
     * A mapping of tags to assign to the Gallery Application Version.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return A mapping of tags to assign to the Gallery Application Version.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * One or more `target_region` blocks as defined below.
     * 
     */
    @Import(name="targetRegions", required=true)
    private Output<List<GalleryApplicationVersionTargetRegionArgs>> targetRegions;

    /**
     * @return One or more `target_region` blocks as defined below.
     * 
     */
    public Output<List<GalleryApplicationVersionTargetRegionArgs>> targetRegions() {
        return this.targetRegions;
    }

    private GalleryApplicationVersionArgs() {}

    private GalleryApplicationVersionArgs(GalleryApplicationVersionArgs $) {
        this.configFile = $.configFile;
        this.enableHealthCheck = $.enableHealthCheck;
        this.endOfLifeDate = $.endOfLifeDate;
        this.excludeFromLatest = $.excludeFromLatest;
        this.galleryApplicationId = $.galleryApplicationId;
        this.location = $.location;
        this.manageAction = $.manageAction;
        this.name = $.name;
        this.packageFile = $.packageFile;
        this.source = $.source;
        this.tags = $.tags;
        this.targetRegions = $.targetRegions;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GalleryApplicationVersionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GalleryApplicationVersionArgs $;

        public Builder() {
            $ = new GalleryApplicationVersionArgs();
        }

        public Builder(GalleryApplicationVersionArgs defaults) {
            $ = new GalleryApplicationVersionArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param configFile Specifies the name of the config file on the VM. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder configFile(@Nullable Output<String> configFile) {
            $.configFile = configFile;
            return this;
        }

        /**
         * @param configFile Specifies the name of the config file on the VM. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder configFile(String configFile) {
            return configFile(Output.of(configFile));
        }

        /**
         * @param enableHealthCheck Should the Gallery Application reports health. Defaults to `false`.
         * 
         * @return builder
         * 
         */
        public Builder enableHealthCheck(@Nullable Output<Boolean> enableHealthCheck) {
            $.enableHealthCheck = enableHealthCheck;
            return this;
        }

        /**
         * @param enableHealthCheck Should the Gallery Application reports health. Defaults to `false`.
         * 
         * @return builder
         * 
         */
        public Builder enableHealthCheck(Boolean enableHealthCheck) {
            return enableHealthCheck(Output.of(enableHealthCheck));
        }

        /**
         * @param endOfLifeDate The end of life date in RFC3339 format of the Gallery Application Version.
         * 
         * @return builder
         * 
         */
        public Builder endOfLifeDate(@Nullable Output<String> endOfLifeDate) {
            $.endOfLifeDate = endOfLifeDate;
            return this;
        }

        /**
         * @param endOfLifeDate The end of life date in RFC3339 format of the Gallery Application Version.
         * 
         * @return builder
         * 
         */
        public Builder endOfLifeDate(String endOfLifeDate) {
            return endOfLifeDate(Output.of(endOfLifeDate));
        }

        /**
         * @param excludeFromLatest Should the Gallery Application Version be excluded from the `latest` filter? If set to `true` this Gallery Application Version won&#39;t be returned for the `latest` version. Defaults to `false`.
         * 
         * @return builder
         * 
         */
        public Builder excludeFromLatest(@Nullable Output<Boolean> excludeFromLatest) {
            $.excludeFromLatest = excludeFromLatest;
            return this;
        }

        /**
         * @param excludeFromLatest Should the Gallery Application Version be excluded from the `latest` filter? If set to `true` this Gallery Application Version won&#39;t be returned for the `latest` version. Defaults to `false`.
         * 
         * @return builder
         * 
         */
        public Builder excludeFromLatest(Boolean excludeFromLatest) {
            return excludeFromLatest(Output.of(excludeFromLatest));
        }

        /**
         * @param galleryApplicationId The ID of the Gallery Application. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder galleryApplicationId(Output<String> galleryApplicationId) {
            $.galleryApplicationId = galleryApplicationId;
            return this;
        }

        /**
         * @param galleryApplicationId The ID of the Gallery Application. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder galleryApplicationId(String galleryApplicationId) {
            return galleryApplicationId(Output.of(galleryApplicationId));
        }

        /**
         * @param location The Azure Region where the Gallery Application Version exists. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location The Azure Region where the Gallery Application Version exists. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param manageAction A `manage_action` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder manageAction(Output<GalleryApplicationVersionManageActionArgs> manageAction) {
            $.manageAction = manageAction;
            return this;
        }

        /**
         * @param manageAction A `manage_action` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder manageAction(GalleryApplicationVersionManageActionArgs manageAction) {
            return manageAction(Output.of(manageAction));
        }

        /**
         * @param name The version name of the Gallery Application Version, such as `1.0.0`. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The version name of the Gallery Application Version, such as `1.0.0`. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param packageFile Specifies the name of the package file on the VM. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder packageFile(@Nullable Output<String> packageFile) {
            $.packageFile = packageFile;
            return this;
        }

        /**
         * @param packageFile Specifies the name of the package file on the VM. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder packageFile(String packageFile) {
            return packageFile(Output.of(packageFile));
        }

        /**
         * @param source A `source` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder source(Output<GalleryApplicationVersionSourceArgs> source) {
            $.source = source;
            return this;
        }

        /**
         * @param source A `source` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder source(GalleryApplicationVersionSourceArgs source) {
            return source(Output.of(source));
        }

        /**
         * @param tags A mapping of tags to assign to the Gallery Application Version.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags A mapping of tags to assign to the Gallery Application Version.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param targetRegions One or more `target_region` blocks as defined below.
         * 
         * @return builder
         * 
         */
        public Builder targetRegions(Output<List<GalleryApplicationVersionTargetRegionArgs>> targetRegions) {
            $.targetRegions = targetRegions;
            return this;
        }

        /**
         * @param targetRegions One or more `target_region` blocks as defined below.
         * 
         * @return builder
         * 
         */
        public Builder targetRegions(List<GalleryApplicationVersionTargetRegionArgs> targetRegions) {
            return targetRegions(Output.of(targetRegions));
        }

        /**
         * @param targetRegions One or more `target_region` blocks as defined below.
         * 
         * @return builder
         * 
         */
        public Builder targetRegions(GalleryApplicationVersionTargetRegionArgs... targetRegions) {
            return targetRegions(List.of(targetRegions));
        }

        public GalleryApplicationVersionArgs build() {
            if ($.galleryApplicationId == null) {
                throw new MissingRequiredPropertyException("GalleryApplicationVersionArgs", "galleryApplicationId");
            }
            if ($.manageAction == null) {
                throw new MissingRequiredPropertyException("GalleryApplicationVersionArgs", "manageAction");
            }
            if ($.source == null) {
                throw new MissingRequiredPropertyException("GalleryApplicationVersionArgs", "source");
            }
            if ($.targetRegions == null) {
                throw new MissingRequiredPropertyException("GalleryApplicationVersionArgs", "targetRegions");
            }
            return $;
        }
    }

}
