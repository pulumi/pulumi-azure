// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.policy;

import com.pulumi.azure.Utilities;
import com.pulumi.azure.policy.DefinitionArgs;
import com.pulumi.azure.policy.inputs.DefinitionState;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Manages a policy rule definition on a management group or your provider subscription.
 * 
 * Policy definitions do not take effect until they are assigned to a scope using a Policy Assignment.
 * 
 * ## Example Usage
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.azure.policy.Definition;
 * import com.pulumi.azure.policy.DefinitionArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var policy = new Definition(&#34;policy&#34;, DefinitionArgs.builder()        
 *             .displayName(&#34;acceptance test policy definition&#34;)
 *             .metadata(&#34;&#34;&#34;
 *     {
 *     &#34;category&#34;: &#34;General&#34;
 *     }
 * 
 * 
 *             &#34;&#34;&#34;)
 *             .mode(&#34;Indexed&#34;)
 *             .parameters(&#34;&#34;&#34;
 * 	{
 *     &#34;allowedLocations&#34;: {
 *       &#34;type&#34;: &#34;Array&#34;,
 *       &#34;metadata&#34;: {
 *         &#34;description&#34;: &#34;The list of allowed locations for resources.&#34;,
 *         &#34;displayName&#34;: &#34;Allowed locations&#34;,
 *         &#34;strongType&#34;: &#34;location&#34;
 *       }
 *     }
 *   }
 * 
 *             &#34;&#34;&#34;)
 *             .policyRule(&#34;&#34;&#34;
 * 	{
 *     &#34;if&#34;: {
 *       &#34;not&#34;: {
 *         &#34;field&#34;: &#34;location&#34;,
 *         &#34;in&#34;: &#34;[parameters(&#39;allowedLocations&#39;)]&#34;
 *       }
 *     },
 *     &#34;then&#34;: {
 *       &#34;effect&#34;: &#34;audit&#34;
 *     }
 *   }
 * 
 *             &#34;&#34;&#34;)
 *             .policyType(&#34;Custom&#34;)
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * Policy Definitions can be imported using the `policy name`, e.g.
 * 
 * ```sh
 *  $ pulumi import azure:policy/definition:Definition examplePolicy /subscriptions/&lt;SUBSCRIPTION_ID&gt;/providers/Microsoft.Authorization/policyDefinitions/&lt;POLICY_NAME&gt;
 * ```
 * 
 *  or
 * 
 * ```sh
 *  $ pulumi import azure:policy/definition:Definition examplePolicy /providers/Microsoft.Management/managementgroups/&lt;MANGAGEMENT_GROUP_ID&gt;/providers/Microsoft.Authorization/policyDefinitions/&lt;POLICY_NAME&gt;
 * ```
 * 
 */
@ResourceType(type="azure:policy/definition:Definition")
public class Definition extends com.pulumi.resources.CustomResource {
    /**
     * The description of the policy definition.
     * 
     */
    @Export(name="description", type=String.class, parameters={})
    private Output</* @Nullable */ String> description;

    /**
     * @return The description of the policy definition.
     * 
     */
    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    /**
     * The display name of the policy definition.
     * 
     */
    @Export(name="displayName", type=String.class, parameters={})
    private Output<String> displayName;

    /**
     * @return The display name of the policy definition.
     * 
     */
    public Output<String> displayName() {
        return this.displayName;
    }
    /**
     * The id of the Management Group where this policy should be defined. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="managementGroupId", type=String.class, parameters={})
    private Output</* @Nullable */ String> managementGroupId;

    /**
     * @return The id of the Management Group where this policy should be defined. Changing this forces a new resource to be created.
     * 
     */
    public Output<Optional<String>> managementGroupId() {
        return Codegen.optional(this.managementGroupId);
    }
    /**
     * The metadata for the policy definition. This
     * is a JSON string representing additional metadata that should be stored
     * with the policy definition.
     * 
     */
    @Export(name="metadata", type=String.class, parameters={})
    private Output<String> metadata;

    /**
     * @return The metadata for the policy definition. This
     * is a JSON string representing additional metadata that should be stored
     * with the policy definition.
     * 
     */
    public Output<String> metadata() {
        return this.metadata;
    }
    /**
     * The policy resource manager mode that allows you to specify which resource types will be evaluated. Possible values are `All` or `Indexed`.
     * 
     */
    @Export(name="mode", type=String.class, parameters={})
    private Output<String> mode;

    /**
     * @return The policy resource manager mode that allows you to specify which resource types will be evaluated. Possible values are `All` or `Indexed`.
     * 
     */
    public Output<String> mode() {
        return this.mode;
    }
    /**
     * The name of the policy definition. Changing this forces a
     * new resource to be created.
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return The name of the policy definition. Changing this forces a
     * new resource to be created.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Parameters for the policy definition. This field
     * is a JSON string that allows you to parameterize your policy definition.
     * 
     */
    @Export(name="parameters", type=String.class, parameters={})
    private Output</* @Nullable */ String> parameters;

    /**
     * @return Parameters for the policy definition. This field
     * is a JSON string that allows you to parameterize your policy definition.
     * 
     */
    public Output<Optional<String>> parameters() {
        return Codegen.optional(this.parameters);
    }
    /**
     * The policy rule for the policy definition. This
     * is a JSON string representing the rule that contains an if and
     * a then block.
     * 
     */
    @Export(name="policyRule", type=String.class, parameters={})
    private Output</* @Nullable */ String> policyRule;

    /**
     * @return The policy rule for the policy definition. This
     * is a JSON string representing the rule that contains an if and
     * a then block.
     * 
     */
    public Output<Optional<String>> policyRule() {
        return Codegen.optional(this.policyRule);
    }
    /**
     * The policy type. Possible values are `BuiltIn`, `Custom` and `NotSpecified`. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="policyType", type=String.class, parameters={})
    private Output<String> policyType;

    /**
     * @return The policy type. Possible values are `BuiltIn`, `Custom` and `NotSpecified`. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> policyType() {
        return this.policyType;
    }
    /**
     * A list of role definition id extracted from `policy_rule` required for remediation.
     * 
     */
    @Export(name="roleDefinitionIds", type=List.class, parameters={String.class})
    private Output<List<String>> roleDefinitionIds;

    /**
     * @return A list of role definition id extracted from `policy_rule` required for remediation.
     * 
     */
    public Output<List<String>> roleDefinitionIds() {
        return this.roleDefinitionIds;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Definition(String name) {
        this(name, DefinitionArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Definition(String name, DefinitionArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Definition(String name, DefinitionArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:policy/definition:Definition", name, args == null ? DefinitionArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private Definition(String name, Output<String> id, @Nullable DefinitionState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:policy/definition:Definition", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Definition get(String name, Output<String> id, @Nullable DefinitionState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Definition(name, id, state, options);
    }
}
