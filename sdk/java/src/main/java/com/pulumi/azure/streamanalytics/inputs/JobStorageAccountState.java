// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.streamanalytics.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class JobStorageAccountState extends com.pulumi.resources.ResourceArgs {

    public static final JobStorageAccountState Empty = new JobStorageAccountState();

    /**
     * The authentication mode for the Stream Analytics Job&#39;s Storage Account. Possible values are `ConnectionString`, and `Msi`.
     * 
     */
    @Import(name="authenticationMode")
    private @Nullable Output<String> authenticationMode;

    /**
     * @return The authentication mode for the Stream Analytics Job&#39;s Storage Account. Possible values are `ConnectionString`, and `Msi`.
     * 
     */
    public Optional<Output<String>> authenticationMode() {
        return Optional.ofNullable(this.authenticationMode);
    }

    @Import(name="storageAccountKey")
    private @Nullable Output<String> storageAccountKey;

    public Optional<Output<String>> storageAccountKey() {
        return Optional.ofNullable(this.storageAccountKey);
    }

    @Import(name="storageAccountName")
    private @Nullable Output<String> storageAccountName;

    public Optional<Output<String>> storageAccountName() {
        return Optional.ofNullable(this.storageAccountName);
    }

    /**
     * The ID of the Stream Analytics Job. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="streamAnalyticsJobId")
    private @Nullable Output<String> streamAnalyticsJobId;

    /**
     * @return The ID of the Stream Analytics Job. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> streamAnalyticsJobId() {
        return Optional.ofNullable(this.streamAnalyticsJobId);
    }

    private JobStorageAccountState() {}

    private JobStorageAccountState(JobStorageAccountState $) {
        this.authenticationMode = $.authenticationMode;
        this.storageAccountKey = $.storageAccountKey;
        this.storageAccountName = $.storageAccountName;
        this.streamAnalyticsJobId = $.streamAnalyticsJobId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(JobStorageAccountState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private JobStorageAccountState $;

        public Builder() {
            $ = new JobStorageAccountState();
        }

        public Builder(JobStorageAccountState defaults) {
            $ = new JobStorageAccountState(Objects.requireNonNull(defaults));
        }

        /**
         * @param authenticationMode The authentication mode for the Stream Analytics Job&#39;s Storage Account. Possible values are `ConnectionString`, and `Msi`.
         * 
         * @return builder
         * 
         */
        public Builder authenticationMode(@Nullable Output<String> authenticationMode) {
            $.authenticationMode = authenticationMode;
            return this;
        }

        /**
         * @param authenticationMode The authentication mode for the Stream Analytics Job&#39;s Storage Account. Possible values are `ConnectionString`, and `Msi`.
         * 
         * @return builder
         * 
         */
        public Builder authenticationMode(String authenticationMode) {
            return authenticationMode(Output.of(authenticationMode));
        }

        public Builder storageAccountKey(@Nullable Output<String> storageAccountKey) {
            $.storageAccountKey = storageAccountKey;
            return this;
        }

        public Builder storageAccountKey(String storageAccountKey) {
            return storageAccountKey(Output.of(storageAccountKey));
        }

        public Builder storageAccountName(@Nullable Output<String> storageAccountName) {
            $.storageAccountName = storageAccountName;
            return this;
        }

        public Builder storageAccountName(String storageAccountName) {
            return storageAccountName(Output.of(storageAccountName));
        }

        /**
         * @param streamAnalyticsJobId The ID of the Stream Analytics Job. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder streamAnalyticsJobId(@Nullable Output<String> streamAnalyticsJobId) {
            $.streamAnalyticsJobId = streamAnalyticsJobId;
            return this;
        }

        /**
         * @param streamAnalyticsJobId The ID of the Stream Analytics Job. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder streamAnalyticsJobId(String streamAnalyticsJobId) {
            return streamAnalyticsJobId(Output.of(streamAnalyticsJobId));
        }

        public JobStorageAccountState build() {
            return $;
        }
    }

}
