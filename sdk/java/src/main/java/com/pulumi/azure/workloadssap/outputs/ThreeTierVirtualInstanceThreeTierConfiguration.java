// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.workloadssap.outputs;

import com.pulumi.azure.workloadssap.outputs.ThreeTierVirtualInstanceThreeTierConfigurationApplicationServerConfiguration;
import com.pulumi.azure.workloadssap.outputs.ThreeTierVirtualInstanceThreeTierConfigurationCentralServerConfiguration;
import com.pulumi.azure.workloadssap.outputs.ThreeTierVirtualInstanceThreeTierConfigurationDatabaseServerConfiguration;
import com.pulumi.azure.workloadssap.outputs.ThreeTierVirtualInstanceThreeTierConfigurationResourceNames;
import com.pulumi.azure.workloadssap.outputs.ThreeTierVirtualInstanceThreeTierConfigurationTransportCreateAndMount;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ThreeTierVirtualInstanceThreeTierConfiguration {
    private String appResourceGroupName;
    /**
     * @return An `application_server_configuration` block as defined below. Changing this forces a new resource to be created.
     * 
     */
    private ThreeTierVirtualInstanceThreeTierConfigurationApplicationServerConfiguration applicationServerConfiguration;
    /**
     * @return A `central_server_configuration` block as defined below. Changing this forces a new resource to be created.
     * 
     */
    private ThreeTierVirtualInstanceThreeTierConfigurationCentralServerConfiguration centralServerConfiguration;
    /**
     * @return A `database_server_configuration` block as defined below. Changing this forces a new resource to be created.
     * 
     */
    private ThreeTierVirtualInstanceThreeTierConfigurationDatabaseServerConfiguration databaseServerConfiguration;
    /**
     * @return The high availability type for the three tier configuration. Possible values are `AvailabilitySet` and `AvailabilityZone`. Changing this forces a new resource to be created.
     * 
     */
    private @Nullable String highAvailabilityType;
    /**
     * @return A `resource_names` block as defined below. Changing this forces a new resource to be created.
     * 
     */
    private @Nullable ThreeTierVirtualInstanceThreeTierConfigurationResourceNames resourceNames;
    /**
     * @return Specifies whether a secondary IP address should be added to the network interface on all VMs of the SAP system being deployed. Defaults to `false`. Changing this forces a new resource to be created.
     * 
     */
    private @Nullable Boolean secondaryIpEnabled;
    /**
     * @return A `transport_create_and_mount` block as defined below. Changing this forces a new resource to be created.
     * 
     * &gt; **Note:** The file share configuration uses `skip` by default when `transport_create_and_mount` isn&#39;t set.
     * 
     * &gt; **Note:** Due to [a bug in the Azure API](https://github.com/Azure/azure-rest-api-specs/issues/25209) where the Storage File Share Id is not defined correctly, it is not currently possible to support using Transport Mount.
     * 
     */
    private @Nullable ThreeTierVirtualInstanceThreeTierConfigurationTransportCreateAndMount transportCreateAndMount;

    private ThreeTierVirtualInstanceThreeTierConfiguration() {}
    public String appResourceGroupName() {
        return this.appResourceGroupName;
    }
    /**
     * @return An `application_server_configuration` block as defined below. Changing this forces a new resource to be created.
     * 
     */
    public ThreeTierVirtualInstanceThreeTierConfigurationApplicationServerConfiguration applicationServerConfiguration() {
        return this.applicationServerConfiguration;
    }
    /**
     * @return A `central_server_configuration` block as defined below. Changing this forces a new resource to be created.
     * 
     */
    public ThreeTierVirtualInstanceThreeTierConfigurationCentralServerConfiguration centralServerConfiguration() {
        return this.centralServerConfiguration;
    }
    /**
     * @return A `database_server_configuration` block as defined below. Changing this forces a new resource to be created.
     * 
     */
    public ThreeTierVirtualInstanceThreeTierConfigurationDatabaseServerConfiguration databaseServerConfiguration() {
        return this.databaseServerConfiguration;
    }
    /**
     * @return The high availability type for the three tier configuration. Possible values are `AvailabilitySet` and `AvailabilityZone`. Changing this forces a new resource to be created.
     * 
     */
    public Optional<String> highAvailabilityType() {
        return Optional.ofNullable(this.highAvailabilityType);
    }
    /**
     * @return A `resource_names` block as defined below. Changing this forces a new resource to be created.
     * 
     */
    public Optional<ThreeTierVirtualInstanceThreeTierConfigurationResourceNames> resourceNames() {
        return Optional.ofNullable(this.resourceNames);
    }
    /**
     * @return Specifies whether a secondary IP address should be added to the network interface on all VMs of the SAP system being deployed. Defaults to `false`. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Boolean> secondaryIpEnabled() {
        return Optional.ofNullable(this.secondaryIpEnabled);
    }
    /**
     * @return A `transport_create_and_mount` block as defined below. Changing this forces a new resource to be created.
     * 
     * &gt; **Note:** The file share configuration uses `skip` by default when `transport_create_and_mount` isn&#39;t set.
     * 
     * &gt; **Note:** Due to [a bug in the Azure API](https://github.com/Azure/azure-rest-api-specs/issues/25209) where the Storage File Share Id is not defined correctly, it is not currently possible to support using Transport Mount.
     * 
     */
    public Optional<ThreeTierVirtualInstanceThreeTierConfigurationTransportCreateAndMount> transportCreateAndMount() {
        return Optional.ofNullable(this.transportCreateAndMount);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ThreeTierVirtualInstanceThreeTierConfiguration defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String appResourceGroupName;
        private ThreeTierVirtualInstanceThreeTierConfigurationApplicationServerConfiguration applicationServerConfiguration;
        private ThreeTierVirtualInstanceThreeTierConfigurationCentralServerConfiguration centralServerConfiguration;
        private ThreeTierVirtualInstanceThreeTierConfigurationDatabaseServerConfiguration databaseServerConfiguration;
        private @Nullable String highAvailabilityType;
        private @Nullable ThreeTierVirtualInstanceThreeTierConfigurationResourceNames resourceNames;
        private @Nullable Boolean secondaryIpEnabled;
        private @Nullable ThreeTierVirtualInstanceThreeTierConfigurationTransportCreateAndMount transportCreateAndMount;
        public Builder() {}
        public Builder(ThreeTierVirtualInstanceThreeTierConfiguration defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.appResourceGroupName = defaults.appResourceGroupName;
    	      this.applicationServerConfiguration = defaults.applicationServerConfiguration;
    	      this.centralServerConfiguration = defaults.centralServerConfiguration;
    	      this.databaseServerConfiguration = defaults.databaseServerConfiguration;
    	      this.highAvailabilityType = defaults.highAvailabilityType;
    	      this.resourceNames = defaults.resourceNames;
    	      this.secondaryIpEnabled = defaults.secondaryIpEnabled;
    	      this.transportCreateAndMount = defaults.transportCreateAndMount;
        }

        @CustomType.Setter
        public Builder appResourceGroupName(String appResourceGroupName) {
            if (appResourceGroupName == null) {
              throw new MissingRequiredPropertyException("ThreeTierVirtualInstanceThreeTierConfiguration", "appResourceGroupName");
            }
            this.appResourceGroupName = appResourceGroupName;
            return this;
        }
        @CustomType.Setter
        public Builder applicationServerConfiguration(ThreeTierVirtualInstanceThreeTierConfigurationApplicationServerConfiguration applicationServerConfiguration) {
            if (applicationServerConfiguration == null) {
              throw new MissingRequiredPropertyException("ThreeTierVirtualInstanceThreeTierConfiguration", "applicationServerConfiguration");
            }
            this.applicationServerConfiguration = applicationServerConfiguration;
            return this;
        }
        @CustomType.Setter
        public Builder centralServerConfiguration(ThreeTierVirtualInstanceThreeTierConfigurationCentralServerConfiguration centralServerConfiguration) {
            if (centralServerConfiguration == null) {
              throw new MissingRequiredPropertyException("ThreeTierVirtualInstanceThreeTierConfiguration", "centralServerConfiguration");
            }
            this.centralServerConfiguration = centralServerConfiguration;
            return this;
        }
        @CustomType.Setter
        public Builder databaseServerConfiguration(ThreeTierVirtualInstanceThreeTierConfigurationDatabaseServerConfiguration databaseServerConfiguration) {
            if (databaseServerConfiguration == null) {
              throw new MissingRequiredPropertyException("ThreeTierVirtualInstanceThreeTierConfiguration", "databaseServerConfiguration");
            }
            this.databaseServerConfiguration = databaseServerConfiguration;
            return this;
        }
        @CustomType.Setter
        public Builder highAvailabilityType(@Nullable String highAvailabilityType) {

            this.highAvailabilityType = highAvailabilityType;
            return this;
        }
        @CustomType.Setter
        public Builder resourceNames(@Nullable ThreeTierVirtualInstanceThreeTierConfigurationResourceNames resourceNames) {

            this.resourceNames = resourceNames;
            return this;
        }
        @CustomType.Setter
        public Builder secondaryIpEnabled(@Nullable Boolean secondaryIpEnabled) {

            this.secondaryIpEnabled = secondaryIpEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder transportCreateAndMount(@Nullable ThreeTierVirtualInstanceThreeTierConfigurationTransportCreateAndMount transportCreateAndMount) {

            this.transportCreateAndMount = transportCreateAndMount;
            return this;
        }
        public ThreeTierVirtualInstanceThreeTierConfiguration build() {
            final var _resultValue = new ThreeTierVirtualInstanceThreeTierConfiguration();
            _resultValue.appResourceGroupName = appResourceGroupName;
            _resultValue.applicationServerConfiguration = applicationServerConfiguration;
            _resultValue.centralServerConfiguration = centralServerConfiguration;
            _resultValue.databaseServerConfiguration = databaseServerConfiguration;
            _resultValue.highAvailabilityType = highAvailabilityType;
            _resultValue.resourceNames = resourceNames;
            _resultValue.secondaryIpEnabled = secondaryIpEnabled;
            _resultValue.transportCreateAndMount = transportCreateAndMount;
            return _resultValue;
        }
    }
}
