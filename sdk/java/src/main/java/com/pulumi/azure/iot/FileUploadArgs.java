// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.iot;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class FileUploadArgs extends com.pulumi.resources.ResourceArgs {

    public static final FileUploadArgs Empty = new FileUploadArgs();

    /**
     * The type used to authenticate against the storage account. Possible values are `keyBased` and `identityBased`. Defaults to `keyBased`.
     * 
     */
    @Import(name="authenticationType")
    private @Nullable Output<String> authenticationType;

    /**
     * @return The type used to authenticate against the storage account. Possible values are `keyBased` and `identityBased`. Defaults to `keyBased`.
     * 
     */
    public Optional<Output<String>> authenticationType() {
        return Optional.ofNullable(this.authenticationType);
    }

    /**
     * The connection string for the Azure Storage account to which files are uploaded.
     * 
     */
    @Import(name="connectionString", required=true)
    private Output<String> connectionString;

    /**
     * @return The connection string for the Azure Storage account to which files are uploaded.
     * 
     */
    public Output<String> connectionString() {
        return this.connectionString;
    }

    /**
     * The name of the root container where the files should be uploaded to. The container need not exist but should be creatable using the `connection_string` specified.
     * 
     */
    @Import(name="containerName", required=true)
    private Output<String> containerName;

    /**
     * @return The name of the root container where the files should be uploaded to. The container need not exist but should be creatable using the `connection_string` specified.
     * 
     */
    public Output<String> containerName() {
        return this.containerName;
    }

    /**
     * The period of time for which a file upload notification message is available to consume before it expires, specified as an [ISO 8601 timespan duration](https://en.wikipedia.org/wiki/ISO_8601#Durations). This value must be between 1 minute and 48 hours. Defaults to `PT1H`.
     * 
     */
    @Import(name="defaultTtl")
    private @Nullable Output<String> defaultTtl;

    /**
     * @return The period of time for which a file upload notification message is available to consume before it expires, specified as an [ISO 8601 timespan duration](https://en.wikipedia.org/wiki/ISO_8601#Durations). This value must be between 1 minute and 48 hours. Defaults to `PT1H`.
     * 
     */
    public Optional<Output<String>> defaultTtl() {
        return Optional.ofNullable(this.defaultTtl);
    }

    /**
     * The ID of the User Managed Identity used to authenticate against the storage account.
     * 
     * &gt; **NOTE:** `identity_id` can only be specified when `authentication_type` is `identityBased`. It must be one of the `identity_ids` of the IoT Hub. If `identity_id` is omitted when `authentication_type` is `identityBased`, then the System-Assigned Managed Identity of the IoT Hub will be used.
     * 
     */
    @Import(name="identityId")
    private @Nullable Output<String> identityId;

    /**
     * @return The ID of the User Managed Identity used to authenticate against the storage account.
     * 
     * &gt; **NOTE:** `identity_id` can only be specified when `authentication_type` is `identityBased`. It must be one of the `identity_ids` of the IoT Hub. If `identity_id` is omitted when `authentication_type` is `identityBased`, then the System-Assigned Managed Identity of the IoT Hub will be used.
     * 
     */
    public Optional<Output<String>> identityId() {
        return Optional.ofNullable(this.identityId);
    }

    /**
     * The ID of the IoT Hub. Changing this forces a new IoT Hub to be created.
     * 
     */
    @Import(name="iothubId", required=true)
    private Output<String> iothubId;

    /**
     * @return The ID of the IoT Hub. Changing this forces a new IoT Hub to be created.
     * 
     */
    public Output<String> iothubId() {
        return this.iothubId;
    }

    /**
     * The lock duration for the file upload notifications queue, specified as an [ISO 8601 timespan duration](https://en.wikipedia.org/wiki/ISO_8601#Durations). This value must be between 5 and 300 seconds. Defaults to `PT1M`.
     * 
     */
    @Import(name="lockDuration")
    private @Nullable Output<String> lockDuration;

    /**
     * @return The lock duration for the file upload notifications queue, specified as an [ISO 8601 timespan duration](https://en.wikipedia.org/wiki/ISO_8601#Durations). This value must be between 5 and 300 seconds. Defaults to `PT1M`.
     * 
     */
    public Optional<Output<String>> lockDuration() {
        return Optional.ofNullable(this.lockDuration);
    }

    /**
     * The number of times the IoT Hub attempts to deliver a file upload notification message. Defaults to `10`.
     * 
     */
    @Import(name="maxDeliveryCount")
    private @Nullable Output<Integer> maxDeliveryCount;

    /**
     * @return The number of times the IoT Hub attempts to deliver a file upload notification message. Defaults to `10`.
     * 
     */
    public Optional<Output<Integer>> maxDeliveryCount() {
        return Optional.ofNullable(this.maxDeliveryCount);
    }

    /**
     * Used to specify whether file notifications are sent to IoT Hub on upload. Defaults to `false`.
     * 
     */
    @Import(name="notificationsEnabled")
    private @Nullable Output<Boolean> notificationsEnabled;

    /**
     * @return Used to specify whether file notifications are sent to IoT Hub on upload. Defaults to `false`.
     * 
     */
    public Optional<Output<Boolean>> notificationsEnabled() {
        return Optional.ofNullable(this.notificationsEnabled);
    }

    /**
     * The period of time for which the SAS URI generated by IoT Hub for file upload is valid, specified as an [ISO 8601 timespan duration](https://en.wikipedia.org/wiki/ISO_8601#Durations). This value must be between 1 minute and 24 hours. Defaults to `PT1H`.
     * 
     */
    @Import(name="sasTtl")
    private @Nullable Output<String> sasTtl;

    /**
     * @return The period of time for which the SAS URI generated by IoT Hub for file upload is valid, specified as an [ISO 8601 timespan duration](https://en.wikipedia.org/wiki/ISO_8601#Durations). This value must be between 1 minute and 24 hours. Defaults to `PT1H`.
     * 
     */
    public Optional<Output<String>> sasTtl() {
        return Optional.ofNullable(this.sasTtl);
    }

    private FileUploadArgs() {}

    private FileUploadArgs(FileUploadArgs $) {
        this.authenticationType = $.authenticationType;
        this.connectionString = $.connectionString;
        this.containerName = $.containerName;
        this.defaultTtl = $.defaultTtl;
        this.identityId = $.identityId;
        this.iothubId = $.iothubId;
        this.lockDuration = $.lockDuration;
        this.maxDeliveryCount = $.maxDeliveryCount;
        this.notificationsEnabled = $.notificationsEnabled;
        this.sasTtl = $.sasTtl;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FileUploadArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FileUploadArgs $;

        public Builder() {
            $ = new FileUploadArgs();
        }

        public Builder(FileUploadArgs defaults) {
            $ = new FileUploadArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param authenticationType The type used to authenticate against the storage account. Possible values are `keyBased` and `identityBased`. Defaults to `keyBased`.
         * 
         * @return builder
         * 
         */
        public Builder authenticationType(@Nullable Output<String> authenticationType) {
            $.authenticationType = authenticationType;
            return this;
        }

        /**
         * @param authenticationType The type used to authenticate against the storage account. Possible values are `keyBased` and `identityBased`. Defaults to `keyBased`.
         * 
         * @return builder
         * 
         */
        public Builder authenticationType(String authenticationType) {
            return authenticationType(Output.of(authenticationType));
        }

        /**
         * @param connectionString The connection string for the Azure Storage account to which files are uploaded.
         * 
         * @return builder
         * 
         */
        public Builder connectionString(Output<String> connectionString) {
            $.connectionString = connectionString;
            return this;
        }

        /**
         * @param connectionString The connection string for the Azure Storage account to which files are uploaded.
         * 
         * @return builder
         * 
         */
        public Builder connectionString(String connectionString) {
            return connectionString(Output.of(connectionString));
        }

        /**
         * @param containerName The name of the root container where the files should be uploaded to. The container need not exist but should be creatable using the `connection_string` specified.
         * 
         * @return builder
         * 
         */
        public Builder containerName(Output<String> containerName) {
            $.containerName = containerName;
            return this;
        }

        /**
         * @param containerName The name of the root container where the files should be uploaded to. The container need not exist but should be creatable using the `connection_string` specified.
         * 
         * @return builder
         * 
         */
        public Builder containerName(String containerName) {
            return containerName(Output.of(containerName));
        }

        /**
         * @param defaultTtl The period of time for which a file upload notification message is available to consume before it expires, specified as an [ISO 8601 timespan duration](https://en.wikipedia.org/wiki/ISO_8601#Durations). This value must be between 1 minute and 48 hours. Defaults to `PT1H`.
         * 
         * @return builder
         * 
         */
        public Builder defaultTtl(@Nullable Output<String> defaultTtl) {
            $.defaultTtl = defaultTtl;
            return this;
        }

        /**
         * @param defaultTtl The period of time for which a file upload notification message is available to consume before it expires, specified as an [ISO 8601 timespan duration](https://en.wikipedia.org/wiki/ISO_8601#Durations). This value must be between 1 minute and 48 hours. Defaults to `PT1H`.
         * 
         * @return builder
         * 
         */
        public Builder defaultTtl(String defaultTtl) {
            return defaultTtl(Output.of(defaultTtl));
        }

        /**
         * @param identityId The ID of the User Managed Identity used to authenticate against the storage account.
         * 
         * &gt; **NOTE:** `identity_id` can only be specified when `authentication_type` is `identityBased`. It must be one of the `identity_ids` of the IoT Hub. If `identity_id` is omitted when `authentication_type` is `identityBased`, then the System-Assigned Managed Identity of the IoT Hub will be used.
         * 
         * @return builder
         * 
         */
        public Builder identityId(@Nullable Output<String> identityId) {
            $.identityId = identityId;
            return this;
        }

        /**
         * @param identityId The ID of the User Managed Identity used to authenticate against the storage account.
         * 
         * &gt; **NOTE:** `identity_id` can only be specified when `authentication_type` is `identityBased`. It must be one of the `identity_ids` of the IoT Hub. If `identity_id` is omitted when `authentication_type` is `identityBased`, then the System-Assigned Managed Identity of the IoT Hub will be used.
         * 
         * @return builder
         * 
         */
        public Builder identityId(String identityId) {
            return identityId(Output.of(identityId));
        }

        /**
         * @param iothubId The ID of the IoT Hub. Changing this forces a new IoT Hub to be created.
         * 
         * @return builder
         * 
         */
        public Builder iothubId(Output<String> iothubId) {
            $.iothubId = iothubId;
            return this;
        }

        /**
         * @param iothubId The ID of the IoT Hub. Changing this forces a new IoT Hub to be created.
         * 
         * @return builder
         * 
         */
        public Builder iothubId(String iothubId) {
            return iothubId(Output.of(iothubId));
        }

        /**
         * @param lockDuration The lock duration for the file upload notifications queue, specified as an [ISO 8601 timespan duration](https://en.wikipedia.org/wiki/ISO_8601#Durations). This value must be between 5 and 300 seconds. Defaults to `PT1M`.
         * 
         * @return builder
         * 
         */
        public Builder lockDuration(@Nullable Output<String> lockDuration) {
            $.lockDuration = lockDuration;
            return this;
        }

        /**
         * @param lockDuration The lock duration for the file upload notifications queue, specified as an [ISO 8601 timespan duration](https://en.wikipedia.org/wiki/ISO_8601#Durations). This value must be between 5 and 300 seconds. Defaults to `PT1M`.
         * 
         * @return builder
         * 
         */
        public Builder lockDuration(String lockDuration) {
            return lockDuration(Output.of(lockDuration));
        }

        /**
         * @param maxDeliveryCount The number of times the IoT Hub attempts to deliver a file upload notification message. Defaults to `10`.
         * 
         * @return builder
         * 
         */
        public Builder maxDeliveryCount(@Nullable Output<Integer> maxDeliveryCount) {
            $.maxDeliveryCount = maxDeliveryCount;
            return this;
        }

        /**
         * @param maxDeliveryCount The number of times the IoT Hub attempts to deliver a file upload notification message. Defaults to `10`.
         * 
         * @return builder
         * 
         */
        public Builder maxDeliveryCount(Integer maxDeliveryCount) {
            return maxDeliveryCount(Output.of(maxDeliveryCount));
        }

        /**
         * @param notificationsEnabled Used to specify whether file notifications are sent to IoT Hub on upload. Defaults to `false`.
         * 
         * @return builder
         * 
         */
        public Builder notificationsEnabled(@Nullable Output<Boolean> notificationsEnabled) {
            $.notificationsEnabled = notificationsEnabled;
            return this;
        }

        /**
         * @param notificationsEnabled Used to specify whether file notifications are sent to IoT Hub on upload. Defaults to `false`.
         * 
         * @return builder
         * 
         */
        public Builder notificationsEnabled(Boolean notificationsEnabled) {
            return notificationsEnabled(Output.of(notificationsEnabled));
        }

        /**
         * @param sasTtl The period of time for which the SAS URI generated by IoT Hub for file upload is valid, specified as an [ISO 8601 timespan duration](https://en.wikipedia.org/wiki/ISO_8601#Durations). This value must be between 1 minute and 24 hours. Defaults to `PT1H`.
         * 
         * @return builder
         * 
         */
        public Builder sasTtl(@Nullable Output<String> sasTtl) {
            $.sasTtl = sasTtl;
            return this;
        }

        /**
         * @param sasTtl The period of time for which the SAS URI generated by IoT Hub for file upload is valid, specified as an [ISO 8601 timespan duration](https://en.wikipedia.org/wiki/ISO_8601#Durations). This value must be between 1 minute and 24 hours. Defaults to `PT1H`.
         * 
         * @return builder
         * 
         */
        public Builder sasTtl(String sasTtl) {
            return sasTtl(Output.of(sasTtl));
        }

        public FileUploadArgs build() {
            if ($.connectionString == null) {
                throw new MissingRequiredPropertyException("FileUploadArgs", "connectionString");
            }
            if ($.containerName == null) {
                throw new MissingRequiredPropertyException("FileUploadArgs", "containerName");
            }
            if ($.iothubId == null) {
                throw new MissingRequiredPropertyException("FileUploadArgs", "iothubId");
            }
            return $;
        }
    }

}
