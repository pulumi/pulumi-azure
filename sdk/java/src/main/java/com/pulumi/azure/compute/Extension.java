// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.compute;

import com.pulumi.azure.Utilities;
import com.pulumi.azure.compute.ExtensionArgs;
import com.pulumi.azure.compute.inputs.ExtensionState;
import com.pulumi.azure.compute.outputs.ExtensionProtectedSettingsFromKeyVault;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Manages a Virtual Machine Extension to provide post deployment configuration
 * and run automated tasks.
 * 
 * &gt; **NOTE:** Custom Script Extensions for Linux &amp; Windows require that the `commandToExecute` returns a `0` exit code to be classified as successfully deployed. You can achieve this by appending `exit 0` to the end of your `commandToExecute`.
 * 
 * &gt; **NOTE:** Custom Script Extensions require that the Azure Virtual Machine Guest Agent is running on the Virtual Machine.
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.azure.core.ResourceGroup;
 * import com.pulumi.azure.core.ResourceGroupArgs;
 * import com.pulumi.azure.network.VirtualNetwork;
 * import com.pulumi.azure.network.VirtualNetworkArgs;
 * import com.pulumi.azure.network.Subnet;
 * import com.pulumi.azure.network.SubnetArgs;
 * import com.pulumi.azure.network.NetworkInterface;
 * import com.pulumi.azure.network.NetworkInterfaceArgs;
 * import com.pulumi.azure.network.inputs.NetworkInterfaceIpConfigurationArgs;
 * import com.pulumi.azure.compute.LinuxVirtualMachine;
 * import com.pulumi.azure.compute.LinuxVirtualMachineArgs;
 * import com.pulumi.azure.compute.inputs.LinuxVirtualMachineAdminSshKeyArgs;
 * import com.pulumi.azure.compute.inputs.LinuxVirtualMachineOsDiskArgs;
 * import com.pulumi.azure.compute.inputs.LinuxVirtualMachineSourceImageReferenceArgs;
 * import com.pulumi.std.StdFunctions;
 * import com.pulumi.std.inputs.FileArgs;
 * import com.pulumi.azure.compute.Extension;
 * import com.pulumi.azure.compute.ExtensionArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new ResourceGroup("example", ResourceGroupArgs.builder()
 *             .name("example-resources")
 *             .location("West Europe")
 *             .build());
 * 
 *         var exampleVirtualNetwork = new VirtualNetwork("exampleVirtualNetwork", VirtualNetworkArgs.builder()
 *             .name("acctvn")
 *             .addressSpaces("10.0.0.0/16")
 *             .location(example.location())
 *             .resourceGroupName(example.name())
 *             .build());
 * 
 *         var exampleSubnet = new Subnet("exampleSubnet", SubnetArgs.builder()
 *             .name("acctsub")
 *             .resourceGroupName(example.name())
 *             .virtualNetworkName(exampleVirtualNetwork.name())
 *             .addressPrefixes("10.0.2.0/24")
 *             .build());
 * 
 *         var exampleNetworkInterface = new NetworkInterface("exampleNetworkInterface", NetworkInterfaceArgs.builder()
 *             .name("acctni")
 *             .location(example.location())
 *             .resourceGroupName(example.name())
 *             .ipConfigurations(NetworkInterfaceIpConfigurationArgs.builder()
 *                 .name("testconfiguration1")
 *                 .subnetId(exampleSubnet.id())
 *                 .privateIpAddressAllocation("Dynamic")
 *                 .build())
 *             .build());
 * 
 *         var exampleLinuxVirtualMachine = new LinuxVirtualMachine("exampleLinuxVirtualMachine", LinuxVirtualMachineArgs.builder()
 *             .name("example-machine")
 *             .resourceGroupName(example.name())
 *             .location(example.location())
 *             .size("Standard_F2")
 *             .adminUsername("adminuser")
 *             .networkInterfaceIds(exampleNetworkInterface.id())
 *             .adminSshKeys(LinuxVirtualMachineAdminSshKeyArgs.builder()
 *                 .username("adminuser")
 *                 .publicKey(StdFunctions.file(FileArgs.builder()
 *                     .input("~/.ssh/id_rsa.pub")
 *                     .build()).result())
 *                 .build())
 *             .osDisk(LinuxVirtualMachineOsDiskArgs.builder()
 *                 .caching("ReadWrite")
 *                 .storageAccountType("Standard_LRS")
 *                 .build())
 *             .sourceImageReference(LinuxVirtualMachineSourceImageReferenceArgs.builder()
 *                 .publisher("Canonical")
 *                 .offer("0001-com-ubuntu-server-jammy")
 *                 .sku("22_04-lts")
 *                 .version("latest")
 *                 .build())
 *             .build());
 * 
 *         var exampleExtension = new Extension("exampleExtension", ExtensionArgs.builder()
 *             .name("hostname")
 *             .virtualMachineId(exampleLinuxVirtualMachine.id())
 *             .publisher("Microsoft.Azure.Extensions")
 *             .type("CustomScript")
 *             .typeHandlerVersion("2.0")
 *             .settings("""
 *  {
 *   "commandToExecute": "hostname && uptime"
 *  }
 *             """)
 *             .tags(Map.of("environment", "Production"))
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * Virtual Machine Extensions can be imported using the `resource id`, e.g.
 * 
 * ```sh
 * $ pulumi import azure:compute/extension:Extension example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/mygroup1/providers/Microsoft.Compute/virtualMachines/myVM/extensions/extensionName
 * ```
 * 
 */
@ResourceType(type="azure:compute/extension:Extension")
public class Extension extends com.pulumi.resources.CustomResource {
    /**
     * Specifies if the platform deploys the latest minor version update to the `type_handler_version` specified.
     * 
     */
    @Export(name="autoUpgradeMinorVersion", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> autoUpgradeMinorVersion;

    /**
     * @return Specifies if the platform deploys the latest minor version update to the `type_handler_version` specified.
     * 
     */
    public Output<Optional<Boolean>> autoUpgradeMinorVersion() {
        return Codegen.optional(this.autoUpgradeMinorVersion);
    }
    /**
     * Should the Extension be automatically updated whenever the Publisher releases a new version of this VM Extension?
     * 
     */
    @Export(name="automaticUpgradeEnabled", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> automaticUpgradeEnabled;

    /**
     * @return Should the Extension be automatically updated whenever the Publisher releases a new version of this VM Extension?
     * 
     */
    public Output<Optional<Boolean>> automaticUpgradeEnabled() {
        return Codegen.optional(this.automaticUpgradeEnabled);
    }
    /**
     * Should failures from the extension be suppressed? Possible values are `true` or `false`. Defaults to `false`.
     * 
     * &gt; **NOTE:** Operational failures such as not connecting to the VM will not be suppressed regardless of the `failure_suppression_enabled` value.
     * 
     */
    @Export(name="failureSuppressionEnabled", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> failureSuppressionEnabled;

    /**
     * @return Should failures from the extension be suppressed? Possible values are `true` or `false`. Defaults to `false`.
     * 
     * &gt; **NOTE:** Operational failures such as not connecting to the VM will not be suppressed regardless of the `failure_suppression_enabled` value.
     * 
     */
    public Output<Optional<Boolean>> failureSuppressionEnabled() {
        return Codegen.optional(this.failureSuppressionEnabled);
    }
    /**
     * The name of the virtual machine extension peering. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The name of the virtual machine extension peering. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The protected_settings passed to the extension, like settings, these are specified as a JSON object in a string.
     * 
     * &gt; **Please Note:** Certain VM Extensions require that the keys in the `protected_settings` block are case sensitive. If you&#39;re seeing unhelpful errors, please ensure the keys are consistent with how Azure is expecting them (for instance, for the `JsonADDomainExtension` extension, the keys are expected to be in `TitleCase`.)
     * 
     */
    @Export(name="protectedSettings", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> protectedSettings;

    /**
     * @return The protected_settings passed to the extension, like settings, these are specified as a JSON object in a string.
     * 
     * &gt; **Please Note:** Certain VM Extensions require that the keys in the `protected_settings` block are case sensitive. If you&#39;re seeing unhelpful errors, please ensure the keys are consistent with how Azure is expecting them (for instance, for the `JsonADDomainExtension` extension, the keys are expected to be in `TitleCase`.)
     * 
     */
    public Output<Optional<String>> protectedSettings() {
        return Codegen.optional(this.protectedSettings);
    }
    /**
     * A `protected_settings_from_key_vault` block as defined below.
     * 
     * &gt; **Note:** `protected_settings_from_key_vault` cannot be used with `protected_settings`
     * 
     */
    @Export(name="protectedSettingsFromKeyVault", refs={ExtensionProtectedSettingsFromKeyVault.class}, tree="[0]")
    private Output</* @Nullable */ ExtensionProtectedSettingsFromKeyVault> protectedSettingsFromKeyVault;

    /**
     * @return A `protected_settings_from_key_vault` block as defined below.
     * 
     * &gt; **Note:** `protected_settings_from_key_vault` cannot be used with `protected_settings`
     * 
     */
    public Output<Optional<ExtensionProtectedSettingsFromKeyVault>> protectedSettingsFromKeyVault() {
        return Codegen.optional(this.protectedSettingsFromKeyVault);
    }
    /**
     * Specifies the collection of extension names after which this extension needs to be provisioned.
     * 
     */
    @Export(name="provisionAfterExtensions", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> provisionAfterExtensions;

    /**
     * @return Specifies the collection of extension names after which this extension needs to be provisioned.
     * 
     */
    public Output<Optional<List<String>>> provisionAfterExtensions() {
        return Codegen.optional(this.provisionAfterExtensions);
    }
    /**
     * The publisher of the extension, available publishers can be found by using the Azure CLI. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="publisher", refs={String.class}, tree="[0]")
    private Output<String> publisher;

    /**
     * @return The publisher of the extension, available publishers can be found by using the Azure CLI. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> publisher() {
        return this.publisher;
    }
    /**
     * The settings passed to the extension, these are specified as a JSON object in a string.
     * 
     * &gt; **Please Note:** Certain VM Extensions require that the keys in the `settings` block are case sensitive. If you&#39;re seeing unhelpful errors, please ensure the keys are consistent with how Azure is expecting them (for instance, for the `JsonADDomainExtension` extension, the keys are expected to be in `TitleCase`.)
     * 
     */
    @Export(name="settings", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> settings;

    /**
     * @return The settings passed to the extension, these are specified as a JSON object in a string.
     * 
     * &gt; **Please Note:** Certain VM Extensions require that the keys in the `settings` block are case sensitive. If you&#39;re seeing unhelpful errors, please ensure the keys are consistent with how Azure is expecting them (for instance, for the `JsonADDomainExtension` extension, the keys are expected to be in `TitleCase`.)
     * 
     */
    public Output<Optional<String>> settings() {
        return Codegen.optional(this.settings);
    }
    /**
     * A mapping of tags to assign to the resource.
     * 
     */
    @Export(name="tags", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output</* @Nullable */ Map<String,String>> tags;

    /**
     * @return A mapping of tags to assign to the resource.
     * 
     */
    public Output<Optional<Map<String,String>>> tags() {
        return Codegen.optional(this.tags);
    }
    /**
     * The type of extension, available types for a publisher can be found using the Azure CLI.
     * 
     * &gt; **Note:** The `Publisher` and `Type` of Virtual Machine Extensions can be found using the Azure CLI, via:
     * 
     */
    @Export(name="type", refs={String.class}, tree="[0]")
    private Output<String> type;

    /**
     * @return The type of extension, available types for a publisher can be found using the Azure CLI.
     * 
     * &gt; **Note:** The `Publisher` and `Type` of Virtual Machine Extensions can be found using the Azure CLI, via:
     * 
     */
    public Output<String> type() {
        return this.type;
    }
    /**
     * Specifies the version of the extension to use, available versions can be found using the Azure CLI.
     * 
     */
    @Export(name="typeHandlerVersion", refs={String.class}, tree="[0]")
    private Output<String> typeHandlerVersion;

    /**
     * @return Specifies the version of the extension to use, available versions can be found using the Azure CLI.
     * 
     */
    public Output<String> typeHandlerVersion() {
        return this.typeHandlerVersion;
    }
    /**
     * The ID of the Virtual Machine. Changing this forces a new resource to be created
     * 
     */
    @Export(name="virtualMachineId", refs={String.class}, tree="[0]")
    private Output<String> virtualMachineId;

    /**
     * @return The ID of the Virtual Machine. Changing this forces a new resource to be created
     * 
     */
    public Output<String> virtualMachineId() {
        return this.virtualMachineId;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Extension(java.lang.String name) {
        this(name, ExtensionArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Extension(java.lang.String name, ExtensionArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Extension(java.lang.String name, ExtensionArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:compute/extension:Extension", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private Extension(java.lang.String name, Output<java.lang.String> id, @Nullable ExtensionState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:compute/extension:Extension", name, state, makeResourceOptions(options, id), false);
    }

    private static ExtensionArgs makeArgs(ExtensionArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? ExtensionArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .additionalSecretOutputs(List.of(
                "protectedSettings"
            ))
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Extension get(java.lang.String name, Output<java.lang.String> id, @Nullable ExtensionState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Extension(name, id, state, options);
    }
}
