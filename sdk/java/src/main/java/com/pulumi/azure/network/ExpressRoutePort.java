// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.network;

import com.pulumi.azure.Utilities;
import com.pulumi.azure.network.ExpressRoutePortArgs;
import com.pulumi.azure.network.inputs.ExpressRoutePortState;
import com.pulumi.azure.network.outputs.ExpressRoutePortIdentity;
import com.pulumi.azure.network.outputs.ExpressRoutePortLink1;
import com.pulumi.azure.network.outputs.ExpressRoutePortLink2;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Manages a Express Route Port.
 * 
 * ## Example Usage
 * ```java
 * package generated_program;
 * 
 * import java.util.*;
 * import java.io.*;
 * import java.nio.*;
 * import com.pulumi.*;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var exampleResourceGroup = new ResourceGroup(&#34;exampleResourceGroup&#34;, ResourceGroupArgs.builder()        
 *             .location(&#34;West US&#34;)
 *             .build());
 * 
 *         var exampleExpressRoutePort = new ExpressRoutePort(&#34;exampleExpressRoutePort&#34;, ExpressRoutePortArgs.builder()        
 *             .resourceGroupName(exampleResourceGroup.name())
 *             .location(exampleResourceGroup.location())
 *             .peeringLocation(&#34;Airtel-Chennai-CLS&#34;)
 *             .bandwidthInGbps(10)
 *             .encapsulation(&#34;Dot1Q&#34;)
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * Express Route Ports can be imported using the `resource id`, e.g.
 * 
 * ```sh
 *  $ pulumi import azure:network/expressRoutePort:ExpressRoutePort example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.Network/expressRoutePorts/port1
 * ```
 * 
 */
@ResourceType(type="azure:network/expressRoutePort:ExpressRoutePort")
public class ExpressRoutePort extends com.pulumi.resources.CustomResource {
    /**
     * Bandwidth of the Express Route Port in Gbps. Changing this forces a new Express Route Port to be created.
     * 
     */
    @Export(name="bandwidthInGbps", type=Integer.class, parameters={})
    private Output<Integer> bandwidthInGbps;

    /**
     * @return Bandwidth of the Express Route Port in Gbps. Changing this forces a new Express Route Port to be created.
     * 
     */
    public Output<Integer> bandwidthInGbps() {
        return this.bandwidthInGbps;
    }
    /**
     * The encapsulation method used for the Express Route Port. Changing this forces a new Express Route Port to be created. Possible values are: `Dot1Q`, `QinQ`.
     * 
     */
    @Export(name="encapsulation", type=String.class, parameters={})
    private Output<String> encapsulation;

    /**
     * @return The encapsulation method used for the Express Route Port. Changing this forces a new Express Route Port to be created. Possible values are: `Dot1Q`, `QinQ`.
     * 
     */
    public Output<String> encapsulation() {
        return this.encapsulation;
    }
    /**
     * The EtherType of the Express Route Port.
     * 
     */
    @Export(name="ethertype", type=String.class, parameters={})
    private Output<String> ethertype;

    /**
     * @return The EtherType of the Express Route Port.
     * 
     */
    public Output<String> ethertype() {
        return this.ethertype;
    }
    /**
     * The resource GUID of the Express Route Port.
     * 
     */
    @Export(name="guid", type=String.class, parameters={})
    private Output<String> guid;

    /**
     * @return The resource GUID of the Express Route Port.
     * 
     */
    public Output<String> guid() {
        return this.guid;
    }
    /**
     * An `identity` block as defined below.
     * 
     */
    @Export(name="identity", type=ExpressRoutePortIdentity.class, parameters={})
    private Output</* @Nullable */ ExpressRoutePortIdentity> identity;

    /**
     * @return An `identity` block as defined below.
     * 
     */
    public Output<Optional<ExpressRoutePortIdentity>> identity() {
        return Codegen.optional(this.identity);
    }
    /**
     * A list of `link` blocks as defined below.
     * 
     */
    @Export(name="link1", type=ExpressRoutePortLink1.class, parameters={})
    private Output<ExpressRoutePortLink1> link1;

    /**
     * @return A list of `link` blocks as defined below.
     * 
     */
    public Output<ExpressRoutePortLink1> link1() {
        return this.link1;
    }
    /**
     * A list of `link` blocks as defined below.
     * 
     */
    @Export(name="link2", type=ExpressRoutePortLink2.class, parameters={})
    private Output<ExpressRoutePortLink2> link2;

    /**
     * @return A list of `link` blocks as defined below.
     * 
     */
    public Output<ExpressRoutePortLink2> link2() {
        return this.link2;
    }
    /**
     * The Azure Region where the Express Route Port should exist. Changing this forces a new Express Route Port to be created.
     * 
     */
    @Export(name="location", type=String.class, parameters={})
    private Output<String> location;

    /**
     * @return The Azure Region where the Express Route Port should exist. Changing this forces a new Express Route Port to be created.
     * 
     */
    public Output<String> location() {
        return this.location;
    }
    /**
     * The maximum transmission unit of the Express Route Port.
     * 
     */
    @Export(name="mtu", type=String.class, parameters={})
    private Output<String> mtu;

    /**
     * @return The maximum transmission unit of the Express Route Port.
     * 
     */
    public Output<String> mtu() {
        return this.mtu;
    }
    /**
     * The name which should be used for this Express Route Port. Changing this forces a new Express Route Port to be created.
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return The name which should be used for this Express Route Port. Changing this forces a new Express Route Port to be created.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The name of the peering location that this Express Route Port is physically mapped to. Changing this forces a new Express Route Port to be created.
     * 
     */
    @Export(name="peeringLocation", type=String.class, parameters={})
    private Output<String> peeringLocation;

    /**
     * @return The name of the peering location that this Express Route Port is physically mapped to. Changing this forces a new Express Route Port to be created.
     * 
     */
    public Output<String> peeringLocation() {
        return this.peeringLocation;
    }
    /**
     * The name of the Resource Group where the Express Route Port should exist. Changing this forces a new Express Route Port to be created.
     * 
     */
    @Export(name="resourceGroupName", type=String.class, parameters={})
    private Output<String> resourceGroupName;

    /**
     * @return The name of the Resource Group where the Express Route Port should exist. Changing this forces a new Express Route Port to be created.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }
    /**
     * A mapping of tags which should be assigned to the Express Route Port.
     * 
     */
    @Export(name="tags", type=Map.class, parameters={String.class, String.class})
    private Output</* @Nullable */ Map<String,String>> tags;

    /**
     * @return A mapping of tags which should be assigned to the Express Route Port.
     * 
     */
    public Output<Optional<Map<String,String>>> tags() {
        return Codegen.optional(this.tags);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public ExpressRoutePort(String name) {
        this(name, ExpressRoutePortArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public ExpressRoutePort(String name, ExpressRoutePortArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public ExpressRoutePort(String name, ExpressRoutePortArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:network/expressRoutePort:ExpressRoutePort", name, args == null ? ExpressRoutePortArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private ExpressRoutePort(String name, Output<String> id, @Nullable ExpressRoutePortState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:network/expressRoutePort:ExpressRoutePort", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static ExpressRoutePort get(String name, Output<String> id, @Nullable ExpressRoutePortState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new ExpressRoutePort(name, id, state, options);
    }
}
