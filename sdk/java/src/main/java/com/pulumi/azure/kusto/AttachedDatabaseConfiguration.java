// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.kusto;

import com.pulumi.azure.Utilities;
import com.pulumi.azure.kusto.AttachedDatabaseConfigurationArgs;
import com.pulumi.azure.kusto.inputs.AttachedDatabaseConfigurationState;
import com.pulumi.azure.kusto.outputs.AttachedDatabaseConfigurationSharing;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Manages a Kusto (also known as Azure Data Explorer) Attached Database Configuration
 * 
 * ## Example Usage
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.azure.core.ResourceGroup;
 * import com.pulumi.azure.core.ResourceGroupArgs;
 * import com.pulumi.azure.kusto.Cluster;
 * import com.pulumi.azure.kusto.ClusterArgs;
 * import com.pulumi.azure.kusto.inputs.ClusterSkuArgs;
 * import com.pulumi.azure.kusto.Database;
 * import com.pulumi.azure.kusto.DatabaseArgs;
 * import com.pulumi.azure.kusto.AttachedDatabaseConfiguration;
 * import com.pulumi.azure.kusto.AttachedDatabaseConfigurationArgs;
 * import com.pulumi.azure.kusto.inputs.AttachedDatabaseConfigurationSharingArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var exampleResourceGroup = new ResourceGroup(&#34;exampleResourceGroup&#34;, ResourceGroupArgs.builder()        
 *             .location(&#34;West Europe&#34;)
 *             .build());
 * 
 *         var followerCluster = new Cluster(&#34;followerCluster&#34;, ClusterArgs.builder()        
 *             .location(exampleResourceGroup.location())
 *             .resourceGroupName(exampleResourceGroup.name())
 *             .sku(ClusterSkuArgs.builder()
 *                 .name(&#34;Dev(No SLA)_Standard_D11_v2&#34;)
 *                 .capacity(1)
 *                 .build())
 *             .build());
 * 
 *         var followedCluster = new Cluster(&#34;followedCluster&#34;, ClusterArgs.builder()        
 *             .location(exampleResourceGroup.location())
 *             .resourceGroupName(exampleResourceGroup.name())
 *             .sku(ClusterSkuArgs.builder()
 *                 .name(&#34;Dev(No SLA)_Standard_D11_v2&#34;)
 *                 .capacity(1)
 *                 .build())
 *             .build());
 * 
 *         var followedDatabase = new Database(&#34;followedDatabase&#34;, DatabaseArgs.builder()        
 *             .resourceGroupName(exampleResourceGroup.name())
 *             .location(exampleResourceGroup.location())
 *             .clusterName(followerCluster.name())
 *             .build());
 * 
 *         var exampleDatabase = new Database(&#34;exampleDatabase&#34;, DatabaseArgs.builder()        
 *             .resourceGroupName(exampleResourceGroup.name())
 *             .location(exampleResourceGroup.location())
 *             .clusterName(followerCluster.name())
 *             .build());
 * 
 *         var exampleAttachedDatabaseConfiguration = new AttachedDatabaseConfiguration(&#34;exampleAttachedDatabaseConfiguration&#34;, AttachedDatabaseConfigurationArgs.builder()        
 *             .resourceGroupName(exampleResourceGroup.name())
 *             .location(exampleResourceGroup.location())
 *             .clusterName(followerCluster.name())
 *             .clusterResourceId(followedCluster.id())
 *             .databaseName(exampleDatabase.name())
 *             .sharing(AttachedDatabaseConfigurationSharingArgs.builder()
 *                 .externalTablesToExcludes(&#34;ExternalTable2&#34;)
 *                 .externalTablesToIncludes(&#34;ExternalTable1&#34;)
 *                 .materializedViewsToExcludes(&#34;MaterializedViewTable2&#34;)
 *                 .materializedViewsToIncludes(&#34;MaterializedViewTable1&#34;)
 *                 .tablesToExcludes(&#34;Table2&#34;)
 *                 .tablesToIncludes(&#34;Table1&#34;)
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * Kusto Attached Database Configurations can be imported using the `resource id`, e.g.
 * 
 * ```sh
 *  $ pulumi import azure:kusto/attachedDatabaseConfiguration:AttachedDatabaseConfiguration example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.Kusto/clusters/cluster1/attachedDatabaseConfigurations/configuration1
 * ```
 * 
 */
@ResourceType(type="azure:kusto/attachedDatabaseConfiguration:AttachedDatabaseConfiguration")
public class AttachedDatabaseConfiguration extends com.pulumi.resources.CustomResource {
    /**
     * The list of databases from the `cluster_resource_id` which are currently attached to the cluster.
     * 
     */
    @Export(name="attachedDatabaseNames", refs={List.class,String.class}, tree="[0,1]")
    private Output<List<String>> attachedDatabaseNames;

    /**
     * @return The list of databases from the `cluster_resource_id` which are currently attached to the cluster.
     * 
     */
    public Output<List<String>> attachedDatabaseNames() {
        return this.attachedDatabaseNames;
    }
    /**
     * Specifies the name of the Kusto Cluster for which the configuration will be created. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="clusterName", refs={String.class}, tree="[0]")
    private Output<String> clusterName;

    /**
     * @return Specifies the name of the Kusto Cluster for which the configuration will be created. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> clusterName() {
        return this.clusterName;
    }
    /**
     * The resource id of the cluster where the databases you would like to attach reside. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="clusterResourceId", refs={String.class}, tree="[0]")
    private Output<String> clusterResourceId;

    /**
     * @return The resource id of the cluster where the databases you would like to attach reside. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> clusterResourceId() {
        return this.clusterResourceId;
    }
    /**
     * The name of the database which you would like to attach, use * if you want to follow all current and future databases. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="databaseName", refs={String.class}, tree="[0]")
    private Output<String> databaseName;

    /**
     * @return The name of the database which you would like to attach, use * if you want to follow all current and future databases. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> databaseName() {
        return this.databaseName;
    }
    /**
     * The default principals modification kind. Valid values are: `None` (default), `Replace` and `Union`. Defaults to `None`.
     * 
     */
    @Export(name="defaultPrincipalModificationKind", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> defaultPrincipalModificationKind;

    /**
     * @return The default principals modification kind. Valid values are: `None` (default), `Replace` and `Union`. Defaults to `None`.
     * 
     */
    public Output<Optional<String>> defaultPrincipalModificationKind() {
        return Codegen.optional(this.defaultPrincipalModificationKind);
    }
    /**
     * Specifies the location of the Kusto Cluster for which the configuration will be created. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="location", refs={String.class}, tree="[0]")
    private Output<String> location;

    /**
     * @return Specifies the location of the Kusto Cluster for which the configuration will be created. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> location() {
        return this.location;
    }
    /**
     * The name of the Kusto Attached Database Configuration to create. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The name of the Kusto Attached Database Configuration to create. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Specifies the resource group of the Kusto Cluster for which the configuration will be created. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="resourceGroupName", refs={String.class}, tree="[0]")
    private Output<String> resourceGroupName;

    /**
     * @return Specifies the resource group of the Kusto Cluster for which the configuration will be created. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }
    /**
     * A `sharing` block as defined below.
     * 
     */
    @Export(name="sharing", refs={AttachedDatabaseConfigurationSharing.class}, tree="[0]")
    private Output</* @Nullable */ AttachedDatabaseConfigurationSharing> sharing;

    /**
     * @return A `sharing` block as defined below.
     * 
     */
    public Output<Optional<AttachedDatabaseConfigurationSharing>> sharing() {
        return Codegen.optional(this.sharing);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public AttachedDatabaseConfiguration(String name) {
        this(name, AttachedDatabaseConfigurationArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public AttachedDatabaseConfiguration(String name, AttachedDatabaseConfigurationArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public AttachedDatabaseConfiguration(String name, AttachedDatabaseConfigurationArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:kusto/attachedDatabaseConfiguration:AttachedDatabaseConfiguration", name, args == null ? AttachedDatabaseConfigurationArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private AttachedDatabaseConfiguration(String name, Output<String> id, @Nullable AttachedDatabaseConfigurationState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:kusto/attachedDatabaseConfiguration:AttachedDatabaseConfiguration", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static AttachedDatabaseConfiguration get(String name, Output<String> id, @Nullable AttachedDatabaseConfigurationState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new AttachedDatabaseConfiguration(name, id, state, options);
    }
}
