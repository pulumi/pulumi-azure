// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.streamanalytics;

import com.pulumi.azure.Utilities;
import com.pulumi.azure.streamanalytics.FunctionJavascriptUdaArgs;
import com.pulumi.azure.streamanalytics.inputs.FunctionJavascriptUdaState;
import com.pulumi.azure.streamanalytics.outputs.FunctionJavascriptUdaInput;
import com.pulumi.azure.streamanalytics.outputs.FunctionJavascriptUdaOutput;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;

/**
 * Manages a JavaScript UDA Function within a Stream Analytics Streaming Job.
 * 
 * ## Example Usage
 * ```java
 * package generated_program;
 * 
 * import java.util.*;
 * import java.io.*;
 * import java.nio.*;
 * import com.pulumi.*;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         final var exampleResourceGroup = Output.of(CoreFunctions.getResourceGroup(GetBudgetResourceGroupArgs.builder()
 *             .name(&#34;example-resources&#34;)
 *             .build()));
 * 
 *         final var exampleJob = Output.of(StreamanalyticsFunctions.getJob(GetJobArgs.builder()
 *             .name(&#34;example-job&#34;)
 *             .resourceGroupName(exampleResourceGroup.apply(getBudgetResourceGroupResult -&gt; getBudgetResourceGroupResult.name()))
 *             .build()));
 * 
 *         var exampleFunctionJavascriptUda = new FunctionJavascriptUda(&#34;exampleFunctionJavascriptUda&#34;, FunctionJavascriptUdaArgs.builder()        
 *             .streamAnalyticsJobId(exampleJob.apply(getJobResult -&gt; getJobResult.id()))
 *             .script(&#34;&#34;&#34;
 * function main() {
 *     this.init = function () {
 *         this.state = 0;
 *     }
 * 
 *     this.accumulate = function (value, timestamp) {
 *         this.state += value;
 *     }
 * 
 *     this.computeResult = function () {
 *         return this.state;
 *     }
 * }
 *             &#34;&#34;&#34;)
 *             .inputs(FunctionJavascriptUdaInputArgs.builder()
 *                 .type(&#34;bigint&#34;)
 *                 .build())
 *             .output(FunctionJavascriptUdaOutputArgs.builder()
 *                 .type(&#34;bigint&#34;)
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * Stream Analytics JavaScript UDA Functions can be imported using the `resource id`, e.g.
 * 
 * ```sh
 *  $ pulumi import azure:streamanalytics/functionJavascriptUda:FunctionJavascriptUda example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.StreamAnalytics/streamingjobs/job1/functions/func1
 * ```
 * 
 */
@ResourceType(type="azure:streamanalytics/functionJavascriptUda:FunctionJavascriptUda")
public class FunctionJavascriptUda extends com.pulumi.resources.CustomResource {
    /**
     * One or more `input` blocks as defined below.
     * 
     */
    @Export(name="inputs", type=List.class, parameters={FunctionJavascriptUdaInput.class})
    private Output<List<FunctionJavascriptUdaInput>> inputs;

    /**
     * @return One or more `input` blocks as defined below.
     * 
     */
    public Output<List<FunctionJavascriptUdaInput>> inputs() {
        return this.inputs;
    }
    /**
     * The name of the JavaScript UDA Function. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return The name of the JavaScript UDA Function. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * An `output` block as defined below.
     * 
     */
    @Export(name="output", type=FunctionJavascriptUdaOutput.class, parameters={})
    private Output<FunctionJavascriptUdaOutput> output;

    /**
     * @return An `output` block as defined below.
     * 
     */
    public Output<FunctionJavascriptUdaOutput> output() {
        return this.output;
    }
    /**
     * The JavaScript of this UDA Function.
     * 
     */
    @Export(name="script", type=String.class, parameters={})
    private Output<String> script;

    /**
     * @return The JavaScript of this UDA Function.
     * 
     */
    public Output<String> script() {
        return this.script;
    }
    /**
     * The resource ID of the Stream Analytics Job where this Function should be created. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="streamAnalyticsJobId", type=String.class, parameters={})
    private Output<String> streamAnalyticsJobId;

    /**
     * @return The resource ID of the Stream Analytics Job where this Function should be created. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> streamAnalyticsJobId() {
        return this.streamAnalyticsJobId;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public FunctionJavascriptUda(String name) {
        this(name, FunctionJavascriptUdaArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public FunctionJavascriptUda(String name, FunctionJavascriptUdaArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public FunctionJavascriptUda(String name, FunctionJavascriptUdaArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:streamanalytics/functionJavascriptUda:FunctionJavascriptUda", name, args == null ? FunctionJavascriptUdaArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private FunctionJavascriptUda(String name, Output<String> id, @Nullable FunctionJavascriptUdaState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:streamanalytics/functionJavascriptUda:FunctionJavascriptUda", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static FunctionJavascriptUda get(String name, Output<String> id, @Nullable FunctionJavascriptUdaState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new FunctionJavascriptUda(name, id, state, options);
    }
}
