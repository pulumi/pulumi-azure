// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.netapp.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class GetSnapshotArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetSnapshotArgs Empty = new GetSnapshotArgs();

    /**
     * The name of the NetApp Account where the NetApp Pool exists.
     * 
     */
    @Import(name="accountName", required=true)
    private Output<String> accountName;

    /**
     * @return The name of the NetApp Account where the NetApp Pool exists.
     * 
     */
    public Output<String> accountName() {
        return this.accountName;
    }

    /**
     * The name of the NetApp Snapshot.
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    /**
     * @return The name of the NetApp Snapshot.
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    /**
     * The name of the NetApp Pool where the NetApp Volume exists.
     * 
     */
    @Import(name="poolName", required=true)
    private Output<String> poolName;

    /**
     * @return The name of the NetApp Pool where the NetApp Volume exists.
     * 
     */
    public Output<String> poolName() {
        return this.poolName;
    }

    /**
     * The Name of the Resource Group where the NetApp Snapshot exists.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    /**
     * @return The Name of the Resource Group where the NetApp Snapshot exists.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * The name of the NetApp Volume where the NetApp Snapshot exists.
     * 
     */
    @Import(name="volumeName", required=true)
    private Output<String> volumeName;

    /**
     * @return The name of the NetApp Volume where the NetApp Snapshot exists.
     * 
     */
    public Output<String> volumeName() {
        return this.volumeName;
    }

    private GetSnapshotArgs() {}

    private GetSnapshotArgs(GetSnapshotArgs $) {
        this.accountName = $.accountName;
        this.name = $.name;
        this.poolName = $.poolName;
        this.resourceGroupName = $.resourceGroupName;
        this.volumeName = $.volumeName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetSnapshotArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetSnapshotArgs $;

        public Builder() {
            $ = new GetSnapshotArgs();
        }

        public Builder(GetSnapshotArgs defaults) {
            $ = new GetSnapshotArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param accountName The name of the NetApp Account where the NetApp Pool exists.
         * 
         * @return builder
         * 
         */
        public Builder accountName(Output<String> accountName) {
            $.accountName = accountName;
            return this;
        }

        /**
         * @param accountName The name of the NetApp Account where the NetApp Pool exists.
         * 
         * @return builder
         * 
         */
        public Builder accountName(String accountName) {
            return accountName(Output.of(accountName));
        }

        /**
         * @param name The name of the NetApp Snapshot.
         * 
         * @return builder
         * 
         */
        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the NetApp Snapshot.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param poolName The name of the NetApp Pool where the NetApp Volume exists.
         * 
         * @return builder
         * 
         */
        public Builder poolName(Output<String> poolName) {
            $.poolName = poolName;
            return this;
        }

        /**
         * @param poolName The name of the NetApp Pool where the NetApp Volume exists.
         * 
         * @return builder
         * 
         */
        public Builder poolName(String poolName) {
            return poolName(Output.of(poolName));
        }

        /**
         * @param resourceGroupName The Name of the Resource Group where the NetApp Snapshot exists.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName The Name of the Resource Group where the NetApp Snapshot exists.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        /**
         * @param volumeName The name of the NetApp Volume where the NetApp Snapshot exists.
         * 
         * @return builder
         * 
         */
        public Builder volumeName(Output<String> volumeName) {
            $.volumeName = volumeName;
            return this;
        }

        /**
         * @param volumeName The name of the NetApp Volume where the NetApp Snapshot exists.
         * 
         * @return builder
         * 
         */
        public Builder volumeName(String volumeName) {
            return volumeName(Output.of(volumeName));
        }

        public GetSnapshotArgs build() {
            if ($.accountName == null) {
                throw new MissingRequiredPropertyException("GetSnapshotArgs", "accountName");
            }
            if ($.name == null) {
                throw new MissingRequiredPropertyException("GetSnapshotArgs", "name");
            }
            if ($.poolName == null) {
                throw new MissingRequiredPropertyException("GetSnapshotArgs", "poolName");
            }
            if ($.resourceGroupName == null) {
                throw new MissingRequiredPropertyException("GetSnapshotArgs", "resourceGroupName");
            }
            if ($.volumeName == null) {
                throw new MissingRequiredPropertyException("GetSnapshotArgs", "volumeName");
            }
            return $;
        }
    }

}
