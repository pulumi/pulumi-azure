// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.oracle.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ExadataInfrastructureMaintenanceWindow {
    /**
     * @return Days during the week when maintenance should be performed. Valid values are: `0` - represents time slot `0:00 - 3:59 UTC - 4` - represents time slot `4:00 - 7:59 UTC - 8` - represents time slot 8:00 - 11:59 UTC - 12 - represents time slot 12:00 - 15:59 UTC - 16 - represents time slot 16:00 - 19:59 UTC - 20 - represents time slot `20:00 - 23:59 UTC`. Changing this forces a new Cloud Exadata Infrastructure to be created.
     * 
     */
    private @Nullable List<String> daysOfWeeks;
    /**
     * @return The window of hours during the day when maintenance should be performed. The window is a 4 hour slot. Changing this forces a new Cloud Exadata Infrastructure to be created.
     * 
     */
    private @Nullable List<Integer> hoursOfDays;
    /**
     * @return Lead time window allows user to set a lead time to prepare for a down time. The lead time is in weeks and valid value is between `1` to `4`. Changing this forces a new Cloud Exadata Infrastructure to be created.
     * 
     */
    private @Nullable Integer leadTimeInWeeks;
    /**
     * @return Months during the year when maintenance should be performed. Changing this forces a new Cloud Exadata Infrastructure to be created.
     * 
     */
    private @Nullable List<String> months;
    /**
     * @return Cloud Exadata Infrastructure node patching method, either `ROLLING` or `NONROLLING`. Default value is `ROLLING`. IMPORTANT: Non-rolling infrastructure patching involves system down time. See [Oracle-Managed Infrastructure Maintenance Updates](https://docs.cloud.oracle.com/iaas/Content/Database/Concepts/examaintenance.htm#Oracle) for more information. Changing this forces a new Cloud Exadata Infrastructure to be created.
     * 
     */
    private @Nullable String patchingMode;
    /**
     * @return The maintenance window scheduling preference. Changing this forces a new Cloud Exadata Infrastructure to be created.
     * 
     */
    private @Nullable String preference;
    /**
     * @return Weeks during the month when maintenance should be performed. Weeks start on the 1st, 8th, 15th, and 22nd days of the month, and have a duration of 7 days. Weeks start and end based on calendar dates, not days of the week. For example, to allow maintenance during the 2nd week of the month (from the 8th day to the 14th day of the month), use the value 2. Maintenance cannot be scheduled for the fifth week of months that contain more than 28 days. Note that this parameter works in conjunction with the daysOfWeek and hoursOfDay parameters to allow you to specify specific days of the week and hours that maintenance will be performed. Changing this forces a new Cloud Exadata Infrastructure to be created.
     * 
     */
    private @Nullable List<Integer> weeksOfMonths;

    private ExadataInfrastructureMaintenanceWindow() {}
    /**
     * @return Days during the week when maintenance should be performed. Valid values are: `0` - represents time slot `0:00 - 3:59 UTC - 4` - represents time slot `4:00 - 7:59 UTC - 8` - represents time slot 8:00 - 11:59 UTC - 12 - represents time slot 12:00 - 15:59 UTC - 16 - represents time slot 16:00 - 19:59 UTC - 20 - represents time slot `20:00 - 23:59 UTC`. Changing this forces a new Cloud Exadata Infrastructure to be created.
     * 
     */
    public List<String> daysOfWeeks() {
        return this.daysOfWeeks == null ? List.of() : this.daysOfWeeks;
    }
    /**
     * @return The window of hours during the day when maintenance should be performed. The window is a 4 hour slot. Changing this forces a new Cloud Exadata Infrastructure to be created.
     * 
     */
    public List<Integer> hoursOfDays() {
        return this.hoursOfDays == null ? List.of() : this.hoursOfDays;
    }
    /**
     * @return Lead time window allows user to set a lead time to prepare for a down time. The lead time is in weeks and valid value is between `1` to `4`. Changing this forces a new Cloud Exadata Infrastructure to be created.
     * 
     */
    public Optional<Integer> leadTimeInWeeks() {
        return Optional.ofNullable(this.leadTimeInWeeks);
    }
    /**
     * @return Months during the year when maintenance should be performed. Changing this forces a new Cloud Exadata Infrastructure to be created.
     * 
     */
    public List<String> months() {
        return this.months == null ? List.of() : this.months;
    }
    /**
     * @return Cloud Exadata Infrastructure node patching method, either `ROLLING` or `NONROLLING`. Default value is `ROLLING`. IMPORTANT: Non-rolling infrastructure patching involves system down time. See [Oracle-Managed Infrastructure Maintenance Updates](https://docs.cloud.oracle.com/iaas/Content/Database/Concepts/examaintenance.htm#Oracle) for more information. Changing this forces a new Cloud Exadata Infrastructure to be created.
     * 
     */
    public Optional<String> patchingMode() {
        return Optional.ofNullable(this.patchingMode);
    }
    /**
     * @return The maintenance window scheduling preference. Changing this forces a new Cloud Exadata Infrastructure to be created.
     * 
     */
    public Optional<String> preference() {
        return Optional.ofNullable(this.preference);
    }
    /**
     * @return Weeks during the month when maintenance should be performed. Weeks start on the 1st, 8th, 15th, and 22nd days of the month, and have a duration of 7 days. Weeks start and end based on calendar dates, not days of the week. For example, to allow maintenance during the 2nd week of the month (from the 8th day to the 14th day of the month), use the value 2. Maintenance cannot be scheduled for the fifth week of months that contain more than 28 days. Note that this parameter works in conjunction with the daysOfWeek and hoursOfDay parameters to allow you to specify specific days of the week and hours that maintenance will be performed. Changing this forces a new Cloud Exadata Infrastructure to be created.
     * 
     */
    public List<Integer> weeksOfMonths() {
        return this.weeksOfMonths == null ? List.of() : this.weeksOfMonths;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ExadataInfrastructureMaintenanceWindow defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<String> daysOfWeeks;
        private @Nullable List<Integer> hoursOfDays;
        private @Nullable Integer leadTimeInWeeks;
        private @Nullable List<String> months;
        private @Nullable String patchingMode;
        private @Nullable String preference;
        private @Nullable List<Integer> weeksOfMonths;
        public Builder() {}
        public Builder(ExadataInfrastructureMaintenanceWindow defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.daysOfWeeks = defaults.daysOfWeeks;
    	      this.hoursOfDays = defaults.hoursOfDays;
    	      this.leadTimeInWeeks = defaults.leadTimeInWeeks;
    	      this.months = defaults.months;
    	      this.patchingMode = defaults.patchingMode;
    	      this.preference = defaults.preference;
    	      this.weeksOfMonths = defaults.weeksOfMonths;
        }

        @CustomType.Setter
        public Builder daysOfWeeks(@Nullable List<String> daysOfWeeks) {

            this.daysOfWeeks = daysOfWeeks;
            return this;
        }
        public Builder daysOfWeeks(String... daysOfWeeks) {
            return daysOfWeeks(List.of(daysOfWeeks));
        }
        @CustomType.Setter
        public Builder hoursOfDays(@Nullable List<Integer> hoursOfDays) {

            this.hoursOfDays = hoursOfDays;
            return this;
        }
        public Builder hoursOfDays(Integer... hoursOfDays) {
            return hoursOfDays(List.of(hoursOfDays));
        }
        @CustomType.Setter
        public Builder leadTimeInWeeks(@Nullable Integer leadTimeInWeeks) {

            this.leadTimeInWeeks = leadTimeInWeeks;
            return this;
        }
        @CustomType.Setter
        public Builder months(@Nullable List<String> months) {

            this.months = months;
            return this;
        }
        public Builder months(String... months) {
            return months(List.of(months));
        }
        @CustomType.Setter
        public Builder patchingMode(@Nullable String patchingMode) {

            this.patchingMode = patchingMode;
            return this;
        }
        @CustomType.Setter
        public Builder preference(@Nullable String preference) {

            this.preference = preference;
            return this;
        }
        @CustomType.Setter
        public Builder weeksOfMonths(@Nullable List<Integer> weeksOfMonths) {

            this.weeksOfMonths = weeksOfMonths;
            return this;
        }
        public Builder weeksOfMonths(Integer... weeksOfMonths) {
            return weeksOfMonths(List.of(weeksOfMonths));
        }
        public ExadataInfrastructureMaintenanceWindow build() {
            final var _resultValue = new ExadataInfrastructureMaintenanceWindow();
            _resultValue.daysOfWeeks = daysOfWeeks;
            _resultValue.hoursOfDays = hoursOfDays;
            _resultValue.leadTimeInWeeks = leadTimeInWeeks;
            _resultValue.months = months;
            _resultValue.patchingMode = patchingMode;
            _resultValue.preference = preference;
            _resultValue.weeksOfMonths = weeksOfMonths;
            return _resultValue;
        }
    }
}
