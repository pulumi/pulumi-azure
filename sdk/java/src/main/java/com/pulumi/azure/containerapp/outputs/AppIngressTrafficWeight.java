// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.containerapp.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class AppIngressTrafficWeight {
    /**
     * @return The label to apply to the revision as a name prefix for routing traffic.
     * 
     */
    private @Nullable String label;
    /**
     * @return This traffic Weight applies to the latest stable Container Revision. At most only one `traffic_weight` block can have the `latest_revision` set to `true`.
     * 
     */
    private @Nullable Boolean latestRevision;
    /**
     * @return The percentage of traffic which should be sent this revision.
     * 
     * &gt; **Note:** The cumulative values for `weight` must equal 100 exactly and explicitly, no default weights are assumed.
     * 
     */
    private Integer percentage;
    /**
     * @return The suffix string to which this `traffic_weight` applies.
     * 
     * &gt; **Note:** `latest_revision` conflicts with `revision_suffix`, which means you shall either set `latest_revision` to `true` or specify `revision_suffix`. Especially for creation, there shall only be one `traffic_weight`, with the `latest_revision` set to `true`, and leave the `revision_suffix` empty.
     * 
     */
    private @Nullable String revisionSuffix;

    private AppIngressTrafficWeight() {}
    /**
     * @return The label to apply to the revision as a name prefix for routing traffic.
     * 
     */
    public Optional<String> label() {
        return Optional.ofNullable(this.label);
    }
    /**
     * @return This traffic Weight applies to the latest stable Container Revision. At most only one `traffic_weight` block can have the `latest_revision` set to `true`.
     * 
     */
    public Optional<Boolean> latestRevision() {
        return Optional.ofNullable(this.latestRevision);
    }
    /**
     * @return The percentage of traffic which should be sent this revision.
     * 
     * &gt; **Note:** The cumulative values for `weight` must equal 100 exactly and explicitly, no default weights are assumed.
     * 
     */
    public Integer percentage() {
        return this.percentage;
    }
    /**
     * @return The suffix string to which this `traffic_weight` applies.
     * 
     * &gt; **Note:** `latest_revision` conflicts with `revision_suffix`, which means you shall either set `latest_revision` to `true` or specify `revision_suffix`. Especially for creation, there shall only be one `traffic_weight`, with the `latest_revision` set to `true`, and leave the `revision_suffix` empty.
     * 
     */
    public Optional<String> revisionSuffix() {
        return Optional.ofNullable(this.revisionSuffix);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AppIngressTrafficWeight defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String label;
        private @Nullable Boolean latestRevision;
        private Integer percentage;
        private @Nullable String revisionSuffix;
        public Builder() {}
        public Builder(AppIngressTrafficWeight defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.label = defaults.label;
    	      this.latestRevision = defaults.latestRevision;
    	      this.percentage = defaults.percentage;
    	      this.revisionSuffix = defaults.revisionSuffix;
        }

        @CustomType.Setter
        public Builder label(@Nullable String label) {

            this.label = label;
            return this;
        }
        @CustomType.Setter
        public Builder latestRevision(@Nullable Boolean latestRevision) {

            this.latestRevision = latestRevision;
            return this;
        }
        @CustomType.Setter
        public Builder percentage(Integer percentage) {
            if (percentage == null) {
              throw new MissingRequiredPropertyException("AppIngressTrafficWeight", "percentage");
            }
            this.percentage = percentage;
            return this;
        }
        @CustomType.Setter
        public Builder revisionSuffix(@Nullable String revisionSuffix) {

            this.revisionSuffix = revisionSuffix;
            return this;
        }
        public AppIngressTrafficWeight build() {
            final var _resultValue = new AppIngressTrafficWeight();
            _resultValue.label = label;
            _resultValue.latestRevision = latestRevision;
            _resultValue.percentage = percentage;
            _resultValue.revisionSuffix = revisionSuffix;
            return _resultValue;
        }
    }
}
