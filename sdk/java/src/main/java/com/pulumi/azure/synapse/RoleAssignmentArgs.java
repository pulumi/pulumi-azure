// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.synapse;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class RoleAssignmentArgs extends com.pulumi.resources.ResourceArgs {

    public static final RoleAssignmentArgs Empty = new RoleAssignmentArgs();

    /**
     * The ID of the Principal (User, Group or Service Principal) to assign the Synapse Role Definition to. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="principalId", required=true)
    private Output<String> principalId;

    /**
     * @return The ID of the Principal (User, Group or Service Principal) to assign the Synapse Role Definition to. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> principalId() {
        return this.principalId;
    }

    /**
     * The Role Name of the Synapse Built-In Role. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="roleName", required=true)
    private Output<String> roleName;

    /**
     * @return The Role Name of the Synapse Built-In Role. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> roleName() {
        return this.roleName;
    }

    /**
     * The Synapse Spark Pool which the Synapse Role Assignment applies to. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="synapseSparkPoolId")
    private @Nullable Output<String> synapseSparkPoolId;

    /**
     * @return The Synapse Spark Pool which the Synapse Role Assignment applies to. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> synapseSparkPoolId() {
        return Optional.ofNullable(this.synapseSparkPoolId);
    }

    /**
     * The Synapse Workspace which the Synapse Role Assignment applies to. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="synapseWorkspaceId")
    private @Nullable Output<String> synapseWorkspaceId;

    /**
     * @return The Synapse Workspace which the Synapse Role Assignment applies to. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> synapseWorkspaceId() {
        return Optional.ofNullable(this.synapseWorkspaceId);
    }

    private RoleAssignmentArgs() {}

    private RoleAssignmentArgs(RoleAssignmentArgs $) {
        this.principalId = $.principalId;
        this.roleName = $.roleName;
        this.synapseSparkPoolId = $.synapseSparkPoolId;
        this.synapseWorkspaceId = $.synapseWorkspaceId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RoleAssignmentArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RoleAssignmentArgs $;

        public Builder() {
            $ = new RoleAssignmentArgs();
        }

        public Builder(RoleAssignmentArgs defaults) {
            $ = new RoleAssignmentArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param principalId The ID of the Principal (User, Group or Service Principal) to assign the Synapse Role Definition to. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder principalId(Output<String> principalId) {
            $.principalId = principalId;
            return this;
        }

        /**
         * @param principalId The ID of the Principal (User, Group or Service Principal) to assign the Synapse Role Definition to. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder principalId(String principalId) {
            return principalId(Output.of(principalId));
        }

        /**
         * @param roleName The Role Name of the Synapse Built-In Role. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder roleName(Output<String> roleName) {
            $.roleName = roleName;
            return this;
        }

        /**
         * @param roleName The Role Name of the Synapse Built-In Role. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder roleName(String roleName) {
            return roleName(Output.of(roleName));
        }

        /**
         * @param synapseSparkPoolId The Synapse Spark Pool which the Synapse Role Assignment applies to. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder synapseSparkPoolId(@Nullable Output<String> synapseSparkPoolId) {
            $.synapseSparkPoolId = synapseSparkPoolId;
            return this;
        }

        /**
         * @param synapseSparkPoolId The Synapse Spark Pool which the Synapse Role Assignment applies to. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder synapseSparkPoolId(String synapseSparkPoolId) {
            return synapseSparkPoolId(Output.of(synapseSparkPoolId));
        }

        /**
         * @param synapseWorkspaceId The Synapse Workspace which the Synapse Role Assignment applies to. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder synapseWorkspaceId(@Nullable Output<String> synapseWorkspaceId) {
            $.synapseWorkspaceId = synapseWorkspaceId;
            return this;
        }

        /**
         * @param synapseWorkspaceId The Synapse Workspace which the Synapse Role Assignment applies to. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder synapseWorkspaceId(String synapseWorkspaceId) {
            return synapseWorkspaceId(Output.of(synapseWorkspaceId));
        }

        public RoleAssignmentArgs build() {
            $.principalId = Objects.requireNonNull($.principalId, "expected parameter 'principalId' to be non-null");
            $.roleName = Objects.requireNonNull($.roleName, "expected parameter 'roleName' to be non-null");
            return $;
        }
    }

}
