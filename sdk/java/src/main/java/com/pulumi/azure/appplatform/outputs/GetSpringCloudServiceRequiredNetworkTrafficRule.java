// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.appplatform.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetSpringCloudServiceRequiredNetworkTrafficRule {
    /**
     * @return The direction of required traffic. Possible values are `Inbound`, `Outbound`.
     * 
     */
    private String direction;
    /**
     * @return The FQDN list of required traffic.
     * 
     */
    private List<String> fqdns;
    /**
     * @return The IP list of required traffic.
     * 
     */
    private List<String> ipAddresses;
    /**
     * @return The port of required traffic.
     * 
     */
    private Integer port;
    /**
     * @return The protocol of required traffic.
     * 
     */
    private String protocol;

    private GetSpringCloudServiceRequiredNetworkTrafficRule() {}
    /**
     * @return The direction of required traffic. Possible values are `Inbound`, `Outbound`.
     * 
     */
    public String direction() {
        return this.direction;
    }
    /**
     * @return The FQDN list of required traffic.
     * 
     */
    public List<String> fqdns() {
        return this.fqdns;
    }
    /**
     * @return The IP list of required traffic.
     * 
     */
    public List<String> ipAddresses() {
        return this.ipAddresses;
    }
    /**
     * @return The port of required traffic.
     * 
     */
    public Integer port() {
        return this.port;
    }
    /**
     * @return The protocol of required traffic.
     * 
     */
    public String protocol() {
        return this.protocol;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSpringCloudServiceRequiredNetworkTrafficRule defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String direction;
        private List<String> fqdns;
        private List<String> ipAddresses;
        private Integer port;
        private String protocol;
        public Builder() {}
        public Builder(GetSpringCloudServiceRequiredNetworkTrafficRule defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.direction = defaults.direction;
    	      this.fqdns = defaults.fqdns;
    	      this.ipAddresses = defaults.ipAddresses;
    	      this.port = defaults.port;
    	      this.protocol = defaults.protocol;
        }

        @CustomType.Setter
        public Builder direction(String direction) {
            if (direction == null) {
              throw new MissingRequiredPropertyException("GetSpringCloudServiceRequiredNetworkTrafficRule", "direction");
            }
            this.direction = direction;
            return this;
        }
        @CustomType.Setter
        public Builder fqdns(List<String> fqdns) {
            if (fqdns == null) {
              throw new MissingRequiredPropertyException("GetSpringCloudServiceRequiredNetworkTrafficRule", "fqdns");
            }
            this.fqdns = fqdns;
            return this;
        }
        public Builder fqdns(String... fqdns) {
            return fqdns(List.of(fqdns));
        }
        @CustomType.Setter
        public Builder ipAddresses(List<String> ipAddresses) {
            if (ipAddresses == null) {
              throw new MissingRequiredPropertyException("GetSpringCloudServiceRequiredNetworkTrafficRule", "ipAddresses");
            }
            this.ipAddresses = ipAddresses;
            return this;
        }
        public Builder ipAddresses(String... ipAddresses) {
            return ipAddresses(List.of(ipAddresses));
        }
        @CustomType.Setter
        public Builder port(Integer port) {
            if (port == null) {
              throw new MissingRequiredPropertyException("GetSpringCloudServiceRequiredNetworkTrafficRule", "port");
            }
            this.port = port;
            return this;
        }
        @CustomType.Setter
        public Builder protocol(String protocol) {
            if (protocol == null) {
              throw new MissingRequiredPropertyException("GetSpringCloudServiceRequiredNetworkTrafficRule", "protocol");
            }
            this.protocol = protocol;
            return this;
        }
        public GetSpringCloudServiceRequiredNetworkTrafficRule build() {
            final var _resultValue = new GetSpringCloudServiceRequiredNetworkTrafficRule();
            _resultValue.direction = direction;
            _resultValue.fqdns = fqdns;
            _resultValue.ipAddresses = ipAddresses;
            _resultValue.port = port;
            _resultValue.protocol = protocol;
            return _resultValue;
        }
    }
}
