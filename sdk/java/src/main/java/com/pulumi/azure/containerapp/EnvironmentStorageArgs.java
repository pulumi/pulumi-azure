// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.containerapp;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class EnvironmentStorageArgs extends com.pulumi.resources.ResourceArgs {

    public static final EnvironmentStorageArgs Empty = new EnvironmentStorageArgs();

    /**
     * The Storage Account Access Key.
     * 
     */
    @Import(name="accessKey", required=true)
    private Output<String> accessKey;

    /**
     * @return The Storage Account Access Key.
     * 
     */
    public Output<String> accessKey() {
        return this.accessKey;
    }

    /**
     * The access mode to connect this storage to the Container App. Possible values include `ReadOnly` and `ReadWrite`. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="accessMode", required=true)
    private Output<String> accessMode;

    /**
     * @return The access mode to connect this storage to the Container App. Possible values include `ReadOnly` and `ReadWrite`. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> accessMode() {
        return this.accessMode;
    }

    /**
     * The Azure Storage Account in which the Share to be used is located. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="accountName", required=true)
    private Output<String> accountName;

    /**
     * @return The Azure Storage Account in which the Share to be used is located. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> accountName() {
        return this.accountName;
    }

    /**
     * The ID of the Container App Environment to which this storage belongs. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="containerAppEnvironmentId", required=true)
    private Output<String> containerAppEnvironmentId;

    /**
     * @return The ID of the Container App Environment to which this storage belongs. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> containerAppEnvironmentId() {
        return this.containerAppEnvironmentId;
    }

    /**
     * The name for this Container App Environment Storage. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name for this Container App Environment Storage. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The name of the Azure Storage Share to use. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="shareName", required=true)
    private Output<String> shareName;

    /**
     * @return The name of the Azure Storage Share to use. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> shareName() {
        return this.shareName;
    }

    private EnvironmentStorageArgs() {}

    private EnvironmentStorageArgs(EnvironmentStorageArgs $) {
        this.accessKey = $.accessKey;
        this.accessMode = $.accessMode;
        this.accountName = $.accountName;
        this.containerAppEnvironmentId = $.containerAppEnvironmentId;
        this.name = $.name;
        this.shareName = $.shareName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(EnvironmentStorageArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private EnvironmentStorageArgs $;

        public Builder() {
            $ = new EnvironmentStorageArgs();
        }

        public Builder(EnvironmentStorageArgs defaults) {
            $ = new EnvironmentStorageArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param accessKey The Storage Account Access Key.
         * 
         * @return builder
         * 
         */
        public Builder accessKey(Output<String> accessKey) {
            $.accessKey = accessKey;
            return this;
        }

        /**
         * @param accessKey The Storage Account Access Key.
         * 
         * @return builder
         * 
         */
        public Builder accessKey(String accessKey) {
            return accessKey(Output.of(accessKey));
        }

        /**
         * @param accessMode The access mode to connect this storage to the Container App. Possible values include `ReadOnly` and `ReadWrite`. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder accessMode(Output<String> accessMode) {
            $.accessMode = accessMode;
            return this;
        }

        /**
         * @param accessMode The access mode to connect this storage to the Container App. Possible values include `ReadOnly` and `ReadWrite`. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder accessMode(String accessMode) {
            return accessMode(Output.of(accessMode));
        }

        /**
         * @param accountName The Azure Storage Account in which the Share to be used is located. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder accountName(Output<String> accountName) {
            $.accountName = accountName;
            return this;
        }

        /**
         * @param accountName The Azure Storage Account in which the Share to be used is located. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder accountName(String accountName) {
            return accountName(Output.of(accountName));
        }

        /**
         * @param containerAppEnvironmentId The ID of the Container App Environment to which this storage belongs. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder containerAppEnvironmentId(Output<String> containerAppEnvironmentId) {
            $.containerAppEnvironmentId = containerAppEnvironmentId;
            return this;
        }

        /**
         * @param containerAppEnvironmentId The ID of the Container App Environment to which this storage belongs. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder containerAppEnvironmentId(String containerAppEnvironmentId) {
            return containerAppEnvironmentId(Output.of(containerAppEnvironmentId));
        }

        /**
         * @param name The name for this Container App Environment Storage. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name for this Container App Environment Storage. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param shareName The name of the Azure Storage Share to use. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder shareName(Output<String> shareName) {
            $.shareName = shareName;
            return this;
        }

        /**
         * @param shareName The name of the Azure Storage Share to use. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder shareName(String shareName) {
            return shareName(Output.of(shareName));
        }

        public EnvironmentStorageArgs build() {
            if ($.accessKey == null) {
                throw new MissingRequiredPropertyException("EnvironmentStorageArgs", "accessKey");
            }
            if ($.accessMode == null) {
                throw new MissingRequiredPropertyException("EnvironmentStorageArgs", "accessMode");
            }
            if ($.accountName == null) {
                throw new MissingRequiredPropertyException("EnvironmentStorageArgs", "accountName");
            }
            if ($.containerAppEnvironmentId == null) {
                throw new MissingRequiredPropertyException("EnvironmentStorageArgs", "containerAppEnvironmentId");
            }
            if ($.shareName == null) {
                throw new MissingRequiredPropertyException("EnvironmentStorageArgs", "shareName");
            }
            return $;
        }
    }

}
