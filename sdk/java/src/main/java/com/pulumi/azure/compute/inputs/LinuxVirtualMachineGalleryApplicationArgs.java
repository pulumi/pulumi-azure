// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.compute.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class LinuxVirtualMachineGalleryApplicationArgs extends com.pulumi.resources.ResourceArgs {

    public static final LinuxVirtualMachineGalleryApplicationArgs Empty = new LinuxVirtualMachineGalleryApplicationArgs();

    /**
     * Specifies whether the version will be automatically updated for the VM when a new Gallery Application version is available in PIR/SIG. Defaults to `false`.
     * 
     */
    @Import(name="automaticUpgradeEnabled")
    private @Nullable Output<Boolean> automaticUpgradeEnabled;

    /**
     * @return Specifies whether the version will be automatically updated for the VM when a new Gallery Application version is available in PIR/SIG. Defaults to `false`.
     * 
     */
    public Optional<Output<Boolean>> automaticUpgradeEnabled() {
        return Optional.ofNullable(this.automaticUpgradeEnabled);
    }

    /**
     * Specifies the URI to an Azure Blob that will replace the default configuration for the package if provided.
     * 
     */
    @Import(name="configurationBlobUri")
    private @Nullable Output<String> configurationBlobUri;

    /**
     * @return Specifies the URI to an Azure Blob that will replace the default configuration for the package if provided.
     * 
     */
    public Optional<Output<String>> configurationBlobUri() {
        return Optional.ofNullable(this.configurationBlobUri);
    }

    /**
     * Specifies the order in which the packages have to be installed. Possible values are between `0` and `2,147,483,647`.
     * 
     */
    @Import(name="order")
    private @Nullable Output<Integer> order;

    /**
     * @return Specifies the order in which the packages have to be installed. Possible values are between `0` and `2,147,483,647`.
     * 
     */
    public Optional<Output<Integer>> order() {
        return Optional.ofNullable(this.order);
    }

    /**
     * Specifies a passthrough value for more generic context. This field can be any valid `string` value.
     * 
     */
    @Import(name="tag")
    private @Nullable Output<String> tag;

    /**
     * @return Specifies a passthrough value for more generic context. This field can be any valid `string` value.
     * 
     */
    public Optional<Output<String>> tag() {
        return Optional.ofNullable(this.tag);
    }

    /**
     * Specifies whether any failure for any operation in the VmApplication will fail the deployment of the VM. Defaults to `false`.
     * 
     */
    @Import(name="treatFailureAsDeploymentFailureEnabled")
    private @Nullable Output<Boolean> treatFailureAsDeploymentFailureEnabled;

    /**
     * @return Specifies whether any failure for any operation in the VmApplication will fail the deployment of the VM. Defaults to `false`.
     * 
     */
    public Optional<Output<Boolean>> treatFailureAsDeploymentFailureEnabled() {
        return Optional.ofNullable(this.treatFailureAsDeploymentFailureEnabled);
    }

    /**
     * Specifies the Gallery Application Version resource ID.
     * 
     */
    @Import(name="versionId", required=true)
    private Output<String> versionId;

    /**
     * @return Specifies the Gallery Application Version resource ID.
     * 
     */
    public Output<String> versionId() {
        return this.versionId;
    }

    private LinuxVirtualMachineGalleryApplicationArgs() {}

    private LinuxVirtualMachineGalleryApplicationArgs(LinuxVirtualMachineGalleryApplicationArgs $) {
        this.automaticUpgradeEnabled = $.automaticUpgradeEnabled;
        this.configurationBlobUri = $.configurationBlobUri;
        this.order = $.order;
        this.tag = $.tag;
        this.treatFailureAsDeploymentFailureEnabled = $.treatFailureAsDeploymentFailureEnabled;
        this.versionId = $.versionId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(LinuxVirtualMachineGalleryApplicationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private LinuxVirtualMachineGalleryApplicationArgs $;

        public Builder() {
            $ = new LinuxVirtualMachineGalleryApplicationArgs();
        }

        public Builder(LinuxVirtualMachineGalleryApplicationArgs defaults) {
            $ = new LinuxVirtualMachineGalleryApplicationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param automaticUpgradeEnabled Specifies whether the version will be automatically updated for the VM when a new Gallery Application version is available in PIR/SIG. Defaults to `false`.
         * 
         * @return builder
         * 
         */
        public Builder automaticUpgradeEnabled(@Nullable Output<Boolean> automaticUpgradeEnabled) {
            $.automaticUpgradeEnabled = automaticUpgradeEnabled;
            return this;
        }

        /**
         * @param automaticUpgradeEnabled Specifies whether the version will be automatically updated for the VM when a new Gallery Application version is available in PIR/SIG. Defaults to `false`.
         * 
         * @return builder
         * 
         */
        public Builder automaticUpgradeEnabled(Boolean automaticUpgradeEnabled) {
            return automaticUpgradeEnabled(Output.of(automaticUpgradeEnabled));
        }

        /**
         * @param configurationBlobUri Specifies the URI to an Azure Blob that will replace the default configuration for the package if provided.
         * 
         * @return builder
         * 
         */
        public Builder configurationBlobUri(@Nullable Output<String> configurationBlobUri) {
            $.configurationBlobUri = configurationBlobUri;
            return this;
        }

        /**
         * @param configurationBlobUri Specifies the URI to an Azure Blob that will replace the default configuration for the package if provided.
         * 
         * @return builder
         * 
         */
        public Builder configurationBlobUri(String configurationBlobUri) {
            return configurationBlobUri(Output.of(configurationBlobUri));
        }

        /**
         * @param order Specifies the order in which the packages have to be installed. Possible values are between `0` and `2,147,483,647`.
         * 
         * @return builder
         * 
         */
        public Builder order(@Nullable Output<Integer> order) {
            $.order = order;
            return this;
        }

        /**
         * @param order Specifies the order in which the packages have to be installed. Possible values are between `0` and `2,147,483,647`.
         * 
         * @return builder
         * 
         */
        public Builder order(Integer order) {
            return order(Output.of(order));
        }

        /**
         * @param tag Specifies a passthrough value for more generic context. This field can be any valid `string` value.
         * 
         * @return builder
         * 
         */
        public Builder tag(@Nullable Output<String> tag) {
            $.tag = tag;
            return this;
        }

        /**
         * @param tag Specifies a passthrough value for more generic context. This field can be any valid `string` value.
         * 
         * @return builder
         * 
         */
        public Builder tag(String tag) {
            return tag(Output.of(tag));
        }

        /**
         * @param treatFailureAsDeploymentFailureEnabled Specifies whether any failure for any operation in the VmApplication will fail the deployment of the VM. Defaults to `false`.
         * 
         * @return builder
         * 
         */
        public Builder treatFailureAsDeploymentFailureEnabled(@Nullable Output<Boolean> treatFailureAsDeploymentFailureEnabled) {
            $.treatFailureAsDeploymentFailureEnabled = treatFailureAsDeploymentFailureEnabled;
            return this;
        }

        /**
         * @param treatFailureAsDeploymentFailureEnabled Specifies whether any failure for any operation in the VmApplication will fail the deployment of the VM. Defaults to `false`.
         * 
         * @return builder
         * 
         */
        public Builder treatFailureAsDeploymentFailureEnabled(Boolean treatFailureAsDeploymentFailureEnabled) {
            return treatFailureAsDeploymentFailureEnabled(Output.of(treatFailureAsDeploymentFailureEnabled));
        }

        /**
         * @param versionId Specifies the Gallery Application Version resource ID.
         * 
         * @return builder
         * 
         */
        public Builder versionId(Output<String> versionId) {
            $.versionId = versionId;
            return this;
        }

        /**
         * @param versionId Specifies the Gallery Application Version resource ID.
         * 
         * @return builder
         * 
         */
        public Builder versionId(String versionId) {
            return versionId(Output.of(versionId));
        }

        public LinuxVirtualMachineGalleryApplicationArgs build() {
            if ($.versionId == null) {
                throw new MissingRequiredPropertyException("LinuxVirtualMachineGalleryApplicationArgs", "versionId");
            }
            return $;
        }
    }

}
