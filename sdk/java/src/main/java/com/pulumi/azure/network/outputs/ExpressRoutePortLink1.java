// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.network.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ExpressRoutePortLink1 {
    /**
     * @return Whether enable administration state on the Express Route Port Link? Defaults to `false`.
     * 
     */
    private final @Nullable Boolean adminEnabled;
    /**
     * @return The connector type of the Express Route Port Link.
     * 
     */
    private final @Nullable String connectorType;
    /**
     * @return The ID of this Express Route Port Link.
     * 
     */
    private final @Nullable String id;
    /**
     * @return The interface name of the Azure router associated with the Express Route Port Link.
     * 
     */
    private final @Nullable String interfaceName;
    /**
     * @return The ID of the Key Vault Secret that contains the Mac security CAK key for this Express Route Port Link.
     * 
     */
    private final @Nullable String macsecCakKeyvaultSecretId;
    /**
     * @return The MACSec cipher used for this Express Route Port Link. Possible values are `GcmAes128` and `GcmAes256`. Defaults to `GcmAes128`.
     * 
     */
    private final @Nullable String macsecCipher;
    /**
     * @return The ID of the Key Vault Secret that contains the MACSec CKN key for this Express Route Port Link.
     * 
     */
    private final @Nullable String macsecCknKeyvaultSecretId;
    /**
     * @return The ID that maps from the Express Route Port Link to the patch panel port.
     * 
     */
    private final @Nullable String patchPanelId;
    /**
     * @return The ID that maps from the patch panel port to the rack.
     * 
     */
    private final @Nullable String rackId;
    /**
     * @return The name of the Azure router associated with the Express Route Port Link.
     * 
     */
    private final @Nullable String routerName;

    @CustomType.Constructor
    private ExpressRoutePortLink1(
        @CustomType.Parameter("adminEnabled") @Nullable Boolean adminEnabled,
        @CustomType.Parameter("connectorType") @Nullable String connectorType,
        @CustomType.Parameter("id") @Nullable String id,
        @CustomType.Parameter("interfaceName") @Nullable String interfaceName,
        @CustomType.Parameter("macsecCakKeyvaultSecretId") @Nullable String macsecCakKeyvaultSecretId,
        @CustomType.Parameter("macsecCipher") @Nullable String macsecCipher,
        @CustomType.Parameter("macsecCknKeyvaultSecretId") @Nullable String macsecCknKeyvaultSecretId,
        @CustomType.Parameter("patchPanelId") @Nullable String patchPanelId,
        @CustomType.Parameter("rackId") @Nullable String rackId,
        @CustomType.Parameter("routerName") @Nullable String routerName) {
        this.adminEnabled = adminEnabled;
        this.connectorType = connectorType;
        this.id = id;
        this.interfaceName = interfaceName;
        this.macsecCakKeyvaultSecretId = macsecCakKeyvaultSecretId;
        this.macsecCipher = macsecCipher;
        this.macsecCknKeyvaultSecretId = macsecCknKeyvaultSecretId;
        this.patchPanelId = patchPanelId;
        this.rackId = rackId;
        this.routerName = routerName;
    }

    /**
     * @return Whether enable administration state on the Express Route Port Link? Defaults to `false`.
     * 
     */
    public Optional<Boolean> adminEnabled() {
        return Optional.ofNullable(this.adminEnabled);
    }
    /**
     * @return The connector type of the Express Route Port Link.
     * 
     */
    public Optional<String> connectorType() {
        return Optional.ofNullable(this.connectorType);
    }
    /**
     * @return The ID of this Express Route Port Link.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return The interface name of the Azure router associated with the Express Route Port Link.
     * 
     */
    public Optional<String> interfaceName() {
        return Optional.ofNullable(this.interfaceName);
    }
    /**
     * @return The ID of the Key Vault Secret that contains the Mac security CAK key for this Express Route Port Link.
     * 
     */
    public Optional<String> macsecCakKeyvaultSecretId() {
        return Optional.ofNullable(this.macsecCakKeyvaultSecretId);
    }
    /**
     * @return The MACSec cipher used for this Express Route Port Link. Possible values are `GcmAes128` and `GcmAes256`. Defaults to `GcmAes128`.
     * 
     */
    public Optional<String> macsecCipher() {
        return Optional.ofNullable(this.macsecCipher);
    }
    /**
     * @return The ID of the Key Vault Secret that contains the MACSec CKN key for this Express Route Port Link.
     * 
     */
    public Optional<String> macsecCknKeyvaultSecretId() {
        return Optional.ofNullable(this.macsecCknKeyvaultSecretId);
    }
    /**
     * @return The ID that maps from the Express Route Port Link to the patch panel port.
     * 
     */
    public Optional<String> patchPanelId() {
        return Optional.ofNullable(this.patchPanelId);
    }
    /**
     * @return The ID that maps from the patch panel port to the rack.
     * 
     */
    public Optional<String> rackId() {
        return Optional.ofNullable(this.rackId);
    }
    /**
     * @return The name of the Azure router associated with the Express Route Port Link.
     * 
     */
    public Optional<String> routerName() {
        return Optional.ofNullable(this.routerName);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ExpressRoutePortLink1 defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Boolean adminEnabled;
        private @Nullable String connectorType;
        private @Nullable String id;
        private @Nullable String interfaceName;
        private @Nullable String macsecCakKeyvaultSecretId;
        private @Nullable String macsecCipher;
        private @Nullable String macsecCknKeyvaultSecretId;
        private @Nullable String patchPanelId;
        private @Nullable String rackId;
        private @Nullable String routerName;

        public Builder() {
    	      // Empty
        }

        public Builder(ExpressRoutePortLink1 defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.adminEnabled = defaults.adminEnabled;
    	      this.connectorType = defaults.connectorType;
    	      this.id = defaults.id;
    	      this.interfaceName = defaults.interfaceName;
    	      this.macsecCakKeyvaultSecretId = defaults.macsecCakKeyvaultSecretId;
    	      this.macsecCipher = defaults.macsecCipher;
    	      this.macsecCknKeyvaultSecretId = defaults.macsecCknKeyvaultSecretId;
    	      this.patchPanelId = defaults.patchPanelId;
    	      this.rackId = defaults.rackId;
    	      this.routerName = defaults.routerName;
        }

        public Builder adminEnabled(@Nullable Boolean adminEnabled) {
            this.adminEnabled = adminEnabled;
            return this;
        }
        public Builder connectorType(@Nullable String connectorType) {
            this.connectorType = connectorType;
            return this;
        }
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        public Builder interfaceName(@Nullable String interfaceName) {
            this.interfaceName = interfaceName;
            return this;
        }
        public Builder macsecCakKeyvaultSecretId(@Nullable String macsecCakKeyvaultSecretId) {
            this.macsecCakKeyvaultSecretId = macsecCakKeyvaultSecretId;
            return this;
        }
        public Builder macsecCipher(@Nullable String macsecCipher) {
            this.macsecCipher = macsecCipher;
            return this;
        }
        public Builder macsecCknKeyvaultSecretId(@Nullable String macsecCknKeyvaultSecretId) {
            this.macsecCknKeyvaultSecretId = macsecCknKeyvaultSecretId;
            return this;
        }
        public Builder patchPanelId(@Nullable String patchPanelId) {
            this.patchPanelId = patchPanelId;
            return this;
        }
        public Builder rackId(@Nullable String rackId) {
            this.rackId = rackId;
            return this;
        }
        public Builder routerName(@Nullable String routerName) {
            this.routerName = routerName;
            return this;
        }        public ExpressRoutePortLink1 build() {
            return new ExpressRoutePortLink1(adminEnabled, connectorType, id, interfaceName, macsecCakKeyvaultSecretId, macsecCipher, macsecCknKeyvaultSecretId, patchPanelId, rackId, routerName);
        }
    }
}
