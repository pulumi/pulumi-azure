// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.appconfiguration;

import com.pulumi.azure.appconfiguration.inputs.ConfigurationStoreEncryptionArgs;
import com.pulumi.azure.appconfiguration.inputs.ConfigurationStoreIdentityArgs;
import com.pulumi.azure.appconfiguration.inputs.ConfigurationStoreReplicaArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ConfigurationStoreArgs extends com.pulumi.resources.ResourceArgs {

    public static final ConfigurationStoreArgs Empty = new ConfigurationStoreArgs();

    /**
     * An `encryption` block as defined below.
     * 
     */
    @Import(name="encryption")
    private @Nullable Output<ConfigurationStoreEncryptionArgs> encryption;

    /**
     * @return An `encryption` block as defined below.
     * 
     */
    public Optional<Output<ConfigurationStoreEncryptionArgs>> encryption() {
        return Optional.ofNullable(this.encryption);
    }

    /**
     * An `identity` block as defined below.
     * 
     * &gt; **NOTE:** Azure does not allow a downgrade from `standard` to `free`.
     * 
     */
    @Import(name="identity")
    private @Nullable Output<ConfigurationStoreIdentityArgs> identity;

    /**
     * @return An `identity` block as defined below.
     * 
     * &gt; **NOTE:** Azure does not allow a downgrade from `standard` to `free`.
     * 
     */
    public Optional<Output<ConfigurationStoreIdentityArgs>> identity() {
        return Optional.ofNullable(this.identity);
    }

    /**
     * Whether local authentication methods is enabled. Defaults to `true`.
     * 
     */
    @Import(name="localAuthEnabled")
    private @Nullable Output<Boolean> localAuthEnabled;

    /**
     * @return Whether local authentication methods is enabled. Defaults to `true`.
     * 
     */
    public Optional<Output<Boolean>> localAuthEnabled() {
        return Optional.ofNullable(this.localAuthEnabled);
    }

    /**
     * Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="location")
    private @Nullable Output<String> location;

    /**
     * @return Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * Specifies the name of the App Configuration. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Specifies the name of the App Configuration. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The Public Network Access setting of the App Configuration. Possible values are `Enabled` and `Disabled`.
     * 
     * &gt; **NOTE:** If `public_network_access` is not specified, the App Configuration will be created as  `Automatic`. However, once a different value is defined, can not be set again as automatic.
     * 
     */
    @Import(name="publicNetworkAccess")
    private @Nullable Output<String> publicNetworkAccess;

    /**
     * @return The Public Network Access setting of the App Configuration. Possible values are `Enabled` and `Disabled`.
     * 
     * &gt; **NOTE:** If `public_network_access` is not specified, the App Configuration will be created as  `Automatic`. However, once a different value is defined, can not be set again as automatic.
     * 
     */
    public Optional<Output<String>> publicNetworkAccess() {
        return Optional.ofNullable(this.publicNetworkAccess);
    }

    /**
     * Whether Purge Protection is enabled. This field only works for `standard` sku. Defaults to `false`.
     * 
     * !&gt; **Note:** Once Purge Protection has been enabled it&#39;s not possible to disable it. Deleting the App Configuration with Purge Protection enabled will schedule the App Configuration to be deleted (which will happen by Azure in the configured number of days).
     * 
     */
    @Import(name="purgeProtectionEnabled")
    private @Nullable Output<Boolean> purgeProtectionEnabled;

    /**
     * @return Whether Purge Protection is enabled. This field only works for `standard` sku. Defaults to `false`.
     * 
     * !&gt; **Note:** Once Purge Protection has been enabled it&#39;s not possible to disable it. Deleting the App Configuration with Purge Protection enabled will schedule the App Configuration to be deleted (which will happen by Azure in the configured number of days).
     * 
     */
    public Optional<Output<Boolean>> purgeProtectionEnabled() {
        return Optional.ofNullable(this.purgeProtectionEnabled);
    }

    /**
     * One or more `replica` blocks as defined below.
     * 
     */
    @Import(name="replicas")
    private @Nullable Output<List<ConfigurationStoreReplicaArgs>> replicas;

    /**
     * @return One or more `replica` blocks as defined below.
     * 
     */
    public Optional<Output<List<ConfigurationStoreReplicaArgs>>> replicas() {
        return Optional.ofNullable(this.replicas);
    }

    /**
     * The name of the resource group in which to create the App Configuration. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    /**
     * @return The name of the resource group in which to create the App Configuration. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * The SKU name of the App Configuration. Possible values are `free` and `standard`. Defaults to `free`.
     * 
     */
    @Import(name="sku")
    private @Nullable Output<String> sku;

    /**
     * @return The SKU name of the App Configuration. Possible values are `free` and `standard`. Defaults to `free`.
     * 
     */
    public Optional<Output<String>> sku() {
        return Optional.ofNullable(this.sku);
    }

    /**
     * The number of days that items should be retained for once soft-deleted. This field only works for `standard` sku. This value can be between `1` and `7` days. Defaults to `7`. Changing this forces a new resource to be created.
     * 
     * &gt; **Note:** If Purge Protection is enabled, this field can only be configured one time and cannot be updated.
     * 
     */
    @Import(name="softDeleteRetentionDays")
    private @Nullable Output<Integer> softDeleteRetentionDays;

    /**
     * @return The number of days that items should be retained for once soft-deleted. This field only works for `standard` sku. This value can be between `1` and `7` days. Defaults to `7`. Changing this forces a new resource to be created.
     * 
     * &gt; **Note:** If Purge Protection is enabled, this field can only be configured one time and cannot be updated.
     * 
     */
    public Optional<Output<Integer>> softDeleteRetentionDays() {
        return Optional.ofNullable(this.softDeleteRetentionDays);
    }

    /**
     * A mapping of tags to assign to the resource.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return A mapping of tags to assign to the resource.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private ConfigurationStoreArgs() {}

    private ConfigurationStoreArgs(ConfigurationStoreArgs $) {
        this.encryption = $.encryption;
        this.identity = $.identity;
        this.localAuthEnabled = $.localAuthEnabled;
        this.location = $.location;
        this.name = $.name;
        this.publicNetworkAccess = $.publicNetworkAccess;
        this.purgeProtectionEnabled = $.purgeProtectionEnabled;
        this.replicas = $.replicas;
        this.resourceGroupName = $.resourceGroupName;
        this.sku = $.sku;
        this.softDeleteRetentionDays = $.softDeleteRetentionDays;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ConfigurationStoreArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ConfigurationStoreArgs $;

        public Builder() {
            $ = new ConfigurationStoreArgs();
        }

        public Builder(ConfigurationStoreArgs defaults) {
            $ = new ConfigurationStoreArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param encryption An `encryption` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder encryption(@Nullable Output<ConfigurationStoreEncryptionArgs> encryption) {
            $.encryption = encryption;
            return this;
        }

        /**
         * @param encryption An `encryption` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder encryption(ConfigurationStoreEncryptionArgs encryption) {
            return encryption(Output.of(encryption));
        }

        /**
         * @param identity An `identity` block as defined below.
         * 
         * &gt; **NOTE:** Azure does not allow a downgrade from `standard` to `free`.
         * 
         * @return builder
         * 
         */
        public Builder identity(@Nullable Output<ConfigurationStoreIdentityArgs> identity) {
            $.identity = identity;
            return this;
        }

        /**
         * @param identity An `identity` block as defined below.
         * 
         * &gt; **NOTE:** Azure does not allow a downgrade from `standard` to `free`.
         * 
         * @return builder
         * 
         */
        public Builder identity(ConfigurationStoreIdentityArgs identity) {
            return identity(Output.of(identity));
        }

        /**
         * @param localAuthEnabled Whether local authentication methods is enabled. Defaults to `true`.
         * 
         * @return builder
         * 
         */
        public Builder localAuthEnabled(@Nullable Output<Boolean> localAuthEnabled) {
            $.localAuthEnabled = localAuthEnabled;
            return this;
        }

        /**
         * @param localAuthEnabled Whether local authentication methods is enabled. Defaults to `true`.
         * 
         * @return builder
         * 
         */
        public Builder localAuthEnabled(Boolean localAuthEnabled) {
            return localAuthEnabled(Output.of(localAuthEnabled));
        }

        /**
         * @param location Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param name Specifies the name of the App Configuration. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Specifies the name of the App Configuration. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param publicNetworkAccess The Public Network Access setting of the App Configuration. Possible values are `Enabled` and `Disabled`.
         * 
         * &gt; **NOTE:** If `public_network_access` is not specified, the App Configuration will be created as  `Automatic`. However, once a different value is defined, can not be set again as automatic.
         * 
         * @return builder
         * 
         */
        public Builder publicNetworkAccess(@Nullable Output<String> publicNetworkAccess) {
            $.publicNetworkAccess = publicNetworkAccess;
            return this;
        }

        /**
         * @param publicNetworkAccess The Public Network Access setting of the App Configuration. Possible values are `Enabled` and `Disabled`.
         * 
         * &gt; **NOTE:** If `public_network_access` is not specified, the App Configuration will be created as  `Automatic`. However, once a different value is defined, can not be set again as automatic.
         * 
         * @return builder
         * 
         */
        public Builder publicNetworkAccess(String publicNetworkAccess) {
            return publicNetworkAccess(Output.of(publicNetworkAccess));
        }

        /**
         * @param purgeProtectionEnabled Whether Purge Protection is enabled. This field only works for `standard` sku. Defaults to `false`.
         * 
         * !&gt; **Note:** Once Purge Protection has been enabled it&#39;s not possible to disable it. Deleting the App Configuration with Purge Protection enabled will schedule the App Configuration to be deleted (which will happen by Azure in the configured number of days).
         * 
         * @return builder
         * 
         */
        public Builder purgeProtectionEnabled(@Nullable Output<Boolean> purgeProtectionEnabled) {
            $.purgeProtectionEnabled = purgeProtectionEnabled;
            return this;
        }

        /**
         * @param purgeProtectionEnabled Whether Purge Protection is enabled. This field only works for `standard` sku. Defaults to `false`.
         * 
         * !&gt; **Note:** Once Purge Protection has been enabled it&#39;s not possible to disable it. Deleting the App Configuration with Purge Protection enabled will schedule the App Configuration to be deleted (which will happen by Azure in the configured number of days).
         * 
         * @return builder
         * 
         */
        public Builder purgeProtectionEnabled(Boolean purgeProtectionEnabled) {
            return purgeProtectionEnabled(Output.of(purgeProtectionEnabled));
        }

        /**
         * @param replicas One or more `replica` blocks as defined below.
         * 
         * @return builder
         * 
         */
        public Builder replicas(@Nullable Output<List<ConfigurationStoreReplicaArgs>> replicas) {
            $.replicas = replicas;
            return this;
        }

        /**
         * @param replicas One or more `replica` blocks as defined below.
         * 
         * @return builder
         * 
         */
        public Builder replicas(List<ConfigurationStoreReplicaArgs> replicas) {
            return replicas(Output.of(replicas));
        }

        /**
         * @param replicas One or more `replica` blocks as defined below.
         * 
         * @return builder
         * 
         */
        public Builder replicas(ConfigurationStoreReplicaArgs... replicas) {
            return replicas(List.of(replicas));
        }

        /**
         * @param resourceGroupName The name of the resource group in which to create the App Configuration. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName The name of the resource group in which to create the App Configuration. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        /**
         * @param sku The SKU name of the App Configuration. Possible values are `free` and `standard`. Defaults to `free`.
         * 
         * @return builder
         * 
         */
        public Builder sku(@Nullable Output<String> sku) {
            $.sku = sku;
            return this;
        }

        /**
         * @param sku The SKU name of the App Configuration. Possible values are `free` and `standard`. Defaults to `free`.
         * 
         * @return builder
         * 
         */
        public Builder sku(String sku) {
            return sku(Output.of(sku));
        }

        /**
         * @param softDeleteRetentionDays The number of days that items should be retained for once soft-deleted. This field only works for `standard` sku. This value can be between `1` and `7` days. Defaults to `7`. Changing this forces a new resource to be created.
         * 
         * &gt; **Note:** If Purge Protection is enabled, this field can only be configured one time and cannot be updated.
         * 
         * @return builder
         * 
         */
        public Builder softDeleteRetentionDays(@Nullable Output<Integer> softDeleteRetentionDays) {
            $.softDeleteRetentionDays = softDeleteRetentionDays;
            return this;
        }

        /**
         * @param softDeleteRetentionDays The number of days that items should be retained for once soft-deleted. This field only works for `standard` sku. This value can be between `1` and `7` days. Defaults to `7`. Changing this forces a new resource to be created.
         * 
         * &gt; **Note:** If Purge Protection is enabled, this field can only be configured one time and cannot be updated.
         * 
         * @return builder
         * 
         */
        public Builder softDeleteRetentionDays(Integer softDeleteRetentionDays) {
            return softDeleteRetentionDays(Output.of(softDeleteRetentionDays));
        }

        /**
         * @param tags A mapping of tags to assign to the resource.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags A mapping of tags to assign to the resource.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public ConfigurationStoreArgs build() {
            if ($.resourceGroupName == null) {
                throw new MissingRequiredPropertyException("ConfigurationStoreArgs", "resourceGroupName");
            }
            return $;
        }
    }

}
