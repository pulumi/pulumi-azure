// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.loadtest;

import com.pulumi.azure.Utilities;
import com.pulumi.azure.loadtest.LoadTestArgs;
import com.pulumi.azure.loadtest.inputs.LoadTestState;
import com.pulumi.azure.loadtest.outputs.LoadTestIdentity;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * &lt;!-- Note: This documentation is generated. Any manual changes will be overwritten --&gt;
 * 
 * Manages a Load Test Service.
 * 
 * ## Example Usage
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.azure.loadtest.LoadTest;
 * import com.pulumi.azure.loadtest.LoadTestArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new LoadTest(&#34;example&#34;, LoadTestArgs.builder()        
 *             .location(azurerm_resource_group.example().location())
 *             .resourceGroupName(azurerm_resource_group.example().name())
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * An existing Load Test can be imported into Terraform using the `resource id`, e.g.
 * 
 * ```sh
 *  $ pulumi import azure:loadtest/loadTest:LoadTest example /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.LoadTestService/loadTests/{loadTestName}
 * ```
 * 
 *  * Where `{subscriptionId}` is the ID of the Azure Subscription where the Load Test exists. For example `12345678-1234-9876-4563-123456789012`. * Where `{resourceGroupName}` is the name of Resource Group where this Load Test exists. For example `example-resource-group`. * Where `{loadTestName}` is the name of the Load Test. For example `loadTestValue`.
 * 
 */
@ResourceType(type="azure:loadtest/loadTest:LoadTest")
public class LoadTest extends com.pulumi.resources.CustomResource {
    /**
     * Resource data plane URI.
     * 
     */
    @Export(name="dataPlaneUri", type=String.class, parameters={})
    private Output<String> dataPlaneUri;

    /**
     * @return Resource data plane URI.
     * 
     */
    public Output<String> dataPlaneUri() {
        return this.dataPlaneUri;
    }
    /**
     * Description of the resource. Changing this forces a new Load Test to be created.
     * 
     */
    @Export(name="description", type=String.class, parameters={})
    private Output</* @Nullable */ String> description;

    /**
     * @return Description of the resource. Changing this forces a new Load Test to be created.
     * 
     */
    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    /**
     * Specifies the Managed Identity which should be assigned to this Load Test.
     * 
     */
    @Export(name="identity", type=LoadTestIdentity.class, parameters={})
    private Output</* @Nullable */ LoadTestIdentity> identity;

    /**
     * @return Specifies the Managed Identity which should be assigned to this Load Test.
     * 
     */
    public Output<Optional<LoadTestIdentity>> identity() {
        return Codegen.optional(this.identity);
    }
    /**
     * The Azure Region where the Load Test should exist. Changing this forces a new Load Test to be created.
     * 
     */
    @Export(name="location", type=String.class, parameters={})
    private Output<String> location;

    /**
     * @return The Azure Region where the Load Test should exist. Changing this forces a new Load Test to be created.
     * 
     */
    public Output<String> location() {
        return this.location;
    }
    /**
     * Specifies the name of this Load Test. Changing this forces a new Load Test to be created.
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return Specifies the name of this Load Test. Changing this forces a new Load Test to be created.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Specifies the name of the Resource Group within which this Load Test should exist. Changing this forces a new Load Test to be created.
     * 
     */
    @Export(name="resourceGroupName", type=String.class, parameters={})
    private Output<String> resourceGroupName;

    /**
     * @return Specifies the name of the Resource Group within which this Load Test should exist. Changing this forces a new Load Test to be created.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }
    /**
     * A mapping of tags which should be assigned to the Load Test.
     * 
     */
    @Export(name="tags", type=Map.class, parameters={String.class, String.class})
    private Output</* @Nullable */ Map<String,String>> tags;

    /**
     * @return A mapping of tags which should be assigned to the Load Test.
     * 
     */
    public Output<Optional<Map<String,String>>> tags() {
        return Codegen.optional(this.tags);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public LoadTest(String name) {
        this(name, LoadTestArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public LoadTest(String name, LoadTestArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public LoadTest(String name, LoadTestArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:loadtest/loadTest:LoadTest", name, args == null ? LoadTestArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private LoadTest(String name, Output<String> id, @Nullable LoadTestState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:loadtest/loadTest:LoadTest", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static LoadTest get(String name, Output<String> id, @Nullable LoadTestState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new LoadTest(name, id, state, options);
    }
}
