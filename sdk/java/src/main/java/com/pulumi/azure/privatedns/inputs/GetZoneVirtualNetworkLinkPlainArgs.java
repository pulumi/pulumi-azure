// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.privatedns.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class GetZoneVirtualNetworkLinkPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetZoneVirtualNetworkLinkPlainArgs Empty = new GetZoneVirtualNetworkLinkPlainArgs();

    /**
     * The name of the Private DNS Zone Virtual Network Link.
     * 
     */
    @Import(name="name", required=true)
    private String name;

    /**
     * @return The name of the Private DNS Zone Virtual Network Link.
     * 
     */
    public String name() {
        return this.name;
    }

    /**
     * The name of the Private DNS zone (without a terminating dot).
     * 
     */
    @Import(name="privateDnsZoneName", required=true)
    private String privateDnsZoneName;

    /**
     * @return The name of the Private DNS zone (without a terminating dot).
     * 
     */
    public String privateDnsZoneName() {
        return this.privateDnsZoneName;
    }

    /**
     * Specifies the resource group where the Private DNS Zone exists.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private String resourceGroupName;

    /**
     * @return Specifies the resource group where the Private DNS Zone exists.
     * 
     */
    public String resourceGroupName() {
        return this.resourceGroupName;
    }

    private GetZoneVirtualNetworkLinkPlainArgs() {}

    private GetZoneVirtualNetworkLinkPlainArgs(GetZoneVirtualNetworkLinkPlainArgs $) {
        this.name = $.name;
        this.privateDnsZoneName = $.privateDnsZoneName;
        this.resourceGroupName = $.resourceGroupName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetZoneVirtualNetworkLinkPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetZoneVirtualNetworkLinkPlainArgs $;

        public Builder() {
            $ = new GetZoneVirtualNetworkLinkPlainArgs();
        }

        public Builder(GetZoneVirtualNetworkLinkPlainArgs defaults) {
            $ = new GetZoneVirtualNetworkLinkPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param name The name of the Private DNS Zone Virtual Network Link.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            $.name = name;
            return this;
        }

        /**
         * @param privateDnsZoneName The name of the Private DNS zone (without a terminating dot).
         * 
         * @return builder
         * 
         */
        public Builder privateDnsZoneName(String privateDnsZoneName) {
            $.privateDnsZoneName = privateDnsZoneName;
            return this;
        }

        /**
         * @param resourceGroupName Specifies the resource group where the Private DNS Zone exists.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        public GetZoneVirtualNetworkLinkPlainArgs build() {
            if ($.name == null) {
                throw new MissingRequiredPropertyException("GetZoneVirtualNetworkLinkPlainArgs", "name");
            }
            if ($.privateDnsZoneName == null) {
                throw new MissingRequiredPropertyException("GetZoneVirtualNetworkLinkPlainArgs", "privateDnsZoneName");
            }
            if ($.resourceGroupName == null) {
                throw new MissingRequiredPropertyException("GetZoneVirtualNetworkLinkPlainArgs", "resourceGroupName");
            }
            return $;
        }
    }

}
