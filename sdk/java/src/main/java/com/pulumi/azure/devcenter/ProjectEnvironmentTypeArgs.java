// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.devcenter;

import com.pulumi.azure.devcenter.inputs.ProjectEnvironmentTypeIdentityArgs;
import com.pulumi.azure.devcenter.inputs.ProjectEnvironmentTypeUserRoleAssignmentArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ProjectEnvironmentTypeArgs extends com.pulumi.resources.ResourceArgs {

    public static final ProjectEnvironmentTypeArgs Empty = new ProjectEnvironmentTypeArgs();

    /**
     * A list of roles to assign to the environment creator.
     * 
     */
    @Import(name="creatorRoleAssignmentRoles")
    private @Nullable Output<List<String>> creatorRoleAssignmentRoles;

    /**
     * @return A list of roles to assign to the environment creator.
     * 
     */
    public Optional<Output<List<String>>> creatorRoleAssignmentRoles() {
        return Optional.ofNullable(this.creatorRoleAssignmentRoles);
    }

    /**
     * The ID of the subscription that the Environment Type will be mapped to. The environment&#39;s resources will be deployed into this subscription.
     * 
     */
    @Import(name="deploymentTargetId", required=true)
    private Output<String> deploymentTargetId;

    /**
     * @return The ID of the subscription that the Environment Type will be mapped to. The environment&#39;s resources will be deployed into this subscription.
     * 
     */
    public Output<String> deploymentTargetId() {
        return this.deploymentTargetId;
    }

    /**
     * The ID of the associated Dev Center Project. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="devCenterProjectId", required=true)
    private Output<String> devCenterProjectId;

    /**
     * @return The ID of the associated Dev Center Project. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> devCenterProjectId() {
        return this.devCenterProjectId;
    }

    /**
     * An `identity` block as defined below.
     * 
     */
    @Import(name="identity", required=true)
    private Output<ProjectEnvironmentTypeIdentityArgs> identity;

    /**
     * @return An `identity` block as defined below.
     * 
     */
    public Output<ProjectEnvironmentTypeIdentityArgs> identity() {
        return this.identity;
    }

    /**
     * The Azure Region where the Dev Center Project Environment Type should exist. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="location")
    private @Nullable Output<String> location;

    /**
     * @return The Azure Region where the Dev Center Project Environment Type should exist. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * Specifies the name of this Dev Center Project Environment Type. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Specifies the name of this Dev Center Project Environment Type. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * A mapping of tags which should be assigned to the Dev Center Project Environment Type.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return A mapping of tags which should be assigned to the Dev Center Project Environment Type.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * A `user_role_assignment` block as defined below.
     * 
     */
    @Import(name="userRoleAssignments")
    private @Nullable Output<List<ProjectEnvironmentTypeUserRoleAssignmentArgs>> userRoleAssignments;

    /**
     * @return A `user_role_assignment` block as defined below.
     * 
     */
    public Optional<Output<List<ProjectEnvironmentTypeUserRoleAssignmentArgs>>> userRoleAssignments() {
        return Optional.ofNullable(this.userRoleAssignments);
    }

    private ProjectEnvironmentTypeArgs() {}

    private ProjectEnvironmentTypeArgs(ProjectEnvironmentTypeArgs $) {
        this.creatorRoleAssignmentRoles = $.creatorRoleAssignmentRoles;
        this.deploymentTargetId = $.deploymentTargetId;
        this.devCenterProjectId = $.devCenterProjectId;
        this.identity = $.identity;
        this.location = $.location;
        this.name = $.name;
        this.tags = $.tags;
        this.userRoleAssignments = $.userRoleAssignments;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ProjectEnvironmentTypeArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ProjectEnvironmentTypeArgs $;

        public Builder() {
            $ = new ProjectEnvironmentTypeArgs();
        }

        public Builder(ProjectEnvironmentTypeArgs defaults) {
            $ = new ProjectEnvironmentTypeArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param creatorRoleAssignmentRoles A list of roles to assign to the environment creator.
         * 
         * @return builder
         * 
         */
        public Builder creatorRoleAssignmentRoles(@Nullable Output<List<String>> creatorRoleAssignmentRoles) {
            $.creatorRoleAssignmentRoles = creatorRoleAssignmentRoles;
            return this;
        }

        /**
         * @param creatorRoleAssignmentRoles A list of roles to assign to the environment creator.
         * 
         * @return builder
         * 
         */
        public Builder creatorRoleAssignmentRoles(List<String> creatorRoleAssignmentRoles) {
            return creatorRoleAssignmentRoles(Output.of(creatorRoleAssignmentRoles));
        }

        /**
         * @param creatorRoleAssignmentRoles A list of roles to assign to the environment creator.
         * 
         * @return builder
         * 
         */
        public Builder creatorRoleAssignmentRoles(String... creatorRoleAssignmentRoles) {
            return creatorRoleAssignmentRoles(List.of(creatorRoleAssignmentRoles));
        }

        /**
         * @param deploymentTargetId The ID of the subscription that the Environment Type will be mapped to. The environment&#39;s resources will be deployed into this subscription.
         * 
         * @return builder
         * 
         */
        public Builder deploymentTargetId(Output<String> deploymentTargetId) {
            $.deploymentTargetId = deploymentTargetId;
            return this;
        }

        /**
         * @param deploymentTargetId The ID of the subscription that the Environment Type will be mapped to. The environment&#39;s resources will be deployed into this subscription.
         * 
         * @return builder
         * 
         */
        public Builder deploymentTargetId(String deploymentTargetId) {
            return deploymentTargetId(Output.of(deploymentTargetId));
        }

        /**
         * @param devCenterProjectId The ID of the associated Dev Center Project. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder devCenterProjectId(Output<String> devCenterProjectId) {
            $.devCenterProjectId = devCenterProjectId;
            return this;
        }

        /**
         * @param devCenterProjectId The ID of the associated Dev Center Project. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder devCenterProjectId(String devCenterProjectId) {
            return devCenterProjectId(Output.of(devCenterProjectId));
        }

        /**
         * @param identity An `identity` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder identity(Output<ProjectEnvironmentTypeIdentityArgs> identity) {
            $.identity = identity;
            return this;
        }

        /**
         * @param identity An `identity` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder identity(ProjectEnvironmentTypeIdentityArgs identity) {
            return identity(Output.of(identity));
        }

        /**
         * @param location The Azure Region where the Dev Center Project Environment Type should exist. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location The Azure Region where the Dev Center Project Environment Type should exist. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param name Specifies the name of this Dev Center Project Environment Type. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Specifies the name of this Dev Center Project Environment Type. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param tags A mapping of tags which should be assigned to the Dev Center Project Environment Type.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags A mapping of tags which should be assigned to the Dev Center Project Environment Type.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param userRoleAssignments A `user_role_assignment` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder userRoleAssignments(@Nullable Output<List<ProjectEnvironmentTypeUserRoleAssignmentArgs>> userRoleAssignments) {
            $.userRoleAssignments = userRoleAssignments;
            return this;
        }

        /**
         * @param userRoleAssignments A `user_role_assignment` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder userRoleAssignments(List<ProjectEnvironmentTypeUserRoleAssignmentArgs> userRoleAssignments) {
            return userRoleAssignments(Output.of(userRoleAssignments));
        }

        /**
         * @param userRoleAssignments A `user_role_assignment` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder userRoleAssignments(ProjectEnvironmentTypeUserRoleAssignmentArgs... userRoleAssignments) {
            return userRoleAssignments(List.of(userRoleAssignments));
        }

        public ProjectEnvironmentTypeArgs build() {
            if ($.deploymentTargetId == null) {
                throw new MissingRequiredPropertyException("ProjectEnvironmentTypeArgs", "deploymentTargetId");
            }
            if ($.devCenterProjectId == null) {
                throw new MissingRequiredPropertyException("ProjectEnvironmentTypeArgs", "devCenterProjectId");
            }
            if ($.identity == null) {
                throw new MissingRequiredPropertyException("ProjectEnvironmentTypeArgs", "identity");
            }
            return $;
        }
    }

}
