// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.devcenter.outputs;

import com.pulumi.azure.devcenter.outputs.GetCatalogCatalogAdogit;
import com.pulumi.azure.devcenter.outputs.GetCatalogCatalogGithub;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetCatalogResult {
    /**
     * @return A `catalogAdogit` block as defined below.
     * 
     */
    private List<GetCatalogCatalogAdogit> catalogAdogits;
    /**
     * @return A `catalogGithub` block as defined below.
     * 
     */
    private List<GetCatalogCatalogGithub> catalogGithubs;
    private String devCenterId;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private String name;

    private GetCatalogResult() {}
    /**
     * @return A `catalogAdogit` block as defined below.
     * 
     */
    public List<GetCatalogCatalogAdogit> catalogAdogits() {
        return this.catalogAdogits;
    }
    /**
     * @return A `catalogGithub` block as defined below.
     * 
     */
    public List<GetCatalogCatalogGithub> catalogGithubs() {
        return this.catalogGithubs;
    }
    public String devCenterId() {
        return this.devCenterId;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public String name() {
        return this.name;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetCatalogResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetCatalogCatalogAdogit> catalogAdogits;
        private List<GetCatalogCatalogGithub> catalogGithubs;
        private String devCenterId;
        private String id;
        private String name;
        public Builder() {}
        public Builder(GetCatalogResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.catalogAdogits = defaults.catalogAdogits;
    	      this.catalogGithubs = defaults.catalogGithubs;
    	      this.devCenterId = defaults.devCenterId;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
        }

        @CustomType.Setter
        public Builder catalogAdogits(List<GetCatalogCatalogAdogit> catalogAdogits) {
            if (catalogAdogits == null) {
              throw new MissingRequiredPropertyException("GetCatalogResult", "catalogAdogits");
            }
            this.catalogAdogits = catalogAdogits;
            return this;
        }
        public Builder catalogAdogits(GetCatalogCatalogAdogit... catalogAdogits) {
            return catalogAdogits(List.of(catalogAdogits));
        }
        @CustomType.Setter
        public Builder catalogGithubs(List<GetCatalogCatalogGithub> catalogGithubs) {
            if (catalogGithubs == null) {
              throw new MissingRequiredPropertyException("GetCatalogResult", "catalogGithubs");
            }
            this.catalogGithubs = catalogGithubs;
            return this;
        }
        public Builder catalogGithubs(GetCatalogCatalogGithub... catalogGithubs) {
            return catalogGithubs(List.of(catalogGithubs));
        }
        @CustomType.Setter
        public Builder devCenterId(String devCenterId) {
            if (devCenterId == null) {
              throw new MissingRequiredPropertyException("GetCatalogResult", "devCenterId");
            }
            this.devCenterId = devCenterId;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetCatalogResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetCatalogResult", "name");
            }
            this.name = name;
            return this;
        }
        public GetCatalogResult build() {
            final var _resultValue = new GetCatalogResult();
            _resultValue.catalogAdogits = catalogAdogits;
            _resultValue.catalogGithubs = catalogGithubs;
            _resultValue.devCenterId = devCenterId;
            _resultValue.id = id;
            _resultValue.name = name;
            return _resultValue;
        }
    }
}
