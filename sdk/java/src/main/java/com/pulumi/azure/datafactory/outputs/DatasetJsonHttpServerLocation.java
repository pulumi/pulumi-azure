// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.datafactory.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class DatasetJsonHttpServerLocation {
    /**
     * @return Is the `filename` using dynamic expression, function or system variables? Defaults to `false`.
     * 
     */
    private final @Nullable Boolean dynamicFilenameEnabled;
    /**
     * @return Is the `path` using dynamic expression, function or system variables? Defaults to `false`.
     * 
     */
    private final @Nullable Boolean dynamicPathEnabled;
    /**
     * @return The filename of the file on the web server.
     * 
     */
    private final String filename;
    /**
     * @return The folder path to the file on the web server.
     * 
     */
    private final String path;
    /**
     * @return The base URL to the web server hosting the file.
     * 
     */
    private final String relativeUrl;

    @CustomType.Constructor
    private DatasetJsonHttpServerLocation(
        @CustomType.Parameter("dynamicFilenameEnabled") @Nullable Boolean dynamicFilenameEnabled,
        @CustomType.Parameter("dynamicPathEnabled") @Nullable Boolean dynamicPathEnabled,
        @CustomType.Parameter("filename") String filename,
        @CustomType.Parameter("path") String path,
        @CustomType.Parameter("relativeUrl") String relativeUrl) {
        this.dynamicFilenameEnabled = dynamicFilenameEnabled;
        this.dynamicPathEnabled = dynamicPathEnabled;
        this.filename = filename;
        this.path = path;
        this.relativeUrl = relativeUrl;
    }

    /**
     * @return Is the `filename` using dynamic expression, function or system variables? Defaults to `false`.
     * 
     */
    public Optional<Boolean> dynamicFilenameEnabled() {
        return Optional.ofNullable(this.dynamicFilenameEnabled);
    }
    /**
     * @return Is the `path` using dynamic expression, function or system variables? Defaults to `false`.
     * 
     */
    public Optional<Boolean> dynamicPathEnabled() {
        return Optional.ofNullable(this.dynamicPathEnabled);
    }
    /**
     * @return The filename of the file on the web server.
     * 
     */
    public String filename() {
        return this.filename;
    }
    /**
     * @return The folder path to the file on the web server.
     * 
     */
    public String path() {
        return this.path;
    }
    /**
     * @return The base URL to the web server hosting the file.
     * 
     */
    public String relativeUrl() {
        return this.relativeUrl;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DatasetJsonHttpServerLocation defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Boolean dynamicFilenameEnabled;
        private @Nullable Boolean dynamicPathEnabled;
        private String filename;
        private String path;
        private String relativeUrl;

        public Builder() {
    	      // Empty
        }

        public Builder(DatasetJsonHttpServerLocation defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.dynamicFilenameEnabled = defaults.dynamicFilenameEnabled;
    	      this.dynamicPathEnabled = defaults.dynamicPathEnabled;
    	      this.filename = defaults.filename;
    	      this.path = defaults.path;
    	      this.relativeUrl = defaults.relativeUrl;
        }

        public Builder dynamicFilenameEnabled(@Nullable Boolean dynamicFilenameEnabled) {
            this.dynamicFilenameEnabled = dynamicFilenameEnabled;
            return this;
        }
        public Builder dynamicPathEnabled(@Nullable Boolean dynamicPathEnabled) {
            this.dynamicPathEnabled = dynamicPathEnabled;
            return this;
        }
        public Builder filename(String filename) {
            this.filename = Objects.requireNonNull(filename);
            return this;
        }
        public Builder path(String path) {
            this.path = Objects.requireNonNull(path);
            return this;
        }
        public Builder relativeUrl(String relativeUrl) {
            this.relativeUrl = Objects.requireNonNull(relativeUrl);
            return this;
        }        public DatasetJsonHttpServerLocation build() {
            return new DatasetJsonHttpServerLocation(dynamicFilenameEnabled, dynamicPathEnabled, filename, path, relativeUrl);
        }
    }
}
