// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.frontdoor.outputs;

import com.pulumi.azure.frontdoor.outputs.FirewallPolicyCustomRuleMatchCondition;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class FirewallPolicyCustomRule {
    /**
     * @return The action to perform when the rule is matched. Possible values are `Allow`, `Block`, `Log`, or `Redirect`.
     * 
     */
    private String action;
    /**
     * @return Is the rule is enabled or disabled? Defaults to `true`.
     * 
     */
    private @Nullable Boolean enabled;
    /**
     * @return One or more `match_condition` block defined below. Can support up to `10` `match_condition` blocks.
     * 
     */
    private @Nullable List<FirewallPolicyCustomRuleMatchCondition> matchConditions;
    /**
     * @return Gets name of the resource that is unique within a policy. This name can be used to access the resource.
     * 
     */
    private String name;
    /**
     * @return The priority of the rule. Rules with a lower value will be evaluated before rules with a higher value. Defaults to `1`.
     * 
     */
    private @Nullable Integer priority;
    /**
     * @return The rate limit duration in minutes. Defaults to `1`.
     * 
     */
    private @Nullable Integer rateLimitDurationInMinutes;
    /**
     * @return The rate limit threshold. Defaults to `10`.
     * 
     */
    private @Nullable Integer rateLimitThreshold;
    /**
     * @return The type of rule. Possible values are `MatchRule` or `RateLimitRule`.
     * 
     */
    private String type;

    private FirewallPolicyCustomRule() {}
    /**
     * @return The action to perform when the rule is matched. Possible values are `Allow`, `Block`, `Log`, or `Redirect`.
     * 
     */
    public String action() {
        return this.action;
    }
    /**
     * @return Is the rule is enabled or disabled? Defaults to `true`.
     * 
     */
    public Optional<Boolean> enabled() {
        return Optional.ofNullable(this.enabled);
    }
    /**
     * @return One or more `match_condition` block defined below. Can support up to `10` `match_condition` blocks.
     * 
     */
    public List<FirewallPolicyCustomRuleMatchCondition> matchConditions() {
        return this.matchConditions == null ? List.of() : this.matchConditions;
    }
    /**
     * @return Gets name of the resource that is unique within a policy. This name can be used to access the resource.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The priority of the rule. Rules with a lower value will be evaluated before rules with a higher value. Defaults to `1`.
     * 
     */
    public Optional<Integer> priority() {
        return Optional.ofNullable(this.priority);
    }
    /**
     * @return The rate limit duration in minutes. Defaults to `1`.
     * 
     */
    public Optional<Integer> rateLimitDurationInMinutes() {
        return Optional.ofNullable(this.rateLimitDurationInMinutes);
    }
    /**
     * @return The rate limit threshold. Defaults to `10`.
     * 
     */
    public Optional<Integer> rateLimitThreshold() {
        return Optional.ofNullable(this.rateLimitThreshold);
    }
    /**
     * @return The type of rule. Possible values are `MatchRule` or `RateLimitRule`.
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(FirewallPolicyCustomRule defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String action;
        private @Nullable Boolean enabled;
        private @Nullable List<FirewallPolicyCustomRuleMatchCondition> matchConditions;
        private String name;
        private @Nullable Integer priority;
        private @Nullable Integer rateLimitDurationInMinutes;
        private @Nullable Integer rateLimitThreshold;
        private String type;
        public Builder() {}
        public Builder(FirewallPolicyCustomRule defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.action = defaults.action;
    	      this.enabled = defaults.enabled;
    	      this.matchConditions = defaults.matchConditions;
    	      this.name = defaults.name;
    	      this.priority = defaults.priority;
    	      this.rateLimitDurationInMinutes = defaults.rateLimitDurationInMinutes;
    	      this.rateLimitThreshold = defaults.rateLimitThreshold;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder action(String action) {
            if (action == null) {
              throw new MissingRequiredPropertyException("FirewallPolicyCustomRule", "action");
            }
            this.action = action;
            return this;
        }
        @CustomType.Setter
        public Builder enabled(@Nullable Boolean enabled) {

            this.enabled = enabled;
            return this;
        }
        @CustomType.Setter
        public Builder matchConditions(@Nullable List<FirewallPolicyCustomRuleMatchCondition> matchConditions) {

            this.matchConditions = matchConditions;
            return this;
        }
        public Builder matchConditions(FirewallPolicyCustomRuleMatchCondition... matchConditions) {
            return matchConditions(List.of(matchConditions));
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("FirewallPolicyCustomRule", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder priority(@Nullable Integer priority) {

            this.priority = priority;
            return this;
        }
        @CustomType.Setter
        public Builder rateLimitDurationInMinutes(@Nullable Integer rateLimitDurationInMinutes) {

            this.rateLimitDurationInMinutes = rateLimitDurationInMinutes;
            return this;
        }
        @CustomType.Setter
        public Builder rateLimitThreshold(@Nullable Integer rateLimitThreshold) {

            this.rateLimitThreshold = rateLimitThreshold;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            if (type == null) {
              throw new MissingRequiredPropertyException("FirewallPolicyCustomRule", "type");
            }
            this.type = type;
            return this;
        }
        public FirewallPolicyCustomRule build() {
            final var _resultValue = new FirewallPolicyCustomRule();
            _resultValue.action = action;
            _resultValue.enabled = enabled;
            _resultValue.matchConditions = matchConditions;
            _resultValue.name = name;
            _resultValue.priority = priority;
            _resultValue.rateLimitDurationInMinutes = rateLimitDurationInMinutes;
            _resultValue.rateLimitThreshold = rateLimitThreshold;
            _resultValue.type = type;
            return _resultValue;
        }
    }
}
