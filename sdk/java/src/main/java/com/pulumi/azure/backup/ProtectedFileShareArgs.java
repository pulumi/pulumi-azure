// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.backup;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class ProtectedFileShareArgs extends com.pulumi.resources.ResourceArgs {

    public static final ProtectedFileShareArgs Empty = new ProtectedFileShareArgs();

    /**
     * Specifies the ID of the backup policy to use. The policy must be an Azure File Share backup policy. Other types are not supported.
     * 
     */
    @Import(name="backupPolicyId", required=true)
    private Output<String> backupPolicyId;

    /**
     * @return Specifies the ID of the backup policy to use. The policy must be an Azure File Share backup policy. Other types are not supported.
     * 
     */
    public Output<String> backupPolicyId() {
        return this.backupPolicyId;
    }

    /**
     * Specifies the name of the Recovery Services Vault to use. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="recoveryVaultName", required=true)
    private Output<String> recoveryVaultName;

    /**
     * @return Specifies the name of the Recovery Services Vault to use. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> recoveryVaultName() {
        return this.recoveryVaultName;
    }

    /**
     * The name of the resource group in which to create the Azure Backup Protected File Share. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    /**
     * @return The name of the resource group in which to create the Azure Backup Protected File Share. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * Specifies the name of the file share to backup. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="sourceFileShareName", required=true)
    private Output<String> sourceFileShareName;

    /**
     * @return Specifies the name of the file share to backup. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> sourceFileShareName() {
        return this.sourceFileShareName;
    }

    /**
     * Specifies the ID of the storage account of the file share to backup. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="sourceStorageAccountId", required=true)
    private Output<String> sourceStorageAccountId;

    /**
     * @return Specifies the ID of the storage account of the file share to backup. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> sourceStorageAccountId() {
        return this.sourceStorageAccountId;
    }

    private ProtectedFileShareArgs() {}

    private ProtectedFileShareArgs(ProtectedFileShareArgs $) {
        this.backupPolicyId = $.backupPolicyId;
        this.recoveryVaultName = $.recoveryVaultName;
        this.resourceGroupName = $.resourceGroupName;
        this.sourceFileShareName = $.sourceFileShareName;
        this.sourceStorageAccountId = $.sourceStorageAccountId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ProtectedFileShareArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ProtectedFileShareArgs $;

        public Builder() {
            $ = new ProtectedFileShareArgs();
        }

        public Builder(ProtectedFileShareArgs defaults) {
            $ = new ProtectedFileShareArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param backupPolicyId Specifies the ID of the backup policy to use. The policy must be an Azure File Share backup policy. Other types are not supported.
         * 
         * @return builder
         * 
         */
        public Builder backupPolicyId(Output<String> backupPolicyId) {
            $.backupPolicyId = backupPolicyId;
            return this;
        }

        /**
         * @param backupPolicyId Specifies the ID of the backup policy to use. The policy must be an Azure File Share backup policy. Other types are not supported.
         * 
         * @return builder
         * 
         */
        public Builder backupPolicyId(String backupPolicyId) {
            return backupPolicyId(Output.of(backupPolicyId));
        }

        /**
         * @param recoveryVaultName Specifies the name of the Recovery Services Vault to use. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder recoveryVaultName(Output<String> recoveryVaultName) {
            $.recoveryVaultName = recoveryVaultName;
            return this;
        }

        /**
         * @param recoveryVaultName Specifies the name of the Recovery Services Vault to use. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder recoveryVaultName(String recoveryVaultName) {
            return recoveryVaultName(Output.of(recoveryVaultName));
        }

        /**
         * @param resourceGroupName The name of the resource group in which to create the Azure Backup Protected File Share. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName The name of the resource group in which to create the Azure Backup Protected File Share. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        /**
         * @param sourceFileShareName Specifies the name of the file share to backup. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder sourceFileShareName(Output<String> sourceFileShareName) {
            $.sourceFileShareName = sourceFileShareName;
            return this;
        }

        /**
         * @param sourceFileShareName Specifies the name of the file share to backup. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder sourceFileShareName(String sourceFileShareName) {
            return sourceFileShareName(Output.of(sourceFileShareName));
        }

        /**
         * @param sourceStorageAccountId Specifies the ID of the storage account of the file share to backup. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder sourceStorageAccountId(Output<String> sourceStorageAccountId) {
            $.sourceStorageAccountId = sourceStorageAccountId;
            return this;
        }

        /**
         * @param sourceStorageAccountId Specifies the ID of the storage account of the file share to backup. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder sourceStorageAccountId(String sourceStorageAccountId) {
            return sourceStorageAccountId(Output.of(sourceStorageAccountId));
        }

        public ProtectedFileShareArgs build() {
            $.backupPolicyId = Objects.requireNonNull($.backupPolicyId, "expected parameter 'backupPolicyId' to be non-null");
            $.recoveryVaultName = Objects.requireNonNull($.recoveryVaultName, "expected parameter 'recoveryVaultName' to be non-null");
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            $.sourceFileShareName = Objects.requireNonNull($.sourceFileShareName, "expected parameter 'sourceFileShareName' to be non-null");
            $.sourceStorageAccountId = Objects.requireNonNull($.sourceStorageAccountId, "expected parameter 'sourceStorageAccountId' to be non-null");
            return $;
        }
    }

}
