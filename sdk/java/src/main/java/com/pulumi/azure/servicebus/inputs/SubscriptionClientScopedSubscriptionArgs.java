// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.servicebus.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SubscriptionClientScopedSubscriptionArgs extends com.pulumi.resources.ResourceArgs {

    public static final SubscriptionClientScopedSubscriptionArgs Empty = new SubscriptionClientScopedSubscriptionArgs();

    /**
     * Specifies the Client ID of the application that created the client-scoped subscription.
     * 
     */
    @Import(name="clientId")
    private @Nullable Output<String> clientId;

    /**
     * @return Specifies the Client ID of the application that created the client-scoped subscription.
     * 
     */
    public Optional<Output<String>> clientId() {
        return Optional.ofNullable(this.clientId);
    }

    /**
     * Whether the client scoped subscription is durable. This property can only be controlled from the application side.
     * 
     */
    @Import(name="isClientScopedSubscriptionDurable")
    private @Nullable Output<Boolean> isClientScopedSubscriptionDurable;

    /**
     * @return Whether the client scoped subscription is durable. This property can only be controlled from the application side.
     * 
     */
    public Optional<Output<Boolean>> isClientScopedSubscriptionDurable() {
        return Optional.ofNullable(this.isClientScopedSubscriptionDurable);
    }

    /**
     * Whether the client scoped subscription is shareable. Defaults to `true`
     * 
     */
    @Import(name="isClientScopedSubscriptionShareable")
    private @Nullable Output<Boolean> isClientScopedSubscriptionShareable;

    /**
     * @return Whether the client scoped subscription is shareable. Defaults to `true`
     * 
     */
    public Optional<Output<Boolean>> isClientScopedSubscriptionShareable() {
        return Optional.ofNullable(this.isClientScopedSubscriptionShareable);
    }

    private SubscriptionClientScopedSubscriptionArgs() {}

    private SubscriptionClientScopedSubscriptionArgs(SubscriptionClientScopedSubscriptionArgs $) {
        this.clientId = $.clientId;
        this.isClientScopedSubscriptionDurable = $.isClientScopedSubscriptionDurable;
        this.isClientScopedSubscriptionShareable = $.isClientScopedSubscriptionShareable;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SubscriptionClientScopedSubscriptionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SubscriptionClientScopedSubscriptionArgs $;

        public Builder() {
            $ = new SubscriptionClientScopedSubscriptionArgs();
        }

        public Builder(SubscriptionClientScopedSubscriptionArgs defaults) {
            $ = new SubscriptionClientScopedSubscriptionArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param clientId Specifies the Client ID of the application that created the client-scoped subscription.
         * 
         * @return builder
         * 
         */
        public Builder clientId(@Nullable Output<String> clientId) {
            $.clientId = clientId;
            return this;
        }

        /**
         * @param clientId Specifies the Client ID of the application that created the client-scoped subscription.
         * 
         * @return builder
         * 
         */
        public Builder clientId(String clientId) {
            return clientId(Output.of(clientId));
        }

        /**
         * @param isClientScopedSubscriptionDurable Whether the client scoped subscription is durable. This property can only be controlled from the application side.
         * 
         * @return builder
         * 
         */
        public Builder isClientScopedSubscriptionDurable(@Nullable Output<Boolean> isClientScopedSubscriptionDurable) {
            $.isClientScopedSubscriptionDurable = isClientScopedSubscriptionDurable;
            return this;
        }

        /**
         * @param isClientScopedSubscriptionDurable Whether the client scoped subscription is durable. This property can only be controlled from the application side.
         * 
         * @return builder
         * 
         */
        public Builder isClientScopedSubscriptionDurable(Boolean isClientScopedSubscriptionDurable) {
            return isClientScopedSubscriptionDurable(Output.of(isClientScopedSubscriptionDurable));
        }

        /**
         * @param isClientScopedSubscriptionShareable Whether the client scoped subscription is shareable. Defaults to `true`
         * 
         * @return builder
         * 
         */
        public Builder isClientScopedSubscriptionShareable(@Nullable Output<Boolean> isClientScopedSubscriptionShareable) {
            $.isClientScopedSubscriptionShareable = isClientScopedSubscriptionShareable;
            return this;
        }

        /**
         * @param isClientScopedSubscriptionShareable Whether the client scoped subscription is shareable. Defaults to `true`
         * 
         * @return builder
         * 
         */
        public Builder isClientScopedSubscriptionShareable(Boolean isClientScopedSubscriptionShareable) {
            return isClientScopedSubscriptionShareable(Output.of(isClientScopedSubscriptionShareable));
        }

        public SubscriptionClientScopedSubscriptionArgs build() {
            return $;
        }
    }

}
