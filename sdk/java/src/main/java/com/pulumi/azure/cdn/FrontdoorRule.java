// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.cdn;

import com.pulumi.azure.Utilities;
import com.pulumi.azure.cdn.FrontdoorRuleArgs;
import com.pulumi.azure.cdn.inputs.FrontdoorRuleState;
import com.pulumi.azure.cdn.outputs.FrontdoorRuleActions;
import com.pulumi.azure.cdn.outputs.FrontdoorRuleConditions;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Integer;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Manages a Frontdoor Rule.
 * 
 * !&gt;**IMPORTANT:** To create the Frontdoor Rules resource successfully you **must** add a `depends_on` attribute to the `azure.cdn.FrontdoorRule` code block and reference both the `azure.cdn.FrontdoorOrigin` and the `azure.cdn.FrontdoorOriginGroup` that are associated with the Frontdoor Rule resource.
 * 
 * ## Example Usage
 * 
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.azure.core.ResourceGroup;
 * import com.pulumi.azure.core.ResourceGroupArgs;
 * import com.pulumi.azure.cdn.FrontdoorProfile;
 * import com.pulumi.azure.cdn.FrontdoorProfileArgs;
 * import com.pulumi.azure.cdn.FrontdoorEndpoint;
 * import com.pulumi.azure.cdn.FrontdoorEndpointArgs;
 * import com.pulumi.azure.cdn.FrontdoorOriginGroup;
 * import com.pulumi.azure.cdn.FrontdoorOriginGroupArgs;
 * import com.pulumi.azure.cdn.inputs.FrontdoorOriginGroupHealthProbeArgs;
 * import com.pulumi.azure.cdn.inputs.FrontdoorOriginGroupLoadBalancingArgs;
 * import com.pulumi.azure.cdn.FrontdoorOrigin;
 * import com.pulumi.azure.cdn.FrontdoorOriginArgs;
 * import com.pulumi.azure.cdn.FrontdoorRuleSet;
 * import com.pulumi.azure.cdn.FrontdoorRuleSetArgs;
 * import com.pulumi.azure.cdn.FrontdoorRule;
 * import com.pulumi.azure.cdn.FrontdoorRuleArgs;
 * import com.pulumi.azure.cdn.inputs.FrontdoorRuleActionsArgs;
 * import com.pulumi.azure.cdn.inputs.FrontdoorRuleActionsRouteConfigurationOverrideActionArgs;
 * import com.pulumi.azure.cdn.inputs.FrontdoorRuleActionsUrlRedirectActionArgs;
 * import com.pulumi.azure.cdn.inputs.FrontdoorRuleConditionsArgs;
 * import com.pulumi.resources.CustomResourceOptions;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var exampleResourceGroup = new ResourceGroup(&#34;exampleResourceGroup&#34;, ResourceGroupArgs.builder()        
 *             .location(&#34;West Europe&#34;)
 *             .build());
 * 
 *         var exampleFrontdoorProfile = new FrontdoorProfile(&#34;exampleFrontdoorProfile&#34;, FrontdoorProfileArgs.builder()        
 *             .resourceGroupName(exampleResourceGroup.name())
 *             .build());
 * 
 *         var exampleFrontdoorEndpoint = new FrontdoorEndpoint(&#34;exampleFrontdoorEndpoint&#34;, FrontdoorEndpointArgs.builder()        
 *             .cdnFrontdoorProfileId(exampleFrontdoorProfile.id())
 *             .tags(Map.of(&#34;endpoint&#34;, &#34;contoso.com&#34;))
 *             .build());
 * 
 *         var exampleFrontdoorOriginGroup = new FrontdoorOriginGroup(&#34;exampleFrontdoorOriginGroup&#34;, FrontdoorOriginGroupArgs.builder()        
 *             .cdnFrontdoorProfileId(exampleFrontdoorProfile.id())
 *             .sessionAffinityEnabled(true)
 *             .restoreTrafficTimeToHealedOrNewEndpointInMinutes(10)
 *             .healthProbe(FrontdoorOriginGroupHealthProbeArgs.builder()
 *                 .intervalInSeconds(240)
 *                 .path(&#34;/healthProbe&#34;)
 *                 .protocol(&#34;Https&#34;)
 *                 .requestType(&#34;GET&#34;)
 *                 .build())
 *             .loadBalancing(FrontdoorOriginGroupLoadBalancingArgs.builder()
 *                 .additionalLatencyInMilliseconds(0)
 *                 .sampleSize(16)
 *                 .successfulSamplesRequired(3)
 *                 .build())
 *             .build());
 * 
 *         var exampleFrontdoorOrigin = new FrontdoorOrigin(&#34;exampleFrontdoorOrigin&#34;, FrontdoorOriginArgs.builder()        
 *             .cdnFrontdoorOriginGroupId(exampleFrontdoorOriginGroup.id())
 *             .healthProbesEnabled(true)
 *             .certificateNameCheckEnabled(false)
 *             .hostName(exampleFrontdoorEndpoint.hostName())
 *             .httpPort(80)
 *             .httpsPort(443)
 *             .originHostHeader(&#34;contoso.com&#34;)
 *             .priority(1)
 *             .weight(500)
 *             .build());
 * 
 *         var exampleFrontdoorRuleSet = new FrontdoorRuleSet(&#34;exampleFrontdoorRuleSet&#34;, FrontdoorRuleSetArgs.builder()        
 *             .cdnFrontdoorProfileId(exampleFrontdoorProfile.id())
 *             .build());
 * 
 *         var exampleFrontdoorRule = new FrontdoorRule(&#34;exampleFrontdoorRule&#34;, FrontdoorRuleArgs.builder()        
 *             .cdnFrontdoorRuleSetId(exampleFrontdoorRuleSet.id())
 *             .order(1)
 *             .behaviorOnMatch(&#34;Continue&#34;)
 *             .actions(FrontdoorRuleActionsArgs.builder()
 *                 .routeConfigurationOverrideAction(FrontdoorRuleActionsRouteConfigurationOverrideActionArgs.builder()
 *                     .cdnFrontdoorOriginGroupId(exampleFrontdoorOriginGroup.id())
 *                     .forwardingProtocol(&#34;HttpsOnly&#34;)
 *                     .queryStringCachingBehavior(&#34;IncludeSpecifiedQueryStrings&#34;)
 *                     .queryStringParameters(                    
 *                         &#34;foo&#34;,
 *                         &#34;clientIp={client_ip}&#34;)
 *                     .compressionEnabled(true)
 *                     .cacheBehavior(&#34;OverrideIfOriginMissing&#34;)
 *                     .cacheDuration(&#34;365.23:59:59&#34;)
 *                     .build())
 *                 .urlRedirectAction(FrontdoorRuleActionsUrlRedirectActionArgs.builder()
 *                     .redirectType(&#34;PermanentRedirect&#34;)
 *                     .redirectProtocol(&#34;MatchRequest&#34;)
 *                     .queryString(&#34;clientIp={client_ip}&#34;)
 *                     .destinationPath(&#34;/exampleredirection&#34;)
 *                     .destinationHostname(&#34;contoso.com&#34;)
 *                     .destinationFragment(&#34;UrlRedirect&#34;)
 *                     .build())
 *                 .build())
 *             .conditions(FrontdoorRuleConditionsArgs.builder()
 *                 .hostNameConditions(FrontdoorRuleConditionsHostNameConditionArgs.builder()
 *                     .operator(&#34;Equal&#34;)
 *                     .negateCondition(false)
 *                     .matchValues(                    
 *                         &#34;www.contoso.com&#34;,
 *                         &#34;images.contoso.com&#34;,
 *                         &#34;video.contoso.com&#34;)
 *                     .transforms(                    
 *                         &#34;Lowercase&#34;,
 *                         &#34;Trim&#34;)
 *                     .build())
 *                 .isDeviceConditions(FrontdoorRuleConditionsIsDeviceConditionArgs.builder()
 *                     .operator(&#34;Equal&#34;)
 *                     .negateCondition(false)
 *                     .matchValues(&#34;Mobile&#34;)
 *                     .build())
 *                 .postArgsConditions(FrontdoorRuleConditionsPostArgsConditionArgs.builder()
 *                     .postArgsName(&#34;customerName&#34;)
 *                     .operator(&#34;BeginsWith&#34;)
 *                     .matchValues(                    
 *                         &#34;J&#34;,
 *                         &#34;K&#34;)
 *                     .transforms(&#34;Uppercase&#34;)
 *                     .build())
 *                 .requestMethodConditions(FrontdoorRuleConditionsRequestMethodConditionArgs.builder()
 *                     .operator(&#34;Equal&#34;)
 *                     .negateCondition(false)
 *                     .matchValues(&#34;DELETE&#34;)
 *                     .build())
 *                 .urlFilenameConditions(FrontdoorRuleConditionsUrlFilenameConditionArgs.builder()
 *                     .operator(&#34;Equal&#34;)
 *                     .negateCondition(false)
 *                     .matchValues(&#34;media.mp4&#34;)
 *                     .transforms(                    
 *                         &#34;Lowercase&#34;,
 *                         &#34;RemoveNulls&#34;,
 *                         &#34;Trim&#34;)
 *                     .build())
 *                 .build())
 *             .build(), CustomResourceOptions.builder()
 *                 .dependsOn(                
 *                     exampleFrontdoorOriginGroup,
 *                     exampleFrontdoorOrigin)
 *                 .build());
 * 
 *     }
 * }
 * ```
 * ## Specifying IP Address Ranges
 * 
 * When specifying IP address ranges in the `socket_address_condition` and the `remote_address_condition` `match_values` use the following format:
 * 
 * Use `CIDR` notation when specifying IP address blocks. This means that the syntax for an IP address block is the base IP address followed by a forward slash and the prefix size For example:
 * 
 * * `IPv4` example: `5.5.5.64/26` matches any requests that arrive from addresses `5.5.5.64` through `5.5.5.127`.
 * * `IPv6` example: `1:2:3:/48` matches any requests that arrive from addresses `1:2:3:0:0:0:0:0` through `1:2:3:ffff:ffff:ffff:ffff:ffff`.
 * 
 * When you specify multiple IP addresses and IP address blocks, `OR` logic is applied.
 * 
 * * `IPv4` example: if you add two IP addresses `1.2.3.4` and `10.20.30.40`, the condition is matched for any requests that arrive from either address `1.2.3.4` or `10.20.30.40`.
 * * `IPv6` example: if you add two IP addresses `1:2:3:4:5:6:7:8` and `10:20:30:40:50:60:70:80`, the condition is matched for any requests that arrive from either address `1:2:3:4:5:6:7:8` or `10:20:30:40:50:60:70:80`.
 * 
 * ***
 * 
 * ## Action Server Variables
 * 
 * Rule Set server variables provide access to structured information about the request. You can use server variables to dynamically change the request/response headers or URL rewrite paths/query strings, for example, when a new page load or when a form is posted.
 * 
 * ### Supported Action Server Variables
 * 
 * | Variable name | Description |
 * |---------------|-------------|
 * | `socket_ip`      | The IP address of the direct connection to Azure Front Door edge. If the client used an HTTP proxy or a load balancer to send the request, the value of `socket_ip` is the IP address of the proxy or load balancer. |
 * | `client_ip`      | The IP address of the client that made the original request. If there was an `X-Forwarded-For` header in the request, then the client IP address is picked from the header. |
 * | `client_port`    | The IP port of the client that made the request. |
 * | `hostname`       | The host name in the request from the client. |
 * | `geo_country`    | Indicates the requester&#39;s country/region of origin through its country/region code. |
 * | `http_method`    | The method used to make the URL request, such as `GET` or `POST`. |
 * | `http_version`   | The request protocol. Usually `HTTP/1.0`, `HTTP/1.1`, or `HTTP/2.0`. |
 * | `query_string`   | The list of variable/value pairs that follows the &#34;?&#34; in the requested URL.&lt;br/&gt;For example, in the request `http://contoso.com:8080/article.aspx?id=123&amp;title=fabrikam`, the `query_string` value will be `id=123&amp;title=fabrikam`. |
 * | `request_scheme` | The request scheme: `http` or `https`. |
 * | `request_uri`    | The full original request URI (with arguments).&lt;br/&gt;For example, in the request `http://contoso.com:8080/article.aspx?id=123&amp;title=fabrikam`, the `request_uri` value will be `/article.aspx?id=123&amp;title=fabrikam`. |
 * | `ssl_protocol`   | The protocol of an established TLS connection. |
 * | `server_port`    | The port of the server that accepted a request. |
 * | `url_path`       | Identifies the specific resource in the host that the web client wants to access. This is the part of the request URI without the arguments.&lt;br/&gt;For example, in the request `http://contoso.com:8080/article.aspx?id=123&amp;title=fabrikam`, the `uri_path` value will be `/article.aspx`. |
 * 
 * ### Action Server Variable Format
 * 
 * Server variables can be specified using the following formats:
 * 
 * * `{variable}` - Include the entire server variable. For example, if the client IP address is `111.222.333.444` then the `{client_ip}` token would evaluate to `111.222.333.444`.
 * 
 * * `{variable:offset}` - Include the server variable after a specific offset, until the end of the variable. The offset is zero-based. For example, if the client IP address is `111.222.333.444` then the `{client_ip:3}` token would evaluate to `.222.333.444`.
 * 
 * * `{variable:offset:length}` - Include the server variable after a specific offset, up to the specified length. The offset is zero-based. For example, if the client IP address is `111.222.333.444` then the `{client_ip:4:3}` token would evaluate to `222`.
 * 
 * ### Action Server Variables Support
 * 
 * Action Server variables are supported on the following actions:
 * 
 * * `route_configuration_override_action`
 * * `request_header_action`
 * * `response_header_action`
 * * `url_redirect_action`
 * * `url_rewrite_action`
 * 
 * ***
 * 
 * ## Condition Operator list
 * 
 * For rules that accept values from the standard operator list, the following operators are valid:
 * 
 * | Operator                   | Description | Condition Value |
 * |----------------------------|-------------|-----------------|
 * | Any                        |Matches when there is any value, regardless of what it is. | Any |
 * | Equal                      | Matches when the value exactly matches the specified string. | Equal |
 * | Contains                   | Matches when the value contains the specified string. | Contains |
 * | Less Than                  | Matches when the length of the value is less than the specified integer. | LessThan |
 * | Greater Than               | Matches when the length of the value is greater than the specified integer. | GreaterThan |
 * | Less Than or Equal         | Matches when the length of the value is less than or equal to the specified integer. | LessThanOrEqual |
 * | Greater Than or Equal      | Matches when the length of the value is greater than or equal to the specified integer. | GreaterThanOrEqual |
 * | Begins With                | Matches when the value begins with the specified string. | BeginsWith |
 * | Ends With                  | Matches when the value ends with the specified string. | EndsWith |
 * | RegEx                      | Matches when the value matches the specified regular expression. See below for further details. | RegEx |
 * | Not Any                    | Matches when there is no value. | Any and negateCondition = true |
 * | Not Equal                  | Matches when the value does not match the specified string. | Equal and negateCondition : true |
 * | Not Contains               | Matches when the value does not contain the specified string. | Contains and negateCondition = true |
 * | Not Less Than              | Matches when the length of the value is not less than the specified integer. | LessThan and negateCondition = true |
 * | Not Greater Than           | Matches when the length of the value is not greater than the specified integer. | GreaterThan and negateCondition = true |
 * | Not Less Than or Equal     | Matches when the length of the value is not less than or equal to the specified integer. | LessThanOrEqual and negateCondition = true |
 * | Not Greater Than or Equals | Matches when the length of the value is not greater than or equal to the specified integer. | GreaterThanOrEqual and negateCondition = true |
 * | Not Begins With            | Matches when the value does not begin with the specified string. | BeginsWith and negateCondition = true |
 * | Not Ends With              | Matches when the value does not end with the specified string. | EndsWith and negateCondition = true |
 * | Not RegEx                  | Matches when the value does not match the specified regular expression. See `Condition Regular Expressions` for further details. | RegEx and negateCondition = true |
 * 
 * ***
 * 
 * ## Condition Regular Expressions
 * 
 * Regular expressions **don&#39;t** support the following operations:
 * 
 * * Backreferences and capturing subexpressions.
 * * Arbitrary zero-width assertions.
 * * Subroutine references and recursive patterns.
 * * Conditional patterns.
 * * Backtracking control verbs.
 * * The `\C` single-byte directive.
 * * The `\R` newline match directive.
 * * The `\K` start of match reset directive.
 * * Callouts and embedded code.
 * * Atomic grouping and possessive quantifiers.
 * 
 * ***
 * 
 * ## Condition Transform List
 * 
 * For rules that can transform strings, the following transforms are valid:
 * 
 * | Transform   | Description |
 * |-------------|-------------|
 * | Lowercase   | Converts the string to the lowercase representation. |
 * | Uppercase   | Converts the string to the uppercase representation. |
 * | Trim        | Trims leading and trailing whitespace from the string. |
 * | RemoveNulls | Removes null values from the string. |
 * | URLEncode   | URL-encodes the string. |
 * | URLDecode   | URL-decodes the string. |
 * 
 * ***
 * 
 * ## Import
 * 
 * cdn Rules can be imported using the `resource id`, e.g.
 * 
 * ```sh
 *  $ pulumi import azure:cdn/frontdoorRule:FrontdoorRule example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resourceGroup1/providers/Microsoft.Cdn/profiles/profile1/ruleSets/ruleSet1/rules/rule1
 * ```
 * 
 */
@ResourceType(type="azure:cdn/frontdoorRule:FrontdoorRule")
public class FrontdoorRule extends com.pulumi.resources.CustomResource {
    /**
     * An `actions` block as defined below.
     * 
     */
    @Export(name="actions", type=FrontdoorRuleActions.class, parameters={})
    private Output<FrontdoorRuleActions> actions;

    /**
     * @return An `actions` block as defined below.
     * 
     */
    public Output<FrontdoorRuleActions> actions() {
        return this.actions;
    }
    /**
     * If this rule is a match should the rules engine continue processing the remaining rules or stop? Possible values are `Continue` and `Stop`. Defaults to `Continue`.
     * 
     */
    @Export(name="behaviorOnMatch", type=String.class, parameters={})
    private Output</* @Nullable */ String> behaviorOnMatch;

    /**
     * @return If this rule is a match should the rules engine continue processing the remaining rules or stop? Possible values are `Continue` and `Stop`. Defaults to `Continue`.
     * 
     */
    public Output<Optional<String>> behaviorOnMatch() {
        return Codegen.optional(this.behaviorOnMatch);
    }
    /**
     * The resource ID of the Frontdoor Rule Set for this Frontdoor Rule. Changing this forces a new Frontdoor Rule to be created.
     * 
     */
    @Export(name="cdnFrontdoorRuleSetId", type=String.class, parameters={})
    private Output<String> cdnFrontdoorRuleSetId;

    /**
     * @return The resource ID of the Frontdoor Rule Set for this Frontdoor Rule. Changing this forces a new Frontdoor Rule to be created.
     * 
     */
    public Output<String> cdnFrontdoorRuleSetId() {
        return this.cdnFrontdoorRuleSetId;
    }
    /**
     * The name of the Frontdoor Rule Set containing this Frontdoor Rule.
     * 
     */
    @Export(name="cdnFrontdoorRuleSetName", type=String.class, parameters={})
    private Output<String> cdnFrontdoorRuleSetName;

    /**
     * @return The name of the Frontdoor Rule Set containing this Frontdoor Rule.
     * 
     */
    public Output<String> cdnFrontdoorRuleSetName() {
        return this.cdnFrontdoorRuleSetName;
    }
    /**
     * An `conditions` block as defined below.
     * 
     */
    @Export(name="conditions", type=FrontdoorRuleConditions.class, parameters={})
    private Output</* @Nullable */ FrontdoorRuleConditions> conditions;

    /**
     * @return An `conditions` block as defined below.
     * 
     */
    public Output<Optional<FrontdoorRuleConditions>> conditions() {
        return Codegen.optional(this.conditions);
    }
    /**
     * The name which should be used for this Frontdoor Rule. Possible values must be between 1 and 260 characters in length, begin with a letter and may contain only letters and numbers. Changing this forces a new Frontdoor Rule to be created.
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return The name which should be used for this Frontdoor Rule. Possible values must be between 1 and 260 characters in length, begin with a letter and may contain only letters and numbers. Changing this forces a new Frontdoor Rule to be created.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The order in which the rules will be applied for the Frontdoor Endpoint. The order value should be sequential and begin at `1`(e.g. `1`, `2`, `3`...). A Frontdoor Rule with a lesser order value will be applied before a rule with a greater order value.
     * 
     */
    @Export(name="order", type=Integer.class, parameters={})
    private Output<Integer> order;

    /**
     * @return The order in which the rules will be applied for the Frontdoor Endpoint. The order value should be sequential and begin at `1`(e.g. `1`, `2`, `3`...). A Frontdoor Rule with a lesser order value will be applied before a rule with a greater order value.
     * 
     */
    public Output<Integer> order() {
        return this.order;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public FrontdoorRule(String name) {
        this(name, FrontdoorRuleArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public FrontdoorRule(String name, FrontdoorRuleArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public FrontdoorRule(String name, FrontdoorRuleArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:cdn/frontdoorRule:FrontdoorRule", name, args == null ? FrontdoorRuleArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private FrontdoorRule(String name, Output<String> id, @Nullable FrontdoorRuleState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:cdn/frontdoorRule:FrontdoorRule", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static FrontdoorRule get(String name, Output<String> id, @Nullable FrontdoorRuleState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new FrontdoorRule(name, id, state, options);
    }
}
