// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.backup.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ProtectedFileShareState extends com.pulumi.resources.ResourceArgs {

    public static final ProtectedFileShareState Empty = new ProtectedFileShareState();

    /**
     * Specifies the ID of the backup policy to use. The policy must be an Azure File Share backup policy. Other types are not supported.
     * 
     */
    @Import(name="backupPolicyId")
    private @Nullable Output<String> backupPolicyId;

    /**
     * @return Specifies the ID of the backup policy to use. The policy must be an Azure File Share backup policy. Other types are not supported.
     * 
     */
    public Optional<Output<String>> backupPolicyId() {
        return Optional.ofNullable(this.backupPolicyId);
    }

    /**
     * Specifies the name of the Recovery Services Vault to use. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="recoveryVaultName")
    private @Nullable Output<String> recoveryVaultName;

    /**
     * @return Specifies the name of the Recovery Services Vault to use. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> recoveryVaultName() {
        return Optional.ofNullable(this.recoveryVaultName);
    }

    /**
     * The name of the resource group in which to create the Azure Backup Protected File Share. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="resourceGroupName")
    private @Nullable Output<String> resourceGroupName;

    /**
     * @return The name of the resource group in which to create the Azure Backup Protected File Share. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> resourceGroupName() {
        return Optional.ofNullable(this.resourceGroupName);
    }

    /**
     * Specifies the name of the file share to backup. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="sourceFileShareName")
    private @Nullable Output<String> sourceFileShareName;

    /**
     * @return Specifies the name of the file share to backup. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> sourceFileShareName() {
        return Optional.ofNullable(this.sourceFileShareName);
    }

    /**
     * Specifies the ID of the storage account of the file share to backup. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="sourceStorageAccountId")
    private @Nullable Output<String> sourceStorageAccountId;

    /**
     * @return Specifies the ID of the storage account of the file share to backup. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> sourceStorageAccountId() {
        return Optional.ofNullable(this.sourceStorageAccountId);
    }

    private ProtectedFileShareState() {}

    private ProtectedFileShareState(ProtectedFileShareState $) {
        this.backupPolicyId = $.backupPolicyId;
        this.recoveryVaultName = $.recoveryVaultName;
        this.resourceGroupName = $.resourceGroupName;
        this.sourceFileShareName = $.sourceFileShareName;
        this.sourceStorageAccountId = $.sourceStorageAccountId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ProtectedFileShareState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ProtectedFileShareState $;

        public Builder() {
            $ = new ProtectedFileShareState();
        }

        public Builder(ProtectedFileShareState defaults) {
            $ = new ProtectedFileShareState(Objects.requireNonNull(defaults));
        }

        /**
         * @param backupPolicyId Specifies the ID of the backup policy to use. The policy must be an Azure File Share backup policy. Other types are not supported.
         * 
         * @return builder
         * 
         */
        public Builder backupPolicyId(@Nullable Output<String> backupPolicyId) {
            $.backupPolicyId = backupPolicyId;
            return this;
        }

        /**
         * @param backupPolicyId Specifies the ID of the backup policy to use. The policy must be an Azure File Share backup policy. Other types are not supported.
         * 
         * @return builder
         * 
         */
        public Builder backupPolicyId(String backupPolicyId) {
            return backupPolicyId(Output.of(backupPolicyId));
        }

        /**
         * @param recoveryVaultName Specifies the name of the Recovery Services Vault to use. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder recoveryVaultName(@Nullable Output<String> recoveryVaultName) {
            $.recoveryVaultName = recoveryVaultName;
            return this;
        }

        /**
         * @param recoveryVaultName Specifies the name of the Recovery Services Vault to use. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder recoveryVaultName(String recoveryVaultName) {
            return recoveryVaultName(Output.of(recoveryVaultName));
        }

        /**
         * @param resourceGroupName The name of the resource group in which to create the Azure Backup Protected File Share. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(@Nullable Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName The name of the resource group in which to create the Azure Backup Protected File Share. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        /**
         * @param sourceFileShareName Specifies the name of the file share to backup. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder sourceFileShareName(@Nullable Output<String> sourceFileShareName) {
            $.sourceFileShareName = sourceFileShareName;
            return this;
        }

        /**
         * @param sourceFileShareName Specifies the name of the file share to backup. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder sourceFileShareName(String sourceFileShareName) {
            return sourceFileShareName(Output.of(sourceFileShareName));
        }

        /**
         * @param sourceStorageAccountId Specifies the ID of the storage account of the file share to backup. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder sourceStorageAccountId(@Nullable Output<String> sourceStorageAccountId) {
            $.sourceStorageAccountId = sourceStorageAccountId;
            return this;
        }

        /**
         * @param sourceStorageAccountId Specifies the ID of the storage account of the file share to backup. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder sourceStorageAccountId(String sourceStorageAccountId) {
            return sourceStorageAccountId(Output.of(sourceStorageAccountId));
        }

        public ProtectedFileShareState build() {
            return $;
        }
    }

}
