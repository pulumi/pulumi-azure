// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.network.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class NetworkManagerAdminRuleDestinationArgs extends com.pulumi.resources.ResourceArgs {

    public static final NetworkManagerAdminRuleDestinationArgs Empty = new NetworkManagerAdminRuleDestinationArgs();

    /**
     * Specifies the address prefix.
     * 
     */
    @Import(name="addressPrefix", required=true)
    private Output<String> addressPrefix;

    /**
     * @return Specifies the address prefix.
     * 
     */
    public Output<String> addressPrefix() {
        return this.addressPrefix;
    }

    /**
     * Specifies the address prefix type. Possible values are `IPPrefix` and `ServiceTag`. For more information, please see [this document](https://learn.microsoft.com/en-us/azure/virtual-network-manager/concept-security-admins#source-and-destination-types).
     * 
     */
    @Import(name="addressPrefixType", required=true)
    private Output<String> addressPrefixType;

    /**
     * @return Specifies the address prefix type. Possible values are `IPPrefix` and `ServiceTag`. For more information, please see [this document](https://learn.microsoft.com/en-us/azure/virtual-network-manager/concept-security-admins#source-and-destination-types).
     * 
     */
    public Output<String> addressPrefixType() {
        return this.addressPrefixType;
    }

    private NetworkManagerAdminRuleDestinationArgs() {}

    private NetworkManagerAdminRuleDestinationArgs(NetworkManagerAdminRuleDestinationArgs $) {
        this.addressPrefix = $.addressPrefix;
        this.addressPrefixType = $.addressPrefixType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(NetworkManagerAdminRuleDestinationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private NetworkManagerAdminRuleDestinationArgs $;

        public Builder() {
            $ = new NetworkManagerAdminRuleDestinationArgs();
        }

        public Builder(NetworkManagerAdminRuleDestinationArgs defaults) {
            $ = new NetworkManagerAdminRuleDestinationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param addressPrefix Specifies the address prefix.
         * 
         * @return builder
         * 
         */
        public Builder addressPrefix(Output<String> addressPrefix) {
            $.addressPrefix = addressPrefix;
            return this;
        }

        /**
         * @param addressPrefix Specifies the address prefix.
         * 
         * @return builder
         * 
         */
        public Builder addressPrefix(String addressPrefix) {
            return addressPrefix(Output.of(addressPrefix));
        }

        /**
         * @param addressPrefixType Specifies the address prefix type. Possible values are `IPPrefix` and `ServiceTag`. For more information, please see [this document](https://learn.microsoft.com/en-us/azure/virtual-network-manager/concept-security-admins#source-and-destination-types).
         * 
         * @return builder
         * 
         */
        public Builder addressPrefixType(Output<String> addressPrefixType) {
            $.addressPrefixType = addressPrefixType;
            return this;
        }

        /**
         * @param addressPrefixType Specifies the address prefix type. Possible values are `IPPrefix` and `ServiceTag`. For more information, please see [this document](https://learn.microsoft.com/en-us/azure/virtual-network-manager/concept-security-admins#source-and-destination-types).
         * 
         * @return builder
         * 
         */
        public Builder addressPrefixType(String addressPrefixType) {
            return addressPrefixType(Output.of(addressPrefixType));
        }

        public NetworkManagerAdminRuleDestinationArgs build() {
            if ($.addressPrefix == null) {
                throw new MissingRequiredPropertyException("NetworkManagerAdminRuleDestinationArgs", "addressPrefix");
            }
            if ($.addressPrefixType == null) {
                throw new MissingRequiredPropertyException("NetworkManagerAdminRuleDestinationArgs", "addressPrefixType");
            }
            return $;
        }
    }

}
