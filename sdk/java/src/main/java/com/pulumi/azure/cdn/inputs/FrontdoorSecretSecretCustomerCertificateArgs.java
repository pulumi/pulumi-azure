// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.cdn.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class FrontdoorSecretSecretCustomerCertificateArgs extends com.pulumi.resources.ResourceArgs {

    public static final FrontdoorSecretSecretCustomerCertificateArgs Empty = new FrontdoorSecretSecretCustomerCertificateArgs();

    /**
     * The ID of the Key Vault certificate resource to use. Changing this forces a new Front Door Secret to be created.
     * 
     * -&gt;**NOTE:** If you would like to use the **latest version** of the Key Vault Certificate use the Key Vault Certificates `versionless_id` attribute as the `key_vault_certificate_id` fields value(e.g. `key_vault_certificate_id = azurerm_key_vault_certificate.example.versionless_id`).
     * 
     */
    @Import(name="keyVaultCertificateId", required=true)
    private Output<String> keyVaultCertificateId;

    /**
     * @return The ID of the Key Vault certificate resource to use. Changing this forces a new Front Door Secret to be created.
     * 
     * -&gt;**NOTE:** If you would like to use the **latest version** of the Key Vault Certificate use the Key Vault Certificates `versionless_id` attribute as the `key_vault_certificate_id` fields value(e.g. `key_vault_certificate_id = azurerm_key_vault_certificate.example.versionless_id`).
     * 
     */
    public Output<String> keyVaultCertificateId() {
        return this.keyVaultCertificateId;
    }

    /**
     * One or more `subject alternative names` contained within the key vault certificate.
     * 
     */
    @Import(name="subjectAlternativeNames")
    private @Nullable Output<List<String>> subjectAlternativeNames;

    /**
     * @return One or more `subject alternative names` contained within the key vault certificate.
     * 
     */
    public Optional<Output<List<String>>> subjectAlternativeNames() {
        return Optional.ofNullable(this.subjectAlternativeNames);
    }

    private FrontdoorSecretSecretCustomerCertificateArgs() {}

    private FrontdoorSecretSecretCustomerCertificateArgs(FrontdoorSecretSecretCustomerCertificateArgs $) {
        this.keyVaultCertificateId = $.keyVaultCertificateId;
        this.subjectAlternativeNames = $.subjectAlternativeNames;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FrontdoorSecretSecretCustomerCertificateArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FrontdoorSecretSecretCustomerCertificateArgs $;

        public Builder() {
            $ = new FrontdoorSecretSecretCustomerCertificateArgs();
        }

        public Builder(FrontdoorSecretSecretCustomerCertificateArgs defaults) {
            $ = new FrontdoorSecretSecretCustomerCertificateArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param keyVaultCertificateId The ID of the Key Vault certificate resource to use. Changing this forces a new Front Door Secret to be created.
         * 
         * -&gt;**NOTE:** If you would like to use the **latest version** of the Key Vault Certificate use the Key Vault Certificates `versionless_id` attribute as the `key_vault_certificate_id` fields value(e.g. `key_vault_certificate_id = azurerm_key_vault_certificate.example.versionless_id`).
         * 
         * @return builder
         * 
         */
        public Builder keyVaultCertificateId(Output<String> keyVaultCertificateId) {
            $.keyVaultCertificateId = keyVaultCertificateId;
            return this;
        }

        /**
         * @param keyVaultCertificateId The ID of the Key Vault certificate resource to use. Changing this forces a new Front Door Secret to be created.
         * 
         * -&gt;**NOTE:** If you would like to use the **latest version** of the Key Vault Certificate use the Key Vault Certificates `versionless_id` attribute as the `key_vault_certificate_id` fields value(e.g. `key_vault_certificate_id = azurerm_key_vault_certificate.example.versionless_id`).
         * 
         * @return builder
         * 
         */
        public Builder keyVaultCertificateId(String keyVaultCertificateId) {
            return keyVaultCertificateId(Output.of(keyVaultCertificateId));
        }

        /**
         * @param subjectAlternativeNames One or more `subject alternative names` contained within the key vault certificate.
         * 
         * @return builder
         * 
         */
        public Builder subjectAlternativeNames(@Nullable Output<List<String>> subjectAlternativeNames) {
            $.subjectAlternativeNames = subjectAlternativeNames;
            return this;
        }

        /**
         * @param subjectAlternativeNames One or more `subject alternative names` contained within the key vault certificate.
         * 
         * @return builder
         * 
         */
        public Builder subjectAlternativeNames(List<String> subjectAlternativeNames) {
            return subjectAlternativeNames(Output.of(subjectAlternativeNames));
        }

        /**
         * @param subjectAlternativeNames One or more `subject alternative names` contained within the key vault certificate.
         * 
         * @return builder
         * 
         */
        public Builder subjectAlternativeNames(String... subjectAlternativeNames) {
            return subjectAlternativeNames(List.of(subjectAlternativeNames));
        }

        public FrontdoorSecretSecretCustomerCertificateArgs build() {
            if ($.keyVaultCertificateId == null) {
                throw new MissingRequiredPropertyException("FrontdoorSecretSecretCustomerCertificateArgs", "keyVaultCertificateId");
            }
            return $;
        }
    }

}
