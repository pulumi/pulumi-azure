// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.netapp;

import com.pulumi.azure.Utilities;
import com.pulumi.azure.netapp.VolumeGroupSapHanaArgs;
import com.pulumi.azure.netapp.inputs.VolumeGroupSapHanaState;
import com.pulumi.azure.netapp.outputs.VolumeGroupSapHanaVolume;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;

/**
 * ## Example Usage
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.random.RandomString;
 * import com.pulumi.random.RandomStringArgs;
 * import com.pulumi.azure.core.ResourceGroup;
 * import com.pulumi.azure.core.ResourceGroupArgs;
 * import com.pulumi.azure.network_virtualNetwork.VirtualNetwork;
 * import com.pulumi.azure.network_virtualNetwork.VirtualNetworkArgs;
 * import com.pulumi.azure.network.Subnet;
 * import com.pulumi.azure.network.SubnetArgs;
 * import com.pulumi.azure.proximity.PlacementGroup;
 * import com.pulumi.azure.proximity.PlacementGroupArgs;
 * import com.pulumi.azure.compute.AvailabilitySet;
 * import com.pulumi.azure.compute.AvailabilitySetArgs;
 * import com.pulumi.azure.network.NetworkInterface;
 * import com.pulumi.azure.network.NetworkInterfaceArgs;
 * import com.pulumi.azure.compute.LinuxVirtualMachine;
 * import com.pulumi.azure.compute.LinuxVirtualMachineArgs;
 * import com.pulumi.azure.netapp.Account;
 * import com.pulumi.azure.netapp.AccountArgs;
 * import com.pulumi.azure.netapp.Pool;
 * import com.pulumi.azure.netapp.PoolArgs;
 * import com.pulumi.azure.netapp_volumeGroupSapHana.VolumeGroupSapHana;
 * import com.pulumi.azure.netapp_volumeGroupSapHana.VolumeGroupSapHanaArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new RandomString(&#34;example&#34;, RandomStringArgs.builder()        
 *             .length(12)
 *             .special(true)
 *             .build());
 * 
 *         final var adminUsername = &#34;exampleadmin&#34;;
 * 
 *         final var adminPassword = example.result();
 * 
 *         var exampleResourceGroup = new ResourceGroup(&#34;exampleResourceGroup&#34;, ResourceGroupArgs.builder()        
 *             .name(String.format(&#34;%s-resources&#34;, prefix))
 *             .location(location)
 *             .build());
 * 
 *         var exampleVirtualNetwork = new VirtualNetwork(&#34;exampleVirtualNetwork&#34;, VirtualNetworkArgs.builder()        
 *             .name(String.format(&#34;%s-vnet&#34;, prefix))
 *             .location(exampleResourceGroup.location())
 *             .resourceGroupName(exampleResourceGroup.name())
 *             .addressSpaces(&#34;10.6.0.0/16&#34;)
 *             .build());
 * 
 *         var exampleSubnet = new Subnet(&#34;exampleSubnet&#34;, SubnetArgs.builder()        
 *             .name(String.format(&#34;%s-delegated-subnet&#34;, prefix))
 *             .resourceGroupName(exampleResourceGroup.name())
 *             .virtualNetworkName(exampleVirtualNetwork.name())
 *             .addressPrefixes(&#34;10.6.2.0/24&#34;)
 *             .delegations(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference))
 *             .build());
 * 
 *         var example1 = new Subnet(&#34;example1&#34;, SubnetArgs.builder()        
 *             .name(String.format(&#34;%s-hosts-subnet&#34;, prefix))
 *             .resourceGroupName(exampleResourceGroup.name())
 *             .virtualNetworkName(exampleVirtualNetwork.name())
 *             .addressPrefixes(&#34;10.6.1.0/24&#34;)
 *             .build());
 * 
 *         var examplePlacementGroup = new PlacementGroup(&#34;examplePlacementGroup&#34;, PlacementGroupArgs.builder()        
 *             .name(String.format(&#34;%s-ppg&#34;, prefix))
 *             .location(exampleResourceGroup.location())
 *             .resourceGroupName(exampleResourceGroup.name())
 *             .build());
 * 
 *         var exampleAvailabilitySet = new AvailabilitySet(&#34;exampleAvailabilitySet&#34;, AvailabilitySetArgs.builder()        
 *             .name(String.format(&#34;%s-avset&#34;, prefix))
 *             .location(exampleResourceGroup.location())
 *             .resourceGroupName(exampleResourceGroup.name())
 *             .proximityPlacementGroupId(examplePlacementGroup.id())
 *             .build());
 * 
 *         var exampleNetworkInterface = new NetworkInterface(&#34;exampleNetworkInterface&#34;, NetworkInterfaceArgs.builder()        
 *             .name(String.format(&#34;%s-nic&#34;, prefix))
 *             .resourceGroupName(exampleResourceGroup.name())
 *             .location(exampleResourceGroup.location())
 *             .ipConfigurations(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference))
 *             .build());
 * 
 *         var exampleLinuxVirtualMachine = new LinuxVirtualMachine(&#34;exampleLinuxVirtualMachine&#34;, LinuxVirtualMachineArgs.builder()        
 *             .name(String.format(&#34;%s-vm&#34;, prefix))
 *             .resourceGroupName(exampleResourceGroup.name())
 *             .location(exampleResourceGroup.location())
 *             .size(&#34;Standard_M8ms&#34;)
 *             .adminUsername(adminUsername)
 *             .adminPassword(adminPassword)
 *             .disablePasswordAuthentication(false)
 *             .proximityPlacementGroupId(examplePlacementGroup.id())
 *             .availabilitySetId(exampleAvailabilitySet.id())
 *             .networkInterfaceIds(exampleNetworkInterface.id())
 *             .sourceImageReference(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference))
 *             .osDisk(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference))
 *             .build());
 * 
 *         var exampleAccount = new Account(&#34;exampleAccount&#34;, AccountArgs.builder()        
 *             .name(String.format(&#34;%s-netapp-account&#34;, prefix))
 *             .location(exampleResourceGroup.location())
 *             .resourceGroupName(exampleResourceGroup.name())
 *             .build());
 * 
 *         var examplePool = new Pool(&#34;examplePool&#34;, PoolArgs.builder()        
 *             .name(String.format(&#34;%s-netapp-pool&#34;, prefix))
 *             .location(exampleResourceGroup.location())
 *             .resourceGroupName(exampleResourceGroup.name())
 *             .accountName(exampleAccount.name())
 *             .serviceLevel(&#34;Standard&#34;)
 *             .sizeInTb(8)
 *             .qosType(&#34;Manual&#34;)
 *             .build());
 * 
 *         var exampleVolumeGroupSapHana = new VolumeGroupSapHana(&#34;exampleVolumeGroupSapHana&#34;, VolumeGroupSapHanaArgs.builder()        
 *             .name(String.format(&#34;%s-netapp-volumegroup&#34;, prefix))
 *             .location(exampleResourceGroup.location())
 *             .resourceGroupName(exampleResourceGroup.name())
 *             .accountName(exampleAccount.name())
 *             .groupDescription(&#34;Test volume group&#34;)
 *             .applicationIdentifier(&#34;TST&#34;)
 *             .volumes(            
 *                 %!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference),
 *                 %!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference),
 *                 %!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference))
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * Application Volume Groups can be imported using the `resource id`, e.g.
 * 
 * ```sh
 * $ pulumi import azure:netapp/volumeGroupSapHana:VolumeGroupSapHana example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/mytest-rg/providers/Microsoft.NetApp/netAppAccounts/netapp-account-test/volumeGroups/netapp-volumegroup-test
 * ```
 * 
 */
@ResourceType(type="azure:netapp/volumeGroupSapHana:VolumeGroupSapHana")
public class VolumeGroupSapHana extends com.pulumi.resources.CustomResource {
    /**
     * Name of the account where the application volume group belong to. Changing this forces a new Application Volume Group to be created and data will be lost.
     * 
     */
    @Export(name="accountName", refs={String.class}, tree="[0]")
    private Output<String> accountName;

    /**
     * @return Name of the account where the application volume group belong to. Changing this forces a new Application Volume Group to be created and data will be lost.
     * 
     */
    public Output<String> accountName() {
        return this.accountName;
    }
    /**
     * The SAP System ID, maximum 3 characters, e.g. `SH9`. Changing this forces a new Application Volume Group to be created and data will be lost.
     * 
     */
    @Export(name="applicationIdentifier", refs={String.class}, tree="[0]")
    private Output<String> applicationIdentifier;

    /**
     * @return The SAP System ID, maximum 3 characters, e.g. `SH9`. Changing this forces a new Application Volume Group to be created and data will be lost.
     * 
     */
    public Output<String> applicationIdentifier() {
        return this.applicationIdentifier;
    }
    /**
     * Volume group description. Changing this forces a new Application Volume Group to be created and data will be lost.
     * 
     */
    @Export(name="groupDescription", refs={String.class}, tree="[0]")
    private Output<String> groupDescription;

    /**
     * @return Volume group description. Changing this forces a new Application Volume Group to be created and data will be lost.
     * 
     */
    public Output<String> groupDescription() {
        return this.groupDescription;
    }
    /**
     * The Azure Region where the Application Volume Group should exist. Changing this forces a new Application Volume Group to be created and data will be lost.
     * 
     */
    @Export(name="location", refs={String.class}, tree="[0]")
    private Output<String> location;

    /**
     * @return The Azure Region where the Application Volume Group should exist. Changing this forces a new Application Volume Group to be created and data will be lost.
     * 
     */
    public Output<String> location() {
        return this.location;
    }
    /**
     * The name which should be used for this Application Volume Group. Changing this forces a new Application Volume Group to be created and data will be lost.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The name which should be used for this Application Volume Group. Changing this forces a new Application Volume Group to be created and data will be lost.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The name of the Resource Group where the Application Volume Group should exist. Changing this forces a new Application Volume Group to be created and data will be lost.
     * 
     */
    @Export(name="resourceGroupName", refs={String.class}, tree="[0]")
    private Output<String> resourceGroupName;

    /**
     * @return The name of the Resource Group where the Application Volume Group should exist. Changing this forces a new Application Volume Group to be created and data will be lost.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }
    /**
     * One or more `volume` blocks as defined below.
     * 
     */
    @Export(name="volumes", refs={List.class,VolumeGroupSapHanaVolume.class}, tree="[0,1]")
    private Output<List<VolumeGroupSapHanaVolume>> volumes;

    /**
     * @return One or more `volume` blocks as defined below.
     * 
     */
    public Output<List<VolumeGroupSapHanaVolume>> volumes() {
        return this.volumes;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public VolumeGroupSapHana(String name) {
        this(name, VolumeGroupSapHanaArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public VolumeGroupSapHana(String name, VolumeGroupSapHanaArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public VolumeGroupSapHana(String name, VolumeGroupSapHanaArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:netapp/volumeGroupSapHana:VolumeGroupSapHana", name, args == null ? VolumeGroupSapHanaArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private VolumeGroupSapHana(String name, Output<String> id, @Nullable VolumeGroupSapHanaState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:netapp/volumeGroupSapHana:VolumeGroupSapHana", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static VolumeGroupSapHana get(String name, Output<String> id, @Nullable VolumeGroupSapHanaState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new VolumeGroupSapHana(name, id, state, options);
    }
}
