// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.network.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class NetworkWatcherFlowLogTrafficAnalyticsArgs extends com.pulumi.resources.ResourceArgs {

    public static final NetworkWatcherFlowLogTrafficAnalyticsArgs Empty = new NetworkWatcherFlowLogTrafficAnalyticsArgs();

    /**
     * Boolean flag to enable/disable traffic analytics.
     * 
     */
    @Import(name="enabled", required=true)
    private Output<Boolean> enabled;

    /**
     * @return Boolean flag to enable/disable traffic analytics.
     * 
     */
    public Output<Boolean> enabled() {
        return this.enabled;
    }

    /**
     * How frequently service should do flow analytics in minutes.
     * 
     */
    @Import(name="intervalInMinutes")
    private @Nullable Output<Integer> intervalInMinutes;

    /**
     * @return How frequently service should do flow analytics in minutes.
     * 
     */
    public Optional<Output<Integer>> intervalInMinutes() {
        return Optional.ofNullable(this.intervalInMinutes);
    }

    /**
     * The resource GUID of the attached workspace.
     * 
     */
    @Import(name="workspaceId", required=true)
    private Output<String> workspaceId;

    /**
     * @return The resource GUID of the attached workspace.
     * 
     */
    public Output<String> workspaceId() {
        return this.workspaceId;
    }

    /**
     * The location of the attached workspace.
     * 
     */
    @Import(name="workspaceRegion", required=true)
    private Output<String> workspaceRegion;

    /**
     * @return The location of the attached workspace.
     * 
     */
    public Output<String> workspaceRegion() {
        return this.workspaceRegion;
    }

    /**
     * The resource ID of the attached workspace.
     * 
     */
    @Import(name="workspaceResourceId", required=true)
    private Output<String> workspaceResourceId;

    /**
     * @return The resource ID of the attached workspace.
     * 
     */
    public Output<String> workspaceResourceId() {
        return this.workspaceResourceId;
    }

    private NetworkWatcherFlowLogTrafficAnalyticsArgs() {}

    private NetworkWatcherFlowLogTrafficAnalyticsArgs(NetworkWatcherFlowLogTrafficAnalyticsArgs $) {
        this.enabled = $.enabled;
        this.intervalInMinutes = $.intervalInMinutes;
        this.workspaceId = $.workspaceId;
        this.workspaceRegion = $.workspaceRegion;
        this.workspaceResourceId = $.workspaceResourceId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(NetworkWatcherFlowLogTrafficAnalyticsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private NetworkWatcherFlowLogTrafficAnalyticsArgs $;

        public Builder() {
            $ = new NetworkWatcherFlowLogTrafficAnalyticsArgs();
        }

        public Builder(NetworkWatcherFlowLogTrafficAnalyticsArgs defaults) {
            $ = new NetworkWatcherFlowLogTrafficAnalyticsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param enabled Boolean flag to enable/disable traffic analytics.
         * 
         * @return builder
         * 
         */
        public Builder enabled(Output<Boolean> enabled) {
            $.enabled = enabled;
            return this;
        }

        /**
         * @param enabled Boolean flag to enable/disable traffic analytics.
         * 
         * @return builder
         * 
         */
        public Builder enabled(Boolean enabled) {
            return enabled(Output.of(enabled));
        }

        /**
         * @param intervalInMinutes How frequently service should do flow analytics in minutes.
         * 
         * @return builder
         * 
         */
        public Builder intervalInMinutes(@Nullable Output<Integer> intervalInMinutes) {
            $.intervalInMinutes = intervalInMinutes;
            return this;
        }

        /**
         * @param intervalInMinutes How frequently service should do flow analytics in minutes.
         * 
         * @return builder
         * 
         */
        public Builder intervalInMinutes(Integer intervalInMinutes) {
            return intervalInMinutes(Output.of(intervalInMinutes));
        }

        /**
         * @param workspaceId The resource GUID of the attached workspace.
         * 
         * @return builder
         * 
         */
        public Builder workspaceId(Output<String> workspaceId) {
            $.workspaceId = workspaceId;
            return this;
        }

        /**
         * @param workspaceId The resource GUID of the attached workspace.
         * 
         * @return builder
         * 
         */
        public Builder workspaceId(String workspaceId) {
            return workspaceId(Output.of(workspaceId));
        }

        /**
         * @param workspaceRegion The location of the attached workspace.
         * 
         * @return builder
         * 
         */
        public Builder workspaceRegion(Output<String> workspaceRegion) {
            $.workspaceRegion = workspaceRegion;
            return this;
        }

        /**
         * @param workspaceRegion The location of the attached workspace.
         * 
         * @return builder
         * 
         */
        public Builder workspaceRegion(String workspaceRegion) {
            return workspaceRegion(Output.of(workspaceRegion));
        }

        /**
         * @param workspaceResourceId The resource ID of the attached workspace.
         * 
         * @return builder
         * 
         */
        public Builder workspaceResourceId(Output<String> workspaceResourceId) {
            $.workspaceResourceId = workspaceResourceId;
            return this;
        }

        /**
         * @param workspaceResourceId The resource ID of the attached workspace.
         * 
         * @return builder
         * 
         */
        public Builder workspaceResourceId(String workspaceResourceId) {
            return workspaceResourceId(Output.of(workspaceResourceId));
        }

        public NetworkWatcherFlowLogTrafficAnalyticsArgs build() {
            $.enabled = Objects.requireNonNull($.enabled, "expected parameter 'enabled' to be non-null");
            $.workspaceId = Objects.requireNonNull($.workspaceId, "expected parameter 'workspaceId' to be non-null");
            $.workspaceRegion = Objects.requireNonNull($.workspaceRegion, "expected parameter 'workspaceRegion' to be non-null");
            $.workspaceResourceId = Objects.requireNonNull($.workspaceResourceId, "expected parameter 'workspaceResourceId' to be non-null");
            return $;
        }
    }

}
