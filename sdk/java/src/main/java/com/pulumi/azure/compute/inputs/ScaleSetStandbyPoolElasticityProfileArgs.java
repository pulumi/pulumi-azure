// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.compute.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.util.Objects;


public final class ScaleSetStandbyPoolElasticityProfileArgs extends com.pulumi.resources.ResourceArgs {

    public static final ScaleSetStandbyPoolElasticityProfileArgs Empty = new ScaleSetStandbyPoolElasticityProfileArgs();

    /**
     * Specifies the maximum number of virtual machines in the standby pool.
     * 
     */
    @Import(name="maxReadyCapacity", required=true)
    private Output<Integer> maxReadyCapacity;

    /**
     * @return Specifies the maximum number of virtual machines in the standby pool.
     * 
     */
    public Output<Integer> maxReadyCapacity() {
        return this.maxReadyCapacity;
    }

    /**
     * Specifies the desired minimum number of virtual machines in the standby pool.
     * 
     * &gt; **Note:** `min_ready_capacity` cannot exceed `max_ready_capacity`.
     * 
     */
    @Import(name="minReadyCapacity", required=true)
    private Output<Integer> minReadyCapacity;

    /**
     * @return Specifies the desired minimum number of virtual machines in the standby pool.
     * 
     * &gt; **Note:** `min_ready_capacity` cannot exceed `max_ready_capacity`.
     * 
     */
    public Output<Integer> minReadyCapacity() {
        return this.minReadyCapacity;
    }

    private ScaleSetStandbyPoolElasticityProfileArgs() {}

    private ScaleSetStandbyPoolElasticityProfileArgs(ScaleSetStandbyPoolElasticityProfileArgs $) {
        this.maxReadyCapacity = $.maxReadyCapacity;
        this.minReadyCapacity = $.minReadyCapacity;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ScaleSetStandbyPoolElasticityProfileArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ScaleSetStandbyPoolElasticityProfileArgs $;

        public Builder() {
            $ = new ScaleSetStandbyPoolElasticityProfileArgs();
        }

        public Builder(ScaleSetStandbyPoolElasticityProfileArgs defaults) {
            $ = new ScaleSetStandbyPoolElasticityProfileArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param maxReadyCapacity Specifies the maximum number of virtual machines in the standby pool.
         * 
         * @return builder
         * 
         */
        public Builder maxReadyCapacity(Output<Integer> maxReadyCapacity) {
            $.maxReadyCapacity = maxReadyCapacity;
            return this;
        }

        /**
         * @param maxReadyCapacity Specifies the maximum number of virtual machines in the standby pool.
         * 
         * @return builder
         * 
         */
        public Builder maxReadyCapacity(Integer maxReadyCapacity) {
            return maxReadyCapacity(Output.of(maxReadyCapacity));
        }

        /**
         * @param minReadyCapacity Specifies the desired minimum number of virtual machines in the standby pool.
         * 
         * &gt; **Note:** `min_ready_capacity` cannot exceed `max_ready_capacity`.
         * 
         * @return builder
         * 
         */
        public Builder minReadyCapacity(Output<Integer> minReadyCapacity) {
            $.minReadyCapacity = minReadyCapacity;
            return this;
        }

        /**
         * @param minReadyCapacity Specifies the desired minimum number of virtual machines in the standby pool.
         * 
         * &gt; **Note:** `min_ready_capacity` cannot exceed `max_ready_capacity`.
         * 
         * @return builder
         * 
         */
        public Builder minReadyCapacity(Integer minReadyCapacity) {
            return minReadyCapacity(Output.of(minReadyCapacity));
        }

        public ScaleSetStandbyPoolElasticityProfileArgs build() {
            if ($.maxReadyCapacity == null) {
                throw new MissingRequiredPropertyException("ScaleSetStandbyPoolElasticityProfileArgs", "maxReadyCapacity");
            }
            if ($.minReadyCapacity == null) {
                throw new MissingRequiredPropertyException("ScaleSetStandbyPoolElasticityProfileArgs", "minReadyCapacity");
            }
            return $;
        }
    }

}
