// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.appservice;

import com.pulumi.azure.appservice.inputs.StaticWebAppBasicAuthArgs;
import com.pulumi.azure.appservice.inputs.StaticWebAppIdentityArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class StaticWebAppArgs extends com.pulumi.resources.ResourceArgs {

    public static final StaticWebAppArgs Empty = new StaticWebAppArgs();

    /**
     * A key-value pair of App Settings.
     * 
     */
    @Import(name="appSettings")
    private @Nullable Output<Map<String,String>> appSettings;

    /**
     * @return A key-value pair of App Settings.
     * 
     */
    public Optional<Output<Map<String,String>>> appSettings() {
        return Optional.ofNullable(this.appSettings);
    }

    /**
     * A `basic_auth` block as defined below.
     * 
     */
    @Import(name="basicAuth")
    private @Nullable Output<StaticWebAppBasicAuthArgs> basicAuth;

    /**
     * @return A `basic_auth` block as defined below.
     * 
     */
    public Optional<Output<StaticWebAppBasicAuthArgs>> basicAuth() {
        return Optional.ofNullable(this.basicAuth);
    }

    /**
     * Should changes to the configuration file be permitted. Defaults to `true`.
     * 
     */
    @Import(name="configurationFileChangesEnabled")
    private @Nullable Output<Boolean> configurationFileChangesEnabled;

    /**
     * @return Should changes to the configuration file be permitted. Defaults to `true`.
     * 
     */
    public Optional<Output<Boolean>> configurationFileChangesEnabled() {
        return Optional.ofNullable(this.configurationFileChangesEnabled);
    }

    /**
     * An `identity` block as defined below.
     * 
     */
    @Import(name="identity")
    private @Nullable Output<StaticWebAppIdentityArgs> identity;

    /**
     * @return An `identity` block as defined below.
     * 
     */
    public Optional<Output<StaticWebAppIdentityArgs>> identity() {
        return Optional.ofNullable(this.identity);
    }

    /**
     * The Azure Region where the Static Web App should exist. Changing this forces a new Static Web App to be created.
     * 
     */
    @Import(name="location")
    private @Nullable Output<String> location;

    /**
     * @return The Azure Region where the Static Web App should exist. Changing this forces a new Static Web App to be created.
     * 
     */
    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * The name which should be used for this Static Web App. Changing this forces a new Static Web App to be created.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name which should be used for this Static Web App. Changing this forces a new Static Web App to be created.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Are Preview (Staging) environments enabled. Defaults to `true`.
     * 
     */
    @Import(name="previewEnvironmentsEnabled")
    private @Nullable Output<Boolean> previewEnvironmentsEnabled;

    /**
     * @return Are Preview (Staging) environments enabled. Defaults to `true`.
     * 
     */
    public Optional<Output<Boolean>> previewEnvironmentsEnabled() {
        return Optional.ofNullable(this.previewEnvironmentsEnabled);
    }

    /**
     * Should public network access be enabled for the Static Web App. Defaults to `true`.
     * 
     */
    @Import(name="publicNetworkAccessEnabled")
    private @Nullable Output<Boolean> publicNetworkAccessEnabled;

    /**
     * @return Should public network access be enabled for the Static Web App. Defaults to `true`.
     * 
     */
    public Optional<Output<Boolean>> publicNetworkAccessEnabled() {
        return Optional.ofNullable(this.publicNetworkAccessEnabled);
    }

    /**
     * Repository branch to use for the Static Web App. `repository_url` and `repository_token` must also be set.
     * 
     */
    @Import(name="repositoryBranch")
    private @Nullable Output<String> repositoryBranch;

    /**
     * @return Repository branch to use for the Static Web App. `repository_url` and `repository_token` must also be set.
     * 
     */
    public Optional<Output<String>> repositoryBranch() {
        return Optional.ofNullable(this.repositoryBranch);
    }

    /**
     * Repository Token with `admin` privileges to use for the Static Web App. `repository_branch` and `repository_url` must also be set.
     * 
     */
    @Import(name="repositoryToken")
    private @Nullable Output<String> repositoryToken;

    /**
     * @return Repository Token with `admin` privileges to use for the Static Web App. `repository_branch` and `repository_url` must also be set.
     * 
     */
    public Optional<Output<String>> repositoryToken() {
        return Optional.ofNullable(this.repositoryToken);
    }

    /**
     * Repository URL to use for the Static Web App. `repository_branch` and `repository_token` must also be set.
     * 
     */
    @Import(name="repositoryUrl")
    private @Nullable Output<String> repositoryUrl;

    /**
     * @return Repository URL to use for the Static Web App. `repository_branch` and `repository_token` must also be set.
     * 
     */
    public Optional<Output<String>> repositoryUrl() {
        return Optional.ofNullable(this.repositoryUrl);
    }

    /**
     * The name of the Resource Group where the Static Web App should exist. Changing this forces a new Static Web App to be created.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    /**
     * @return The name of the Resource Group where the Static Web App should exist. Changing this forces a new Static Web App to be created.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * Specifies the SKU size of the Static Web App. Possible values are `Free` or `Standard`. Defaults to `Free`.
     * 
     */
    @Import(name="skuSize")
    private @Nullable Output<String> skuSize;

    /**
     * @return Specifies the SKU size of the Static Web App. Possible values are `Free` or `Standard`. Defaults to `Free`.
     * 
     */
    public Optional<Output<String>> skuSize() {
        return Optional.ofNullable(this.skuSize);
    }

    /**
     * Specifies the SKU tier of the Static Web App. Possible values are `Free` or `Standard`. Defaults to `Free`.
     * 
     */
    @Import(name="skuTier")
    private @Nullable Output<String> skuTier;

    /**
     * @return Specifies the SKU tier of the Static Web App. Possible values are `Free` or `Standard`. Defaults to `Free`.
     * 
     */
    public Optional<Output<String>> skuTier() {
        return Optional.ofNullable(this.skuTier);
    }

    /**
     * A mapping of tags to assign to the resource.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return A mapping of tags to assign to the resource.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private StaticWebAppArgs() {}

    private StaticWebAppArgs(StaticWebAppArgs $) {
        this.appSettings = $.appSettings;
        this.basicAuth = $.basicAuth;
        this.configurationFileChangesEnabled = $.configurationFileChangesEnabled;
        this.identity = $.identity;
        this.location = $.location;
        this.name = $.name;
        this.previewEnvironmentsEnabled = $.previewEnvironmentsEnabled;
        this.publicNetworkAccessEnabled = $.publicNetworkAccessEnabled;
        this.repositoryBranch = $.repositoryBranch;
        this.repositoryToken = $.repositoryToken;
        this.repositoryUrl = $.repositoryUrl;
        this.resourceGroupName = $.resourceGroupName;
        this.skuSize = $.skuSize;
        this.skuTier = $.skuTier;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(StaticWebAppArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private StaticWebAppArgs $;

        public Builder() {
            $ = new StaticWebAppArgs();
        }

        public Builder(StaticWebAppArgs defaults) {
            $ = new StaticWebAppArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param appSettings A key-value pair of App Settings.
         * 
         * @return builder
         * 
         */
        public Builder appSettings(@Nullable Output<Map<String,String>> appSettings) {
            $.appSettings = appSettings;
            return this;
        }

        /**
         * @param appSettings A key-value pair of App Settings.
         * 
         * @return builder
         * 
         */
        public Builder appSettings(Map<String,String> appSettings) {
            return appSettings(Output.of(appSettings));
        }

        /**
         * @param basicAuth A `basic_auth` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder basicAuth(@Nullable Output<StaticWebAppBasicAuthArgs> basicAuth) {
            $.basicAuth = basicAuth;
            return this;
        }

        /**
         * @param basicAuth A `basic_auth` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder basicAuth(StaticWebAppBasicAuthArgs basicAuth) {
            return basicAuth(Output.of(basicAuth));
        }

        /**
         * @param configurationFileChangesEnabled Should changes to the configuration file be permitted. Defaults to `true`.
         * 
         * @return builder
         * 
         */
        public Builder configurationFileChangesEnabled(@Nullable Output<Boolean> configurationFileChangesEnabled) {
            $.configurationFileChangesEnabled = configurationFileChangesEnabled;
            return this;
        }

        /**
         * @param configurationFileChangesEnabled Should changes to the configuration file be permitted. Defaults to `true`.
         * 
         * @return builder
         * 
         */
        public Builder configurationFileChangesEnabled(Boolean configurationFileChangesEnabled) {
            return configurationFileChangesEnabled(Output.of(configurationFileChangesEnabled));
        }

        /**
         * @param identity An `identity` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder identity(@Nullable Output<StaticWebAppIdentityArgs> identity) {
            $.identity = identity;
            return this;
        }

        /**
         * @param identity An `identity` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder identity(StaticWebAppIdentityArgs identity) {
            return identity(Output.of(identity));
        }

        /**
         * @param location The Azure Region where the Static Web App should exist. Changing this forces a new Static Web App to be created.
         * 
         * @return builder
         * 
         */
        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location The Azure Region where the Static Web App should exist. Changing this forces a new Static Web App to be created.
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param name The name which should be used for this Static Web App. Changing this forces a new Static Web App to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name which should be used for this Static Web App. Changing this forces a new Static Web App to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param previewEnvironmentsEnabled Are Preview (Staging) environments enabled. Defaults to `true`.
         * 
         * @return builder
         * 
         */
        public Builder previewEnvironmentsEnabled(@Nullable Output<Boolean> previewEnvironmentsEnabled) {
            $.previewEnvironmentsEnabled = previewEnvironmentsEnabled;
            return this;
        }

        /**
         * @param previewEnvironmentsEnabled Are Preview (Staging) environments enabled. Defaults to `true`.
         * 
         * @return builder
         * 
         */
        public Builder previewEnvironmentsEnabled(Boolean previewEnvironmentsEnabled) {
            return previewEnvironmentsEnabled(Output.of(previewEnvironmentsEnabled));
        }

        /**
         * @param publicNetworkAccessEnabled Should public network access be enabled for the Static Web App. Defaults to `true`.
         * 
         * @return builder
         * 
         */
        public Builder publicNetworkAccessEnabled(@Nullable Output<Boolean> publicNetworkAccessEnabled) {
            $.publicNetworkAccessEnabled = publicNetworkAccessEnabled;
            return this;
        }

        /**
         * @param publicNetworkAccessEnabled Should public network access be enabled for the Static Web App. Defaults to `true`.
         * 
         * @return builder
         * 
         */
        public Builder publicNetworkAccessEnabled(Boolean publicNetworkAccessEnabled) {
            return publicNetworkAccessEnabled(Output.of(publicNetworkAccessEnabled));
        }

        /**
         * @param repositoryBranch Repository branch to use for the Static Web App. `repository_url` and `repository_token` must also be set.
         * 
         * @return builder
         * 
         */
        public Builder repositoryBranch(@Nullable Output<String> repositoryBranch) {
            $.repositoryBranch = repositoryBranch;
            return this;
        }

        /**
         * @param repositoryBranch Repository branch to use for the Static Web App. `repository_url` and `repository_token` must also be set.
         * 
         * @return builder
         * 
         */
        public Builder repositoryBranch(String repositoryBranch) {
            return repositoryBranch(Output.of(repositoryBranch));
        }

        /**
         * @param repositoryToken Repository Token with `admin` privileges to use for the Static Web App. `repository_branch` and `repository_url` must also be set.
         * 
         * @return builder
         * 
         */
        public Builder repositoryToken(@Nullable Output<String> repositoryToken) {
            $.repositoryToken = repositoryToken;
            return this;
        }

        /**
         * @param repositoryToken Repository Token with `admin` privileges to use for the Static Web App. `repository_branch` and `repository_url` must also be set.
         * 
         * @return builder
         * 
         */
        public Builder repositoryToken(String repositoryToken) {
            return repositoryToken(Output.of(repositoryToken));
        }

        /**
         * @param repositoryUrl Repository URL to use for the Static Web App. `repository_branch` and `repository_token` must also be set.
         * 
         * @return builder
         * 
         */
        public Builder repositoryUrl(@Nullable Output<String> repositoryUrl) {
            $.repositoryUrl = repositoryUrl;
            return this;
        }

        /**
         * @param repositoryUrl Repository URL to use for the Static Web App. `repository_branch` and `repository_token` must also be set.
         * 
         * @return builder
         * 
         */
        public Builder repositoryUrl(String repositoryUrl) {
            return repositoryUrl(Output.of(repositoryUrl));
        }

        /**
         * @param resourceGroupName The name of the Resource Group where the Static Web App should exist. Changing this forces a new Static Web App to be created.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName The name of the Resource Group where the Static Web App should exist. Changing this forces a new Static Web App to be created.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        /**
         * @param skuSize Specifies the SKU size of the Static Web App. Possible values are `Free` or `Standard`. Defaults to `Free`.
         * 
         * @return builder
         * 
         */
        public Builder skuSize(@Nullable Output<String> skuSize) {
            $.skuSize = skuSize;
            return this;
        }

        /**
         * @param skuSize Specifies the SKU size of the Static Web App. Possible values are `Free` or `Standard`. Defaults to `Free`.
         * 
         * @return builder
         * 
         */
        public Builder skuSize(String skuSize) {
            return skuSize(Output.of(skuSize));
        }

        /**
         * @param skuTier Specifies the SKU tier of the Static Web App. Possible values are `Free` or `Standard`. Defaults to `Free`.
         * 
         * @return builder
         * 
         */
        public Builder skuTier(@Nullable Output<String> skuTier) {
            $.skuTier = skuTier;
            return this;
        }

        /**
         * @param skuTier Specifies the SKU tier of the Static Web App. Possible values are `Free` or `Standard`. Defaults to `Free`.
         * 
         * @return builder
         * 
         */
        public Builder skuTier(String skuTier) {
            return skuTier(Output.of(skuTier));
        }

        /**
         * @param tags A mapping of tags to assign to the resource.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags A mapping of tags to assign to the resource.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public StaticWebAppArgs build() {
            if ($.resourceGroupName == null) {
                throw new MissingRequiredPropertyException("StaticWebAppArgs", "resourceGroupName");
            }
            return $;
        }
    }

}
