// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.media.outputs;

import com.pulumi.azure.media.outputs.StreamingPolicyCommonEncryptionCencContentKeyToTrackMappingTrack;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class StreamingPolicyCommonEncryptionCencContentKeyToTrackMapping {
    /**
     * @return Specifies the content key when creating a Streaming Locator. Changing this forces a new Streaming Policy to be created.
     * 
     */
    private @Nullable String label;
    /**
     * @return The policy used by the default key. Changing this forces a new Streaming Policy to be created.
     * 
     */
    private @Nullable String policyName;
    /**
     * @return One or more `track` blocks as defined below. Changing this forces a new Streaming Policy to be created.
     * 
     */
    private List<StreamingPolicyCommonEncryptionCencContentKeyToTrackMappingTrack> tracks;

    private StreamingPolicyCommonEncryptionCencContentKeyToTrackMapping() {}
    /**
     * @return Specifies the content key when creating a Streaming Locator. Changing this forces a new Streaming Policy to be created.
     * 
     */
    public Optional<String> label() {
        return Optional.ofNullable(this.label);
    }
    /**
     * @return The policy used by the default key. Changing this forces a new Streaming Policy to be created.
     * 
     */
    public Optional<String> policyName() {
        return Optional.ofNullable(this.policyName);
    }
    /**
     * @return One or more `track` blocks as defined below. Changing this forces a new Streaming Policy to be created.
     * 
     */
    public List<StreamingPolicyCommonEncryptionCencContentKeyToTrackMappingTrack> tracks() {
        return this.tracks;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(StreamingPolicyCommonEncryptionCencContentKeyToTrackMapping defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String label;
        private @Nullable String policyName;
        private List<StreamingPolicyCommonEncryptionCencContentKeyToTrackMappingTrack> tracks;
        public Builder() {}
        public Builder(StreamingPolicyCommonEncryptionCencContentKeyToTrackMapping defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.label = defaults.label;
    	      this.policyName = defaults.policyName;
    	      this.tracks = defaults.tracks;
        }

        @CustomType.Setter
        public Builder label(@Nullable String label) {

            this.label = label;
            return this;
        }
        @CustomType.Setter
        public Builder policyName(@Nullable String policyName) {

            this.policyName = policyName;
            return this;
        }
        @CustomType.Setter
        public Builder tracks(List<StreamingPolicyCommonEncryptionCencContentKeyToTrackMappingTrack> tracks) {
            if (tracks == null) {
              throw new MissingRequiredPropertyException("StreamingPolicyCommonEncryptionCencContentKeyToTrackMapping", "tracks");
            }
            this.tracks = tracks;
            return this;
        }
        public Builder tracks(StreamingPolicyCommonEncryptionCencContentKeyToTrackMappingTrack... tracks) {
            return tracks(List.of(tracks));
        }
        public StreamingPolicyCommonEncryptionCencContentKeyToTrackMapping build() {
            final var _resultValue = new StreamingPolicyCommonEncryptionCencContentKeyToTrackMapping();
            _resultValue.label = label;
            _resultValue.policyName = policyName;
            _resultValue.tracks = tracks;
            return _resultValue;
        }
    }
}
