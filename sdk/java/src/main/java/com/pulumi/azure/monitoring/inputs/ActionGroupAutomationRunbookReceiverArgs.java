// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.monitoring.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ActionGroupAutomationRunbookReceiverArgs extends com.pulumi.resources.ResourceArgs {

    public static final ActionGroupAutomationRunbookReceiverArgs Empty = new ActionGroupAutomationRunbookReceiverArgs();

    /**
     * The automation account ID which holds this runbook and authenticates to Azure resources.
     * 
     */
    @Import(name="automationAccountId", required=true)
    private Output<String> automationAccountId;

    /**
     * @return The automation account ID which holds this runbook and authenticates to Azure resources.
     * 
     */
    public Output<String> automationAccountId() {
        return this.automationAccountId;
    }

    /**
     * Indicates whether this instance is global runbook.
     * 
     */
    @Import(name="isGlobalRunbook", required=true)
    private Output<Boolean> isGlobalRunbook;

    /**
     * @return Indicates whether this instance is global runbook.
     * 
     */
    public Output<Boolean> isGlobalRunbook() {
        return this.isGlobalRunbook;
    }

    /**
     * The name of the automation runbook receiver.
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    /**
     * @return The name of the automation runbook receiver.
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    /**
     * The name for this runbook.
     * 
     */
    @Import(name="runbookName", required=true)
    private Output<String> runbookName;

    /**
     * @return The name for this runbook.
     * 
     */
    public Output<String> runbookName() {
        return this.runbookName;
    }

    /**
     * The URI where webhooks should be sent.
     * 
     */
    @Import(name="serviceUri", required=true)
    private Output<String> serviceUri;

    /**
     * @return The URI where webhooks should be sent.
     * 
     */
    public Output<String> serviceUri() {
        return this.serviceUri;
    }

    /**
     * Enables or disables the common alert schema.
     * 
     */
    @Import(name="useCommonAlertSchema")
    private @Nullable Output<Boolean> useCommonAlertSchema;

    /**
     * @return Enables or disables the common alert schema.
     * 
     */
    public Optional<Output<Boolean>> useCommonAlertSchema() {
        return Optional.ofNullable(this.useCommonAlertSchema);
    }

    /**
     * The resource id for webhook linked to this runbook.
     * 
     */
    @Import(name="webhookResourceId", required=true)
    private Output<String> webhookResourceId;

    /**
     * @return The resource id for webhook linked to this runbook.
     * 
     */
    public Output<String> webhookResourceId() {
        return this.webhookResourceId;
    }

    private ActionGroupAutomationRunbookReceiverArgs() {}

    private ActionGroupAutomationRunbookReceiverArgs(ActionGroupAutomationRunbookReceiverArgs $) {
        this.automationAccountId = $.automationAccountId;
        this.isGlobalRunbook = $.isGlobalRunbook;
        this.name = $.name;
        this.runbookName = $.runbookName;
        this.serviceUri = $.serviceUri;
        this.useCommonAlertSchema = $.useCommonAlertSchema;
        this.webhookResourceId = $.webhookResourceId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ActionGroupAutomationRunbookReceiverArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ActionGroupAutomationRunbookReceiverArgs $;

        public Builder() {
            $ = new ActionGroupAutomationRunbookReceiverArgs();
        }

        public Builder(ActionGroupAutomationRunbookReceiverArgs defaults) {
            $ = new ActionGroupAutomationRunbookReceiverArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param automationAccountId The automation account ID which holds this runbook and authenticates to Azure resources.
         * 
         * @return builder
         * 
         */
        public Builder automationAccountId(Output<String> automationAccountId) {
            $.automationAccountId = automationAccountId;
            return this;
        }

        /**
         * @param automationAccountId The automation account ID which holds this runbook and authenticates to Azure resources.
         * 
         * @return builder
         * 
         */
        public Builder automationAccountId(String automationAccountId) {
            return automationAccountId(Output.of(automationAccountId));
        }

        /**
         * @param isGlobalRunbook Indicates whether this instance is global runbook.
         * 
         * @return builder
         * 
         */
        public Builder isGlobalRunbook(Output<Boolean> isGlobalRunbook) {
            $.isGlobalRunbook = isGlobalRunbook;
            return this;
        }

        /**
         * @param isGlobalRunbook Indicates whether this instance is global runbook.
         * 
         * @return builder
         * 
         */
        public Builder isGlobalRunbook(Boolean isGlobalRunbook) {
            return isGlobalRunbook(Output.of(isGlobalRunbook));
        }

        /**
         * @param name The name of the automation runbook receiver.
         * 
         * @return builder
         * 
         */
        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the automation runbook receiver.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param runbookName The name for this runbook.
         * 
         * @return builder
         * 
         */
        public Builder runbookName(Output<String> runbookName) {
            $.runbookName = runbookName;
            return this;
        }

        /**
         * @param runbookName The name for this runbook.
         * 
         * @return builder
         * 
         */
        public Builder runbookName(String runbookName) {
            return runbookName(Output.of(runbookName));
        }

        /**
         * @param serviceUri The URI where webhooks should be sent.
         * 
         * @return builder
         * 
         */
        public Builder serviceUri(Output<String> serviceUri) {
            $.serviceUri = serviceUri;
            return this;
        }

        /**
         * @param serviceUri The URI where webhooks should be sent.
         * 
         * @return builder
         * 
         */
        public Builder serviceUri(String serviceUri) {
            return serviceUri(Output.of(serviceUri));
        }

        /**
         * @param useCommonAlertSchema Enables or disables the common alert schema.
         * 
         * @return builder
         * 
         */
        public Builder useCommonAlertSchema(@Nullable Output<Boolean> useCommonAlertSchema) {
            $.useCommonAlertSchema = useCommonAlertSchema;
            return this;
        }

        /**
         * @param useCommonAlertSchema Enables or disables the common alert schema.
         * 
         * @return builder
         * 
         */
        public Builder useCommonAlertSchema(Boolean useCommonAlertSchema) {
            return useCommonAlertSchema(Output.of(useCommonAlertSchema));
        }

        /**
         * @param webhookResourceId The resource id for webhook linked to this runbook.
         * 
         * @return builder
         * 
         */
        public Builder webhookResourceId(Output<String> webhookResourceId) {
            $.webhookResourceId = webhookResourceId;
            return this;
        }

        /**
         * @param webhookResourceId The resource id for webhook linked to this runbook.
         * 
         * @return builder
         * 
         */
        public Builder webhookResourceId(String webhookResourceId) {
            return webhookResourceId(Output.of(webhookResourceId));
        }

        public ActionGroupAutomationRunbookReceiverArgs build() {
            if ($.automationAccountId == null) {
                throw new MissingRequiredPropertyException("ActionGroupAutomationRunbookReceiverArgs", "automationAccountId");
            }
            if ($.isGlobalRunbook == null) {
                throw new MissingRequiredPropertyException("ActionGroupAutomationRunbookReceiverArgs", "isGlobalRunbook");
            }
            if ($.name == null) {
                throw new MissingRequiredPropertyException("ActionGroupAutomationRunbookReceiverArgs", "name");
            }
            if ($.runbookName == null) {
                throw new MissingRequiredPropertyException("ActionGroupAutomationRunbookReceiverArgs", "runbookName");
            }
            if ($.serviceUri == null) {
                throw new MissingRequiredPropertyException("ActionGroupAutomationRunbookReceiverArgs", "serviceUri");
            }
            if ($.webhookResourceId == null) {
                throw new MissingRequiredPropertyException("ActionGroupAutomationRunbookReceiverArgs", "webhookResourceId");
            }
            return $;
        }
    }

}
