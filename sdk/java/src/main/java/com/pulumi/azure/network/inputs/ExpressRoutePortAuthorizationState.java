// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.network.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ExpressRoutePortAuthorizationState extends com.pulumi.resources.ResourceArgs {

    public static final ExpressRoutePortAuthorizationState Empty = new ExpressRoutePortAuthorizationState();

    /**
     * The Authorization Key.
     * 
     */
    @Import(name="authorizationKey")
    private @Nullable Output<String> authorizationKey;

    /**
     * @return The Authorization Key.
     * 
     */
    public Optional<Output<String>> authorizationKey() {
        return Optional.ofNullable(this.authorizationKey);
    }

    /**
     * The authorization use status.
     * 
     */
    @Import(name="authorizationUseStatus")
    private @Nullable Output<String> authorizationUseStatus;

    /**
     * @return The authorization use status.
     * 
     */
    public Optional<Output<String>> authorizationUseStatus() {
        return Optional.ofNullable(this.authorizationUseStatus);
    }

    /**
     * The name of the Express Route Port in which to create the Authorization. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="expressRoutePortName")
    private @Nullable Output<String> expressRoutePortName;

    /**
     * @return The name of the Express Route Port in which to create the Authorization. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> expressRoutePortName() {
        return Optional.ofNullable(this.expressRoutePortName);
    }

    /**
     * The name of the ExpressRoute Port. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the ExpressRoute Port. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The name of the resource group in which to create the ExpressRoute Port. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="resourceGroupName")
    private @Nullable Output<String> resourceGroupName;

    /**
     * @return The name of the resource group in which to create the ExpressRoute Port. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> resourceGroupName() {
        return Optional.ofNullable(this.resourceGroupName);
    }

    private ExpressRoutePortAuthorizationState() {}

    private ExpressRoutePortAuthorizationState(ExpressRoutePortAuthorizationState $) {
        this.authorizationKey = $.authorizationKey;
        this.authorizationUseStatus = $.authorizationUseStatus;
        this.expressRoutePortName = $.expressRoutePortName;
        this.name = $.name;
        this.resourceGroupName = $.resourceGroupName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ExpressRoutePortAuthorizationState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ExpressRoutePortAuthorizationState $;

        public Builder() {
            $ = new ExpressRoutePortAuthorizationState();
        }

        public Builder(ExpressRoutePortAuthorizationState defaults) {
            $ = new ExpressRoutePortAuthorizationState(Objects.requireNonNull(defaults));
        }

        /**
         * @param authorizationKey The Authorization Key.
         * 
         * @return builder
         * 
         */
        public Builder authorizationKey(@Nullable Output<String> authorizationKey) {
            $.authorizationKey = authorizationKey;
            return this;
        }

        /**
         * @param authorizationKey The Authorization Key.
         * 
         * @return builder
         * 
         */
        public Builder authorizationKey(String authorizationKey) {
            return authorizationKey(Output.of(authorizationKey));
        }

        /**
         * @param authorizationUseStatus The authorization use status.
         * 
         * @return builder
         * 
         */
        public Builder authorizationUseStatus(@Nullable Output<String> authorizationUseStatus) {
            $.authorizationUseStatus = authorizationUseStatus;
            return this;
        }

        /**
         * @param authorizationUseStatus The authorization use status.
         * 
         * @return builder
         * 
         */
        public Builder authorizationUseStatus(String authorizationUseStatus) {
            return authorizationUseStatus(Output.of(authorizationUseStatus));
        }

        /**
         * @param expressRoutePortName The name of the Express Route Port in which to create the Authorization. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder expressRoutePortName(@Nullable Output<String> expressRoutePortName) {
            $.expressRoutePortName = expressRoutePortName;
            return this;
        }

        /**
         * @param expressRoutePortName The name of the Express Route Port in which to create the Authorization. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder expressRoutePortName(String expressRoutePortName) {
            return expressRoutePortName(Output.of(expressRoutePortName));
        }

        /**
         * @param name The name of the ExpressRoute Port. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the ExpressRoute Port. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param resourceGroupName The name of the resource group in which to create the ExpressRoute Port. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(@Nullable Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName The name of the resource group in which to create the ExpressRoute Port. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        public ExpressRoutePortAuthorizationState build() {
            return $;
        }
    }

}
