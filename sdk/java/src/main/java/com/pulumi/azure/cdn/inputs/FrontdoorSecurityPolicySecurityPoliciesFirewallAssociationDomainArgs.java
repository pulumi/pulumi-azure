// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.cdn.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class FrontdoorSecurityPolicySecurityPoliciesFirewallAssociationDomainArgs extends com.pulumi.resources.ResourceArgs {

    public static final FrontdoorSecurityPolicySecurityPoliciesFirewallAssociationDomainArgs Empty = new FrontdoorSecurityPolicySecurityPoliciesFirewallAssociationDomainArgs();

    /**
     * Is the Front Door Custom Domain/Endpoint activated?
     * 
     */
    @Import(name="active")
    private @Nullable Output<Boolean> active;

    /**
     * @return Is the Front Door Custom Domain/Endpoint activated?
     * 
     */
    public Optional<Output<Boolean>> active() {
        return Optional.ofNullable(this.active);
    }

    /**
     * The Resource Id of the **Front Door Custom Domain** or **Front Door Endpoint** that should be bound to this Front Door Security Policy. Changing this forces a new Front Door Security Policy to be created.
     * 
     */
    @Import(name="cdnFrontdoorDomainId", required=true)
    private Output<String> cdnFrontdoorDomainId;

    /**
     * @return The Resource Id of the **Front Door Custom Domain** or **Front Door Endpoint** that should be bound to this Front Door Security Policy. Changing this forces a new Front Door Security Policy to be created.
     * 
     */
    public Output<String> cdnFrontdoorDomainId() {
        return this.cdnFrontdoorDomainId;
    }

    private FrontdoorSecurityPolicySecurityPoliciesFirewallAssociationDomainArgs() {}

    private FrontdoorSecurityPolicySecurityPoliciesFirewallAssociationDomainArgs(FrontdoorSecurityPolicySecurityPoliciesFirewallAssociationDomainArgs $) {
        this.active = $.active;
        this.cdnFrontdoorDomainId = $.cdnFrontdoorDomainId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FrontdoorSecurityPolicySecurityPoliciesFirewallAssociationDomainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FrontdoorSecurityPolicySecurityPoliciesFirewallAssociationDomainArgs $;

        public Builder() {
            $ = new FrontdoorSecurityPolicySecurityPoliciesFirewallAssociationDomainArgs();
        }

        public Builder(FrontdoorSecurityPolicySecurityPoliciesFirewallAssociationDomainArgs defaults) {
            $ = new FrontdoorSecurityPolicySecurityPoliciesFirewallAssociationDomainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param active Is the Front Door Custom Domain/Endpoint activated?
         * 
         * @return builder
         * 
         */
        public Builder active(@Nullable Output<Boolean> active) {
            $.active = active;
            return this;
        }

        /**
         * @param active Is the Front Door Custom Domain/Endpoint activated?
         * 
         * @return builder
         * 
         */
        public Builder active(Boolean active) {
            return active(Output.of(active));
        }

        /**
         * @param cdnFrontdoorDomainId The Resource Id of the **Front Door Custom Domain** or **Front Door Endpoint** that should be bound to this Front Door Security Policy. Changing this forces a new Front Door Security Policy to be created.
         * 
         * @return builder
         * 
         */
        public Builder cdnFrontdoorDomainId(Output<String> cdnFrontdoorDomainId) {
            $.cdnFrontdoorDomainId = cdnFrontdoorDomainId;
            return this;
        }

        /**
         * @param cdnFrontdoorDomainId The Resource Id of the **Front Door Custom Domain** or **Front Door Endpoint** that should be bound to this Front Door Security Policy. Changing this forces a new Front Door Security Policy to be created.
         * 
         * @return builder
         * 
         */
        public Builder cdnFrontdoorDomainId(String cdnFrontdoorDomainId) {
            return cdnFrontdoorDomainId(Output.of(cdnFrontdoorDomainId));
        }

        public FrontdoorSecurityPolicySecurityPoliciesFirewallAssociationDomainArgs build() {
            if ($.cdnFrontdoorDomainId == null) {
                throw new MissingRequiredPropertyException("FrontdoorSecurityPolicySecurityPoliciesFirewallAssociationDomainArgs", "cdnFrontdoorDomainId");
            }
            return $;
        }
    }

}
