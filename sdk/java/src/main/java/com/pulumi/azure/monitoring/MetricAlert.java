// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.monitoring;

import com.pulumi.azure.Utilities;
import com.pulumi.azure.monitoring.MetricAlertArgs;
import com.pulumi.azure.monitoring.inputs.MetricAlertState;
import com.pulumi.azure.monitoring.outputs.MetricAlertAction;
import com.pulumi.azure.monitoring.outputs.MetricAlertApplicationInsightsWebTestLocationAvailabilityCriteria;
import com.pulumi.azure.monitoring.outputs.MetricAlertCriteria;
import com.pulumi.azure.monitoring.outputs.MetricAlertDynamicCriteria;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Manages a Metric Alert within Azure Monitor.
 * 
 * ## Example Usage
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.azure.core.ResourceGroup;
 * import com.pulumi.azure.core.ResourceGroupArgs;
 * import com.pulumi.azure.storage.Account;
 * import com.pulumi.azure.storage.AccountArgs;
 * import com.pulumi.azure.monitoring.ActionGroup;
 * import com.pulumi.azure.monitoring.ActionGroupArgs;
 * import com.pulumi.azure.monitoring.inputs.ActionGroupWebhookReceiverArgs;
 * import com.pulumi.azure.monitoring.MetricAlert;
 * import com.pulumi.azure.monitoring.MetricAlertArgs;
 * import com.pulumi.azure.monitoring.inputs.MetricAlertCriteriaArgs;
 * import com.pulumi.azure.monitoring.inputs.MetricAlertActionArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var exampleResourceGroup = new ResourceGroup(&#34;exampleResourceGroup&#34;, ResourceGroupArgs.builder()        
 *             .location(&#34;West Europe&#34;)
 *             .build());
 * 
 *         var toMonitor = new Account(&#34;toMonitor&#34;, AccountArgs.builder()        
 *             .resourceGroupName(exampleResourceGroup.name())
 *             .location(exampleResourceGroup.location())
 *             .accountTier(&#34;Standard&#34;)
 *             .accountReplicationType(&#34;LRS&#34;)
 *             .build());
 * 
 *         var main = new ActionGroup(&#34;main&#34;, ActionGroupArgs.builder()        
 *             .resourceGroupName(exampleResourceGroup.name())
 *             .shortName(&#34;exampleact&#34;)
 *             .webhookReceivers(ActionGroupWebhookReceiverArgs.builder()
 *                 .name(&#34;callmyapi&#34;)
 *                 .serviceUri(&#34;http://example.com/alert&#34;)
 *                 .build())
 *             .build());
 * 
 *         var exampleMetricAlert = new MetricAlert(&#34;exampleMetricAlert&#34;, MetricAlertArgs.builder()        
 *             .resourceGroupName(exampleResourceGroup.name())
 *             .scopes(toMonitor.id())
 *             .description(&#34;Action will be triggered when Transactions count is greater than 50.&#34;)
 *             .criterias(MetricAlertCriteriaArgs.builder()
 *                 .metricNamespace(&#34;Microsoft.Storage/storageAccounts&#34;)
 *                 .metricName(&#34;Transactions&#34;)
 *                 .aggregation(&#34;Total&#34;)
 *                 .operator(&#34;GreaterThan&#34;)
 *                 .threshold(50)
 *                 .dimensions(MetricAlertCriteriaDimensionArgs.builder()
 *                     .name(&#34;ApiName&#34;)
 *                     .operator(&#34;Include&#34;)
 *                     .values(&#34;*&#34;)
 *                     .build())
 *                 .build())
 *             .actions(MetricAlertActionArgs.builder()
 *                 .actionGroupId(main.id())
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * Metric Alerts can be imported using the `resource id`, e.g.
 * 
 * ```sh
 *  $ pulumi import azure:monitoring/metricAlert:MetricAlert main /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/example-resources/providers/Microsoft.Insights/metricAlerts/example-metricalert
 * ```
 * 
 */
@ResourceType(type="azure:monitoring/metricAlert:MetricAlert")
public class MetricAlert extends com.pulumi.resources.CustomResource {
    /**
     * One or more `action` blocks as defined below.
     * 
     */
    @Export(name="actions", refs={List.class,MetricAlertAction.class}, tree="[0,1]")
    private Output</* @Nullable */ List<MetricAlertAction>> actions;

    /**
     * @return One or more `action` blocks as defined below.
     * 
     */
    public Output<Optional<List<MetricAlertAction>>> actions() {
        return Codegen.optional(this.actions);
    }
    /**
     * A `application_insights_web_test_location_availability_criteria` block as defined below.
     * 
     * &gt; **NOTE** One of either `criteria`, `dynamic_criteria` or `application_insights_web_test_location_availability_criteria` must be specified.
     * 
     */
    @Export(name="applicationInsightsWebTestLocationAvailabilityCriteria", refs={MetricAlertApplicationInsightsWebTestLocationAvailabilityCriteria.class}, tree="[0]")
    private Output</* @Nullable */ MetricAlertApplicationInsightsWebTestLocationAvailabilityCriteria> applicationInsightsWebTestLocationAvailabilityCriteria;

    /**
     * @return A `application_insights_web_test_location_availability_criteria` block as defined below.
     * 
     * &gt; **NOTE** One of either `criteria`, `dynamic_criteria` or `application_insights_web_test_location_availability_criteria` must be specified.
     * 
     */
    public Output<Optional<MetricAlertApplicationInsightsWebTestLocationAvailabilityCriteria>> applicationInsightsWebTestLocationAvailabilityCriteria() {
        return Codegen.optional(this.applicationInsightsWebTestLocationAvailabilityCriteria);
    }
    /**
     * Should the alerts in this Metric Alert be auto resolved? Defaults to `true`.
     * 
     */
    @Export(name="autoMitigate", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> autoMitigate;

    /**
     * @return Should the alerts in this Metric Alert be auto resolved? Defaults to `true`.
     * 
     */
    public Output<Optional<Boolean>> autoMitigate() {
        return Codegen.optional(this.autoMitigate);
    }
    /**
     * One or more (static) `criteria` blocks as defined below.
     * 
     * &gt; **NOTE** One of either `criteria`, `dynamic_criteria` or `application_insights_web_test_location_availability_criteria` must be specified.
     * 
     */
    @Export(name="criterias", refs={List.class,MetricAlertCriteria.class}, tree="[0,1]")
    private Output</* @Nullable */ List<MetricAlertCriteria>> criterias;

    /**
     * @return One or more (static) `criteria` blocks as defined below.
     * 
     * &gt; **NOTE** One of either `criteria`, `dynamic_criteria` or `application_insights_web_test_location_availability_criteria` must be specified.
     * 
     */
    public Output<Optional<List<MetricAlertCriteria>>> criterias() {
        return Codegen.optional(this.criterias);
    }
    /**
     * The description of this Metric Alert.
     * 
     */
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> description;

    /**
     * @return The description of this Metric Alert.
     * 
     */
    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    /**
     * A `dynamic_criteria` block as defined below.
     * 
     * &gt; **NOTE** One of either `criteria`, `dynamic_criteria` or `application_insights_web_test_location_availability_criteria` must be specified.
     * 
     */
    @Export(name="dynamicCriteria", refs={MetricAlertDynamicCriteria.class}, tree="[0]")
    private Output</* @Nullable */ MetricAlertDynamicCriteria> dynamicCriteria;

    /**
     * @return A `dynamic_criteria` block as defined below.
     * 
     * &gt; **NOTE** One of either `criteria`, `dynamic_criteria` or `application_insights_web_test_location_availability_criteria` must be specified.
     * 
     */
    public Output<Optional<MetricAlertDynamicCriteria>> dynamicCriteria() {
        return Codegen.optional(this.dynamicCriteria);
    }
    /**
     * Should this Metric Alert be enabled? Defaults to `true`.
     * 
     */
    @Export(name="enabled", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> enabled;

    /**
     * @return Should this Metric Alert be enabled? Defaults to `true`.
     * 
     */
    public Output<Optional<Boolean>> enabled() {
        return Codegen.optional(this.enabled);
    }
    /**
     * The evaluation frequency of this Metric Alert, represented in ISO 8601 duration format. Possible values are `PT1M`, `PT5M`, `PT15M`, `PT30M` and `PT1H`. Defaults to `PT1M`.
     * 
     */
    @Export(name="frequency", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> frequency;

    /**
     * @return The evaluation frequency of this Metric Alert, represented in ISO 8601 duration format. Possible values are `PT1M`, `PT5M`, `PT15M`, `PT30M` and `PT1H`. Defaults to `PT1M`.
     * 
     */
    public Output<Optional<String>> frequency() {
        return Codegen.optional(this.frequency);
    }
    /**
     * The name of the Metric Alert. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The name of the Metric Alert. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The name of the resource group in which to create the Metric Alert instance. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="resourceGroupName", refs={String.class}, tree="[0]")
    private Output<String> resourceGroupName;

    /**
     * @return The name of the resource group in which to create the Metric Alert instance. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }
    /**
     * A set of strings of resource IDs at which the metric criteria should be applied.
     * 
     */
    @Export(name="scopes", refs={List.class,String.class}, tree="[0,1]")
    private Output<List<String>> scopes;

    /**
     * @return A set of strings of resource IDs at which the metric criteria should be applied.
     * 
     */
    public Output<List<String>> scopes() {
        return this.scopes;
    }
    /**
     * The severity of this Metric Alert. Possible values are `0`, `1`, `2`, `3` and `4`. Defaults to `3`.
     * 
     */
    @Export(name="severity", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> severity;

    /**
     * @return The severity of this Metric Alert. Possible values are `0`, `1`, `2`, `3` and `4`. Defaults to `3`.
     * 
     */
    public Output<Optional<Integer>> severity() {
        return Codegen.optional(this.severity);
    }
    /**
     * A mapping of tags to assign to the resource.
     * 
     */
    @Export(name="tags", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output</* @Nullable */ Map<String,String>> tags;

    /**
     * @return A mapping of tags to assign to the resource.
     * 
     */
    public Output<Optional<Map<String,String>>> tags() {
        return Codegen.optional(this.tags);
    }
    /**
     * The location of the target resource.
     * 
     * &gt; This is Required when using a Subscription as scope, a Resource Group as scope or Multiple Scopes.
     * 
     */
    @Export(name="targetResourceLocation", refs={String.class}, tree="[0]")
    private Output<String> targetResourceLocation;

    /**
     * @return The location of the target resource.
     * 
     * &gt; This is Required when using a Subscription as scope, a Resource Group as scope or Multiple Scopes.
     * 
     */
    public Output<String> targetResourceLocation() {
        return this.targetResourceLocation;
    }
    /**
     * The resource type (e.g. `Microsoft.Compute/virtualMachines`) of the target resource.
     * 
     * &gt; This is Required when using a Subscription as scope, a Resource Group as scope or Multiple Scopes.
     * 
     */
    @Export(name="targetResourceType", refs={String.class}, tree="[0]")
    private Output<String> targetResourceType;

    /**
     * @return The resource type (e.g. `Microsoft.Compute/virtualMachines`) of the target resource.
     * 
     * &gt; This is Required when using a Subscription as scope, a Resource Group as scope or Multiple Scopes.
     * 
     */
    public Output<String> targetResourceType() {
        return this.targetResourceType;
    }
    /**
     * The period of time that is used to monitor alert activity, represented in ISO 8601 duration format. This value must be greater than `frequency`. Possible values are `PT1M`, `PT5M`, `PT15M`, `PT30M`, `PT1H`, `PT6H`, `PT12H` and `P1D`. Defaults to `PT5M`.
     * 
     */
    @Export(name="windowSize", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> windowSize;

    /**
     * @return The period of time that is used to monitor alert activity, represented in ISO 8601 duration format. This value must be greater than `frequency`. Possible values are `PT1M`, `PT5M`, `PT15M`, `PT30M`, `PT1H`, `PT6H`, `PT12H` and `P1D`. Defaults to `PT5M`.
     * 
     */
    public Output<Optional<String>> windowSize() {
        return Codegen.optional(this.windowSize);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public MetricAlert(String name) {
        this(name, MetricAlertArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public MetricAlert(String name, MetricAlertArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public MetricAlert(String name, MetricAlertArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:monitoring/metricAlert:MetricAlert", name, args == null ? MetricAlertArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private MetricAlert(String name, Output<String> id, @Nullable MetricAlertState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:monitoring/metricAlert:MetricAlert", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static MetricAlert get(String name, Output<String> id, @Nullable MetricAlertState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new MetricAlert(name, id, state, options);
    }
}
