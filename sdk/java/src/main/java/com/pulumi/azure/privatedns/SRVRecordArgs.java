// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.privatedns;

import com.pulumi.azure.privatedns.inputs.SRVRecordRecordArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SRVRecordArgs extends com.pulumi.resources.ResourceArgs {

    public static final SRVRecordArgs Empty = new SRVRecordArgs();

    /**
     * The name of the DNS SRV Record. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the DNS SRV Record. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * One or more `record` blocks as defined below.
     * 
     */
    @Import(name="records", required=true)
    private Output<List<SRVRecordRecordArgs>> records;

    /**
     * @return One or more `record` blocks as defined below.
     * 
     */
    public Output<List<SRVRecordRecordArgs>> records() {
        return this.records;
    }

    /**
     * Specifies the resource group where the resource exists. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    /**
     * @return Specifies the resource group where the resource exists. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * A mapping of tags to assign to the resource.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return A mapping of tags to assign to the resource.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * The Time To Live (TTL) of the DNS record in seconds.
     * 
     */
    @Import(name="ttl", required=true)
    private Output<Integer> ttl;

    /**
     * @return The Time To Live (TTL) of the DNS record in seconds.
     * 
     */
    public Output<Integer> ttl() {
        return this.ttl;
    }

    /**
     * Specifies the Private DNS Zone where the resource exists. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="zoneName", required=true)
    private Output<String> zoneName;

    /**
     * @return Specifies the Private DNS Zone where the resource exists. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> zoneName() {
        return this.zoneName;
    }

    private SRVRecordArgs() {}

    private SRVRecordArgs(SRVRecordArgs $) {
        this.name = $.name;
        this.records = $.records;
        this.resourceGroupName = $.resourceGroupName;
        this.tags = $.tags;
        this.ttl = $.ttl;
        this.zoneName = $.zoneName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SRVRecordArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SRVRecordArgs $;

        public Builder() {
            $ = new SRVRecordArgs();
        }

        public Builder(SRVRecordArgs defaults) {
            $ = new SRVRecordArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param name The name of the DNS SRV Record. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the DNS SRV Record. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param records One or more `record` blocks as defined below.
         * 
         * @return builder
         * 
         */
        public Builder records(Output<List<SRVRecordRecordArgs>> records) {
            $.records = records;
            return this;
        }

        /**
         * @param records One or more `record` blocks as defined below.
         * 
         * @return builder
         * 
         */
        public Builder records(List<SRVRecordRecordArgs> records) {
            return records(Output.of(records));
        }

        /**
         * @param records One or more `record` blocks as defined below.
         * 
         * @return builder
         * 
         */
        public Builder records(SRVRecordRecordArgs... records) {
            return records(List.of(records));
        }

        /**
         * @param resourceGroupName Specifies the resource group where the resource exists. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName Specifies the resource group where the resource exists. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        /**
         * @param tags A mapping of tags to assign to the resource.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags A mapping of tags to assign to the resource.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param ttl The Time To Live (TTL) of the DNS record in seconds.
         * 
         * @return builder
         * 
         */
        public Builder ttl(Output<Integer> ttl) {
            $.ttl = ttl;
            return this;
        }

        /**
         * @param ttl The Time To Live (TTL) of the DNS record in seconds.
         * 
         * @return builder
         * 
         */
        public Builder ttl(Integer ttl) {
            return ttl(Output.of(ttl));
        }

        /**
         * @param zoneName Specifies the Private DNS Zone where the resource exists. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder zoneName(Output<String> zoneName) {
            $.zoneName = zoneName;
            return this;
        }

        /**
         * @param zoneName Specifies the Private DNS Zone where the resource exists. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder zoneName(String zoneName) {
            return zoneName(Output.of(zoneName));
        }

        public SRVRecordArgs build() {
            if ($.records == null) {
                throw new MissingRequiredPropertyException("SRVRecordArgs", "records");
            }
            if ($.resourceGroupName == null) {
                throw new MissingRequiredPropertyException("SRVRecordArgs", "resourceGroupName");
            }
            if ($.ttl == null) {
                throw new MissingRequiredPropertyException("SRVRecordArgs", "ttl");
            }
            if ($.zoneName == null) {
                throw new MissingRequiredPropertyException("SRVRecordArgs", "zoneName");
            }
            return $;
        }
    }

}
