// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.lab.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class LabRoster {
    /**
     * @return The AAD group ID which this Lab Service Lab roster is populated from.
     * 
     */
    private @Nullable String activeDirectoryGroupId;
    /**
     * @return The base URI identifying the lms instance.
     * 
     */
    private @Nullable String lmsInstance;
    /**
     * @return The unique id of the Azure Lab Service tool in the lms.
     * 
     */
    private @Nullable String ltiClientId;
    /**
     * @return The unique context identifier for the Lab Service Lab in the lms.
     * 
     */
    private @Nullable String ltiContextId;
    /**
     * @return The URI of the names and roles service endpoint on the lms for the class attached to this Lab Service Lab.
     * 
     */
    private @Nullable String ltiRosterEndpoint;

    private LabRoster() {}
    /**
     * @return The AAD group ID which this Lab Service Lab roster is populated from.
     * 
     */
    public Optional<String> activeDirectoryGroupId() {
        return Optional.ofNullable(this.activeDirectoryGroupId);
    }
    /**
     * @return The base URI identifying the lms instance.
     * 
     */
    public Optional<String> lmsInstance() {
        return Optional.ofNullable(this.lmsInstance);
    }
    /**
     * @return The unique id of the Azure Lab Service tool in the lms.
     * 
     */
    public Optional<String> ltiClientId() {
        return Optional.ofNullable(this.ltiClientId);
    }
    /**
     * @return The unique context identifier for the Lab Service Lab in the lms.
     * 
     */
    public Optional<String> ltiContextId() {
        return Optional.ofNullable(this.ltiContextId);
    }
    /**
     * @return The URI of the names and roles service endpoint on the lms for the class attached to this Lab Service Lab.
     * 
     */
    public Optional<String> ltiRosterEndpoint() {
        return Optional.ofNullable(this.ltiRosterEndpoint);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(LabRoster defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String activeDirectoryGroupId;
        private @Nullable String lmsInstance;
        private @Nullable String ltiClientId;
        private @Nullable String ltiContextId;
        private @Nullable String ltiRosterEndpoint;
        public Builder() {}
        public Builder(LabRoster defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.activeDirectoryGroupId = defaults.activeDirectoryGroupId;
    	      this.lmsInstance = defaults.lmsInstance;
    	      this.ltiClientId = defaults.ltiClientId;
    	      this.ltiContextId = defaults.ltiContextId;
    	      this.ltiRosterEndpoint = defaults.ltiRosterEndpoint;
        }

        @CustomType.Setter
        public Builder activeDirectoryGroupId(@Nullable String activeDirectoryGroupId) {

            this.activeDirectoryGroupId = activeDirectoryGroupId;
            return this;
        }
        @CustomType.Setter
        public Builder lmsInstance(@Nullable String lmsInstance) {

            this.lmsInstance = lmsInstance;
            return this;
        }
        @CustomType.Setter
        public Builder ltiClientId(@Nullable String ltiClientId) {

            this.ltiClientId = ltiClientId;
            return this;
        }
        @CustomType.Setter
        public Builder ltiContextId(@Nullable String ltiContextId) {

            this.ltiContextId = ltiContextId;
            return this;
        }
        @CustomType.Setter
        public Builder ltiRosterEndpoint(@Nullable String ltiRosterEndpoint) {

            this.ltiRosterEndpoint = ltiRosterEndpoint;
            return this;
        }
        public LabRoster build() {
            final var _resultValue = new LabRoster();
            _resultValue.activeDirectoryGroupId = activeDirectoryGroupId;
            _resultValue.lmsInstance = lmsInstance;
            _resultValue.ltiClientId = ltiClientId;
            _resultValue.ltiContextId = ltiContextId;
            _resultValue.ltiRosterEndpoint = ltiRosterEndpoint;
            return _resultValue;
        }
    }
}
