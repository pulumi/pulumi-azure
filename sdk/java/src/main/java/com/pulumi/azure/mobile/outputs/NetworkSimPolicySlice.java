// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.mobile.outputs;

import com.pulumi.azure.mobile.outputs.NetworkSimPolicySliceDataNetwork;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class NetworkSimPolicySlice {
    /**
     * @return An array of `data_network` block as defined below.
     * 
     */
    private List<NetworkSimPolicySliceDataNetwork> dataNetworks;
    /**
     * @return The ID of default data network to use if the user equipment does not explicitly specify it. Configuration for this object must exist in the `data_network` block.
     * 
     */
    private String defaultDataNetworkId;
    /**
     * @return The ID of the slice that these settings apply to.
     * 
     */
    private String sliceId;

    private NetworkSimPolicySlice() {}
    /**
     * @return An array of `data_network` block as defined below.
     * 
     */
    public List<NetworkSimPolicySliceDataNetwork> dataNetworks() {
        return this.dataNetworks;
    }
    /**
     * @return The ID of default data network to use if the user equipment does not explicitly specify it. Configuration for this object must exist in the `data_network` block.
     * 
     */
    public String defaultDataNetworkId() {
        return this.defaultDataNetworkId;
    }
    /**
     * @return The ID of the slice that these settings apply to.
     * 
     */
    public String sliceId() {
        return this.sliceId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(NetworkSimPolicySlice defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<NetworkSimPolicySliceDataNetwork> dataNetworks;
        private String defaultDataNetworkId;
        private String sliceId;
        public Builder() {}
        public Builder(NetworkSimPolicySlice defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.dataNetworks = defaults.dataNetworks;
    	      this.defaultDataNetworkId = defaults.defaultDataNetworkId;
    	      this.sliceId = defaults.sliceId;
        }

        @CustomType.Setter
        public Builder dataNetworks(List<NetworkSimPolicySliceDataNetwork> dataNetworks) {
            if (dataNetworks == null) {
              throw new MissingRequiredPropertyException("NetworkSimPolicySlice", "dataNetworks");
            }
            this.dataNetworks = dataNetworks;
            return this;
        }
        public Builder dataNetworks(NetworkSimPolicySliceDataNetwork... dataNetworks) {
            return dataNetworks(List.of(dataNetworks));
        }
        @CustomType.Setter
        public Builder defaultDataNetworkId(String defaultDataNetworkId) {
            if (defaultDataNetworkId == null) {
              throw new MissingRequiredPropertyException("NetworkSimPolicySlice", "defaultDataNetworkId");
            }
            this.defaultDataNetworkId = defaultDataNetworkId;
            return this;
        }
        @CustomType.Setter
        public Builder sliceId(String sliceId) {
            if (sliceId == null) {
              throw new MissingRequiredPropertyException("NetworkSimPolicySlice", "sliceId");
            }
            this.sliceId = sliceId;
            return this;
        }
        public NetworkSimPolicySlice build() {
            final var _resultValue = new NetworkSimPolicySlice();
            _resultValue.dataNetworks = dataNetworks;
            _resultValue.defaultDataNetworkId = defaultDataNetworkId;
            _resultValue.sliceId = sliceId;
            return _resultValue;
        }
    }
}
