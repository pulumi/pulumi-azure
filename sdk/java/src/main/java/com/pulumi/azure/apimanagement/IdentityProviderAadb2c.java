// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.apimanagement;

import com.pulumi.azure.Utilities;
import com.pulumi.azure.apimanagement.IdentityProviderAadb2cArgs;
import com.pulumi.azure.apimanagement.inputs.IdentityProviderAadb2cState;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Manages an API Management Azure AD B2C Identity Provider.
 * 
 * ## Example Usage
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.azure.core.ResourceGroup;
 * import com.pulumi.azure.core.ResourceGroupArgs;
 * import com.pulumi.azure.apimanagement.Service;
 * import com.pulumi.azure.apimanagement.ServiceArgs;
 * import com.pulumi.azuread.Application;
 * import com.pulumi.azuread.ApplicationArgs;
 * import com.pulumi.azuread.ApplicationPassword;
 * import com.pulumi.azuread.ApplicationPasswordArgs;
 * import com.pulumi.azure.apimanagement.IdentityProviderAadb2c;
 * import com.pulumi.azure.apimanagement.IdentityProviderAadb2cArgs;
 * import com.pulumi.resources.CustomResourceOptions;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var exampleResourceGroup = new ResourceGroup(&#34;exampleResourceGroup&#34;, ResourceGroupArgs.builder()        
 *             .location(&#34;West Europe&#34;)
 *             .build());
 * 
 *         var exampleService = new Service(&#34;exampleService&#34;, ServiceArgs.builder()        
 *             .location(exampleResourceGroup.location())
 *             .resourceGroupName(exampleResourceGroup.name())
 *             .publisherName(&#34;My Company&#34;)
 *             .publisherEmail(&#34;company@terraform.io&#34;)
 *             .skuName(&#34;Developer_1&#34;)
 *             .build());
 * 
 *         var exampleApplication = new Application(&#34;exampleApplication&#34;, ApplicationArgs.builder()        
 *             .displayName(&#34;acctestam-example&#34;)
 *             .build());
 * 
 *         var exampleApplicationPassword = new ApplicationPassword(&#34;exampleApplicationPassword&#34;, ApplicationPasswordArgs.builder()        
 *             .applicationObjectId(exampleApplication.objectId())
 *             .endDateRelative(&#34;36h&#34;)
 *             .build());
 * 
 *         var exampleIdentityProviderAadb2c = new IdentityProviderAadb2c(&#34;exampleIdentityProviderAadb2c&#34;, IdentityProviderAadb2cArgs.builder()        
 *             .resourceGroupName(exampleResourceGroup.name())
 *             .apiManagementName(exampleService.name())
 *             .clientId(exampleApplication.applicationId())
 *             .clientSecret(&#34;P@55w0rD!&#34;)
 *             .allowedTenant(&#34;myb2ctenant.onmicrosoft.com&#34;)
 *             .signinTenant(&#34;myb2ctenant.onmicrosoft.com&#34;)
 *             .authority(&#34;myb2ctenant.b2clogin.com&#34;)
 *             .signinPolicy(&#34;B2C_1_Login&#34;)
 *             .signupPolicy(&#34;B2C_1_Signup&#34;)
 *             .build(), CustomResourceOptions.builder()
 *                 .dependsOn(exampleApplicationPassword)
 *                 .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * API Management Azure AD B2C Identity Providers can be imported using the `resource id`, e.g.
 * 
 * ```sh
 *  $ pulumi import azure:apimanagement/identityProviderAadb2c:IdentityProviderAadb2c example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/mygroup1/providers/Microsoft.ApiManagement/service/service1/identityProviders/aadB2C
 * ```
 * 
 */
@ResourceType(type="azure:apimanagement/identityProviderAadb2c:IdentityProviderAadb2c")
public class IdentityProviderAadb2c extends com.pulumi.resources.CustomResource {
    /**
     * The allowed AAD tenant, usually your B2C tenant domain.
     * 
     */
    @Export(name="allowedTenant", refs={String.class}, tree="[0]")
    private Output<String> allowedTenant;

    /**
     * @return The allowed AAD tenant, usually your B2C tenant domain.
     * 
     */
    public Output<String> allowedTenant() {
        return this.allowedTenant;
    }
    /**
     * The Name of the API Management Service where this AAD Identity Provider should be created. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="apiManagementName", refs={String.class}, tree="[0]")
    private Output<String> apiManagementName;

    /**
     * @return The Name of the API Management Service where this AAD Identity Provider should be created. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> apiManagementName() {
        return this.apiManagementName;
    }
    /**
     * OpenID Connect discovery endpoint hostname, usually your b2clogin.com domain.
     * 
     */
    @Export(name="authority", refs={String.class}, tree="[0]")
    private Output<String> authority;

    /**
     * @return OpenID Connect discovery endpoint hostname, usually your b2clogin.com domain.
     * 
     */
    public Output<String> authority() {
        return this.authority;
    }
    /**
     * Client ID of the Application in your B2C tenant.
     * 
     */
    @Export(name="clientId", refs={String.class}, tree="[0]")
    private Output<String> clientId;

    /**
     * @return Client ID of the Application in your B2C tenant.
     * 
     */
    public Output<String> clientId() {
        return this.clientId;
    }
    /**
     * Client secret of the Application in your B2C tenant.
     * 
     */
    @Export(name="clientSecret", refs={String.class}, tree="[0]")
    private Output<String> clientSecret;

    /**
     * @return Client secret of the Application in your B2C tenant.
     * 
     */
    public Output<String> clientSecret() {
        return this.clientSecret;
    }
    /**
     * Password reset Policy Name.
     * 
     */
    @Export(name="passwordResetPolicy", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> passwordResetPolicy;

    /**
     * @return Password reset Policy Name.
     * 
     */
    public Output<Optional<String>> passwordResetPolicy() {
        return Codegen.optional(this.passwordResetPolicy);
    }
    /**
     * Profile editing Policy Name.
     * 
     */
    @Export(name="profileEditingPolicy", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> profileEditingPolicy;

    /**
     * @return Profile editing Policy Name.
     * 
     */
    public Output<Optional<String>> profileEditingPolicy() {
        return Codegen.optional(this.profileEditingPolicy);
    }
    /**
     * The Name of the Resource Group where the API Management Service exists. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="resourceGroupName", refs={String.class}, tree="[0]")
    private Output<String> resourceGroupName;

    /**
     * @return The Name of the Resource Group where the API Management Service exists. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }
    /**
     * Signin Policy Name.
     * 
     */
    @Export(name="signinPolicy", refs={String.class}, tree="[0]")
    private Output<String> signinPolicy;

    /**
     * @return Signin Policy Name.
     * 
     */
    public Output<String> signinPolicy() {
        return this.signinPolicy;
    }
    /**
     * The tenant to use instead of Common when logging into Active Directory, usually your B2C tenant domain.
     * 
     */
    @Export(name="signinTenant", refs={String.class}, tree="[0]")
    private Output<String> signinTenant;

    /**
     * @return The tenant to use instead of Common when logging into Active Directory, usually your B2C tenant domain.
     * 
     */
    public Output<String> signinTenant() {
        return this.signinTenant;
    }
    /**
     * Signup Policy Name.
     * 
     */
    @Export(name="signupPolicy", refs={String.class}, tree="[0]")
    private Output<String> signupPolicy;

    /**
     * @return Signup Policy Name.
     * 
     */
    public Output<String> signupPolicy() {
        return this.signupPolicy;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public IdentityProviderAadb2c(String name) {
        this(name, IdentityProviderAadb2cArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public IdentityProviderAadb2c(String name, IdentityProviderAadb2cArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public IdentityProviderAadb2c(String name, IdentityProviderAadb2cArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:apimanagement/identityProviderAadb2c:IdentityProviderAadb2c", name, args == null ? IdentityProviderAadb2cArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private IdentityProviderAadb2c(String name, Output<String> id, @Nullable IdentityProviderAadb2cState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:apimanagement/identityProviderAadb2c:IdentityProviderAadb2c", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .additionalSecretOutputs(List.of(
                "clientSecret"
            ))
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static IdentityProviderAadb2c get(String name, Output<String> id, @Nullable IdentityProviderAadb2cState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new IdentityProviderAadb2c(name, id, state, options);
    }
}
