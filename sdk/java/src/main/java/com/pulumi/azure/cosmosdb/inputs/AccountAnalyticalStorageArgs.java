// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.cosmosdb.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class AccountAnalyticalStorageArgs extends com.pulumi.resources.ResourceArgs {

    public static final AccountAnalyticalStorageArgs Empty = new AccountAnalyticalStorageArgs();

    /**
     * The schema type of the Analytical Storage for this Cosmos DB account. Possible values are `FullFidelity` and `WellDefined`.
     * 
     */
    @Import(name="schemaType", required=true)
    private Output<String> schemaType;

    /**
     * @return The schema type of the Analytical Storage for this Cosmos DB account. Possible values are `FullFidelity` and `WellDefined`.
     * 
     */
    public Output<String> schemaType() {
        return this.schemaType;
    }

    private AccountAnalyticalStorageArgs() {}

    private AccountAnalyticalStorageArgs(AccountAnalyticalStorageArgs $) {
        this.schemaType = $.schemaType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AccountAnalyticalStorageArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AccountAnalyticalStorageArgs $;

        public Builder() {
            $ = new AccountAnalyticalStorageArgs();
        }

        public Builder(AccountAnalyticalStorageArgs defaults) {
            $ = new AccountAnalyticalStorageArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param schemaType The schema type of the Analytical Storage for this Cosmos DB account. Possible values are `FullFidelity` and `WellDefined`.
         * 
         * @return builder
         * 
         */
        public Builder schemaType(Output<String> schemaType) {
            $.schemaType = schemaType;
            return this;
        }

        /**
         * @param schemaType The schema type of the Analytical Storage for this Cosmos DB account. Possible values are `FullFidelity` and `WellDefined`.
         * 
         * @return builder
         * 
         */
        public Builder schemaType(String schemaType) {
            return schemaType(Output.of(schemaType));
        }

        public AccountAnalyticalStorageArgs build() {
            if ($.schemaType == null) {
                throw new MissingRequiredPropertyException("AccountAnalyticalStorageArgs", "schemaType");
            }
            return $;
        }
    }

}
