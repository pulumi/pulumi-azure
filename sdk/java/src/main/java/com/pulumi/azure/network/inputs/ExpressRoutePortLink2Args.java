// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.network.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ExpressRoutePortLink2Args extends com.pulumi.resources.ResourceArgs {

    public static final ExpressRoutePortLink2Args Empty = new ExpressRoutePortLink2Args();

    /**
     * Whether enable administration state on the Express Route Port Link? Defaults to `false`.
     * 
     */
    @Import(name="adminEnabled")
    private @Nullable Output<Boolean> adminEnabled;

    /**
     * @return Whether enable administration state on the Express Route Port Link? Defaults to `false`.
     * 
     */
    public Optional<Output<Boolean>> adminEnabled() {
        return Optional.ofNullable(this.adminEnabled);
    }

    /**
     * The connector type of the Express Route Port Link.
     * 
     */
    @Import(name="connectorType")
    private @Nullable Output<String> connectorType;

    /**
     * @return The connector type of the Express Route Port Link.
     * 
     */
    public Optional<Output<String>> connectorType() {
        return Optional.ofNullable(this.connectorType);
    }

    /**
     * The ID of this Express Route Port Link.
     * 
     */
    @Import(name="id")
    private @Nullable Output<String> id;

    /**
     * @return The ID of this Express Route Port Link.
     * 
     */
    public Optional<Output<String>> id() {
        return Optional.ofNullable(this.id);
    }

    /**
     * The interface name of the Azure router associated with the Express Route Port Link.
     * 
     */
    @Import(name="interfaceName")
    private @Nullable Output<String> interfaceName;

    /**
     * @return The interface name of the Azure router associated with the Express Route Port Link.
     * 
     */
    public Optional<Output<String>> interfaceName() {
        return Optional.ofNullable(this.interfaceName);
    }

    /**
     * The ID of the Key Vault Secret that contains the Mac security CAK key for this Express Route Port Link.
     * 
     */
    @Import(name="macsecCakKeyvaultSecretId")
    private @Nullable Output<String> macsecCakKeyvaultSecretId;

    /**
     * @return The ID of the Key Vault Secret that contains the Mac security CAK key for this Express Route Port Link.
     * 
     */
    public Optional<Output<String>> macsecCakKeyvaultSecretId() {
        return Optional.ofNullable(this.macsecCakKeyvaultSecretId);
    }

    /**
     * The MACSec cipher used for this Express Route Port Link. Possible values are `GcmAes128` and `GcmAes256`. Defaults to `GcmAes128`.
     * 
     */
    @Import(name="macsecCipher")
    private @Nullable Output<String> macsecCipher;

    /**
     * @return The MACSec cipher used for this Express Route Port Link. Possible values are `GcmAes128` and `GcmAes256`. Defaults to `GcmAes128`.
     * 
     */
    public Optional<Output<String>> macsecCipher() {
        return Optional.ofNullable(this.macsecCipher);
    }

    /**
     * The ID of the Key Vault Secret that contains the MACSec CKN key for this Express Route Port Link.
     * 
     */
    @Import(name="macsecCknKeyvaultSecretId")
    private @Nullable Output<String> macsecCknKeyvaultSecretId;

    /**
     * @return The ID of the Key Vault Secret that contains the MACSec CKN key for this Express Route Port Link.
     * 
     */
    public Optional<Output<String>> macsecCknKeyvaultSecretId() {
        return Optional.ofNullable(this.macsecCknKeyvaultSecretId);
    }

    /**
     * The ID that maps from the Express Route Port Link to the patch panel port.
     * 
     */
    @Import(name="patchPanelId")
    private @Nullable Output<String> patchPanelId;

    /**
     * @return The ID that maps from the Express Route Port Link to the patch panel port.
     * 
     */
    public Optional<Output<String>> patchPanelId() {
        return Optional.ofNullable(this.patchPanelId);
    }

    /**
     * The ID that maps from the patch panel port to the rack.
     * 
     */
    @Import(name="rackId")
    private @Nullable Output<String> rackId;

    /**
     * @return The ID that maps from the patch panel port to the rack.
     * 
     */
    public Optional<Output<String>> rackId() {
        return Optional.ofNullable(this.rackId);
    }

    /**
     * The name of the Azure router associated with the Express Route Port Link.
     * 
     */
    @Import(name="routerName")
    private @Nullable Output<String> routerName;

    /**
     * @return The name of the Azure router associated with the Express Route Port Link.
     * 
     */
    public Optional<Output<String>> routerName() {
        return Optional.ofNullable(this.routerName);
    }

    private ExpressRoutePortLink2Args() {}

    private ExpressRoutePortLink2Args(ExpressRoutePortLink2Args $) {
        this.adminEnabled = $.adminEnabled;
        this.connectorType = $.connectorType;
        this.id = $.id;
        this.interfaceName = $.interfaceName;
        this.macsecCakKeyvaultSecretId = $.macsecCakKeyvaultSecretId;
        this.macsecCipher = $.macsecCipher;
        this.macsecCknKeyvaultSecretId = $.macsecCknKeyvaultSecretId;
        this.patchPanelId = $.patchPanelId;
        this.rackId = $.rackId;
        this.routerName = $.routerName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ExpressRoutePortLink2Args defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ExpressRoutePortLink2Args $;

        public Builder() {
            $ = new ExpressRoutePortLink2Args();
        }

        public Builder(ExpressRoutePortLink2Args defaults) {
            $ = new ExpressRoutePortLink2Args(Objects.requireNonNull(defaults));
        }

        /**
         * @param adminEnabled Whether enable administration state on the Express Route Port Link? Defaults to `false`.
         * 
         * @return builder
         * 
         */
        public Builder adminEnabled(@Nullable Output<Boolean> adminEnabled) {
            $.adminEnabled = adminEnabled;
            return this;
        }

        /**
         * @param adminEnabled Whether enable administration state on the Express Route Port Link? Defaults to `false`.
         * 
         * @return builder
         * 
         */
        public Builder adminEnabled(Boolean adminEnabled) {
            return adminEnabled(Output.of(adminEnabled));
        }

        /**
         * @param connectorType The connector type of the Express Route Port Link.
         * 
         * @return builder
         * 
         */
        public Builder connectorType(@Nullable Output<String> connectorType) {
            $.connectorType = connectorType;
            return this;
        }

        /**
         * @param connectorType The connector type of the Express Route Port Link.
         * 
         * @return builder
         * 
         */
        public Builder connectorType(String connectorType) {
            return connectorType(Output.of(connectorType));
        }

        /**
         * @param id The ID of this Express Route Port Link.
         * 
         * @return builder
         * 
         */
        public Builder id(@Nullable Output<String> id) {
            $.id = id;
            return this;
        }

        /**
         * @param id The ID of this Express Route Port Link.
         * 
         * @return builder
         * 
         */
        public Builder id(String id) {
            return id(Output.of(id));
        }

        /**
         * @param interfaceName The interface name of the Azure router associated with the Express Route Port Link.
         * 
         * @return builder
         * 
         */
        public Builder interfaceName(@Nullable Output<String> interfaceName) {
            $.interfaceName = interfaceName;
            return this;
        }

        /**
         * @param interfaceName The interface name of the Azure router associated with the Express Route Port Link.
         * 
         * @return builder
         * 
         */
        public Builder interfaceName(String interfaceName) {
            return interfaceName(Output.of(interfaceName));
        }

        /**
         * @param macsecCakKeyvaultSecretId The ID of the Key Vault Secret that contains the Mac security CAK key for this Express Route Port Link.
         * 
         * @return builder
         * 
         */
        public Builder macsecCakKeyvaultSecretId(@Nullable Output<String> macsecCakKeyvaultSecretId) {
            $.macsecCakKeyvaultSecretId = macsecCakKeyvaultSecretId;
            return this;
        }

        /**
         * @param macsecCakKeyvaultSecretId The ID of the Key Vault Secret that contains the Mac security CAK key for this Express Route Port Link.
         * 
         * @return builder
         * 
         */
        public Builder macsecCakKeyvaultSecretId(String macsecCakKeyvaultSecretId) {
            return macsecCakKeyvaultSecretId(Output.of(macsecCakKeyvaultSecretId));
        }

        /**
         * @param macsecCipher The MACSec cipher used for this Express Route Port Link. Possible values are `GcmAes128` and `GcmAes256`. Defaults to `GcmAes128`.
         * 
         * @return builder
         * 
         */
        public Builder macsecCipher(@Nullable Output<String> macsecCipher) {
            $.macsecCipher = macsecCipher;
            return this;
        }

        /**
         * @param macsecCipher The MACSec cipher used for this Express Route Port Link. Possible values are `GcmAes128` and `GcmAes256`. Defaults to `GcmAes128`.
         * 
         * @return builder
         * 
         */
        public Builder macsecCipher(String macsecCipher) {
            return macsecCipher(Output.of(macsecCipher));
        }

        /**
         * @param macsecCknKeyvaultSecretId The ID of the Key Vault Secret that contains the MACSec CKN key for this Express Route Port Link.
         * 
         * @return builder
         * 
         */
        public Builder macsecCknKeyvaultSecretId(@Nullable Output<String> macsecCknKeyvaultSecretId) {
            $.macsecCknKeyvaultSecretId = macsecCknKeyvaultSecretId;
            return this;
        }

        /**
         * @param macsecCknKeyvaultSecretId The ID of the Key Vault Secret that contains the MACSec CKN key for this Express Route Port Link.
         * 
         * @return builder
         * 
         */
        public Builder macsecCknKeyvaultSecretId(String macsecCknKeyvaultSecretId) {
            return macsecCknKeyvaultSecretId(Output.of(macsecCknKeyvaultSecretId));
        }

        /**
         * @param patchPanelId The ID that maps from the Express Route Port Link to the patch panel port.
         * 
         * @return builder
         * 
         */
        public Builder patchPanelId(@Nullable Output<String> patchPanelId) {
            $.patchPanelId = patchPanelId;
            return this;
        }

        /**
         * @param patchPanelId The ID that maps from the Express Route Port Link to the patch panel port.
         * 
         * @return builder
         * 
         */
        public Builder patchPanelId(String patchPanelId) {
            return patchPanelId(Output.of(patchPanelId));
        }

        /**
         * @param rackId The ID that maps from the patch panel port to the rack.
         * 
         * @return builder
         * 
         */
        public Builder rackId(@Nullable Output<String> rackId) {
            $.rackId = rackId;
            return this;
        }

        /**
         * @param rackId The ID that maps from the patch panel port to the rack.
         * 
         * @return builder
         * 
         */
        public Builder rackId(String rackId) {
            return rackId(Output.of(rackId));
        }

        /**
         * @param routerName The name of the Azure router associated with the Express Route Port Link.
         * 
         * @return builder
         * 
         */
        public Builder routerName(@Nullable Output<String> routerName) {
            $.routerName = routerName;
            return this;
        }

        /**
         * @param routerName The name of the Azure router associated with the Express Route Port Link.
         * 
         * @return builder
         * 
         */
        public Builder routerName(String routerName) {
            return routerName(Output.of(routerName));
        }

        public ExpressRoutePortLink2Args build() {
            return $;
        }
    }

}
