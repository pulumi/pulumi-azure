// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.apimanagement.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetProductResult {
    private final String apiManagementName;
    /**
     * @return Do subscribers need to be approved prior to being able to use the Product?
     * 
     */
    private final Boolean approvalRequired;
    /**
     * @return The description of this Product, which may include HTML formatting tags.
     * 
     */
    private final String description;
    /**
     * @return The Display Name for this API Management Product.
     * 
     */
    private final String displayName;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private final String id;
    private final String productId;
    /**
     * @return Is this Product Published?
     * 
     */
    private final Boolean published;
    private final String resourceGroupName;
    /**
     * @return Is a Subscription required to access API&#39;s included in this Product?
     * 
     */
    private final Boolean subscriptionRequired;
    /**
     * @return The number of subscriptions a user can have to this Product at the same time.
     * 
     */
    private final Integer subscriptionsLimit;
    /**
     * @return Any Terms and Conditions for this Product, which must be accepted by Developers before they can begin the Subscription process.
     * 
     */
    private final String terms;

    @CustomType.Constructor
    private GetProductResult(
        @CustomType.Parameter("apiManagementName") String apiManagementName,
        @CustomType.Parameter("approvalRequired") Boolean approvalRequired,
        @CustomType.Parameter("description") String description,
        @CustomType.Parameter("displayName") String displayName,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("productId") String productId,
        @CustomType.Parameter("published") Boolean published,
        @CustomType.Parameter("resourceGroupName") String resourceGroupName,
        @CustomType.Parameter("subscriptionRequired") Boolean subscriptionRequired,
        @CustomType.Parameter("subscriptionsLimit") Integer subscriptionsLimit,
        @CustomType.Parameter("terms") String terms) {
        this.apiManagementName = apiManagementName;
        this.approvalRequired = approvalRequired;
        this.description = description;
        this.displayName = displayName;
        this.id = id;
        this.productId = productId;
        this.published = published;
        this.resourceGroupName = resourceGroupName;
        this.subscriptionRequired = subscriptionRequired;
        this.subscriptionsLimit = subscriptionsLimit;
        this.terms = terms;
    }

    public String apiManagementName() {
        return this.apiManagementName;
    }
    /**
     * @return Do subscribers need to be approved prior to being able to use the Product?
     * 
     */
    public Boolean approvalRequired() {
        return this.approvalRequired;
    }
    /**
     * @return The description of this Product, which may include HTML formatting tags.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return The Display Name for this API Management Product.
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public String productId() {
        return this.productId;
    }
    /**
     * @return Is this Product Published?
     * 
     */
    public Boolean published() {
        return this.published;
    }
    public String resourceGroupName() {
        return this.resourceGroupName;
    }
    /**
     * @return Is a Subscription required to access API&#39;s included in this Product?
     * 
     */
    public Boolean subscriptionRequired() {
        return this.subscriptionRequired;
    }
    /**
     * @return The number of subscriptions a user can have to this Product at the same time.
     * 
     */
    public Integer subscriptionsLimit() {
        return this.subscriptionsLimit;
    }
    /**
     * @return Any Terms and Conditions for this Product, which must be accepted by Developers before they can begin the Subscription process.
     * 
     */
    public String terms() {
        return this.terms;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetProductResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String apiManagementName;
        private Boolean approvalRequired;
        private String description;
        private String displayName;
        private String id;
        private String productId;
        private Boolean published;
        private String resourceGroupName;
        private Boolean subscriptionRequired;
        private Integer subscriptionsLimit;
        private String terms;

        public Builder() {
    	      // Empty
        }

        public Builder(GetProductResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.apiManagementName = defaults.apiManagementName;
    	      this.approvalRequired = defaults.approvalRequired;
    	      this.description = defaults.description;
    	      this.displayName = defaults.displayName;
    	      this.id = defaults.id;
    	      this.productId = defaults.productId;
    	      this.published = defaults.published;
    	      this.resourceGroupName = defaults.resourceGroupName;
    	      this.subscriptionRequired = defaults.subscriptionRequired;
    	      this.subscriptionsLimit = defaults.subscriptionsLimit;
    	      this.terms = defaults.terms;
        }

        public Builder apiManagementName(String apiManagementName) {
            this.apiManagementName = Objects.requireNonNull(apiManagementName);
            return this;
        }
        public Builder approvalRequired(Boolean approvalRequired) {
            this.approvalRequired = Objects.requireNonNull(approvalRequired);
            return this;
        }
        public Builder description(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }
        public Builder displayName(String displayName) {
            this.displayName = Objects.requireNonNull(displayName);
            return this;
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder productId(String productId) {
            this.productId = Objects.requireNonNull(productId);
            return this;
        }
        public Builder published(Boolean published) {
            this.published = Objects.requireNonNull(published);
            return this;
        }
        public Builder resourceGroupName(String resourceGroupName) {
            this.resourceGroupName = Objects.requireNonNull(resourceGroupName);
            return this;
        }
        public Builder subscriptionRequired(Boolean subscriptionRequired) {
            this.subscriptionRequired = Objects.requireNonNull(subscriptionRequired);
            return this;
        }
        public Builder subscriptionsLimit(Integer subscriptionsLimit) {
            this.subscriptionsLimit = Objects.requireNonNull(subscriptionsLimit);
            return this;
        }
        public Builder terms(String terms) {
            this.terms = Objects.requireNonNull(terms);
            return this;
        }        public GetProductResult build() {
            return new GetProductResult(apiManagementName, approvalRequired, description, displayName, id, productId, published, resourceGroupName, subscriptionRequired, subscriptionsLimit, terms);
        }
    }
}
