// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.waf.outputs;

import com.pulumi.azure.waf.outputs.PolicyManagedRulesExclusion;
import com.pulumi.azure.waf.outputs.PolicyManagedRulesManagedRuleSet;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class PolicyManagedRules {
    /**
     * @return One or more `exclusion` block defined below.
     * 
     */
    private @Nullable List<PolicyManagedRulesExclusion> exclusions;
    /**
     * @return One or more `managed_rule_set` block defined below.
     * 
     */
    private List<PolicyManagedRulesManagedRuleSet> managedRuleSets;

    private PolicyManagedRules() {}
    /**
     * @return One or more `exclusion` block defined below.
     * 
     */
    public List<PolicyManagedRulesExclusion> exclusions() {
        return this.exclusions == null ? List.of() : this.exclusions;
    }
    /**
     * @return One or more `managed_rule_set` block defined below.
     * 
     */
    public List<PolicyManagedRulesManagedRuleSet> managedRuleSets() {
        return this.managedRuleSets;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(PolicyManagedRules defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<PolicyManagedRulesExclusion> exclusions;
        private List<PolicyManagedRulesManagedRuleSet> managedRuleSets;
        public Builder() {}
        public Builder(PolicyManagedRules defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.exclusions = defaults.exclusions;
    	      this.managedRuleSets = defaults.managedRuleSets;
        }

        @CustomType.Setter
        public Builder exclusions(@Nullable List<PolicyManagedRulesExclusion> exclusions) {

            this.exclusions = exclusions;
            return this;
        }
        public Builder exclusions(PolicyManagedRulesExclusion... exclusions) {
            return exclusions(List.of(exclusions));
        }
        @CustomType.Setter
        public Builder managedRuleSets(List<PolicyManagedRulesManagedRuleSet> managedRuleSets) {
            if (managedRuleSets == null) {
              throw new MissingRequiredPropertyException("PolicyManagedRules", "managedRuleSets");
            }
            this.managedRuleSets = managedRuleSets;
            return this;
        }
        public Builder managedRuleSets(PolicyManagedRulesManagedRuleSet... managedRuleSets) {
            return managedRuleSets(List.of(managedRuleSets));
        }
        public PolicyManagedRules build() {
            final var _resultValue = new PolicyManagedRules();
            _resultValue.exclusions = exclusions;
            _resultValue.managedRuleSets = managedRuleSets;
            return _resultValue;
        }
    }
}
