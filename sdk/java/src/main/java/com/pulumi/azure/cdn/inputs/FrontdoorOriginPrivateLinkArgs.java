// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.cdn.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class FrontdoorOriginPrivateLinkArgs extends com.pulumi.resources.ResourceArgs {

    public static final FrontdoorOriginPrivateLinkArgs Empty = new FrontdoorOriginPrivateLinkArgs();

    /**
     * Specifies the location where the Private Link resource should exist. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="location", required=true)
    private Output<String> location;

    /**
     * @return Specifies the location where the Private Link resource should exist. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> location() {
        return this.location;
    }

    /**
     * The ID of the Azure Resource to connect to via the Private Link.
     * 
     * &gt; **Note:** the `private_link_target_id` property must specify the Resource ID of the Private Link Service when using Load Balancer as an Origin.
     * 
     */
    @Import(name="privateLinkTargetId", required=true)
    private Output<String> privateLinkTargetId;

    /**
     * @return The ID of the Azure Resource to connect to via the Private Link.
     * 
     * &gt; **Note:** the `private_link_target_id` property must specify the Resource ID of the Private Link Service when using Load Balancer as an Origin.
     * 
     */
    public Output<String> privateLinkTargetId() {
        return this.privateLinkTargetId;
    }

    /**
     * Specifies the request message that will be submitted to the `private_link_target_id` when requesting the private link endpoint connection. Values must be between `1` and `140` characters in length. Defaults to `Access request for CDN FrontDoor Private Link Origin`.
     * 
     */
    @Import(name="requestMessage")
    private @Nullable Output<String> requestMessage;

    /**
     * @return Specifies the request message that will be submitted to the `private_link_target_id` when requesting the private link endpoint connection. Values must be between `1` and `140` characters in length. Defaults to `Access request for CDN FrontDoor Private Link Origin`.
     * 
     */
    public Optional<Output<String>> requestMessage() {
        return Optional.ofNullable(this.requestMessage);
    }

    /**
     * Specifies the type of target for this Private Link Endpoint. Possible values are `blob`, `blob_secondary`, `web` and `sites`.
     * 
     * &gt; **NOTE:** `target_type` cannot be specified when using a Load Balancer as an Origin.
     * 
     */
    @Import(name="targetType")
    private @Nullable Output<String> targetType;

    /**
     * @return Specifies the type of target for this Private Link Endpoint. Possible values are `blob`, `blob_secondary`, `web` and `sites`.
     * 
     * &gt; **NOTE:** `target_type` cannot be specified when using a Load Balancer as an Origin.
     * 
     */
    public Optional<Output<String>> targetType() {
        return Optional.ofNullable(this.targetType);
    }

    private FrontdoorOriginPrivateLinkArgs() {}

    private FrontdoorOriginPrivateLinkArgs(FrontdoorOriginPrivateLinkArgs $) {
        this.location = $.location;
        this.privateLinkTargetId = $.privateLinkTargetId;
        this.requestMessage = $.requestMessage;
        this.targetType = $.targetType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FrontdoorOriginPrivateLinkArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FrontdoorOriginPrivateLinkArgs $;

        public Builder() {
            $ = new FrontdoorOriginPrivateLinkArgs();
        }

        public Builder(FrontdoorOriginPrivateLinkArgs defaults) {
            $ = new FrontdoorOriginPrivateLinkArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param location Specifies the location where the Private Link resource should exist. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder location(Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location Specifies the location where the Private Link resource should exist. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param privateLinkTargetId The ID of the Azure Resource to connect to via the Private Link.
         * 
         * &gt; **Note:** the `private_link_target_id` property must specify the Resource ID of the Private Link Service when using Load Balancer as an Origin.
         * 
         * @return builder
         * 
         */
        public Builder privateLinkTargetId(Output<String> privateLinkTargetId) {
            $.privateLinkTargetId = privateLinkTargetId;
            return this;
        }

        /**
         * @param privateLinkTargetId The ID of the Azure Resource to connect to via the Private Link.
         * 
         * &gt; **Note:** the `private_link_target_id` property must specify the Resource ID of the Private Link Service when using Load Balancer as an Origin.
         * 
         * @return builder
         * 
         */
        public Builder privateLinkTargetId(String privateLinkTargetId) {
            return privateLinkTargetId(Output.of(privateLinkTargetId));
        }

        /**
         * @param requestMessage Specifies the request message that will be submitted to the `private_link_target_id` when requesting the private link endpoint connection. Values must be between `1` and `140` characters in length. Defaults to `Access request for CDN FrontDoor Private Link Origin`.
         * 
         * @return builder
         * 
         */
        public Builder requestMessage(@Nullable Output<String> requestMessage) {
            $.requestMessage = requestMessage;
            return this;
        }

        /**
         * @param requestMessage Specifies the request message that will be submitted to the `private_link_target_id` when requesting the private link endpoint connection. Values must be between `1` and `140` characters in length. Defaults to `Access request for CDN FrontDoor Private Link Origin`.
         * 
         * @return builder
         * 
         */
        public Builder requestMessage(String requestMessage) {
            return requestMessage(Output.of(requestMessage));
        }

        /**
         * @param targetType Specifies the type of target for this Private Link Endpoint. Possible values are `blob`, `blob_secondary`, `web` and `sites`.
         * 
         * &gt; **NOTE:** `target_type` cannot be specified when using a Load Balancer as an Origin.
         * 
         * @return builder
         * 
         */
        public Builder targetType(@Nullable Output<String> targetType) {
            $.targetType = targetType;
            return this;
        }

        /**
         * @param targetType Specifies the type of target for this Private Link Endpoint. Possible values are `blob`, `blob_secondary`, `web` and `sites`.
         * 
         * &gt; **NOTE:** `target_type` cannot be specified when using a Load Balancer as an Origin.
         * 
         * @return builder
         * 
         */
        public Builder targetType(String targetType) {
            return targetType(Output.of(targetType));
        }

        public FrontdoorOriginPrivateLinkArgs build() {
            if ($.location == null) {
                throw new MissingRequiredPropertyException("FrontdoorOriginPrivateLinkArgs", "location");
            }
            if ($.privateLinkTargetId == null) {
                throw new MissingRequiredPropertyException("FrontdoorOriginPrivateLinkArgs", "privateLinkTargetId");
            }
            return $;
        }
    }

}
