// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.netapp.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class BackupPolicyState extends com.pulumi.resources.ResourceArgs {

    public static final BackupPolicyState Empty = new BackupPolicyState();

    /**
     * The name of the NetApp account in which the NetApp Policy should be created under. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="accountName")
    private @Nullable Output<String> accountName;

    /**
     * @return The name of the NetApp account in which the NetApp Policy should be created under. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> accountName() {
        return Optional.ofNullable(this.accountName);
    }

    /**
     * Provides the number of daily backups to keep, defaults to `2` which is the minimum, maximum is 1019.
     * 
     */
    @Import(name="dailyBackupsToKeep")
    private @Nullable Output<Integer> dailyBackupsToKeep;

    /**
     * @return Provides the number of daily backups to keep, defaults to `2` which is the minimum, maximum is 1019.
     * 
     */
    public Optional<Output<Integer>> dailyBackupsToKeep() {
        return Optional.ofNullable(this.dailyBackupsToKeep);
    }

    /**
     * Whether the Backup Policy is enabled. Defaults to `true`.
     * 
     */
    @Import(name="enabled")
    private @Nullable Output<Boolean> enabled;

    /**
     * @return Whether the Backup Policy is enabled. Defaults to `true`.
     * 
     */
    public Optional<Output<Boolean>> enabled() {
        return Optional.ofNullable(this.enabled);
    }

    /**
     * Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="location")
    private @Nullable Output<String> location;

    /**
     * @return Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * Provides the number of monthly backups to keep, defaults to `1` which is the minimum, maximum is 1019.
     * 
     * &gt; **Note:** Currently, the combined (daily + weekly + monthy) retention counts cannot exceed 1019.
     * 
     */
    @Import(name="monthlyBackupsToKeep")
    private @Nullable Output<Integer> monthlyBackupsToKeep;

    /**
     * @return Provides the number of monthly backups to keep, defaults to `1` which is the minimum, maximum is 1019.
     * 
     * &gt; **Note:** Currently, the combined (daily + weekly + monthy) retention counts cannot exceed 1019.
     * 
     */
    public Optional<Output<Integer>> monthlyBackupsToKeep() {
        return Optional.ofNullable(this.monthlyBackupsToKeep);
    }

    /**
     * The name of the NetApp Backup Policy. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the NetApp Backup Policy. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The name of the resource group where the NetApp Backup Policy should be created. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="resourceGroupName")
    private @Nullable Output<String> resourceGroupName;

    /**
     * @return The name of the resource group where the NetApp Backup Policy should be created. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> resourceGroupName() {
        return Optional.ofNullable(this.resourceGroupName);
    }

    /**
     * A mapping of tags to assign to the resource.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return A mapping of tags to assign to the resource.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * Provides the number of weekly backups to keep, defaults to `1` which is the minimum, maximum is 1019.
     * 
     */
    @Import(name="weeklyBackupsToKeep")
    private @Nullable Output<Integer> weeklyBackupsToKeep;

    /**
     * @return Provides the number of weekly backups to keep, defaults to `1` which is the minimum, maximum is 1019.
     * 
     */
    public Optional<Output<Integer>> weeklyBackupsToKeep() {
        return Optional.ofNullable(this.weeklyBackupsToKeep);
    }

    private BackupPolicyState() {}

    private BackupPolicyState(BackupPolicyState $) {
        this.accountName = $.accountName;
        this.dailyBackupsToKeep = $.dailyBackupsToKeep;
        this.enabled = $.enabled;
        this.location = $.location;
        this.monthlyBackupsToKeep = $.monthlyBackupsToKeep;
        this.name = $.name;
        this.resourceGroupName = $.resourceGroupName;
        this.tags = $.tags;
        this.weeklyBackupsToKeep = $.weeklyBackupsToKeep;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BackupPolicyState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BackupPolicyState $;

        public Builder() {
            $ = new BackupPolicyState();
        }

        public Builder(BackupPolicyState defaults) {
            $ = new BackupPolicyState(Objects.requireNonNull(defaults));
        }

        /**
         * @param accountName The name of the NetApp account in which the NetApp Policy should be created under. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder accountName(@Nullable Output<String> accountName) {
            $.accountName = accountName;
            return this;
        }

        /**
         * @param accountName The name of the NetApp account in which the NetApp Policy should be created under. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder accountName(String accountName) {
            return accountName(Output.of(accountName));
        }

        /**
         * @param dailyBackupsToKeep Provides the number of daily backups to keep, defaults to `2` which is the minimum, maximum is 1019.
         * 
         * @return builder
         * 
         */
        public Builder dailyBackupsToKeep(@Nullable Output<Integer> dailyBackupsToKeep) {
            $.dailyBackupsToKeep = dailyBackupsToKeep;
            return this;
        }

        /**
         * @param dailyBackupsToKeep Provides the number of daily backups to keep, defaults to `2` which is the minimum, maximum is 1019.
         * 
         * @return builder
         * 
         */
        public Builder dailyBackupsToKeep(Integer dailyBackupsToKeep) {
            return dailyBackupsToKeep(Output.of(dailyBackupsToKeep));
        }

        /**
         * @param enabled Whether the Backup Policy is enabled. Defaults to `true`.
         * 
         * @return builder
         * 
         */
        public Builder enabled(@Nullable Output<Boolean> enabled) {
            $.enabled = enabled;
            return this;
        }

        /**
         * @param enabled Whether the Backup Policy is enabled. Defaults to `true`.
         * 
         * @return builder
         * 
         */
        public Builder enabled(Boolean enabled) {
            return enabled(Output.of(enabled));
        }

        /**
         * @param location Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param monthlyBackupsToKeep Provides the number of monthly backups to keep, defaults to `1` which is the minimum, maximum is 1019.
         * 
         * &gt; **Note:** Currently, the combined (daily + weekly + monthy) retention counts cannot exceed 1019.
         * 
         * @return builder
         * 
         */
        public Builder monthlyBackupsToKeep(@Nullable Output<Integer> monthlyBackupsToKeep) {
            $.monthlyBackupsToKeep = monthlyBackupsToKeep;
            return this;
        }

        /**
         * @param monthlyBackupsToKeep Provides the number of monthly backups to keep, defaults to `1` which is the minimum, maximum is 1019.
         * 
         * &gt; **Note:** Currently, the combined (daily + weekly + monthy) retention counts cannot exceed 1019.
         * 
         * @return builder
         * 
         */
        public Builder monthlyBackupsToKeep(Integer monthlyBackupsToKeep) {
            return monthlyBackupsToKeep(Output.of(monthlyBackupsToKeep));
        }

        /**
         * @param name The name of the NetApp Backup Policy. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the NetApp Backup Policy. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param resourceGroupName The name of the resource group where the NetApp Backup Policy should be created. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(@Nullable Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName The name of the resource group where the NetApp Backup Policy should be created. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        /**
         * @param tags A mapping of tags to assign to the resource.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags A mapping of tags to assign to the resource.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param weeklyBackupsToKeep Provides the number of weekly backups to keep, defaults to `1` which is the minimum, maximum is 1019.
         * 
         * @return builder
         * 
         */
        public Builder weeklyBackupsToKeep(@Nullable Output<Integer> weeklyBackupsToKeep) {
            $.weeklyBackupsToKeep = weeklyBackupsToKeep;
            return this;
        }

        /**
         * @param weeklyBackupsToKeep Provides the number of weekly backups to keep, defaults to `1` which is the minimum, maximum is 1019.
         * 
         * @return builder
         * 
         */
        public Builder weeklyBackupsToKeep(Integer weeklyBackupsToKeep) {
            return weeklyBackupsToKeep(Output.of(weeklyBackupsToKeep));
        }

        public BackupPolicyState build() {
            return $;
        }
    }

}
