// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.network;

import com.pulumi.azure.Utilities;
import com.pulumi.azure.network.NetworkManagerDeploymentArgs;
import com.pulumi.azure.network.inputs.NetworkManagerDeploymentState;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Manages a Network Manager Deployment.
 * 
 * &gt; **NOTE on Virtual Network Peering:** Using Network Manager Deployment to deploy Connectivity Configuration may modify or delete existing Virtual Network Peering. At this time you should not use Network Peering resource in conjunction with Network Manager Deployment. Doing so may cause a conflict of Peering configurations.
 * 
 * ## Example Usage
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.azure.core.ResourceGroup;
 * import com.pulumi.azure.core.ResourceGroupArgs;
 * import com.pulumi.azure.core.CoreFunctions;
 * import com.pulumi.azure.core.inputs.GetSubscriptionArgs;
 * import com.pulumi.azure.network.NetworkManager;
 * import com.pulumi.azure.network.NetworkManagerArgs;
 * import com.pulumi.azure.network.inputs.NetworkManagerScopeArgs;
 * import com.pulumi.azure.network.NetworkManagerNetworkGroup;
 * import com.pulumi.azure.network.NetworkManagerNetworkGroupArgs;
 * import com.pulumi.azure.network.VirtualNetwork;
 * import com.pulumi.azure.network.VirtualNetworkArgs;
 * import com.pulumi.azure.network.NetworkManagerConnectivityConfiguration;
 * import com.pulumi.azure.network.NetworkManagerConnectivityConfigurationArgs;
 * import com.pulumi.azure.network.inputs.NetworkManagerConnectivityConfigurationAppliesToGroupArgs;
 * import com.pulumi.azure.network.inputs.NetworkManagerConnectivityConfigurationHubArgs;
 * import com.pulumi.azure.network.NetworkManagerDeployment;
 * import com.pulumi.azure.network.NetworkManagerDeploymentArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var exampleResourceGroup = new ResourceGroup(&#34;exampleResourceGroup&#34;, ResourceGroupArgs.builder()        
 *             .location(&#34;West Europe&#34;)
 *             .build());
 * 
 *         final var current = CoreFunctions.getSubscription();
 * 
 *         var exampleNetworkManager = new NetworkManager(&#34;exampleNetworkManager&#34;, NetworkManagerArgs.builder()        
 *             .location(exampleResourceGroup.location())
 *             .resourceGroupName(exampleResourceGroup.name())
 *             .scope(NetworkManagerScopeArgs.builder()
 *                 .subscriptionIds(current.applyValue(getSubscriptionResult -&gt; getSubscriptionResult.id()))
 *                 .build())
 *             .scopeAccesses(            
 *                 &#34;Connectivity&#34;,
 *                 &#34;SecurityAdmin&#34;)
 *             .description(&#34;example network manager&#34;)
 *             .build());
 * 
 *         var exampleNetworkManagerNetworkGroup = new NetworkManagerNetworkGroup(&#34;exampleNetworkManagerNetworkGroup&#34;, NetworkManagerNetworkGroupArgs.builder()        
 *             .networkManagerId(exampleNetworkManager.id())
 *             .build());
 * 
 *         var exampleVirtualNetwork = new VirtualNetwork(&#34;exampleVirtualNetwork&#34;, VirtualNetworkArgs.builder()        
 *             .location(exampleResourceGroup.location())
 *             .resourceGroupName(exampleResourceGroup.name())
 *             .addressSpaces(&#34;10.0.0.0/16&#34;)
 *             .flowTimeoutInMinutes(10)
 *             .build());
 * 
 *         var exampleNetworkManagerConnectivityConfiguration = new NetworkManagerConnectivityConfiguration(&#34;exampleNetworkManagerConnectivityConfiguration&#34;, NetworkManagerConnectivityConfigurationArgs.builder()        
 *             .networkManagerId(exampleNetworkManager.id())
 *             .connectivityTopology(&#34;HubAndSpoke&#34;)
 *             .appliesToGroups(NetworkManagerConnectivityConfigurationAppliesToGroupArgs.builder()
 *                 .groupConnectivity(&#34;None&#34;)
 *                 .networkGroupId(exampleNetworkManagerNetworkGroup.id())
 *                 .build())
 *             .hub(NetworkManagerConnectivityConfigurationHubArgs.builder()
 *                 .resourceId(exampleVirtualNetwork.id())
 *                 .resourceType(&#34;Microsoft.Network/virtualNetworks&#34;)
 *                 .build())
 *             .build());
 * 
 *         var exampleNetworkManagerDeployment = new NetworkManagerDeployment(&#34;exampleNetworkManagerDeployment&#34;, NetworkManagerDeploymentArgs.builder()        
 *             .networkManagerId(exampleNetworkManager.id())
 *             .location(&#34;eastus&#34;)
 *             .scopeAccess(&#34;Connectivity&#34;)
 *             .configurationIds(exampleNetworkManagerConnectivityConfiguration.id())
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * Network Manager Deployment can be imported using the `resource id`, e.g.
 * 
 * ```sh
 *  $ pulumi import azure:network/networkManagerDeployment:NetworkManagerDeployment example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resourceGroup1/providers/Microsoft.Network/networkManagers/networkManager1/commit|eastus|Connectivity
 * ```
 * 
 */
@ResourceType(type="azure:network/networkManagerDeployment:NetworkManagerDeployment")
public class NetworkManagerDeployment extends com.pulumi.resources.CustomResource {
    /**
     * A list of Network Manager Configuration IDs which should be aligned with `scope_access`.
     * 
     */
    @Export(name="configurationIds", refs={List.class,String.class}, tree="[0,1]")
    private Output<List<String>> configurationIds;

    /**
     * @return A list of Network Manager Configuration IDs which should be aligned with `scope_access`.
     * 
     */
    public Output<List<String>> configurationIds() {
        return this.configurationIds;
    }
    /**
     * Specifies the location which the configurations will be deployed to. Changing this forces a new Network Manager Deployment to be created.
     * 
     */
    @Export(name="location", refs={String.class}, tree="[0]")
    private Output<String> location;

    /**
     * @return Specifies the location which the configurations will be deployed to. Changing this forces a new Network Manager Deployment to be created.
     * 
     */
    public Output<String> location() {
        return this.location;
    }
    /**
     * Specifies the ID of the Network Manager. Changing this forces a new Network Manager Deployment to be created.
     * 
     */
    @Export(name="networkManagerId", refs={String.class}, tree="[0]")
    private Output<String> networkManagerId;

    /**
     * @return Specifies the ID of the Network Manager. Changing this forces a new Network Manager Deployment to be created.
     * 
     */
    public Output<String> networkManagerId() {
        return this.networkManagerId;
    }
    /**
     * Specifies the configuration deployment type. Possible values are `Connectivity` and `SecurityAdmin`. Changing this forces a new Network Manager Deployment to be created.
     * 
     */
    @Export(name="scopeAccess", refs={String.class}, tree="[0]")
    private Output<String> scopeAccess;

    /**
     * @return Specifies the configuration deployment type. Possible values are `Connectivity` and `SecurityAdmin`. Changing this forces a new Network Manager Deployment to be created.
     * 
     */
    public Output<String> scopeAccess() {
        return this.scopeAccess;
    }
    /**
     * A mapping of key values pairs that can be used to keep the deployment up with the Network Manager configurations and rules.
     * 
     */
    @Export(name="triggers", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output</* @Nullable */ Map<String,String>> triggers;

    /**
     * @return A mapping of key values pairs that can be used to keep the deployment up with the Network Manager configurations and rules.
     * 
     */
    public Output<Optional<Map<String,String>>> triggers() {
        return Codegen.optional(this.triggers);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public NetworkManagerDeployment(String name) {
        this(name, NetworkManagerDeploymentArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public NetworkManagerDeployment(String name, NetworkManagerDeploymentArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public NetworkManagerDeployment(String name, NetworkManagerDeploymentArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:network/networkManagerDeployment:NetworkManagerDeployment", name, args == null ? NetworkManagerDeploymentArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private NetworkManagerDeployment(String name, Output<String> id, @Nullable NetworkManagerDeploymentState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:network/networkManagerDeployment:NetworkManagerDeployment", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static NetworkManagerDeployment get(String name, Output<String> id, @Nullable NetworkManagerDeploymentState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new NetworkManagerDeployment(name, id, state, options);
    }
}
