// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.servicefabric.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class ManagedClusterAuthenticationActiveDirectoryArgs extends com.pulumi.resources.ResourceArgs {

    public static final ManagedClusterAuthenticationActiveDirectoryArgs Empty = new ManagedClusterAuthenticationActiveDirectoryArgs();

    /**
     * The ID of the Client Application.
     * 
     */
    @Import(name="clientApplicationId", required=true)
    private Output<String> clientApplicationId;

    /**
     * @return The ID of the Client Application.
     * 
     */
    public Output<String> clientApplicationId() {
        return this.clientApplicationId;
    }

    /**
     * The ID of the Cluster Application.
     * 
     */
    @Import(name="clusterApplicationId", required=true)
    private Output<String> clusterApplicationId;

    /**
     * @return The ID of the Cluster Application.
     * 
     */
    public Output<String> clusterApplicationId() {
        return this.clusterApplicationId;
    }

    /**
     * The ID of the Tenant.
     * 
     */
    @Import(name="tenantId", required=true)
    private Output<String> tenantId;

    /**
     * @return The ID of the Tenant.
     * 
     */
    public Output<String> tenantId() {
        return this.tenantId;
    }

    private ManagedClusterAuthenticationActiveDirectoryArgs() {}

    private ManagedClusterAuthenticationActiveDirectoryArgs(ManagedClusterAuthenticationActiveDirectoryArgs $) {
        this.clientApplicationId = $.clientApplicationId;
        this.clusterApplicationId = $.clusterApplicationId;
        this.tenantId = $.tenantId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ManagedClusterAuthenticationActiveDirectoryArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ManagedClusterAuthenticationActiveDirectoryArgs $;

        public Builder() {
            $ = new ManagedClusterAuthenticationActiveDirectoryArgs();
        }

        public Builder(ManagedClusterAuthenticationActiveDirectoryArgs defaults) {
            $ = new ManagedClusterAuthenticationActiveDirectoryArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param clientApplicationId The ID of the Client Application.
         * 
         * @return builder
         * 
         */
        public Builder clientApplicationId(Output<String> clientApplicationId) {
            $.clientApplicationId = clientApplicationId;
            return this;
        }

        /**
         * @param clientApplicationId The ID of the Client Application.
         * 
         * @return builder
         * 
         */
        public Builder clientApplicationId(String clientApplicationId) {
            return clientApplicationId(Output.of(clientApplicationId));
        }

        /**
         * @param clusterApplicationId The ID of the Cluster Application.
         * 
         * @return builder
         * 
         */
        public Builder clusterApplicationId(Output<String> clusterApplicationId) {
            $.clusterApplicationId = clusterApplicationId;
            return this;
        }

        /**
         * @param clusterApplicationId The ID of the Cluster Application.
         * 
         * @return builder
         * 
         */
        public Builder clusterApplicationId(String clusterApplicationId) {
            return clusterApplicationId(Output.of(clusterApplicationId));
        }

        /**
         * @param tenantId The ID of the Tenant.
         * 
         * @return builder
         * 
         */
        public Builder tenantId(Output<String> tenantId) {
            $.tenantId = tenantId;
            return this;
        }

        /**
         * @param tenantId The ID of the Tenant.
         * 
         * @return builder
         * 
         */
        public Builder tenantId(String tenantId) {
            return tenantId(Output.of(tenantId));
        }

        public ManagedClusterAuthenticationActiveDirectoryArgs build() {
            if ($.clientApplicationId == null) {
                throw new MissingRequiredPropertyException("ManagedClusterAuthenticationActiveDirectoryArgs", "clientApplicationId");
            }
            if ($.clusterApplicationId == null) {
                throw new MissingRequiredPropertyException("ManagedClusterAuthenticationActiveDirectoryArgs", "clusterApplicationId");
            }
            if ($.tenantId == null) {
                throw new MissingRequiredPropertyException("ManagedClusterAuthenticationActiveDirectoryArgs", "tenantId");
            }
            return $;
        }
    }

}
