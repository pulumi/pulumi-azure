// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.compute;

import com.pulumi.azure.Utilities;
import com.pulumi.azure.compute.ScaleSetArgs;
import com.pulumi.azure.compute.inputs.ScaleSetState;
import com.pulumi.azure.compute.outputs.ScaleSetBootDiagnostics;
import com.pulumi.azure.compute.outputs.ScaleSetExtension;
import com.pulumi.azure.compute.outputs.ScaleSetIdentity;
import com.pulumi.azure.compute.outputs.ScaleSetNetworkProfile;
import com.pulumi.azure.compute.outputs.ScaleSetOsProfile;
import com.pulumi.azure.compute.outputs.ScaleSetOsProfileLinuxConfig;
import com.pulumi.azure.compute.outputs.ScaleSetOsProfileSecret;
import com.pulumi.azure.compute.outputs.ScaleSetOsProfileWindowsConfig;
import com.pulumi.azure.compute.outputs.ScaleSetPlan;
import com.pulumi.azure.compute.outputs.ScaleSetRollingUpgradePolicy;
import com.pulumi.azure.compute.outputs.ScaleSetSku;
import com.pulumi.azure.compute.outputs.ScaleSetStorageProfileDataDisk;
import com.pulumi.azure.compute.outputs.ScaleSetStorageProfileImageReference;
import com.pulumi.azure.compute.outputs.ScaleSetStorageProfileOsDisk;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Manages a virtual machine scale set.
 * 
 * ## Example Usage
 * 
 * ### With Managed Disks (Recommended)
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.azure.core.ResourceGroup;
 * import com.pulumi.azure.core.ResourceGroupArgs;
 * import com.pulumi.azure.network.VirtualNetwork;
 * import com.pulumi.azure.network.VirtualNetworkArgs;
 * import com.pulumi.azure.network.Subnet;
 * import com.pulumi.azure.network.SubnetArgs;
 * import com.pulumi.azure.network.PublicIp;
 * import com.pulumi.azure.network.PublicIpArgs;
 * import com.pulumi.azure.lb.LoadBalancer;
 * import com.pulumi.azure.lb.LoadBalancerArgs;
 * import com.pulumi.azure.lb.inputs.LoadBalancerFrontendIpConfigurationArgs;
 * import com.pulumi.azure.lb.BackendAddressPool;
 * import com.pulumi.azure.lb.BackendAddressPoolArgs;
 * import com.pulumi.azure.lb.NatPool;
 * import com.pulumi.azure.lb.NatPoolArgs;
 * import com.pulumi.azure.lb.Probe;
 * import com.pulumi.azure.lb.ProbeArgs;
 * import com.pulumi.azure.compute.ScaleSet;
 * import com.pulumi.azure.compute.ScaleSetArgs;
 * import com.pulumi.azure.compute.inputs.ScaleSetRollingUpgradePolicyArgs;
 * import com.pulumi.azure.compute.inputs.ScaleSetSkuArgs;
 * import com.pulumi.azure.compute.inputs.ScaleSetStorageProfileImageReferenceArgs;
 * import com.pulumi.azure.compute.inputs.ScaleSetStorageProfileOsDiskArgs;
 * import com.pulumi.azure.compute.inputs.ScaleSetStorageProfileDataDiskArgs;
 * import com.pulumi.azure.compute.inputs.ScaleSetOsProfileArgs;
 * import com.pulumi.azure.compute.inputs.ScaleSetOsProfileLinuxConfigArgs;
 * import com.pulumi.azure.compute.inputs.ScaleSetNetworkProfileArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new ResourceGroup("example", ResourceGroupArgs.builder()
 *             .name("example-resources")
 *             .location("West Europe")
 *             .build());
 * 
 *         var exampleVirtualNetwork = new VirtualNetwork("exampleVirtualNetwork", VirtualNetworkArgs.builder()
 *             .name("acctvn")
 *             .addressSpaces("10.0.0.0/16")
 *             .location(example.location())
 *             .resourceGroupName(example.name())
 *             .build());
 * 
 *         var exampleSubnet = new Subnet("exampleSubnet", SubnetArgs.builder()
 *             .name("acctsub")
 *             .resourceGroupName(example.name())
 *             .virtualNetworkName(exampleVirtualNetwork.name())
 *             .addressPrefixes("10.0.2.0/24")
 *             .build());
 * 
 *         var examplePublicIp = new PublicIp("examplePublicIp", PublicIpArgs.builder()
 *             .name("test")
 *             .location(example.location())
 *             .resourceGroupName(example.name())
 *             .allocationMethod("Static")
 *             .domainNameLabel(example.name())
 *             .tags(Map.of("environment", "staging"))
 *             .build());
 * 
 *         var exampleLoadBalancer = new LoadBalancer("exampleLoadBalancer", LoadBalancerArgs.builder()
 *             .name("test")
 *             .location(example.location())
 *             .resourceGroupName(example.name())
 *             .frontendIpConfigurations(LoadBalancerFrontendIpConfigurationArgs.builder()
 *                 .name("PublicIPAddress")
 *                 .publicIpAddressId(examplePublicIp.id())
 *                 .build())
 *             .build());
 * 
 *         var bpepool = new BackendAddressPool("bpepool", BackendAddressPoolArgs.builder()
 *             .loadbalancerId(exampleLoadBalancer.id())
 *             .name("BackEndAddressPool")
 *             .build());
 * 
 *         var lbnatpool = new NatPool("lbnatpool", NatPoolArgs.builder()
 *             .resourceGroupName(example.name())
 *             .name("ssh")
 *             .loadbalancerId(exampleLoadBalancer.id())
 *             .protocol("Tcp")
 *             .frontendPortStart(50000)
 *             .frontendPortEnd(50119)
 *             .backendPort(22)
 *             .frontendIpConfigurationName("PublicIPAddress")
 *             .build());
 * 
 *         var exampleProbe = new Probe("exampleProbe", ProbeArgs.builder()
 *             .loadbalancerId(exampleLoadBalancer.id())
 *             .name("http-probe")
 *             .protocol("Http")
 *             .requestPath("/health")
 *             .port(8080)
 *             .build());
 * 
 *         var exampleScaleSet = new ScaleSet("exampleScaleSet", ScaleSetArgs.builder()
 *             .name("mytestscaleset-1")
 *             .location(example.location())
 *             .resourceGroupName(example.name())
 *             .automaticOsUpgrade(true)
 *             .upgradePolicyMode("Rolling")
 *             .rollingUpgradePolicy(ScaleSetRollingUpgradePolicyArgs.builder()
 *                 .maxBatchInstancePercent(20)
 *                 .maxUnhealthyInstancePercent(20)
 *                 .maxUnhealthyUpgradedInstancePercent(5)
 *                 .pauseTimeBetweenBatches("PT0S")
 *                 .build())
 *             .healthProbeId(exampleProbe.id())
 *             .sku(ScaleSetSkuArgs.builder()
 *                 .name("Standard_F2")
 *                 .tier("Standard")
 *                 .capacity(2)
 *                 .build())
 *             .storageProfileImageReference(ScaleSetStorageProfileImageReferenceArgs.builder()
 *                 .publisher("Canonical")
 *                 .offer("0001-com-ubuntu-server-jammy")
 *                 .sku("22_04-lts")
 *                 .version("latest")
 *                 .build())
 *             .storageProfileOsDisk(ScaleSetStorageProfileOsDiskArgs.builder()
 *                 .name("")
 *                 .caching("ReadWrite")
 *                 .createOption("FromImage")
 *                 .managedDiskType("Standard_LRS")
 *                 .build())
 *             .storageProfileDataDisks(ScaleSetStorageProfileDataDiskArgs.builder()
 *                 .lun(0)
 *                 .caching("ReadWrite")
 *                 .createOption("Empty")
 *                 .diskSizeGb(10)
 *                 .build())
 *             .osProfile(ScaleSetOsProfileArgs.builder()
 *                 .computerNamePrefix("testvm")
 *                 .adminUsername("myadmin")
 *                 .build())
 *             .osProfileLinuxConfig(ScaleSetOsProfileLinuxConfigArgs.builder()
 *                 .disablePasswordAuthentication(true)
 *                 .sshKeys(ScaleSetOsProfileLinuxConfigSshKeyArgs.builder()
 *                     .path("/home/myadmin/.ssh/authorized_keys")
 *                     .keyData(StdFunctions.file(FileArgs.builder()
 *                         .input("~/.ssh/demo_key.pub")
 *                         .build()).result())
 *                     .build())
 *                 .build())
 *             .networkProfiles(ScaleSetNetworkProfileArgs.builder()
 *                 .name("mynetworkprofile")
 *                 .primary(true)
 *                 .ipConfigurations(ScaleSetNetworkProfileIpConfigurationArgs.builder()
 *                     .name("TestIPConfiguration")
 *                     .primary(true)
 *                     .subnetId(exampleSubnet.id())
 *                     .loadBalancerBackendAddressPoolIds(bpepool.id())
 *                     .loadBalancerInboundNatRulesIds(lbnatpool.id())
 *                     .build())
 *                 .build())
 *             .tags(Map.of("environment", "staging"))
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ### With Unmanaged Disks
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.azure.core.ResourceGroup;
 * import com.pulumi.azure.core.ResourceGroupArgs;
 * import com.pulumi.azure.network.VirtualNetwork;
 * import com.pulumi.azure.network.VirtualNetworkArgs;
 * import com.pulumi.azure.network.Subnet;
 * import com.pulumi.azure.network.SubnetArgs;
 * import com.pulumi.azure.storage.Account;
 * import com.pulumi.azure.storage.AccountArgs;
 * import com.pulumi.azure.storage.Container;
 * import com.pulumi.azure.storage.ContainerArgs;
 * import com.pulumi.azure.compute.ScaleSet;
 * import com.pulumi.azure.compute.ScaleSetArgs;
 * import com.pulumi.azure.compute.inputs.ScaleSetSkuArgs;
 * import com.pulumi.azure.compute.inputs.ScaleSetOsProfileArgs;
 * import com.pulumi.azure.compute.inputs.ScaleSetOsProfileLinuxConfigArgs;
 * import com.pulumi.azure.compute.inputs.ScaleSetNetworkProfileArgs;
 * import com.pulumi.azure.compute.inputs.ScaleSetStorageProfileOsDiskArgs;
 * import com.pulumi.azure.compute.inputs.ScaleSetStorageProfileImageReferenceArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new ResourceGroup("example", ResourceGroupArgs.builder()
 *             .name("example-resources")
 *             .location("West Europe")
 *             .build());
 * 
 *         var exampleVirtualNetwork = new VirtualNetwork("exampleVirtualNetwork", VirtualNetworkArgs.builder()
 *             .name("acctvn")
 *             .addressSpaces("10.0.0.0/16")
 *             .location(example.location())
 *             .resourceGroupName(example.name())
 *             .build());
 * 
 *         var exampleSubnet = new Subnet("exampleSubnet", SubnetArgs.builder()
 *             .name("acctsub")
 *             .resourceGroupName(example.name())
 *             .virtualNetworkName(exampleVirtualNetwork.name())
 *             .addressPrefixes("10.0.2.0/24")
 *             .build());
 * 
 *         var exampleAccount = new Account("exampleAccount", AccountArgs.builder()
 *             .name("accsa")
 *             .resourceGroupName(example.name())
 *             .location(example.location())
 *             .accountTier("Standard")
 *             .accountReplicationType("LRS")
 *             .tags(Map.of("environment", "staging"))
 *             .build());
 * 
 *         var exampleContainer = new Container("exampleContainer", ContainerArgs.builder()
 *             .name("vhds")
 *             .storageAccountName(exampleAccount.name())
 *             .containerAccessType("private")
 *             .build());
 * 
 *         var exampleScaleSet = new ScaleSet("exampleScaleSet", ScaleSetArgs.builder()
 *             .name("mytestscaleset-1")
 *             .location(example.location())
 *             .resourceGroupName(example.name())
 *             .upgradePolicyMode("Manual")
 *             .sku(ScaleSetSkuArgs.builder()
 *                 .name("Standard_F2")
 *                 .tier("Standard")
 *                 .capacity(2)
 *                 .build())
 *             .osProfile(ScaleSetOsProfileArgs.builder()
 *                 .computerNamePrefix("testvm")
 *                 .adminUsername("myadmin")
 *                 .build())
 *             .osProfileLinuxConfig(ScaleSetOsProfileLinuxConfigArgs.builder()
 *                 .disablePasswordAuthentication(true)
 *                 .sshKeys(ScaleSetOsProfileLinuxConfigSshKeyArgs.builder()
 *                     .path("/home/myadmin/.ssh/authorized_keys")
 *                     .keyData(StdFunctions.file(FileArgs.builder()
 *                         .input("~/.ssh/demo_key.pub")
 *                         .build()).result())
 *                     .build())
 *                 .build())
 *             .networkProfiles(ScaleSetNetworkProfileArgs.builder()
 *                 .name("TestNetworkProfile")
 *                 .primary(true)
 *                 .ipConfigurations(ScaleSetNetworkProfileIpConfigurationArgs.builder()
 *                     .name("TestIPConfiguration")
 *                     .primary(true)
 *                     .subnetId(exampleSubnet.id())
 *                     .build())
 *                 .build())
 *             .storageProfileOsDisk(ScaleSetStorageProfileOsDiskArgs.builder()
 *                 .name("osDiskProfile")
 *                 .caching("ReadWrite")
 *                 .createOption("FromImage")
 *                 .vhdContainers(Output.tuple(exampleAccount.primaryBlobEndpoint(), exampleContainer.name()).applyValue(values -> {
 *                     var primaryBlobEndpoint = values.t1;
 *                     var name = values.t2;
 *                     return String.format("%s%s", primaryBlobEndpoint,name);
 *                 }))
 *                 .build())
 *             .storageProfileImageReference(ScaleSetStorageProfileImageReferenceArgs.builder()
 *                 .publisher("Canonical")
 *                 .offer("0001-com-ubuntu-server-jammy")
 *                 .sku("22_04-lts")
 *                 .version("latest")
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Example of storage_profile_image_reference with id
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.azure.compute.Image;
 * import com.pulumi.azure.compute.ImageArgs;
 * import com.pulumi.azure.compute.ScaleSet;
 * import com.pulumi.azure.compute.ScaleSetArgs;
 * import com.pulumi.azure.compute.inputs.ScaleSetStorageProfileImageReferenceArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new Image("example", ImageArgs.builder()
 *             .name("test")
 *             .build());
 * 
 *         var exampleScaleSet = new ScaleSet("exampleScaleSet", ScaleSetArgs.builder()
 *             .name("test")
 *             .storageProfileImageReference(ScaleSetStorageProfileImageReferenceArgs.builder()
 *                 .id(example.id())
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * Virtual Machine Scale Sets can be imported using the `resource id`, e.g.
 * 
 * ```sh
 * $ pulumi import azure:compute/scaleSet:ScaleSet scaleset1 /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/mygroup1/providers/Microsoft.Compute/virtualMachineScaleSets/scaleset1
 * ```
 * 
 */
@ResourceType(type="azure:compute/scaleSet:ScaleSet")
public class ScaleSet extends com.pulumi.resources.CustomResource {
    /**
     * Automatic OS patches can be applied by Azure to your scaleset. This is particularly useful when `upgrade_policy_mode` is set to `Rolling`. Defaults to `false`.
     * 
     */
    @Export(name="automaticOsUpgrade", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> automaticOsUpgrade;

    /**
     * @return Automatic OS patches can be applied by Azure to your scaleset. This is particularly useful when `upgrade_policy_mode` is set to `Rolling`. Defaults to `false`.
     * 
     */
    public Output<Optional<Boolean>> automaticOsUpgrade() {
        return Codegen.optional(this.automaticOsUpgrade);
    }
    /**
     * A `boot_diagnostics` block as referenced below.
     * 
     */
    @Export(name="bootDiagnostics", refs={ScaleSetBootDiagnostics.class}, tree="[0]")
    private Output</* @Nullable */ ScaleSetBootDiagnostics> bootDiagnostics;

    /**
     * @return A `boot_diagnostics` block as referenced below.
     * 
     */
    public Output<Optional<ScaleSetBootDiagnostics>> bootDiagnostics() {
        return Codegen.optional(this.bootDiagnostics);
    }
    /**
     * Specifies the eviction policy for Virtual Machines in this Scale Set. Possible values are `Deallocate` and `Delete`. Changing this forces a new resource to be created.
     * 
     * &gt; **NOTE:** `eviction_policy` can only be set when `priority` is set to `Low`.
     * 
     */
    @Export(name="evictionPolicy", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> evictionPolicy;

    /**
     * @return Specifies the eviction policy for Virtual Machines in this Scale Set. Possible values are `Deallocate` and `Delete`. Changing this forces a new resource to be created.
     * 
     * &gt; **NOTE:** `eviction_policy` can only be set when `priority` is set to `Low`.
     * 
     */
    public Output<Optional<String>> evictionPolicy() {
        return Codegen.optional(this.evictionPolicy);
    }
    /**
     * Can be specified multiple times to add extension profiles to the scale set. Each `extension` block supports the fields documented below.
     * 
     */
    @Export(name="extensions", refs={List.class,ScaleSetExtension.class}, tree="[0,1]")
    private Output</* @Nullable */ List<ScaleSetExtension>> extensions;

    /**
     * @return Can be specified multiple times to add extension profiles to the scale set. Each `extension` block supports the fields documented below.
     * 
     */
    public Output<Optional<List<ScaleSetExtension>>> extensions() {
        return Codegen.optional(this.extensions);
    }
    /**
     * Specifies the identifier for the load balancer health probe. Required when using `Rolling` as your `upgrade_policy_mode`.
     * 
     */
    @Export(name="healthProbeId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> healthProbeId;

    /**
     * @return Specifies the identifier for the load balancer health probe. Required when using `Rolling` as your `upgrade_policy_mode`.
     * 
     */
    public Output<Optional<String>> healthProbeId() {
        return Codegen.optional(this.healthProbeId);
    }
    /**
     * An `identity` block as defined below.
     * 
     */
    @Export(name="identity", refs={ScaleSetIdentity.class}, tree="[0]")
    private Output</* @Nullable */ ScaleSetIdentity> identity;

    /**
     * @return An `identity` block as defined below.
     * 
     */
    public Output<Optional<ScaleSetIdentity>> identity() {
        return Codegen.optional(this.identity);
    }
    /**
     * (Optional, when a Windows machine) Specifies the Windows OS license type. If supplied, the only allowed values are `Windows_Client` and `Windows_Server`.
     * 
     */
    @Export(name="licenseType", refs={String.class}, tree="[0]")
    private Output<String> licenseType;

    /**
     * @return (Optional, when a Windows machine) Specifies the Windows OS license type. If supplied, the only allowed values are `Windows_Client` and `Windows_Server`.
     * 
     */
    public Output<String> licenseType() {
        return this.licenseType;
    }
    /**
     * Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="location", refs={String.class}, tree="[0]")
    private Output<String> location;

    /**
     * @return Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> location() {
        return this.location;
    }
    /**
     * Specifies the name of the virtual machine scale set resource. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return Specifies the name of the virtual machine scale set resource. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * A collection of `network_profile` blocks as documented below.
     * 
     */
    @Export(name="networkProfiles", refs={List.class,ScaleSetNetworkProfile.class}, tree="[0,1]")
    private Output<List<ScaleSetNetworkProfile>> networkProfiles;

    /**
     * @return A collection of `network_profile` blocks as documented below.
     * 
     */
    public Output<List<ScaleSetNetworkProfile>> networkProfiles() {
        return this.networkProfiles;
    }
    /**
     * A `os_profile` block as documented below.
     * 
     */
    @Export(name="osProfile", refs={ScaleSetOsProfile.class}, tree="[0]")
    private Output<ScaleSetOsProfile> osProfile;

    /**
     * @return A `os_profile` block as documented below.
     * 
     */
    public Output<ScaleSetOsProfile> osProfile() {
        return this.osProfile;
    }
    /**
     * A `os_profile_linux_config` block as documented below.
     * 
     */
    @Export(name="osProfileLinuxConfig", refs={ScaleSetOsProfileLinuxConfig.class}, tree="[0]")
    private Output<ScaleSetOsProfileLinuxConfig> osProfileLinuxConfig;

    /**
     * @return A `os_profile_linux_config` block as documented below.
     * 
     */
    public Output<ScaleSetOsProfileLinuxConfig> osProfileLinuxConfig() {
        return this.osProfileLinuxConfig;
    }
    /**
     * A collection of `os_profile_secrets` blocks as documented below.
     * 
     */
    @Export(name="osProfileSecrets", refs={List.class,ScaleSetOsProfileSecret.class}, tree="[0,1]")
    private Output</* @Nullable */ List<ScaleSetOsProfileSecret>> osProfileSecrets;

    /**
     * @return A collection of `os_profile_secrets` blocks as documented below.
     * 
     */
    public Output<Optional<List<ScaleSetOsProfileSecret>>> osProfileSecrets() {
        return Codegen.optional(this.osProfileSecrets);
    }
    /**
     * A `os_profile_windows_config` block as documented below.
     * 
     */
    @Export(name="osProfileWindowsConfig", refs={ScaleSetOsProfileWindowsConfig.class}, tree="[0]")
    private Output</* @Nullable */ ScaleSetOsProfileWindowsConfig> osProfileWindowsConfig;

    /**
     * @return A `os_profile_windows_config` block as documented below.
     * 
     */
    public Output<Optional<ScaleSetOsProfileWindowsConfig>> osProfileWindowsConfig() {
        return Codegen.optional(this.osProfileWindowsConfig);
    }
    /**
     * Specifies whether the virtual machine scale set should be overprovisioned. Defaults to `true`.
     * 
     */
    @Export(name="overprovision", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> overprovision;

    /**
     * @return Specifies whether the virtual machine scale set should be overprovisioned. Defaults to `true`.
     * 
     */
    public Output<Optional<Boolean>> overprovision() {
        return Codegen.optional(this.overprovision);
    }
    /**
     * A `plan` block as documented below.
     * 
     */
    @Export(name="plan", refs={ScaleSetPlan.class}, tree="[0]")
    private Output</* @Nullable */ ScaleSetPlan> plan;

    /**
     * @return A `plan` block as documented below.
     * 
     */
    public Output<Optional<ScaleSetPlan>> plan() {
        return Codegen.optional(this.plan);
    }
    /**
     * Specifies the priority for the Virtual Machines in the Scale Set. Possible values are `Low` and `Regular`. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="priority", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> priority;

    /**
     * @return Specifies the priority for the Virtual Machines in the Scale Set. Possible values are `Low` and `Regular`. Changing this forces a new resource to be created.
     * 
     */
    public Output<Optional<String>> priority() {
        return Codegen.optional(this.priority);
    }
    /**
     * The ID of the Proximity Placement Group to which this Virtual Machine should be assigned. Changing this forces a new resource to be created
     * 
     */
    @Export(name="proximityPlacementGroupId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> proximityPlacementGroupId;

    /**
     * @return The ID of the Proximity Placement Group to which this Virtual Machine should be assigned. Changing this forces a new resource to be created
     * 
     */
    public Output<Optional<String>> proximityPlacementGroupId() {
        return Codegen.optional(this.proximityPlacementGroupId);
    }
    /**
     * The name of the resource group in which to create the virtual machine scale set. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="resourceGroupName", refs={String.class}, tree="[0]")
    private Output<String> resourceGroupName;

    /**
     * @return The name of the resource group in which to create the virtual machine scale set. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }
    /**
     * A `rolling_upgrade_policy` block as defined below. This is only applicable when the `upgrade_policy_mode` is `Rolling`.
     * 
     */
    @Export(name="rollingUpgradePolicy", refs={ScaleSetRollingUpgradePolicy.class}, tree="[0]")
    private Output</* @Nullable */ ScaleSetRollingUpgradePolicy> rollingUpgradePolicy;

    /**
     * @return A `rolling_upgrade_policy` block as defined below. This is only applicable when the `upgrade_policy_mode` is `Rolling`.
     * 
     */
    public Output<Optional<ScaleSetRollingUpgradePolicy>> rollingUpgradePolicy() {
        return Codegen.optional(this.rollingUpgradePolicy);
    }
    /**
     * Specifies whether the scale set is limited to a single placement group with a maximum size of 100 virtual machines. If set to false, managed disks must be used. Changing this forces a new resource to be created. See [documentation](https://docs.microsoft.com/azure/virtual-machine-scale-sets/virtual-machine-scale-sets-placement-groups) for more information. Defaults to `true`.
     * 
     */
    @Export(name="singlePlacementGroup", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> singlePlacementGroup;

    /**
     * @return Specifies whether the scale set is limited to a single placement group with a maximum size of 100 virtual machines. If set to false, managed disks must be used. Changing this forces a new resource to be created. See [documentation](https://docs.microsoft.com/azure/virtual-machine-scale-sets/virtual-machine-scale-sets-placement-groups) for more information. Defaults to `true`.
     * 
     */
    public Output<Optional<Boolean>> singlePlacementGroup() {
        return Codegen.optional(this.singlePlacementGroup);
    }
    /**
     * A `sku` block as documented below.
     * 
     */
    @Export(name="sku", refs={ScaleSetSku.class}, tree="[0]")
    private Output<ScaleSetSku> sku;

    /**
     * @return A `sku` block as documented below.
     * 
     */
    public Output<ScaleSetSku> sku() {
        return this.sku;
    }
    /**
     * A `storage_profile_data_disk` block as documented below.
     * 
     */
    @Export(name="storageProfileDataDisks", refs={List.class,ScaleSetStorageProfileDataDisk.class}, tree="[0,1]")
    private Output</* @Nullable */ List<ScaleSetStorageProfileDataDisk>> storageProfileDataDisks;

    /**
     * @return A `storage_profile_data_disk` block as documented below.
     * 
     */
    public Output<Optional<List<ScaleSetStorageProfileDataDisk>>> storageProfileDataDisks() {
        return Codegen.optional(this.storageProfileDataDisks);
    }
    /**
     * A `storage_profile_image_reference` block as documented below.
     * 
     */
    @Export(name="storageProfileImageReference", refs={ScaleSetStorageProfileImageReference.class}, tree="[0]")
    private Output<ScaleSetStorageProfileImageReference> storageProfileImageReference;

    /**
     * @return A `storage_profile_image_reference` block as documented below.
     * 
     */
    public Output<ScaleSetStorageProfileImageReference> storageProfileImageReference() {
        return this.storageProfileImageReference;
    }
    /**
     * A `storage_profile_os_disk` block as documented below.
     * 
     */
    @Export(name="storageProfileOsDisk", refs={ScaleSetStorageProfileOsDisk.class}, tree="[0]")
    private Output<ScaleSetStorageProfileOsDisk> storageProfileOsDisk;

    /**
     * @return A `storage_profile_os_disk` block as documented below.
     * 
     */
    public Output<ScaleSetStorageProfileOsDisk> storageProfileOsDisk() {
        return this.storageProfileOsDisk;
    }
    /**
     * A mapping of tags to assign to the resource.
     * 
     */
    @Export(name="tags", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output</* @Nullable */ Map<String,String>> tags;

    /**
     * @return A mapping of tags to assign to the resource.
     * 
     */
    public Output<Optional<Map<String,String>>> tags() {
        return Codegen.optional(this.tags);
    }
    /**
     * Specifies the mode of an upgrade to virtual machines in the scale set. Possible values, `Rolling`, `Manual`, or `Automatic`. When choosing `Rolling`, you will need to set a health probe.
     * 
     */
    @Export(name="upgradePolicyMode", refs={String.class}, tree="[0]")
    private Output<String> upgradePolicyMode;

    /**
     * @return Specifies the mode of an upgrade to virtual machines in the scale set. Possible values, `Rolling`, `Manual`, or `Automatic`. When choosing `Rolling`, you will need to set a health probe.
     * 
     */
    public Output<String> upgradePolicyMode() {
        return this.upgradePolicyMode;
    }
    /**
     * A collection of availability zones to spread the Virtual Machines over. Changing this forces a new resource to be created.
     * 
     * &gt; **NOTE:** Availability Zones are [only supported in several regions at this time](https://docs.microsoft.com/azure/availability-zones/az-overview).
     * 
     */
    @Export(name="zones", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> zones;

    /**
     * @return A collection of availability zones to spread the Virtual Machines over. Changing this forces a new resource to be created.
     * 
     * &gt; **NOTE:** Availability Zones are [only supported in several regions at this time](https://docs.microsoft.com/azure/availability-zones/az-overview).
     * 
     */
    public Output<Optional<List<String>>> zones() {
        return Codegen.optional(this.zones);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public ScaleSet(String name) {
        this(name, ScaleSetArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public ScaleSet(String name, ScaleSetArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public ScaleSet(String name, ScaleSetArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:compute/scaleSet:ScaleSet", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()));
    }

    private ScaleSet(String name, Output<String> id, @Nullable ScaleSetState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:compute/scaleSet:ScaleSet", name, state, makeResourceOptions(options, id));
    }

    private static ScaleSetArgs makeArgs(ScaleSetArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? ScaleSetArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static ScaleSet get(String name, Output<String> id, @Nullable ScaleSetState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new ScaleSet(name, id, state, options);
    }
}
