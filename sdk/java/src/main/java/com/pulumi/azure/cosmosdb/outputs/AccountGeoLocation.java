// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.cosmosdb.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class AccountGeoLocation {
    /**
     * @return The failover priority of the region. A failover priority of `0` indicates a write region. The maximum value for a failover priority = (total number of regions - 1). Failover priority values must be unique for each of the regions in which the database account exists. Changing this causes the location to be re-provisioned and cannot be changed for the location with failover priority `0`.
     * 
     */
    private Integer failoverPriority;
    /**
     * @return The ID of the virtual network subnet.
     * 
     */
    private @Nullable String id;
    /**
     * @return The name of the Azure region to host replicated data. Changing this forces a new resource to be created.
     * 
     */
    private String location;
    /**
     * @return Should zone redundancy be enabled for this region? Defaults to `false`.
     * 
     */
    private @Nullable Boolean zoneRedundant;

    private AccountGeoLocation() {}
    /**
     * @return The failover priority of the region. A failover priority of `0` indicates a write region. The maximum value for a failover priority = (total number of regions - 1). Failover priority values must be unique for each of the regions in which the database account exists. Changing this causes the location to be re-provisioned and cannot be changed for the location with failover priority `0`.
     * 
     */
    public Integer failoverPriority() {
        return this.failoverPriority;
    }
    /**
     * @return The ID of the virtual network subnet.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return The name of the Azure region to host replicated data. Changing this forces a new resource to be created.
     * 
     */
    public String location() {
        return this.location;
    }
    /**
     * @return Should zone redundancy be enabled for this region? Defaults to `false`.
     * 
     */
    public Optional<Boolean> zoneRedundant() {
        return Optional.ofNullable(this.zoneRedundant);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AccountGeoLocation defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer failoverPriority;
        private @Nullable String id;
        private String location;
        private @Nullable Boolean zoneRedundant;
        public Builder() {}
        public Builder(AccountGeoLocation defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.failoverPriority = defaults.failoverPriority;
    	      this.id = defaults.id;
    	      this.location = defaults.location;
    	      this.zoneRedundant = defaults.zoneRedundant;
        }

        @CustomType.Setter
        public Builder failoverPriority(Integer failoverPriority) {
            this.failoverPriority = Objects.requireNonNull(failoverPriority);
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder location(String location) {
            this.location = Objects.requireNonNull(location);
            return this;
        }
        @CustomType.Setter
        public Builder zoneRedundant(@Nullable Boolean zoneRedundant) {
            this.zoneRedundant = zoneRedundant;
            return this;
        }
        public AccountGeoLocation build() {
            final var o = new AccountGeoLocation();
            o.failoverPriority = failoverPriority;
            o.id = id;
            o.location = location;
            o.zoneRedundant = zoneRedundant;
            return o;
        }
    }
}
