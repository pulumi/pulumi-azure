// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.storage.inputs;

import com.pulumi.azure.storage.inputs.ObjectReplicationRuleArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ObjectReplicationState extends com.pulumi.resources.ResourceArgs {

    public static final ObjectReplicationState Empty = new ObjectReplicationState();

    /**
     * The ID of the Object Replication in the destination storage account.
     * 
     */
    @Import(name="destinationObjectReplicationId")
    private @Nullable Output<String> destinationObjectReplicationId;

    /**
     * @return The ID of the Object Replication in the destination storage account.
     * 
     */
    public Optional<Output<String>> destinationObjectReplicationId() {
        return Optional.ofNullable(this.destinationObjectReplicationId);
    }

    /**
     * The ID of the destination storage account. Changing this forces a new Storage Object Replication to be created.
     * 
     */
    @Import(name="destinationStorageAccountId")
    private @Nullable Output<String> destinationStorageAccountId;

    /**
     * @return The ID of the destination storage account. Changing this forces a new Storage Object Replication to be created.
     * 
     */
    public Optional<Output<String>> destinationStorageAccountId() {
        return Optional.ofNullable(this.destinationStorageAccountId);
    }

    /**
     * One or more `rules` blocks as defined below.
     * 
     */
    @Import(name="rules")
    private @Nullable Output<List<ObjectReplicationRuleArgs>> rules;

    /**
     * @return One or more `rules` blocks as defined below.
     * 
     */
    public Optional<Output<List<ObjectReplicationRuleArgs>>> rules() {
        return Optional.ofNullable(this.rules);
    }

    /**
     * The ID of the Object Replication in the source storage account.
     * 
     */
    @Import(name="sourceObjectReplicationId")
    private @Nullable Output<String> sourceObjectReplicationId;

    /**
     * @return The ID of the Object Replication in the source storage account.
     * 
     */
    public Optional<Output<String>> sourceObjectReplicationId() {
        return Optional.ofNullable(this.sourceObjectReplicationId);
    }

    /**
     * The ID of the source storage account. Changing this forces a new Storage Object Replication to be created.
     * 
     */
    @Import(name="sourceStorageAccountId")
    private @Nullable Output<String> sourceStorageAccountId;

    /**
     * @return The ID of the source storage account. Changing this forces a new Storage Object Replication to be created.
     * 
     */
    public Optional<Output<String>> sourceStorageAccountId() {
        return Optional.ofNullable(this.sourceStorageAccountId);
    }

    private ObjectReplicationState() {}

    private ObjectReplicationState(ObjectReplicationState $) {
        this.destinationObjectReplicationId = $.destinationObjectReplicationId;
        this.destinationStorageAccountId = $.destinationStorageAccountId;
        this.rules = $.rules;
        this.sourceObjectReplicationId = $.sourceObjectReplicationId;
        this.sourceStorageAccountId = $.sourceStorageAccountId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ObjectReplicationState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ObjectReplicationState $;

        public Builder() {
            $ = new ObjectReplicationState();
        }

        public Builder(ObjectReplicationState defaults) {
            $ = new ObjectReplicationState(Objects.requireNonNull(defaults));
        }

        /**
         * @param destinationObjectReplicationId The ID of the Object Replication in the destination storage account.
         * 
         * @return builder
         * 
         */
        public Builder destinationObjectReplicationId(@Nullable Output<String> destinationObjectReplicationId) {
            $.destinationObjectReplicationId = destinationObjectReplicationId;
            return this;
        }

        /**
         * @param destinationObjectReplicationId The ID of the Object Replication in the destination storage account.
         * 
         * @return builder
         * 
         */
        public Builder destinationObjectReplicationId(String destinationObjectReplicationId) {
            return destinationObjectReplicationId(Output.of(destinationObjectReplicationId));
        }

        /**
         * @param destinationStorageAccountId The ID of the destination storage account. Changing this forces a new Storage Object Replication to be created.
         * 
         * @return builder
         * 
         */
        public Builder destinationStorageAccountId(@Nullable Output<String> destinationStorageAccountId) {
            $.destinationStorageAccountId = destinationStorageAccountId;
            return this;
        }

        /**
         * @param destinationStorageAccountId The ID of the destination storage account. Changing this forces a new Storage Object Replication to be created.
         * 
         * @return builder
         * 
         */
        public Builder destinationStorageAccountId(String destinationStorageAccountId) {
            return destinationStorageAccountId(Output.of(destinationStorageAccountId));
        }

        /**
         * @param rules One or more `rules` blocks as defined below.
         * 
         * @return builder
         * 
         */
        public Builder rules(@Nullable Output<List<ObjectReplicationRuleArgs>> rules) {
            $.rules = rules;
            return this;
        }

        /**
         * @param rules One or more `rules` blocks as defined below.
         * 
         * @return builder
         * 
         */
        public Builder rules(List<ObjectReplicationRuleArgs> rules) {
            return rules(Output.of(rules));
        }

        /**
         * @param rules One or more `rules` blocks as defined below.
         * 
         * @return builder
         * 
         */
        public Builder rules(ObjectReplicationRuleArgs... rules) {
            return rules(List.of(rules));
        }

        /**
         * @param sourceObjectReplicationId The ID of the Object Replication in the source storage account.
         * 
         * @return builder
         * 
         */
        public Builder sourceObjectReplicationId(@Nullable Output<String> sourceObjectReplicationId) {
            $.sourceObjectReplicationId = sourceObjectReplicationId;
            return this;
        }

        /**
         * @param sourceObjectReplicationId The ID of the Object Replication in the source storage account.
         * 
         * @return builder
         * 
         */
        public Builder sourceObjectReplicationId(String sourceObjectReplicationId) {
            return sourceObjectReplicationId(Output.of(sourceObjectReplicationId));
        }

        /**
         * @param sourceStorageAccountId The ID of the source storage account. Changing this forces a new Storage Object Replication to be created.
         * 
         * @return builder
         * 
         */
        public Builder sourceStorageAccountId(@Nullable Output<String> sourceStorageAccountId) {
            $.sourceStorageAccountId = sourceStorageAccountId;
            return this;
        }

        /**
         * @param sourceStorageAccountId The ID of the source storage account. Changing this forces a new Storage Object Replication to be created.
         * 
         * @return builder
         * 
         */
        public Builder sourceStorageAccountId(String sourceStorageAccountId) {
            return sourceStorageAccountId(Output.of(sourceStorageAccountId));
        }

        public ObjectReplicationState build() {
            return $;
        }
    }

}
