// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.digitaltwins;

import com.pulumi.azure.Utilities;
import com.pulumi.azure.digitaltwins.inputs.GetInstanceArgs;
import com.pulumi.azure.digitaltwins.inputs.GetInstancePlainArgs;
import com.pulumi.azure.digitaltwins.outputs.GetInstanceResult;
import com.pulumi.core.Output;
import com.pulumi.core.TypeShape;
import com.pulumi.deployment.Deployment;
import com.pulumi.deployment.InvokeOptions;
import java.util.concurrent.CompletableFuture;

public final class DigitaltwinsFunctions {
    /**
     * Use this data source to access information about an existing Digital Twins instance.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azure.digitaltwins.DigitaltwinsFunctions;
     * import com.pulumi.azure.digitaltwins.inputs.GetInstanceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = DigitaltwinsFunctions.getInstance(GetInstanceArgs.builder()
     *             .name(&#34;existing-digital-twins&#34;)
     *             .resourceGroupName(&#34;existing-resgroup&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;id&#34;, example.applyValue(getInstanceResult -&gt; getInstanceResult.id()));
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetInstanceResult> getInstance(GetInstanceArgs args) {
        return getInstance(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to access information about an existing Digital Twins instance.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azure.digitaltwins.DigitaltwinsFunctions;
     * import com.pulumi.azure.digitaltwins.inputs.GetInstanceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = DigitaltwinsFunctions.getInstance(GetInstanceArgs.builder()
     *             .name(&#34;existing-digital-twins&#34;)
     *             .resourceGroupName(&#34;existing-resgroup&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;id&#34;, example.applyValue(getInstanceResult -&gt; getInstanceResult.id()));
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetInstanceResult> getInstancePlain(GetInstancePlainArgs args) {
        return getInstancePlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to access information about an existing Digital Twins instance.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azure.digitaltwins.DigitaltwinsFunctions;
     * import com.pulumi.azure.digitaltwins.inputs.GetInstanceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = DigitaltwinsFunctions.getInstance(GetInstanceArgs.builder()
     *             .name(&#34;existing-digital-twins&#34;)
     *             .resourceGroupName(&#34;existing-resgroup&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;id&#34;, example.applyValue(getInstanceResult -&gt; getInstanceResult.id()));
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetInstanceResult> getInstance(GetInstanceArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("azure:digitaltwins/getInstance:getInstance", TypeShape.of(GetInstanceResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to access information about an existing Digital Twins instance.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azure.digitaltwins.DigitaltwinsFunctions;
     * import com.pulumi.azure.digitaltwins.inputs.GetInstanceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = DigitaltwinsFunctions.getInstance(GetInstanceArgs.builder()
     *             .name(&#34;existing-digital-twins&#34;)
     *             .resourceGroupName(&#34;existing-resgroup&#34;)
     *             .build());
     * 
     *         ctx.export(&#34;id&#34;, example.applyValue(getInstanceResult -&gt; getInstanceResult.id()));
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetInstanceResult> getInstancePlain(GetInstancePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("azure:digitaltwins/getInstance:getInstance", TypeShape.of(GetInstanceResult.class), args, Utilities.withVersion(options));
    }
}
