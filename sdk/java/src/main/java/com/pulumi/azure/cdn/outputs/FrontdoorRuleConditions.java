// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.cdn.outputs;

import com.pulumi.azure.cdn.outputs.FrontdoorRuleConditionsClientPortCondition;
import com.pulumi.azure.cdn.outputs.FrontdoorRuleConditionsCookiesCondition;
import com.pulumi.azure.cdn.outputs.FrontdoorRuleConditionsHostNameCondition;
import com.pulumi.azure.cdn.outputs.FrontdoorRuleConditionsHttpVersionCondition;
import com.pulumi.azure.cdn.outputs.FrontdoorRuleConditionsIsDeviceCondition;
import com.pulumi.azure.cdn.outputs.FrontdoorRuleConditionsPostArgsCondition;
import com.pulumi.azure.cdn.outputs.FrontdoorRuleConditionsQueryStringCondition;
import com.pulumi.azure.cdn.outputs.FrontdoorRuleConditionsRemoteAddressCondition;
import com.pulumi.azure.cdn.outputs.FrontdoorRuleConditionsRequestBodyCondition;
import com.pulumi.azure.cdn.outputs.FrontdoorRuleConditionsRequestHeaderCondition;
import com.pulumi.azure.cdn.outputs.FrontdoorRuleConditionsRequestMethodCondition;
import com.pulumi.azure.cdn.outputs.FrontdoorRuleConditionsRequestSchemeCondition;
import com.pulumi.azure.cdn.outputs.FrontdoorRuleConditionsRequestUriCondition;
import com.pulumi.azure.cdn.outputs.FrontdoorRuleConditionsServerPortCondition;
import com.pulumi.azure.cdn.outputs.FrontdoorRuleConditionsSocketAddressCondition;
import com.pulumi.azure.cdn.outputs.FrontdoorRuleConditionsSslProtocolCondition;
import com.pulumi.azure.cdn.outputs.FrontdoorRuleConditionsUrlFileExtensionCondition;
import com.pulumi.azure.cdn.outputs.FrontdoorRuleConditionsUrlFilenameCondition;
import com.pulumi.azure.cdn.outputs.FrontdoorRuleConditionsUrlPathCondition;
import com.pulumi.core.annotations.CustomType;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class FrontdoorRuleConditions {
    /**
     * @return A `client_port_condition` block as defined below.
     * 
     */
    private @Nullable List<FrontdoorRuleConditionsClientPortCondition> clientPortConditions;
    /**
     * @return A `cookies_condition` block as defined below.
     * 
     */
    private @Nullable List<FrontdoorRuleConditionsCookiesCondition> cookiesConditions;
    /**
     * @return A `host_name_condition` block as defined below.
     * 
     */
    private @Nullable List<FrontdoorRuleConditionsHostNameCondition> hostNameConditions;
    /**
     * @return A `http_version_condition` block as defined below.
     * 
     */
    private @Nullable List<FrontdoorRuleConditionsHttpVersionCondition> httpVersionConditions;
    /**
     * @return A `is_device_condition` block as defined below.
     * 
     */
    private @Nullable List<FrontdoorRuleConditionsIsDeviceCondition> isDeviceConditions;
    /**
     * @return A `post_args_condition` block as defined below.
     * 
     */
    private @Nullable List<FrontdoorRuleConditionsPostArgsCondition> postArgsConditions;
    /**
     * @return A `query_string_condition` block as defined below.
     * 
     */
    private @Nullable List<FrontdoorRuleConditionsQueryStringCondition> queryStringConditions;
    /**
     * @return A `remote_address_condition` block as defined below.
     * 
     */
    private @Nullable List<FrontdoorRuleConditionsRemoteAddressCondition> remoteAddressConditions;
    /**
     * @return A `request_body_condition` block as defined below.
     * 
     */
    private @Nullable List<FrontdoorRuleConditionsRequestBodyCondition> requestBodyConditions;
    /**
     * @return A `request_header_condition` block as defined below.
     * 
     */
    private @Nullable List<FrontdoorRuleConditionsRequestHeaderCondition> requestHeaderConditions;
    /**
     * @return A `request_method_condition` block as defined below.
     * 
     */
    private @Nullable List<FrontdoorRuleConditionsRequestMethodCondition> requestMethodConditions;
    /**
     * @return A `request_scheme_condition` block as defined below.
     * 
     */
    private @Nullable List<FrontdoorRuleConditionsRequestSchemeCondition> requestSchemeConditions;
    /**
     * @return A `request_uri_condition` block as defined below.
     * 
     */
    private @Nullable List<FrontdoorRuleConditionsRequestUriCondition> requestUriConditions;
    /**
     * @return A `server_port_condition` block as defined below.
     * 
     */
    private @Nullable List<FrontdoorRuleConditionsServerPortCondition> serverPortConditions;
    /**
     * @return A `socket_address_condition` block as defined below.
     * 
     */
    private @Nullable List<FrontdoorRuleConditionsSocketAddressCondition> socketAddressConditions;
    /**
     * @return A `ssl_protocol_condition` block as defined below.
     * 
     */
    private @Nullable List<FrontdoorRuleConditionsSslProtocolCondition> sslProtocolConditions;
    /**
     * @return A `url_file_extension_condition` block as defined below.
     * 
     */
    private @Nullable List<FrontdoorRuleConditionsUrlFileExtensionCondition> urlFileExtensionConditions;
    /**
     * @return A `url_filename_condition` block as defined below.
     * 
     */
    private @Nullable List<FrontdoorRuleConditionsUrlFilenameCondition> urlFilenameConditions;
    /**
     * @return A `url_path_condition` block as defined below.
     * 
     */
    private @Nullable List<FrontdoorRuleConditionsUrlPathCondition> urlPathConditions;

    private FrontdoorRuleConditions() {}
    /**
     * @return A `client_port_condition` block as defined below.
     * 
     */
    public List<FrontdoorRuleConditionsClientPortCondition> clientPortConditions() {
        return this.clientPortConditions == null ? List.of() : this.clientPortConditions;
    }
    /**
     * @return A `cookies_condition` block as defined below.
     * 
     */
    public List<FrontdoorRuleConditionsCookiesCondition> cookiesConditions() {
        return this.cookiesConditions == null ? List.of() : this.cookiesConditions;
    }
    /**
     * @return A `host_name_condition` block as defined below.
     * 
     */
    public List<FrontdoorRuleConditionsHostNameCondition> hostNameConditions() {
        return this.hostNameConditions == null ? List.of() : this.hostNameConditions;
    }
    /**
     * @return A `http_version_condition` block as defined below.
     * 
     */
    public List<FrontdoorRuleConditionsHttpVersionCondition> httpVersionConditions() {
        return this.httpVersionConditions == null ? List.of() : this.httpVersionConditions;
    }
    /**
     * @return A `is_device_condition` block as defined below.
     * 
     */
    public List<FrontdoorRuleConditionsIsDeviceCondition> isDeviceConditions() {
        return this.isDeviceConditions == null ? List.of() : this.isDeviceConditions;
    }
    /**
     * @return A `post_args_condition` block as defined below.
     * 
     */
    public List<FrontdoorRuleConditionsPostArgsCondition> postArgsConditions() {
        return this.postArgsConditions == null ? List.of() : this.postArgsConditions;
    }
    /**
     * @return A `query_string_condition` block as defined below.
     * 
     */
    public List<FrontdoorRuleConditionsQueryStringCondition> queryStringConditions() {
        return this.queryStringConditions == null ? List.of() : this.queryStringConditions;
    }
    /**
     * @return A `remote_address_condition` block as defined below.
     * 
     */
    public List<FrontdoorRuleConditionsRemoteAddressCondition> remoteAddressConditions() {
        return this.remoteAddressConditions == null ? List.of() : this.remoteAddressConditions;
    }
    /**
     * @return A `request_body_condition` block as defined below.
     * 
     */
    public List<FrontdoorRuleConditionsRequestBodyCondition> requestBodyConditions() {
        return this.requestBodyConditions == null ? List.of() : this.requestBodyConditions;
    }
    /**
     * @return A `request_header_condition` block as defined below.
     * 
     */
    public List<FrontdoorRuleConditionsRequestHeaderCondition> requestHeaderConditions() {
        return this.requestHeaderConditions == null ? List.of() : this.requestHeaderConditions;
    }
    /**
     * @return A `request_method_condition` block as defined below.
     * 
     */
    public List<FrontdoorRuleConditionsRequestMethodCondition> requestMethodConditions() {
        return this.requestMethodConditions == null ? List.of() : this.requestMethodConditions;
    }
    /**
     * @return A `request_scheme_condition` block as defined below.
     * 
     */
    public List<FrontdoorRuleConditionsRequestSchemeCondition> requestSchemeConditions() {
        return this.requestSchemeConditions == null ? List.of() : this.requestSchemeConditions;
    }
    /**
     * @return A `request_uri_condition` block as defined below.
     * 
     */
    public List<FrontdoorRuleConditionsRequestUriCondition> requestUriConditions() {
        return this.requestUriConditions == null ? List.of() : this.requestUriConditions;
    }
    /**
     * @return A `server_port_condition` block as defined below.
     * 
     */
    public List<FrontdoorRuleConditionsServerPortCondition> serverPortConditions() {
        return this.serverPortConditions == null ? List.of() : this.serverPortConditions;
    }
    /**
     * @return A `socket_address_condition` block as defined below.
     * 
     */
    public List<FrontdoorRuleConditionsSocketAddressCondition> socketAddressConditions() {
        return this.socketAddressConditions == null ? List.of() : this.socketAddressConditions;
    }
    /**
     * @return A `ssl_protocol_condition` block as defined below.
     * 
     */
    public List<FrontdoorRuleConditionsSslProtocolCondition> sslProtocolConditions() {
        return this.sslProtocolConditions == null ? List.of() : this.sslProtocolConditions;
    }
    /**
     * @return A `url_file_extension_condition` block as defined below.
     * 
     */
    public List<FrontdoorRuleConditionsUrlFileExtensionCondition> urlFileExtensionConditions() {
        return this.urlFileExtensionConditions == null ? List.of() : this.urlFileExtensionConditions;
    }
    /**
     * @return A `url_filename_condition` block as defined below.
     * 
     */
    public List<FrontdoorRuleConditionsUrlFilenameCondition> urlFilenameConditions() {
        return this.urlFilenameConditions == null ? List.of() : this.urlFilenameConditions;
    }
    /**
     * @return A `url_path_condition` block as defined below.
     * 
     */
    public List<FrontdoorRuleConditionsUrlPathCondition> urlPathConditions() {
        return this.urlPathConditions == null ? List.of() : this.urlPathConditions;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(FrontdoorRuleConditions defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<FrontdoorRuleConditionsClientPortCondition> clientPortConditions;
        private @Nullable List<FrontdoorRuleConditionsCookiesCondition> cookiesConditions;
        private @Nullable List<FrontdoorRuleConditionsHostNameCondition> hostNameConditions;
        private @Nullable List<FrontdoorRuleConditionsHttpVersionCondition> httpVersionConditions;
        private @Nullable List<FrontdoorRuleConditionsIsDeviceCondition> isDeviceConditions;
        private @Nullable List<FrontdoorRuleConditionsPostArgsCondition> postArgsConditions;
        private @Nullable List<FrontdoorRuleConditionsQueryStringCondition> queryStringConditions;
        private @Nullable List<FrontdoorRuleConditionsRemoteAddressCondition> remoteAddressConditions;
        private @Nullable List<FrontdoorRuleConditionsRequestBodyCondition> requestBodyConditions;
        private @Nullable List<FrontdoorRuleConditionsRequestHeaderCondition> requestHeaderConditions;
        private @Nullable List<FrontdoorRuleConditionsRequestMethodCondition> requestMethodConditions;
        private @Nullable List<FrontdoorRuleConditionsRequestSchemeCondition> requestSchemeConditions;
        private @Nullable List<FrontdoorRuleConditionsRequestUriCondition> requestUriConditions;
        private @Nullable List<FrontdoorRuleConditionsServerPortCondition> serverPortConditions;
        private @Nullable List<FrontdoorRuleConditionsSocketAddressCondition> socketAddressConditions;
        private @Nullable List<FrontdoorRuleConditionsSslProtocolCondition> sslProtocolConditions;
        private @Nullable List<FrontdoorRuleConditionsUrlFileExtensionCondition> urlFileExtensionConditions;
        private @Nullable List<FrontdoorRuleConditionsUrlFilenameCondition> urlFilenameConditions;
        private @Nullable List<FrontdoorRuleConditionsUrlPathCondition> urlPathConditions;
        public Builder() {}
        public Builder(FrontdoorRuleConditions defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.clientPortConditions = defaults.clientPortConditions;
    	      this.cookiesConditions = defaults.cookiesConditions;
    	      this.hostNameConditions = defaults.hostNameConditions;
    	      this.httpVersionConditions = defaults.httpVersionConditions;
    	      this.isDeviceConditions = defaults.isDeviceConditions;
    	      this.postArgsConditions = defaults.postArgsConditions;
    	      this.queryStringConditions = defaults.queryStringConditions;
    	      this.remoteAddressConditions = defaults.remoteAddressConditions;
    	      this.requestBodyConditions = defaults.requestBodyConditions;
    	      this.requestHeaderConditions = defaults.requestHeaderConditions;
    	      this.requestMethodConditions = defaults.requestMethodConditions;
    	      this.requestSchemeConditions = defaults.requestSchemeConditions;
    	      this.requestUriConditions = defaults.requestUriConditions;
    	      this.serverPortConditions = defaults.serverPortConditions;
    	      this.socketAddressConditions = defaults.socketAddressConditions;
    	      this.sslProtocolConditions = defaults.sslProtocolConditions;
    	      this.urlFileExtensionConditions = defaults.urlFileExtensionConditions;
    	      this.urlFilenameConditions = defaults.urlFilenameConditions;
    	      this.urlPathConditions = defaults.urlPathConditions;
        }

        @CustomType.Setter
        public Builder clientPortConditions(@Nullable List<FrontdoorRuleConditionsClientPortCondition> clientPortConditions) {

            this.clientPortConditions = clientPortConditions;
            return this;
        }
        public Builder clientPortConditions(FrontdoorRuleConditionsClientPortCondition... clientPortConditions) {
            return clientPortConditions(List.of(clientPortConditions));
        }
        @CustomType.Setter
        public Builder cookiesConditions(@Nullable List<FrontdoorRuleConditionsCookiesCondition> cookiesConditions) {

            this.cookiesConditions = cookiesConditions;
            return this;
        }
        public Builder cookiesConditions(FrontdoorRuleConditionsCookiesCondition... cookiesConditions) {
            return cookiesConditions(List.of(cookiesConditions));
        }
        @CustomType.Setter
        public Builder hostNameConditions(@Nullable List<FrontdoorRuleConditionsHostNameCondition> hostNameConditions) {

            this.hostNameConditions = hostNameConditions;
            return this;
        }
        public Builder hostNameConditions(FrontdoorRuleConditionsHostNameCondition... hostNameConditions) {
            return hostNameConditions(List.of(hostNameConditions));
        }
        @CustomType.Setter
        public Builder httpVersionConditions(@Nullable List<FrontdoorRuleConditionsHttpVersionCondition> httpVersionConditions) {

            this.httpVersionConditions = httpVersionConditions;
            return this;
        }
        public Builder httpVersionConditions(FrontdoorRuleConditionsHttpVersionCondition... httpVersionConditions) {
            return httpVersionConditions(List.of(httpVersionConditions));
        }
        @CustomType.Setter
        public Builder isDeviceConditions(@Nullable List<FrontdoorRuleConditionsIsDeviceCondition> isDeviceConditions) {

            this.isDeviceConditions = isDeviceConditions;
            return this;
        }
        public Builder isDeviceConditions(FrontdoorRuleConditionsIsDeviceCondition... isDeviceConditions) {
            return isDeviceConditions(List.of(isDeviceConditions));
        }
        @CustomType.Setter
        public Builder postArgsConditions(@Nullable List<FrontdoorRuleConditionsPostArgsCondition> postArgsConditions) {

            this.postArgsConditions = postArgsConditions;
            return this;
        }
        public Builder postArgsConditions(FrontdoorRuleConditionsPostArgsCondition... postArgsConditions) {
            return postArgsConditions(List.of(postArgsConditions));
        }
        @CustomType.Setter
        public Builder queryStringConditions(@Nullable List<FrontdoorRuleConditionsQueryStringCondition> queryStringConditions) {

            this.queryStringConditions = queryStringConditions;
            return this;
        }
        public Builder queryStringConditions(FrontdoorRuleConditionsQueryStringCondition... queryStringConditions) {
            return queryStringConditions(List.of(queryStringConditions));
        }
        @CustomType.Setter
        public Builder remoteAddressConditions(@Nullable List<FrontdoorRuleConditionsRemoteAddressCondition> remoteAddressConditions) {

            this.remoteAddressConditions = remoteAddressConditions;
            return this;
        }
        public Builder remoteAddressConditions(FrontdoorRuleConditionsRemoteAddressCondition... remoteAddressConditions) {
            return remoteAddressConditions(List.of(remoteAddressConditions));
        }
        @CustomType.Setter
        public Builder requestBodyConditions(@Nullable List<FrontdoorRuleConditionsRequestBodyCondition> requestBodyConditions) {

            this.requestBodyConditions = requestBodyConditions;
            return this;
        }
        public Builder requestBodyConditions(FrontdoorRuleConditionsRequestBodyCondition... requestBodyConditions) {
            return requestBodyConditions(List.of(requestBodyConditions));
        }
        @CustomType.Setter
        public Builder requestHeaderConditions(@Nullable List<FrontdoorRuleConditionsRequestHeaderCondition> requestHeaderConditions) {

            this.requestHeaderConditions = requestHeaderConditions;
            return this;
        }
        public Builder requestHeaderConditions(FrontdoorRuleConditionsRequestHeaderCondition... requestHeaderConditions) {
            return requestHeaderConditions(List.of(requestHeaderConditions));
        }
        @CustomType.Setter
        public Builder requestMethodConditions(@Nullable List<FrontdoorRuleConditionsRequestMethodCondition> requestMethodConditions) {

            this.requestMethodConditions = requestMethodConditions;
            return this;
        }
        public Builder requestMethodConditions(FrontdoorRuleConditionsRequestMethodCondition... requestMethodConditions) {
            return requestMethodConditions(List.of(requestMethodConditions));
        }
        @CustomType.Setter
        public Builder requestSchemeConditions(@Nullable List<FrontdoorRuleConditionsRequestSchemeCondition> requestSchemeConditions) {

            this.requestSchemeConditions = requestSchemeConditions;
            return this;
        }
        public Builder requestSchemeConditions(FrontdoorRuleConditionsRequestSchemeCondition... requestSchemeConditions) {
            return requestSchemeConditions(List.of(requestSchemeConditions));
        }
        @CustomType.Setter
        public Builder requestUriConditions(@Nullable List<FrontdoorRuleConditionsRequestUriCondition> requestUriConditions) {

            this.requestUriConditions = requestUriConditions;
            return this;
        }
        public Builder requestUriConditions(FrontdoorRuleConditionsRequestUriCondition... requestUriConditions) {
            return requestUriConditions(List.of(requestUriConditions));
        }
        @CustomType.Setter
        public Builder serverPortConditions(@Nullable List<FrontdoorRuleConditionsServerPortCondition> serverPortConditions) {

            this.serverPortConditions = serverPortConditions;
            return this;
        }
        public Builder serverPortConditions(FrontdoorRuleConditionsServerPortCondition... serverPortConditions) {
            return serverPortConditions(List.of(serverPortConditions));
        }
        @CustomType.Setter
        public Builder socketAddressConditions(@Nullable List<FrontdoorRuleConditionsSocketAddressCondition> socketAddressConditions) {

            this.socketAddressConditions = socketAddressConditions;
            return this;
        }
        public Builder socketAddressConditions(FrontdoorRuleConditionsSocketAddressCondition... socketAddressConditions) {
            return socketAddressConditions(List.of(socketAddressConditions));
        }
        @CustomType.Setter
        public Builder sslProtocolConditions(@Nullable List<FrontdoorRuleConditionsSslProtocolCondition> sslProtocolConditions) {

            this.sslProtocolConditions = sslProtocolConditions;
            return this;
        }
        public Builder sslProtocolConditions(FrontdoorRuleConditionsSslProtocolCondition... sslProtocolConditions) {
            return sslProtocolConditions(List.of(sslProtocolConditions));
        }
        @CustomType.Setter
        public Builder urlFileExtensionConditions(@Nullable List<FrontdoorRuleConditionsUrlFileExtensionCondition> urlFileExtensionConditions) {

            this.urlFileExtensionConditions = urlFileExtensionConditions;
            return this;
        }
        public Builder urlFileExtensionConditions(FrontdoorRuleConditionsUrlFileExtensionCondition... urlFileExtensionConditions) {
            return urlFileExtensionConditions(List.of(urlFileExtensionConditions));
        }
        @CustomType.Setter
        public Builder urlFilenameConditions(@Nullable List<FrontdoorRuleConditionsUrlFilenameCondition> urlFilenameConditions) {

            this.urlFilenameConditions = urlFilenameConditions;
            return this;
        }
        public Builder urlFilenameConditions(FrontdoorRuleConditionsUrlFilenameCondition... urlFilenameConditions) {
            return urlFilenameConditions(List.of(urlFilenameConditions));
        }
        @CustomType.Setter
        public Builder urlPathConditions(@Nullable List<FrontdoorRuleConditionsUrlPathCondition> urlPathConditions) {

            this.urlPathConditions = urlPathConditions;
            return this;
        }
        public Builder urlPathConditions(FrontdoorRuleConditionsUrlPathCondition... urlPathConditions) {
            return urlPathConditions(List.of(urlPathConditions));
        }
        public FrontdoorRuleConditions build() {
            final var _resultValue = new FrontdoorRuleConditions();
            _resultValue.clientPortConditions = clientPortConditions;
            _resultValue.cookiesConditions = cookiesConditions;
            _resultValue.hostNameConditions = hostNameConditions;
            _resultValue.httpVersionConditions = httpVersionConditions;
            _resultValue.isDeviceConditions = isDeviceConditions;
            _resultValue.postArgsConditions = postArgsConditions;
            _resultValue.queryStringConditions = queryStringConditions;
            _resultValue.remoteAddressConditions = remoteAddressConditions;
            _resultValue.requestBodyConditions = requestBodyConditions;
            _resultValue.requestHeaderConditions = requestHeaderConditions;
            _resultValue.requestMethodConditions = requestMethodConditions;
            _resultValue.requestSchemeConditions = requestSchemeConditions;
            _resultValue.requestUriConditions = requestUriConditions;
            _resultValue.serverPortConditions = serverPortConditions;
            _resultValue.socketAddressConditions = socketAddressConditions;
            _resultValue.sslProtocolConditions = sslProtocolConditions;
            _resultValue.urlFileExtensionConditions = urlFileExtensionConditions;
            _resultValue.urlFilenameConditions = urlFilenameConditions;
            _resultValue.urlPathConditions = urlPathConditions;
            return _resultValue;
        }
    }
}
