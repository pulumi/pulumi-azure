// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.storage.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.util.Objects;


public final class GetAccountSASServices extends com.pulumi.resources.InvokeArgs {

    public static final GetAccountSASServices Empty = new GetAccountSASServices();

    /**
     * Should permission be granted to `blob` services within this storage account?
     * 
     */
    @Import(name="blob", required=true)
    private Boolean blob;

    /**
     * @return Should permission be granted to `blob` services within this storage account?
     * 
     */
    public Boolean blob() {
        return this.blob;
    }

    /**
     * Should permission be granted to `file` services within this storage account?
     * 
     */
    @Import(name="file", required=true)
    private Boolean file;

    /**
     * @return Should permission be granted to `file` services within this storage account?
     * 
     */
    public Boolean file() {
        return this.file;
    }

    /**
     * Should permission be granted to `queue` services within this storage account?
     * 
     */
    @Import(name="queue", required=true)
    private Boolean queue;

    /**
     * @return Should permission be granted to `queue` services within this storage account?
     * 
     */
    public Boolean queue() {
        return this.queue;
    }

    /**
     * Should permission be granted to `table` services within this storage account?
     * 
     */
    @Import(name="table", required=true)
    private Boolean table;

    /**
     * @return Should permission be granted to `table` services within this storage account?
     * 
     */
    public Boolean table() {
        return this.table;
    }

    private GetAccountSASServices() {}

    private GetAccountSASServices(GetAccountSASServices $) {
        this.blob = $.blob;
        this.file = $.file;
        this.queue = $.queue;
        this.table = $.table;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetAccountSASServices defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetAccountSASServices $;

        public Builder() {
            $ = new GetAccountSASServices();
        }

        public Builder(GetAccountSASServices defaults) {
            $ = new GetAccountSASServices(Objects.requireNonNull(defaults));
        }

        /**
         * @param blob Should permission be granted to `blob` services within this storage account?
         * 
         * @return builder
         * 
         */
        public Builder blob(Boolean blob) {
            $.blob = blob;
            return this;
        }

        /**
         * @param file Should permission be granted to `file` services within this storage account?
         * 
         * @return builder
         * 
         */
        public Builder file(Boolean file) {
            $.file = file;
            return this;
        }

        /**
         * @param queue Should permission be granted to `queue` services within this storage account?
         * 
         * @return builder
         * 
         */
        public Builder queue(Boolean queue) {
            $.queue = queue;
            return this;
        }

        /**
         * @param table Should permission be granted to `table` services within this storage account?
         * 
         * @return builder
         * 
         */
        public Builder table(Boolean table) {
            $.table = table;
            return this;
        }

        public GetAccountSASServices build() {
            if ($.blob == null) {
                throw new MissingRequiredPropertyException("GetAccountSASServices", "blob");
            }
            if ($.file == null) {
                throw new MissingRequiredPropertyException("GetAccountSASServices", "file");
            }
            if ($.queue == null) {
                throw new MissingRequiredPropertyException("GetAccountSASServices", "queue");
            }
            if ($.table == null) {
                throw new MissingRequiredPropertyException("GetAccountSASServices", "table");
            }
            return $;
        }
    }

}
