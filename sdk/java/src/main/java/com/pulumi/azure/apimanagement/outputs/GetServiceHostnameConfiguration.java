// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.apimanagement.outputs;

import com.pulumi.azure.apimanagement.outputs.GetServiceHostnameConfigurationDeveloperPortal;
import com.pulumi.azure.apimanagement.outputs.GetServiceHostnameConfigurationManagement;
import com.pulumi.azure.apimanagement.outputs.GetServiceHostnameConfigurationPortal;
import com.pulumi.azure.apimanagement.outputs.GetServiceHostnameConfigurationProxy;
import com.pulumi.azure.apimanagement.outputs.GetServiceHostnameConfigurationScm;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetServiceHostnameConfiguration {
    /**
     * @return One or more `developer_portal` blocks as documented below.
     * 
     */
    private List<GetServiceHostnameConfigurationDeveloperPortal> developerPortals;
    /**
     * @return One or more `management` blocks as documented below.
     * 
     */
    private List<GetServiceHostnameConfigurationManagement> managements;
    /**
     * @return One or more `portal` blocks as documented below.
     * 
     */
    private List<GetServiceHostnameConfigurationPortal> portals;
    /**
     * @return One or more `proxy` blocks as documented below.
     * 
     */
    private List<GetServiceHostnameConfigurationProxy> proxies;
    /**
     * @return One or more `scm` blocks as documented below.
     * 
     */
    private List<GetServiceHostnameConfigurationScm> scms;

    private GetServiceHostnameConfiguration() {}
    /**
     * @return One or more `developer_portal` blocks as documented below.
     * 
     */
    public List<GetServiceHostnameConfigurationDeveloperPortal> developerPortals() {
        return this.developerPortals;
    }
    /**
     * @return One or more `management` blocks as documented below.
     * 
     */
    public List<GetServiceHostnameConfigurationManagement> managements() {
        return this.managements;
    }
    /**
     * @return One or more `portal` blocks as documented below.
     * 
     */
    public List<GetServiceHostnameConfigurationPortal> portals() {
        return this.portals;
    }
    /**
     * @return One or more `proxy` blocks as documented below.
     * 
     */
    public List<GetServiceHostnameConfigurationProxy> proxies() {
        return this.proxies;
    }
    /**
     * @return One or more `scm` blocks as documented below.
     * 
     */
    public List<GetServiceHostnameConfigurationScm> scms() {
        return this.scms;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetServiceHostnameConfiguration defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetServiceHostnameConfigurationDeveloperPortal> developerPortals;
        private List<GetServiceHostnameConfigurationManagement> managements;
        private List<GetServiceHostnameConfigurationPortal> portals;
        private List<GetServiceHostnameConfigurationProxy> proxies;
        private List<GetServiceHostnameConfigurationScm> scms;
        public Builder() {}
        public Builder(GetServiceHostnameConfiguration defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.developerPortals = defaults.developerPortals;
    	      this.managements = defaults.managements;
    	      this.portals = defaults.portals;
    	      this.proxies = defaults.proxies;
    	      this.scms = defaults.scms;
        }

        @CustomType.Setter
        public Builder developerPortals(List<GetServiceHostnameConfigurationDeveloperPortal> developerPortals) {
            if (developerPortals == null) {
              throw new MissingRequiredPropertyException("GetServiceHostnameConfiguration", "developerPortals");
            }
            this.developerPortals = developerPortals;
            return this;
        }
        public Builder developerPortals(GetServiceHostnameConfigurationDeveloperPortal... developerPortals) {
            return developerPortals(List.of(developerPortals));
        }
        @CustomType.Setter
        public Builder managements(List<GetServiceHostnameConfigurationManagement> managements) {
            if (managements == null) {
              throw new MissingRequiredPropertyException("GetServiceHostnameConfiguration", "managements");
            }
            this.managements = managements;
            return this;
        }
        public Builder managements(GetServiceHostnameConfigurationManagement... managements) {
            return managements(List.of(managements));
        }
        @CustomType.Setter
        public Builder portals(List<GetServiceHostnameConfigurationPortal> portals) {
            if (portals == null) {
              throw new MissingRequiredPropertyException("GetServiceHostnameConfiguration", "portals");
            }
            this.portals = portals;
            return this;
        }
        public Builder portals(GetServiceHostnameConfigurationPortal... portals) {
            return portals(List.of(portals));
        }
        @CustomType.Setter
        public Builder proxies(List<GetServiceHostnameConfigurationProxy> proxies) {
            if (proxies == null) {
              throw new MissingRequiredPropertyException("GetServiceHostnameConfiguration", "proxies");
            }
            this.proxies = proxies;
            return this;
        }
        public Builder proxies(GetServiceHostnameConfigurationProxy... proxies) {
            return proxies(List.of(proxies));
        }
        @CustomType.Setter
        public Builder scms(List<GetServiceHostnameConfigurationScm> scms) {
            if (scms == null) {
              throw new MissingRequiredPropertyException("GetServiceHostnameConfiguration", "scms");
            }
            this.scms = scms;
            return this;
        }
        public Builder scms(GetServiceHostnameConfigurationScm... scms) {
            return scms(List.of(scms));
        }
        public GetServiceHostnameConfiguration build() {
            final var _resultValue = new GetServiceHostnameConfiguration();
            _resultValue.developerPortals = developerPortals;
            _resultValue.managements = managements;
            _resultValue.portals = portals;
            _resultValue.proxies = proxies;
            _resultValue.scms = scms;
            return _resultValue;
        }
    }
}
