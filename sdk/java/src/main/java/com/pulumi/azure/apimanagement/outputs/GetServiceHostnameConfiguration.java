// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.apimanagement.outputs;

import com.pulumi.azure.apimanagement.outputs.GetServiceHostnameConfigurationDeveloperPortal;
import com.pulumi.azure.apimanagement.outputs.GetServiceHostnameConfigurationManagement;
import com.pulumi.azure.apimanagement.outputs.GetServiceHostnameConfigurationPortal;
import com.pulumi.azure.apimanagement.outputs.GetServiceHostnameConfigurationProxy;
import com.pulumi.azure.apimanagement.outputs.GetServiceHostnameConfigurationScm;
import com.pulumi.core.annotations.CustomType;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetServiceHostnameConfiguration {
    /**
     * @return One or more `developer_portal` blocks as documented below.
     * 
     */
    private final List<GetServiceHostnameConfigurationDeveloperPortal> developerPortals;
    /**
     * @return One or more `management` blocks as documented below.
     * 
     */
    private final List<GetServiceHostnameConfigurationManagement> managements;
    /**
     * @return One or more `portal` blocks as documented below.
     * 
     */
    private final List<GetServiceHostnameConfigurationPortal> portals;
    /**
     * @return One or more `proxy` blocks as documented below.
     * 
     */
    private final List<GetServiceHostnameConfigurationProxy> proxies;
    /**
     * @return One or more `scm` blocks as documented below.
     * 
     */
    private final List<GetServiceHostnameConfigurationScm> scms;

    @CustomType.Constructor
    private GetServiceHostnameConfiguration(
        @CustomType.Parameter("developerPortals") List<GetServiceHostnameConfigurationDeveloperPortal> developerPortals,
        @CustomType.Parameter("managements") List<GetServiceHostnameConfigurationManagement> managements,
        @CustomType.Parameter("portals") List<GetServiceHostnameConfigurationPortal> portals,
        @CustomType.Parameter("proxies") List<GetServiceHostnameConfigurationProxy> proxies,
        @CustomType.Parameter("scms") List<GetServiceHostnameConfigurationScm> scms) {
        this.developerPortals = developerPortals;
        this.managements = managements;
        this.portals = portals;
        this.proxies = proxies;
        this.scms = scms;
    }

    /**
     * @return One or more `developer_portal` blocks as documented below.
     * 
     */
    public List<GetServiceHostnameConfigurationDeveloperPortal> developerPortals() {
        return this.developerPortals;
    }
    /**
     * @return One or more `management` blocks as documented below.
     * 
     */
    public List<GetServiceHostnameConfigurationManagement> managements() {
        return this.managements;
    }
    /**
     * @return One or more `portal` blocks as documented below.
     * 
     */
    public List<GetServiceHostnameConfigurationPortal> portals() {
        return this.portals;
    }
    /**
     * @return One or more `proxy` blocks as documented below.
     * 
     */
    public List<GetServiceHostnameConfigurationProxy> proxies() {
        return this.proxies;
    }
    /**
     * @return One or more `scm` blocks as documented below.
     * 
     */
    public List<GetServiceHostnameConfigurationScm> scms() {
        return this.scms;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetServiceHostnameConfiguration defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private List<GetServiceHostnameConfigurationDeveloperPortal> developerPortals;
        private List<GetServiceHostnameConfigurationManagement> managements;
        private List<GetServiceHostnameConfigurationPortal> portals;
        private List<GetServiceHostnameConfigurationProxy> proxies;
        private List<GetServiceHostnameConfigurationScm> scms;

        public Builder() {
    	      // Empty
        }

        public Builder(GetServiceHostnameConfiguration defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.developerPortals = defaults.developerPortals;
    	      this.managements = defaults.managements;
    	      this.portals = defaults.portals;
    	      this.proxies = defaults.proxies;
    	      this.scms = defaults.scms;
        }

        public Builder developerPortals(List<GetServiceHostnameConfigurationDeveloperPortal> developerPortals) {
            this.developerPortals = Objects.requireNonNull(developerPortals);
            return this;
        }
        public Builder developerPortals(GetServiceHostnameConfigurationDeveloperPortal... developerPortals) {
            return developerPortals(List.of(developerPortals));
        }
        public Builder managements(List<GetServiceHostnameConfigurationManagement> managements) {
            this.managements = Objects.requireNonNull(managements);
            return this;
        }
        public Builder managements(GetServiceHostnameConfigurationManagement... managements) {
            return managements(List.of(managements));
        }
        public Builder portals(List<GetServiceHostnameConfigurationPortal> portals) {
            this.portals = Objects.requireNonNull(portals);
            return this;
        }
        public Builder portals(GetServiceHostnameConfigurationPortal... portals) {
            return portals(List.of(portals));
        }
        public Builder proxies(List<GetServiceHostnameConfigurationProxy> proxies) {
            this.proxies = Objects.requireNonNull(proxies);
            return this;
        }
        public Builder proxies(GetServiceHostnameConfigurationProxy... proxies) {
            return proxies(List.of(proxies));
        }
        public Builder scms(List<GetServiceHostnameConfigurationScm> scms) {
            this.scms = Objects.requireNonNull(scms);
            return this;
        }
        public Builder scms(GetServiceHostnameConfigurationScm... scms) {
            return scms(List.of(scms));
        }        public GetServiceHostnameConfiguration build() {
            return new GetServiceHostnameConfiguration(developerPortals, managements, portals, proxies, scms);
        }
    }
}
