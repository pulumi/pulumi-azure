// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.webpubsub.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ServiceLiveTrace {
    /**
     * @return Whether the log category `ConnectivityLogs` is enabled? Defaults to `true`
     * 
     */
    private final @Nullable Boolean connectivityLogsEnabled;
    /**
     * @return Whether the live trace is enabled? Defaults to `true`.
     * 
     */
    private final @Nullable Boolean enabled;
    /**
     * @return Whether the log category `HttpRequestLogs` is enabled? Defaults to `true`
     * 
     */
    private final @Nullable Boolean httpRequestLogsEnabled;
    /**
     * @return Whether the log category `MessagingLogs` is enabled? Defaults to `true`
     * 
     */
    private final @Nullable Boolean messagingLogsEnabled;

    @CustomType.Constructor
    private ServiceLiveTrace(
        @CustomType.Parameter("connectivityLogsEnabled") @Nullable Boolean connectivityLogsEnabled,
        @CustomType.Parameter("enabled") @Nullable Boolean enabled,
        @CustomType.Parameter("httpRequestLogsEnabled") @Nullable Boolean httpRequestLogsEnabled,
        @CustomType.Parameter("messagingLogsEnabled") @Nullable Boolean messagingLogsEnabled) {
        this.connectivityLogsEnabled = connectivityLogsEnabled;
        this.enabled = enabled;
        this.httpRequestLogsEnabled = httpRequestLogsEnabled;
        this.messagingLogsEnabled = messagingLogsEnabled;
    }

    /**
     * @return Whether the log category `ConnectivityLogs` is enabled? Defaults to `true`
     * 
     */
    public Optional<Boolean> connectivityLogsEnabled() {
        return Optional.ofNullable(this.connectivityLogsEnabled);
    }
    /**
     * @return Whether the live trace is enabled? Defaults to `true`.
     * 
     */
    public Optional<Boolean> enabled() {
        return Optional.ofNullable(this.enabled);
    }
    /**
     * @return Whether the log category `HttpRequestLogs` is enabled? Defaults to `true`
     * 
     */
    public Optional<Boolean> httpRequestLogsEnabled() {
        return Optional.ofNullable(this.httpRequestLogsEnabled);
    }
    /**
     * @return Whether the log category `MessagingLogs` is enabled? Defaults to `true`
     * 
     */
    public Optional<Boolean> messagingLogsEnabled() {
        return Optional.ofNullable(this.messagingLogsEnabled);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ServiceLiveTrace defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Boolean connectivityLogsEnabled;
        private @Nullable Boolean enabled;
        private @Nullable Boolean httpRequestLogsEnabled;
        private @Nullable Boolean messagingLogsEnabled;

        public Builder() {
    	      // Empty
        }

        public Builder(ServiceLiveTrace defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.connectivityLogsEnabled = defaults.connectivityLogsEnabled;
    	      this.enabled = defaults.enabled;
    	      this.httpRequestLogsEnabled = defaults.httpRequestLogsEnabled;
    	      this.messagingLogsEnabled = defaults.messagingLogsEnabled;
        }

        public Builder connectivityLogsEnabled(@Nullable Boolean connectivityLogsEnabled) {
            this.connectivityLogsEnabled = connectivityLogsEnabled;
            return this;
        }
        public Builder enabled(@Nullable Boolean enabled) {
            this.enabled = enabled;
            return this;
        }
        public Builder httpRequestLogsEnabled(@Nullable Boolean httpRequestLogsEnabled) {
            this.httpRequestLogsEnabled = httpRequestLogsEnabled;
            return this;
        }
        public Builder messagingLogsEnabled(@Nullable Boolean messagingLogsEnabled) {
            this.messagingLogsEnabled = messagingLogsEnabled;
            return this;
        }        public ServiceLiveTrace build() {
            return new ServiceLiveTrace(connectivityLogsEnabled, enabled, httpRequestLogsEnabled, messagingLogsEnabled);
        }
    }
}
