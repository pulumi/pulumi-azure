// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.siterecovery.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class ReplicatedVMManagedDiskTargetDiskEncryptionDiskEncryptionKey {
    /**
     * @return The URL to the Key Vault Secret used as the Disk Encryption Key that the Managed Disk will be associated with. This can be found as `id` on the `azure.keyvault.Secret` resource. Changing this forces a new resource to be created.
     * 
     */
    private String secretUrl;
    /**
     * @return The ID of the Key Vault. This can be found as `id` on the `azure.keyvault.KeyVault` resource. Changing this forces a new resource to be created.
     * 
     */
    private String vaultId;

    private ReplicatedVMManagedDiskTargetDiskEncryptionDiskEncryptionKey() {}
    /**
     * @return The URL to the Key Vault Secret used as the Disk Encryption Key that the Managed Disk will be associated with. This can be found as `id` on the `azure.keyvault.Secret` resource. Changing this forces a new resource to be created.
     * 
     */
    public String secretUrl() {
        return this.secretUrl;
    }
    /**
     * @return The ID of the Key Vault. This can be found as `id` on the `azure.keyvault.KeyVault` resource. Changing this forces a new resource to be created.
     * 
     */
    public String vaultId() {
        return this.vaultId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ReplicatedVMManagedDiskTargetDiskEncryptionDiskEncryptionKey defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String secretUrl;
        private String vaultId;
        public Builder() {}
        public Builder(ReplicatedVMManagedDiskTargetDiskEncryptionDiskEncryptionKey defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.secretUrl = defaults.secretUrl;
    	      this.vaultId = defaults.vaultId;
        }

        @CustomType.Setter
        public Builder secretUrl(String secretUrl) {
            if (secretUrl == null) {
              throw new MissingRequiredPropertyException("ReplicatedVMManagedDiskTargetDiskEncryptionDiskEncryptionKey", "secretUrl");
            }
            this.secretUrl = secretUrl;
            return this;
        }
        @CustomType.Setter
        public Builder vaultId(String vaultId) {
            if (vaultId == null) {
              throw new MissingRequiredPropertyException("ReplicatedVMManagedDiskTargetDiskEncryptionDiskEncryptionKey", "vaultId");
            }
            this.vaultId = vaultId;
            return this;
        }
        public ReplicatedVMManagedDiskTargetDiskEncryptionDiskEncryptionKey build() {
            final var _resultValue = new ReplicatedVMManagedDiskTargetDiskEncryptionDiskEncryptionKey();
            _resultValue.secretUrl = secretUrl;
            _resultValue.vaultId = vaultId;
            return _resultValue;
        }
    }
}
