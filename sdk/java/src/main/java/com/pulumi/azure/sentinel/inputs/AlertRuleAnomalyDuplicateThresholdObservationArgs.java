// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.sentinel.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AlertRuleAnomalyDuplicateThresholdObservationArgs extends com.pulumi.resources.ResourceArgs {

    public static final AlertRuleAnomalyDuplicateThresholdObservationArgs Empty = new AlertRuleAnomalyDuplicateThresholdObservationArgs();

    /**
     * The description of the threshold observation.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return The description of the threshold observation.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * The max value of the threshold observation.
     * 
     */
    @Import(name="max")
    private @Nullable Output<String> max;

    /**
     * @return The max value of the threshold observation.
     * 
     */
    public Optional<Output<String>> max() {
        return Optional.ofNullable(this.max);
    }

    /**
     * The min value of the threshold observation.
     * 
     */
    @Import(name="min")
    private @Nullable Output<String> min;

    /**
     * @return The min value of the threshold observation.
     * 
     */
    public Optional<Output<String>> min() {
        return Optional.ofNullable(this.min);
    }

    /**
     * The name of the threshold observation.
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    /**
     * @return The name of the threshold observation.
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    /**
     * The value of the threshold observation.
     * 
     */
    @Import(name="value", required=true)
    private Output<String> value;

    /**
     * @return The value of the threshold observation.
     * 
     */
    public Output<String> value() {
        return this.value;
    }

    private AlertRuleAnomalyDuplicateThresholdObservationArgs() {}

    private AlertRuleAnomalyDuplicateThresholdObservationArgs(AlertRuleAnomalyDuplicateThresholdObservationArgs $) {
        this.description = $.description;
        this.max = $.max;
        this.min = $.min;
        this.name = $.name;
        this.value = $.value;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AlertRuleAnomalyDuplicateThresholdObservationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AlertRuleAnomalyDuplicateThresholdObservationArgs $;

        public Builder() {
            $ = new AlertRuleAnomalyDuplicateThresholdObservationArgs();
        }

        public Builder(AlertRuleAnomalyDuplicateThresholdObservationArgs defaults) {
            $ = new AlertRuleAnomalyDuplicateThresholdObservationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param description The description of the threshold observation.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description The description of the threshold observation.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param max The max value of the threshold observation.
         * 
         * @return builder
         * 
         */
        public Builder max(@Nullable Output<String> max) {
            $.max = max;
            return this;
        }

        /**
         * @param max The max value of the threshold observation.
         * 
         * @return builder
         * 
         */
        public Builder max(String max) {
            return max(Output.of(max));
        }

        /**
         * @param min The min value of the threshold observation.
         * 
         * @return builder
         * 
         */
        public Builder min(@Nullable Output<String> min) {
            $.min = min;
            return this;
        }

        /**
         * @param min The min value of the threshold observation.
         * 
         * @return builder
         * 
         */
        public Builder min(String min) {
            return min(Output.of(min));
        }

        /**
         * @param name The name of the threshold observation.
         * 
         * @return builder
         * 
         */
        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the threshold observation.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param value The value of the threshold observation.
         * 
         * @return builder
         * 
         */
        public Builder value(Output<String> value) {
            $.value = value;
            return this;
        }

        /**
         * @param value The value of the threshold observation.
         * 
         * @return builder
         * 
         */
        public Builder value(String value) {
            return value(Output.of(value));
        }

        public AlertRuleAnomalyDuplicateThresholdObservationArgs build() {
            if ($.name == null) {
                throw new MissingRequiredPropertyException("AlertRuleAnomalyDuplicateThresholdObservationArgs", "name");
            }
            if ($.value == null) {
                throw new MissingRequiredPropertyException("AlertRuleAnomalyDuplicateThresholdObservationArgs", "value");
            }
            return $;
        }
    }

}
