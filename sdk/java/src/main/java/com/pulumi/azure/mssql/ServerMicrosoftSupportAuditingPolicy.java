// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.mssql;

import com.pulumi.azure.Utilities;
import com.pulumi.azure.mssql.ServerMicrosoftSupportAuditingPolicyArgs;
import com.pulumi.azure.mssql.inputs.ServerMicrosoftSupportAuditingPolicyState;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Manages a MS SQL Server Microsoft Support Auditing Policy.
 * 
 * ## Example Usage
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.azure.core.ResourceGroup;
 * import com.pulumi.azure.core.ResourceGroupArgs;
 * import com.pulumi.azure.mssql.Server;
 * import com.pulumi.azure.mssql.ServerArgs;
 * import com.pulumi.azure.storage.Account;
 * import com.pulumi.azure.storage.AccountArgs;
 * import com.pulumi.azure.mssql.ServerMicrosoftSupportAuditingPolicy;
 * import com.pulumi.azure.mssql.ServerMicrosoftSupportAuditingPolicyArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new ResourceGroup(&#34;example&#34;, ResourceGroupArgs.builder()        
 *             .name(&#34;example-resources&#34;)
 *             .location(&#34;West Europe&#34;)
 *             .build());
 * 
 *         var exampleServer = new Server(&#34;exampleServer&#34;, ServerArgs.builder()        
 *             .name(&#34;example-sqlserver&#34;)
 *             .resourceGroupName(example.name())
 *             .location(example.location())
 *             .version(&#34;12.0&#34;)
 *             .administratorLogin(&#34;missadministrator&#34;)
 *             .administratorLoginPassword(&#34;AdminPassword123!&#34;)
 *             .build());
 * 
 *         var exampleAccount = new Account(&#34;exampleAccount&#34;, AccountArgs.builder()        
 *             .name(&#34;examplesa&#34;)
 *             .resourceGroupName(example.name())
 *             .location(example.location())
 *             .accountTier(&#34;Standard&#34;)
 *             .accountReplicationType(&#34;LRS&#34;)
 *             .build());
 * 
 *         var exampleServerMicrosoftSupportAuditingPolicy = new ServerMicrosoftSupportAuditingPolicy(&#34;exampleServerMicrosoftSupportAuditingPolicy&#34;, ServerMicrosoftSupportAuditingPolicyArgs.builder()        
 *             .serverId(exampleServer.id())
 *             .blobStorageEndpoint(exampleAccount.primaryBlobEndpoint())
 *             .storageAccountAccessKey(exampleAccount.primaryAccessKey())
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * MS SQL Server Microsoft Support Auditing Policies can be imported using the `resource id`, e.g.
 * 
 * ```sh
 * $ pulumi import azure:mssql/serverMicrosoftSupportAuditingPolicy:ServerMicrosoftSupportAuditingPolicy example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.Sql/servers/sqlServer1/devOpsAuditingSettings/default
 * ```
 * 
 */
@ResourceType(type="azure:mssql/serverMicrosoftSupportAuditingPolicy:ServerMicrosoftSupportAuditingPolicy")
public class ServerMicrosoftSupportAuditingPolicy extends com.pulumi.resources.CustomResource {
    /**
     * The blob storage endpoint (e.g. https://example.blob.core.windows.net). This blob storage will hold all Microsoft support auditing logs.
     * 
     */
    @Export(name="blobStorageEndpoint", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> blobStorageEndpoint;

    /**
     * @return The blob storage endpoint (e.g. https://example.blob.core.windows.net). This blob storage will hold all Microsoft support auditing logs.
     * 
     */
    public Output<Optional<String>> blobStorageEndpoint() {
        return Codegen.optional(this.blobStorageEndpoint);
    }
    /**
     * Whether to enable the extended auditing policy. Possible values are `true` and `false`. Defaults to `true`.
     * 
     * -&gt;**NOTE:**  If `enabled` is `true`, `blob_storage_endpoint` or `log_monitoring_enabled` are required.
     * 
     */
    @Export(name="enabled", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> enabled;

    /**
     * @return Whether to enable the extended auditing policy. Possible values are `true` and `false`. Defaults to `true`.
     * 
     * -&gt;**NOTE:**  If `enabled` is `true`, `blob_storage_endpoint` or `log_monitoring_enabled` are required.
     * 
     */
    public Output<Optional<Boolean>> enabled() {
        return Codegen.optional(this.enabled);
    }
    /**
     * Enable audit events to Azure Monitor? To enable server audit events to Azure Monitor, please enable its main database audit events to Azure Monitor. Defaults to `true`.
     * 
     */
    @Export(name="logMonitoringEnabled", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> logMonitoringEnabled;

    /**
     * @return Enable audit events to Azure Monitor? To enable server audit events to Azure Monitor, please enable its main database audit events to Azure Monitor. Defaults to `true`.
     * 
     */
    public Output<Optional<Boolean>> logMonitoringEnabled() {
        return Codegen.optional(this.logMonitoringEnabled);
    }
    /**
     * The ID of the SQL Server to set the extended auditing policy. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="serverId", refs={String.class}, tree="[0]")
    private Output<String> serverId;

    /**
     * @return The ID of the SQL Server to set the extended auditing policy. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> serverId() {
        return this.serverId;
    }
    /**
     * The access key to use for the auditing storage account.
     * 
     */
    @Export(name="storageAccountAccessKey", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> storageAccountAccessKey;

    /**
     * @return The access key to use for the auditing storage account.
     * 
     */
    public Output<Optional<String>> storageAccountAccessKey() {
        return Codegen.optional(this.storageAccountAccessKey);
    }
    /**
     * The ID of the Subscription containing the Storage Account.
     * 
     */
    @Export(name="storageAccountSubscriptionId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> storageAccountSubscriptionId;

    /**
     * @return The ID of the Subscription containing the Storage Account.
     * 
     */
    public Output<Optional<String>> storageAccountSubscriptionId() {
        return Codegen.optional(this.storageAccountSubscriptionId);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public ServerMicrosoftSupportAuditingPolicy(String name) {
        this(name, ServerMicrosoftSupportAuditingPolicyArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public ServerMicrosoftSupportAuditingPolicy(String name, ServerMicrosoftSupportAuditingPolicyArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public ServerMicrosoftSupportAuditingPolicy(String name, ServerMicrosoftSupportAuditingPolicyArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:mssql/serverMicrosoftSupportAuditingPolicy:ServerMicrosoftSupportAuditingPolicy", name, args == null ? ServerMicrosoftSupportAuditingPolicyArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private ServerMicrosoftSupportAuditingPolicy(String name, Output<String> id, @Nullable ServerMicrosoftSupportAuditingPolicyState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:mssql/serverMicrosoftSupportAuditingPolicy:ServerMicrosoftSupportAuditingPolicy", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .additionalSecretOutputs(List.of(
                "storageAccountAccessKey",
                "storageAccountSubscriptionId"
            ))
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static ServerMicrosoftSupportAuditingPolicy get(String name, Output<String> id, @Nullable ServerMicrosoftSupportAuditingPolicyState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new ServerMicrosoftSupportAuditingPolicy(name, id, state, options);
    }
}
