// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.batch.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class PoolCertificate {
    /**
     * @return The ID of the Batch Certificate to install on the Batch Pool, which must be inside the same Batch Account.
     * 
     */
    private String id;
    /**
     * @return The location of the certificate store on the compute node into which to install the certificate. Possible values are `CurrentUser` or `LocalMachine`.
     * 
     */
    private String storeLocation;
    /**
     * @return The name of the certificate store on the compute node into which to install the certificate. This property is applicable only for pools configured with Windows nodes (that is, created with cloudServiceConfiguration, or with virtualMachineConfiguration using a Windows image reference). Common store names include: `My`, `Root`, `CA`, `Trust`, `Disallowed`, `TrustedPeople`, `TrustedPublisher`, `AuthRoot`, `AddressBook`, but any custom store name can also be used. The default value is `My`.
     * 
     */
    private @Nullable String storeName;
    /**
     * @return Which user accounts on the compute node should have access to the private data of the certificate.
     * 
     */
    private @Nullable List<String> visibilities;

    private PoolCertificate() {}
    /**
     * @return The ID of the Batch Certificate to install on the Batch Pool, which must be inside the same Batch Account.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The location of the certificate store on the compute node into which to install the certificate. Possible values are `CurrentUser` or `LocalMachine`.
     * 
     */
    public String storeLocation() {
        return this.storeLocation;
    }
    /**
     * @return The name of the certificate store on the compute node into which to install the certificate. This property is applicable only for pools configured with Windows nodes (that is, created with cloudServiceConfiguration, or with virtualMachineConfiguration using a Windows image reference). Common store names include: `My`, `Root`, `CA`, `Trust`, `Disallowed`, `TrustedPeople`, `TrustedPublisher`, `AuthRoot`, `AddressBook`, but any custom store name can also be used. The default value is `My`.
     * 
     */
    public Optional<String> storeName() {
        return Optional.ofNullable(this.storeName);
    }
    /**
     * @return Which user accounts on the compute node should have access to the private data of the certificate.
     * 
     */
    public List<String> visibilities() {
        return this.visibilities == null ? List.of() : this.visibilities;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(PoolCertificate defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String id;
        private String storeLocation;
        private @Nullable String storeName;
        private @Nullable List<String> visibilities;
        public Builder() {}
        public Builder(PoolCertificate defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.id = defaults.id;
    	      this.storeLocation = defaults.storeLocation;
    	      this.storeName = defaults.storeName;
    	      this.visibilities = defaults.visibilities;
        }

        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder storeLocation(String storeLocation) {
            this.storeLocation = Objects.requireNonNull(storeLocation);
            return this;
        }
        @CustomType.Setter
        public Builder storeName(@Nullable String storeName) {
            this.storeName = storeName;
            return this;
        }
        @CustomType.Setter
        public Builder visibilities(@Nullable List<String> visibilities) {
            this.visibilities = visibilities;
            return this;
        }
        public Builder visibilities(String... visibilities) {
            return visibilities(List.of(visibilities));
        }
        public PoolCertificate build() {
            final var o = new PoolCertificate();
            o.id = id;
            o.storeLocation = storeLocation;
            o.storeName = storeName;
            o.visibilities = visibilities;
            return o;
        }
    }
}
