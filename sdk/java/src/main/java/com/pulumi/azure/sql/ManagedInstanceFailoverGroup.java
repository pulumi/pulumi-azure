// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.sql;

import com.pulumi.azure.Utilities;
import com.pulumi.azure.sql.ManagedInstanceFailoverGroupArgs;
import com.pulumi.azure.sql.inputs.ManagedInstanceFailoverGroupState;
import com.pulumi.azure.sql.outputs.ManagedInstanceFailoverGroupPartnerRegion;
import com.pulumi.azure.sql.outputs.ManagedInstanceFailoverGroupReadWriteEndpointFailoverPolicy;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Manages a SQL Instance Failover Group.
 * 
 * ## Example Usage
 * 
 * &gt; **Note:** The `azure.sql.ManagedInstanceFailoverGroup` resource is deprecated in version 3.0 of the AzureRM provider and will be removed in version 4.0. Please use the `azure.mssql.ManagedInstanceFailoverGroup` resource instead.
 * 
 * &gt; **Note:** For a more complete example, see the the `examples/sql-azure/managed_instance_failover_group` directory within the GitHub Repository.
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.azure.core.ResourceGroup;
 * import com.pulumi.azure.core.ResourceGroupArgs;
 * import com.pulumi.azure.sql.ManagedInstance;
 * import com.pulumi.azure.sql.ManagedInstanceArgs;
 * import com.pulumi.azure.sql.ManagedInstanceFailoverGroup;
 * import com.pulumi.azure.sql.ManagedInstanceFailoverGroupArgs;
 * import com.pulumi.azure.sql.inputs.ManagedInstanceFailoverGroupReadWriteEndpointFailoverPolicyArgs;
 * import com.pulumi.resources.CustomResourceOptions;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var exampleResourceGroup = new ResourceGroup(&#34;exampleResourceGroup&#34;, ResourceGroupArgs.builder()        
 *             .location(&#34;West Europe&#34;)
 *             .build());
 * 
 *         var primary = new ManagedInstance(&#34;primary&#34;, ManagedInstanceArgs.builder()        
 *             .resourceGroupName(azurerm_resource_group.primary().name())
 *             .location(azurerm_resource_group.primary().location())
 *             .administratorLogin(&#34;mradministrator&#34;)
 *             .administratorLoginPassword(&#34;thisIsDog11&#34;)
 *             .licenseType(&#34;BasePrice&#34;)
 *             .subnetId(azurerm_subnet.primary().id())
 *             .skuName(&#34;GP_Gen5&#34;)
 *             .vcores(4)
 *             .storageSizeInGb(32)
 *             .tags(Map.of(&#34;environment&#34;, &#34;prod&#34;))
 *             .build(), CustomResourceOptions.builder()
 *                 .dependsOn(                
 *                     azurerm_subnet_network_security_group_association.primary(),
 *                     azurerm_subnet_route_table_association.primary())
 *                 .build());
 * 
 *         var secondary = new ManagedInstance(&#34;secondary&#34;, ManagedInstanceArgs.builder()        
 *             .resourceGroupName(azurerm_resource_group.secondary().name())
 *             .location(azurerm_resource_group.secondary().location())
 *             .administratorLogin(&#34;mradministrator&#34;)
 *             .administratorLoginPassword(&#34;thisIsDog11&#34;)
 *             .licenseType(&#34;BasePrice&#34;)
 *             .subnetId(azurerm_subnet.secondary().id())
 *             .skuName(&#34;GP_Gen5&#34;)
 *             .vcores(4)
 *             .storageSizeInGb(32)
 *             .tags(Map.of(&#34;environment&#34;, &#34;prod&#34;))
 *             .build(), CustomResourceOptions.builder()
 *                 .dependsOn(                
 *                     azurerm_subnet_network_security_group_association.secondary(),
 *                     azurerm_subnet_route_table_association.secondary())
 *                 .build());
 * 
 *         var exampleManagedInstanceFailoverGroup = new ManagedInstanceFailoverGroup(&#34;exampleManagedInstanceFailoverGroup&#34;, ManagedInstanceFailoverGroupArgs.builder()        
 *             .resourceGroupName(azurerm_resource_group.primary().name())
 *             .location(primary.location())
 *             .managedInstanceName(primary.name())
 *             .partnerManagedInstanceId(secondary.id())
 *             .readWriteEndpointFailoverPolicy(ManagedInstanceFailoverGroupReadWriteEndpointFailoverPolicyArgs.builder()
 *                 .mode(&#34;Automatic&#34;)
 *                 .graceMinutes(60)
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * SQL Instance Failover Groups can be imported using the `resource id`, e.g.
 * 
 * ```sh
 *  $ pulumi import azure:sql/managedInstanceFailoverGroup:ManagedInstanceFailoverGroup example /subscriptions/12345678-1234-9876-4563-123456789012/resourceGroups/resGroup1/providers/Microsoft.Sql/locations/Location/instanceFailoverGroups/failoverGroup1
 * ```
 * 
 */
@ResourceType(type="azure:sql/managedInstanceFailoverGroup:ManagedInstanceFailoverGroup")
public class ManagedInstanceFailoverGroup extends com.pulumi.resources.CustomResource {
    /**
     * The Azure Region where the SQL Instance Failover Group exists. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="location", refs={String.class}, tree="[0]")
    private Output<String> location;

    /**
     * @return The Azure Region where the SQL Instance Failover Group exists. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> location() {
        return this.location;
    }
    /**
     * The name of the SQL Managed Instance which will be replicated using a SQL Instance Failover Group. Changing this forces a new SQL Instance Failover Group to be created.
     * 
     */
    @Export(name="managedInstanceName", refs={String.class}, tree="[0]")
    private Output<String> managedInstanceName;

    /**
     * @return The name of the SQL Managed Instance which will be replicated using a SQL Instance Failover Group. Changing this forces a new SQL Instance Failover Group to be created.
     * 
     */
    public Output<String> managedInstanceName() {
        return this.managedInstanceName;
    }
    /**
     * The name which should be used for this SQL Instance Failover Group. Changing this forces a new SQL Instance Failover Group to be created.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The name which should be used for this SQL Instance Failover Group. Changing this forces a new SQL Instance Failover Group to be created.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * ID of the SQL Managed Instance which will be replicated to. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="partnerManagedInstanceId", refs={String.class}, tree="[0]")
    private Output<String> partnerManagedInstanceId;

    /**
     * @return ID of the SQL Managed Instance which will be replicated to. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> partnerManagedInstanceId() {
        return this.partnerManagedInstanceId;
    }
    /**
     * A `partner_region` block as defined below.
     * 
     */
    @Export(name="partnerRegions", refs={List.class,ManagedInstanceFailoverGroupPartnerRegion.class}, tree="[0,1]")
    private Output<List<ManagedInstanceFailoverGroupPartnerRegion>> partnerRegions;

    /**
     * @return A `partner_region` block as defined below.
     * 
     */
    public Output<List<ManagedInstanceFailoverGroupPartnerRegion>> partnerRegions() {
        return this.partnerRegions;
    }
    /**
     * A `read_write_endpoint_failover_policy` block as defined below.
     * 
     */
    @Export(name="readWriteEndpointFailoverPolicy", refs={ManagedInstanceFailoverGroupReadWriteEndpointFailoverPolicy.class}, tree="[0]")
    private Output<ManagedInstanceFailoverGroupReadWriteEndpointFailoverPolicy> readWriteEndpointFailoverPolicy;

    /**
     * @return A `read_write_endpoint_failover_policy` block as defined below.
     * 
     */
    public Output<ManagedInstanceFailoverGroupReadWriteEndpointFailoverPolicy> readWriteEndpointFailoverPolicy() {
        return this.readWriteEndpointFailoverPolicy;
    }
    /**
     * Failover policy for the read-only endpoint. Defaults to `true`.
     * 
     */
    @Export(name="readonlyEndpointFailoverPolicyEnabled", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> readonlyEndpointFailoverPolicyEnabled;

    /**
     * @return Failover policy for the read-only endpoint. Defaults to `true`.
     * 
     */
    public Output<Optional<Boolean>> readonlyEndpointFailoverPolicyEnabled() {
        return Codegen.optional(this.readonlyEndpointFailoverPolicyEnabled);
    }
    /**
     * The name of the Resource Group where the SQL Instance Failover Group should exist. Changing this forces a new SQL Instance Failover Group to be created.
     * 
     */
    @Export(name="resourceGroupName", refs={String.class}, tree="[0]")
    private Output<String> resourceGroupName;

    /**
     * @return The name of the Resource Group where the SQL Instance Failover Group should exist. Changing this forces a new SQL Instance Failover Group to be created.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }
    /**
     * The partner replication role of the SQL Instance Failover Group.
     * 
     */
    @Export(name="role", refs={String.class}, tree="[0]")
    private Output<String> role;

    /**
     * @return The partner replication role of the SQL Instance Failover Group.
     * 
     */
    public Output<String> role() {
        return this.role;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public ManagedInstanceFailoverGroup(String name) {
        this(name, ManagedInstanceFailoverGroupArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public ManagedInstanceFailoverGroup(String name, ManagedInstanceFailoverGroupArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public ManagedInstanceFailoverGroup(String name, ManagedInstanceFailoverGroupArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:sql/managedInstanceFailoverGroup:ManagedInstanceFailoverGroup", name, args == null ? ManagedInstanceFailoverGroupArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private ManagedInstanceFailoverGroup(String name, Output<String> id, @Nullable ManagedInstanceFailoverGroupState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:sql/managedInstanceFailoverGroup:ManagedInstanceFailoverGroup", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static ManagedInstanceFailoverGroup get(String name, Output<String> id, @Nullable ManagedInstanceFailoverGroupState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new ManagedInstanceFailoverGroup(name, id, state, options);
    }
}
