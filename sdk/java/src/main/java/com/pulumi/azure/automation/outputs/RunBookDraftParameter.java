// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.automation.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class RunBookDraftParameter {
    /**
     * @return Specifies the default value of the parameter.
     * 
     */
    private @Nullable String defaultValue;
    /**
     * @return The name of the parameter.
     * 
     */
    private String key;
    /**
     * @return Whether this parameter is mandatory.
     * 
     */
    private @Nullable Boolean mandatory;
    /**
     * @return Specifies the position of the parameter.
     * 
     */
    private @Nullable Integer position;
    /**
     * @return Specifies the type of this parameter.
     * 
     */
    private String type;

    private RunBookDraftParameter() {}
    /**
     * @return Specifies the default value of the parameter.
     * 
     */
    public Optional<String> defaultValue() {
        return Optional.ofNullable(this.defaultValue);
    }
    /**
     * @return The name of the parameter.
     * 
     */
    public String key() {
        return this.key;
    }
    /**
     * @return Whether this parameter is mandatory.
     * 
     */
    public Optional<Boolean> mandatory() {
        return Optional.ofNullable(this.mandatory);
    }
    /**
     * @return Specifies the position of the parameter.
     * 
     */
    public Optional<Integer> position() {
        return Optional.ofNullable(this.position);
    }
    /**
     * @return Specifies the type of this parameter.
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(RunBookDraftParameter defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String defaultValue;
        private String key;
        private @Nullable Boolean mandatory;
        private @Nullable Integer position;
        private String type;
        public Builder() {}
        public Builder(RunBookDraftParameter defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.defaultValue = defaults.defaultValue;
    	      this.key = defaults.key;
    	      this.mandatory = defaults.mandatory;
    	      this.position = defaults.position;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder defaultValue(@Nullable String defaultValue) {

            this.defaultValue = defaultValue;
            return this;
        }
        @CustomType.Setter
        public Builder key(String key) {
            if (key == null) {
              throw new MissingRequiredPropertyException("RunBookDraftParameter", "key");
            }
            this.key = key;
            return this;
        }
        @CustomType.Setter
        public Builder mandatory(@Nullable Boolean mandatory) {

            this.mandatory = mandatory;
            return this;
        }
        @CustomType.Setter
        public Builder position(@Nullable Integer position) {

            this.position = position;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            if (type == null) {
              throw new MissingRequiredPropertyException("RunBookDraftParameter", "type");
            }
            this.type = type;
            return this;
        }
        public RunBookDraftParameter build() {
            final var _resultValue = new RunBookDraftParameter();
            _resultValue.defaultValue = defaultValue;
            _resultValue.key = key;
            _resultValue.mandatory = mandatory;
            _resultValue.position = position;
            _resultValue.type = type;
            return _resultValue;
        }
    }
}
