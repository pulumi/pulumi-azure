// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.privatedns;

import com.pulumi.azure.Utilities;
import com.pulumi.azure.privatedns.ResolverForwardingRuleArgs;
import com.pulumi.azure.privatedns.inputs.ResolverForwardingRuleState;
import com.pulumi.azure.privatedns.outputs.ResolverForwardingRuleTargetDnsServer;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Manages a Private DNS Resolver Forwarding Rule.
 * 
 * ## Example Usage
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.azure.core.ResourceGroup;
 * import com.pulumi.azure.core.ResourceGroupArgs;
 * import com.pulumi.azure.network.VirtualNetwork;
 * import com.pulumi.azure.network.VirtualNetworkArgs;
 * import com.pulumi.azure.network.Subnet;
 * import com.pulumi.azure.network.SubnetArgs;
 * import com.pulumi.azure.network.inputs.SubnetDelegationArgs;
 * import com.pulumi.azure.network.inputs.SubnetDelegationServiceDelegationArgs;
 * import com.pulumi.azure.privatedns.Resolver;
 * import com.pulumi.azure.privatedns.ResolverArgs;
 * import com.pulumi.azure.privatedns.ResolverOutboundEndpoint;
 * import com.pulumi.azure.privatedns.ResolverOutboundEndpointArgs;
 * import com.pulumi.azure.privatedns.ResolverDnsForwardingRuleset;
 * import com.pulumi.azure.privatedns.ResolverDnsForwardingRulesetArgs;
 * import com.pulumi.azure.privatedns.ResolverForwardingRule;
 * import com.pulumi.azure.privatedns.ResolverForwardingRuleArgs;
 * import com.pulumi.azure.privatedns.inputs.ResolverForwardingRuleTargetDnsServerArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var exampleResourceGroup = new ResourceGroup(&#34;exampleResourceGroup&#34;, ResourceGroupArgs.builder()        
 *             .location(&#34;west europe&#34;)
 *             .build());
 * 
 *         var exampleVirtualNetwork = new VirtualNetwork(&#34;exampleVirtualNetwork&#34;, VirtualNetworkArgs.builder()        
 *             .resourceGroupName(exampleResourceGroup.name())
 *             .location(exampleResourceGroup.location())
 *             .addressSpaces(&#34;10.0.0.0/16&#34;)
 *             .build());
 * 
 *         var exampleSubnet = new Subnet(&#34;exampleSubnet&#34;, SubnetArgs.builder()        
 *             .resourceGroupName(exampleResourceGroup.name())
 *             .virtualNetworkName(exampleVirtualNetwork.name())
 *             .addressPrefixes(&#34;10.0.0.64/28&#34;)
 *             .delegations(SubnetDelegationArgs.builder()
 *                 .name(&#34;Microsoft.Network.dnsResolvers&#34;)
 *                 .serviceDelegation(SubnetDelegationServiceDelegationArgs.builder()
 *                     .actions(&#34;Microsoft.Network/virtualNetworks/subnets/join/action&#34;)
 *                     .name(&#34;Microsoft.Network/dnsResolvers&#34;)
 *                     .build())
 *                 .build())
 *             .build());
 * 
 *         var exampleResolver = new Resolver(&#34;exampleResolver&#34;, ResolverArgs.builder()        
 *             .resourceGroupName(exampleResourceGroup.name())
 *             .location(exampleResourceGroup.location())
 *             .virtualNetworkId(exampleVirtualNetwork.id())
 *             .build());
 * 
 *         var exampleResolverOutboundEndpoint = new ResolverOutboundEndpoint(&#34;exampleResolverOutboundEndpoint&#34;, ResolverOutboundEndpointArgs.builder()        
 *             .privateDnsResolverId(exampleResolver.id())
 *             .location(exampleResolver.location())
 *             .subnetId(exampleSubnet.id())
 *             .tags(Map.of(&#34;key&#34;, &#34;value&#34;))
 *             .build());
 * 
 *         var exampleResolverDnsForwardingRuleset = new ResolverDnsForwardingRuleset(&#34;exampleResolverDnsForwardingRuleset&#34;, ResolverDnsForwardingRulesetArgs.builder()        
 *             .resourceGroupName(exampleResourceGroup.name())
 *             .location(exampleResourceGroup.location())
 *             .privateDnsResolverOutboundEndpointIds(exampleResolverOutboundEndpoint.id())
 *             .build());
 * 
 *         var exampleResolverForwardingRule = new ResolverForwardingRule(&#34;exampleResolverForwardingRule&#34;, ResolverForwardingRuleArgs.builder()        
 *             .dnsForwardingRulesetId(exampleResolverDnsForwardingRuleset.id())
 *             .domainName(&#34;onprem.local.&#34;)
 *             .enabled(true)
 *             .targetDnsServers(ResolverForwardingRuleTargetDnsServerArgs.builder()
 *                 .ipAddress(&#34;10.10.0.1&#34;)
 *                 .port(53)
 *                 .build())
 *             .metadata(Map.of(&#34;key&#34;, &#34;value&#34;))
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * Private DNS Resolver Forwarding Rules can be imported using the `resource id`, e.g.
 * 
 * ```sh
 *  $ pulumi import azure:privatedns/resolverForwardingRule:ResolverForwardingRule example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resourceGroup1/providers/Microsoft.Network/dnsForwardingRulesets/dnsForwardingRuleset1/forwardingRules/forwardingRule1
 * ```
 * 
 */
@ResourceType(type="azure:privatedns/resolverForwardingRule:ResolverForwardingRule")
public class ResolverForwardingRule extends com.pulumi.resources.CustomResource {
    /**
     * Specifies the ID of the Private DNS Resolver Forwarding Ruleset. Changing this forces a new Private DNS Resolver Forwarding Rule to be created.
     * 
     */
    @Export(name="dnsForwardingRulesetId", refs={String.class}, tree="[0]")
    private Output<String> dnsForwardingRulesetId;

    /**
     * @return Specifies the ID of the Private DNS Resolver Forwarding Ruleset. Changing this forces a new Private DNS Resolver Forwarding Rule to be created.
     * 
     */
    public Output<String> dnsForwardingRulesetId() {
        return this.dnsForwardingRulesetId;
    }
    /**
     * Specifies the domain name for the Private DNS Resolver Forwarding Rule. Changing this forces a new Private DNS Resolver Forwarding Rule to be created.
     * 
     */
    @Export(name="domainName", refs={String.class}, tree="[0]")
    private Output<String> domainName;

    /**
     * @return Specifies the domain name for the Private DNS Resolver Forwarding Rule. Changing this forces a new Private DNS Resolver Forwarding Rule to be created.
     * 
     */
    public Output<String> domainName() {
        return this.domainName;
    }
    /**
     * Specifies the state of the Private DNS Resolver Forwarding Rule. Defaults to `true`.
     * 
     */
    @Export(name="enabled", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> enabled;

    /**
     * @return Specifies the state of the Private DNS Resolver Forwarding Rule. Defaults to `true`.
     * 
     */
    public Output<Optional<Boolean>> enabled() {
        return Codegen.optional(this.enabled);
    }
    /**
     * Metadata attached to the Private DNS Resolver Forwarding Rule.
     * 
     */
    @Export(name="metadata", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output</* @Nullable */ Map<String,String>> metadata;

    /**
     * @return Metadata attached to the Private DNS Resolver Forwarding Rule.
     * 
     */
    public Output<Optional<Map<String,String>>> metadata() {
        return Codegen.optional(this.metadata);
    }
    /**
     * Specifies the name which should be used for this Private DNS Resolver Forwarding Rule. Changing this forces a new Private DNS Resolver Forwarding Rule to be created.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return Specifies the name which should be used for this Private DNS Resolver Forwarding Rule. Changing this forces a new Private DNS Resolver Forwarding Rule to be created.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Can be specified multiple times to define multiple target DNS servers. Each `target_dns_servers` block as defined below.
     * 
     */
    @Export(name="targetDnsServers", refs={List.class,ResolverForwardingRuleTargetDnsServer.class}, tree="[0,1]")
    private Output<List<ResolverForwardingRuleTargetDnsServer>> targetDnsServers;

    /**
     * @return Can be specified multiple times to define multiple target DNS servers. Each `target_dns_servers` block as defined below.
     * 
     */
    public Output<List<ResolverForwardingRuleTargetDnsServer>> targetDnsServers() {
        return this.targetDnsServers;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public ResolverForwardingRule(String name) {
        this(name, ResolverForwardingRuleArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public ResolverForwardingRule(String name, ResolverForwardingRuleArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public ResolverForwardingRule(String name, ResolverForwardingRuleArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:privatedns/resolverForwardingRule:ResolverForwardingRule", name, args == null ? ResolverForwardingRuleArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private ResolverForwardingRule(String name, Output<String> id, @Nullable ResolverForwardingRuleState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:privatedns/resolverForwardingRule:ResolverForwardingRule", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static ResolverForwardingRule get(String name, Output<String> id, @Nullable ResolverForwardingRuleState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new ResolverForwardingRule(name, id, state, options);
    }
}
