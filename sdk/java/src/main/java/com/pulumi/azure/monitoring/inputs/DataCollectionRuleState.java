// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.monitoring.inputs;

import com.pulumi.azure.monitoring.inputs.DataCollectionRuleDataFlowArgs;
import com.pulumi.azure.monitoring.inputs.DataCollectionRuleDataSourcesArgs;
import com.pulumi.azure.monitoring.inputs.DataCollectionRuleDestinationsArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DataCollectionRuleState extends com.pulumi.resources.ResourceArgs {

    public static final DataCollectionRuleState Empty = new DataCollectionRuleState();

    /**
     * One or more `data_flow` blocks as defined below.
     * 
     */
    @Import(name="dataFlows")
    private @Nullable Output<List<DataCollectionRuleDataFlowArgs>> dataFlows;

    /**
     * @return One or more `data_flow` blocks as defined below.
     * 
     */
    public Optional<Output<List<DataCollectionRuleDataFlowArgs>>> dataFlows() {
        return Optional.ofNullable(this.dataFlows);
    }

    /**
     * A `data_sources` block as defined below. This property is optional and can be omitted if the rule is meant to be used via direct calls to the provisioned endpoint.
     * 
     */
    @Import(name="dataSources")
    private @Nullable Output<DataCollectionRuleDataSourcesArgs> dataSources;

    /**
     * @return A `data_sources` block as defined below. This property is optional and can be omitted if the rule is meant to be used via direct calls to the provisioned endpoint.
     * 
     */
    public Optional<Output<DataCollectionRuleDataSourcesArgs>> dataSources() {
        return Optional.ofNullable(this.dataSources);
    }

    /**
     * The description of the Data Collection Rule.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return The description of the Data Collection Rule.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * A `destinations` block as defined below.
     * 
     */
    @Import(name="destinations")
    private @Nullable Output<DataCollectionRuleDestinationsArgs> destinations;

    /**
     * @return A `destinations` block as defined below.
     * 
     */
    public Optional<Output<DataCollectionRuleDestinationsArgs>> destinations() {
        return Optional.ofNullable(this.destinations);
    }

    /**
     * The kind of the Data Collection Rule. Possible values are `Linux` and `Windows`. A rule of kind `Linux` does not allow for `windows_event_log` data sources. And a rule of kind `Windows` does not allow for `syslog` data sources. If kind is not specified, all kinds of data sources are allowed.
     * 
     */
    @Import(name="kind")
    private @Nullable Output<String> kind;

    /**
     * @return The kind of the Data Collection Rule. Possible values are `Linux` and `Windows`. A rule of kind `Linux` does not allow for `windows_event_log` data sources. And a rule of kind `Windows` does not allow for `syslog` data sources. If kind is not specified, all kinds of data sources are allowed.
     * 
     */
    public Optional<Output<String>> kind() {
        return Optional.ofNullable(this.kind);
    }

    /**
     * The Azure Region where the Data Collection Rule should exist. Changing this forces a new Data Collection Rule to be created.
     * 
     */
    @Import(name="location")
    private @Nullable Output<String> location;

    /**
     * @return The Azure Region where the Data Collection Rule should exist. Changing this forces a new Data Collection Rule to be created.
     * 
     */
    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * The name which should be used for this Data Collection Rule. Changing this forces a new Data Collection Rule to be created.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name which should be used for this Data Collection Rule. Changing this forces a new Data Collection Rule to be created.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The name of the Resource Group where the Data Collection Rule should exist. Changing this forces a new Data Collection Rule to be created.
     * 
     */
    @Import(name="resourceGroupName")
    private @Nullable Output<String> resourceGroupName;

    /**
     * @return The name of the Resource Group where the Data Collection Rule should exist. Changing this forces a new Data Collection Rule to be created.
     * 
     */
    public Optional<Output<String>> resourceGroupName() {
        return Optional.ofNullable(this.resourceGroupName);
    }

    /**
     * A mapping of tags which should be assigned to the Data Collection Rule.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return A mapping of tags which should be assigned to the Data Collection Rule.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private DataCollectionRuleState() {}

    private DataCollectionRuleState(DataCollectionRuleState $) {
        this.dataFlows = $.dataFlows;
        this.dataSources = $.dataSources;
        this.description = $.description;
        this.destinations = $.destinations;
        this.kind = $.kind;
        this.location = $.location;
        this.name = $.name;
        this.resourceGroupName = $.resourceGroupName;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DataCollectionRuleState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DataCollectionRuleState $;

        public Builder() {
            $ = new DataCollectionRuleState();
        }

        public Builder(DataCollectionRuleState defaults) {
            $ = new DataCollectionRuleState(Objects.requireNonNull(defaults));
        }

        /**
         * @param dataFlows One or more `data_flow` blocks as defined below.
         * 
         * @return builder
         * 
         */
        public Builder dataFlows(@Nullable Output<List<DataCollectionRuleDataFlowArgs>> dataFlows) {
            $.dataFlows = dataFlows;
            return this;
        }

        /**
         * @param dataFlows One or more `data_flow` blocks as defined below.
         * 
         * @return builder
         * 
         */
        public Builder dataFlows(List<DataCollectionRuleDataFlowArgs> dataFlows) {
            return dataFlows(Output.of(dataFlows));
        }

        /**
         * @param dataFlows One or more `data_flow` blocks as defined below.
         * 
         * @return builder
         * 
         */
        public Builder dataFlows(DataCollectionRuleDataFlowArgs... dataFlows) {
            return dataFlows(List.of(dataFlows));
        }

        /**
         * @param dataSources A `data_sources` block as defined below. This property is optional and can be omitted if the rule is meant to be used via direct calls to the provisioned endpoint.
         * 
         * @return builder
         * 
         */
        public Builder dataSources(@Nullable Output<DataCollectionRuleDataSourcesArgs> dataSources) {
            $.dataSources = dataSources;
            return this;
        }

        /**
         * @param dataSources A `data_sources` block as defined below. This property is optional and can be omitted if the rule is meant to be used via direct calls to the provisioned endpoint.
         * 
         * @return builder
         * 
         */
        public Builder dataSources(DataCollectionRuleDataSourcesArgs dataSources) {
            return dataSources(Output.of(dataSources));
        }

        /**
         * @param description The description of the Data Collection Rule.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description The description of the Data Collection Rule.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param destinations A `destinations` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder destinations(@Nullable Output<DataCollectionRuleDestinationsArgs> destinations) {
            $.destinations = destinations;
            return this;
        }

        /**
         * @param destinations A `destinations` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder destinations(DataCollectionRuleDestinationsArgs destinations) {
            return destinations(Output.of(destinations));
        }

        /**
         * @param kind The kind of the Data Collection Rule. Possible values are `Linux` and `Windows`. A rule of kind `Linux` does not allow for `windows_event_log` data sources. And a rule of kind `Windows` does not allow for `syslog` data sources. If kind is not specified, all kinds of data sources are allowed.
         * 
         * @return builder
         * 
         */
        public Builder kind(@Nullable Output<String> kind) {
            $.kind = kind;
            return this;
        }

        /**
         * @param kind The kind of the Data Collection Rule. Possible values are `Linux` and `Windows`. A rule of kind `Linux` does not allow for `windows_event_log` data sources. And a rule of kind `Windows` does not allow for `syslog` data sources. If kind is not specified, all kinds of data sources are allowed.
         * 
         * @return builder
         * 
         */
        public Builder kind(String kind) {
            return kind(Output.of(kind));
        }

        /**
         * @param location The Azure Region where the Data Collection Rule should exist. Changing this forces a new Data Collection Rule to be created.
         * 
         * @return builder
         * 
         */
        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location The Azure Region where the Data Collection Rule should exist. Changing this forces a new Data Collection Rule to be created.
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param name The name which should be used for this Data Collection Rule. Changing this forces a new Data Collection Rule to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name which should be used for this Data Collection Rule. Changing this forces a new Data Collection Rule to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param resourceGroupName The name of the Resource Group where the Data Collection Rule should exist. Changing this forces a new Data Collection Rule to be created.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(@Nullable Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName The name of the Resource Group where the Data Collection Rule should exist. Changing this forces a new Data Collection Rule to be created.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        /**
         * @param tags A mapping of tags which should be assigned to the Data Collection Rule.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags A mapping of tags which should be assigned to the Data Collection Rule.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public DataCollectionRuleState build() {
            return $;
        }
    }

}
