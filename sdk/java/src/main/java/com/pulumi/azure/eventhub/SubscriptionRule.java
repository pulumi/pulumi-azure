// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.eventhub;

import com.pulumi.azure.Utilities;
import com.pulumi.azure.eventhub.SubscriptionRuleArgs;
import com.pulumi.azure.eventhub.inputs.SubscriptionRuleState;
import com.pulumi.azure.eventhub.outputs.SubscriptionRuleCorrelationFilter;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Integer;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Manages a ServiceBus Subscription Rule.
 * 
 * ## Example Usage
 * 
 * ### SQL Filter)
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.azure.core.ResourceGroup;
 * import com.pulumi.azure.core.ResourceGroupArgs;
 * import com.pulumi.azure.servicebus.Namespace;
 * import com.pulumi.azure.servicebus.NamespaceArgs;
 * import com.pulumi.azure.servicebus.Topic;
 * import com.pulumi.azure.servicebus.TopicArgs;
 * import com.pulumi.azure.servicebus.Subscription;
 * import com.pulumi.azure.servicebus.SubscriptionArgs;
 * import com.pulumi.azure.servicebus.SubscriptionRule;
 * import com.pulumi.azure.servicebus.SubscriptionRuleArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new ResourceGroup("example", ResourceGroupArgs.builder()
 *             .name("tfex-servicebus-subscription-rule-sql")
 *             .location("West Europe")
 *             .build());
 * 
 *         var exampleNamespace = new Namespace("exampleNamespace", NamespaceArgs.builder()
 *             .name("tfex-servicebus-namespace")
 *             .location(example.location())
 *             .resourceGroupName(example.name())
 *             .sku("Standard")
 *             .tags(Map.of("source", "example"))
 *             .build());
 * 
 *         var exampleTopic = new Topic("exampleTopic", TopicArgs.builder()
 *             .name("tfex_servicebus_topic")
 *             .namespaceId(exampleNamespace.id())
 *             .enablePartitioning(true)
 *             .build());
 * 
 *         var exampleSubscription = new Subscription("exampleSubscription", SubscriptionArgs.builder()
 *             .name("tfex_servicebus_subscription")
 *             .topicId(exampleTopic.id())
 *             .maxDeliveryCount(1)
 *             .build());
 * 
 *         var exampleSubscriptionRule = new SubscriptionRule("exampleSubscriptionRule", SubscriptionRuleArgs.builder()
 *             .name("tfex_servicebus_rule")
 *             .subscriptionId(exampleSubscription.id())
 *             .filterType("SqlFilter")
 *             .sqlFilter("colour = 'red'")
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ### Correlation Filter)
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.azure.core.ResourceGroup;
 * import com.pulumi.azure.core.ResourceGroupArgs;
 * import com.pulumi.azure.servicebus.Namespace;
 * import com.pulumi.azure.servicebus.NamespaceArgs;
 * import com.pulumi.azure.servicebus.Topic;
 * import com.pulumi.azure.servicebus.TopicArgs;
 * import com.pulumi.azure.servicebus.Subscription;
 * import com.pulumi.azure.servicebus.SubscriptionArgs;
 * import com.pulumi.azure.servicebus.SubscriptionRule;
 * import com.pulumi.azure.servicebus.SubscriptionRuleArgs;
 * import com.pulumi.azure.servicebus.inputs.SubscriptionRuleCorrelationFilterArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new ResourceGroup("example", ResourceGroupArgs.builder()
 *             .name("tfex-servicebus-subscription-rule-cor")
 *             .location("West Europe")
 *             .build());
 * 
 *         var exampleNamespace = new Namespace("exampleNamespace", NamespaceArgs.builder()
 *             .name("tfex-servicebus-namespace")
 *             .location(example.location())
 *             .resourceGroupName(example.name())
 *             .sku("Standard")
 *             .tags(Map.of("source", "example"))
 *             .build());
 * 
 *         var exampleTopic = new Topic("exampleTopic", TopicArgs.builder()
 *             .name("tfex_servicebus_topic")
 *             .namespaceId(exampleNamespace.id())
 *             .enablePartitioning(true)
 *             .build());
 * 
 *         var exampleSubscription = new Subscription("exampleSubscription", SubscriptionArgs.builder()
 *             .name("tfex_servicebus_subscription")
 *             .topicId(exampleTopic.id())
 *             .maxDeliveryCount(1)
 *             .build());
 * 
 *         var exampleSubscriptionRule = new SubscriptionRule("exampleSubscriptionRule", SubscriptionRuleArgs.builder()
 *             .name("tfex_servicebus_rule")
 *             .subscriptionId(exampleSubscription.id())
 *             .filterType("CorrelationFilter")
 *             .correlationFilter(SubscriptionRuleCorrelationFilterArgs.builder()
 *                 .correlationId("high")
 *                 .label("red")
 *                 .properties(Map.of("customProperty", "value"))
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * Service Bus Subscription Rule can be imported using the `resource id`, e.g.
 * 
 * ```sh
 * $ pulumi import azure:eventhub/subscriptionRule:SubscriptionRule example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/mygroup1/providers/Microsoft.ServiceBus/namespaces/sbns1/topics/sntopic1/subscriptions/sbsub1/rules/sbrule1
 * ```
 * 
 * @deprecated
 * azure.eventhub.SubscriptionRule has been deprecated in favor of azure.servicebus.SubscriptionRule
 * 
 */
@Deprecated /* azure.eventhub.SubscriptionRule has been deprecated in favor of azure.servicebus.SubscriptionRule */
@ResourceType(type="azure:eventhub/subscriptionRule:SubscriptionRule")
public class SubscriptionRule extends com.pulumi.resources.CustomResource {
    /**
     * Represents set of actions written in SQL language-based syntax that is performed against a BrokeredMessage.
     * 
     */
    @Export(name="action", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> action;

    /**
     * @return Represents set of actions written in SQL language-based syntax that is performed against a BrokeredMessage.
     * 
     */
    public Output<Optional<String>> action() {
        return Codegen.optional(this.action);
    }
    /**
     * A `correlation_filter` block as documented below to be evaluated against a BrokeredMessage. Required when `filter_type` is set to `CorrelationFilter`.
     * 
     */
    @Export(name="correlationFilter", refs={SubscriptionRuleCorrelationFilter.class}, tree="[0]")
    private Output</* @Nullable */ SubscriptionRuleCorrelationFilter> correlationFilter;

    /**
     * @return A `correlation_filter` block as documented below to be evaluated against a BrokeredMessage. Required when `filter_type` is set to `CorrelationFilter`.
     * 
     */
    public Output<Optional<SubscriptionRuleCorrelationFilter>> correlationFilter() {
        return Codegen.optional(this.correlationFilter);
    }
    /**
     * Type of filter to be applied to a BrokeredMessage. Possible values are `SqlFilter` and `CorrelationFilter`.
     * 
     */
    @Export(name="filterType", refs={String.class}, tree="[0]")
    private Output<String> filterType;

    /**
     * @return Type of filter to be applied to a BrokeredMessage. Possible values are `SqlFilter` and `CorrelationFilter`.
     * 
     */
    public Output<String> filterType() {
        return this.filterType;
    }
    /**
     * Specifies the name of the ServiceBus Subscription Rule. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return Specifies the name of the ServiceBus Subscription Rule. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Represents a filter written in SQL language-based syntax that to be evaluated against a BrokeredMessage. Required when `filter_type` is set to `SqlFilter`.
     * 
     */
    @Export(name="sqlFilter", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> sqlFilter;

    /**
     * @return Represents a filter written in SQL language-based syntax that to be evaluated against a BrokeredMessage. Required when `filter_type` is set to `SqlFilter`.
     * 
     */
    public Output<Optional<String>> sqlFilter() {
        return Codegen.optional(this.sqlFilter);
    }
    @Export(name="sqlFilterCompatibilityLevel", refs={Integer.class}, tree="[0]")
    private Output<Integer> sqlFilterCompatibilityLevel;

    public Output<Integer> sqlFilterCompatibilityLevel() {
        return this.sqlFilterCompatibilityLevel;
    }
    /**
     * The ID of the ServiceBus Subscription in which this Rule should be created. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="subscriptionId", refs={String.class}, tree="[0]")
    private Output<String> subscriptionId;

    /**
     * @return The ID of the ServiceBus Subscription in which this Rule should be created. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> subscriptionId() {
        return this.subscriptionId;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public SubscriptionRule(String name) {
        this(name, SubscriptionRuleArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public SubscriptionRule(String name, SubscriptionRuleArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public SubscriptionRule(String name, SubscriptionRuleArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:eventhub/subscriptionRule:SubscriptionRule", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()));
    }

    private SubscriptionRule(String name, Output<String> id, @Nullable SubscriptionRuleState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:eventhub/subscriptionRule:SubscriptionRule", name, state, makeResourceOptions(options, id));
    }

    private static SubscriptionRuleArgs makeArgs(SubscriptionRuleArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? SubscriptionRuleArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static SubscriptionRule get(String name, Output<String> id, @Nullable SubscriptionRuleState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new SubscriptionRule(name, id, state, options);
    }
}
