// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.mobile;

import com.pulumi.azure.Utilities;
import com.pulumi.azure.mobile.NetworkSimArgs;
import com.pulumi.azure.mobile.inputs.NetworkSimState;
import com.pulumi.azure.mobile.outputs.NetworkSimStaticIpConfiguration;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Manages a Mobile Network Sim.
 * 
 * ## Example Usage
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.azure.core.ResourceGroup;
 * import com.pulumi.azure.core.ResourceGroupArgs;
 * import com.pulumi.azure.mobile.Network;
 * import com.pulumi.azure.mobile.NetworkArgs;
 * import com.pulumi.azure.mobile.NetworkSimGroup;
 * import com.pulumi.azure.mobile.NetworkSimGroupArgs;
 * import com.pulumi.azure.mobile.NetworkSlice;
 * import com.pulumi.azure.mobile.NetworkSliceArgs;
 * import com.pulumi.azure.mobile.inputs.NetworkSliceSingleNetworkSliceSelectionAssistanceInformationArgs;
 * import com.pulumi.azure.mobile.NetworkAttachedDataNetwork;
 * import com.pulumi.azure.mobile.NetworkAttachedDataNetworkArgs;
 * import com.pulumi.azure.mobile.NetworkSim;
 * import com.pulumi.azure.mobile.NetworkSimArgs;
 * import com.pulumi.azure.mobile.inputs.NetworkSimStaticIpConfigurationArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var exampleResourceGroup = new ResourceGroup(&#34;exampleResourceGroup&#34;, ResourceGroupArgs.builder()        
 *             .location(&#34;West Europe&#34;)
 *             .build());
 * 
 *         var exampleNetwork = new Network(&#34;exampleNetwork&#34;, NetworkArgs.builder()        
 *             .location(exampleResourceGroup.location())
 *             .resourceGroupName(exampleResourceGroup.name())
 *             .mobileCountryCode(&#34;001&#34;)
 *             .mobileNetworkCode(&#34;01&#34;)
 *             .build());
 * 
 *         var exampleNetworkSimGroup = new NetworkSimGroup(&#34;exampleNetworkSimGroup&#34;, NetworkSimGroupArgs.builder()        
 *             .location(exampleResourceGroup.location())
 *             .mobileNetworkId(exampleNetwork.id())
 *             .build());
 * 
 *         var exampleNetworkSlice = new NetworkSlice(&#34;exampleNetworkSlice&#34;, NetworkSliceArgs.builder()        
 *             .mobileNetworkId(exampleNetwork.id())
 *             .location(exampleResourceGroup.location())
 *             .singleNetworkSliceSelectionAssistanceInformation(NetworkSliceSingleNetworkSliceSelectionAssistanceInformationArgs.builder()
 *                 .sliceServiceType(1)
 *                 .build())
 *             .build());
 * 
 *         var exampleNetworkAttachedDataNetwork = new NetworkAttachedDataNetwork(&#34;exampleNetworkAttachedDataNetwork&#34;, NetworkAttachedDataNetworkArgs.builder()        
 *             .mobileNetworkDataNetworkName(azurerm_mobile_network_data_network.example().name())
 *             .mobileNetworkPacketCoreDataPlaneId(azurerm_mobile_network_packet_core_data_plane.example().id())
 *             .location(exampleResourceGroup.location())
 *             .dnsAddresses(&#34;1.1.1.1&#34;)
 *             .userEquipmentAddressPoolPrefixes(&#34;2.4.0.0/24&#34;)
 *             .userEquipmentStaticAddressPoolPrefixes(&#34;2.4.1.0/24&#34;)
 *             .userPlaneAccessName(&#34;test&#34;)
 *             .userPlaneAccessIpv4Address(&#34;10.204.141.4&#34;)
 *             .userPlaneAccessIpv4Gateway(&#34;10.204.141.1&#34;)
 *             .userPlaneAccessIpv4Subnet(&#34;10.204.141.0/24&#34;)
 *             .build());
 * 
 *         var exampleNetworkSim = new NetworkSim(&#34;exampleNetworkSim&#34;, NetworkSimArgs.builder()        
 *             .mobileNetworkSimGroupId(exampleNetworkSimGroup.id())
 *             .authenticationKey(&#34;00000000000000000000000000000000&#34;)
 *             .integratedCircuitCardIdentifier(&#34;8900000000000000000&#34;)
 *             .internationalMobileSubscriberIdentity(&#34;000000000000000&#34;)
 *             .operatorKeyCode(&#34;00000000000000000000000000000000&#34;)
 *             .staticIpConfigurations(NetworkSimStaticIpConfigurationArgs.builder()
 *                 .attachedDataNetworkId(data.azurerm_mobile_network_attached_data_network().test().id())
 *                 .sliceId(azurerm_mobile_network_slice.test().id())
 *                 .staticIpv4Address(&#34;2.4.0.1&#34;)
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * Mobile Network Sim can be imported using the `resource id`, e.g.
 * 
 * ```sh
 *  $ pulumi import azure:mobile/networkSim:NetworkSim example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resourceGroup1/providers/Microsoft.MobileNetwork/simGroups/simGroup1/sims/sim1
 * ```
 * 
 */
@ResourceType(type="azure:mobile/networkSim:NetworkSim")
public class NetworkSim extends com.pulumi.resources.CustomResource {
    /**
     * The Ki value for the SIM.
     * 
     */
    @Export(name="authenticationKey", refs={String.class}, tree="[0]")
    private Output<String> authenticationKey;

    /**
     * @return The Ki value for the SIM.
     * 
     */
    public Output<String> authenticationKey() {
        return this.authenticationKey;
    }
    /**
     * An optional free-form text field that can be used to record the device type this SIM is associated with, for example `Video camera`. The Azure portal allows SIMs to be grouped and filtered based on this value.
     * 
     */
    @Export(name="deviceType", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> deviceType;

    /**
     * @return An optional free-form text field that can be used to record the device type this SIM is associated with, for example `Video camera`. The Azure portal allows SIMs to be grouped and filtered based on this value.
     * 
     */
    public Output<Optional<String>> deviceType() {
        return Codegen.optional(this.deviceType);
    }
    /**
     * The integrated circuit card ID (ICCID) for the SIM. Changing this forces a new Mobile Network Sim to be created.
     * 
     */
    @Export(name="integratedCircuitCardIdentifier", refs={String.class}, tree="[0]")
    private Output<String> integratedCircuitCardIdentifier;

    /**
     * @return The integrated circuit card ID (ICCID) for the SIM. Changing this forces a new Mobile Network Sim to be created.
     * 
     */
    public Output<String> integratedCircuitCardIdentifier() {
        return this.integratedCircuitCardIdentifier;
    }
    /**
     * The international mobile subscriber identity (IMSI) for the SIM. Changing this forces a new Mobile Network Sim to be created.
     * 
     */
    @Export(name="internationalMobileSubscriberIdentity", refs={String.class}, tree="[0]")
    private Output<String> internationalMobileSubscriberIdentity;

    /**
     * @return The international mobile subscriber identity (IMSI) for the SIM. Changing this forces a new Mobile Network Sim to be created.
     * 
     */
    public Output<String> internationalMobileSubscriberIdentity() {
        return this.internationalMobileSubscriberIdentity;
    }
    /**
     * The ID of the Mobile Network which the Mobile Network Sim belongs to. Changing this forces a new Mobile Network Sim to be created.
     * 
     */
    @Export(name="mobileNetworkSimGroupId", refs={String.class}, tree="[0]")
    private Output<String> mobileNetworkSimGroupId;

    /**
     * @return The ID of the Mobile Network which the Mobile Network Sim belongs to. Changing this forces a new Mobile Network Sim to be created.
     * 
     */
    public Output<String> mobileNetworkSimGroupId() {
        return this.mobileNetworkSimGroupId;
    }
    /**
     * The name which should be used for this Mobile Network Sim. Changing this forces a new Mobile Network Sim to be created.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The name which should be used for this Mobile Network Sim. Changing this forces a new Mobile Network Sim to be created.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The Opc value for the SIM.
     * 
     */
    @Export(name="operatorKeyCode", refs={String.class}, tree="[0]")
    private Output<String> operatorKeyCode;

    /**
     * @return The Opc value for the SIM.
     * 
     */
    public Output<String> operatorKeyCode() {
        return this.operatorKeyCode;
    }
    /**
     * The ID of SIM policy used by this SIM.
     * 
     */
    @Export(name="simPolicyId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> simPolicyId;

    /**
     * @return The ID of SIM policy used by this SIM.
     * 
     */
    public Output<Optional<String>> simPolicyId() {
        return Codegen.optional(this.simPolicyId);
    }
    /**
     * The state of the SIM resource.
     * 
     */
    @Export(name="simState", refs={String.class}, tree="[0]")
    private Output<String> simState;

    /**
     * @return The state of the SIM resource.
     * 
     */
    public Output<String> simState() {
        return this.simState;
    }
    /**
     * A `static_ip_configuration` block as defined below.
     * 
     */
    @Export(name="staticIpConfigurations", refs={List.class,NetworkSimStaticIpConfiguration.class}, tree="[0,1]")
    private Output</* @Nullable */ List<NetworkSimStaticIpConfiguration>> staticIpConfigurations;

    /**
     * @return A `static_ip_configuration` block as defined below.
     * 
     */
    public Output<Optional<List<NetworkSimStaticIpConfiguration>>> staticIpConfigurations() {
        return Codegen.optional(this.staticIpConfigurations);
    }
    /**
     * The public key fingerprint of the SIM vendor who provided this SIM, if any.
     * 
     */
    @Export(name="vendorKeyFingerprint", refs={String.class}, tree="[0]")
    private Output<String> vendorKeyFingerprint;

    /**
     * @return The public key fingerprint of the SIM vendor who provided this SIM, if any.
     * 
     */
    public Output<String> vendorKeyFingerprint() {
        return this.vendorKeyFingerprint;
    }
    /**
     * The name of the SIM vendor who provided this SIM, if any.
     * 
     */
    @Export(name="vendorName", refs={String.class}, tree="[0]")
    private Output<String> vendorName;

    /**
     * @return The name of the SIM vendor who provided this SIM, if any.
     * 
     */
    public Output<String> vendorName() {
        return this.vendorName;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public NetworkSim(String name) {
        this(name, NetworkSimArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public NetworkSim(String name, NetworkSimArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public NetworkSim(String name, NetworkSimArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:mobile/networkSim:NetworkSim", name, args == null ? NetworkSimArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private NetworkSim(String name, Output<String> id, @Nullable NetworkSimState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:mobile/networkSim:NetworkSim", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .additionalSecretOutputs(List.of(
                "authenticationKey",
                "operatorKeyCode"
            ))
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static NetworkSim get(String name, Output<String> id, @Nullable NetworkSimState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new NetworkSim(name, id, state, options);
    }
}
