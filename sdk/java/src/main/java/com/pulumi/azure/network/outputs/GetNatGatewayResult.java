// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.network.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetNatGatewayResult {
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return The idle timeout in minutes which is used for the NAT Gateway.
     * 
     */
    private Integer idleTimeoutInMinutes;
    /**
     * @return The location where the NAT Gateway exists.
     * 
     */
    private String location;
    private String name;
    /**
     * @return A list of existing Public IP Address resource IDs which the NAT Gateway is using.
     * 
     */
    private List<String> publicIpAddressIds;
    /**
     * @return A list of existing Public IP Prefix resource IDs which the NAT Gateway is using.
     * 
     */
    private List<String> publicIpPrefixIds;
    private String resourceGroupName;
    /**
     * @return The Resource GUID of the NAT Gateway.
     * 
     */
    private String resourceGuid;
    /**
     * @return The SKU used by the NAT Gateway.
     * 
     */
    private String skuName;
    /**
     * @return A mapping of tags assigned to the resource.
     * 
     */
    private Map<String,String> tags;
    /**
     * @return A list of Availability Zones which the NAT Gateway exists in.
     * 
     */
    private List<String> zones;

    private GetNatGatewayResult() {}
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The idle timeout in minutes which is used for the NAT Gateway.
     * 
     */
    public Integer idleTimeoutInMinutes() {
        return this.idleTimeoutInMinutes;
    }
    /**
     * @return The location where the NAT Gateway exists.
     * 
     */
    public String location() {
        return this.location;
    }
    public String name() {
        return this.name;
    }
    /**
     * @return A list of existing Public IP Address resource IDs which the NAT Gateway is using.
     * 
     */
    public List<String> publicIpAddressIds() {
        return this.publicIpAddressIds;
    }
    /**
     * @return A list of existing Public IP Prefix resource IDs which the NAT Gateway is using.
     * 
     */
    public List<String> publicIpPrefixIds() {
        return this.publicIpPrefixIds;
    }
    public String resourceGroupName() {
        return this.resourceGroupName;
    }
    /**
     * @return The Resource GUID of the NAT Gateway.
     * 
     */
    public String resourceGuid() {
        return this.resourceGuid;
    }
    /**
     * @return The SKU used by the NAT Gateway.
     * 
     */
    public String skuName() {
        return this.skuName;
    }
    /**
     * @return A mapping of tags assigned to the resource.
     * 
     */
    public Map<String,String> tags() {
        return this.tags;
    }
    /**
     * @return A list of Availability Zones which the NAT Gateway exists in.
     * 
     */
    public List<String> zones() {
        return this.zones;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetNatGatewayResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String id;
        private Integer idleTimeoutInMinutes;
        private String location;
        private String name;
        private List<String> publicIpAddressIds;
        private List<String> publicIpPrefixIds;
        private String resourceGroupName;
        private String resourceGuid;
        private String skuName;
        private Map<String,String> tags;
        private List<String> zones;
        public Builder() {}
        public Builder(GetNatGatewayResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.id = defaults.id;
    	      this.idleTimeoutInMinutes = defaults.idleTimeoutInMinutes;
    	      this.location = defaults.location;
    	      this.name = defaults.name;
    	      this.publicIpAddressIds = defaults.publicIpAddressIds;
    	      this.publicIpPrefixIds = defaults.publicIpPrefixIds;
    	      this.resourceGroupName = defaults.resourceGroupName;
    	      this.resourceGuid = defaults.resourceGuid;
    	      this.skuName = defaults.skuName;
    	      this.tags = defaults.tags;
    	      this.zones = defaults.zones;
        }

        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder idleTimeoutInMinutes(Integer idleTimeoutInMinutes) {
            this.idleTimeoutInMinutes = Objects.requireNonNull(idleTimeoutInMinutes);
            return this;
        }
        @CustomType.Setter
        public Builder location(String location) {
            this.location = Objects.requireNonNull(location);
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder publicIpAddressIds(List<String> publicIpAddressIds) {
            this.publicIpAddressIds = Objects.requireNonNull(publicIpAddressIds);
            return this;
        }
        public Builder publicIpAddressIds(String... publicIpAddressIds) {
            return publicIpAddressIds(List.of(publicIpAddressIds));
        }
        @CustomType.Setter
        public Builder publicIpPrefixIds(List<String> publicIpPrefixIds) {
            this.publicIpPrefixIds = Objects.requireNonNull(publicIpPrefixIds);
            return this;
        }
        public Builder publicIpPrefixIds(String... publicIpPrefixIds) {
            return publicIpPrefixIds(List.of(publicIpPrefixIds));
        }
        @CustomType.Setter
        public Builder resourceGroupName(String resourceGroupName) {
            this.resourceGroupName = Objects.requireNonNull(resourceGroupName);
            return this;
        }
        @CustomType.Setter
        public Builder resourceGuid(String resourceGuid) {
            this.resourceGuid = Objects.requireNonNull(resourceGuid);
            return this;
        }
        @CustomType.Setter
        public Builder skuName(String skuName) {
            this.skuName = Objects.requireNonNull(skuName);
            return this;
        }
        @CustomType.Setter
        public Builder tags(Map<String,String> tags) {
            this.tags = Objects.requireNonNull(tags);
            return this;
        }
        @CustomType.Setter
        public Builder zones(List<String> zones) {
            this.zones = Objects.requireNonNull(zones);
            return this;
        }
        public Builder zones(String... zones) {
            return zones(List.of(zones));
        }
        public GetNatGatewayResult build() {
            final var _resultValue = new GetNatGatewayResult();
            _resultValue.id = id;
            _resultValue.idleTimeoutInMinutes = idleTimeoutInMinutes;
            _resultValue.location = location;
            _resultValue.name = name;
            _resultValue.publicIpAddressIds = publicIpAddressIds;
            _resultValue.publicIpPrefixIds = publicIpPrefixIds;
            _resultValue.resourceGroupName = resourceGroupName;
            _resultValue.resourceGuid = resourceGuid;
            _resultValue.skuName = skuName;
            _resultValue.tags = tags;
            _resultValue.zones = zones;
            return _resultValue;
        }
    }
}
