// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.elasticsan;

import com.pulumi.azure.Utilities;
import com.pulumi.azure.elasticsan.ElasticSanArgs;
import com.pulumi.azure.elasticsan.inputs.ElasticSanState;
import com.pulumi.azure.elasticsan.outputs.ElasticSanSku;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Manages an Elastic SAN resource.
 * 
 * ## Example Usage
 * 
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.azure.core.ResourceGroup;
 * import com.pulumi.azure.core.ResourceGroupArgs;
 * import com.pulumi.azure.elasticsan.ElasticSan;
 * import com.pulumi.azure.elasticsan.ElasticSanArgs;
 * import com.pulumi.azure.elasticsan.inputs.ElasticSanSkuArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new ResourceGroup("example", ResourceGroupArgs.builder()
 *             .name("example-resources")
 *             .location("West Europe")
 *             .build());
 * 
 *         var exampleElasticSan = new ElasticSan("exampleElasticSan", ElasticSanArgs.builder()
 *             .name("example")
 *             .resourceGroupName(example.name())
 *             .location(example.location())
 *             .baseSizeInTib(1)
 *             .extendedSizeInTib(2)
 *             .sku(ElasticSanSkuArgs.builder()
 *                 .name("example-value")
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * 
 * ## API Providers
 * 
 * &lt;!-- This section is generated, changes will be overwritten --&gt;
 * This resource uses the following Azure API Providers:
 * 
 * * `Microsoft.ElasticSan` - 2023-01-01
 * 
 * ## Import
 * 
 * An existing Elastic SAN can be imported into Pulumi using the `resource id`, e.g.
 * 
 * ```sh
 * $ pulumi import azure:elasticsan/elasticSan:ElasticSan example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rg1/providers/Microsoft.ElasticSan/elasticSans/esan1
 * ```
 * 
 */
@ResourceType(type="azure:elasticsan/elasticSan:ElasticSan")
public class ElasticSan extends com.pulumi.resources.CustomResource {
    /**
     * Specifies the base size of the Elastic SAN resource in TiB. Possible values are between `1` and `100`.
     * 
     * &gt; **Note:** When updating `base_size_in_tib`, the new value should be greater than the existing one.
     * 
     */
    @Export(name="baseSizeInTib", refs={Integer.class}, tree="[0]")
    private Output<Integer> baseSizeInTib;

    /**
     * @return Specifies the base size of the Elastic SAN resource in TiB. Possible values are between `1` and `100`.
     * 
     * &gt; **Note:** When updating `base_size_in_tib`, the new value should be greater than the existing one.
     * 
     */
    public Output<Integer> baseSizeInTib() {
        return this.baseSizeInTib;
    }
    /**
     * Specifies the extended size of the Elastic SAN resource in TiB. Possible values are between `1` and `100`.
     * 
     * &gt; **Note:** `extended_size_in_tib` cannot be removed and when updating, the new value should be greater than the existing one.
     * 
     */
    @Export(name="extendedSizeInTib", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> extendedSizeInTib;

    /**
     * @return Specifies the extended size of the Elastic SAN resource in TiB. Possible values are between `1` and `100`.
     * 
     * &gt; **Note:** `extended_size_in_tib` cannot be removed and when updating, the new value should be greater than the existing one.
     * 
     */
    public Output<Optional<Integer>> extendedSizeInTib() {
        return Codegen.optional(this.extendedSizeInTib);
    }
    /**
     * The Azure Region where the Elastic SAN resource should exist. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="location", refs={String.class}, tree="[0]")
    private Output<String> location;

    /**
     * @return The Azure Region where the Elastic SAN resource should exist. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> location() {
        return this.location;
    }
    /**
     * Specifies the name of this Elastic SAN resource. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return Specifies the name of this Elastic SAN resource. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Specifies the name of the Resource Group within which this Elastic SAN resource should exist. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="resourceGroupName", refs={String.class}, tree="[0]")
    private Output<String> resourceGroupName;

    /**
     * @return Specifies the name of the Resource Group within which this Elastic SAN resource should exist. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }
    /**
     * A `sku` block as defined below.
     * 
     */
    @Export(name="sku", refs={ElasticSanSku.class}, tree="[0]")
    private Output<ElasticSanSku> sku;

    /**
     * @return A `sku` block as defined below.
     * 
     */
    public Output<ElasticSanSku> sku() {
        return this.sku;
    }
    /**
     * A mapping of tags which should be assigned to the Elastic SAN resource.
     * 
     */
    @Export(name="tags", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output</* @Nullable */ Map<String,String>> tags;

    /**
     * @return A mapping of tags which should be assigned to the Elastic SAN resource.
     * 
     */
    public Output<Optional<Map<String,String>>> tags() {
        return Codegen.optional(this.tags);
    }
    /**
     * Total Provisioned IOps of the Elastic SAN resource.
     * 
     */
    @Export(name="totalIops", refs={Integer.class}, tree="[0]")
    private Output<Integer> totalIops;

    /**
     * @return Total Provisioned IOps of the Elastic SAN resource.
     * 
     */
    public Output<Integer> totalIops() {
        return this.totalIops;
    }
    /**
     * Total Provisioned MBps Elastic SAN resource.
     * 
     */
    @Export(name="totalMbps", refs={Integer.class}, tree="[0]")
    private Output<Integer> totalMbps;

    /**
     * @return Total Provisioned MBps Elastic SAN resource.
     * 
     */
    public Output<Integer> totalMbps() {
        return this.totalMbps;
    }
    /**
     * Total size of the Elastic SAN resource in TB.
     * 
     */
    @Export(name="totalSizeInTib", refs={Integer.class}, tree="[0]")
    private Output<Integer> totalSizeInTib;

    /**
     * @return Total size of the Elastic SAN resource in TB.
     * 
     */
    public Output<Integer> totalSizeInTib() {
        return this.totalSizeInTib;
    }
    /**
     * Total size of the provisioned Volumes in GiB.
     * 
     */
    @Export(name="totalVolumeSizeInGib", refs={Integer.class}, tree="[0]")
    private Output<Integer> totalVolumeSizeInGib;

    /**
     * @return Total size of the provisioned Volumes in GiB.
     * 
     */
    public Output<Integer> totalVolumeSizeInGib() {
        return this.totalVolumeSizeInGib;
    }
    /**
     * Total number of volume groups in this Elastic SAN resource.
     * 
     */
    @Export(name="volumeGroupCount", refs={Integer.class}, tree="[0]")
    private Output<Integer> volumeGroupCount;

    /**
     * @return Total number of volume groups in this Elastic SAN resource.
     * 
     */
    public Output<Integer> volumeGroupCount() {
        return this.volumeGroupCount;
    }
    /**
     * Logical zone for the Elastic SAN resource. Changing this forces a new resource to be created.
     * 
     * &gt; **Note:** `zones` cannot be specified if `sku.name` is set to `Premium_ZRS`.
     * 
     */
    @Export(name="zones", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> zones;

    /**
     * @return Logical zone for the Elastic SAN resource. Changing this forces a new resource to be created.
     * 
     * &gt; **Note:** `zones` cannot be specified if `sku.name` is set to `Premium_ZRS`.
     * 
     */
    public Output<Optional<List<String>>> zones() {
        return Codegen.optional(this.zones);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public ElasticSan(java.lang.String name) {
        this(name, ElasticSanArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public ElasticSan(java.lang.String name, ElasticSanArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public ElasticSan(java.lang.String name, ElasticSanArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:elasticsan/elasticSan:ElasticSan", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private ElasticSan(java.lang.String name, Output<java.lang.String> id, @Nullable ElasticSanState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:elasticsan/elasticSan:ElasticSan", name, state, makeResourceOptions(options, id), false);
    }

    private static ElasticSanArgs makeArgs(ElasticSanArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? ElasticSanArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static ElasticSan get(java.lang.String name, Output<java.lang.String> id, @Nullable ElasticSanState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new ElasticSan(name, id, state, options);
    }
}
