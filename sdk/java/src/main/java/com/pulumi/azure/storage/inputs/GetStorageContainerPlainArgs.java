// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.storage.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetStorageContainerPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetStorageContainerPlainArgs Empty = new GetStorageContainerPlainArgs();

    /**
     * A mapping of MetaData for this Container.
     * 
     */
    @Import(name="metadata")
    private @Nullable Map<String,String> metadata;

    /**
     * @return A mapping of MetaData for this Container.
     * 
     */
    public Optional<Map<String,String>> metadata() {
        return Optional.ofNullable(this.metadata);
    }

    /**
     * The name of the Container.
     * 
     */
    @Import(name="name", required=true)
    private String name;

    /**
     * @return The name of the Container.
     * 
     */
    public String name() {
        return this.name;
    }

    /**
     * The id of the Storage Account where the Container exists. This property will become Required in version 5.0 of the Provider.
     * 
     * &gt; **NOTE:** One of `storage_account_name` or `storage_account_id` must be specified. When specifying `storage_account_id` the resource will use the Resource Manager API, rather than the Data Plane API.
     * 
     */
    @Import(name="storageAccountId")
    private @Nullable String storageAccountId;

    /**
     * @return The id of the Storage Account where the Container exists. This property will become Required in version 5.0 of the Provider.
     * 
     * &gt; **NOTE:** One of `storage_account_name` or `storage_account_id` must be specified. When specifying `storage_account_id` the resource will use the Resource Manager API, rather than the Data Plane API.
     * 
     */
    public Optional<String> storageAccountId() {
        return Optional.ofNullable(this.storageAccountId);
    }

    /**
     * The name of the Storage Account where the Container exists. This property is deprecated in favour of `storage_account_id`.
     * 
     */
    @Import(name="storageAccountName")
    private @Nullable String storageAccountName;

    /**
     * @return The name of the Storage Account where the Container exists. This property is deprecated in favour of `storage_account_id`.
     * 
     */
    public Optional<String> storageAccountName() {
        return Optional.ofNullable(this.storageAccountName);
    }

    private GetStorageContainerPlainArgs() {}

    private GetStorageContainerPlainArgs(GetStorageContainerPlainArgs $) {
        this.metadata = $.metadata;
        this.name = $.name;
        this.storageAccountId = $.storageAccountId;
        this.storageAccountName = $.storageAccountName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetStorageContainerPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetStorageContainerPlainArgs $;

        public Builder() {
            $ = new GetStorageContainerPlainArgs();
        }

        public Builder(GetStorageContainerPlainArgs defaults) {
            $ = new GetStorageContainerPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param metadata A mapping of MetaData for this Container.
         * 
         * @return builder
         * 
         */
        public Builder metadata(@Nullable Map<String,String> metadata) {
            $.metadata = metadata;
            return this;
        }

        /**
         * @param name The name of the Container.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            $.name = name;
            return this;
        }

        /**
         * @param storageAccountId The id of the Storage Account where the Container exists. This property will become Required in version 5.0 of the Provider.
         * 
         * &gt; **NOTE:** One of `storage_account_name` or `storage_account_id` must be specified. When specifying `storage_account_id` the resource will use the Resource Manager API, rather than the Data Plane API.
         * 
         * @return builder
         * 
         */
        public Builder storageAccountId(@Nullable String storageAccountId) {
            $.storageAccountId = storageAccountId;
            return this;
        }

        /**
         * @param storageAccountName The name of the Storage Account where the Container exists. This property is deprecated in favour of `storage_account_id`.
         * 
         * @return builder
         * 
         */
        public Builder storageAccountName(@Nullable String storageAccountName) {
            $.storageAccountName = storageAccountName;
            return this;
        }

        public GetStorageContainerPlainArgs build() {
            if ($.name == null) {
                throw new MissingRequiredPropertyException("GetStorageContainerPlainArgs", "name");
            }
            return $;
        }
    }

}
