// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.chaosstudio.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ExperimentStepBranchActionArgs extends com.pulumi.resources.ResourceArgs {

    public static final ExperimentStepBranchActionArgs Empty = new ExperimentStepBranchActionArgs();

    /**
     * The type of action that should be added to the experiment. Possible values are `continuous`, `delay` and `discrete`.
     * 
     */
    @Import(name="actionType", required=true)
    private Output<String> actionType;

    /**
     * @return The type of action that should be added to the experiment. Possible values are `continuous`, `delay` and `discrete`.
     * 
     */
    public Output<String> actionType() {
        return this.actionType;
    }

    /**
     * An ISO8601 formatted string specifying the duration for a `delay` or `continuous` action.
     * 
     */
    @Import(name="duration")
    private @Nullable Output<String> duration;

    /**
     * @return An ISO8601 formatted string specifying the duration for a `delay` or `continuous` action.
     * 
     */
    public Optional<Output<String>> duration() {
        return Optional.ofNullable(this.duration);
    }

    /**
     * A key-value map of additional parameters to configure the action. The values that are accepted by this depend on the `urn` i.e. the capability/fault that is applied. Possible parameter values can be found in this [documentation](https://learn.microsoft.com/azure/chaos-studio/chaos-studio-fault-library)
     * 
     */
    @Import(name="parameters")
    private @Nullable Output<Map<String,String>> parameters;

    /**
     * @return A key-value map of additional parameters to configure the action. The values that are accepted by this depend on the `urn` i.e. the capability/fault that is applied. Possible parameter values can be found in this [documentation](https://learn.microsoft.com/azure/chaos-studio/chaos-studio-fault-library)
     * 
     */
    public Optional<Output<Map<String,String>>> parameters() {
        return Optional.ofNullable(this.parameters);
    }

    /**
     * The name of the Selector to which this action should apply to. This must be specified if the `action_type` is `continuous` or `discrete`.
     * 
     */
    @Import(name="selectorName")
    private @Nullable Output<String> selectorName;

    /**
     * @return The name of the Selector to which this action should apply to. This must be specified if the `action_type` is `continuous` or `discrete`.
     * 
     */
    public Optional<Output<String>> selectorName() {
        return Optional.ofNullable(this.selectorName);
    }

    /**
     * The Unique Resource Name of the action, this value is provided by the `azure.chaosstudio.Capability` resource e.g. `azurerm_chaos_studio_capability.example.urn`. This must be specified if the `action_type` is `continuous` or `discrete`.
     * 
     */
    @Import(name="urn")
    private @Nullable Output<String> urn;

    /**
     * @return The Unique Resource Name of the action, this value is provided by the `azure.chaosstudio.Capability` resource e.g. `azurerm_chaos_studio_capability.example.urn`. This must be specified if the `action_type` is `continuous` or `discrete`.
     * 
     */
    public Optional<Output<String>> urn() {
        return Optional.ofNullable(this.urn);
    }

    private ExperimentStepBranchActionArgs() {}

    private ExperimentStepBranchActionArgs(ExperimentStepBranchActionArgs $) {
        this.actionType = $.actionType;
        this.duration = $.duration;
        this.parameters = $.parameters;
        this.selectorName = $.selectorName;
        this.urn = $.urn;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ExperimentStepBranchActionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ExperimentStepBranchActionArgs $;

        public Builder() {
            $ = new ExperimentStepBranchActionArgs();
        }

        public Builder(ExperimentStepBranchActionArgs defaults) {
            $ = new ExperimentStepBranchActionArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param actionType The type of action that should be added to the experiment. Possible values are `continuous`, `delay` and `discrete`.
         * 
         * @return builder
         * 
         */
        public Builder actionType(Output<String> actionType) {
            $.actionType = actionType;
            return this;
        }

        /**
         * @param actionType The type of action that should be added to the experiment. Possible values are `continuous`, `delay` and `discrete`.
         * 
         * @return builder
         * 
         */
        public Builder actionType(String actionType) {
            return actionType(Output.of(actionType));
        }

        /**
         * @param duration An ISO8601 formatted string specifying the duration for a `delay` or `continuous` action.
         * 
         * @return builder
         * 
         */
        public Builder duration(@Nullable Output<String> duration) {
            $.duration = duration;
            return this;
        }

        /**
         * @param duration An ISO8601 formatted string specifying the duration for a `delay` or `continuous` action.
         * 
         * @return builder
         * 
         */
        public Builder duration(String duration) {
            return duration(Output.of(duration));
        }

        /**
         * @param parameters A key-value map of additional parameters to configure the action. The values that are accepted by this depend on the `urn` i.e. the capability/fault that is applied. Possible parameter values can be found in this [documentation](https://learn.microsoft.com/azure/chaos-studio/chaos-studio-fault-library)
         * 
         * @return builder
         * 
         */
        public Builder parameters(@Nullable Output<Map<String,String>> parameters) {
            $.parameters = parameters;
            return this;
        }

        /**
         * @param parameters A key-value map of additional parameters to configure the action. The values that are accepted by this depend on the `urn` i.e. the capability/fault that is applied. Possible parameter values can be found in this [documentation](https://learn.microsoft.com/azure/chaos-studio/chaos-studio-fault-library)
         * 
         * @return builder
         * 
         */
        public Builder parameters(Map<String,String> parameters) {
            return parameters(Output.of(parameters));
        }

        /**
         * @param selectorName The name of the Selector to which this action should apply to. This must be specified if the `action_type` is `continuous` or `discrete`.
         * 
         * @return builder
         * 
         */
        public Builder selectorName(@Nullable Output<String> selectorName) {
            $.selectorName = selectorName;
            return this;
        }

        /**
         * @param selectorName The name of the Selector to which this action should apply to. This must be specified if the `action_type` is `continuous` or `discrete`.
         * 
         * @return builder
         * 
         */
        public Builder selectorName(String selectorName) {
            return selectorName(Output.of(selectorName));
        }

        /**
         * @param urn The Unique Resource Name of the action, this value is provided by the `azure.chaosstudio.Capability` resource e.g. `azurerm_chaos_studio_capability.example.urn`. This must be specified if the `action_type` is `continuous` or `discrete`.
         * 
         * @return builder
         * 
         */
        public Builder urn(@Nullable Output<String> urn) {
            $.urn = urn;
            return this;
        }

        /**
         * @param urn The Unique Resource Name of the action, this value is provided by the `azure.chaosstudio.Capability` resource e.g. `azurerm_chaos_studio_capability.example.urn`. This must be specified if the `action_type` is `continuous` or `discrete`.
         * 
         * @return builder
         * 
         */
        public Builder urn(String urn) {
            return urn(Output.of(urn));
        }

        public ExperimentStepBranchActionArgs build() {
            if ($.actionType == null) {
                throw new MissingRequiredPropertyException("ExperimentStepBranchActionArgs", "actionType");
            }
            return $;
        }
    }

}
