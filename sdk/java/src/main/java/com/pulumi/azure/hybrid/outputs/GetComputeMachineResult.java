// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.hybrid.outputs;

import com.pulumi.azure.hybrid.outputs.GetComputeMachineAgentConfiguration;
import com.pulumi.azure.hybrid.outputs.GetComputeMachineCloudMetadata;
import com.pulumi.azure.hybrid.outputs.GetComputeMachineErrorDetail;
import com.pulumi.azure.hybrid.outputs.GetComputeMachineIdentity;
import com.pulumi.azure.hybrid.outputs.GetComputeMachineLocationData;
import com.pulumi.azure.hybrid.outputs.GetComputeMachineOsProfile;
import com.pulumi.azure.hybrid.outputs.GetComputeMachineServiceStatus;
import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetComputeMachineResult {
    /**
     * @return Specifies the AD fully qualified display name.
     * 
     */
    private String adFqdn;
    /**
     * @return A `agent_configuration` block as defined below.
     * 
     */
    private List<GetComputeMachineAgentConfiguration> agentConfigurations;
    /**
     * @return The hybrid machine agent full version.
     * 
     */
    private String agentVersion;
    /**
     * @return Public Key that the client provides to be used during initial resource onboarding.
     * 
     */
    private String clientPublicKey;
    /**
     * @return A `cloud_metadata` block as defined below.
     * 
     */
    private List<GetComputeMachineCloudMetadata> cloudMetadatas;
    /**
     * @return A `detected_properties` block as defined below.
     * 
     */
    private Map<String,String> detectedProperties;
    /**
     * @return Specifies the hybrid machine display name.
     * 
     */
    private String displayName;
    /**
     * @return Specifies the DNS fully qualified display name.
     * 
     */
    private String dnsFqdn;
    /**
     * @return Specifies the Windows domain name.
     * 
     */
    private String domainName;
    /**
     * @return A `error_details` block as defined below.
     * 
     */
    private List<GetComputeMachineErrorDetail> errorDetails;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return A `identity` block as defined below.
     * 
     */
    private List<GetComputeMachineIdentity> identities;
    /**
     * @return The time of the last status change.
     * 
     */
    private String lastStatusChange;
    /**
     * @return The Azure Region where the hybrid compute machine exists.
     * 
     */
    private String location;
    /**
     * @return A `location_data` block as defined below.
     * 
     */
    private List<GetComputeMachineLocationData> locationDatas;
    /**
     * @return Specifies the hybrid machine fully qualified display name.
     * 
     */
    private String machineFqdn;
    /**
     * @return Specifies whether any MS SQL instance is discovered on the machine.
     * 
     */
    private Boolean mssqlDiscovered;
    /**
     * @return A canonical name for the geographic or physical location.
     * 
     */
    private String name;
    /**
     * @return The Operating System running on the hybrid machine.
     * 
     */
    private String osName;
    /**
     * @return A `os_profile` block as defined below.
     * 
     */
    private List<GetComputeMachineOsProfile> osProfiles;
    /**
     * @return Specifies the Operating System product SKU.
     * 
     */
    private String osSku;
    /**
     * @return The type of Operating System. Possible values are `windows` and `linux`.
     * 
     */
    private String osType;
    /**
     * @return The version of Operating System running on the hybrid machine.
     * 
     */
    private String osVersion;
    /**
     * @return The resource id of the parent cluster (Azure HCI) this machine is assigned to, if any.
     * 
     */
    private String parentClusterResourceId;
    /**
     * @return The resource id of the parent cluster (Azure HCI) this machine is assigned to, if any.
     * 
     */
    private String privateLinkScopeResourceId;
    private String resourceGroupName;
    /**
     * @return A `service_status` block as defined below.
     * 
     */
    private List<GetComputeMachineServiceStatus> serviceStatuses;
    /**
     * @return The current status of the service.
     * 
     */
    private String status;
    /**
     * @return A mapping of tags assigned to the Hybrid Compute.
     * 
     */
    private Map<String,String> tags;
    /**
     * @return Specifies the hybrid machine unique ID.
     * 
     */
    private String vmId;
    /**
     * @return Specifies the Arc Machine&#39;s unique SMBIOS ID.
     * 
     */
    private String vmUuid;

    private GetComputeMachineResult() {}
    /**
     * @return Specifies the AD fully qualified display name.
     * 
     */
    public String adFqdn() {
        return this.adFqdn;
    }
    /**
     * @return A `agent_configuration` block as defined below.
     * 
     */
    public List<GetComputeMachineAgentConfiguration> agentConfigurations() {
        return this.agentConfigurations;
    }
    /**
     * @return The hybrid machine agent full version.
     * 
     */
    public String agentVersion() {
        return this.agentVersion;
    }
    /**
     * @return Public Key that the client provides to be used during initial resource onboarding.
     * 
     */
    public String clientPublicKey() {
        return this.clientPublicKey;
    }
    /**
     * @return A `cloud_metadata` block as defined below.
     * 
     */
    public List<GetComputeMachineCloudMetadata> cloudMetadatas() {
        return this.cloudMetadatas;
    }
    /**
     * @return A `detected_properties` block as defined below.
     * 
     */
    public Map<String,String> detectedProperties() {
        return this.detectedProperties;
    }
    /**
     * @return Specifies the hybrid machine display name.
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return Specifies the DNS fully qualified display name.
     * 
     */
    public String dnsFqdn() {
        return this.dnsFqdn;
    }
    /**
     * @return Specifies the Windows domain name.
     * 
     */
    public String domainName() {
        return this.domainName;
    }
    /**
     * @return A `error_details` block as defined below.
     * 
     */
    public List<GetComputeMachineErrorDetail> errorDetails() {
        return this.errorDetails;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return A `identity` block as defined below.
     * 
     */
    public List<GetComputeMachineIdentity> identities() {
        return this.identities;
    }
    /**
     * @return The time of the last status change.
     * 
     */
    public String lastStatusChange() {
        return this.lastStatusChange;
    }
    /**
     * @return The Azure Region where the hybrid compute machine exists.
     * 
     */
    public String location() {
        return this.location;
    }
    /**
     * @return A `location_data` block as defined below.
     * 
     */
    public List<GetComputeMachineLocationData> locationDatas() {
        return this.locationDatas;
    }
    /**
     * @return Specifies the hybrid machine fully qualified display name.
     * 
     */
    public String machineFqdn() {
        return this.machineFqdn;
    }
    /**
     * @return Specifies whether any MS SQL instance is discovered on the machine.
     * 
     */
    public Boolean mssqlDiscovered() {
        return this.mssqlDiscovered;
    }
    /**
     * @return A canonical name for the geographic or physical location.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The Operating System running on the hybrid machine.
     * 
     */
    public String osName() {
        return this.osName;
    }
    /**
     * @return A `os_profile` block as defined below.
     * 
     */
    public List<GetComputeMachineOsProfile> osProfiles() {
        return this.osProfiles;
    }
    /**
     * @return Specifies the Operating System product SKU.
     * 
     */
    public String osSku() {
        return this.osSku;
    }
    /**
     * @return The type of Operating System. Possible values are `windows` and `linux`.
     * 
     */
    public String osType() {
        return this.osType;
    }
    /**
     * @return The version of Operating System running on the hybrid machine.
     * 
     */
    public String osVersion() {
        return this.osVersion;
    }
    /**
     * @return The resource id of the parent cluster (Azure HCI) this machine is assigned to, if any.
     * 
     */
    public String parentClusterResourceId() {
        return this.parentClusterResourceId;
    }
    /**
     * @return The resource id of the parent cluster (Azure HCI) this machine is assigned to, if any.
     * 
     */
    public String privateLinkScopeResourceId() {
        return this.privateLinkScopeResourceId;
    }
    public String resourceGroupName() {
        return this.resourceGroupName;
    }
    /**
     * @return A `service_status` block as defined below.
     * 
     */
    public List<GetComputeMachineServiceStatus> serviceStatuses() {
        return this.serviceStatuses;
    }
    /**
     * @return The current status of the service.
     * 
     */
    public String status() {
        return this.status;
    }
    /**
     * @return A mapping of tags assigned to the Hybrid Compute.
     * 
     */
    public Map<String,String> tags() {
        return this.tags;
    }
    /**
     * @return Specifies the hybrid machine unique ID.
     * 
     */
    public String vmId() {
        return this.vmId;
    }
    /**
     * @return Specifies the Arc Machine&#39;s unique SMBIOS ID.
     * 
     */
    public String vmUuid() {
        return this.vmUuid;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetComputeMachineResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String adFqdn;
        private List<GetComputeMachineAgentConfiguration> agentConfigurations;
        private String agentVersion;
        private String clientPublicKey;
        private List<GetComputeMachineCloudMetadata> cloudMetadatas;
        private Map<String,String> detectedProperties;
        private String displayName;
        private String dnsFqdn;
        private String domainName;
        private List<GetComputeMachineErrorDetail> errorDetails;
        private String id;
        private List<GetComputeMachineIdentity> identities;
        private String lastStatusChange;
        private String location;
        private List<GetComputeMachineLocationData> locationDatas;
        private String machineFqdn;
        private Boolean mssqlDiscovered;
        private String name;
        private String osName;
        private List<GetComputeMachineOsProfile> osProfiles;
        private String osSku;
        private String osType;
        private String osVersion;
        private String parentClusterResourceId;
        private String privateLinkScopeResourceId;
        private String resourceGroupName;
        private List<GetComputeMachineServiceStatus> serviceStatuses;
        private String status;
        private Map<String,String> tags;
        private String vmId;
        private String vmUuid;
        public Builder() {}
        public Builder(GetComputeMachineResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.adFqdn = defaults.adFqdn;
    	      this.agentConfigurations = defaults.agentConfigurations;
    	      this.agentVersion = defaults.agentVersion;
    	      this.clientPublicKey = defaults.clientPublicKey;
    	      this.cloudMetadatas = defaults.cloudMetadatas;
    	      this.detectedProperties = defaults.detectedProperties;
    	      this.displayName = defaults.displayName;
    	      this.dnsFqdn = defaults.dnsFqdn;
    	      this.domainName = defaults.domainName;
    	      this.errorDetails = defaults.errorDetails;
    	      this.id = defaults.id;
    	      this.identities = defaults.identities;
    	      this.lastStatusChange = defaults.lastStatusChange;
    	      this.location = defaults.location;
    	      this.locationDatas = defaults.locationDatas;
    	      this.machineFqdn = defaults.machineFqdn;
    	      this.mssqlDiscovered = defaults.mssqlDiscovered;
    	      this.name = defaults.name;
    	      this.osName = defaults.osName;
    	      this.osProfiles = defaults.osProfiles;
    	      this.osSku = defaults.osSku;
    	      this.osType = defaults.osType;
    	      this.osVersion = defaults.osVersion;
    	      this.parentClusterResourceId = defaults.parentClusterResourceId;
    	      this.privateLinkScopeResourceId = defaults.privateLinkScopeResourceId;
    	      this.resourceGroupName = defaults.resourceGroupName;
    	      this.serviceStatuses = defaults.serviceStatuses;
    	      this.status = defaults.status;
    	      this.tags = defaults.tags;
    	      this.vmId = defaults.vmId;
    	      this.vmUuid = defaults.vmUuid;
        }

        @CustomType.Setter
        public Builder adFqdn(String adFqdn) {
            this.adFqdn = Objects.requireNonNull(adFqdn);
            return this;
        }
        @CustomType.Setter
        public Builder agentConfigurations(List<GetComputeMachineAgentConfiguration> agentConfigurations) {
            this.agentConfigurations = Objects.requireNonNull(agentConfigurations);
            return this;
        }
        public Builder agentConfigurations(GetComputeMachineAgentConfiguration... agentConfigurations) {
            return agentConfigurations(List.of(agentConfigurations));
        }
        @CustomType.Setter
        public Builder agentVersion(String agentVersion) {
            this.agentVersion = Objects.requireNonNull(agentVersion);
            return this;
        }
        @CustomType.Setter
        public Builder clientPublicKey(String clientPublicKey) {
            this.clientPublicKey = Objects.requireNonNull(clientPublicKey);
            return this;
        }
        @CustomType.Setter
        public Builder cloudMetadatas(List<GetComputeMachineCloudMetadata> cloudMetadatas) {
            this.cloudMetadatas = Objects.requireNonNull(cloudMetadatas);
            return this;
        }
        public Builder cloudMetadatas(GetComputeMachineCloudMetadata... cloudMetadatas) {
            return cloudMetadatas(List.of(cloudMetadatas));
        }
        @CustomType.Setter
        public Builder detectedProperties(Map<String,String> detectedProperties) {
            this.detectedProperties = Objects.requireNonNull(detectedProperties);
            return this;
        }
        @CustomType.Setter
        public Builder displayName(String displayName) {
            this.displayName = Objects.requireNonNull(displayName);
            return this;
        }
        @CustomType.Setter
        public Builder dnsFqdn(String dnsFqdn) {
            this.dnsFqdn = Objects.requireNonNull(dnsFqdn);
            return this;
        }
        @CustomType.Setter
        public Builder domainName(String domainName) {
            this.domainName = Objects.requireNonNull(domainName);
            return this;
        }
        @CustomType.Setter
        public Builder errorDetails(List<GetComputeMachineErrorDetail> errorDetails) {
            this.errorDetails = Objects.requireNonNull(errorDetails);
            return this;
        }
        public Builder errorDetails(GetComputeMachineErrorDetail... errorDetails) {
            return errorDetails(List.of(errorDetails));
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder identities(List<GetComputeMachineIdentity> identities) {
            this.identities = Objects.requireNonNull(identities);
            return this;
        }
        public Builder identities(GetComputeMachineIdentity... identities) {
            return identities(List.of(identities));
        }
        @CustomType.Setter
        public Builder lastStatusChange(String lastStatusChange) {
            this.lastStatusChange = Objects.requireNonNull(lastStatusChange);
            return this;
        }
        @CustomType.Setter
        public Builder location(String location) {
            this.location = Objects.requireNonNull(location);
            return this;
        }
        @CustomType.Setter
        public Builder locationDatas(List<GetComputeMachineLocationData> locationDatas) {
            this.locationDatas = Objects.requireNonNull(locationDatas);
            return this;
        }
        public Builder locationDatas(GetComputeMachineLocationData... locationDatas) {
            return locationDatas(List.of(locationDatas));
        }
        @CustomType.Setter
        public Builder machineFqdn(String machineFqdn) {
            this.machineFqdn = Objects.requireNonNull(machineFqdn);
            return this;
        }
        @CustomType.Setter
        public Builder mssqlDiscovered(Boolean mssqlDiscovered) {
            this.mssqlDiscovered = Objects.requireNonNull(mssqlDiscovered);
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder osName(String osName) {
            this.osName = Objects.requireNonNull(osName);
            return this;
        }
        @CustomType.Setter
        public Builder osProfiles(List<GetComputeMachineOsProfile> osProfiles) {
            this.osProfiles = Objects.requireNonNull(osProfiles);
            return this;
        }
        public Builder osProfiles(GetComputeMachineOsProfile... osProfiles) {
            return osProfiles(List.of(osProfiles));
        }
        @CustomType.Setter
        public Builder osSku(String osSku) {
            this.osSku = Objects.requireNonNull(osSku);
            return this;
        }
        @CustomType.Setter
        public Builder osType(String osType) {
            this.osType = Objects.requireNonNull(osType);
            return this;
        }
        @CustomType.Setter
        public Builder osVersion(String osVersion) {
            this.osVersion = Objects.requireNonNull(osVersion);
            return this;
        }
        @CustomType.Setter
        public Builder parentClusterResourceId(String parentClusterResourceId) {
            this.parentClusterResourceId = Objects.requireNonNull(parentClusterResourceId);
            return this;
        }
        @CustomType.Setter
        public Builder privateLinkScopeResourceId(String privateLinkScopeResourceId) {
            this.privateLinkScopeResourceId = Objects.requireNonNull(privateLinkScopeResourceId);
            return this;
        }
        @CustomType.Setter
        public Builder resourceGroupName(String resourceGroupName) {
            this.resourceGroupName = Objects.requireNonNull(resourceGroupName);
            return this;
        }
        @CustomType.Setter
        public Builder serviceStatuses(List<GetComputeMachineServiceStatus> serviceStatuses) {
            this.serviceStatuses = Objects.requireNonNull(serviceStatuses);
            return this;
        }
        public Builder serviceStatuses(GetComputeMachineServiceStatus... serviceStatuses) {
            return serviceStatuses(List.of(serviceStatuses));
        }
        @CustomType.Setter
        public Builder status(String status) {
            this.status = Objects.requireNonNull(status);
            return this;
        }
        @CustomType.Setter
        public Builder tags(Map<String,String> tags) {
            this.tags = Objects.requireNonNull(tags);
            return this;
        }
        @CustomType.Setter
        public Builder vmId(String vmId) {
            this.vmId = Objects.requireNonNull(vmId);
            return this;
        }
        @CustomType.Setter
        public Builder vmUuid(String vmUuid) {
            this.vmUuid = Objects.requireNonNull(vmUuid);
            return this;
        }
        public GetComputeMachineResult build() {
            final var o = new GetComputeMachineResult();
            o.adFqdn = adFqdn;
            o.agentConfigurations = agentConfigurations;
            o.agentVersion = agentVersion;
            o.clientPublicKey = clientPublicKey;
            o.cloudMetadatas = cloudMetadatas;
            o.detectedProperties = detectedProperties;
            o.displayName = displayName;
            o.dnsFqdn = dnsFqdn;
            o.domainName = domainName;
            o.errorDetails = errorDetails;
            o.id = id;
            o.identities = identities;
            o.lastStatusChange = lastStatusChange;
            o.location = location;
            o.locationDatas = locationDatas;
            o.machineFqdn = machineFqdn;
            o.mssqlDiscovered = mssqlDiscovered;
            o.name = name;
            o.osName = osName;
            o.osProfiles = osProfiles;
            o.osSku = osSku;
            o.osType = osType;
            o.osVersion = osVersion;
            o.parentClusterResourceId = parentClusterResourceId;
            o.privateLinkScopeResourceId = privateLinkScopeResourceId;
            o.resourceGroupName = resourceGroupName;
            o.serviceStatuses = serviceStatuses;
            o.status = status;
            o.tags = tags;
            o.vmId = vmId;
            o.vmUuid = vmUuid;
            return o;
        }
    }
}
