// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.compute.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class LinuxVirtualMachineAdminSshKey {
    /**
     * @return The Public Key which should be used for authentication, which needs to be at least 2048-bit and in `ssh-rsa` format. Changing this forces a new resource to be created.
     * 
     */
    private String publicKey;
    /**
     * @return The Username for which this Public SSH Key should be configured. Changing this forces a new resource to be created.
     * 
     * &gt; **NOTE:** The Azure VM Agent only allows creating SSH Keys at the path `/home/{username}/.ssh/authorized_keys` - as such this public key will be written to the authorized keys file.
     * 
     */
    private String username;

    private LinuxVirtualMachineAdminSshKey() {}
    /**
     * @return The Public Key which should be used for authentication, which needs to be at least 2048-bit and in `ssh-rsa` format. Changing this forces a new resource to be created.
     * 
     */
    public String publicKey() {
        return this.publicKey;
    }
    /**
     * @return The Username for which this Public SSH Key should be configured. Changing this forces a new resource to be created.
     * 
     * &gt; **NOTE:** The Azure VM Agent only allows creating SSH Keys at the path `/home/{username}/.ssh/authorized_keys` - as such this public key will be written to the authorized keys file.
     * 
     */
    public String username() {
        return this.username;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(LinuxVirtualMachineAdminSshKey defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String publicKey;
        private String username;
        public Builder() {}
        public Builder(LinuxVirtualMachineAdminSshKey defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.publicKey = defaults.publicKey;
    	      this.username = defaults.username;
        }

        @CustomType.Setter
        public Builder publicKey(String publicKey) {
            if (publicKey == null) {
              throw new MissingRequiredPropertyException("LinuxVirtualMachineAdminSshKey", "publicKey");
            }
            this.publicKey = publicKey;
            return this;
        }
        @CustomType.Setter
        public Builder username(String username) {
            if (username == null) {
              throw new MissingRequiredPropertyException("LinuxVirtualMachineAdminSshKey", "username");
            }
            this.username = username;
            return this;
        }
        public LinuxVirtualMachineAdminSshKey build() {
            final var _resultValue = new LinuxVirtualMachineAdminSshKey();
            _resultValue.publicKey = publicKey;
            _resultValue.username = username;
            return _resultValue;
        }
    }
}
