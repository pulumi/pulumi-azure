// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.appservice.inputs;

import com.pulumi.azure.appservice.inputs.AppServiceLogsApplicationLogsAzureBlobStorageArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AppServiceLogsApplicationLogsArgs extends com.pulumi.resources.ResourceArgs {

    public static final AppServiceLogsApplicationLogsArgs Empty = new AppServiceLogsApplicationLogsArgs();

    /**
     * An `azure_blob_storage` block as defined below.
     * 
     */
    @Import(name="azureBlobStorage")
    private @Nullable Output<AppServiceLogsApplicationLogsAzureBlobStorageArgs> azureBlobStorage;

    /**
     * @return An `azure_blob_storage` block as defined below.
     * 
     */
    public Optional<Output<AppServiceLogsApplicationLogsAzureBlobStorageArgs>> azureBlobStorage() {
        return Optional.ofNullable(this.azureBlobStorage);
    }

    /**
     * Log level for filesystem based logging. Supported values are `Error`, `Information`, `Verbose`, `Warning` and `Off`. Defaults to `Off`.
     * 
     */
    @Import(name="fileSystemLevel")
    private @Nullable Output<String> fileSystemLevel;

    /**
     * @return Log level for filesystem based logging. Supported values are `Error`, `Information`, `Verbose`, `Warning` and `Off`. Defaults to `Off`.
     * 
     */
    public Optional<Output<String>> fileSystemLevel() {
        return Optional.ofNullable(this.fileSystemLevel);
    }

    private AppServiceLogsApplicationLogsArgs() {}

    private AppServiceLogsApplicationLogsArgs(AppServiceLogsApplicationLogsArgs $) {
        this.azureBlobStorage = $.azureBlobStorage;
        this.fileSystemLevel = $.fileSystemLevel;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AppServiceLogsApplicationLogsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AppServiceLogsApplicationLogsArgs $;

        public Builder() {
            $ = new AppServiceLogsApplicationLogsArgs();
        }

        public Builder(AppServiceLogsApplicationLogsArgs defaults) {
            $ = new AppServiceLogsApplicationLogsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param azureBlobStorage An `azure_blob_storage` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder azureBlobStorage(@Nullable Output<AppServiceLogsApplicationLogsAzureBlobStorageArgs> azureBlobStorage) {
            $.azureBlobStorage = azureBlobStorage;
            return this;
        }

        /**
         * @param azureBlobStorage An `azure_blob_storage` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder azureBlobStorage(AppServiceLogsApplicationLogsAzureBlobStorageArgs azureBlobStorage) {
            return azureBlobStorage(Output.of(azureBlobStorage));
        }

        /**
         * @param fileSystemLevel Log level for filesystem based logging. Supported values are `Error`, `Information`, `Verbose`, `Warning` and `Off`. Defaults to `Off`.
         * 
         * @return builder
         * 
         */
        public Builder fileSystemLevel(@Nullable Output<String> fileSystemLevel) {
            $.fileSystemLevel = fileSystemLevel;
            return this;
        }

        /**
         * @param fileSystemLevel Log level for filesystem based logging. Supported values are `Error`, `Information`, `Verbose`, `Warning` and `Off`. Defaults to `Off`.
         * 
         * @return builder
         * 
         */
        public Builder fileSystemLevel(String fileSystemLevel) {
            return fileSystemLevel(Output.of(fileSystemLevel));
        }

        public AppServiceLogsApplicationLogsArgs build() {
            return $;
        }
    }

}
