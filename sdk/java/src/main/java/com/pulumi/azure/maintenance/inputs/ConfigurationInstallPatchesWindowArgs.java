// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.maintenance.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ConfigurationInstallPatchesWindowArgs extends com.pulumi.resources.ResourceArgs {

    public static final ConfigurationInstallPatchesWindowArgs Empty = new ConfigurationInstallPatchesWindowArgs();

    /**
     * List of Classification category of patches to be patched. Possible values are `Critical`, `Security`, `UpdateRollup`, `FeaturePack`, `ServicePack`, `Definition`, `Tools` and `Updates`.
     * 
     */
    @Import(name="classificationsToIncludes")
    private @Nullable Output<List<String>> classificationsToIncludes;

    /**
     * @return List of Classification category of patches to be patched. Possible values are `Critical`, `Security`, `UpdateRollup`, `FeaturePack`, `ServicePack`, `Definition`, `Tools` and `Updates`.
     * 
     */
    public Optional<Output<List<String>>> classificationsToIncludes() {
        return Optional.ofNullable(this.classificationsToIncludes);
    }

    /**
     * List of KB numbers to be excluded from patching.
     * 
     */
    @Import(name="kbNumbersToExcludes")
    private @Nullable Output<List<String>> kbNumbersToExcludes;

    /**
     * @return List of KB numbers to be excluded from patching.
     * 
     */
    public Optional<Output<List<String>>> kbNumbersToExcludes() {
        return Optional.ofNullable(this.kbNumbersToExcludes);
    }

    /**
     * List of KB numbers to be included for patching.
     * 
     */
    @Import(name="kbNumbersToIncludes")
    private @Nullable Output<List<String>> kbNumbersToIncludes;

    /**
     * @return List of KB numbers to be included for patching.
     * 
     */
    public Optional<Output<List<String>>> kbNumbersToIncludes() {
        return Optional.ofNullable(this.kbNumbersToIncludes);
    }

    private ConfigurationInstallPatchesWindowArgs() {}

    private ConfigurationInstallPatchesWindowArgs(ConfigurationInstallPatchesWindowArgs $) {
        this.classificationsToIncludes = $.classificationsToIncludes;
        this.kbNumbersToExcludes = $.kbNumbersToExcludes;
        this.kbNumbersToIncludes = $.kbNumbersToIncludes;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ConfigurationInstallPatchesWindowArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ConfigurationInstallPatchesWindowArgs $;

        public Builder() {
            $ = new ConfigurationInstallPatchesWindowArgs();
        }

        public Builder(ConfigurationInstallPatchesWindowArgs defaults) {
            $ = new ConfigurationInstallPatchesWindowArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param classificationsToIncludes List of Classification category of patches to be patched. Possible values are `Critical`, `Security`, `UpdateRollup`, `FeaturePack`, `ServicePack`, `Definition`, `Tools` and `Updates`.
         * 
         * @return builder
         * 
         */
        public Builder classificationsToIncludes(@Nullable Output<List<String>> classificationsToIncludes) {
            $.classificationsToIncludes = classificationsToIncludes;
            return this;
        }

        /**
         * @param classificationsToIncludes List of Classification category of patches to be patched. Possible values are `Critical`, `Security`, `UpdateRollup`, `FeaturePack`, `ServicePack`, `Definition`, `Tools` and `Updates`.
         * 
         * @return builder
         * 
         */
        public Builder classificationsToIncludes(List<String> classificationsToIncludes) {
            return classificationsToIncludes(Output.of(classificationsToIncludes));
        }

        /**
         * @param classificationsToIncludes List of Classification category of patches to be patched. Possible values are `Critical`, `Security`, `UpdateRollup`, `FeaturePack`, `ServicePack`, `Definition`, `Tools` and `Updates`.
         * 
         * @return builder
         * 
         */
        public Builder classificationsToIncludes(String... classificationsToIncludes) {
            return classificationsToIncludes(List.of(classificationsToIncludes));
        }

        /**
         * @param kbNumbersToExcludes List of KB numbers to be excluded from patching.
         * 
         * @return builder
         * 
         */
        public Builder kbNumbersToExcludes(@Nullable Output<List<String>> kbNumbersToExcludes) {
            $.kbNumbersToExcludes = kbNumbersToExcludes;
            return this;
        }

        /**
         * @param kbNumbersToExcludes List of KB numbers to be excluded from patching.
         * 
         * @return builder
         * 
         */
        public Builder kbNumbersToExcludes(List<String> kbNumbersToExcludes) {
            return kbNumbersToExcludes(Output.of(kbNumbersToExcludes));
        }

        /**
         * @param kbNumbersToExcludes List of KB numbers to be excluded from patching.
         * 
         * @return builder
         * 
         */
        public Builder kbNumbersToExcludes(String... kbNumbersToExcludes) {
            return kbNumbersToExcludes(List.of(kbNumbersToExcludes));
        }

        /**
         * @param kbNumbersToIncludes List of KB numbers to be included for patching.
         * 
         * @return builder
         * 
         */
        public Builder kbNumbersToIncludes(@Nullable Output<List<String>> kbNumbersToIncludes) {
            $.kbNumbersToIncludes = kbNumbersToIncludes;
            return this;
        }

        /**
         * @param kbNumbersToIncludes List of KB numbers to be included for patching.
         * 
         * @return builder
         * 
         */
        public Builder kbNumbersToIncludes(List<String> kbNumbersToIncludes) {
            return kbNumbersToIncludes(Output.of(kbNumbersToIncludes));
        }

        /**
         * @param kbNumbersToIncludes List of KB numbers to be included for patching.
         * 
         * @return builder
         * 
         */
        public Builder kbNumbersToIncludes(String... kbNumbersToIncludes) {
            return kbNumbersToIncludes(List.of(kbNumbersToIncludes));
        }

        public ConfigurationInstallPatchesWindowArgs build() {
            return $;
        }
    }

}
