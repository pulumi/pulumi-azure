// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.network;

import com.pulumi.azure.network.inputs.VpnServerConfigurationPolicyGroupPolicyArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class VpnServerConfigurationPolicyGroupArgs extends com.pulumi.resources.ResourceArgs {

    public static final VpnServerConfigurationPolicyGroupArgs Empty = new VpnServerConfigurationPolicyGroupArgs();

    /**
     * Is this a default VPN Server Configuration Policy Group? Defaults to `false`. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="isDefault")
    private @Nullable Output<Boolean> isDefault;

    /**
     * @return Is this a default VPN Server Configuration Policy Group? Defaults to `false`. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<Boolean>> isDefault() {
        return Optional.ofNullable(this.isDefault);
    }

    /**
     * The Name which should be used for this VPN Server Configuration Policy Group. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The Name which should be used for this VPN Server Configuration Policy Group. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * One or more `policy` blocks as documented below.
     * 
     */
    @Import(name="policies", required=true)
    private Output<List<VpnServerConfigurationPolicyGroupPolicyArgs>> policies;

    /**
     * @return One or more `policy` blocks as documented below.
     * 
     */
    public Output<List<VpnServerConfigurationPolicyGroupPolicyArgs>> policies() {
        return this.policies;
    }

    /**
     * The priority of this VPN Server Configuration Policy Group. Defaults to `0`.
     * 
     */
    @Import(name="priority")
    private @Nullable Output<Integer> priority;

    /**
     * @return The priority of this VPN Server Configuration Policy Group. Defaults to `0`.
     * 
     */
    public Optional<Output<Integer>> priority() {
        return Optional.ofNullable(this.priority);
    }

    /**
     * The ID of the VPN Server Configuration that the VPN Server Configuration Policy Group belongs to. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="vpnServerConfigurationId", required=true)
    private Output<String> vpnServerConfigurationId;

    /**
     * @return The ID of the VPN Server Configuration that the VPN Server Configuration Policy Group belongs to. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> vpnServerConfigurationId() {
        return this.vpnServerConfigurationId;
    }

    private VpnServerConfigurationPolicyGroupArgs() {}

    private VpnServerConfigurationPolicyGroupArgs(VpnServerConfigurationPolicyGroupArgs $) {
        this.isDefault = $.isDefault;
        this.name = $.name;
        this.policies = $.policies;
        this.priority = $.priority;
        this.vpnServerConfigurationId = $.vpnServerConfigurationId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VpnServerConfigurationPolicyGroupArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VpnServerConfigurationPolicyGroupArgs $;

        public Builder() {
            $ = new VpnServerConfigurationPolicyGroupArgs();
        }

        public Builder(VpnServerConfigurationPolicyGroupArgs defaults) {
            $ = new VpnServerConfigurationPolicyGroupArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param isDefault Is this a default VPN Server Configuration Policy Group? Defaults to `false`. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder isDefault(@Nullable Output<Boolean> isDefault) {
            $.isDefault = isDefault;
            return this;
        }

        /**
         * @param isDefault Is this a default VPN Server Configuration Policy Group? Defaults to `false`. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder isDefault(Boolean isDefault) {
            return isDefault(Output.of(isDefault));
        }

        /**
         * @param name The Name which should be used for this VPN Server Configuration Policy Group. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The Name which should be used for this VPN Server Configuration Policy Group. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param policies One or more `policy` blocks as documented below.
         * 
         * @return builder
         * 
         */
        public Builder policies(Output<List<VpnServerConfigurationPolicyGroupPolicyArgs>> policies) {
            $.policies = policies;
            return this;
        }

        /**
         * @param policies One or more `policy` blocks as documented below.
         * 
         * @return builder
         * 
         */
        public Builder policies(List<VpnServerConfigurationPolicyGroupPolicyArgs> policies) {
            return policies(Output.of(policies));
        }

        /**
         * @param policies One or more `policy` blocks as documented below.
         * 
         * @return builder
         * 
         */
        public Builder policies(VpnServerConfigurationPolicyGroupPolicyArgs... policies) {
            return policies(List.of(policies));
        }

        /**
         * @param priority The priority of this VPN Server Configuration Policy Group. Defaults to `0`.
         * 
         * @return builder
         * 
         */
        public Builder priority(@Nullable Output<Integer> priority) {
            $.priority = priority;
            return this;
        }

        /**
         * @param priority The priority of this VPN Server Configuration Policy Group. Defaults to `0`.
         * 
         * @return builder
         * 
         */
        public Builder priority(Integer priority) {
            return priority(Output.of(priority));
        }

        /**
         * @param vpnServerConfigurationId The ID of the VPN Server Configuration that the VPN Server Configuration Policy Group belongs to. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder vpnServerConfigurationId(Output<String> vpnServerConfigurationId) {
            $.vpnServerConfigurationId = vpnServerConfigurationId;
            return this;
        }

        /**
         * @param vpnServerConfigurationId The ID of the VPN Server Configuration that the VPN Server Configuration Policy Group belongs to. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder vpnServerConfigurationId(String vpnServerConfigurationId) {
            return vpnServerConfigurationId(Output.of(vpnServerConfigurationId));
        }

        public VpnServerConfigurationPolicyGroupArgs build() {
            if ($.policies == null) {
                throw new MissingRequiredPropertyException("VpnServerConfigurationPolicyGroupArgs", "policies");
            }
            if ($.vpnServerConfigurationId == null) {
                throw new MissingRequiredPropertyException("VpnServerConfigurationPolicyGroupArgs", "vpnServerConfigurationId");
            }
            return $;
        }
    }

}
