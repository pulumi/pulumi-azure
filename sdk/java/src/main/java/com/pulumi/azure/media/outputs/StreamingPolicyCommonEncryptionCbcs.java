// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.media.outputs;

import com.pulumi.azure.media.outputs.StreamingPolicyCommonEncryptionCbcsClearKeyEncryption;
import com.pulumi.azure.media.outputs.StreamingPolicyCommonEncryptionCbcsDefaultContentKey;
import com.pulumi.azure.media.outputs.StreamingPolicyCommonEncryptionCbcsDrmFairplay;
import com.pulumi.azure.media.outputs.StreamingPolicyCommonEncryptionCbcsEnabledProtocols;
import com.pulumi.core.annotations.CustomType;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class StreamingPolicyCommonEncryptionCbcs {
    /**
     * @return A `clear_key_encryption` block as defined below. Changing this forces a new Streaming Policy to be created.
     * 
     */
    private @Nullable StreamingPolicyCommonEncryptionCbcsClearKeyEncryption clearKeyEncryption;
    /**
     * @return A `default_content_key` block as defined below. Changing this forces a new Streaming Policy to be created.
     * 
     */
    private @Nullable StreamingPolicyCommonEncryptionCbcsDefaultContentKey defaultContentKey;
    /**
     * @return A `drm_fairplay` block as defined below. Changing this forces a new Streaming Policy to be created.
     * 
     */
    private @Nullable StreamingPolicyCommonEncryptionCbcsDrmFairplay drmFairplay;
    /**
     * @return A `enabled_protocols` block as defined below. Changing this forces a new Streaming Policy to be created.
     * 
     */
    private @Nullable StreamingPolicyCommonEncryptionCbcsEnabledProtocols enabledProtocols;

    private StreamingPolicyCommonEncryptionCbcs() {}
    /**
     * @return A `clear_key_encryption` block as defined below. Changing this forces a new Streaming Policy to be created.
     * 
     */
    public Optional<StreamingPolicyCommonEncryptionCbcsClearKeyEncryption> clearKeyEncryption() {
        return Optional.ofNullable(this.clearKeyEncryption);
    }
    /**
     * @return A `default_content_key` block as defined below. Changing this forces a new Streaming Policy to be created.
     * 
     */
    public Optional<StreamingPolicyCommonEncryptionCbcsDefaultContentKey> defaultContentKey() {
        return Optional.ofNullable(this.defaultContentKey);
    }
    /**
     * @return A `drm_fairplay` block as defined below. Changing this forces a new Streaming Policy to be created.
     * 
     */
    public Optional<StreamingPolicyCommonEncryptionCbcsDrmFairplay> drmFairplay() {
        return Optional.ofNullable(this.drmFairplay);
    }
    /**
     * @return A `enabled_protocols` block as defined below. Changing this forces a new Streaming Policy to be created.
     * 
     */
    public Optional<StreamingPolicyCommonEncryptionCbcsEnabledProtocols> enabledProtocols() {
        return Optional.ofNullable(this.enabledProtocols);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(StreamingPolicyCommonEncryptionCbcs defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable StreamingPolicyCommonEncryptionCbcsClearKeyEncryption clearKeyEncryption;
        private @Nullable StreamingPolicyCommonEncryptionCbcsDefaultContentKey defaultContentKey;
        private @Nullable StreamingPolicyCommonEncryptionCbcsDrmFairplay drmFairplay;
        private @Nullable StreamingPolicyCommonEncryptionCbcsEnabledProtocols enabledProtocols;
        public Builder() {}
        public Builder(StreamingPolicyCommonEncryptionCbcs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.clearKeyEncryption = defaults.clearKeyEncryption;
    	      this.defaultContentKey = defaults.defaultContentKey;
    	      this.drmFairplay = defaults.drmFairplay;
    	      this.enabledProtocols = defaults.enabledProtocols;
        }

        @CustomType.Setter
        public Builder clearKeyEncryption(@Nullable StreamingPolicyCommonEncryptionCbcsClearKeyEncryption clearKeyEncryption) {

            this.clearKeyEncryption = clearKeyEncryption;
            return this;
        }
        @CustomType.Setter
        public Builder defaultContentKey(@Nullable StreamingPolicyCommonEncryptionCbcsDefaultContentKey defaultContentKey) {

            this.defaultContentKey = defaultContentKey;
            return this;
        }
        @CustomType.Setter
        public Builder drmFairplay(@Nullable StreamingPolicyCommonEncryptionCbcsDrmFairplay drmFairplay) {

            this.drmFairplay = drmFairplay;
            return this;
        }
        @CustomType.Setter
        public Builder enabledProtocols(@Nullable StreamingPolicyCommonEncryptionCbcsEnabledProtocols enabledProtocols) {

            this.enabledProtocols = enabledProtocols;
            return this;
        }
        public StreamingPolicyCommonEncryptionCbcs build() {
            final var _resultValue = new StreamingPolicyCommonEncryptionCbcs();
            _resultValue.clearKeyEncryption = clearKeyEncryption;
            _resultValue.defaultContentKey = defaultContentKey;
            _resultValue.drmFairplay = drmFairplay;
            _resultValue.enabledProtocols = enabledProtocols;
            return _resultValue;
        }
    }
}
