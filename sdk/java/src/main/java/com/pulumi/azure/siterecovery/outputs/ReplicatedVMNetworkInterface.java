// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.siterecovery.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ReplicatedVMNetworkInterface {
    /**
     * @return Id of the public IP object to use when a test failover is done.
     * 
     */
    private @Nullable String failoverTestPublicIpAddressId;
    /**
     * @return Static IP to assign when a test failover is done.
     * 
     */
    private @Nullable String failoverTestStaticIp;
    /**
     * @return Name of the subnet to to use when a test failover is done.
     * 
     */
    private @Nullable String failoverTestSubnetName;
    /**
     * @deprecated
     * this property is not used and will be removed in version 4.0 of the provider
     * 
     */
    @Deprecated /* this property is not used and will be removed in version 4.0 of the provider */
    private @Nullable Boolean isPrimary;
    /**
     * @return Id of the public IP object to use when a failover is done.
     * 
     */
    private @Nullable String recoveryPublicIpAddressId;
    /**
     * @return (Required if the network_interface block is specified) Id source network interface.
     * 
     */
    private @Nullable String sourceNetworkInterfaceId;
    /**
     * @return Static IP to assign when a failover is done.
     * 
     */
    private @Nullable String targetStaticIp;
    /**
     * @return Name of the subnet to to use when a failover is done.
     * 
     */
    private @Nullable String targetSubnetName;

    private ReplicatedVMNetworkInterface() {}
    /**
     * @return Id of the public IP object to use when a test failover is done.
     * 
     */
    public Optional<String> failoverTestPublicIpAddressId() {
        return Optional.ofNullable(this.failoverTestPublicIpAddressId);
    }
    /**
     * @return Static IP to assign when a test failover is done.
     * 
     */
    public Optional<String> failoverTestStaticIp() {
        return Optional.ofNullable(this.failoverTestStaticIp);
    }
    /**
     * @return Name of the subnet to to use when a test failover is done.
     * 
     */
    public Optional<String> failoverTestSubnetName() {
        return Optional.ofNullable(this.failoverTestSubnetName);
    }
    /**
     * @deprecated
     * this property is not used and will be removed in version 4.0 of the provider
     * 
     */
    @Deprecated /* this property is not used and will be removed in version 4.0 of the provider */
    public Optional<Boolean> isPrimary() {
        return Optional.ofNullable(this.isPrimary);
    }
    /**
     * @return Id of the public IP object to use when a failover is done.
     * 
     */
    public Optional<String> recoveryPublicIpAddressId() {
        return Optional.ofNullable(this.recoveryPublicIpAddressId);
    }
    /**
     * @return (Required if the network_interface block is specified) Id source network interface.
     * 
     */
    public Optional<String> sourceNetworkInterfaceId() {
        return Optional.ofNullable(this.sourceNetworkInterfaceId);
    }
    /**
     * @return Static IP to assign when a failover is done.
     * 
     */
    public Optional<String> targetStaticIp() {
        return Optional.ofNullable(this.targetStaticIp);
    }
    /**
     * @return Name of the subnet to to use when a failover is done.
     * 
     */
    public Optional<String> targetSubnetName() {
        return Optional.ofNullable(this.targetSubnetName);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ReplicatedVMNetworkInterface defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String failoverTestPublicIpAddressId;
        private @Nullable String failoverTestStaticIp;
        private @Nullable String failoverTestSubnetName;
        private @Nullable Boolean isPrimary;
        private @Nullable String recoveryPublicIpAddressId;
        private @Nullable String sourceNetworkInterfaceId;
        private @Nullable String targetStaticIp;
        private @Nullable String targetSubnetName;
        public Builder() {}
        public Builder(ReplicatedVMNetworkInterface defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.failoverTestPublicIpAddressId = defaults.failoverTestPublicIpAddressId;
    	      this.failoverTestStaticIp = defaults.failoverTestStaticIp;
    	      this.failoverTestSubnetName = defaults.failoverTestSubnetName;
    	      this.isPrimary = defaults.isPrimary;
    	      this.recoveryPublicIpAddressId = defaults.recoveryPublicIpAddressId;
    	      this.sourceNetworkInterfaceId = defaults.sourceNetworkInterfaceId;
    	      this.targetStaticIp = defaults.targetStaticIp;
    	      this.targetSubnetName = defaults.targetSubnetName;
        }

        @CustomType.Setter
        public Builder failoverTestPublicIpAddressId(@Nullable String failoverTestPublicIpAddressId) {

            this.failoverTestPublicIpAddressId = failoverTestPublicIpAddressId;
            return this;
        }
        @CustomType.Setter
        public Builder failoverTestStaticIp(@Nullable String failoverTestStaticIp) {

            this.failoverTestStaticIp = failoverTestStaticIp;
            return this;
        }
        @CustomType.Setter
        public Builder failoverTestSubnetName(@Nullable String failoverTestSubnetName) {

            this.failoverTestSubnetName = failoverTestSubnetName;
            return this;
        }
        @CustomType.Setter
        public Builder isPrimary(@Nullable Boolean isPrimary) {

            this.isPrimary = isPrimary;
            return this;
        }
        @CustomType.Setter
        public Builder recoveryPublicIpAddressId(@Nullable String recoveryPublicIpAddressId) {

            this.recoveryPublicIpAddressId = recoveryPublicIpAddressId;
            return this;
        }
        @CustomType.Setter
        public Builder sourceNetworkInterfaceId(@Nullable String sourceNetworkInterfaceId) {

            this.sourceNetworkInterfaceId = sourceNetworkInterfaceId;
            return this;
        }
        @CustomType.Setter
        public Builder targetStaticIp(@Nullable String targetStaticIp) {

            this.targetStaticIp = targetStaticIp;
            return this;
        }
        @CustomType.Setter
        public Builder targetSubnetName(@Nullable String targetSubnetName) {

            this.targetSubnetName = targetSubnetName;
            return this;
        }
        public ReplicatedVMNetworkInterface build() {
            final var _resultValue = new ReplicatedVMNetworkInterface();
            _resultValue.failoverTestPublicIpAddressId = failoverTestPublicIpAddressId;
            _resultValue.failoverTestStaticIp = failoverTestStaticIp;
            _resultValue.failoverTestSubnetName = failoverTestSubnetName;
            _resultValue.isPrimary = isPrimary;
            _resultValue.recoveryPublicIpAddressId = recoveryPublicIpAddressId;
            _resultValue.sourceNetworkInterfaceId = sourceNetworkInterfaceId;
            _resultValue.targetStaticIp = targetStaticIp;
            _resultValue.targetSubnetName = targetSubnetName;
            return _resultValue;
        }
    }
}
