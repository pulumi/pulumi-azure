// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.compute.outputs;

import com.pulumi.azure.compute.outputs.GetSnapshotEncryptionSetting;
import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetSnapshotResult {
    private final String creationOption;
    /**
     * @return The size of the Snapshotted Disk in GB.
     * 
     */
    private final Integer diskSizeGb;
    private final List<GetSnapshotEncryptionSetting> encryptionSettings;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private final String id;
    private final String name;
    private final String osType;
    private final String resourceGroupName;
    /**
     * @return The reference to an existing snapshot.
     * 
     */
    private final String sourceResourceId;
    /**
     * @return The URI to a Managed or Unmanaged Disk.
     * 
     */
    private final String sourceUri;
    /**
     * @return The ID of an storage account.
     * 
     */
    private final String storageAccountId;
    private final String timeCreated;
    /**
     * @return Whether Trusted Launch is enabled for the Snapshot.
     * 
     */
    private final Boolean trustedLaunchEnabled;

    @CustomType.Constructor
    private GetSnapshotResult(
        @CustomType.Parameter("creationOption") String creationOption,
        @CustomType.Parameter("diskSizeGb") Integer diskSizeGb,
        @CustomType.Parameter("encryptionSettings") List<GetSnapshotEncryptionSetting> encryptionSettings,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("name") String name,
        @CustomType.Parameter("osType") String osType,
        @CustomType.Parameter("resourceGroupName") String resourceGroupName,
        @CustomType.Parameter("sourceResourceId") String sourceResourceId,
        @CustomType.Parameter("sourceUri") String sourceUri,
        @CustomType.Parameter("storageAccountId") String storageAccountId,
        @CustomType.Parameter("timeCreated") String timeCreated,
        @CustomType.Parameter("trustedLaunchEnabled") Boolean trustedLaunchEnabled) {
        this.creationOption = creationOption;
        this.diskSizeGb = diskSizeGb;
        this.encryptionSettings = encryptionSettings;
        this.id = id;
        this.name = name;
        this.osType = osType;
        this.resourceGroupName = resourceGroupName;
        this.sourceResourceId = sourceResourceId;
        this.sourceUri = sourceUri;
        this.storageAccountId = storageAccountId;
        this.timeCreated = timeCreated;
        this.trustedLaunchEnabled = trustedLaunchEnabled;
    }

    public String creationOption() {
        return this.creationOption;
    }
    /**
     * @return The size of the Snapshotted Disk in GB.
     * 
     */
    public Integer diskSizeGb() {
        return this.diskSizeGb;
    }
    public List<GetSnapshotEncryptionSetting> encryptionSettings() {
        return this.encryptionSettings;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public String name() {
        return this.name;
    }
    public String osType() {
        return this.osType;
    }
    public String resourceGroupName() {
        return this.resourceGroupName;
    }
    /**
     * @return The reference to an existing snapshot.
     * 
     */
    public String sourceResourceId() {
        return this.sourceResourceId;
    }
    /**
     * @return The URI to a Managed or Unmanaged Disk.
     * 
     */
    public String sourceUri() {
        return this.sourceUri;
    }
    /**
     * @return The ID of an storage account.
     * 
     */
    public String storageAccountId() {
        return this.storageAccountId;
    }
    public String timeCreated() {
        return this.timeCreated;
    }
    /**
     * @return Whether Trusted Launch is enabled for the Snapshot.
     * 
     */
    public Boolean trustedLaunchEnabled() {
        return this.trustedLaunchEnabled;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSnapshotResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String creationOption;
        private Integer diskSizeGb;
        private List<GetSnapshotEncryptionSetting> encryptionSettings;
        private String id;
        private String name;
        private String osType;
        private String resourceGroupName;
        private String sourceResourceId;
        private String sourceUri;
        private String storageAccountId;
        private String timeCreated;
        private Boolean trustedLaunchEnabled;

        public Builder() {
    	      // Empty
        }

        public Builder(GetSnapshotResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.creationOption = defaults.creationOption;
    	      this.diskSizeGb = defaults.diskSizeGb;
    	      this.encryptionSettings = defaults.encryptionSettings;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.osType = defaults.osType;
    	      this.resourceGroupName = defaults.resourceGroupName;
    	      this.sourceResourceId = defaults.sourceResourceId;
    	      this.sourceUri = defaults.sourceUri;
    	      this.storageAccountId = defaults.storageAccountId;
    	      this.timeCreated = defaults.timeCreated;
    	      this.trustedLaunchEnabled = defaults.trustedLaunchEnabled;
        }

        public Builder creationOption(String creationOption) {
            this.creationOption = Objects.requireNonNull(creationOption);
            return this;
        }
        public Builder diskSizeGb(Integer diskSizeGb) {
            this.diskSizeGb = Objects.requireNonNull(diskSizeGb);
            return this;
        }
        public Builder encryptionSettings(List<GetSnapshotEncryptionSetting> encryptionSettings) {
            this.encryptionSettings = Objects.requireNonNull(encryptionSettings);
            return this;
        }
        public Builder encryptionSettings(GetSnapshotEncryptionSetting... encryptionSettings) {
            return encryptionSettings(List.of(encryptionSettings));
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        public Builder osType(String osType) {
            this.osType = Objects.requireNonNull(osType);
            return this;
        }
        public Builder resourceGroupName(String resourceGroupName) {
            this.resourceGroupName = Objects.requireNonNull(resourceGroupName);
            return this;
        }
        public Builder sourceResourceId(String sourceResourceId) {
            this.sourceResourceId = Objects.requireNonNull(sourceResourceId);
            return this;
        }
        public Builder sourceUri(String sourceUri) {
            this.sourceUri = Objects.requireNonNull(sourceUri);
            return this;
        }
        public Builder storageAccountId(String storageAccountId) {
            this.storageAccountId = Objects.requireNonNull(storageAccountId);
            return this;
        }
        public Builder timeCreated(String timeCreated) {
            this.timeCreated = Objects.requireNonNull(timeCreated);
            return this;
        }
        public Builder trustedLaunchEnabled(Boolean trustedLaunchEnabled) {
            this.trustedLaunchEnabled = Objects.requireNonNull(trustedLaunchEnabled);
            return this;
        }        public GetSnapshotResult build() {
            return new GetSnapshotResult(creationOption, diskSizeGb, encryptionSettings, id, name, osType, resourceGroupName, sourceResourceId, sourceUri, storageAccountId, timeCreated, trustedLaunchEnabled);
        }
    }
}
