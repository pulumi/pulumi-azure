// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.keyvault.inputs;

import com.pulumi.azure.keyvault.inputs.CertificateContactsContactArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CertificateContactsState extends com.pulumi.resources.ResourceArgs {

    public static final CertificateContactsState Empty = new CertificateContactsState();

    /**
     * One or more `contact` blocks as defined below.
     * 
     */
    @Import(name="contacts")
    private @Nullable Output<List<CertificateContactsContactArgs>> contacts;

    /**
     * @return One or more `contact` blocks as defined below.
     * 
     */
    public Optional<Output<List<CertificateContactsContactArgs>>> contacts() {
        return Optional.ofNullable(this.contacts);
    }

    /**
     * The ID of the Key Vault. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="keyVaultId")
    private @Nullable Output<String> keyVaultId;

    /**
     * @return The ID of the Key Vault. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> keyVaultId() {
        return Optional.ofNullable(this.keyVaultId);
    }

    private CertificateContactsState() {}

    private CertificateContactsState(CertificateContactsState $) {
        this.contacts = $.contacts;
        this.keyVaultId = $.keyVaultId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CertificateContactsState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CertificateContactsState $;

        public Builder() {
            $ = new CertificateContactsState();
        }

        public Builder(CertificateContactsState defaults) {
            $ = new CertificateContactsState(Objects.requireNonNull(defaults));
        }

        /**
         * @param contacts One or more `contact` blocks as defined below.
         * 
         * @return builder
         * 
         */
        public Builder contacts(@Nullable Output<List<CertificateContactsContactArgs>> contacts) {
            $.contacts = contacts;
            return this;
        }

        /**
         * @param contacts One or more `contact` blocks as defined below.
         * 
         * @return builder
         * 
         */
        public Builder contacts(List<CertificateContactsContactArgs> contacts) {
            return contacts(Output.of(contacts));
        }

        /**
         * @param contacts One or more `contact` blocks as defined below.
         * 
         * @return builder
         * 
         */
        public Builder contacts(CertificateContactsContactArgs... contacts) {
            return contacts(List.of(contacts));
        }

        /**
         * @param keyVaultId The ID of the Key Vault. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder keyVaultId(@Nullable Output<String> keyVaultId) {
            $.keyVaultId = keyVaultId;
            return this;
        }

        /**
         * @param keyVaultId The ID of the Key Vault. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder keyVaultId(String keyVaultId) {
            return keyVaultId(Output.of(keyVaultId));
        }

        public CertificateContactsState build() {
            return $;
        }
    }

}
