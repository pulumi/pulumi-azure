// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.appservice.inputs;

import com.pulumi.azure.appservice.inputs.StaticSiteIdentityArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class StaticSiteState extends com.pulumi.resources.ResourceArgs {

    public static final StaticSiteState Empty = new StaticSiteState();

    /**
     * The API key of this Static Web App, which is used for later interacting with this Static Web App from other clients, e.g. GitHub Action.
     * 
     */
    @Import(name="apiKey")
    private @Nullable Output<String> apiKey;

    /**
     * @return The API key of this Static Web App, which is used for later interacting with this Static Web App from other clients, e.g. GitHub Action.
     * 
     */
    public Optional<Output<String>> apiKey() {
        return Optional.ofNullable(this.apiKey);
    }

    /**
     * The default host name of the Static Web App.
     * 
     */
    @Import(name="defaultHostName")
    private @Nullable Output<String> defaultHostName;

    /**
     * @return The default host name of the Static Web App.
     * 
     */
    public Optional<Output<String>> defaultHostName() {
        return Optional.ofNullable(this.defaultHostName);
    }

    @Import(name="identity")
    private @Nullable Output<StaticSiteIdentityArgs> identity;

    public Optional<Output<StaticSiteIdentityArgs>> identity() {
        return Optional.ofNullable(this.identity);
    }

    /**
     * The Azure Region where the Static Web App should exist. Changing this forces a new Static Web App to be created.
     * 
     */
    @Import(name="location")
    private @Nullable Output<String> location;

    /**
     * @return The Azure Region where the Static Web App should exist. Changing this forces a new Static Web App to be created.
     * 
     */
    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * The name which should be used for this Static Web App. Changing this forces a new Static Web App to be created.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name which should be used for this Static Web App. Changing this forces a new Static Web App to be created.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The name of the Resource Group where the Static Web App should exist. Changing this forces a new Static Web App to be created.
     * 
     */
    @Import(name="resourceGroupName")
    private @Nullable Output<String> resourceGroupName;

    /**
     * @return The name of the Resource Group where the Static Web App should exist. Changing this forces a new Static Web App to be created.
     * 
     */
    public Optional<Output<String>> resourceGroupName() {
        return Optional.ofNullable(this.resourceGroupName);
    }

    /**
     * Specifies the SKU size of the Static Web App. Possible values are `Free` or `Standard`. Defaults to `Free`.
     * 
     */
    @Import(name="skuSize")
    private @Nullable Output<String> skuSize;

    /**
     * @return Specifies the SKU size of the Static Web App. Possible values are `Free` or `Standard`. Defaults to `Free`.
     * 
     */
    public Optional<Output<String>> skuSize() {
        return Optional.ofNullable(this.skuSize);
    }

    /**
     * Specifies the SKU tier of the Static Web App. Possible values are `Free` or `Standard`. Defaults to `Free`.
     * 
     */
    @Import(name="skuTier")
    private @Nullable Output<String> skuTier;

    /**
     * @return Specifies the SKU tier of the Static Web App. Possible values are `Free` or `Standard`. Defaults to `Free`.
     * 
     */
    public Optional<Output<String>> skuTier() {
        return Optional.ofNullable(this.skuTier);
    }

    /**
     * A mapping of tags to assign to the resource.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return A mapping of tags to assign to the resource.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private StaticSiteState() {}

    private StaticSiteState(StaticSiteState $) {
        this.apiKey = $.apiKey;
        this.defaultHostName = $.defaultHostName;
        this.identity = $.identity;
        this.location = $.location;
        this.name = $.name;
        this.resourceGroupName = $.resourceGroupName;
        this.skuSize = $.skuSize;
        this.skuTier = $.skuTier;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(StaticSiteState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private StaticSiteState $;

        public Builder() {
            $ = new StaticSiteState();
        }

        public Builder(StaticSiteState defaults) {
            $ = new StaticSiteState(Objects.requireNonNull(defaults));
        }

        /**
         * @param apiKey The API key of this Static Web App, which is used for later interacting with this Static Web App from other clients, e.g. GitHub Action.
         * 
         * @return builder
         * 
         */
        public Builder apiKey(@Nullable Output<String> apiKey) {
            $.apiKey = apiKey;
            return this;
        }

        /**
         * @param apiKey The API key of this Static Web App, which is used for later interacting with this Static Web App from other clients, e.g. GitHub Action.
         * 
         * @return builder
         * 
         */
        public Builder apiKey(String apiKey) {
            return apiKey(Output.of(apiKey));
        }

        /**
         * @param defaultHostName The default host name of the Static Web App.
         * 
         * @return builder
         * 
         */
        public Builder defaultHostName(@Nullable Output<String> defaultHostName) {
            $.defaultHostName = defaultHostName;
            return this;
        }

        /**
         * @param defaultHostName The default host name of the Static Web App.
         * 
         * @return builder
         * 
         */
        public Builder defaultHostName(String defaultHostName) {
            return defaultHostName(Output.of(defaultHostName));
        }

        public Builder identity(@Nullable Output<StaticSiteIdentityArgs> identity) {
            $.identity = identity;
            return this;
        }

        public Builder identity(StaticSiteIdentityArgs identity) {
            return identity(Output.of(identity));
        }

        /**
         * @param location The Azure Region where the Static Web App should exist. Changing this forces a new Static Web App to be created.
         * 
         * @return builder
         * 
         */
        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location The Azure Region where the Static Web App should exist. Changing this forces a new Static Web App to be created.
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param name The name which should be used for this Static Web App. Changing this forces a new Static Web App to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name which should be used for this Static Web App. Changing this forces a new Static Web App to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param resourceGroupName The name of the Resource Group where the Static Web App should exist. Changing this forces a new Static Web App to be created.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(@Nullable Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName The name of the Resource Group where the Static Web App should exist. Changing this forces a new Static Web App to be created.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        /**
         * @param skuSize Specifies the SKU size of the Static Web App. Possible values are `Free` or `Standard`. Defaults to `Free`.
         * 
         * @return builder
         * 
         */
        public Builder skuSize(@Nullable Output<String> skuSize) {
            $.skuSize = skuSize;
            return this;
        }

        /**
         * @param skuSize Specifies the SKU size of the Static Web App. Possible values are `Free` or `Standard`. Defaults to `Free`.
         * 
         * @return builder
         * 
         */
        public Builder skuSize(String skuSize) {
            return skuSize(Output.of(skuSize));
        }

        /**
         * @param skuTier Specifies the SKU tier of the Static Web App. Possible values are `Free` or `Standard`. Defaults to `Free`.
         * 
         * @return builder
         * 
         */
        public Builder skuTier(@Nullable Output<String> skuTier) {
            $.skuTier = skuTier;
            return this;
        }

        /**
         * @param skuTier Specifies the SKU tier of the Static Web App. Possible values are `Free` or `Standard`. Defaults to `Free`.
         * 
         * @return builder
         * 
         */
        public Builder skuTier(String skuTier) {
            return skuTier(Output.of(skuTier));
        }

        /**
         * @param tags A mapping of tags to assign to the resource.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags A mapping of tags to assign to the resource.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public StaticSiteState build() {
            return $;
        }
    }

}
