// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.appplatform.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SpringCloudAppPersistentDiskArgs extends com.pulumi.resources.ResourceArgs {

    public static final SpringCloudAppPersistentDiskArgs Empty = new SpringCloudAppPersistentDiskArgs();

    /**
     * Specifies the mount path of the persistent disk. Defaults to `/persistent`.
     * 
     */
    @Import(name="mountPath")
    private @Nullable Output<String> mountPath;

    /**
     * @return Specifies the mount path of the persistent disk. Defaults to `/persistent`.
     * 
     */
    public Optional<Output<String>> mountPath() {
        return Optional.ofNullable(this.mountPath);
    }

    /**
     * Specifies the size of the persistent disk in GB. Possible values are between `0` and `50`.
     * 
     */
    @Import(name="sizeInGb", required=true)
    private Output<Integer> sizeInGb;

    /**
     * @return Specifies the size of the persistent disk in GB. Possible values are between `0` and `50`.
     * 
     */
    public Output<Integer> sizeInGb() {
        return this.sizeInGb;
    }

    private SpringCloudAppPersistentDiskArgs() {}

    private SpringCloudAppPersistentDiskArgs(SpringCloudAppPersistentDiskArgs $) {
        this.mountPath = $.mountPath;
        this.sizeInGb = $.sizeInGb;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SpringCloudAppPersistentDiskArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SpringCloudAppPersistentDiskArgs $;

        public Builder() {
            $ = new SpringCloudAppPersistentDiskArgs();
        }

        public Builder(SpringCloudAppPersistentDiskArgs defaults) {
            $ = new SpringCloudAppPersistentDiskArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param mountPath Specifies the mount path of the persistent disk. Defaults to `/persistent`.
         * 
         * @return builder
         * 
         */
        public Builder mountPath(@Nullable Output<String> mountPath) {
            $.mountPath = mountPath;
            return this;
        }

        /**
         * @param mountPath Specifies the mount path of the persistent disk. Defaults to `/persistent`.
         * 
         * @return builder
         * 
         */
        public Builder mountPath(String mountPath) {
            return mountPath(Output.of(mountPath));
        }

        /**
         * @param sizeInGb Specifies the size of the persistent disk in GB. Possible values are between `0` and `50`.
         * 
         * @return builder
         * 
         */
        public Builder sizeInGb(Output<Integer> sizeInGb) {
            $.sizeInGb = sizeInGb;
            return this;
        }

        /**
         * @param sizeInGb Specifies the size of the persistent disk in GB. Possible values are between `0` and `50`.
         * 
         * @return builder
         * 
         */
        public Builder sizeInGb(Integer sizeInGb) {
            return sizeInGb(Output.of(sizeInGb));
        }

        public SpringCloudAppPersistentDiskArgs build() {
            if ($.sizeInGb == null) {
                throw new MissingRequiredPropertyException("SpringCloudAppPersistentDiskArgs", "sizeInGb");
            }
            return $;
        }
    }

}
