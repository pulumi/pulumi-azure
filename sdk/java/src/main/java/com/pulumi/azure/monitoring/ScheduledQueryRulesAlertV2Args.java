// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.monitoring;

import com.pulumi.azure.monitoring.inputs.ScheduledQueryRulesAlertV2ActionArgs;
import com.pulumi.azure.monitoring.inputs.ScheduledQueryRulesAlertV2CriteriaArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ScheduledQueryRulesAlertV2Args extends com.pulumi.resources.ResourceArgs {

    public static final ScheduledQueryRulesAlertV2Args Empty = new ScheduledQueryRulesAlertV2Args();

    /**
     * An `action` block as defined below.
     * 
     */
    @Import(name="action")
    private @Nullable Output<ScheduledQueryRulesAlertV2ActionArgs> action;

    /**
     * @return An `action` block as defined below.
     * 
     */
    public Optional<Output<ScheduledQueryRulesAlertV2ActionArgs>> action() {
        return Optional.ofNullable(this.action);
    }

    /**
     * Specifies the flag that indicates whether the alert should be automatically resolved or not. Value should be `true` or `false`. The default is `false`.
     * 
     */
    @Import(name="autoMitigationEnabled")
    private @Nullable Output<Boolean> autoMitigationEnabled;

    /**
     * @return Specifies the flag that indicates whether the alert should be automatically resolved or not. Value should be `true` or `false`. The default is `false`.
     * 
     */
    public Optional<Output<Boolean>> autoMitigationEnabled() {
        return Optional.ofNullable(this.autoMitigationEnabled);
    }

    /**
     * A `criteria` block as defined below.
     * 
     */
    @Import(name="criterias", required=true)
    private Output<List<ScheduledQueryRulesAlertV2CriteriaArgs>> criterias;

    /**
     * @return A `criteria` block as defined below.
     * 
     */
    public Output<List<ScheduledQueryRulesAlertV2CriteriaArgs>> criterias() {
        return this.criterias;
    }

    /**
     * Specifies the description of the scheduled query rule.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return Specifies the description of the scheduled query rule.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Specifies the display name of the alert rule.
     * 
     */
    @Import(name="displayName")
    private @Nullable Output<String> displayName;

    /**
     * @return Specifies the display name of the alert rule.
     * 
     */
    public Optional<Output<String>> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    /**
     * Specifies the flag which indicates whether this scheduled query rule is enabled. Value should be `true` or `false`. Defaults to `true`.
     * 
     */
    @Import(name="enabled")
    private @Nullable Output<Boolean> enabled;

    /**
     * @return Specifies the flag which indicates whether this scheduled query rule is enabled. Value should be `true` or `false`. Defaults to `true`.
     * 
     */
    public Optional<Output<Boolean>> enabled() {
        return Optional.ofNullable(this.enabled);
    }

    /**
     * How often the scheduled query rule is evaluated, represented in ISO 8601 duration format. Possible values are `PT1M`, `PT5M`, `PT10M`, `PT15M`, `PT30M`, `PT45M`, `PT1H`, `PT2H`, `PT3H`, `PT4H`, `PT5H`, `PT6H`, `P1D`.
     * 
     * &gt; **Note** `evaluation_frequency` cannot be greater than the query look back which is `window_duration`*`number_of_evaluation_periods`.
     * 
     * &gt; **Note** `evaluation_frequency` cannot be greater than the `mute_actions_after_alert_duration`.
     * 
     */
    @Import(name="evaluationFrequency")
    private @Nullable Output<String> evaluationFrequency;

    /**
     * @return How often the scheduled query rule is evaluated, represented in ISO 8601 duration format. Possible values are `PT1M`, `PT5M`, `PT10M`, `PT15M`, `PT30M`, `PT45M`, `PT1H`, `PT2H`, `PT3H`, `PT4H`, `PT5H`, `PT6H`, `P1D`.
     * 
     * &gt; **Note** `evaluation_frequency` cannot be greater than the query look back which is `window_duration`*`number_of_evaluation_periods`.
     * 
     * &gt; **Note** `evaluation_frequency` cannot be greater than the `mute_actions_after_alert_duration`.
     * 
     */
    public Optional<Output<String>> evaluationFrequency() {
        return Optional.ofNullable(this.evaluationFrequency);
    }

    /**
     * Specifies the Azure Region where the Monitor Scheduled Query Rule should exist. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="location")
    private @Nullable Output<String> location;

    /**
     * @return Specifies the Azure Region where the Monitor Scheduled Query Rule should exist. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * Mute actions for the chosen period of time in ISO 8601 duration format after the alert is fired. Possible values are `PT5M`, `PT10M`, `PT15M`, `PT30M`, `PT45M`, `PT1H`, `PT2H`, `PT3H`, `PT4H`, `PT5H`, `PT6H`, `P1D` and `P2D`.
     * 
     * &gt; **Note** `auto_mitigation_enabled` and `mute_actions_after_alert_duration` are mutually exclusive and cannot both be set.
     * 
     */
    @Import(name="muteActionsAfterAlertDuration")
    private @Nullable Output<String> muteActionsAfterAlertDuration;

    /**
     * @return Mute actions for the chosen period of time in ISO 8601 duration format after the alert is fired. Possible values are `PT5M`, `PT10M`, `PT15M`, `PT30M`, `PT45M`, `PT1H`, `PT2H`, `PT3H`, `PT4H`, `PT5H`, `PT6H`, `P1D` and `P2D`.
     * 
     * &gt; **Note** `auto_mitigation_enabled` and `mute_actions_after_alert_duration` are mutually exclusive and cannot both be set.
     * 
     */
    public Optional<Output<String>> muteActionsAfterAlertDuration() {
        return Optional.ofNullable(this.muteActionsAfterAlertDuration);
    }

    /**
     * Specifies the name which should be used for this Monitor Scheduled Query Rule. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Specifies the name which should be used for this Monitor Scheduled Query Rule. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Set this if the alert evaluation period is different from the query time range. If not specified, the value is `window_duration`*`number_of_evaluation_periods`. Possible values are `PT5M`, `PT10M`, `PT15M`, `PT20M`, `PT30M`, `PT45M`, `PT1H`, `PT2H`, `PT3H`, `PT4H`, `PT5H`, `PT6H`, `P1D` and `P2D`.
     * 
     * &gt; **Note** `query_time_range_override` cannot be less than the query look back which is `window_duration`*`number_of_evaluation_periods`.
     * 
     */
    @Import(name="queryTimeRangeOverride")
    private @Nullable Output<String> queryTimeRangeOverride;

    /**
     * @return Set this if the alert evaluation period is different from the query time range. If not specified, the value is `window_duration`*`number_of_evaluation_periods`. Possible values are `PT5M`, `PT10M`, `PT15M`, `PT20M`, `PT30M`, `PT45M`, `PT1H`, `PT2H`, `PT3H`, `PT4H`, `PT5H`, `PT6H`, `P1D` and `P2D`.
     * 
     * &gt; **Note** `query_time_range_override` cannot be less than the query look back which is `window_duration`*`number_of_evaluation_periods`.
     * 
     */
    public Optional<Output<String>> queryTimeRangeOverride() {
        return Optional.ofNullable(this.queryTimeRangeOverride);
    }

    /**
     * Specifies the name of the Resource Group where the Monitor Scheduled Query Rule should exist. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    /**
     * @return Specifies the name of the Resource Group where the Monitor Scheduled Query Rule should exist. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * Specifies the list of resource IDs that this scheduled query rule is scoped to. Changing this forces a new resource to be created. Currently, the API supports exactly 1 resource ID in the scopes list.
     * 
     */
    @Import(name="scopes", required=true)
    private Output<String> scopes;

    /**
     * @return Specifies the list of resource IDs that this scheduled query rule is scoped to. Changing this forces a new resource to be created. Currently, the API supports exactly 1 resource ID in the scopes list.
     * 
     */
    public Output<String> scopes() {
        return this.scopes;
    }

    /**
     * Severity of the alert. Should be an integer between 0 and 4. Value of 0 is severest.
     * 
     */
    @Import(name="severity", required=true)
    private Output<Integer> severity;

    /**
     * @return Severity of the alert. Should be an integer between 0 and 4. Value of 0 is severest.
     * 
     */
    public Output<Integer> severity() {
        return this.severity;
    }

    /**
     * Specifies the flag which indicates whether the provided query should be validated or not. The default is false.
     * 
     */
    @Import(name="skipQueryValidation")
    private @Nullable Output<Boolean> skipQueryValidation;

    /**
     * @return Specifies the flag which indicates whether the provided query should be validated or not. The default is false.
     * 
     */
    public Optional<Output<Boolean>> skipQueryValidation() {
        return Optional.ofNullable(this.skipQueryValidation);
    }

    /**
     * A mapping of tags which should be assigned to the Monitor Scheduled Query Rule.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return A mapping of tags which should be assigned to the Monitor Scheduled Query Rule.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * List of resource type of the target resource(s) on which the alert is created/updated. For example if the scope is a resource group and targetResourceTypes is `Microsoft.Compute/virtualMachines`, then a different alert will be fired for each virtual machine in the resource group which meet the alert criteria.
     * 
     */
    @Import(name="targetResourceTypes")
    private @Nullable Output<List<String>> targetResourceTypes;

    /**
     * @return List of resource type of the target resource(s) on which the alert is created/updated. For example if the scope is a resource group and targetResourceTypes is `Microsoft.Compute/virtualMachines`, then a different alert will be fired for each virtual machine in the resource group which meet the alert criteria.
     * 
     */
    public Optional<Output<List<String>>> targetResourceTypes() {
        return Optional.ofNullable(this.targetResourceTypes);
    }

    /**
     * Specifies the period of time in ISO 8601 duration format on which the Scheduled Query Rule will be executed (bin size). If `evaluation_frequency` is `PT1M`, possible values are `PT1M`, `PT5M`, `PT10M`, `PT15M`, `PT30M`, `PT45M`, `PT1H`, `PT2H`, `PT3H`, `PT4H`, `PT5H`, and `PT6H`. Otherwise, possible values are `PT5M`, `PT10M`, `PT15M`, `PT30M`, `PT45M`, `PT1H`, `PT2H`, `PT3H`, `PT4H`, `PT5H`, `PT6H`, `P1D`, and `P2D`.
     * 
     */
    @Import(name="windowDuration", required=true)
    private Output<String> windowDuration;

    /**
     * @return Specifies the period of time in ISO 8601 duration format on which the Scheduled Query Rule will be executed (bin size). If `evaluation_frequency` is `PT1M`, possible values are `PT1M`, `PT5M`, `PT10M`, `PT15M`, `PT30M`, `PT45M`, `PT1H`, `PT2H`, `PT3H`, `PT4H`, `PT5H`, and `PT6H`. Otherwise, possible values are `PT5M`, `PT10M`, `PT15M`, `PT30M`, `PT45M`, `PT1H`, `PT2H`, `PT3H`, `PT4H`, `PT5H`, `PT6H`, `P1D`, and `P2D`.
     * 
     */
    public Output<String> windowDuration() {
        return this.windowDuration;
    }

    /**
     * Specifies the flag which indicates whether this scheduled query rule check if storage is configured. Value should be `true` or `false`. The default is `false`.
     * 
     */
    @Import(name="workspaceAlertsStorageEnabled")
    private @Nullable Output<Boolean> workspaceAlertsStorageEnabled;

    /**
     * @return Specifies the flag which indicates whether this scheduled query rule check if storage is configured. Value should be `true` or `false`. The default is `false`.
     * 
     */
    public Optional<Output<Boolean>> workspaceAlertsStorageEnabled() {
        return Optional.ofNullable(this.workspaceAlertsStorageEnabled);
    }

    private ScheduledQueryRulesAlertV2Args() {}

    private ScheduledQueryRulesAlertV2Args(ScheduledQueryRulesAlertV2Args $) {
        this.action = $.action;
        this.autoMitigationEnabled = $.autoMitigationEnabled;
        this.criterias = $.criterias;
        this.description = $.description;
        this.displayName = $.displayName;
        this.enabled = $.enabled;
        this.evaluationFrequency = $.evaluationFrequency;
        this.location = $.location;
        this.muteActionsAfterAlertDuration = $.muteActionsAfterAlertDuration;
        this.name = $.name;
        this.queryTimeRangeOverride = $.queryTimeRangeOverride;
        this.resourceGroupName = $.resourceGroupName;
        this.scopes = $.scopes;
        this.severity = $.severity;
        this.skipQueryValidation = $.skipQueryValidation;
        this.tags = $.tags;
        this.targetResourceTypes = $.targetResourceTypes;
        this.windowDuration = $.windowDuration;
        this.workspaceAlertsStorageEnabled = $.workspaceAlertsStorageEnabled;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ScheduledQueryRulesAlertV2Args defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ScheduledQueryRulesAlertV2Args $;

        public Builder() {
            $ = new ScheduledQueryRulesAlertV2Args();
        }

        public Builder(ScheduledQueryRulesAlertV2Args defaults) {
            $ = new ScheduledQueryRulesAlertV2Args(Objects.requireNonNull(defaults));
        }

        /**
         * @param action An `action` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder action(@Nullable Output<ScheduledQueryRulesAlertV2ActionArgs> action) {
            $.action = action;
            return this;
        }

        /**
         * @param action An `action` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder action(ScheduledQueryRulesAlertV2ActionArgs action) {
            return action(Output.of(action));
        }

        /**
         * @param autoMitigationEnabled Specifies the flag that indicates whether the alert should be automatically resolved or not. Value should be `true` or `false`. The default is `false`.
         * 
         * @return builder
         * 
         */
        public Builder autoMitigationEnabled(@Nullable Output<Boolean> autoMitigationEnabled) {
            $.autoMitigationEnabled = autoMitigationEnabled;
            return this;
        }

        /**
         * @param autoMitigationEnabled Specifies the flag that indicates whether the alert should be automatically resolved or not. Value should be `true` or `false`. The default is `false`.
         * 
         * @return builder
         * 
         */
        public Builder autoMitigationEnabled(Boolean autoMitigationEnabled) {
            return autoMitigationEnabled(Output.of(autoMitigationEnabled));
        }

        /**
         * @param criterias A `criteria` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder criterias(Output<List<ScheduledQueryRulesAlertV2CriteriaArgs>> criterias) {
            $.criterias = criterias;
            return this;
        }

        /**
         * @param criterias A `criteria` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder criterias(List<ScheduledQueryRulesAlertV2CriteriaArgs> criterias) {
            return criterias(Output.of(criterias));
        }

        /**
         * @param criterias A `criteria` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder criterias(ScheduledQueryRulesAlertV2CriteriaArgs... criterias) {
            return criterias(List.of(criterias));
        }

        /**
         * @param description Specifies the description of the scheduled query rule.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description Specifies the description of the scheduled query rule.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param displayName Specifies the display name of the alert rule.
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName Specifies the display name of the alert rule.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param enabled Specifies the flag which indicates whether this scheduled query rule is enabled. Value should be `true` or `false`. Defaults to `true`.
         * 
         * @return builder
         * 
         */
        public Builder enabled(@Nullable Output<Boolean> enabled) {
            $.enabled = enabled;
            return this;
        }

        /**
         * @param enabled Specifies the flag which indicates whether this scheduled query rule is enabled. Value should be `true` or `false`. Defaults to `true`.
         * 
         * @return builder
         * 
         */
        public Builder enabled(Boolean enabled) {
            return enabled(Output.of(enabled));
        }

        /**
         * @param evaluationFrequency How often the scheduled query rule is evaluated, represented in ISO 8601 duration format. Possible values are `PT1M`, `PT5M`, `PT10M`, `PT15M`, `PT30M`, `PT45M`, `PT1H`, `PT2H`, `PT3H`, `PT4H`, `PT5H`, `PT6H`, `P1D`.
         * 
         * &gt; **Note** `evaluation_frequency` cannot be greater than the query look back which is `window_duration`*`number_of_evaluation_periods`.
         * 
         * &gt; **Note** `evaluation_frequency` cannot be greater than the `mute_actions_after_alert_duration`.
         * 
         * @return builder
         * 
         */
        public Builder evaluationFrequency(@Nullable Output<String> evaluationFrequency) {
            $.evaluationFrequency = evaluationFrequency;
            return this;
        }

        /**
         * @param evaluationFrequency How often the scheduled query rule is evaluated, represented in ISO 8601 duration format. Possible values are `PT1M`, `PT5M`, `PT10M`, `PT15M`, `PT30M`, `PT45M`, `PT1H`, `PT2H`, `PT3H`, `PT4H`, `PT5H`, `PT6H`, `P1D`.
         * 
         * &gt; **Note** `evaluation_frequency` cannot be greater than the query look back which is `window_duration`*`number_of_evaluation_periods`.
         * 
         * &gt; **Note** `evaluation_frequency` cannot be greater than the `mute_actions_after_alert_duration`.
         * 
         * @return builder
         * 
         */
        public Builder evaluationFrequency(String evaluationFrequency) {
            return evaluationFrequency(Output.of(evaluationFrequency));
        }

        /**
         * @param location Specifies the Azure Region where the Monitor Scheduled Query Rule should exist. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location Specifies the Azure Region where the Monitor Scheduled Query Rule should exist. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param muteActionsAfterAlertDuration Mute actions for the chosen period of time in ISO 8601 duration format after the alert is fired. Possible values are `PT5M`, `PT10M`, `PT15M`, `PT30M`, `PT45M`, `PT1H`, `PT2H`, `PT3H`, `PT4H`, `PT5H`, `PT6H`, `P1D` and `P2D`.
         * 
         * &gt; **Note** `auto_mitigation_enabled` and `mute_actions_after_alert_duration` are mutually exclusive and cannot both be set.
         * 
         * @return builder
         * 
         */
        public Builder muteActionsAfterAlertDuration(@Nullable Output<String> muteActionsAfterAlertDuration) {
            $.muteActionsAfterAlertDuration = muteActionsAfterAlertDuration;
            return this;
        }

        /**
         * @param muteActionsAfterAlertDuration Mute actions for the chosen period of time in ISO 8601 duration format after the alert is fired. Possible values are `PT5M`, `PT10M`, `PT15M`, `PT30M`, `PT45M`, `PT1H`, `PT2H`, `PT3H`, `PT4H`, `PT5H`, `PT6H`, `P1D` and `P2D`.
         * 
         * &gt; **Note** `auto_mitigation_enabled` and `mute_actions_after_alert_duration` are mutually exclusive and cannot both be set.
         * 
         * @return builder
         * 
         */
        public Builder muteActionsAfterAlertDuration(String muteActionsAfterAlertDuration) {
            return muteActionsAfterAlertDuration(Output.of(muteActionsAfterAlertDuration));
        }

        /**
         * @param name Specifies the name which should be used for this Monitor Scheduled Query Rule. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Specifies the name which should be used for this Monitor Scheduled Query Rule. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param queryTimeRangeOverride Set this if the alert evaluation period is different from the query time range. If not specified, the value is `window_duration`*`number_of_evaluation_periods`. Possible values are `PT5M`, `PT10M`, `PT15M`, `PT20M`, `PT30M`, `PT45M`, `PT1H`, `PT2H`, `PT3H`, `PT4H`, `PT5H`, `PT6H`, `P1D` and `P2D`.
         * 
         * &gt; **Note** `query_time_range_override` cannot be less than the query look back which is `window_duration`*`number_of_evaluation_periods`.
         * 
         * @return builder
         * 
         */
        public Builder queryTimeRangeOverride(@Nullable Output<String> queryTimeRangeOverride) {
            $.queryTimeRangeOverride = queryTimeRangeOverride;
            return this;
        }

        /**
         * @param queryTimeRangeOverride Set this if the alert evaluation period is different from the query time range. If not specified, the value is `window_duration`*`number_of_evaluation_periods`. Possible values are `PT5M`, `PT10M`, `PT15M`, `PT20M`, `PT30M`, `PT45M`, `PT1H`, `PT2H`, `PT3H`, `PT4H`, `PT5H`, `PT6H`, `P1D` and `P2D`.
         * 
         * &gt; **Note** `query_time_range_override` cannot be less than the query look back which is `window_duration`*`number_of_evaluation_periods`.
         * 
         * @return builder
         * 
         */
        public Builder queryTimeRangeOverride(String queryTimeRangeOverride) {
            return queryTimeRangeOverride(Output.of(queryTimeRangeOverride));
        }

        /**
         * @param resourceGroupName Specifies the name of the Resource Group where the Monitor Scheduled Query Rule should exist. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName Specifies the name of the Resource Group where the Monitor Scheduled Query Rule should exist. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        /**
         * @param scopes Specifies the list of resource IDs that this scheduled query rule is scoped to. Changing this forces a new resource to be created. Currently, the API supports exactly 1 resource ID in the scopes list.
         * 
         * @return builder
         * 
         */
        public Builder scopes(Output<String> scopes) {
            $.scopes = scopes;
            return this;
        }

        /**
         * @param scopes Specifies the list of resource IDs that this scheduled query rule is scoped to. Changing this forces a new resource to be created. Currently, the API supports exactly 1 resource ID in the scopes list.
         * 
         * @return builder
         * 
         */
        public Builder scopes(String scopes) {
            return scopes(Output.of(scopes));
        }

        /**
         * @param severity Severity of the alert. Should be an integer between 0 and 4. Value of 0 is severest.
         * 
         * @return builder
         * 
         */
        public Builder severity(Output<Integer> severity) {
            $.severity = severity;
            return this;
        }

        /**
         * @param severity Severity of the alert. Should be an integer between 0 and 4. Value of 0 is severest.
         * 
         * @return builder
         * 
         */
        public Builder severity(Integer severity) {
            return severity(Output.of(severity));
        }

        /**
         * @param skipQueryValidation Specifies the flag which indicates whether the provided query should be validated or not. The default is false.
         * 
         * @return builder
         * 
         */
        public Builder skipQueryValidation(@Nullable Output<Boolean> skipQueryValidation) {
            $.skipQueryValidation = skipQueryValidation;
            return this;
        }

        /**
         * @param skipQueryValidation Specifies the flag which indicates whether the provided query should be validated or not. The default is false.
         * 
         * @return builder
         * 
         */
        public Builder skipQueryValidation(Boolean skipQueryValidation) {
            return skipQueryValidation(Output.of(skipQueryValidation));
        }

        /**
         * @param tags A mapping of tags which should be assigned to the Monitor Scheduled Query Rule.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags A mapping of tags which should be assigned to the Monitor Scheduled Query Rule.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param targetResourceTypes List of resource type of the target resource(s) on which the alert is created/updated. For example if the scope is a resource group and targetResourceTypes is `Microsoft.Compute/virtualMachines`, then a different alert will be fired for each virtual machine in the resource group which meet the alert criteria.
         * 
         * @return builder
         * 
         */
        public Builder targetResourceTypes(@Nullable Output<List<String>> targetResourceTypes) {
            $.targetResourceTypes = targetResourceTypes;
            return this;
        }

        /**
         * @param targetResourceTypes List of resource type of the target resource(s) on which the alert is created/updated. For example if the scope is a resource group and targetResourceTypes is `Microsoft.Compute/virtualMachines`, then a different alert will be fired for each virtual machine in the resource group which meet the alert criteria.
         * 
         * @return builder
         * 
         */
        public Builder targetResourceTypes(List<String> targetResourceTypes) {
            return targetResourceTypes(Output.of(targetResourceTypes));
        }

        /**
         * @param targetResourceTypes List of resource type of the target resource(s) on which the alert is created/updated. For example if the scope is a resource group and targetResourceTypes is `Microsoft.Compute/virtualMachines`, then a different alert will be fired for each virtual machine in the resource group which meet the alert criteria.
         * 
         * @return builder
         * 
         */
        public Builder targetResourceTypes(String... targetResourceTypes) {
            return targetResourceTypes(List.of(targetResourceTypes));
        }

        /**
         * @param windowDuration Specifies the period of time in ISO 8601 duration format on which the Scheduled Query Rule will be executed (bin size). If `evaluation_frequency` is `PT1M`, possible values are `PT1M`, `PT5M`, `PT10M`, `PT15M`, `PT30M`, `PT45M`, `PT1H`, `PT2H`, `PT3H`, `PT4H`, `PT5H`, and `PT6H`. Otherwise, possible values are `PT5M`, `PT10M`, `PT15M`, `PT30M`, `PT45M`, `PT1H`, `PT2H`, `PT3H`, `PT4H`, `PT5H`, `PT6H`, `P1D`, and `P2D`.
         * 
         * @return builder
         * 
         */
        public Builder windowDuration(Output<String> windowDuration) {
            $.windowDuration = windowDuration;
            return this;
        }

        /**
         * @param windowDuration Specifies the period of time in ISO 8601 duration format on which the Scheduled Query Rule will be executed (bin size). If `evaluation_frequency` is `PT1M`, possible values are `PT1M`, `PT5M`, `PT10M`, `PT15M`, `PT30M`, `PT45M`, `PT1H`, `PT2H`, `PT3H`, `PT4H`, `PT5H`, and `PT6H`. Otherwise, possible values are `PT5M`, `PT10M`, `PT15M`, `PT30M`, `PT45M`, `PT1H`, `PT2H`, `PT3H`, `PT4H`, `PT5H`, `PT6H`, `P1D`, and `P2D`.
         * 
         * @return builder
         * 
         */
        public Builder windowDuration(String windowDuration) {
            return windowDuration(Output.of(windowDuration));
        }

        /**
         * @param workspaceAlertsStorageEnabled Specifies the flag which indicates whether this scheduled query rule check if storage is configured. Value should be `true` or `false`. The default is `false`.
         * 
         * @return builder
         * 
         */
        public Builder workspaceAlertsStorageEnabled(@Nullable Output<Boolean> workspaceAlertsStorageEnabled) {
            $.workspaceAlertsStorageEnabled = workspaceAlertsStorageEnabled;
            return this;
        }

        /**
         * @param workspaceAlertsStorageEnabled Specifies the flag which indicates whether this scheduled query rule check if storage is configured. Value should be `true` or `false`. The default is `false`.
         * 
         * @return builder
         * 
         */
        public Builder workspaceAlertsStorageEnabled(Boolean workspaceAlertsStorageEnabled) {
            return workspaceAlertsStorageEnabled(Output.of(workspaceAlertsStorageEnabled));
        }

        public ScheduledQueryRulesAlertV2Args build() {
            $.criterias = Objects.requireNonNull($.criterias, "expected parameter 'criterias' to be non-null");
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            $.scopes = Objects.requireNonNull($.scopes, "expected parameter 'scopes' to be non-null");
            $.severity = Objects.requireNonNull($.severity, "expected parameter 'severity' to be non-null");
            $.windowDuration = Objects.requireNonNull($.windowDuration, "expected parameter 'windowDuration' to be non-null");
            return $;
        }
    }

}
