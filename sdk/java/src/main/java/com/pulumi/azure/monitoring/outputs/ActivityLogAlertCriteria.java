// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.monitoring.outputs;

import com.pulumi.azure.monitoring.outputs.ActivityLogAlertCriteriaResourceHealth;
import com.pulumi.azure.monitoring.outputs.ActivityLogAlertCriteriaServiceHealth;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ActivityLogAlertCriteria {
    /**
     * @return The email address or Azure Active Directory identifier of the user who performed the operation.
     * 
     */
    private @Nullable String caller;
    /**
     * @return The category of the operation. Possible values are `Administrative`, `Autoscale`, `Policy`, `Recommendation`, `ResourceHealth`, `Security` and `ServiceHealth`.
     * 
     */
    private String category;
    /**
     * @return The severity level of the event. Possible values are `Verbose`, `Informational`, `Warning`, `Error`, and `Critical`.
     * 
     */
    private @Nullable String level;
    /**
     * @return The Resource Manager Role-Based Access Control operation name. Supported operation should be of the form: `&lt;resourceProvider&gt;/&lt;resourceType&gt;/&lt;operation&gt;`.
     * 
     */
    private @Nullable String operationName;
    /**
     * @return The recommendation category of the event. Possible values are `Cost`, `Reliability`, `OperationalExcellence` and `Performance`. It is only allowed when `category` is `Recommendation`.
     * 
     */
    private @Nullable String recommendationCategory;
    /**
     * @return The recommendation impact of the event. Possible values are `High`, `Medium` and `Low`. It is only allowed when `category` is `Recommendation`.
     * 
     */
    private @Nullable String recommendationImpact;
    /**
     * @return The recommendation type of the event. It is only allowed when `category` is `Recommendation`.
     * 
     */
    private @Nullable String recommendationType;
    /**
     * @return The name of resource group monitored by the activity log alert.
     * 
     */
    private @Nullable String resourceGroup;
    /**
     * @return A block to define fine grain resource health settings.
     * 
     */
    private @Nullable List<ActivityLogAlertCriteriaResourceHealth> resourceHealths;
    /**
     * @return The specific resource monitored by the activity log alert. It should be within one of the `scopes`.
     * 
     */
    private @Nullable String resourceId;
    /**
     * @return The name of the resource provider monitored by the activity log alert.
     * 
     */
    private @Nullable String resourceProvider;
    /**
     * @return The resource type monitored by the activity log alert.
     * 
     */
    private @Nullable String resourceType;
    /**
     * @return A block to define fine grain service health settings.
     * 
     */
    private @Nullable List<ActivityLogAlertCriteriaServiceHealth> serviceHealths;
    /**
     * @return The status of the event. For example, `Started`, `Failed`, or `Succeeded`.
     * 
     */
    private @Nullable String status;
    /**
     * @return The sub status of the event.
     * 
     */
    private @Nullable String subStatus;

    private ActivityLogAlertCriteria() {}
    /**
     * @return The email address or Azure Active Directory identifier of the user who performed the operation.
     * 
     */
    public Optional<String> caller() {
        return Optional.ofNullable(this.caller);
    }
    /**
     * @return The category of the operation. Possible values are `Administrative`, `Autoscale`, `Policy`, `Recommendation`, `ResourceHealth`, `Security` and `ServiceHealth`.
     * 
     */
    public String category() {
        return this.category;
    }
    /**
     * @return The severity level of the event. Possible values are `Verbose`, `Informational`, `Warning`, `Error`, and `Critical`.
     * 
     */
    public Optional<String> level() {
        return Optional.ofNullable(this.level);
    }
    /**
     * @return The Resource Manager Role-Based Access Control operation name. Supported operation should be of the form: `&lt;resourceProvider&gt;/&lt;resourceType&gt;/&lt;operation&gt;`.
     * 
     */
    public Optional<String> operationName() {
        return Optional.ofNullable(this.operationName);
    }
    /**
     * @return The recommendation category of the event. Possible values are `Cost`, `Reliability`, `OperationalExcellence` and `Performance`. It is only allowed when `category` is `Recommendation`.
     * 
     */
    public Optional<String> recommendationCategory() {
        return Optional.ofNullable(this.recommendationCategory);
    }
    /**
     * @return The recommendation impact of the event. Possible values are `High`, `Medium` and `Low`. It is only allowed when `category` is `Recommendation`.
     * 
     */
    public Optional<String> recommendationImpact() {
        return Optional.ofNullable(this.recommendationImpact);
    }
    /**
     * @return The recommendation type of the event. It is only allowed when `category` is `Recommendation`.
     * 
     */
    public Optional<String> recommendationType() {
        return Optional.ofNullable(this.recommendationType);
    }
    /**
     * @return The name of resource group monitored by the activity log alert.
     * 
     */
    public Optional<String> resourceGroup() {
        return Optional.ofNullable(this.resourceGroup);
    }
    /**
     * @return A block to define fine grain resource health settings.
     * 
     */
    public List<ActivityLogAlertCriteriaResourceHealth> resourceHealths() {
        return this.resourceHealths == null ? List.of() : this.resourceHealths;
    }
    /**
     * @return The specific resource monitored by the activity log alert. It should be within one of the `scopes`.
     * 
     */
    public Optional<String> resourceId() {
        return Optional.ofNullable(this.resourceId);
    }
    /**
     * @return The name of the resource provider monitored by the activity log alert.
     * 
     */
    public Optional<String> resourceProvider() {
        return Optional.ofNullable(this.resourceProvider);
    }
    /**
     * @return The resource type monitored by the activity log alert.
     * 
     */
    public Optional<String> resourceType() {
        return Optional.ofNullable(this.resourceType);
    }
    /**
     * @return A block to define fine grain service health settings.
     * 
     */
    public List<ActivityLogAlertCriteriaServiceHealth> serviceHealths() {
        return this.serviceHealths == null ? List.of() : this.serviceHealths;
    }
    /**
     * @return The status of the event. For example, `Started`, `Failed`, or `Succeeded`.
     * 
     */
    public Optional<String> status() {
        return Optional.ofNullable(this.status);
    }
    /**
     * @return The sub status of the event.
     * 
     */
    public Optional<String> subStatus() {
        return Optional.ofNullable(this.subStatus);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ActivityLogAlertCriteria defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String caller;
        private String category;
        private @Nullable String level;
        private @Nullable String operationName;
        private @Nullable String recommendationCategory;
        private @Nullable String recommendationImpact;
        private @Nullable String recommendationType;
        private @Nullable String resourceGroup;
        private @Nullable List<ActivityLogAlertCriteriaResourceHealth> resourceHealths;
        private @Nullable String resourceId;
        private @Nullable String resourceProvider;
        private @Nullable String resourceType;
        private @Nullable List<ActivityLogAlertCriteriaServiceHealth> serviceHealths;
        private @Nullable String status;
        private @Nullable String subStatus;
        public Builder() {}
        public Builder(ActivityLogAlertCriteria defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.caller = defaults.caller;
    	      this.category = defaults.category;
    	      this.level = defaults.level;
    	      this.operationName = defaults.operationName;
    	      this.recommendationCategory = defaults.recommendationCategory;
    	      this.recommendationImpact = defaults.recommendationImpact;
    	      this.recommendationType = defaults.recommendationType;
    	      this.resourceGroup = defaults.resourceGroup;
    	      this.resourceHealths = defaults.resourceHealths;
    	      this.resourceId = defaults.resourceId;
    	      this.resourceProvider = defaults.resourceProvider;
    	      this.resourceType = defaults.resourceType;
    	      this.serviceHealths = defaults.serviceHealths;
    	      this.status = defaults.status;
    	      this.subStatus = defaults.subStatus;
        }

        @CustomType.Setter
        public Builder caller(@Nullable String caller) {
            this.caller = caller;
            return this;
        }
        @CustomType.Setter
        public Builder category(String category) {
            this.category = Objects.requireNonNull(category);
            return this;
        }
        @CustomType.Setter
        public Builder level(@Nullable String level) {
            this.level = level;
            return this;
        }
        @CustomType.Setter
        public Builder operationName(@Nullable String operationName) {
            this.operationName = operationName;
            return this;
        }
        @CustomType.Setter
        public Builder recommendationCategory(@Nullable String recommendationCategory) {
            this.recommendationCategory = recommendationCategory;
            return this;
        }
        @CustomType.Setter
        public Builder recommendationImpact(@Nullable String recommendationImpact) {
            this.recommendationImpact = recommendationImpact;
            return this;
        }
        @CustomType.Setter
        public Builder recommendationType(@Nullable String recommendationType) {
            this.recommendationType = recommendationType;
            return this;
        }
        @CustomType.Setter
        public Builder resourceGroup(@Nullable String resourceGroup) {
            this.resourceGroup = resourceGroup;
            return this;
        }
        @CustomType.Setter
        public Builder resourceHealths(@Nullable List<ActivityLogAlertCriteriaResourceHealth> resourceHealths) {
            this.resourceHealths = resourceHealths;
            return this;
        }
        public Builder resourceHealths(ActivityLogAlertCriteriaResourceHealth... resourceHealths) {
            return resourceHealths(List.of(resourceHealths));
        }
        @CustomType.Setter
        public Builder resourceId(@Nullable String resourceId) {
            this.resourceId = resourceId;
            return this;
        }
        @CustomType.Setter
        public Builder resourceProvider(@Nullable String resourceProvider) {
            this.resourceProvider = resourceProvider;
            return this;
        }
        @CustomType.Setter
        public Builder resourceType(@Nullable String resourceType) {
            this.resourceType = resourceType;
            return this;
        }
        @CustomType.Setter
        public Builder serviceHealths(@Nullable List<ActivityLogAlertCriteriaServiceHealth> serviceHealths) {
            this.serviceHealths = serviceHealths;
            return this;
        }
        public Builder serviceHealths(ActivityLogAlertCriteriaServiceHealth... serviceHealths) {
            return serviceHealths(List.of(serviceHealths));
        }
        @CustomType.Setter
        public Builder status(@Nullable String status) {
            this.status = status;
            return this;
        }
        @CustomType.Setter
        public Builder subStatus(@Nullable String subStatus) {
            this.subStatus = subStatus;
            return this;
        }
        public ActivityLogAlertCriteria build() {
            final var o = new ActivityLogAlertCriteria();
            o.caller = caller;
            o.category = category;
            o.level = level;
            o.operationName = operationName;
            o.recommendationCategory = recommendationCategory;
            o.recommendationImpact = recommendationImpact;
            o.recommendationType = recommendationType;
            o.resourceGroup = resourceGroup;
            o.resourceHealths = resourceHealths;
            o.resourceId = resourceId;
            o.resourceProvider = resourceProvider;
            o.resourceType = resourceType;
            o.serviceHealths = serviceHealths;
            o.status = status;
            o.subStatus = subStatus;
            return o;
        }
    }
}
