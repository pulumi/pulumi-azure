// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.loadtest.outputs;

import com.pulumi.azure.loadtest.outputs.LoadTestEncryptionIdentity;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class LoadTestEncryption {
    /**
     * @return An `identity` block as defined below. Changing this forces a new Load Test to be created.
     * 
     */
    private LoadTestEncryptionIdentity identity;
    /**
     * @return The URI specifying the Key vault and key to be used to encrypt data in this resource. The URI should include the key version. Changing this forces a new Load Test to be created.
     * 
     */
    private String keyUrl;

    private LoadTestEncryption() {}
    /**
     * @return An `identity` block as defined below. Changing this forces a new Load Test to be created.
     * 
     */
    public LoadTestEncryptionIdentity identity() {
        return this.identity;
    }
    /**
     * @return The URI specifying the Key vault and key to be used to encrypt data in this resource. The URI should include the key version. Changing this forces a new Load Test to be created.
     * 
     */
    public String keyUrl() {
        return this.keyUrl;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(LoadTestEncryption defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private LoadTestEncryptionIdentity identity;
        private String keyUrl;
        public Builder() {}
        public Builder(LoadTestEncryption defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.identity = defaults.identity;
    	      this.keyUrl = defaults.keyUrl;
        }

        @CustomType.Setter
        public Builder identity(LoadTestEncryptionIdentity identity) {
            if (identity == null) {
              throw new MissingRequiredPropertyException("LoadTestEncryption", "identity");
            }
            this.identity = identity;
            return this;
        }
        @CustomType.Setter
        public Builder keyUrl(String keyUrl) {
            if (keyUrl == null) {
              throw new MissingRequiredPropertyException("LoadTestEncryption", "keyUrl");
            }
            this.keyUrl = keyUrl;
            return this;
        }
        public LoadTestEncryption build() {
            final var _resultValue = new LoadTestEncryption();
            _resultValue.identity = identity;
            _resultValue.keyUrl = keyUrl;
            return _resultValue;
        }
    }
}
