// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.oracle.outputs;

import com.pulumi.azure.oracle.outputs.GetAutonomousDatabaseLongTermBackupSchedule;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetAutonomousDatabaseResult {
    /**
     * @return The current amount of storage in use for user and system data, in terabytes (TB).
     * 
     */
    private Double actualUsedDataStorageSizeInTbs;
    /**
     * @return The amount of storage currently allocated for the database tables and billed for, rounded up. When auto-scaling is not enabled, this value is equal to the `dataStorageSizeInTBs` value. You can compare this value to the `actualUsedDataStorageSizeInTBs` value to determine if a manual shrink operation is appropriate for your allocated storage.
     * 
     */
    private Double allocatedStorageSizeInTbs;
    /**
     * @return The client IP access control list (ACL). This feature is available for [Autonomous Database Serverless] (https://docs.oracle.com/en/cloud/paas/autonomous-database/index.html) and on Exadata Cloud{@literal @}Customer. Only clients connecting from an IP address included in the ACL may access the Autonomous Database instance. If `arePrimaryWhitelistedIpsUsed` is &#39;TRUE&#39; then Autonomous Database uses this primary&#39;s IP access control list (ACL) for the disaster recovery peer called `standbywhitelistedips`.
     * 
     */
    private List<Integer> allowedIps;
    /**
     * @return Indicates if auto scaling is enabled for the Autonomous Database CPU core count.
     * 
     */
    private Boolean autoScalingEnabled;
    /**
     * @return Indicates if auto scaling is enabled for the Autonomous Database storage.
     * 
     */
    private Boolean autoScalingForStorageEnabled;
    /**
     * @return The database [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     * 
     */
    private String autonomousDatabaseId;
    /**
     * @return List of Oracle Database versions available for a database upgrade. If there are no version upgrades available, this list is empty.
     * 
     */
    private List<String> availableUpgradeVersions;
    /**
     * @return Retention period, in days, for backups.
     * 
     */
    private Integer backupRetentionPeriodInDays;
    /**
     * @return The character set for the autonomous database.
     * 
     */
    private String characterSet;
    /**
     * @return The compute amount (CPUs) available to the database.
     * 
     */
    private Double computeCount;
    /**
     * @return The number of CPU cores to be made available to the database. When the ECPU is selected, the value for cpuCoreCount is 0. For Autonomous Database on Dedicated Exadata infrastructure, the maximum number of cores is determined by the infrastructure shape. See [Characteristics of Infrastructure Shapes](https://www.oracle.com/pls/topic/lookup?ctx=en/cloud/paas/autonomous-database&amp;id=ATPFG-GUID-B0F033C1-CC5A-42F0-B2E7-3CECFEDA1FD1) for shape details.
     * 
     */
    private Integer cpuCoreCount;
    /**
     * @return The quantity of data in the database, in gigabytes.
     * 
     */
    private Integer dataStorageSizeInGbs;
    /**
     * @return The maximum storage that can be allocated for the database, in terabytes.
     * 
     */
    private Integer dataStorageSizeInTbs;
    /**
     * @return The DB node storage size in, in gigabytes.
     * 
     */
    private Integer dbNodeStorageSizeInGbs;
    /**
     * @return A valid Oracle Database version for Autonomous Database.
     * 
     */
    private String dbVersion;
    /**
     * @return The user-friendly name for the Autonomous Database. The name does not have to be unique.
     * 
     */
    private String displayName;
    /**
     * @return Indicates the number of seconds of data loss for a Data Guard failover.
     * 
     */
    private Integer failedDataRecoveryInSeconds;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return The area assigned to In-Memory tables in Autonomous Database.
     * 
     */
    private Integer inMemoryAreaInGbs;
    /**
     * @return Information about the current lifecycle state.
     * 
     */
    private String lifecycleDetails;
    /**
     * @return Parameter that allows users to select an acceptable maximum data loss limit in seconds, up to which Automatic Failover will be triggered when necessary for a Local Autonomous Data Guard
     * 
     */
    private Integer localAdgAutoFailoverMaxDataLossLimit;
    /**
     * @return Indicates whether the Autonomous Database has local (in-region) Data Guard enabled. Not applicable to cross-region Autonomous Data Guard associations, or to Autonomous Databases using dedicated Exadata infrastructure or Exadata Cloud{@literal @}Customer infrastructure.
     * 
     */
    private Boolean localDataGuardEnabled;
    /**
     * @return The Azure Region where the Autonomous Database exists.
     * 
     */
    private String location;
    /**
     * @return A `long_term_backup_schedule` block as defined below
     * 
     */
    private List<GetAutonomousDatabaseLongTermBackupSchedule> longTermBackupSchedules;
    /**
     * @return The amount of memory (in GBs) enabled per ECPU or OCPU.
     * 
     */
    private Integer memoryPerOracleComputeUnitInGbs;
    /**
     * @return Specifies if the Autonomous Database requires mTLS connections.
     * 
     */
    private Boolean mtlsConnectionRequired;
    private String name;
    /**
     * @return The national character set for the autonomous database.  The default is AL16UTF16. Allowed values are: AL16UTF16 or UTF8.
     * 
     */
    private String nationalCharacterSet;
    /**
     * @return The date and time when the next long-term backup would be created.
     * 
     */
    private String nextLongTermBackupTimeStamp;
    /**
     * @return The URL of the resource in the OCI console.
     * 
     */
    private String ociUrl;
    /**
     * @return The [OCID](https://docs.oracle.com/en-us/iaas/Content/General/Concepts/identifiers.htm) of the autonomous database.
     * 
     */
    private String ocid;
    private String peerDbId;
    /**
     * @return The list of [OCIDs](https://docs.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of standby databases located in Autonomous Data Guard remote regions that are associated with the source database. Note that for Autonomous Database Serverless instances, standby databases located in the same region as the source primary database do not have OCIDs.
     * 
     */
    private List<String> peerDbIds;
    /**
     * @return Indicates if the Autonomous Database version is a preview version.
     * 
     */
    private Boolean preview;
    /**
     * @return Indicates if the Autonomous Database version is a preview version with service terms accepted.
     * 
     */
    private Boolean previewVersionWithServiceTermsAccepted;
    /**
     * @return The private endpoint for the resource.
     * 
     */
    private String privateEndpoint;
    /**
     * @return The private endpoint Ip address for the resource.
     * 
     */
    private String privateEndpointIp;
    /**
     * @return The private endpoint label for the resource.
     * 
     */
    private String privateEndpointLabel;
    /**
     * @return An array of CPU values that an Autonomous Database can be scaled to.
     * 
     */
    private List<Integer> provisionableCpuses;
    /**
     * @return Indicates whether the Autonomous Database has Cross Region Data Guard enabled. Not applicable to Autonomous Databases using dedicated Exadata infrastructure or Exadata Cloud{@literal @}Customer infrastructure.
     * 
     */
    private Boolean remoteDataGuardEnabled;
    private String resourceGroupName;
    /**
     * @return The URL of the Service Console for the Autonomous Database.
     * 
     */
    private String serviceConsoleUrl;
    /**
     * @return The URL of the SQL web developer.
     * 
     */
    private String sqlWebDeveloperUrl;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the subnet the resource is associated with.
     * 
     */
    private String subnetId;
    /**
     * @return The list of regions that support the creation of an Autonomous Database clone or an Autonomous Data Guard standby database.
     * 
     */
    private List<String> supportedRegionsToCloneTos;
    /**
     * @return A mapping of tags assigned to the Autonomous Database.
     * 
     */
    private Map<String,String> tags;
    /**
     * @return The date and time the Autonomous Database was created.
     * 
     */
    private String timeCreated;
    /**
     * @return The date and time the Autonomous Data Guard role was switched for the Autonomous Database. For databases that have standbys in both the primary Data Guard region and a remote Data Guard standby region, this is the latest timestamp of either the database using the &#34;primary&#34; role in the primary Data Guard region, or database located in the remote Data Guard standby region.
     * 
     */
    private String timeDataGuardRoleChanged;
    /**
     * @return The date and time the Always Free database will be automatically deleted because of inactivity. If the database is in the STOPPED state and without activity until this time, it will be deleted.
     * 
     */
    private String timeDeletionOfFreeAutonomousDatabase;
    /**
     * @return The date and time that Autonomous Data Guard was enabled for an Autonomous Database where the standby was provisioned in the same region as the primary database.
     * 
     */
    private String timeLocalDataGuardEnabledOn;
    /**
     * @return The date and time when maintenance will begin.
     * 
     */
    private String timeMaintenanceBegin;
    /**
     * @return The date and time when maintenance will end.
     * 
     */
    private String timeMaintenanceEnd;
    /**
     * @return The timestamp of the last failover operation.
     * 
     */
    private String timeOfLastFailover;
    /**
     * @return The date and time when last refresh happened.
     * 
     */
    private String timeOfLastRefresh;
    /**
     * @return The refresh point timestamp (UTC). The refresh point is the time to which the database was most recently refreshed. Data created after the refresh point is not included in the refresh.
     * 
     */
    private String timeOfLastRefreshPoint;
    /**
     * @return The timestamp of the last switchover operation for the Autonomous Database.
     * 
     */
    private String timeOfLastSwitchover;
    /**
     * @return The date and time the Always Free database will be stopped because of inactivity. If this time is reached without any database activity, the database will automatically be put into the STOPPED state.
     * 
     */
    private String timeReclamationOfFreeAutonomousDatabase;
    /**
     * @return The storage space consumed by Autonomous Database in GBs.
     * 
     */
    private Integer usedDataStorageSizeInGbs;
    /**
     * @return The amount of storage that has been used, in terabytes.
     * 
     */
    private Integer usedDataStorageSizeInTbs;
    /**
     * @return The ID to an Azure Resource Manager vnet resource.
     * 
     */
    private String virtualNetworkId;

    private GetAutonomousDatabaseResult() {}
    /**
     * @return The current amount of storage in use for user and system data, in terabytes (TB).
     * 
     */
    public Double actualUsedDataStorageSizeInTbs() {
        return this.actualUsedDataStorageSizeInTbs;
    }
    /**
     * @return The amount of storage currently allocated for the database tables and billed for, rounded up. When auto-scaling is not enabled, this value is equal to the `dataStorageSizeInTBs` value. You can compare this value to the `actualUsedDataStorageSizeInTBs` value to determine if a manual shrink operation is appropriate for your allocated storage.
     * 
     */
    public Double allocatedStorageSizeInTbs() {
        return this.allocatedStorageSizeInTbs;
    }
    /**
     * @return The client IP access control list (ACL). This feature is available for [Autonomous Database Serverless] (https://docs.oracle.com/en/cloud/paas/autonomous-database/index.html) and on Exadata Cloud{@literal @}Customer. Only clients connecting from an IP address included in the ACL may access the Autonomous Database instance. If `arePrimaryWhitelistedIpsUsed` is &#39;TRUE&#39; then Autonomous Database uses this primary&#39;s IP access control list (ACL) for the disaster recovery peer called `standbywhitelistedips`.
     * 
     */
    public List<Integer> allowedIps() {
        return this.allowedIps;
    }
    /**
     * @return Indicates if auto scaling is enabled for the Autonomous Database CPU core count.
     * 
     */
    public Boolean autoScalingEnabled() {
        return this.autoScalingEnabled;
    }
    /**
     * @return Indicates if auto scaling is enabled for the Autonomous Database storage.
     * 
     */
    public Boolean autoScalingForStorageEnabled() {
        return this.autoScalingForStorageEnabled;
    }
    /**
     * @return The database [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     * 
     */
    public String autonomousDatabaseId() {
        return this.autonomousDatabaseId;
    }
    /**
     * @return List of Oracle Database versions available for a database upgrade. If there are no version upgrades available, this list is empty.
     * 
     */
    public List<String> availableUpgradeVersions() {
        return this.availableUpgradeVersions;
    }
    /**
     * @return Retention period, in days, for backups.
     * 
     */
    public Integer backupRetentionPeriodInDays() {
        return this.backupRetentionPeriodInDays;
    }
    /**
     * @return The character set for the autonomous database.
     * 
     */
    public String characterSet() {
        return this.characterSet;
    }
    /**
     * @return The compute amount (CPUs) available to the database.
     * 
     */
    public Double computeCount() {
        return this.computeCount;
    }
    /**
     * @return The number of CPU cores to be made available to the database. When the ECPU is selected, the value for cpuCoreCount is 0. For Autonomous Database on Dedicated Exadata infrastructure, the maximum number of cores is determined by the infrastructure shape. See [Characteristics of Infrastructure Shapes](https://www.oracle.com/pls/topic/lookup?ctx=en/cloud/paas/autonomous-database&amp;id=ATPFG-GUID-B0F033C1-CC5A-42F0-B2E7-3CECFEDA1FD1) for shape details.
     * 
     */
    public Integer cpuCoreCount() {
        return this.cpuCoreCount;
    }
    /**
     * @return The quantity of data in the database, in gigabytes.
     * 
     */
    public Integer dataStorageSizeInGbs() {
        return this.dataStorageSizeInGbs;
    }
    /**
     * @return The maximum storage that can be allocated for the database, in terabytes.
     * 
     */
    public Integer dataStorageSizeInTbs() {
        return this.dataStorageSizeInTbs;
    }
    /**
     * @return The DB node storage size in, in gigabytes.
     * 
     */
    public Integer dbNodeStorageSizeInGbs() {
        return this.dbNodeStorageSizeInGbs;
    }
    /**
     * @return A valid Oracle Database version for Autonomous Database.
     * 
     */
    public String dbVersion() {
        return this.dbVersion;
    }
    /**
     * @return The user-friendly name for the Autonomous Database. The name does not have to be unique.
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return Indicates the number of seconds of data loss for a Data Guard failover.
     * 
     */
    public Integer failedDataRecoveryInSeconds() {
        return this.failedDataRecoveryInSeconds;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The area assigned to In-Memory tables in Autonomous Database.
     * 
     */
    public Integer inMemoryAreaInGbs() {
        return this.inMemoryAreaInGbs;
    }
    /**
     * @return Information about the current lifecycle state.
     * 
     */
    public String lifecycleDetails() {
        return this.lifecycleDetails;
    }
    /**
     * @return Parameter that allows users to select an acceptable maximum data loss limit in seconds, up to which Automatic Failover will be triggered when necessary for a Local Autonomous Data Guard
     * 
     */
    public Integer localAdgAutoFailoverMaxDataLossLimit() {
        return this.localAdgAutoFailoverMaxDataLossLimit;
    }
    /**
     * @return Indicates whether the Autonomous Database has local (in-region) Data Guard enabled. Not applicable to cross-region Autonomous Data Guard associations, or to Autonomous Databases using dedicated Exadata infrastructure or Exadata Cloud{@literal @}Customer infrastructure.
     * 
     */
    public Boolean localDataGuardEnabled() {
        return this.localDataGuardEnabled;
    }
    /**
     * @return The Azure Region where the Autonomous Database exists.
     * 
     */
    public String location() {
        return this.location;
    }
    /**
     * @return A `long_term_backup_schedule` block as defined below
     * 
     */
    public List<GetAutonomousDatabaseLongTermBackupSchedule> longTermBackupSchedules() {
        return this.longTermBackupSchedules;
    }
    /**
     * @return The amount of memory (in GBs) enabled per ECPU or OCPU.
     * 
     */
    public Integer memoryPerOracleComputeUnitInGbs() {
        return this.memoryPerOracleComputeUnitInGbs;
    }
    /**
     * @return Specifies if the Autonomous Database requires mTLS connections.
     * 
     */
    public Boolean mtlsConnectionRequired() {
        return this.mtlsConnectionRequired;
    }
    public String name() {
        return this.name;
    }
    /**
     * @return The national character set for the autonomous database.  The default is AL16UTF16. Allowed values are: AL16UTF16 or UTF8.
     * 
     */
    public String nationalCharacterSet() {
        return this.nationalCharacterSet;
    }
    /**
     * @return The date and time when the next long-term backup would be created.
     * 
     */
    public String nextLongTermBackupTimeStamp() {
        return this.nextLongTermBackupTimeStamp;
    }
    /**
     * @return The URL of the resource in the OCI console.
     * 
     */
    public String ociUrl() {
        return this.ociUrl;
    }
    /**
     * @return The [OCID](https://docs.oracle.com/en-us/iaas/Content/General/Concepts/identifiers.htm) of the autonomous database.
     * 
     */
    public String ocid() {
        return this.ocid;
    }
    public String peerDbId() {
        return this.peerDbId;
    }
    /**
     * @return The list of [OCIDs](https://docs.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of standby databases located in Autonomous Data Guard remote regions that are associated with the source database. Note that for Autonomous Database Serverless instances, standby databases located in the same region as the source primary database do not have OCIDs.
     * 
     */
    public List<String> peerDbIds() {
        return this.peerDbIds;
    }
    /**
     * @return Indicates if the Autonomous Database version is a preview version.
     * 
     */
    public Boolean preview() {
        return this.preview;
    }
    /**
     * @return Indicates if the Autonomous Database version is a preview version with service terms accepted.
     * 
     */
    public Boolean previewVersionWithServiceTermsAccepted() {
        return this.previewVersionWithServiceTermsAccepted;
    }
    /**
     * @return The private endpoint for the resource.
     * 
     */
    public String privateEndpoint() {
        return this.privateEndpoint;
    }
    /**
     * @return The private endpoint Ip address for the resource.
     * 
     */
    public String privateEndpointIp() {
        return this.privateEndpointIp;
    }
    /**
     * @return The private endpoint label for the resource.
     * 
     */
    public String privateEndpointLabel() {
        return this.privateEndpointLabel;
    }
    /**
     * @return An array of CPU values that an Autonomous Database can be scaled to.
     * 
     */
    public List<Integer> provisionableCpuses() {
        return this.provisionableCpuses;
    }
    /**
     * @return Indicates whether the Autonomous Database has Cross Region Data Guard enabled. Not applicable to Autonomous Databases using dedicated Exadata infrastructure or Exadata Cloud{@literal @}Customer infrastructure.
     * 
     */
    public Boolean remoteDataGuardEnabled() {
        return this.remoteDataGuardEnabled;
    }
    public String resourceGroupName() {
        return this.resourceGroupName;
    }
    /**
     * @return The URL of the Service Console for the Autonomous Database.
     * 
     */
    public String serviceConsoleUrl() {
        return this.serviceConsoleUrl;
    }
    /**
     * @return The URL of the SQL web developer.
     * 
     */
    public String sqlWebDeveloperUrl() {
        return this.sqlWebDeveloperUrl;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the subnet the resource is associated with.
     * 
     */
    public String subnetId() {
        return this.subnetId;
    }
    /**
     * @return The list of regions that support the creation of an Autonomous Database clone or an Autonomous Data Guard standby database.
     * 
     */
    public List<String> supportedRegionsToCloneTos() {
        return this.supportedRegionsToCloneTos;
    }
    /**
     * @return A mapping of tags assigned to the Autonomous Database.
     * 
     */
    public Map<String,String> tags() {
        return this.tags;
    }
    /**
     * @return The date and time the Autonomous Database was created.
     * 
     */
    public String timeCreated() {
        return this.timeCreated;
    }
    /**
     * @return The date and time the Autonomous Data Guard role was switched for the Autonomous Database. For databases that have standbys in both the primary Data Guard region and a remote Data Guard standby region, this is the latest timestamp of either the database using the &#34;primary&#34; role in the primary Data Guard region, or database located in the remote Data Guard standby region.
     * 
     */
    public String timeDataGuardRoleChanged() {
        return this.timeDataGuardRoleChanged;
    }
    /**
     * @return The date and time the Always Free database will be automatically deleted because of inactivity. If the database is in the STOPPED state and without activity until this time, it will be deleted.
     * 
     */
    public String timeDeletionOfFreeAutonomousDatabase() {
        return this.timeDeletionOfFreeAutonomousDatabase;
    }
    /**
     * @return The date and time that Autonomous Data Guard was enabled for an Autonomous Database where the standby was provisioned in the same region as the primary database.
     * 
     */
    public String timeLocalDataGuardEnabledOn() {
        return this.timeLocalDataGuardEnabledOn;
    }
    /**
     * @return The date and time when maintenance will begin.
     * 
     */
    public String timeMaintenanceBegin() {
        return this.timeMaintenanceBegin;
    }
    /**
     * @return The date and time when maintenance will end.
     * 
     */
    public String timeMaintenanceEnd() {
        return this.timeMaintenanceEnd;
    }
    /**
     * @return The timestamp of the last failover operation.
     * 
     */
    public String timeOfLastFailover() {
        return this.timeOfLastFailover;
    }
    /**
     * @return The date and time when last refresh happened.
     * 
     */
    public String timeOfLastRefresh() {
        return this.timeOfLastRefresh;
    }
    /**
     * @return The refresh point timestamp (UTC). The refresh point is the time to which the database was most recently refreshed. Data created after the refresh point is not included in the refresh.
     * 
     */
    public String timeOfLastRefreshPoint() {
        return this.timeOfLastRefreshPoint;
    }
    /**
     * @return The timestamp of the last switchover operation for the Autonomous Database.
     * 
     */
    public String timeOfLastSwitchover() {
        return this.timeOfLastSwitchover;
    }
    /**
     * @return The date and time the Always Free database will be stopped because of inactivity. If this time is reached without any database activity, the database will automatically be put into the STOPPED state.
     * 
     */
    public String timeReclamationOfFreeAutonomousDatabase() {
        return this.timeReclamationOfFreeAutonomousDatabase;
    }
    /**
     * @return The storage space consumed by Autonomous Database in GBs.
     * 
     */
    public Integer usedDataStorageSizeInGbs() {
        return this.usedDataStorageSizeInGbs;
    }
    /**
     * @return The amount of storage that has been used, in terabytes.
     * 
     */
    public Integer usedDataStorageSizeInTbs() {
        return this.usedDataStorageSizeInTbs;
    }
    /**
     * @return The ID to an Azure Resource Manager vnet resource.
     * 
     */
    public String virtualNetworkId() {
        return this.virtualNetworkId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAutonomousDatabaseResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Double actualUsedDataStorageSizeInTbs;
        private Double allocatedStorageSizeInTbs;
        private List<Integer> allowedIps;
        private Boolean autoScalingEnabled;
        private Boolean autoScalingForStorageEnabled;
        private String autonomousDatabaseId;
        private List<String> availableUpgradeVersions;
        private Integer backupRetentionPeriodInDays;
        private String characterSet;
        private Double computeCount;
        private Integer cpuCoreCount;
        private Integer dataStorageSizeInGbs;
        private Integer dataStorageSizeInTbs;
        private Integer dbNodeStorageSizeInGbs;
        private String dbVersion;
        private String displayName;
        private Integer failedDataRecoveryInSeconds;
        private String id;
        private Integer inMemoryAreaInGbs;
        private String lifecycleDetails;
        private Integer localAdgAutoFailoverMaxDataLossLimit;
        private Boolean localDataGuardEnabled;
        private String location;
        private List<GetAutonomousDatabaseLongTermBackupSchedule> longTermBackupSchedules;
        private Integer memoryPerOracleComputeUnitInGbs;
        private Boolean mtlsConnectionRequired;
        private String name;
        private String nationalCharacterSet;
        private String nextLongTermBackupTimeStamp;
        private String ociUrl;
        private String ocid;
        private String peerDbId;
        private List<String> peerDbIds;
        private Boolean preview;
        private Boolean previewVersionWithServiceTermsAccepted;
        private String privateEndpoint;
        private String privateEndpointIp;
        private String privateEndpointLabel;
        private List<Integer> provisionableCpuses;
        private Boolean remoteDataGuardEnabled;
        private String resourceGroupName;
        private String serviceConsoleUrl;
        private String sqlWebDeveloperUrl;
        private String subnetId;
        private List<String> supportedRegionsToCloneTos;
        private Map<String,String> tags;
        private String timeCreated;
        private String timeDataGuardRoleChanged;
        private String timeDeletionOfFreeAutonomousDatabase;
        private String timeLocalDataGuardEnabledOn;
        private String timeMaintenanceBegin;
        private String timeMaintenanceEnd;
        private String timeOfLastFailover;
        private String timeOfLastRefresh;
        private String timeOfLastRefreshPoint;
        private String timeOfLastSwitchover;
        private String timeReclamationOfFreeAutonomousDatabase;
        private Integer usedDataStorageSizeInGbs;
        private Integer usedDataStorageSizeInTbs;
        private String virtualNetworkId;
        public Builder() {}
        public Builder(GetAutonomousDatabaseResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.actualUsedDataStorageSizeInTbs = defaults.actualUsedDataStorageSizeInTbs;
    	      this.allocatedStorageSizeInTbs = defaults.allocatedStorageSizeInTbs;
    	      this.allowedIps = defaults.allowedIps;
    	      this.autoScalingEnabled = defaults.autoScalingEnabled;
    	      this.autoScalingForStorageEnabled = defaults.autoScalingForStorageEnabled;
    	      this.autonomousDatabaseId = defaults.autonomousDatabaseId;
    	      this.availableUpgradeVersions = defaults.availableUpgradeVersions;
    	      this.backupRetentionPeriodInDays = defaults.backupRetentionPeriodInDays;
    	      this.characterSet = defaults.characterSet;
    	      this.computeCount = defaults.computeCount;
    	      this.cpuCoreCount = defaults.cpuCoreCount;
    	      this.dataStorageSizeInGbs = defaults.dataStorageSizeInGbs;
    	      this.dataStorageSizeInTbs = defaults.dataStorageSizeInTbs;
    	      this.dbNodeStorageSizeInGbs = defaults.dbNodeStorageSizeInGbs;
    	      this.dbVersion = defaults.dbVersion;
    	      this.displayName = defaults.displayName;
    	      this.failedDataRecoveryInSeconds = defaults.failedDataRecoveryInSeconds;
    	      this.id = defaults.id;
    	      this.inMemoryAreaInGbs = defaults.inMemoryAreaInGbs;
    	      this.lifecycleDetails = defaults.lifecycleDetails;
    	      this.localAdgAutoFailoverMaxDataLossLimit = defaults.localAdgAutoFailoverMaxDataLossLimit;
    	      this.localDataGuardEnabled = defaults.localDataGuardEnabled;
    	      this.location = defaults.location;
    	      this.longTermBackupSchedules = defaults.longTermBackupSchedules;
    	      this.memoryPerOracleComputeUnitInGbs = defaults.memoryPerOracleComputeUnitInGbs;
    	      this.mtlsConnectionRequired = defaults.mtlsConnectionRequired;
    	      this.name = defaults.name;
    	      this.nationalCharacterSet = defaults.nationalCharacterSet;
    	      this.nextLongTermBackupTimeStamp = defaults.nextLongTermBackupTimeStamp;
    	      this.ociUrl = defaults.ociUrl;
    	      this.ocid = defaults.ocid;
    	      this.peerDbId = defaults.peerDbId;
    	      this.peerDbIds = defaults.peerDbIds;
    	      this.preview = defaults.preview;
    	      this.previewVersionWithServiceTermsAccepted = defaults.previewVersionWithServiceTermsAccepted;
    	      this.privateEndpoint = defaults.privateEndpoint;
    	      this.privateEndpointIp = defaults.privateEndpointIp;
    	      this.privateEndpointLabel = defaults.privateEndpointLabel;
    	      this.provisionableCpuses = defaults.provisionableCpuses;
    	      this.remoteDataGuardEnabled = defaults.remoteDataGuardEnabled;
    	      this.resourceGroupName = defaults.resourceGroupName;
    	      this.serviceConsoleUrl = defaults.serviceConsoleUrl;
    	      this.sqlWebDeveloperUrl = defaults.sqlWebDeveloperUrl;
    	      this.subnetId = defaults.subnetId;
    	      this.supportedRegionsToCloneTos = defaults.supportedRegionsToCloneTos;
    	      this.tags = defaults.tags;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeDataGuardRoleChanged = defaults.timeDataGuardRoleChanged;
    	      this.timeDeletionOfFreeAutonomousDatabase = defaults.timeDeletionOfFreeAutonomousDatabase;
    	      this.timeLocalDataGuardEnabledOn = defaults.timeLocalDataGuardEnabledOn;
    	      this.timeMaintenanceBegin = defaults.timeMaintenanceBegin;
    	      this.timeMaintenanceEnd = defaults.timeMaintenanceEnd;
    	      this.timeOfLastFailover = defaults.timeOfLastFailover;
    	      this.timeOfLastRefresh = defaults.timeOfLastRefresh;
    	      this.timeOfLastRefreshPoint = defaults.timeOfLastRefreshPoint;
    	      this.timeOfLastSwitchover = defaults.timeOfLastSwitchover;
    	      this.timeReclamationOfFreeAutonomousDatabase = defaults.timeReclamationOfFreeAutonomousDatabase;
    	      this.usedDataStorageSizeInGbs = defaults.usedDataStorageSizeInGbs;
    	      this.usedDataStorageSizeInTbs = defaults.usedDataStorageSizeInTbs;
    	      this.virtualNetworkId = defaults.virtualNetworkId;
        }

        @CustomType.Setter
        public Builder actualUsedDataStorageSizeInTbs(Double actualUsedDataStorageSizeInTbs) {
            if (actualUsedDataStorageSizeInTbs == null) {
              throw new MissingRequiredPropertyException("GetAutonomousDatabaseResult", "actualUsedDataStorageSizeInTbs");
            }
            this.actualUsedDataStorageSizeInTbs = actualUsedDataStorageSizeInTbs;
            return this;
        }
        @CustomType.Setter
        public Builder allocatedStorageSizeInTbs(Double allocatedStorageSizeInTbs) {
            if (allocatedStorageSizeInTbs == null) {
              throw new MissingRequiredPropertyException("GetAutonomousDatabaseResult", "allocatedStorageSizeInTbs");
            }
            this.allocatedStorageSizeInTbs = allocatedStorageSizeInTbs;
            return this;
        }
        @CustomType.Setter
        public Builder allowedIps(List<Integer> allowedIps) {
            if (allowedIps == null) {
              throw new MissingRequiredPropertyException("GetAutonomousDatabaseResult", "allowedIps");
            }
            this.allowedIps = allowedIps;
            return this;
        }
        public Builder allowedIps(Integer... allowedIps) {
            return allowedIps(List.of(allowedIps));
        }
        @CustomType.Setter
        public Builder autoScalingEnabled(Boolean autoScalingEnabled) {
            if (autoScalingEnabled == null) {
              throw new MissingRequiredPropertyException("GetAutonomousDatabaseResult", "autoScalingEnabled");
            }
            this.autoScalingEnabled = autoScalingEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder autoScalingForStorageEnabled(Boolean autoScalingForStorageEnabled) {
            if (autoScalingForStorageEnabled == null) {
              throw new MissingRequiredPropertyException("GetAutonomousDatabaseResult", "autoScalingForStorageEnabled");
            }
            this.autoScalingForStorageEnabled = autoScalingForStorageEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder autonomousDatabaseId(String autonomousDatabaseId) {
            if (autonomousDatabaseId == null) {
              throw new MissingRequiredPropertyException("GetAutonomousDatabaseResult", "autonomousDatabaseId");
            }
            this.autonomousDatabaseId = autonomousDatabaseId;
            return this;
        }
        @CustomType.Setter
        public Builder availableUpgradeVersions(List<String> availableUpgradeVersions) {
            if (availableUpgradeVersions == null) {
              throw new MissingRequiredPropertyException("GetAutonomousDatabaseResult", "availableUpgradeVersions");
            }
            this.availableUpgradeVersions = availableUpgradeVersions;
            return this;
        }
        public Builder availableUpgradeVersions(String... availableUpgradeVersions) {
            return availableUpgradeVersions(List.of(availableUpgradeVersions));
        }
        @CustomType.Setter
        public Builder backupRetentionPeriodInDays(Integer backupRetentionPeriodInDays) {
            if (backupRetentionPeriodInDays == null) {
              throw new MissingRequiredPropertyException("GetAutonomousDatabaseResult", "backupRetentionPeriodInDays");
            }
            this.backupRetentionPeriodInDays = backupRetentionPeriodInDays;
            return this;
        }
        @CustomType.Setter
        public Builder characterSet(String characterSet) {
            if (characterSet == null) {
              throw new MissingRequiredPropertyException("GetAutonomousDatabaseResult", "characterSet");
            }
            this.characterSet = characterSet;
            return this;
        }
        @CustomType.Setter
        public Builder computeCount(Double computeCount) {
            if (computeCount == null) {
              throw new MissingRequiredPropertyException("GetAutonomousDatabaseResult", "computeCount");
            }
            this.computeCount = computeCount;
            return this;
        }
        @CustomType.Setter
        public Builder cpuCoreCount(Integer cpuCoreCount) {
            if (cpuCoreCount == null) {
              throw new MissingRequiredPropertyException("GetAutonomousDatabaseResult", "cpuCoreCount");
            }
            this.cpuCoreCount = cpuCoreCount;
            return this;
        }
        @CustomType.Setter
        public Builder dataStorageSizeInGbs(Integer dataStorageSizeInGbs) {
            if (dataStorageSizeInGbs == null) {
              throw new MissingRequiredPropertyException("GetAutonomousDatabaseResult", "dataStorageSizeInGbs");
            }
            this.dataStorageSizeInGbs = dataStorageSizeInGbs;
            return this;
        }
        @CustomType.Setter
        public Builder dataStorageSizeInTbs(Integer dataStorageSizeInTbs) {
            if (dataStorageSizeInTbs == null) {
              throw new MissingRequiredPropertyException("GetAutonomousDatabaseResult", "dataStorageSizeInTbs");
            }
            this.dataStorageSizeInTbs = dataStorageSizeInTbs;
            return this;
        }
        @CustomType.Setter
        public Builder dbNodeStorageSizeInGbs(Integer dbNodeStorageSizeInGbs) {
            if (dbNodeStorageSizeInGbs == null) {
              throw new MissingRequiredPropertyException("GetAutonomousDatabaseResult", "dbNodeStorageSizeInGbs");
            }
            this.dbNodeStorageSizeInGbs = dbNodeStorageSizeInGbs;
            return this;
        }
        @CustomType.Setter
        public Builder dbVersion(String dbVersion) {
            if (dbVersion == null) {
              throw new MissingRequiredPropertyException("GetAutonomousDatabaseResult", "dbVersion");
            }
            this.dbVersion = dbVersion;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(String displayName) {
            if (displayName == null) {
              throw new MissingRequiredPropertyException("GetAutonomousDatabaseResult", "displayName");
            }
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder failedDataRecoveryInSeconds(Integer failedDataRecoveryInSeconds) {
            if (failedDataRecoveryInSeconds == null) {
              throw new MissingRequiredPropertyException("GetAutonomousDatabaseResult", "failedDataRecoveryInSeconds");
            }
            this.failedDataRecoveryInSeconds = failedDataRecoveryInSeconds;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetAutonomousDatabaseResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder inMemoryAreaInGbs(Integer inMemoryAreaInGbs) {
            if (inMemoryAreaInGbs == null) {
              throw new MissingRequiredPropertyException("GetAutonomousDatabaseResult", "inMemoryAreaInGbs");
            }
            this.inMemoryAreaInGbs = inMemoryAreaInGbs;
            return this;
        }
        @CustomType.Setter
        public Builder lifecycleDetails(String lifecycleDetails) {
            if (lifecycleDetails == null) {
              throw new MissingRequiredPropertyException("GetAutonomousDatabaseResult", "lifecycleDetails");
            }
            this.lifecycleDetails = lifecycleDetails;
            return this;
        }
        @CustomType.Setter
        public Builder localAdgAutoFailoverMaxDataLossLimit(Integer localAdgAutoFailoverMaxDataLossLimit) {
            if (localAdgAutoFailoverMaxDataLossLimit == null) {
              throw new MissingRequiredPropertyException("GetAutonomousDatabaseResult", "localAdgAutoFailoverMaxDataLossLimit");
            }
            this.localAdgAutoFailoverMaxDataLossLimit = localAdgAutoFailoverMaxDataLossLimit;
            return this;
        }
        @CustomType.Setter
        public Builder localDataGuardEnabled(Boolean localDataGuardEnabled) {
            if (localDataGuardEnabled == null) {
              throw new MissingRequiredPropertyException("GetAutonomousDatabaseResult", "localDataGuardEnabled");
            }
            this.localDataGuardEnabled = localDataGuardEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder location(String location) {
            if (location == null) {
              throw new MissingRequiredPropertyException("GetAutonomousDatabaseResult", "location");
            }
            this.location = location;
            return this;
        }
        @CustomType.Setter
        public Builder longTermBackupSchedules(List<GetAutonomousDatabaseLongTermBackupSchedule> longTermBackupSchedules) {
            if (longTermBackupSchedules == null) {
              throw new MissingRequiredPropertyException("GetAutonomousDatabaseResult", "longTermBackupSchedules");
            }
            this.longTermBackupSchedules = longTermBackupSchedules;
            return this;
        }
        public Builder longTermBackupSchedules(GetAutonomousDatabaseLongTermBackupSchedule... longTermBackupSchedules) {
            return longTermBackupSchedules(List.of(longTermBackupSchedules));
        }
        @CustomType.Setter
        public Builder memoryPerOracleComputeUnitInGbs(Integer memoryPerOracleComputeUnitInGbs) {
            if (memoryPerOracleComputeUnitInGbs == null) {
              throw new MissingRequiredPropertyException("GetAutonomousDatabaseResult", "memoryPerOracleComputeUnitInGbs");
            }
            this.memoryPerOracleComputeUnitInGbs = memoryPerOracleComputeUnitInGbs;
            return this;
        }
        @CustomType.Setter
        public Builder mtlsConnectionRequired(Boolean mtlsConnectionRequired) {
            if (mtlsConnectionRequired == null) {
              throw new MissingRequiredPropertyException("GetAutonomousDatabaseResult", "mtlsConnectionRequired");
            }
            this.mtlsConnectionRequired = mtlsConnectionRequired;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetAutonomousDatabaseResult", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder nationalCharacterSet(String nationalCharacterSet) {
            if (nationalCharacterSet == null) {
              throw new MissingRequiredPropertyException("GetAutonomousDatabaseResult", "nationalCharacterSet");
            }
            this.nationalCharacterSet = nationalCharacterSet;
            return this;
        }
        @CustomType.Setter
        public Builder nextLongTermBackupTimeStamp(String nextLongTermBackupTimeStamp) {
            if (nextLongTermBackupTimeStamp == null) {
              throw new MissingRequiredPropertyException("GetAutonomousDatabaseResult", "nextLongTermBackupTimeStamp");
            }
            this.nextLongTermBackupTimeStamp = nextLongTermBackupTimeStamp;
            return this;
        }
        @CustomType.Setter
        public Builder ociUrl(String ociUrl) {
            if (ociUrl == null) {
              throw new MissingRequiredPropertyException("GetAutonomousDatabaseResult", "ociUrl");
            }
            this.ociUrl = ociUrl;
            return this;
        }
        @CustomType.Setter
        public Builder ocid(String ocid) {
            if (ocid == null) {
              throw new MissingRequiredPropertyException("GetAutonomousDatabaseResult", "ocid");
            }
            this.ocid = ocid;
            return this;
        }
        @CustomType.Setter
        public Builder peerDbId(String peerDbId) {
            if (peerDbId == null) {
              throw new MissingRequiredPropertyException("GetAutonomousDatabaseResult", "peerDbId");
            }
            this.peerDbId = peerDbId;
            return this;
        }
        @CustomType.Setter
        public Builder peerDbIds(List<String> peerDbIds) {
            if (peerDbIds == null) {
              throw new MissingRequiredPropertyException("GetAutonomousDatabaseResult", "peerDbIds");
            }
            this.peerDbIds = peerDbIds;
            return this;
        }
        public Builder peerDbIds(String... peerDbIds) {
            return peerDbIds(List.of(peerDbIds));
        }
        @CustomType.Setter
        public Builder preview(Boolean preview) {
            if (preview == null) {
              throw new MissingRequiredPropertyException("GetAutonomousDatabaseResult", "preview");
            }
            this.preview = preview;
            return this;
        }
        @CustomType.Setter
        public Builder previewVersionWithServiceTermsAccepted(Boolean previewVersionWithServiceTermsAccepted) {
            if (previewVersionWithServiceTermsAccepted == null) {
              throw new MissingRequiredPropertyException("GetAutonomousDatabaseResult", "previewVersionWithServiceTermsAccepted");
            }
            this.previewVersionWithServiceTermsAccepted = previewVersionWithServiceTermsAccepted;
            return this;
        }
        @CustomType.Setter
        public Builder privateEndpoint(String privateEndpoint) {
            if (privateEndpoint == null) {
              throw new MissingRequiredPropertyException("GetAutonomousDatabaseResult", "privateEndpoint");
            }
            this.privateEndpoint = privateEndpoint;
            return this;
        }
        @CustomType.Setter
        public Builder privateEndpointIp(String privateEndpointIp) {
            if (privateEndpointIp == null) {
              throw new MissingRequiredPropertyException("GetAutonomousDatabaseResult", "privateEndpointIp");
            }
            this.privateEndpointIp = privateEndpointIp;
            return this;
        }
        @CustomType.Setter
        public Builder privateEndpointLabel(String privateEndpointLabel) {
            if (privateEndpointLabel == null) {
              throw new MissingRequiredPropertyException("GetAutonomousDatabaseResult", "privateEndpointLabel");
            }
            this.privateEndpointLabel = privateEndpointLabel;
            return this;
        }
        @CustomType.Setter
        public Builder provisionableCpuses(List<Integer> provisionableCpuses) {
            if (provisionableCpuses == null) {
              throw new MissingRequiredPropertyException("GetAutonomousDatabaseResult", "provisionableCpuses");
            }
            this.provisionableCpuses = provisionableCpuses;
            return this;
        }
        public Builder provisionableCpuses(Integer... provisionableCpuses) {
            return provisionableCpuses(List.of(provisionableCpuses));
        }
        @CustomType.Setter
        public Builder remoteDataGuardEnabled(Boolean remoteDataGuardEnabled) {
            if (remoteDataGuardEnabled == null) {
              throw new MissingRequiredPropertyException("GetAutonomousDatabaseResult", "remoteDataGuardEnabled");
            }
            this.remoteDataGuardEnabled = remoteDataGuardEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder resourceGroupName(String resourceGroupName) {
            if (resourceGroupName == null) {
              throw new MissingRequiredPropertyException("GetAutonomousDatabaseResult", "resourceGroupName");
            }
            this.resourceGroupName = resourceGroupName;
            return this;
        }
        @CustomType.Setter
        public Builder serviceConsoleUrl(String serviceConsoleUrl) {
            if (serviceConsoleUrl == null) {
              throw new MissingRequiredPropertyException("GetAutonomousDatabaseResult", "serviceConsoleUrl");
            }
            this.serviceConsoleUrl = serviceConsoleUrl;
            return this;
        }
        @CustomType.Setter
        public Builder sqlWebDeveloperUrl(String sqlWebDeveloperUrl) {
            if (sqlWebDeveloperUrl == null) {
              throw new MissingRequiredPropertyException("GetAutonomousDatabaseResult", "sqlWebDeveloperUrl");
            }
            this.sqlWebDeveloperUrl = sqlWebDeveloperUrl;
            return this;
        }
        @CustomType.Setter
        public Builder subnetId(String subnetId) {
            if (subnetId == null) {
              throw new MissingRequiredPropertyException("GetAutonomousDatabaseResult", "subnetId");
            }
            this.subnetId = subnetId;
            return this;
        }
        @CustomType.Setter
        public Builder supportedRegionsToCloneTos(List<String> supportedRegionsToCloneTos) {
            if (supportedRegionsToCloneTos == null) {
              throw new MissingRequiredPropertyException("GetAutonomousDatabaseResult", "supportedRegionsToCloneTos");
            }
            this.supportedRegionsToCloneTos = supportedRegionsToCloneTos;
            return this;
        }
        public Builder supportedRegionsToCloneTos(String... supportedRegionsToCloneTos) {
            return supportedRegionsToCloneTos(List.of(supportedRegionsToCloneTos));
        }
        @CustomType.Setter
        public Builder tags(Map<String,String> tags) {
            if (tags == null) {
              throw new MissingRequiredPropertyException("GetAutonomousDatabaseResult", "tags");
            }
            this.tags = tags;
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(String timeCreated) {
            if (timeCreated == null) {
              throw new MissingRequiredPropertyException("GetAutonomousDatabaseResult", "timeCreated");
            }
            this.timeCreated = timeCreated;
            return this;
        }
        @CustomType.Setter
        public Builder timeDataGuardRoleChanged(String timeDataGuardRoleChanged) {
            if (timeDataGuardRoleChanged == null) {
              throw new MissingRequiredPropertyException("GetAutonomousDatabaseResult", "timeDataGuardRoleChanged");
            }
            this.timeDataGuardRoleChanged = timeDataGuardRoleChanged;
            return this;
        }
        @CustomType.Setter
        public Builder timeDeletionOfFreeAutonomousDatabase(String timeDeletionOfFreeAutonomousDatabase) {
            if (timeDeletionOfFreeAutonomousDatabase == null) {
              throw new MissingRequiredPropertyException("GetAutonomousDatabaseResult", "timeDeletionOfFreeAutonomousDatabase");
            }
            this.timeDeletionOfFreeAutonomousDatabase = timeDeletionOfFreeAutonomousDatabase;
            return this;
        }
        @CustomType.Setter
        public Builder timeLocalDataGuardEnabledOn(String timeLocalDataGuardEnabledOn) {
            if (timeLocalDataGuardEnabledOn == null) {
              throw new MissingRequiredPropertyException("GetAutonomousDatabaseResult", "timeLocalDataGuardEnabledOn");
            }
            this.timeLocalDataGuardEnabledOn = timeLocalDataGuardEnabledOn;
            return this;
        }
        @CustomType.Setter
        public Builder timeMaintenanceBegin(String timeMaintenanceBegin) {
            if (timeMaintenanceBegin == null) {
              throw new MissingRequiredPropertyException("GetAutonomousDatabaseResult", "timeMaintenanceBegin");
            }
            this.timeMaintenanceBegin = timeMaintenanceBegin;
            return this;
        }
        @CustomType.Setter
        public Builder timeMaintenanceEnd(String timeMaintenanceEnd) {
            if (timeMaintenanceEnd == null) {
              throw new MissingRequiredPropertyException("GetAutonomousDatabaseResult", "timeMaintenanceEnd");
            }
            this.timeMaintenanceEnd = timeMaintenanceEnd;
            return this;
        }
        @CustomType.Setter
        public Builder timeOfLastFailover(String timeOfLastFailover) {
            if (timeOfLastFailover == null) {
              throw new MissingRequiredPropertyException("GetAutonomousDatabaseResult", "timeOfLastFailover");
            }
            this.timeOfLastFailover = timeOfLastFailover;
            return this;
        }
        @CustomType.Setter
        public Builder timeOfLastRefresh(String timeOfLastRefresh) {
            if (timeOfLastRefresh == null) {
              throw new MissingRequiredPropertyException("GetAutonomousDatabaseResult", "timeOfLastRefresh");
            }
            this.timeOfLastRefresh = timeOfLastRefresh;
            return this;
        }
        @CustomType.Setter
        public Builder timeOfLastRefreshPoint(String timeOfLastRefreshPoint) {
            if (timeOfLastRefreshPoint == null) {
              throw new MissingRequiredPropertyException("GetAutonomousDatabaseResult", "timeOfLastRefreshPoint");
            }
            this.timeOfLastRefreshPoint = timeOfLastRefreshPoint;
            return this;
        }
        @CustomType.Setter
        public Builder timeOfLastSwitchover(String timeOfLastSwitchover) {
            if (timeOfLastSwitchover == null) {
              throw new MissingRequiredPropertyException("GetAutonomousDatabaseResult", "timeOfLastSwitchover");
            }
            this.timeOfLastSwitchover = timeOfLastSwitchover;
            return this;
        }
        @CustomType.Setter
        public Builder timeReclamationOfFreeAutonomousDatabase(String timeReclamationOfFreeAutonomousDatabase) {
            if (timeReclamationOfFreeAutonomousDatabase == null) {
              throw new MissingRequiredPropertyException("GetAutonomousDatabaseResult", "timeReclamationOfFreeAutonomousDatabase");
            }
            this.timeReclamationOfFreeAutonomousDatabase = timeReclamationOfFreeAutonomousDatabase;
            return this;
        }
        @CustomType.Setter
        public Builder usedDataStorageSizeInGbs(Integer usedDataStorageSizeInGbs) {
            if (usedDataStorageSizeInGbs == null) {
              throw new MissingRequiredPropertyException("GetAutonomousDatabaseResult", "usedDataStorageSizeInGbs");
            }
            this.usedDataStorageSizeInGbs = usedDataStorageSizeInGbs;
            return this;
        }
        @CustomType.Setter
        public Builder usedDataStorageSizeInTbs(Integer usedDataStorageSizeInTbs) {
            if (usedDataStorageSizeInTbs == null) {
              throw new MissingRequiredPropertyException("GetAutonomousDatabaseResult", "usedDataStorageSizeInTbs");
            }
            this.usedDataStorageSizeInTbs = usedDataStorageSizeInTbs;
            return this;
        }
        @CustomType.Setter
        public Builder virtualNetworkId(String virtualNetworkId) {
            if (virtualNetworkId == null) {
              throw new MissingRequiredPropertyException("GetAutonomousDatabaseResult", "virtualNetworkId");
            }
            this.virtualNetworkId = virtualNetworkId;
            return this;
        }
        public GetAutonomousDatabaseResult build() {
            final var _resultValue = new GetAutonomousDatabaseResult();
            _resultValue.actualUsedDataStorageSizeInTbs = actualUsedDataStorageSizeInTbs;
            _resultValue.allocatedStorageSizeInTbs = allocatedStorageSizeInTbs;
            _resultValue.allowedIps = allowedIps;
            _resultValue.autoScalingEnabled = autoScalingEnabled;
            _resultValue.autoScalingForStorageEnabled = autoScalingForStorageEnabled;
            _resultValue.autonomousDatabaseId = autonomousDatabaseId;
            _resultValue.availableUpgradeVersions = availableUpgradeVersions;
            _resultValue.backupRetentionPeriodInDays = backupRetentionPeriodInDays;
            _resultValue.characterSet = characterSet;
            _resultValue.computeCount = computeCount;
            _resultValue.cpuCoreCount = cpuCoreCount;
            _resultValue.dataStorageSizeInGbs = dataStorageSizeInGbs;
            _resultValue.dataStorageSizeInTbs = dataStorageSizeInTbs;
            _resultValue.dbNodeStorageSizeInGbs = dbNodeStorageSizeInGbs;
            _resultValue.dbVersion = dbVersion;
            _resultValue.displayName = displayName;
            _resultValue.failedDataRecoveryInSeconds = failedDataRecoveryInSeconds;
            _resultValue.id = id;
            _resultValue.inMemoryAreaInGbs = inMemoryAreaInGbs;
            _resultValue.lifecycleDetails = lifecycleDetails;
            _resultValue.localAdgAutoFailoverMaxDataLossLimit = localAdgAutoFailoverMaxDataLossLimit;
            _resultValue.localDataGuardEnabled = localDataGuardEnabled;
            _resultValue.location = location;
            _resultValue.longTermBackupSchedules = longTermBackupSchedules;
            _resultValue.memoryPerOracleComputeUnitInGbs = memoryPerOracleComputeUnitInGbs;
            _resultValue.mtlsConnectionRequired = mtlsConnectionRequired;
            _resultValue.name = name;
            _resultValue.nationalCharacterSet = nationalCharacterSet;
            _resultValue.nextLongTermBackupTimeStamp = nextLongTermBackupTimeStamp;
            _resultValue.ociUrl = ociUrl;
            _resultValue.ocid = ocid;
            _resultValue.peerDbId = peerDbId;
            _resultValue.peerDbIds = peerDbIds;
            _resultValue.preview = preview;
            _resultValue.previewVersionWithServiceTermsAccepted = previewVersionWithServiceTermsAccepted;
            _resultValue.privateEndpoint = privateEndpoint;
            _resultValue.privateEndpointIp = privateEndpointIp;
            _resultValue.privateEndpointLabel = privateEndpointLabel;
            _resultValue.provisionableCpuses = provisionableCpuses;
            _resultValue.remoteDataGuardEnabled = remoteDataGuardEnabled;
            _resultValue.resourceGroupName = resourceGroupName;
            _resultValue.serviceConsoleUrl = serviceConsoleUrl;
            _resultValue.sqlWebDeveloperUrl = sqlWebDeveloperUrl;
            _resultValue.subnetId = subnetId;
            _resultValue.supportedRegionsToCloneTos = supportedRegionsToCloneTos;
            _resultValue.tags = tags;
            _resultValue.timeCreated = timeCreated;
            _resultValue.timeDataGuardRoleChanged = timeDataGuardRoleChanged;
            _resultValue.timeDeletionOfFreeAutonomousDatabase = timeDeletionOfFreeAutonomousDatabase;
            _resultValue.timeLocalDataGuardEnabledOn = timeLocalDataGuardEnabledOn;
            _resultValue.timeMaintenanceBegin = timeMaintenanceBegin;
            _resultValue.timeMaintenanceEnd = timeMaintenanceEnd;
            _resultValue.timeOfLastFailover = timeOfLastFailover;
            _resultValue.timeOfLastRefresh = timeOfLastRefresh;
            _resultValue.timeOfLastRefreshPoint = timeOfLastRefreshPoint;
            _resultValue.timeOfLastSwitchover = timeOfLastSwitchover;
            _resultValue.timeReclamationOfFreeAutonomousDatabase = timeReclamationOfFreeAutonomousDatabase;
            _resultValue.usedDataStorageSizeInGbs = usedDataStorageSizeInGbs;
            _resultValue.usedDataStorageSizeInTbs = usedDataStorageSizeInTbs;
            _resultValue.virtualNetworkId = virtualNetworkId;
            return _resultValue;
        }
    }
}
