// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.cdn.inputs;

import com.pulumi.azure.cdn.inputs.FrontdoorFirewallPolicyCustomRuleMatchConditionArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class FrontdoorFirewallPolicyCustomRuleArgs extends com.pulumi.resources.ResourceArgs {

    public static final FrontdoorFirewallPolicyCustomRuleArgs Empty = new FrontdoorFirewallPolicyCustomRuleArgs();

    /**
     * The action to perform when the rule is matched. Possible values are `Allow`, `Block`, `Log`, or `Redirect`.
     * 
     */
    @Import(name="action", required=true)
    private Output<String> action;

    /**
     * @return The action to perform when the rule is matched. Possible values are `Allow`, `Block`, `Log`, or `Redirect`.
     * 
     */
    public Output<String> action() {
        return this.action;
    }

    /**
     * Is the rule is enabled or disabled? Defaults to `true`.
     * 
     */
    @Import(name="enabled")
    private @Nullable Output<Boolean> enabled;

    /**
     * @return Is the rule is enabled or disabled? Defaults to `true`.
     * 
     */
    public Optional<Output<Boolean>> enabled() {
        return Optional.ofNullable(this.enabled);
    }

    /**
     * One or more `match_condition` block defined below. Can support up to `10` `match_condition` blocks.
     * 
     */
    @Import(name="matchConditions")
    private @Nullable Output<List<FrontdoorFirewallPolicyCustomRuleMatchConditionArgs>> matchConditions;

    /**
     * @return One or more `match_condition` block defined below. Can support up to `10` `match_condition` blocks.
     * 
     */
    public Optional<Output<List<FrontdoorFirewallPolicyCustomRuleMatchConditionArgs>>> matchConditions() {
        return Optional.ofNullable(this.matchConditions);
    }

    /**
     * Gets name of the resource that is unique within a policy. This name can be used to access the resource.
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    /**
     * @return Gets name of the resource that is unique within a policy. This name can be used to access the resource.
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    /**
     * The priority of the rule. Rules with a lower value will be evaluated before rules with a higher value. Defaults to `1`.
     * 
     */
    @Import(name="priority")
    private @Nullable Output<Integer> priority;

    /**
     * @return The priority of the rule. Rules with a lower value will be evaluated before rules with a higher value. Defaults to `1`.
     * 
     */
    public Optional<Output<Integer>> priority() {
        return Optional.ofNullable(this.priority);
    }

    /**
     * The rate limit duration in minutes. Defaults to `1`.
     * 
     */
    @Import(name="rateLimitDurationInMinutes")
    private @Nullable Output<Integer> rateLimitDurationInMinutes;

    /**
     * @return The rate limit duration in minutes. Defaults to `1`.
     * 
     */
    public Optional<Output<Integer>> rateLimitDurationInMinutes() {
        return Optional.ofNullable(this.rateLimitDurationInMinutes);
    }

    /**
     * The rate limit threshold. Defaults to `10`.
     * 
     */
    @Import(name="rateLimitThreshold")
    private @Nullable Output<Integer> rateLimitThreshold;

    /**
     * @return The rate limit threshold. Defaults to `10`.
     * 
     */
    public Optional<Output<Integer>> rateLimitThreshold() {
        return Optional.ofNullable(this.rateLimitThreshold);
    }

    /**
     * The type of rule. Possible values are `MatchRule` or `RateLimitRule`.
     * 
     */
    @Import(name="type", required=true)
    private Output<String> type;

    /**
     * @return The type of rule. Possible values are `MatchRule` or `RateLimitRule`.
     * 
     */
    public Output<String> type() {
        return this.type;
    }

    private FrontdoorFirewallPolicyCustomRuleArgs() {}

    private FrontdoorFirewallPolicyCustomRuleArgs(FrontdoorFirewallPolicyCustomRuleArgs $) {
        this.action = $.action;
        this.enabled = $.enabled;
        this.matchConditions = $.matchConditions;
        this.name = $.name;
        this.priority = $.priority;
        this.rateLimitDurationInMinutes = $.rateLimitDurationInMinutes;
        this.rateLimitThreshold = $.rateLimitThreshold;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FrontdoorFirewallPolicyCustomRuleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FrontdoorFirewallPolicyCustomRuleArgs $;

        public Builder() {
            $ = new FrontdoorFirewallPolicyCustomRuleArgs();
        }

        public Builder(FrontdoorFirewallPolicyCustomRuleArgs defaults) {
            $ = new FrontdoorFirewallPolicyCustomRuleArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param action The action to perform when the rule is matched. Possible values are `Allow`, `Block`, `Log`, or `Redirect`.
         * 
         * @return builder
         * 
         */
        public Builder action(Output<String> action) {
            $.action = action;
            return this;
        }

        /**
         * @param action The action to perform when the rule is matched. Possible values are `Allow`, `Block`, `Log`, or `Redirect`.
         * 
         * @return builder
         * 
         */
        public Builder action(String action) {
            return action(Output.of(action));
        }

        /**
         * @param enabled Is the rule is enabled or disabled? Defaults to `true`.
         * 
         * @return builder
         * 
         */
        public Builder enabled(@Nullable Output<Boolean> enabled) {
            $.enabled = enabled;
            return this;
        }

        /**
         * @param enabled Is the rule is enabled or disabled? Defaults to `true`.
         * 
         * @return builder
         * 
         */
        public Builder enabled(Boolean enabled) {
            return enabled(Output.of(enabled));
        }

        /**
         * @param matchConditions One or more `match_condition` block defined below. Can support up to `10` `match_condition` blocks.
         * 
         * @return builder
         * 
         */
        public Builder matchConditions(@Nullable Output<List<FrontdoorFirewallPolicyCustomRuleMatchConditionArgs>> matchConditions) {
            $.matchConditions = matchConditions;
            return this;
        }

        /**
         * @param matchConditions One or more `match_condition` block defined below. Can support up to `10` `match_condition` blocks.
         * 
         * @return builder
         * 
         */
        public Builder matchConditions(List<FrontdoorFirewallPolicyCustomRuleMatchConditionArgs> matchConditions) {
            return matchConditions(Output.of(matchConditions));
        }

        /**
         * @param matchConditions One or more `match_condition` block defined below. Can support up to `10` `match_condition` blocks.
         * 
         * @return builder
         * 
         */
        public Builder matchConditions(FrontdoorFirewallPolicyCustomRuleMatchConditionArgs... matchConditions) {
            return matchConditions(List.of(matchConditions));
        }

        /**
         * @param name Gets name of the resource that is unique within a policy. This name can be used to access the resource.
         * 
         * @return builder
         * 
         */
        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Gets name of the resource that is unique within a policy. This name can be used to access the resource.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param priority The priority of the rule. Rules with a lower value will be evaluated before rules with a higher value. Defaults to `1`.
         * 
         * @return builder
         * 
         */
        public Builder priority(@Nullable Output<Integer> priority) {
            $.priority = priority;
            return this;
        }

        /**
         * @param priority The priority of the rule. Rules with a lower value will be evaluated before rules with a higher value. Defaults to `1`.
         * 
         * @return builder
         * 
         */
        public Builder priority(Integer priority) {
            return priority(Output.of(priority));
        }

        /**
         * @param rateLimitDurationInMinutes The rate limit duration in minutes. Defaults to `1`.
         * 
         * @return builder
         * 
         */
        public Builder rateLimitDurationInMinutes(@Nullable Output<Integer> rateLimitDurationInMinutes) {
            $.rateLimitDurationInMinutes = rateLimitDurationInMinutes;
            return this;
        }

        /**
         * @param rateLimitDurationInMinutes The rate limit duration in minutes. Defaults to `1`.
         * 
         * @return builder
         * 
         */
        public Builder rateLimitDurationInMinutes(Integer rateLimitDurationInMinutes) {
            return rateLimitDurationInMinutes(Output.of(rateLimitDurationInMinutes));
        }

        /**
         * @param rateLimitThreshold The rate limit threshold. Defaults to `10`.
         * 
         * @return builder
         * 
         */
        public Builder rateLimitThreshold(@Nullable Output<Integer> rateLimitThreshold) {
            $.rateLimitThreshold = rateLimitThreshold;
            return this;
        }

        /**
         * @param rateLimitThreshold The rate limit threshold. Defaults to `10`.
         * 
         * @return builder
         * 
         */
        public Builder rateLimitThreshold(Integer rateLimitThreshold) {
            return rateLimitThreshold(Output.of(rateLimitThreshold));
        }

        /**
         * @param type The type of rule. Possible values are `MatchRule` or `RateLimitRule`.
         * 
         * @return builder
         * 
         */
        public Builder type(Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type The type of rule. Possible values are `MatchRule` or `RateLimitRule`.
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        public FrontdoorFirewallPolicyCustomRuleArgs build() {
            if ($.action == null) {
                throw new MissingRequiredPropertyException("FrontdoorFirewallPolicyCustomRuleArgs", "action");
            }
            if ($.name == null) {
                throw new MissingRequiredPropertyException("FrontdoorFirewallPolicyCustomRuleArgs", "name");
            }
            if ($.type == null) {
                throw new MissingRequiredPropertyException("FrontdoorFirewallPolicyCustomRuleArgs", "type");
            }
            return $;
        }
    }

}
