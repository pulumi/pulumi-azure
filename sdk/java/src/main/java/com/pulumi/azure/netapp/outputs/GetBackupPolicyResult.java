// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.netapp.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetBackupPolicyResult {
    /**
     * @return The name of the NetApp account in which the NetApp Policy exists.
     * 
     */
    private String accountName;
    /**
     * @return The number of daily backups to keep.
     * 
     */
    private Integer dailyBackupsToKeep;
    /**
     * @return Whether the Backup Policy is enabled.
     * 
     */
    private Boolean enabled;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return NetApp Backup Policy location.
     * 
     */
    private String location;
    /**
     * @return The number of monthly backups to keep.
     * 
     */
    private Integer monthlyBackupsToKeep;
    private String name;
    private String resourceGroupName;
    /**
     * @return List of tags assigned to the resource.
     * 
     */
    private Map<String,String> tags;
    /**
     * @return The number of weekly backups to keep.
     * 
     */
    private Integer weeklyBackupsToKeep;

    private GetBackupPolicyResult() {}
    /**
     * @return The name of the NetApp account in which the NetApp Policy exists.
     * 
     */
    public String accountName() {
        return this.accountName;
    }
    /**
     * @return The number of daily backups to keep.
     * 
     */
    public Integer dailyBackupsToKeep() {
        return this.dailyBackupsToKeep;
    }
    /**
     * @return Whether the Backup Policy is enabled.
     * 
     */
    public Boolean enabled() {
        return this.enabled;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return NetApp Backup Policy location.
     * 
     */
    public String location() {
        return this.location;
    }
    /**
     * @return The number of monthly backups to keep.
     * 
     */
    public Integer monthlyBackupsToKeep() {
        return this.monthlyBackupsToKeep;
    }
    public String name() {
        return this.name;
    }
    public String resourceGroupName() {
        return this.resourceGroupName;
    }
    /**
     * @return List of tags assigned to the resource.
     * 
     */
    public Map<String,String> tags() {
        return this.tags;
    }
    /**
     * @return The number of weekly backups to keep.
     * 
     */
    public Integer weeklyBackupsToKeep() {
        return this.weeklyBackupsToKeep;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetBackupPolicyResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String accountName;
        private Integer dailyBackupsToKeep;
        private Boolean enabled;
        private String id;
        private String location;
        private Integer monthlyBackupsToKeep;
        private String name;
        private String resourceGroupName;
        private Map<String,String> tags;
        private Integer weeklyBackupsToKeep;
        public Builder() {}
        public Builder(GetBackupPolicyResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accountName = defaults.accountName;
    	      this.dailyBackupsToKeep = defaults.dailyBackupsToKeep;
    	      this.enabled = defaults.enabled;
    	      this.id = defaults.id;
    	      this.location = defaults.location;
    	      this.monthlyBackupsToKeep = defaults.monthlyBackupsToKeep;
    	      this.name = defaults.name;
    	      this.resourceGroupName = defaults.resourceGroupName;
    	      this.tags = defaults.tags;
    	      this.weeklyBackupsToKeep = defaults.weeklyBackupsToKeep;
        }

        @CustomType.Setter
        public Builder accountName(String accountName) {
            if (accountName == null) {
              throw new MissingRequiredPropertyException("GetBackupPolicyResult", "accountName");
            }
            this.accountName = accountName;
            return this;
        }
        @CustomType.Setter
        public Builder dailyBackupsToKeep(Integer dailyBackupsToKeep) {
            if (dailyBackupsToKeep == null) {
              throw new MissingRequiredPropertyException("GetBackupPolicyResult", "dailyBackupsToKeep");
            }
            this.dailyBackupsToKeep = dailyBackupsToKeep;
            return this;
        }
        @CustomType.Setter
        public Builder enabled(Boolean enabled) {
            if (enabled == null) {
              throw new MissingRequiredPropertyException("GetBackupPolicyResult", "enabled");
            }
            this.enabled = enabled;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetBackupPolicyResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder location(String location) {
            if (location == null) {
              throw new MissingRequiredPropertyException("GetBackupPolicyResult", "location");
            }
            this.location = location;
            return this;
        }
        @CustomType.Setter
        public Builder monthlyBackupsToKeep(Integer monthlyBackupsToKeep) {
            if (monthlyBackupsToKeep == null) {
              throw new MissingRequiredPropertyException("GetBackupPolicyResult", "monthlyBackupsToKeep");
            }
            this.monthlyBackupsToKeep = monthlyBackupsToKeep;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetBackupPolicyResult", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder resourceGroupName(String resourceGroupName) {
            if (resourceGroupName == null) {
              throw new MissingRequiredPropertyException("GetBackupPolicyResult", "resourceGroupName");
            }
            this.resourceGroupName = resourceGroupName;
            return this;
        }
        @CustomType.Setter
        public Builder tags(Map<String,String> tags) {
            if (tags == null) {
              throw new MissingRequiredPropertyException("GetBackupPolicyResult", "tags");
            }
            this.tags = tags;
            return this;
        }
        @CustomType.Setter
        public Builder weeklyBackupsToKeep(Integer weeklyBackupsToKeep) {
            if (weeklyBackupsToKeep == null) {
              throw new MissingRequiredPropertyException("GetBackupPolicyResult", "weeklyBackupsToKeep");
            }
            this.weeklyBackupsToKeep = weeklyBackupsToKeep;
            return this;
        }
        public GetBackupPolicyResult build() {
            final var _resultValue = new GetBackupPolicyResult();
            _resultValue.accountName = accountName;
            _resultValue.dailyBackupsToKeep = dailyBackupsToKeep;
            _resultValue.enabled = enabled;
            _resultValue.id = id;
            _resultValue.location = location;
            _resultValue.monthlyBackupsToKeep = monthlyBackupsToKeep;
            _resultValue.name = name;
            _resultValue.resourceGroupName = resourceGroupName;
            _resultValue.tags = tags;
            _resultValue.weeklyBackupsToKeep = weeklyBackupsToKeep;
            return _resultValue;
        }
    }
}
