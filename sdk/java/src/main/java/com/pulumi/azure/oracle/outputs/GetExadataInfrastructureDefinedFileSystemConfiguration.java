// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.oracle.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetExadataInfrastructureDefinedFileSystemConfiguration {
    /**
     * @return Whether the backup partition is enabled.
     * 
     */
    private Boolean backupPartitionEnabled;
    /**
     * @return The minimum size of the file system in GB.
     * 
     */
    private Integer minimumSizeInGb;
    /**
     * @return Mount path for the file system.
     * 
     */
    private String mountPoint;
    /**
     * @return Whether the resizable is enabled.
     * 
     */
    private Boolean resizableEnabled;

    private GetExadataInfrastructureDefinedFileSystemConfiguration() {}
    /**
     * @return Whether the backup partition is enabled.
     * 
     */
    public Boolean backupPartitionEnabled() {
        return this.backupPartitionEnabled;
    }
    /**
     * @return The minimum size of the file system in GB.
     * 
     */
    public Integer minimumSizeInGb() {
        return this.minimumSizeInGb;
    }
    /**
     * @return Mount path for the file system.
     * 
     */
    public String mountPoint() {
        return this.mountPoint;
    }
    /**
     * @return Whether the resizable is enabled.
     * 
     */
    public Boolean resizableEnabled() {
        return this.resizableEnabled;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetExadataInfrastructureDefinedFileSystemConfiguration defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Boolean backupPartitionEnabled;
        private Integer minimumSizeInGb;
        private String mountPoint;
        private Boolean resizableEnabled;
        public Builder() {}
        public Builder(GetExadataInfrastructureDefinedFileSystemConfiguration defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.backupPartitionEnabled = defaults.backupPartitionEnabled;
    	      this.minimumSizeInGb = defaults.minimumSizeInGb;
    	      this.mountPoint = defaults.mountPoint;
    	      this.resizableEnabled = defaults.resizableEnabled;
        }

        @CustomType.Setter
        public Builder backupPartitionEnabled(Boolean backupPartitionEnabled) {
            if (backupPartitionEnabled == null) {
              throw new MissingRequiredPropertyException("GetExadataInfrastructureDefinedFileSystemConfiguration", "backupPartitionEnabled");
            }
            this.backupPartitionEnabled = backupPartitionEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder minimumSizeInGb(Integer minimumSizeInGb) {
            if (minimumSizeInGb == null) {
              throw new MissingRequiredPropertyException("GetExadataInfrastructureDefinedFileSystemConfiguration", "minimumSizeInGb");
            }
            this.minimumSizeInGb = minimumSizeInGb;
            return this;
        }
        @CustomType.Setter
        public Builder mountPoint(String mountPoint) {
            if (mountPoint == null) {
              throw new MissingRequiredPropertyException("GetExadataInfrastructureDefinedFileSystemConfiguration", "mountPoint");
            }
            this.mountPoint = mountPoint;
            return this;
        }
        @CustomType.Setter
        public Builder resizableEnabled(Boolean resizableEnabled) {
            if (resizableEnabled == null) {
              throw new MissingRequiredPropertyException("GetExadataInfrastructureDefinedFileSystemConfiguration", "resizableEnabled");
            }
            this.resizableEnabled = resizableEnabled;
            return this;
        }
        public GetExadataInfrastructureDefinedFileSystemConfiguration build() {
            final var _resultValue = new GetExadataInfrastructureDefinedFileSystemConfiguration();
            _resultValue.backupPartitionEnabled = backupPartitionEnabled;
            _resultValue.minimumSizeInGb = minimumSizeInGb;
            _resultValue.mountPoint = mountPoint;
            _resultValue.resizableEnabled = resizableEnabled;
            return _resultValue;
        }
    }
}
