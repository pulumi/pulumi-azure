// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.appplatform.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class SpringCloudServiceContainerRegistryArgs extends com.pulumi.resources.ResourceArgs {

    public static final SpringCloudServiceContainerRegistryArgs Empty = new SpringCloudServiceContainerRegistryArgs();

    /**
     * Specifies the name of the container registry.
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    /**
     * @return Specifies the name of the container registry.
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    /**
     * Specifies the password of the container registry.
     * 
     */
    @Import(name="password", required=true)
    private Output<String> password;

    /**
     * @return Specifies the password of the container registry.
     * 
     */
    public Output<String> password() {
        return this.password;
    }

    /**
     * Specifies the login server of the container registry.
     * 
     */
    @Import(name="server", required=true)
    private Output<String> server;

    /**
     * @return Specifies the login server of the container registry.
     * 
     */
    public Output<String> server() {
        return this.server;
    }

    /**
     * Specifies the username of the container registry.
     * 
     */
    @Import(name="username", required=true)
    private Output<String> username;

    /**
     * @return Specifies the username of the container registry.
     * 
     */
    public Output<String> username() {
        return this.username;
    }

    private SpringCloudServiceContainerRegistryArgs() {}

    private SpringCloudServiceContainerRegistryArgs(SpringCloudServiceContainerRegistryArgs $) {
        this.name = $.name;
        this.password = $.password;
        this.server = $.server;
        this.username = $.username;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SpringCloudServiceContainerRegistryArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SpringCloudServiceContainerRegistryArgs $;

        public Builder() {
            $ = new SpringCloudServiceContainerRegistryArgs();
        }

        public Builder(SpringCloudServiceContainerRegistryArgs defaults) {
            $ = new SpringCloudServiceContainerRegistryArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param name Specifies the name of the container registry.
         * 
         * @return builder
         * 
         */
        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Specifies the name of the container registry.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param password Specifies the password of the container registry.
         * 
         * @return builder
         * 
         */
        public Builder password(Output<String> password) {
            $.password = password;
            return this;
        }

        /**
         * @param password Specifies the password of the container registry.
         * 
         * @return builder
         * 
         */
        public Builder password(String password) {
            return password(Output.of(password));
        }

        /**
         * @param server Specifies the login server of the container registry.
         * 
         * @return builder
         * 
         */
        public Builder server(Output<String> server) {
            $.server = server;
            return this;
        }

        /**
         * @param server Specifies the login server of the container registry.
         * 
         * @return builder
         * 
         */
        public Builder server(String server) {
            return server(Output.of(server));
        }

        /**
         * @param username Specifies the username of the container registry.
         * 
         * @return builder
         * 
         */
        public Builder username(Output<String> username) {
            $.username = username;
            return this;
        }

        /**
         * @param username Specifies the username of the container registry.
         * 
         * @return builder
         * 
         */
        public Builder username(String username) {
            return username(Output.of(username));
        }

        public SpringCloudServiceContainerRegistryArgs build() {
            if ($.name == null) {
                throw new MissingRequiredPropertyException("SpringCloudServiceContainerRegistryArgs", "name");
            }
            if ($.password == null) {
                throw new MissingRequiredPropertyException("SpringCloudServiceContainerRegistryArgs", "password");
            }
            if ($.server == null) {
                throw new MissingRequiredPropertyException("SpringCloudServiceContainerRegistryArgs", "server");
            }
            if ($.username == null) {
                throw new MissingRequiredPropertyException("SpringCloudServiceContainerRegistryArgs", "username");
            }
            return $;
        }
    }

}
