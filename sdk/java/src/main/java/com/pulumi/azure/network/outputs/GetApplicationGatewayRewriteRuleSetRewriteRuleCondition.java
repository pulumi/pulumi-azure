// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.network.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetApplicationGatewayRewriteRuleSetRewriteRuleCondition {
    /**
     * @return Whether a case insensitive comparison is performed.
     * 
     */
    private Boolean ignoreCase;
    /**
     * @return Whether the result of the condition evaluation is negated.
     * 
     */
    private Boolean negate;
    /**
     * @return The pattern, either fixed string or regular expression, that evaluates the truthfulness of the condition.
     * 
     */
    private String pattern;
    /**
     * @return The [variable](https://docs.microsoft.com/azure/application-gateway/rewrite-http-headers#server-variables) of the condition.
     * 
     */
    private String variable;

    private GetApplicationGatewayRewriteRuleSetRewriteRuleCondition() {}
    /**
     * @return Whether a case insensitive comparison is performed.
     * 
     */
    public Boolean ignoreCase() {
        return this.ignoreCase;
    }
    /**
     * @return Whether the result of the condition evaluation is negated.
     * 
     */
    public Boolean negate() {
        return this.negate;
    }
    /**
     * @return The pattern, either fixed string or regular expression, that evaluates the truthfulness of the condition.
     * 
     */
    public String pattern() {
        return this.pattern;
    }
    /**
     * @return The [variable](https://docs.microsoft.com/azure/application-gateway/rewrite-http-headers#server-variables) of the condition.
     * 
     */
    public String variable() {
        return this.variable;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetApplicationGatewayRewriteRuleSetRewriteRuleCondition defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Boolean ignoreCase;
        private Boolean negate;
        private String pattern;
        private String variable;
        public Builder() {}
        public Builder(GetApplicationGatewayRewriteRuleSetRewriteRuleCondition defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.ignoreCase = defaults.ignoreCase;
    	      this.negate = defaults.negate;
    	      this.pattern = defaults.pattern;
    	      this.variable = defaults.variable;
        }

        @CustomType.Setter
        public Builder ignoreCase(Boolean ignoreCase) {
            this.ignoreCase = Objects.requireNonNull(ignoreCase);
            return this;
        }
        @CustomType.Setter
        public Builder negate(Boolean negate) {
            this.negate = Objects.requireNonNull(negate);
            return this;
        }
        @CustomType.Setter
        public Builder pattern(String pattern) {
            this.pattern = Objects.requireNonNull(pattern);
            return this;
        }
        @CustomType.Setter
        public Builder variable(String variable) {
            this.variable = Objects.requireNonNull(variable);
            return this;
        }
        public GetApplicationGatewayRewriteRuleSetRewriteRuleCondition build() {
            final var _resultValue = new GetApplicationGatewayRewriteRuleSetRewriteRuleCondition();
            _resultValue.ignoreCase = ignoreCase;
            _resultValue.negate = negate;
            _resultValue.pattern = pattern;
            _resultValue.variable = variable;
            return _resultValue;
        }
    }
}
