// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.graph.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ServicesAccountState extends com.pulumi.resources.ResourceArgs {

    public static final ServicesAccountState Empty = new ServicesAccountState();

    /**
     * Customer owned application ID. Changing this forces a new Account to be created.
     * 
     */
    @Import(name="applicationId")
    private @Nullable Output<String> applicationId;

    /**
     * @return Customer owned application ID. Changing this forces a new Account to be created.
     * 
     */
    public Optional<Output<String>> applicationId() {
        return Optional.ofNullable(this.applicationId);
    }

    /**
     * Billing Plan Id.
     * 
     */
    @Import(name="billingPlanId")
    private @Nullable Output<String> billingPlanId;

    /**
     * @return Billing Plan Id.
     * 
     */
    public Optional<Output<String>> billingPlanId() {
        return Optional.ofNullable(this.billingPlanId);
    }

    /**
     * Specifies the name of this Account. Changing this forces a new Account to be created.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Specifies the name of this Account. Changing this forces a new Account to be created.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Specifies the name of the Resource Group within which this Account should exist. Changing this forces a new Account to be created.
     * 
     */
    @Import(name="resourceGroupName")
    private @Nullable Output<String> resourceGroupName;

    /**
     * @return Specifies the name of the Resource Group within which this Account should exist. Changing this forces a new Account to be created.
     * 
     */
    public Optional<Output<String>> resourceGroupName() {
        return Optional.ofNullable(this.resourceGroupName);
    }

    /**
     * A mapping of tags which should be assigned to the Account.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return A mapping of tags which should be assigned to the Account.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private ServicesAccountState() {}

    private ServicesAccountState(ServicesAccountState $) {
        this.applicationId = $.applicationId;
        this.billingPlanId = $.billingPlanId;
        this.name = $.name;
        this.resourceGroupName = $.resourceGroupName;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ServicesAccountState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ServicesAccountState $;

        public Builder() {
            $ = new ServicesAccountState();
        }

        public Builder(ServicesAccountState defaults) {
            $ = new ServicesAccountState(Objects.requireNonNull(defaults));
        }

        /**
         * @param applicationId Customer owned application ID. Changing this forces a new Account to be created.
         * 
         * @return builder
         * 
         */
        public Builder applicationId(@Nullable Output<String> applicationId) {
            $.applicationId = applicationId;
            return this;
        }

        /**
         * @param applicationId Customer owned application ID. Changing this forces a new Account to be created.
         * 
         * @return builder
         * 
         */
        public Builder applicationId(String applicationId) {
            return applicationId(Output.of(applicationId));
        }

        /**
         * @param billingPlanId Billing Plan Id.
         * 
         * @return builder
         * 
         */
        public Builder billingPlanId(@Nullable Output<String> billingPlanId) {
            $.billingPlanId = billingPlanId;
            return this;
        }

        /**
         * @param billingPlanId Billing Plan Id.
         * 
         * @return builder
         * 
         */
        public Builder billingPlanId(String billingPlanId) {
            return billingPlanId(Output.of(billingPlanId));
        }

        /**
         * @param name Specifies the name of this Account. Changing this forces a new Account to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Specifies the name of this Account. Changing this forces a new Account to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param resourceGroupName Specifies the name of the Resource Group within which this Account should exist. Changing this forces a new Account to be created.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(@Nullable Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName Specifies the name of the Resource Group within which this Account should exist. Changing this forces a new Account to be created.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        /**
         * @param tags A mapping of tags which should be assigned to the Account.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags A mapping of tags which should be assigned to the Account.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public ServicesAccountState build() {
            return $;
        }
    }

}
