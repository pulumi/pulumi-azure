// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.marketplace;

import com.pulumi.azure.Utilities;
import com.pulumi.azure.marketplace.RoleAssignmentArgs;
import com.pulumi.azure.marketplace.inputs.RoleAssignmentState;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Assigns a given Principal (User or Group) to a given Role in a Private Azure Marketplace.
 * 
 * ## Example Usage
 * 
 * ### Using A Role Definition Name)
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.azure.core.CoreFunctions;
 * import com.pulumi.azure.marketplace.RoleAssignment;
 * import com.pulumi.azure.marketplace.RoleAssignmentArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         final var example = CoreFunctions.getClientConfig(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference);
 * 
 *         var exampleRoleAssignment = new RoleAssignment("exampleRoleAssignment", RoleAssignmentArgs.builder()
 *             .roleDefinitionName("Marketplace Admin")
 *             .principalId(example.objectId())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ### Using A Role Definition ID)
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.azure.core.CoreFunctions;
 * import com.pulumi.azure.authorization.AuthorizationFunctions;
 * import com.pulumi.azure.authorization.inputs.GetRoleDefinitionArgs;
 * import com.pulumi.azure.marketplace.RoleAssignment;
 * import com.pulumi.azure.marketplace.RoleAssignmentArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         final var example = CoreFunctions.getClientConfig(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference);
 * 
 *         final var exampleGetRoleDefinition = AuthorizationFunctions.getRoleDefinition(GetRoleDefinitionArgs.builder()
 *             .name("Log Analytics Reader")
 *             .build());
 * 
 *         var exampleRoleAssignment = new RoleAssignment("exampleRoleAssignment", RoleAssignmentArgs.builder()
 *             .roleDefinitionId(exampleGetRoleDefinition.id())
 *             .principalId(example.objectId())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## API Providers
 * 
 * &lt;!-- This section is generated, changes will be overwritten --&gt;
 * This resource uses the following Azure API Providers:
 * 
 * * `Microsoft.Authorization`: 2022-05-01-preview, 2022-04-01
 * 
 * ## Import
 * 
 * Role Assignments can be imported using the `resource id`, e.g.
 * 
 * ```sh
 * $ pulumi import azure:marketplace/roleAssignment:RoleAssignment example /providers/Microsoft.Marketplace/providers/Microsoft.Authorization/roleAssignments/00000000-0000-0000-0000-000000000000
 * ```
 * 
 * text
 * 
 * /providers/Microsoft.Marketplace/providers/Microsoft.Authorization/roleAssignments/00000000-0000-0000-0000-000000000000|00000000-0000-0000-0000-000000000000
 * 
 */
@ResourceType(type="azure:marketplace/roleAssignment:RoleAssignment")
public class RoleAssignment extends com.pulumi.resources.CustomResource {
    /**
     * The condition that limits the resources that the role can be assigned to. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="condition", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> condition;

    /**
     * @return The condition that limits the resources that the role can be assigned to. Changing this forces a new resource to be created.
     * 
     */
    public Output<Optional<String>> condition() {
        return Codegen.optional(this.condition);
    }
    /**
     * The version of the condition. Possible values are `1.0` or `2.0`. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="conditionVersion", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> conditionVersion;

    /**
     * @return The version of the condition. Possible values are `1.0` or `2.0`. Changing this forces a new resource to be created.
     * 
     */
    public Output<Optional<String>> conditionVersion() {
        return Codegen.optional(this.conditionVersion);
    }
    /**
     * The delegated Azure Resource ID which contains a Managed Identity. Changing this forces a new resource to be created.
     * 
     * &gt; **Note:** This field is only used in cross tenant scenarios.
     * 
     */
    @Export(name="delegatedManagedIdentityResourceId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> delegatedManagedIdentityResourceId;

    /**
     * @return The delegated Azure Resource ID which contains a Managed Identity. Changing this forces a new resource to be created.
     * 
     * &gt; **Note:** This field is only used in cross tenant scenarios.
     * 
     */
    public Output<Optional<String>> delegatedManagedIdentityResourceId() {
        return Codegen.optional(this.delegatedManagedIdentityResourceId);
    }
    /**
     * The description for this Role Assignment. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> description;

    /**
     * @return The description for this Role Assignment. Changing this forces a new resource to be created.
     * 
     */
    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    /**
     * A unique UUID/GUID for this Role Assignment - one will be generated if not specified. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return A unique UUID/GUID for this Role Assignment - one will be generated if not specified. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The ID of the Principal (User, Group or Service Principal) to assign the Role Definition to. Changing this forces a new resource to be created.
     * 
     * &gt; **Note:** The Principal ID is also known as the Object ID (i.e. not the &#34;Application ID&#34; for applications). To assign Azure roles, the Principal must have `Microsoft.Authorization/roleAssignments/write` permissions. See [documentation](https://learn.microsoft.com/en-us/azure/role-based-access-control/role-assignments-portal) for more information.
     * 
     */
    @Export(name="principalId", refs={String.class}, tree="[0]")
    private Output<String> principalId;

    /**
     * @return The ID of the Principal (User, Group or Service Principal) to assign the Role Definition to. Changing this forces a new resource to be created.
     * 
     * &gt; **Note:** The Principal ID is also known as the Object ID (i.e. not the &#34;Application ID&#34; for applications). To assign Azure roles, the Principal must have `Microsoft.Authorization/roleAssignments/write` permissions. See [documentation](https://learn.microsoft.com/en-us/azure/role-based-access-control/role-assignments-portal) for more information.
     * 
     */
    public Output<String> principalId() {
        return this.principalId;
    }
    /**
     * The type of the `principal_id`, e.g. User, Group, Service Principal, Application, etc.
     * 
     */
    @Export(name="principalType", refs={String.class}, tree="[0]")
    private Output<String> principalType;

    /**
     * @return The type of the `principal_id`, e.g. User, Group, Service Principal, Application, etc.
     * 
     */
    public Output<String> principalType() {
        return this.principalType;
    }
    /**
     * The Scoped-ID of the Role Definition. Changing this forces a new resource to be created. Conflicts with `role_definition_name`.
     * 
     */
    @Export(name="roleDefinitionId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> roleDefinitionId;

    /**
     * @return The Scoped-ID of the Role Definition. Changing this forces a new resource to be created. Conflicts with `role_definition_name`.
     * 
     */
    public Output<Optional<String>> roleDefinitionId() {
        return Codegen.optional(this.roleDefinitionId);
    }
    /**
     * The name of a built-in Role. Changing this forces a new resource to be created. Conflicts with `role_definition_id`.
     * 
     * &gt; **Note:** To assign `Marketplace Admin` role, the calling Principal must first be assigned Privileged Role Administrator (like `Owner` role) or Global Administrator. See [documentation](https://learn.microsoft.com/en-us/marketplace/create-manage-private-azure-marketplace-new#prerequisites) for more information.
     * 
     */
    @Export(name="roleDefinitionName", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> roleDefinitionName;

    /**
     * @return The name of a built-in Role. Changing this forces a new resource to be created. Conflicts with `role_definition_id`.
     * 
     * &gt; **Note:** To assign `Marketplace Admin` role, the calling Principal must first be assigned Privileged Role Administrator (like `Owner` role) or Global Administrator. See [documentation](https://learn.microsoft.com/en-us/marketplace/create-manage-private-azure-marketplace-new#prerequisites) for more information.
     * 
     */
    public Output<Optional<String>> roleDefinitionName() {
        return Codegen.optional(this.roleDefinitionName);
    }
    /**
     * If the `principal_id` is a newly provisioned `Service Principal` set this value to `true` to skip the `Azure Active Directory` check which may fail due to replication lag. This argument is only valid if the `principal_id` is a `Service Principal` identity. Defaults to `false`. Changing this forces a new resource to be created.
     * 
     * &gt; **Note:** This field takes effect only when `principal_id` is a `Service Principal` identity.
     * 
     */
    @Export(name="skipServicePrincipalAadCheck", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> skipServicePrincipalAadCheck;

    /**
     * @return If the `principal_id` is a newly provisioned `Service Principal` set this value to `true` to skip the `Azure Active Directory` check which may fail due to replication lag. This argument is only valid if the `principal_id` is a `Service Principal` identity. Defaults to `false`. Changing this forces a new resource to be created.
     * 
     * &gt; **Note:** This field takes effect only when `principal_id` is a `Service Principal` identity.
     * 
     */
    public Output<Optional<Boolean>> skipServicePrincipalAadCheck() {
        return Codegen.optional(this.skipServicePrincipalAadCheck);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public RoleAssignment(java.lang.String name) {
        this(name, RoleAssignmentArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public RoleAssignment(java.lang.String name, RoleAssignmentArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public RoleAssignment(java.lang.String name, RoleAssignmentArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:marketplace/roleAssignment:RoleAssignment", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private RoleAssignment(java.lang.String name, Output<java.lang.String> id, @Nullable RoleAssignmentState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:marketplace/roleAssignment:RoleAssignment", name, state, makeResourceOptions(options, id), false);
    }

    private static RoleAssignmentArgs makeArgs(RoleAssignmentArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? RoleAssignmentArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static RoleAssignment get(java.lang.String name, Output<java.lang.String> id, @Nullable RoleAssignmentState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new RoleAssignment(name, id, state, options);
    }
}
