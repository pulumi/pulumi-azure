// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.appconfiguration.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetConfigurationStoreSecondaryWriteKey {
    /**
     * @return The Connection String for this Access Key - comprising of the Endpoint, ID and Secret.
     * 
     */
    private String connectionString;
    /**
     * @return The ID of the Access Key.
     * 
     */
    private String id;
    /**
     * @return The Secret of the Access Key.
     * 
     */
    private String secret;

    private GetConfigurationStoreSecondaryWriteKey() {}
    /**
     * @return The Connection String for this Access Key - comprising of the Endpoint, ID and Secret.
     * 
     */
    public String connectionString() {
        return this.connectionString;
    }
    /**
     * @return The ID of the Access Key.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The Secret of the Access Key.
     * 
     */
    public String secret() {
        return this.secret;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetConfigurationStoreSecondaryWriteKey defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String connectionString;
        private String id;
        private String secret;
        public Builder() {}
        public Builder(GetConfigurationStoreSecondaryWriteKey defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.connectionString = defaults.connectionString;
    	      this.id = defaults.id;
    	      this.secret = defaults.secret;
        }

        @CustomType.Setter
        public Builder connectionString(String connectionString) {
            this.connectionString = Objects.requireNonNull(connectionString);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder secret(String secret) {
            this.secret = Objects.requireNonNull(secret);
            return this;
        }
        public GetConfigurationStoreSecondaryWriteKey build() {
            final var _resultValue = new GetConfigurationStoreSecondaryWriteKey();
            _resultValue.connectionString = connectionString;
            _resultValue.id = id;
            _resultValue.secret = secret;
            return _resultValue;
        }
    }
}
