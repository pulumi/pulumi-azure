// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.mobile.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class NetworkSiteState extends com.pulumi.resources.ResourceArgs {

    public static final NetworkSiteState Empty = new NetworkSiteState();

    /**
     * The Azure Region where the Mobile Network Site should exist. Changing this forces a new Mobile Network Site to be created.
     * 
     */
    @Import(name="location")
    private @Nullable Output<String> location;

    /**
     * @return The Azure Region where the Mobile Network Site should exist. Changing this forces a new Mobile Network Site to be created.
     * 
     */
    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * the ID of the Mobile Network which the Mobile Network Site belongs to. Changing this forces a new Mobile Network Site to be created.
     * 
     */
    @Import(name="mobileNetworkId")
    private @Nullable Output<String> mobileNetworkId;

    /**
     * @return the ID of the Mobile Network which the Mobile Network Site belongs to. Changing this forces a new Mobile Network Site to be created.
     * 
     */
    public Optional<Output<String>> mobileNetworkId() {
        return Optional.ofNullable(this.mobileNetworkId);
    }

    /**
     * The name which should be used for this Mobile Network Site. Changing this forces a new Mobile Network Site to be created.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name which should be used for this Mobile Network Site. Changing this forces a new Mobile Network Site to be created.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * An array of Id of Network Functions deployed on the site.
     * 
     */
    @Import(name="networkFunctionIds")
    private @Nullable Output<List<String>> networkFunctionIds;

    /**
     * @return An array of Id of Network Functions deployed on the site.
     * 
     */
    public Optional<Output<List<String>>> networkFunctionIds() {
        return Optional.ofNullable(this.networkFunctionIds);
    }

    /**
     * A mapping of tags which should be assigned to the Mobile Network Site.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return A mapping of tags which should be assigned to the Mobile Network Site.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private NetworkSiteState() {}

    private NetworkSiteState(NetworkSiteState $) {
        this.location = $.location;
        this.mobileNetworkId = $.mobileNetworkId;
        this.name = $.name;
        this.networkFunctionIds = $.networkFunctionIds;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(NetworkSiteState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private NetworkSiteState $;

        public Builder() {
            $ = new NetworkSiteState();
        }

        public Builder(NetworkSiteState defaults) {
            $ = new NetworkSiteState(Objects.requireNonNull(defaults));
        }

        /**
         * @param location The Azure Region where the Mobile Network Site should exist. Changing this forces a new Mobile Network Site to be created.
         * 
         * @return builder
         * 
         */
        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location The Azure Region where the Mobile Network Site should exist. Changing this forces a new Mobile Network Site to be created.
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param mobileNetworkId the ID of the Mobile Network which the Mobile Network Site belongs to. Changing this forces a new Mobile Network Site to be created.
         * 
         * @return builder
         * 
         */
        public Builder mobileNetworkId(@Nullable Output<String> mobileNetworkId) {
            $.mobileNetworkId = mobileNetworkId;
            return this;
        }

        /**
         * @param mobileNetworkId the ID of the Mobile Network which the Mobile Network Site belongs to. Changing this forces a new Mobile Network Site to be created.
         * 
         * @return builder
         * 
         */
        public Builder mobileNetworkId(String mobileNetworkId) {
            return mobileNetworkId(Output.of(mobileNetworkId));
        }

        /**
         * @param name The name which should be used for this Mobile Network Site. Changing this forces a new Mobile Network Site to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name which should be used for this Mobile Network Site. Changing this forces a new Mobile Network Site to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param networkFunctionIds An array of Id of Network Functions deployed on the site.
         * 
         * @return builder
         * 
         */
        public Builder networkFunctionIds(@Nullable Output<List<String>> networkFunctionIds) {
            $.networkFunctionIds = networkFunctionIds;
            return this;
        }

        /**
         * @param networkFunctionIds An array of Id of Network Functions deployed on the site.
         * 
         * @return builder
         * 
         */
        public Builder networkFunctionIds(List<String> networkFunctionIds) {
            return networkFunctionIds(Output.of(networkFunctionIds));
        }

        /**
         * @param networkFunctionIds An array of Id of Network Functions deployed on the site.
         * 
         * @return builder
         * 
         */
        public Builder networkFunctionIds(String... networkFunctionIds) {
            return networkFunctionIds(List.of(networkFunctionIds));
        }

        /**
         * @param tags A mapping of tags which should be assigned to the Mobile Network Site.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags A mapping of tags which should be assigned to the Mobile Network Site.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public NetworkSiteState build() {
            return $;
        }
    }

}
