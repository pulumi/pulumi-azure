// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.policy.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetPolicySetDefinitionPolicyDefinitionReference {
    /**
     * @return The parameter values for the referenced policy rule. This field is a JSON object.
     * 
     */
    private String parameterValues;
    /**
     * @return The mapping of the parameter values for the referenced policy rule. The keys are the parameter names.
     * 
     */
    private Map<String,String> parameters;
    /**
     * @return The ID of the policy definition or policy set definition that is included in this policy set definition.
     * 
     */
    private String policyDefinitionId;
    /**
     * @return The list of names of the policy definition groups that this policy definition reference belongs to.
     * 
     */
    private List<String> policyGroupNames;
    /**
     * @return The unique ID within this policy set definition for this policy definition reference.
     * 
     */
    private String referenceId;

    private GetPolicySetDefinitionPolicyDefinitionReference() {}
    /**
     * @return The parameter values for the referenced policy rule. This field is a JSON object.
     * 
     */
    public String parameterValues() {
        return this.parameterValues;
    }
    /**
     * @return The mapping of the parameter values for the referenced policy rule. The keys are the parameter names.
     * 
     */
    public Map<String,String> parameters() {
        return this.parameters;
    }
    /**
     * @return The ID of the policy definition or policy set definition that is included in this policy set definition.
     * 
     */
    public String policyDefinitionId() {
        return this.policyDefinitionId;
    }
    /**
     * @return The list of names of the policy definition groups that this policy definition reference belongs to.
     * 
     */
    public List<String> policyGroupNames() {
        return this.policyGroupNames;
    }
    /**
     * @return The unique ID within this policy set definition for this policy definition reference.
     * 
     */
    public String referenceId() {
        return this.referenceId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetPolicySetDefinitionPolicyDefinitionReference defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String parameterValues;
        private Map<String,String> parameters;
        private String policyDefinitionId;
        private List<String> policyGroupNames;
        private String referenceId;
        public Builder() {}
        public Builder(GetPolicySetDefinitionPolicyDefinitionReference defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.parameterValues = defaults.parameterValues;
    	      this.parameters = defaults.parameters;
    	      this.policyDefinitionId = defaults.policyDefinitionId;
    	      this.policyGroupNames = defaults.policyGroupNames;
    	      this.referenceId = defaults.referenceId;
        }

        @CustomType.Setter
        public Builder parameterValues(String parameterValues) {
            if (parameterValues == null) {
              throw new MissingRequiredPropertyException("GetPolicySetDefinitionPolicyDefinitionReference", "parameterValues");
            }
            this.parameterValues = parameterValues;
            return this;
        }
        @CustomType.Setter
        public Builder parameters(Map<String,String> parameters) {
            if (parameters == null) {
              throw new MissingRequiredPropertyException("GetPolicySetDefinitionPolicyDefinitionReference", "parameters");
            }
            this.parameters = parameters;
            return this;
        }
        @CustomType.Setter
        public Builder policyDefinitionId(String policyDefinitionId) {
            if (policyDefinitionId == null) {
              throw new MissingRequiredPropertyException("GetPolicySetDefinitionPolicyDefinitionReference", "policyDefinitionId");
            }
            this.policyDefinitionId = policyDefinitionId;
            return this;
        }
        @CustomType.Setter
        public Builder policyGroupNames(List<String> policyGroupNames) {
            if (policyGroupNames == null) {
              throw new MissingRequiredPropertyException("GetPolicySetDefinitionPolicyDefinitionReference", "policyGroupNames");
            }
            this.policyGroupNames = policyGroupNames;
            return this;
        }
        public Builder policyGroupNames(String... policyGroupNames) {
            return policyGroupNames(List.of(policyGroupNames));
        }
        @CustomType.Setter
        public Builder referenceId(String referenceId) {
            if (referenceId == null) {
              throw new MissingRequiredPropertyException("GetPolicySetDefinitionPolicyDefinitionReference", "referenceId");
            }
            this.referenceId = referenceId;
            return this;
        }
        public GetPolicySetDefinitionPolicyDefinitionReference build() {
            final var _resultValue = new GetPolicySetDefinitionPolicyDefinitionReference();
            _resultValue.parameterValues = parameterValues;
            _resultValue.parameters = parameters;
            _resultValue.policyDefinitionId = policyDefinitionId;
            _resultValue.policyGroupNames = policyGroupNames;
            _resultValue.referenceId = referenceId;
            return _resultValue;
        }
    }
}
