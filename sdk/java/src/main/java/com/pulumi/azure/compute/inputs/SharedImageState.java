// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.compute.inputs;

import com.pulumi.azure.compute.inputs.SharedImageIdentifierArgs;
import com.pulumi.azure.compute.inputs.SharedImagePurchasePlanArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SharedImageState extends com.pulumi.resources.ResourceArgs {

    public static final SharedImageState Empty = new SharedImageState();

    /**
     * Specifies if the Shared Image supports Accelerated Network. Defaults to `false`. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="acceleratedNetworkSupportEnabled")
    private @Nullable Output<Boolean> acceleratedNetworkSupportEnabled;

    /**
     * @return Specifies if the Shared Image supports Accelerated Network. Defaults to `false`. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<Boolean>> acceleratedNetworkSupportEnabled() {
        return Optional.ofNullable(this.acceleratedNetworkSupportEnabled);
    }

    /**
     * A description of this Shared Image.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return A description of this Shared Image.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * The End User Licence Agreement for the Shared Image. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="eula")
    private @Nullable Output<String> eula;

    /**
     * @return The End User Licence Agreement for the Shared Image. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> eula() {
        return Optional.ofNullable(this.eula);
    }

    /**
     * Specifies the name of the Shared Image Gallery in which this Shared Image should exist. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="galleryName")
    private @Nullable Output<String> galleryName;

    /**
     * @return Specifies the name of the Shared Image Gallery in which this Shared Image should exist. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> galleryName() {
        return Optional.ofNullable(this.galleryName);
    }

    /**
     * The generation of HyperV that the Virtual Machine used to create the Shared Image is based on. Possible values are `V1` and `V2`. Defaults to `V1`. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="hyperVGeneration")
    private @Nullable Output<String> hyperVGeneration;

    /**
     * @return The generation of HyperV that the Virtual Machine used to create the Shared Image is based on. Possible values are `V1` and `V2`. Defaults to `V1`. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> hyperVGeneration() {
        return Optional.ofNullable(this.hyperVGeneration);
    }

    /**
     * An `identifier` block as defined below.
     * 
     */
    @Import(name="identifier")
    private @Nullable Output<SharedImageIdentifierArgs> identifier;

    /**
     * @return An `identifier` block as defined below.
     * 
     */
    public Optional<Output<SharedImageIdentifierArgs>> identifier() {
        return Optional.ofNullable(this.identifier);
    }

    /**
     * Specifies the supported Azure location where the Shared Image Gallery exists. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="location")
    private @Nullable Output<String> location;

    /**
     * @return Specifies the supported Azure location where the Shared Image Gallery exists. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * Specifies the name of the Shared Image. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Specifies the name of the Shared Image. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The type of Operating System present in this Shared Image. Possible values are `Linux` and `Windows`. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="osType")
    private @Nullable Output<String> osType;

    /**
     * @return The type of Operating System present in this Shared Image. Possible values are `Linux` and `Windows`. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> osType() {
        return Optional.ofNullable(this.osType);
    }

    /**
     * The URI containing the Privacy Statement associated with this Shared Image. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="privacyStatementUri")
    private @Nullable Output<String> privacyStatementUri;

    /**
     * @return The URI containing the Privacy Statement associated with this Shared Image. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> privacyStatementUri() {
        return Optional.ofNullable(this.privacyStatementUri);
    }

    /**
     * A `purchase_plan` block as defined below.
     * 
     */
    @Import(name="purchasePlan")
    private @Nullable Output<SharedImagePurchasePlanArgs> purchasePlan;

    /**
     * @return A `purchase_plan` block as defined below.
     * 
     */
    public Optional<Output<SharedImagePurchasePlanArgs>> purchasePlan() {
        return Optional.ofNullable(this.purchasePlan);
    }

    /**
     * The URI containing the Release Notes associated with this Shared Image.
     * 
     */
    @Import(name="releaseNoteUri")
    private @Nullable Output<String> releaseNoteUri;

    /**
     * @return The URI containing the Release Notes associated with this Shared Image.
     * 
     */
    public Optional<Output<String>> releaseNoteUri() {
        return Optional.ofNullable(this.releaseNoteUri);
    }

    /**
     * The name of the resource group in which the Shared Image Gallery exists. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="resourceGroupName")
    private @Nullable Output<String> resourceGroupName;

    /**
     * @return The name of the resource group in which the Shared Image Gallery exists. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> resourceGroupName() {
        return Optional.ofNullable(this.resourceGroupName);
    }

    /**
     * Specifies that the Operating System used inside this Image has not been Generalized (for example, `sysprep` on Windows has not been run). Defaults to `false`. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="specialized")
    private @Nullable Output<Boolean> specialized;

    /**
     * @return Specifies that the Operating System used inside this Image has not been Generalized (for example, `sysprep` on Windows has not been run). Defaults to `false`. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<Boolean>> specialized() {
        return Optional.ofNullable(this.specialized);
    }

    /**
     * A mapping of tags to assign to the Shared Image.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return A mapping of tags to assign to the Shared Image.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * Specifies if Trusted Launch has to be enabled for the Virtual Machine created from the Shared Image. Defaults to `false`. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="trustedLaunchEnabled")
    private @Nullable Output<Boolean> trustedLaunchEnabled;

    /**
     * @return Specifies if Trusted Launch has to be enabled for the Virtual Machine created from the Shared Image. Defaults to `false`. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<Boolean>> trustedLaunchEnabled() {
        return Optional.ofNullable(this.trustedLaunchEnabled);
    }

    private SharedImageState() {}

    private SharedImageState(SharedImageState $) {
        this.acceleratedNetworkSupportEnabled = $.acceleratedNetworkSupportEnabled;
        this.description = $.description;
        this.eula = $.eula;
        this.galleryName = $.galleryName;
        this.hyperVGeneration = $.hyperVGeneration;
        this.identifier = $.identifier;
        this.location = $.location;
        this.name = $.name;
        this.osType = $.osType;
        this.privacyStatementUri = $.privacyStatementUri;
        this.purchasePlan = $.purchasePlan;
        this.releaseNoteUri = $.releaseNoteUri;
        this.resourceGroupName = $.resourceGroupName;
        this.specialized = $.specialized;
        this.tags = $.tags;
        this.trustedLaunchEnabled = $.trustedLaunchEnabled;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SharedImageState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SharedImageState $;

        public Builder() {
            $ = new SharedImageState();
        }

        public Builder(SharedImageState defaults) {
            $ = new SharedImageState(Objects.requireNonNull(defaults));
        }

        /**
         * @param acceleratedNetworkSupportEnabled Specifies if the Shared Image supports Accelerated Network. Defaults to `false`. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder acceleratedNetworkSupportEnabled(@Nullable Output<Boolean> acceleratedNetworkSupportEnabled) {
            $.acceleratedNetworkSupportEnabled = acceleratedNetworkSupportEnabled;
            return this;
        }

        /**
         * @param acceleratedNetworkSupportEnabled Specifies if the Shared Image supports Accelerated Network. Defaults to `false`. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder acceleratedNetworkSupportEnabled(Boolean acceleratedNetworkSupportEnabled) {
            return acceleratedNetworkSupportEnabled(Output.of(acceleratedNetworkSupportEnabled));
        }

        /**
         * @param description A description of this Shared Image.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description A description of this Shared Image.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param eula The End User Licence Agreement for the Shared Image. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder eula(@Nullable Output<String> eula) {
            $.eula = eula;
            return this;
        }

        /**
         * @param eula The End User Licence Agreement for the Shared Image. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder eula(String eula) {
            return eula(Output.of(eula));
        }

        /**
         * @param galleryName Specifies the name of the Shared Image Gallery in which this Shared Image should exist. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder galleryName(@Nullable Output<String> galleryName) {
            $.galleryName = galleryName;
            return this;
        }

        /**
         * @param galleryName Specifies the name of the Shared Image Gallery in which this Shared Image should exist. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder galleryName(String galleryName) {
            return galleryName(Output.of(galleryName));
        }

        /**
         * @param hyperVGeneration The generation of HyperV that the Virtual Machine used to create the Shared Image is based on. Possible values are `V1` and `V2`. Defaults to `V1`. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder hyperVGeneration(@Nullable Output<String> hyperVGeneration) {
            $.hyperVGeneration = hyperVGeneration;
            return this;
        }

        /**
         * @param hyperVGeneration The generation of HyperV that the Virtual Machine used to create the Shared Image is based on. Possible values are `V1` and `V2`. Defaults to `V1`. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder hyperVGeneration(String hyperVGeneration) {
            return hyperVGeneration(Output.of(hyperVGeneration));
        }

        /**
         * @param identifier An `identifier` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder identifier(@Nullable Output<SharedImageIdentifierArgs> identifier) {
            $.identifier = identifier;
            return this;
        }

        /**
         * @param identifier An `identifier` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder identifier(SharedImageIdentifierArgs identifier) {
            return identifier(Output.of(identifier));
        }

        /**
         * @param location Specifies the supported Azure location where the Shared Image Gallery exists. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location Specifies the supported Azure location where the Shared Image Gallery exists. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param name Specifies the name of the Shared Image. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Specifies the name of the Shared Image. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param osType The type of Operating System present in this Shared Image. Possible values are `Linux` and `Windows`. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder osType(@Nullable Output<String> osType) {
            $.osType = osType;
            return this;
        }

        /**
         * @param osType The type of Operating System present in this Shared Image. Possible values are `Linux` and `Windows`. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder osType(String osType) {
            return osType(Output.of(osType));
        }

        /**
         * @param privacyStatementUri The URI containing the Privacy Statement associated with this Shared Image. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder privacyStatementUri(@Nullable Output<String> privacyStatementUri) {
            $.privacyStatementUri = privacyStatementUri;
            return this;
        }

        /**
         * @param privacyStatementUri The URI containing the Privacy Statement associated with this Shared Image. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder privacyStatementUri(String privacyStatementUri) {
            return privacyStatementUri(Output.of(privacyStatementUri));
        }

        /**
         * @param purchasePlan A `purchase_plan` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder purchasePlan(@Nullable Output<SharedImagePurchasePlanArgs> purchasePlan) {
            $.purchasePlan = purchasePlan;
            return this;
        }

        /**
         * @param purchasePlan A `purchase_plan` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder purchasePlan(SharedImagePurchasePlanArgs purchasePlan) {
            return purchasePlan(Output.of(purchasePlan));
        }

        /**
         * @param releaseNoteUri The URI containing the Release Notes associated with this Shared Image.
         * 
         * @return builder
         * 
         */
        public Builder releaseNoteUri(@Nullable Output<String> releaseNoteUri) {
            $.releaseNoteUri = releaseNoteUri;
            return this;
        }

        /**
         * @param releaseNoteUri The URI containing the Release Notes associated with this Shared Image.
         * 
         * @return builder
         * 
         */
        public Builder releaseNoteUri(String releaseNoteUri) {
            return releaseNoteUri(Output.of(releaseNoteUri));
        }

        /**
         * @param resourceGroupName The name of the resource group in which the Shared Image Gallery exists. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(@Nullable Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName The name of the resource group in which the Shared Image Gallery exists. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        /**
         * @param specialized Specifies that the Operating System used inside this Image has not been Generalized (for example, `sysprep` on Windows has not been run). Defaults to `false`. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder specialized(@Nullable Output<Boolean> specialized) {
            $.specialized = specialized;
            return this;
        }

        /**
         * @param specialized Specifies that the Operating System used inside this Image has not been Generalized (for example, `sysprep` on Windows has not been run). Defaults to `false`. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder specialized(Boolean specialized) {
            return specialized(Output.of(specialized));
        }

        /**
         * @param tags A mapping of tags to assign to the Shared Image.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags A mapping of tags to assign to the Shared Image.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param trustedLaunchEnabled Specifies if Trusted Launch has to be enabled for the Virtual Machine created from the Shared Image. Defaults to `false`. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder trustedLaunchEnabled(@Nullable Output<Boolean> trustedLaunchEnabled) {
            $.trustedLaunchEnabled = trustedLaunchEnabled;
            return this;
        }

        /**
         * @param trustedLaunchEnabled Specifies if Trusted Launch has to be enabled for the Virtual Machine created from the Shared Image. Defaults to `false`. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder trustedLaunchEnabled(Boolean trustedLaunchEnabled) {
            return trustedLaunchEnabled(Output.of(trustedLaunchEnabled));
        }

        public SharedImageState build() {
            return $;
        }
    }

}
