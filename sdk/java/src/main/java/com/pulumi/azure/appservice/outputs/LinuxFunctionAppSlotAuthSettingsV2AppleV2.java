// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.appservice.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class LinuxFunctionAppSlotAuthSettingsV2AppleV2 {
    /**
     * @return The OpenID Connect Client ID for the Apple web application.
     * 
     */
    private String clientId;
    /**
     * @return The app setting name that contains the `clientSecret` value used for Apple Login.
     * 
     * !&gt; **Note:** A setting with this name must exist in `appSettings` to function correctly.
     * 
     */
    private String clientSecretSettingName;
    /**
     * @return A list of Login Scopes provided by this Authentication Provider.
     * 
     * &gt; **Note:** This is configured on the Authentication Provider side and is Read Only here.
     * 
     */
    private @Nullable List<String> loginScopes;

    private LinuxFunctionAppSlotAuthSettingsV2AppleV2() {}
    /**
     * @return The OpenID Connect Client ID for the Apple web application.
     * 
     */
    public String clientId() {
        return this.clientId;
    }
    /**
     * @return The app setting name that contains the `clientSecret` value used for Apple Login.
     * 
     * !&gt; **Note:** A setting with this name must exist in `appSettings` to function correctly.
     * 
     */
    public String clientSecretSettingName() {
        return this.clientSecretSettingName;
    }
    /**
     * @return A list of Login Scopes provided by this Authentication Provider.
     * 
     * &gt; **Note:** This is configured on the Authentication Provider side and is Read Only here.
     * 
     */
    public List<String> loginScopes() {
        return this.loginScopes == null ? List.of() : this.loginScopes;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(LinuxFunctionAppSlotAuthSettingsV2AppleV2 defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String clientId;
        private String clientSecretSettingName;
        private @Nullable List<String> loginScopes;
        public Builder() {}
        public Builder(LinuxFunctionAppSlotAuthSettingsV2AppleV2 defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.clientId = defaults.clientId;
    	      this.clientSecretSettingName = defaults.clientSecretSettingName;
    	      this.loginScopes = defaults.loginScopes;
        }

        @CustomType.Setter
        public Builder clientId(String clientId) {
            if (clientId == null) {
              throw new MissingRequiredPropertyException("LinuxFunctionAppSlotAuthSettingsV2AppleV2", "clientId");
            }
            this.clientId = clientId;
            return this;
        }
        @CustomType.Setter
        public Builder clientSecretSettingName(String clientSecretSettingName) {
            if (clientSecretSettingName == null) {
              throw new MissingRequiredPropertyException("LinuxFunctionAppSlotAuthSettingsV2AppleV2", "clientSecretSettingName");
            }
            this.clientSecretSettingName = clientSecretSettingName;
            return this;
        }
        @CustomType.Setter
        public Builder loginScopes(@Nullable List<String> loginScopes) {

            this.loginScopes = loginScopes;
            return this;
        }
        public Builder loginScopes(String... loginScopes) {
            return loginScopes(List.of(loginScopes));
        }
        public LinuxFunctionAppSlotAuthSettingsV2AppleV2 build() {
            final var _resultValue = new LinuxFunctionAppSlotAuthSettingsV2AppleV2();
            _resultValue.clientId = clientId;
            _resultValue.clientSecretSettingName = clientSecretSettingName;
            _resultValue.loginScopes = loginScopes;
            return _resultValue;
        }
    }
}
