// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.devcenter.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class ProjectEnvironmentTypeUserRoleAssignment {
    /**
     * @return A list of roles to assign to the `user_id`.
     * 
     */
    private List<String> roles;
    /**
     * @return The user object ID that is assigned roles.
     * 
     */
    private String userId;

    private ProjectEnvironmentTypeUserRoleAssignment() {}
    /**
     * @return A list of roles to assign to the `user_id`.
     * 
     */
    public List<String> roles() {
        return this.roles;
    }
    /**
     * @return The user object ID that is assigned roles.
     * 
     */
    public String userId() {
        return this.userId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ProjectEnvironmentTypeUserRoleAssignment defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<String> roles;
        private String userId;
        public Builder() {}
        public Builder(ProjectEnvironmentTypeUserRoleAssignment defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.roles = defaults.roles;
    	      this.userId = defaults.userId;
        }

        @CustomType.Setter
        public Builder roles(List<String> roles) {
            if (roles == null) {
              throw new MissingRequiredPropertyException("ProjectEnvironmentTypeUserRoleAssignment", "roles");
            }
            this.roles = roles;
            return this;
        }
        public Builder roles(String... roles) {
            return roles(List.of(roles));
        }
        @CustomType.Setter
        public Builder userId(String userId) {
            if (userId == null) {
              throw new MissingRequiredPropertyException("ProjectEnvironmentTypeUserRoleAssignment", "userId");
            }
            this.userId = userId;
            return this;
        }
        public ProjectEnvironmentTypeUserRoleAssignment build() {
            final var _resultValue = new ProjectEnvironmentTypeUserRoleAssignment();
            _resultValue.roles = roles;
            _resultValue.userId = userId;
            return _resultValue;
        }
    }
}
