// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.storage.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AccountQueuePropertiesLoggingArgs extends com.pulumi.resources.ResourceArgs {

    public static final AccountQueuePropertiesLoggingArgs Empty = new AccountQueuePropertiesLoggingArgs();

    /**
     * Indicates whether all delete requests should be logged. Changing this forces a new resource.
     * 
     */
    @Import(name="delete", required=true)
    private Output<Boolean> delete;

    /**
     * @return Indicates whether all delete requests should be logged. Changing this forces a new resource.
     * 
     */
    public Output<Boolean> delete() {
        return this.delete;
    }

    /**
     * Indicates whether all read requests should be logged. Changing this forces a new resource.
     * 
     */
    @Import(name="read", required=true)
    private Output<Boolean> read;

    /**
     * @return Indicates whether all read requests should be logged. Changing this forces a new resource.
     * 
     */
    public Output<Boolean> read() {
        return this.read;
    }

    /**
     * Specifies the number of days that logs will be retained. Changing this forces a new resource.
     * 
     */
    @Import(name="retentionPolicyDays")
    private @Nullable Output<Integer> retentionPolicyDays;

    /**
     * @return Specifies the number of days that logs will be retained. Changing this forces a new resource.
     * 
     */
    public Optional<Output<Integer>> retentionPolicyDays() {
        return Optional.ofNullable(this.retentionPolicyDays);
    }

    /**
     * The version of storage analytics to configure. Changing this forces a new resource.
     * 
     */
    @Import(name="version", required=true)
    private Output<String> version;

    /**
     * @return The version of storage analytics to configure. Changing this forces a new resource.
     * 
     */
    public Output<String> version() {
        return this.version;
    }

    /**
     * Indicates whether all write requests should be logged. Changing this forces a new resource.
     * 
     */
    @Import(name="write", required=true)
    private Output<Boolean> write;

    /**
     * @return Indicates whether all write requests should be logged. Changing this forces a new resource.
     * 
     */
    public Output<Boolean> write() {
        return this.write;
    }

    private AccountQueuePropertiesLoggingArgs() {}

    private AccountQueuePropertiesLoggingArgs(AccountQueuePropertiesLoggingArgs $) {
        this.delete = $.delete;
        this.read = $.read;
        this.retentionPolicyDays = $.retentionPolicyDays;
        this.version = $.version;
        this.write = $.write;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AccountQueuePropertiesLoggingArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AccountQueuePropertiesLoggingArgs $;

        public Builder() {
            $ = new AccountQueuePropertiesLoggingArgs();
        }

        public Builder(AccountQueuePropertiesLoggingArgs defaults) {
            $ = new AccountQueuePropertiesLoggingArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param delete Indicates whether all delete requests should be logged. Changing this forces a new resource.
         * 
         * @return builder
         * 
         */
        public Builder delete(Output<Boolean> delete) {
            $.delete = delete;
            return this;
        }

        /**
         * @param delete Indicates whether all delete requests should be logged. Changing this forces a new resource.
         * 
         * @return builder
         * 
         */
        public Builder delete(Boolean delete) {
            return delete(Output.of(delete));
        }

        /**
         * @param read Indicates whether all read requests should be logged. Changing this forces a new resource.
         * 
         * @return builder
         * 
         */
        public Builder read(Output<Boolean> read) {
            $.read = read;
            return this;
        }

        /**
         * @param read Indicates whether all read requests should be logged. Changing this forces a new resource.
         * 
         * @return builder
         * 
         */
        public Builder read(Boolean read) {
            return read(Output.of(read));
        }

        /**
         * @param retentionPolicyDays Specifies the number of days that logs will be retained. Changing this forces a new resource.
         * 
         * @return builder
         * 
         */
        public Builder retentionPolicyDays(@Nullable Output<Integer> retentionPolicyDays) {
            $.retentionPolicyDays = retentionPolicyDays;
            return this;
        }

        /**
         * @param retentionPolicyDays Specifies the number of days that logs will be retained. Changing this forces a new resource.
         * 
         * @return builder
         * 
         */
        public Builder retentionPolicyDays(Integer retentionPolicyDays) {
            return retentionPolicyDays(Output.of(retentionPolicyDays));
        }

        /**
         * @param version The version of storage analytics to configure. Changing this forces a new resource.
         * 
         * @return builder
         * 
         */
        public Builder version(Output<String> version) {
            $.version = version;
            return this;
        }

        /**
         * @param version The version of storage analytics to configure. Changing this forces a new resource.
         * 
         * @return builder
         * 
         */
        public Builder version(String version) {
            return version(Output.of(version));
        }

        /**
         * @param write Indicates whether all write requests should be logged. Changing this forces a new resource.
         * 
         * @return builder
         * 
         */
        public Builder write(Output<Boolean> write) {
            $.write = write;
            return this;
        }

        /**
         * @param write Indicates whether all write requests should be logged. Changing this forces a new resource.
         * 
         * @return builder
         * 
         */
        public Builder write(Boolean write) {
            return write(Output.of(write));
        }

        public AccountQueuePropertiesLoggingArgs build() {
            $.delete = Objects.requireNonNull($.delete, "expected parameter 'delete' to be non-null");
            $.read = Objects.requireNonNull($.read, "expected parameter 'read' to be non-null");
            $.version = Objects.requireNonNull($.version, "expected parameter 'version' to be non-null");
            $.write = Objects.requireNonNull($.write, "expected parameter 'write' to be non-null");
            return $;
        }
    }

}
