// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.cosmosdb.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AccountGeoLocationArgs extends com.pulumi.resources.ResourceArgs {

    public static final AccountGeoLocationArgs Empty = new AccountGeoLocationArgs();

    /**
     * The failover priority of the region. A failover priority of `0` indicates a write region. The maximum value for a failover priority = (total number of regions - 1). Failover priority values must be unique for each of the regions in which the database account exists. Changing this causes the location to be re-provisioned and cannot be changed for the location with failover priority `0`.
     * 
     */
    @Import(name="failoverPriority", required=true)
    private Output<Integer> failoverPriority;

    /**
     * @return The failover priority of the region. A failover priority of `0` indicates a write region. The maximum value for a failover priority = (total number of regions - 1). Failover priority values must be unique for each of the regions in which the database account exists. Changing this causes the location to be re-provisioned and cannot be changed for the location with failover priority `0`.
     * 
     */
    public Output<Integer> failoverPriority() {
        return this.failoverPriority;
    }

    /**
     * The ID of the virtual network subnet.
     * 
     */
    @Import(name="id")
    private @Nullable Output<String> id;

    /**
     * @return The ID of the virtual network subnet.
     * 
     */
    public Optional<Output<String>> id() {
        return Optional.ofNullable(this.id);
    }

    /**
     * The name of the Azure region to host replicated data.
     * 
     */
    @Import(name="location", required=true)
    private Output<String> location;

    /**
     * @return The name of the Azure region to host replicated data.
     * 
     */
    public Output<String> location() {
        return this.location;
    }

    /**
     * Should zone redundancy be enabled for this region? Defaults to `false`.
     * 
     */
    @Import(name="zoneRedundant")
    private @Nullable Output<Boolean> zoneRedundant;

    /**
     * @return Should zone redundancy be enabled for this region? Defaults to `false`.
     * 
     */
    public Optional<Output<Boolean>> zoneRedundant() {
        return Optional.ofNullable(this.zoneRedundant);
    }

    private AccountGeoLocationArgs() {}

    private AccountGeoLocationArgs(AccountGeoLocationArgs $) {
        this.failoverPriority = $.failoverPriority;
        this.id = $.id;
        this.location = $.location;
        this.zoneRedundant = $.zoneRedundant;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AccountGeoLocationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AccountGeoLocationArgs $;

        public Builder() {
            $ = new AccountGeoLocationArgs();
        }

        public Builder(AccountGeoLocationArgs defaults) {
            $ = new AccountGeoLocationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param failoverPriority The failover priority of the region. A failover priority of `0` indicates a write region. The maximum value for a failover priority = (total number of regions - 1). Failover priority values must be unique for each of the regions in which the database account exists. Changing this causes the location to be re-provisioned and cannot be changed for the location with failover priority `0`.
         * 
         * @return builder
         * 
         */
        public Builder failoverPriority(Output<Integer> failoverPriority) {
            $.failoverPriority = failoverPriority;
            return this;
        }

        /**
         * @param failoverPriority The failover priority of the region. A failover priority of `0` indicates a write region. The maximum value for a failover priority = (total number of regions - 1). Failover priority values must be unique for each of the regions in which the database account exists. Changing this causes the location to be re-provisioned and cannot be changed for the location with failover priority `0`.
         * 
         * @return builder
         * 
         */
        public Builder failoverPriority(Integer failoverPriority) {
            return failoverPriority(Output.of(failoverPriority));
        }

        /**
         * @param id The ID of the virtual network subnet.
         * 
         * @return builder
         * 
         */
        public Builder id(@Nullable Output<String> id) {
            $.id = id;
            return this;
        }

        /**
         * @param id The ID of the virtual network subnet.
         * 
         * @return builder
         * 
         */
        public Builder id(String id) {
            return id(Output.of(id));
        }

        /**
         * @param location The name of the Azure region to host replicated data.
         * 
         * @return builder
         * 
         */
        public Builder location(Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location The name of the Azure region to host replicated data.
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param zoneRedundant Should zone redundancy be enabled for this region? Defaults to `false`.
         * 
         * @return builder
         * 
         */
        public Builder zoneRedundant(@Nullable Output<Boolean> zoneRedundant) {
            $.zoneRedundant = zoneRedundant;
            return this;
        }

        /**
         * @param zoneRedundant Should zone redundancy be enabled for this region? Defaults to `false`.
         * 
         * @return builder
         * 
         */
        public Builder zoneRedundant(Boolean zoneRedundant) {
            return zoneRedundant(Output.of(zoneRedundant));
        }

        public AccountGeoLocationArgs build() {
            if ($.failoverPriority == null) {
                throw new MissingRequiredPropertyException("AccountGeoLocationArgs", "failoverPriority");
            }
            if ($.location == null) {
                throw new MissingRequiredPropertyException("AccountGeoLocationArgs", "location");
            }
            return $;
        }
    }

}
