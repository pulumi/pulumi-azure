// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.eventhub.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class EventSubscriptionAzureFunctionEndpoint {
    /**
     * @return Specifies the ID of the Function where the Event Subscription will receive events. This must be the functions ID in format {function_app.id}/functions/{name}.
     * 
     */
    private String functionId;
    /**
     * @return Maximum number of events per batch.
     * 
     */
    private @Nullable Integer maxEventsPerBatch;
    /**
     * @return Preferred batch size in Kilobytes.
     * 
     */
    private @Nullable Integer preferredBatchSizeInKilobytes;

    private EventSubscriptionAzureFunctionEndpoint() {}
    /**
     * @return Specifies the ID of the Function where the Event Subscription will receive events. This must be the functions ID in format {function_app.id}/functions/{name}.
     * 
     */
    public String functionId() {
        return this.functionId;
    }
    /**
     * @return Maximum number of events per batch.
     * 
     */
    public Optional<Integer> maxEventsPerBatch() {
        return Optional.ofNullable(this.maxEventsPerBatch);
    }
    /**
     * @return Preferred batch size in Kilobytes.
     * 
     */
    public Optional<Integer> preferredBatchSizeInKilobytes() {
        return Optional.ofNullable(this.preferredBatchSizeInKilobytes);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(EventSubscriptionAzureFunctionEndpoint defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String functionId;
        private @Nullable Integer maxEventsPerBatch;
        private @Nullable Integer preferredBatchSizeInKilobytes;
        public Builder() {}
        public Builder(EventSubscriptionAzureFunctionEndpoint defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.functionId = defaults.functionId;
    	      this.maxEventsPerBatch = defaults.maxEventsPerBatch;
    	      this.preferredBatchSizeInKilobytes = defaults.preferredBatchSizeInKilobytes;
        }

        @CustomType.Setter
        public Builder functionId(String functionId) {
            if (functionId == null) {
              throw new MissingRequiredPropertyException("EventSubscriptionAzureFunctionEndpoint", "functionId");
            }
            this.functionId = functionId;
            return this;
        }
        @CustomType.Setter
        public Builder maxEventsPerBatch(@Nullable Integer maxEventsPerBatch) {

            this.maxEventsPerBatch = maxEventsPerBatch;
            return this;
        }
        @CustomType.Setter
        public Builder preferredBatchSizeInKilobytes(@Nullable Integer preferredBatchSizeInKilobytes) {

            this.preferredBatchSizeInKilobytes = preferredBatchSizeInKilobytes;
            return this;
        }
        public EventSubscriptionAzureFunctionEndpoint build() {
            final var _resultValue = new EventSubscriptionAzureFunctionEndpoint();
            _resultValue.functionId = functionId;
            _resultValue.maxEventsPerBatch = maxEventsPerBatch;
            _resultValue.preferredBatchSizeInKilobytes = preferredBatchSizeInKilobytes;
            return _resultValue;
        }
    }
}
