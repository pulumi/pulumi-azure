// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.backup.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class PolicyVMWorkloadProtectionPolicyBackupArgs extends com.pulumi.resources.ResourceArgs {

    public static final PolicyVMWorkloadProtectionPolicyBackupArgs Empty = new PolicyVMWorkloadProtectionPolicyBackupArgs();

    /**
     * The backup frequency for the VM Workload Backup Policy. Possible values are `Daily` and `Weekly`.
     * 
     */
    @Import(name="frequency")
    private @Nullable Output<String> frequency;

    /**
     * @return The backup frequency for the VM Workload Backup Policy. Possible values are `Daily` and `Weekly`.
     * 
     */
    public Optional<Output<String>> frequency() {
        return Optional.ofNullable(this.frequency);
    }

    /**
     * The backup frequency in minutes for the VM Workload Backup Policy. Possible values are `15`, `30`, `60`, `120`, `240`, `480`, `720` and `1440`.
     * 
     */
    @Import(name="frequencyInMinutes")
    private @Nullable Output<Integer> frequencyInMinutes;

    /**
     * @return The backup frequency in minutes for the VM Workload Backup Policy. Possible values are `15`, `30`, `60`, `120`, `240`, `480`, `720` and `1440`.
     * 
     */
    public Optional<Output<Integer>> frequencyInMinutes() {
        return Optional.ofNullable(this.frequencyInMinutes);
    }

    /**
     * The time of day to perform the backup in 24hour format.
     * 
     */
    @Import(name="time")
    private @Nullable Output<String> time;

    /**
     * @return The time of day to perform the backup in 24hour format.
     * 
     */
    public Optional<Output<String>> time() {
        return Optional.ofNullable(this.time);
    }

    /**
     * The days of the week to perform backups on. Possible values are `Sunday`, `Monday`, `Tuesday`, `Wednesday`, `Thursday`, `Friday` or `Saturday`. This is used when `frequency` is `Weekly`.
     * 
     */
    @Import(name="weekdays")
    private @Nullable Output<List<String>> weekdays;

    /**
     * @return The days of the week to perform backups on. Possible values are `Sunday`, `Monday`, `Tuesday`, `Wednesday`, `Thursday`, `Friday` or `Saturday`. This is used when `frequency` is `Weekly`.
     * 
     */
    public Optional<Output<List<String>>> weekdays() {
        return Optional.ofNullable(this.weekdays);
    }

    private PolicyVMWorkloadProtectionPolicyBackupArgs() {}

    private PolicyVMWorkloadProtectionPolicyBackupArgs(PolicyVMWorkloadProtectionPolicyBackupArgs $) {
        this.frequency = $.frequency;
        this.frequencyInMinutes = $.frequencyInMinutes;
        this.time = $.time;
        this.weekdays = $.weekdays;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PolicyVMWorkloadProtectionPolicyBackupArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PolicyVMWorkloadProtectionPolicyBackupArgs $;

        public Builder() {
            $ = new PolicyVMWorkloadProtectionPolicyBackupArgs();
        }

        public Builder(PolicyVMWorkloadProtectionPolicyBackupArgs defaults) {
            $ = new PolicyVMWorkloadProtectionPolicyBackupArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param frequency The backup frequency for the VM Workload Backup Policy. Possible values are `Daily` and `Weekly`.
         * 
         * @return builder
         * 
         */
        public Builder frequency(@Nullable Output<String> frequency) {
            $.frequency = frequency;
            return this;
        }

        /**
         * @param frequency The backup frequency for the VM Workload Backup Policy. Possible values are `Daily` and `Weekly`.
         * 
         * @return builder
         * 
         */
        public Builder frequency(String frequency) {
            return frequency(Output.of(frequency));
        }

        /**
         * @param frequencyInMinutes The backup frequency in minutes for the VM Workload Backup Policy. Possible values are `15`, `30`, `60`, `120`, `240`, `480`, `720` and `1440`.
         * 
         * @return builder
         * 
         */
        public Builder frequencyInMinutes(@Nullable Output<Integer> frequencyInMinutes) {
            $.frequencyInMinutes = frequencyInMinutes;
            return this;
        }

        /**
         * @param frequencyInMinutes The backup frequency in minutes for the VM Workload Backup Policy. Possible values are `15`, `30`, `60`, `120`, `240`, `480`, `720` and `1440`.
         * 
         * @return builder
         * 
         */
        public Builder frequencyInMinutes(Integer frequencyInMinutes) {
            return frequencyInMinutes(Output.of(frequencyInMinutes));
        }

        /**
         * @param time The time of day to perform the backup in 24hour format.
         * 
         * @return builder
         * 
         */
        public Builder time(@Nullable Output<String> time) {
            $.time = time;
            return this;
        }

        /**
         * @param time The time of day to perform the backup in 24hour format.
         * 
         * @return builder
         * 
         */
        public Builder time(String time) {
            return time(Output.of(time));
        }

        /**
         * @param weekdays The days of the week to perform backups on. Possible values are `Sunday`, `Monday`, `Tuesday`, `Wednesday`, `Thursday`, `Friday` or `Saturday`. This is used when `frequency` is `Weekly`.
         * 
         * @return builder
         * 
         */
        public Builder weekdays(@Nullable Output<List<String>> weekdays) {
            $.weekdays = weekdays;
            return this;
        }

        /**
         * @param weekdays The days of the week to perform backups on. Possible values are `Sunday`, `Monday`, `Tuesday`, `Wednesday`, `Thursday`, `Friday` or `Saturday`. This is used when `frequency` is `Weekly`.
         * 
         * @return builder
         * 
         */
        public Builder weekdays(List<String> weekdays) {
            return weekdays(Output.of(weekdays));
        }

        /**
         * @param weekdays The days of the week to perform backups on. Possible values are `Sunday`, `Monday`, `Tuesday`, `Wednesday`, `Thursday`, `Friday` or `Saturday`. This is used when `frequency` is `Weekly`.
         * 
         * @return builder
         * 
         */
        public Builder weekdays(String... weekdays) {
            return weekdays(List.of(weekdays));
        }

        public PolicyVMWorkloadProtectionPolicyBackupArgs build() {
            return $;
        }
    }

}
