// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.domainservices.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetServiceNotification {
    /**
     * @return A list of additional email addresses to notify when there are alerts in the managed domain.
     * 
     */
    private List<String> additionalRecipients;
    /**
     * @return Whethermembers of the _AAD DC Administrators_ group are notified when there are alerts in the managed domain.
     * 
     */
    private Boolean notifyDcAdmins;
    /**
     * @return Whether all Global Administrators are notified when there are alerts in the managed domain.
     * 
     */
    private Boolean notifyGlobalAdmins;

    private GetServiceNotification() {}
    /**
     * @return A list of additional email addresses to notify when there are alerts in the managed domain.
     * 
     */
    public List<String> additionalRecipients() {
        return this.additionalRecipients;
    }
    /**
     * @return Whethermembers of the _AAD DC Administrators_ group are notified when there are alerts in the managed domain.
     * 
     */
    public Boolean notifyDcAdmins() {
        return this.notifyDcAdmins;
    }
    /**
     * @return Whether all Global Administrators are notified when there are alerts in the managed domain.
     * 
     */
    public Boolean notifyGlobalAdmins() {
        return this.notifyGlobalAdmins;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetServiceNotification defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<String> additionalRecipients;
        private Boolean notifyDcAdmins;
        private Boolean notifyGlobalAdmins;
        public Builder() {}
        public Builder(GetServiceNotification defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.additionalRecipients = defaults.additionalRecipients;
    	      this.notifyDcAdmins = defaults.notifyDcAdmins;
    	      this.notifyGlobalAdmins = defaults.notifyGlobalAdmins;
        }

        @CustomType.Setter
        public Builder additionalRecipients(List<String> additionalRecipients) {
            if (additionalRecipients == null) {
              throw new MissingRequiredPropertyException("GetServiceNotification", "additionalRecipients");
            }
            this.additionalRecipients = additionalRecipients;
            return this;
        }
        public Builder additionalRecipients(String... additionalRecipients) {
            return additionalRecipients(List.of(additionalRecipients));
        }
        @CustomType.Setter
        public Builder notifyDcAdmins(Boolean notifyDcAdmins) {
            if (notifyDcAdmins == null) {
              throw new MissingRequiredPropertyException("GetServiceNotification", "notifyDcAdmins");
            }
            this.notifyDcAdmins = notifyDcAdmins;
            return this;
        }
        @CustomType.Setter
        public Builder notifyGlobalAdmins(Boolean notifyGlobalAdmins) {
            if (notifyGlobalAdmins == null) {
              throw new MissingRequiredPropertyException("GetServiceNotification", "notifyGlobalAdmins");
            }
            this.notifyGlobalAdmins = notifyGlobalAdmins;
            return this;
        }
        public GetServiceNotification build() {
            final var _resultValue = new GetServiceNotification();
            _resultValue.additionalRecipients = additionalRecipients;
            _resultValue.notifyDcAdmins = notifyDcAdmins;
            _resultValue.notifyGlobalAdmins = notifyGlobalAdmins;
            return _resultValue;
        }
    }
}
