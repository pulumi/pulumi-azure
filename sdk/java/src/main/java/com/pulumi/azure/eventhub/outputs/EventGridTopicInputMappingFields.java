// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.eventhub.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class EventGridTopicInputMappingFields {
    /**
     * @return Specifies the data version of the EventGrid Event to associate with the domain. Changing this forces a new resource to be created.
     * 
     */
    private @Nullable String dataVersion;
    /**
     * @return Specifies the event time of the EventGrid Event to associate with the domain. Changing this forces a new resource to be created.
     * 
     */
    private @Nullable String eventTime;
    /**
     * @return Specifies the event type of the EventGrid Event to associate with the domain. Changing this forces a new resource to be created.
     * 
     */
    private @Nullable String eventType;
    /**
     * @return Specifies the id of the EventGrid Event to associate with the domain. Changing this forces a new resource to be created.
     * 
     */
    private @Nullable String id;
    /**
     * @return Specifies the subject of the EventGrid Event to associate with the domain. Changing this forces a new resource to be created.
     * 
     */
    private @Nullable String subject;
    /**
     * @return Specifies the topic of the EventGrid Event to associate with the domain. Changing this forces a new resource to be created.
     * 
     */
    private @Nullable String topic;

    private EventGridTopicInputMappingFields() {}
    /**
     * @return Specifies the data version of the EventGrid Event to associate with the domain. Changing this forces a new resource to be created.
     * 
     */
    public Optional<String> dataVersion() {
        return Optional.ofNullable(this.dataVersion);
    }
    /**
     * @return Specifies the event time of the EventGrid Event to associate with the domain. Changing this forces a new resource to be created.
     * 
     */
    public Optional<String> eventTime() {
        return Optional.ofNullable(this.eventTime);
    }
    /**
     * @return Specifies the event type of the EventGrid Event to associate with the domain. Changing this forces a new resource to be created.
     * 
     */
    public Optional<String> eventType() {
        return Optional.ofNullable(this.eventType);
    }
    /**
     * @return Specifies the id of the EventGrid Event to associate with the domain. Changing this forces a new resource to be created.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return Specifies the subject of the EventGrid Event to associate with the domain. Changing this forces a new resource to be created.
     * 
     */
    public Optional<String> subject() {
        return Optional.ofNullable(this.subject);
    }
    /**
     * @return Specifies the topic of the EventGrid Event to associate with the domain. Changing this forces a new resource to be created.
     * 
     */
    public Optional<String> topic() {
        return Optional.ofNullable(this.topic);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(EventGridTopicInputMappingFields defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String dataVersion;
        private @Nullable String eventTime;
        private @Nullable String eventType;
        private @Nullable String id;
        private @Nullable String subject;
        private @Nullable String topic;
        public Builder() {}
        public Builder(EventGridTopicInputMappingFields defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.dataVersion = defaults.dataVersion;
    	      this.eventTime = defaults.eventTime;
    	      this.eventType = defaults.eventType;
    	      this.id = defaults.id;
    	      this.subject = defaults.subject;
    	      this.topic = defaults.topic;
        }

        @CustomType.Setter
        public Builder dataVersion(@Nullable String dataVersion) {

            this.dataVersion = dataVersion;
            return this;
        }
        @CustomType.Setter
        public Builder eventTime(@Nullable String eventTime) {

            this.eventTime = eventTime;
            return this;
        }
        @CustomType.Setter
        public Builder eventType(@Nullable String eventType) {

            this.eventType = eventType;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {

            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder subject(@Nullable String subject) {

            this.subject = subject;
            return this;
        }
        @CustomType.Setter
        public Builder topic(@Nullable String topic) {

            this.topic = topic;
            return this;
        }
        public EventGridTopicInputMappingFields build() {
            final var _resultValue = new EventGridTopicInputMappingFields();
            _resultValue.dataVersion = dataVersion;
            _resultValue.eventTime = eventTime;
            _resultValue.eventType = eventType;
            _resultValue.id = id;
            _resultValue.subject = subject;
            _resultValue.topic = topic;
            return _resultValue;
        }
    }
}
