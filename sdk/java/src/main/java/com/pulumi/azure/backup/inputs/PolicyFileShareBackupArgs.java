// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.backup.inputs;

import com.pulumi.azure.backup.inputs.PolicyFileShareBackupHourlyArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class PolicyFileShareBackupArgs extends com.pulumi.resources.ResourceArgs {

    public static final PolicyFileShareBackupArgs Empty = new PolicyFileShareBackupArgs();

    /**
     * Sets the backup frequency. Possible values are `Daily` and `Hourly`.
     * 
     * &gt; **NOTE:** This argument is made available for consistency with VM backup policies and to allow for potential future support of weekly backups
     * 
     */
    @Import(name="frequency", required=true)
    private Output<String> frequency;

    /**
     * @return Sets the backup frequency. Possible values are `Daily` and `Hourly`.
     * 
     * &gt; **NOTE:** This argument is made available for consistency with VM backup policies and to allow for potential future support of weekly backups
     * 
     */
    public Output<String> frequency() {
        return this.frequency;
    }

    /**
     * A `hourly` block defined as below. This is required when `frequency` is set to `Hourly`.
     * 
     */
    @Import(name="hourly")
    private @Nullable Output<PolicyFileShareBackupHourlyArgs> hourly;

    /**
     * @return A `hourly` block defined as below. This is required when `frequency` is set to `Hourly`.
     * 
     */
    public Optional<Output<PolicyFileShareBackupHourlyArgs>> hourly() {
        return Optional.ofNullable(this.hourly);
    }

    /**
     * The time of day to perform the backup in 24-hour format. Times must be either on the hour or half hour (e.g. 12:00, 12:30, 13:00, etc.)
     * 
     * &gt; **NOTE:** `time` is required when `frequency` is set to `Daily`.
     * 
     */
    @Import(name="time")
    private @Nullable Output<String> time;

    /**
     * @return The time of day to perform the backup in 24-hour format. Times must be either on the hour or half hour (e.g. 12:00, 12:30, 13:00, etc.)
     * 
     * &gt; **NOTE:** `time` is required when `frequency` is set to `Daily`.
     * 
     */
    public Optional<Output<String>> time() {
        return Optional.ofNullable(this.time);
    }

    private PolicyFileShareBackupArgs() {}

    private PolicyFileShareBackupArgs(PolicyFileShareBackupArgs $) {
        this.frequency = $.frequency;
        this.hourly = $.hourly;
        this.time = $.time;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PolicyFileShareBackupArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PolicyFileShareBackupArgs $;

        public Builder() {
            $ = new PolicyFileShareBackupArgs();
        }

        public Builder(PolicyFileShareBackupArgs defaults) {
            $ = new PolicyFileShareBackupArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param frequency Sets the backup frequency. Possible values are `Daily` and `Hourly`.
         * 
         * &gt; **NOTE:** This argument is made available for consistency with VM backup policies and to allow for potential future support of weekly backups
         * 
         * @return builder
         * 
         */
        public Builder frequency(Output<String> frequency) {
            $.frequency = frequency;
            return this;
        }

        /**
         * @param frequency Sets the backup frequency. Possible values are `Daily` and `Hourly`.
         * 
         * &gt; **NOTE:** This argument is made available for consistency with VM backup policies and to allow for potential future support of weekly backups
         * 
         * @return builder
         * 
         */
        public Builder frequency(String frequency) {
            return frequency(Output.of(frequency));
        }

        /**
         * @param hourly A `hourly` block defined as below. This is required when `frequency` is set to `Hourly`.
         * 
         * @return builder
         * 
         */
        public Builder hourly(@Nullable Output<PolicyFileShareBackupHourlyArgs> hourly) {
            $.hourly = hourly;
            return this;
        }

        /**
         * @param hourly A `hourly` block defined as below. This is required when `frequency` is set to `Hourly`.
         * 
         * @return builder
         * 
         */
        public Builder hourly(PolicyFileShareBackupHourlyArgs hourly) {
            return hourly(Output.of(hourly));
        }

        /**
         * @param time The time of day to perform the backup in 24-hour format. Times must be either on the hour or half hour (e.g. 12:00, 12:30, 13:00, etc.)
         * 
         * &gt; **NOTE:** `time` is required when `frequency` is set to `Daily`.
         * 
         * @return builder
         * 
         */
        public Builder time(@Nullable Output<String> time) {
            $.time = time;
            return this;
        }

        /**
         * @param time The time of day to perform the backup in 24-hour format. Times must be either on the hour or half hour (e.g. 12:00, 12:30, 13:00, etc.)
         * 
         * &gt; **NOTE:** `time` is required when `frequency` is set to `Daily`.
         * 
         * @return builder
         * 
         */
        public Builder time(String time) {
            return time(Output.of(time));
        }

        public PolicyFileShareBackupArgs build() {
            if ($.frequency == null) {
                throw new MissingRequiredPropertyException("PolicyFileShareBackupArgs", "frequency");
            }
            return $;
        }
    }

}
