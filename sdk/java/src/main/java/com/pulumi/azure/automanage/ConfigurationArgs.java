// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.automanage;

import com.pulumi.azure.automanage.inputs.ConfigurationAntimalwareArgs;
import com.pulumi.azure.automanage.inputs.ConfigurationAzureSecurityBaselineArgs;
import com.pulumi.azure.automanage.inputs.ConfigurationBackupArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final ConfigurationArgs Empty = new ConfigurationArgs();

    /**
     * A `antimalware` block as defined below.
     * 
     */
    @Import(name="antimalware")
    private @Nullable Output<ConfigurationAntimalwareArgs> antimalware;

    /**
     * @return A `antimalware` block as defined below.
     * 
     */
    public Optional<Output<ConfigurationAntimalwareArgs>> antimalware() {
        return Optional.ofNullable(this.antimalware);
    }

    /**
     * Whether the automation account is enabled. Defaults to `false`.
     * 
     */
    @Import(name="automationAccountEnabled")
    private @Nullable Output<Boolean> automationAccountEnabled;

    /**
     * @return Whether the automation account is enabled. Defaults to `false`.
     * 
     */
    public Optional<Output<Boolean>> automationAccountEnabled() {
        return Optional.ofNullable(this.automationAccountEnabled);
    }

    /**
     * A `azure_security_baseline` block as defined below.
     * 
     */
    @Import(name="azureSecurityBaseline")
    private @Nullable Output<ConfigurationAzureSecurityBaselineArgs> azureSecurityBaseline;

    /**
     * @return A `azure_security_baseline` block as defined below.
     * 
     */
    public Optional<Output<ConfigurationAzureSecurityBaselineArgs>> azureSecurityBaseline() {
        return Optional.ofNullable(this.azureSecurityBaseline);
    }

    /**
     * A `backup` block as defined below.
     * 
     */
    @Import(name="backup")
    private @Nullable Output<ConfigurationBackupArgs> backup;

    /**
     * @return A `backup` block as defined below.
     * 
     */
    public Optional<Output<ConfigurationBackupArgs>> backup() {
        return Optional.ofNullable(this.backup);
    }

    /**
     * Whether the boot diagnostics are enabled. Defaults to `false`.
     * 
     */
    @Import(name="bootDiagnosticsEnabled")
    private @Nullable Output<Boolean> bootDiagnosticsEnabled;

    /**
     * @return Whether the boot diagnostics are enabled. Defaults to `false`.
     * 
     */
    public Optional<Output<Boolean>> bootDiagnosticsEnabled() {
        return Optional.ofNullable(this.bootDiagnosticsEnabled);
    }

    /**
     * Whether the defender for cloud is enabled. Defaults to `false`.
     * 
     */
    @Import(name="defenderForCloudEnabled")
    private @Nullable Output<Boolean> defenderForCloudEnabled;

    /**
     * @return Whether the defender for cloud is enabled. Defaults to `false`.
     * 
     */
    public Optional<Output<Boolean>> defenderForCloudEnabled() {
        return Optional.ofNullable(this.defenderForCloudEnabled);
    }

    /**
     * Whether the guest configuration is enabled. Defaults to `false`.
     * 
     */
    @Import(name="guestConfigurationEnabled")
    private @Nullable Output<Boolean> guestConfigurationEnabled;

    /**
     * @return Whether the guest configuration is enabled. Defaults to `false`.
     * 
     */
    public Optional<Output<Boolean>> guestConfigurationEnabled() {
        return Optional.ofNullable(this.guestConfigurationEnabled);
    }

    /**
     * The Azure Region where the Automanage Configuration should exist. Changing this forces a new Automanage Configuration to be created.
     * 
     */
    @Import(name="location")
    private @Nullable Output<String> location;

    /**
     * @return The Azure Region where the Automanage Configuration should exist. Changing this forces a new Automanage Configuration to be created.
     * 
     */
    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * Whether log analytics are enabled. Defaults to `false`.
     * 
     */
    @Import(name="logAnalyticsEnabled")
    private @Nullable Output<Boolean> logAnalyticsEnabled;

    /**
     * @return Whether log analytics are enabled. Defaults to `false`.
     * 
     */
    public Optional<Output<Boolean>> logAnalyticsEnabled() {
        return Optional.ofNullable(this.logAnalyticsEnabled);
    }

    /**
     * The name which should be used for this Automanage Configuration. Changing this forces a new Automanage Configuration to be created.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name which should be used for this Automanage Configuration. Changing this forces a new Automanage Configuration to be created.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The name of the Resource Group where the Automanage Configuration should exist. Changing this forces a new Automanage Configuration to be created.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    /**
     * @return The name of the Resource Group where the Automanage Configuration should exist. Changing this forces a new Automanage Configuration to be created.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * Whether the status change alert is enabled. Defaults to `false`.
     * 
     */
    @Import(name="statusChangeAlertEnabled")
    private @Nullable Output<Boolean> statusChangeAlertEnabled;

    /**
     * @return Whether the status change alert is enabled. Defaults to `false`.
     * 
     */
    public Optional<Output<Boolean>> statusChangeAlertEnabled() {
        return Optional.ofNullable(this.statusChangeAlertEnabled);
    }

    /**
     * A mapping of tags to assign to the resource.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return A mapping of tags to assign to the resource.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private ConfigurationArgs() {}

    private ConfigurationArgs(ConfigurationArgs $) {
        this.antimalware = $.antimalware;
        this.automationAccountEnabled = $.automationAccountEnabled;
        this.azureSecurityBaseline = $.azureSecurityBaseline;
        this.backup = $.backup;
        this.bootDiagnosticsEnabled = $.bootDiagnosticsEnabled;
        this.defenderForCloudEnabled = $.defenderForCloudEnabled;
        this.guestConfigurationEnabled = $.guestConfigurationEnabled;
        this.location = $.location;
        this.logAnalyticsEnabled = $.logAnalyticsEnabled;
        this.name = $.name;
        this.resourceGroupName = $.resourceGroupName;
        this.statusChangeAlertEnabled = $.statusChangeAlertEnabled;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ConfigurationArgs $;

        public Builder() {
            $ = new ConfigurationArgs();
        }

        public Builder(ConfigurationArgs defaults) {
            $ = new ConfigurationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param antimalware A `antimalware` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder antimalware(@Nullable Output<ConfigurationAntimalwareArgs> antimalware) {
            $.antimalware = antimalware;
            return this;
        }

        /**
         * @param antimalware A `antimalware` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder antimalware(ConfigurationAntimalwareArgs antimalware) {
            return antimalware(Output.of(antimalware));
        }

        /**
         * @param automationAccountEnabled Whether the automation account is enabled. Defaults to `false`.
         * 
         * @return builder
         * 
         */
        public Builder automationAccountEnabled(@Nullable Output<Boolean> automationAccountEnabled) {
            $.automationAccountEnabled = automationAccountEnabled;
            return this;
        }

        /**
         * @param automationAccountEnabled Whether the automation account is enabled. Defaults to `false`.
         * 
         * @return builder
         * 
         */
        public Builder automationAccountEnabled(Boolean automationAccountEnabled) {
            return automationAccountEnabled(Output.of(automationAccountEnabled));
        }

        /**
         * @param azureSecurityBaseline A `azure_security_baseline` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder azureSecurityBaseline(@Nullable Output<ConfigurationAzureSecurityBaselineArgs> azureSecurityBaseline) {
            $.azureSecurityBaseline = azureSecurityBaseline;
            return this;
        }

        /**
         * @param azureSecurityBaseline A `azure_security_baseline` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder azureSecurityBaseline(ConfigurationAzureSecurityBaselineArgs azureSecurityBaseline) {
            return azureSecurityBaseline(Output.of(azureSecurityBaseline));
        }

        /**
         * @param backup A `backup` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder backup(@Nullable Output<ConfigurationBackupArgs> backup) {
            $.backup = backup;
            return this;
        }

        /**
         * @param backup A `backup` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder backup(ConfigurationBackupArgs backup) {
            return backup(Output.of(backup));
        }

        /**
         * @param bootDiagnosticsEnabled Whether the boot diagnostics are enabled. Defaults to `false`.
         * 
         * @return builder
         * 
         */
        public Builder bootDiagnosticsEnabled(@Nullable Output<Boolean> bootDiagnosticsEnabled) {
            $.bootDiagnosticsEnabled = bootDiagnosticsEnabled;
            return this;
        }

        /**
         * @param bootDiagnosticsEnabled Whether the boot diagnostics are enabled. Defaults to `false`.
         * 
         * @return builder
         * 
         */
        public Builder bootDiagnosticsEnabled(Boolean bootDiagnosticsEnabled) {
            return bootDiagnosticsEnabled(Output.of(bootDiagnosticsEnabled));
        }

        /**
         * @param defenderForCloudEnabled Whether the defender for cloud is enabled. Defaults to `false`.
         * 
         * @return builder
         * 
         */
        public Builder defenderForCloudEnabled(@Nullable Output<Boolean> defenderForCloudEnabled) {
            $.defenderForCloudEnabled = defenderForCloudEnabled;
            return this;
        }

        /**
         * @param defenderForCloudEnabled Whether the defender for cloud is enabled. Defaults to `false`.
         * 
         * @return builder
         * 
         */
        public Builder defenderForCloudEnabled(Boolean defenderForCloudEnabled) {
            return defenderForCloudEnabled(Output.of(defenderForCloudEnabled));
        }

        /**
         * @param guestConfigurationEnabled Whether the guest configuration is enabled. Defaults to `false`.
         * 
         * @return builder
         * 
         */
        public Builder guestConfigurationEnabled(@Nullable Output<Boolean> guestConfigurationEnabled) {
            $.guestConfigurationEnabled = guestConfigurationEnabled;
            return this;
        }

        /**
         * @param guestConfigurationEnabled Whether the guest configuration is enabled. Defaults to `false`.
         * 
         * @return builder
         * 
         */
        public Builder guestConfigurationEnabled(Boolean guestConfigurationEnabled) {
            return guestConfigurationEnabled(Output.of(guestConfigurationEnabled));
        }

        /**
         * @param location The Azure Region where the Automanage Configuration should exist. Changing this forces a new Automanage Configuration to be created.
         * 
         * @return builder
         * 
         */
        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location The Azure Region where the Automanage Configuration should exist. Changing this forces a new Automanage Configuration to be created.
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param logAnalyticsEnabled Whether log analytics are enabled. Defaults to `false`.
         * 
         * @return builder
         * 
         */
        public Builder logAnalyticsEnabled(@Nullable Output<Boolean> logAnalyticsEnabled) {
            $.logAnalyticsEnabled = logAnalyticsEnabled;
            return this;
        }

        /**
         * @param logAnalyticsEnabled Whether log analytics are enabled. Defaults to `false`.
         * 
         * @return builder
         * 
         */
        public Builder logAnalyticsEnabled(Boolean logAnalyticsEnabled) {
            return logAnalyticsEnabled(Output.of(logAnalyticsEnabled));
        }

        /**
         * @param name The name which should be used for this Automanage Configuration. Changing this forces a new Automanage Configuration to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name which should be used for this Automanage Configuration. Changing this forces a new Automanage Configuration to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param resourceGroupName The name of the Resource Group where the Automanage Configuration should exist. Changing this forces a new Automanage Configuration to be created.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName The name of the Resource Group where the Automanage Configuration should exist. Changing this forces a new Automanage Configuration to be created.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        /**
         * @param statusChangeAlertEnabled Whether the status change alert is enabled. Defaults to `false`.
         * 
         * @return builder
         * 
         */
        public Builder statusChangeAlertEnabled(@Nullable Output<Boolean> statusChangeAlertEnabled) {
            $.statusChangeAlertEnabled = statusChangeAlertEnabled;
            return this;
        }

        /**
         * @param statusChangeAlertEnabled Whether the status change alert is enabled. Defaults to `false`.
         * 
         * @return builder
         * 
         */
        public Builder statusChangeAlertEnabled(Boolean statusChangeAlertEnabled) {
            return statusChangeAlertEnabled(Output.of(statusChangeAlertEnabled));
        }

        /**
         * @param tags A mapping of tags to assign to the resource.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags A mapping of tags to assign to the resource.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public ConfigurationArgs build() {
            if ($.resourceGroupName == null) {
                throw new MissingRequiredPropertyException("ConfigurationArgs", "resourceGroupName");
            }
            return $;
        }
    }

}
