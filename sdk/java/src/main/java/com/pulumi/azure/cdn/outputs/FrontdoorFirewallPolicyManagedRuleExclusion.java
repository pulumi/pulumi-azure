// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.cdn.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class FrontdoorFirewallPolicyManagedRuleExclusion {
    /**
     * @return The variable type to be excluded. Possible values are `QueryStringArgNames`, `RequestBodyPostArgNames`, `RequestCookieNames`, `RequestHeaderNames`, `RequestBodyJsonArgNames`
     * 
     * &gt; **NOTE:** `RequestBodyJsonArgNames` is only available on Default Rule Set (DRS) 2.0 or later
     * 
     */
    private String matchVariable;
    /**
     * @return Comparison operator to apply to the selector when specifying which elements in the collection this exclusion applies to. Possible values are: `Equals`, `Contains`, `StartsWith`, `EndsWith`, `EqualsAny`.
     * 
     */
    private String operator;
    /**
     * @return Selector for the value in the `match_variable` attribute this exclusion applies to.
     * 
     * &gt; **NOTE:** `selector` must be set to `*` if `operator` is set to `EqualsAny`.
     * 
     */
    private String selector;

    private FrontdoorFirewallPolicyManagedRuleExclusion() {}
    /**
     * @return The variable type to be excluded. Possible values are `QueryStringArgNames`, `RequestBodyPostArgNames`, `RequestCookieNames`, `RequestHeaderNames`, `RequestBodyJsonArgNames`
     * 
     * &gt; **NOTE:** `RequestBodyJsonArgNames` is only available on Default Rule Set (DRS) 2.0 or later
     * 
     */
    public String matchVariable() {
        return this.matchVariable;
    }
    /**
     * @return Comparison operator to apply to the selector when specifying which elements in the collection this exclusion applies to. Possible values are: `Equals`, `Contains`, `StartsWith`, `EndsWith`, `EqualsAny`.
     * 
     */
    public String operator() {
        return this.operator;
    }
    /**
     * @return Selector for the value in the `match_variable` attribute this exclusion applies to.
     * 
     * &gt; **NOTE:** `selector` must be set to `*` if `operator` is set to `EqualsAny`.
     * 
     */
    public String selector() {
        return this.selector;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(FrontdoorFirewallPolicyManagedRuleExclusion defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String matchVariable;
        private String operator;
        private String selector;
        public Builder() {}
        public Builder(FrontdoorFirewallPolicyManagedRuleExclusion defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.matchVariable = defaults.matchVariable;
    	      this.operator = defaults.operator;
    	      this.selector = defaults.selector;
        }

        @CustomType.Setter
        public Builder matchVariable(String matchVariable) {
            if (matchVariable == null) {
              throw new MissingRequiredPropertyException("FrontdoorFirewallPolicyManagedRuleExclusion", "matchVariable");
            }
            this.matchVariable = matchVariable;
            return this;
        }
        @CustomType.Setter
        public Builder operator(String operator) {
            if (operator == null) {
              throw new MissingRequiredPropertyException("FrontdoorFirewallPolicyManagedRuleExclusion", "operator");
            }
            this.operator = operator;
            return this;
        }
        @CustomType.Setter
        public Builder selector(String selector) {
            if (selector == null) {
              throw new MissingRequiredPropertyException("FrontdoorFirewallPolicyManagedRuleExclusion", "selector");
            }
            this.selector = selector;
            return this;
        }
        public FrontdoorFirewallPolicyManagedRuleExclusion build() {
            final var _resultValue = new FrontdoorFirewallPolicyManagedRuleExclusion();
            _resultValue.matchVariable = matchVariable;
            _resultValue.operator = operator;
            _resultValue.selector = selector;
            return _resultValue;
        }
    }
}
