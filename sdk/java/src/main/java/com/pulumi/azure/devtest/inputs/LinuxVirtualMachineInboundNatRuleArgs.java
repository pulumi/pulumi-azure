// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.devtest.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class LinuxVirtualMachineInboundNatRuleArgs extends com.pulumi.resources.ResourceArgs {

    public static final LinuxVirtualMachineInboundNatRuleArgs Empty = new LinuxVirtualMachineInboundNatRuleArgs();

    /**
     * The Backend Port associated with this NAT Rule. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="backendPort", required=true)
    private Output<Integer> backendPort;

    /**
     * @return The Backend Port associated with this NAT Rule. Changing this forces a new resource to be created.
     * 
     */
    public Output<Integer> backendPort() {
        return this.backendPort;
    }

    /**
     * The frontend port associated with this Inbound NAT Rule.
     * 
     */
    @Import(name="frontendPort")
    private @Nullable Output<Integer> frontendPort;

    /**
     * @return The frontend port associated with this Inbound NAT Rule.
     * 
     */
    public Optional<Output<Integer>> frontendPort() {
        return Optional.ofNullable(this.frontendPort);
    }

    /**
     * The Protocol used for this NAT Rule. Possible values are `Tcp` and `Udp`.
     * 
     */
    @Import(name="protocol", required=true)
    private Output<String> protocol;

    /**
     * @return The Protocol used for this NAT Rule. Possible values are `Tcp` and `Udp`.
     * 
     */
    public Output<String> protocol() {
        return this.protocol;
    }

    private LinuxVirtualMachineInboundNatRuleArgs() {}

    private LinuxVirtualMachineInboundNatRuleArgs(LinuxVirtualMachineInboundNatRuleArgs $) {
        this.backendPort = $.backendPort;
        this.frontendPort = $.frontendPort;
        this.protocol = $.protocol;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(LinuxVirtualMachineInboundNatRuleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private LinuxVirtualMachineInboundNatRuleArgs $;

        public Builder() {
            $ = new LinuxVirtualMachineInboundNatRuleArgs();
        }

        public Builder(LinuxVirtualMachineInboundNatRuleArgs defaults) {
            $ = new LinuxVirtualMachineInboundNatRuleArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param backendPort The Backend Port associated with this NAT Rule. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder backendPort(Output<Integer> backendPort) {
            $.backendPort = backendPort;
            return this;
        }

        /**
         * @param backendPort The Backend Port associated with this NAT Rule. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder backendPort(Integer backendPort) {
            return backendPort(Output.of(backendPort));
        }

        /**
         * @param frontendPort The frontend port associated with this Inbound NAT Rule.
         * 
         * @return builder
         * 
         */
        public Builder frontendPort(@Nullable Output<Integer> frontendPort) {
            $.frontendPort = frontendPort;
            return this;
        }

        /**
         * @param frontendPort The frontend port associated with this Inbound NAT Rule.
         * 
         * @return builder
         * 
         */
        public Builder frontendPort(Integer frontendPort) {
            return frontendPort(Output.of(frontendPort));
        }

        /**
         * @param protocol The Protocol used for this NAT Rule. Possible values are `Tcp` and `Udp`.
         * 
         * @return builder
         * 
         */
        public Builder protocol(Output<String> protocol) {
            $.protocol = protocol;
            return this;
        }

        /**
         * @param protocol The Protocol used for this NAT Rule. Possible values are `Tcp` and `Udp`.
         * 
         * @return builder
         * 
         */
        public Builder protocol(String protocol) {
            return protocol(Output.of(protocol));
        }

        public LinuxVirtualMachineInboundNatRuleArgs build() {
            if ($.backendPort == null) {
                throw new MissingRequiredPropertyException("LinuxVirtualMachineInboundNatRuleArgs", "backendPort");
            }
            if ($.protocol == null) {
                throw new MissingRequiredPropertyException("LinuxVirtualMachineInboundNatRuleArgs", "protocol");
            }
            return $;
        }
    }

}
