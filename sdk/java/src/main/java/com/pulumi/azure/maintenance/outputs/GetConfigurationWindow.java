// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.maintenance.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetConfigurationWindow {
    /**
     * @return The duration of the maintenance window.
     * 
     */
    private String duration;
    /**
     * @return Effective expiration date of the maintenance window.
     * 
     */
    private String expirationDateTime;
    /**
     * @return The rate at which a maintenance window is expected to recur.
     * 
     */
    private String recurEvery;
    /**
     * @return Effective start date of the maintenance window.
     * 
     */
    private String startDateTime;
    /**
     * @return The time zone for the maintenance window.
     * 
     */
    private String timeZone;

    private GetConfigurationWindow() {}
    /**
     * @return The duration of the maintenance window.
     * 
     */
    public String duration() {
        return this.duration;
    }
    /**
     * @return Effective expiration date of the maintenance window.
     * 
     */
    public String expirationDateTime() {
        return this.expirationDateTime;
    }
    /**
     * @return The rate at which a maintenance window is expected to recur.
     * 
     */
    public String recurEvery() {
        return this.recurEvery;
    }
    /**
     * @return Effective start date of the maintenance window.
     * 
     */
    public String startDateTime() {
        return this.startDateTime;
    }
    /**
     * @return The time zone for the maintenance window.
     * 
     */
    public String timeZone() {
        return this.timeZone;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetConfigurationWindow defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String duration;
        private String expirationDateTime;
        private String recurEvery;
        private String startDateTime;
        private String timeZone;
        public Builder() {}
        public Builder(GetConfigurationWindow defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.duration = defaults.duration;
    	      this.expirationDateTime = defaults.expirationDateTime;
    	      this.recurEvery = defaults.recurEvery;
    	      this.startDateTime = defaults.startDateTime;
    	      this.timeZone = defaults.timeZone;
        }

        @CustomType.Setter
        public Builder duration(String duration) {
            if (duration == null) {
              throw new MissingRequiredPropertyException("GetConfigurationWindow", "duration");
            }
            this.duration = duration;
            return this;
        }
        @CustomType.Setter
        public Builder expirationDateTime(String expirationDateTime) {
            if (expirationDateTime == null) {
              throw new MissingRequiredPropertyException("GetConfigurationWindow", "expirationDateTime");
            }
            this.expirationDateTime = expirationDateTime;
            return this;
        }
        @CustomType.Setter
        public Builder recurEvery(String recurEvery) {
            if (recurEvery == null) {
              throw new MissingRequiredPropertyException("GetConfigurationWindow", "recurEvery");
            }
            this.recurEvery = recurEvery;
            return this;
        }
        @CustomType.Setter
        public Builder startDateTime(String startDateTime) {
            if (startDateTime == null) {
              throw new MissingRequiredPropertyException("GetConfigurationWindow", "startDateTime");
            }
            this.startDateTime = startDateTime;
            return this;
        }
        @CustomType.Setter
        public Builder timeZone(String timeZone) {
            if (timeZone == null) {
              throw new MissingRequiredPropertyException("GetConfigurationWindow", "timeZone");
            }
            this.timeZone = timeZone;
            return this;
        }
        public GetConfigurationWindow build() {
            final var _resultValue = new GetConfigurationWindow();
            _resultValue.duration = duration;
            _resultValue.expirationDateTime = expirationDateTime;
            _resultValue.recurEvery = recurEvery;
            _resultValue.startDateTime = startDateTime;
            _resultValue.timeZone = timeZone;
            return _resultValue;
        }
    }
}
