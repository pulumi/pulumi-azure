// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.monitoring;

import com.pulumi.azure.Utilities;
import com.pulumi.azure.monitoring.LogzSubAccountArgs;
import com.pulumi.azure.monitoring.inputs.LogzSubAccountState;
import com.pulumi.azure.monitoring.outputs.LogzSubAccountUser;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.String;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Manages a logz Sub Account.
 * 
 * ## Example Usage
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.azure.core.ResourceGroup;
 * import com.pulumi.azure.core.ResourceGroupArgs;
 * import com.pulumi.azure.monitoring.LogzMonitor;
 * import com.pulumi.azure.monitoring.LogzMonitorArgs;
 * import com.pulumi.azure.monitoring.LogzSubAccount;
 * import com.pulumi.azure.monitoring.LogzSubAccountArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new ResourceGroup(&#34;example&#34;, ResourceGroupArgs.builder()        
 *             .name(&#34;example-logz&#34;)
 *             .location(&#34;West Europe&#34;)
 *             .build());
 * 
 *         var exampleLogzMonitor = new LogzMonitor(&#34;exampleLogzMonitor&#34;, LogzMonitorArgs.builder()        
 *             .name(&#34;example-monitor&#34;)
 *             .resourceGroupName(example.name())
 *             .location(example.location())
 *             .plan(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference))
 *             .user(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference))
 *             .build());
 * 
 *         var exampleLogzSubAccount = new LogzSubAccount(&#34;exampleLogzSubAccount&#34;, LogzSubAccountArgs.builder()        
 *             .name(&#34;example-subaccount&#34;)
 *             .logzMonitorId(exampleLogzMonitor.id())
 *             .user(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference))
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * logz SubAccounts can be imported using the `resource id`, e.g.
 * 
 * ```sh
 * $ pulumi import azure:monitoring/logzSubAccount:LogzSubAccount example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.Logz/monitors/monitor1/accounts/subAccount1
 * ```
 * 
 */
@ResourceType(type="azure:monitoring/logzSubAccount:LogzSubAccount")
public class LogzSubAccount extends com.pulumi.resources.CustomResource {
    /**
     * Whether the resource monitoring is enabled? Defaults to `true`.
     * 
     */
    @Export(name="enabled", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> enabled;

    /**
     * @return Whether the resource monitoring is enabled? Defaults to `true`.
     * 
     */
    public Output<Optional<Boolean>> enabled() {
        return Codegen.optional(this.enabled);
    }
    /**
     * The ID of the Logz Monitor. Changing this forces a new logz Sub Account to be created.
     * 
     */
    @Export(name="logzMonitorId", refs={String.class}, tree="[0]")
    private Output<String> logzMonitorId;

    /**
     * @return The ID of the Logz Monitor. Changing this forces a new logz Sub Account to be created.
     * 
     */
    public Output<String> logzMonitorId() {
        return this.logzMonitorId;
    }
    /**
     * The name which should be used for this logz Sub Account. Possible values must be between 1 and 32 characters in length and may contain only letters, numbers, hyphens and underscores. Changing this forces a new logz Sub Account to be created.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The name which should be used for this logz Sub Account. Possible values must be between 1 and 32 characters in length and may contain only letters, numbers, hyphens and underscores. Changing this forces a new logz Sub Account to be created.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * A mapping of tags which should be assigned to the logz Sub Account.
     * 
     */
    @Export(name="tags", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output</* @Nullable */ Map<String,String>> tags;

    /**
     * @return A mapping of tags which should be assigned to the logz Sub Account.
     * 
     */
    public Output<Optional<Map<String,String>>> tags() {
        return Codegen.optional(this.tags);
    }
    /**
     * A `user` block as defined below. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="user", refs={LogzSubAccountUser.class}, tree="[0]")
    private Output<LogzSubAccountUser> user;

    /**
     * @return A `user` block as defined below. Changing this forces a new resource to be created.
     * 
     */
    public Output<LogzSubAccountUser> user() {
        return this.user;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public LogzSubAccount(String name) {
        this(name, LogzSubAccountArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public LogzSubAccount(String name, LogzSubAccountArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public LogzSubAccount(String name, LogzSubAccountArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:monitoring/logzSubAccount:LogzSubAccount", name, args == null ? LogzSubAccountArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private LogzSubAccount(String name, Output<String> id, @Nullable LogzSubAccountState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:monitoring/logzSubAccount:LogzSubAccount", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static LogzSubAccount get(String name, Output<String> id, @Nullable LogzSubAccountState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new LogzSubAccount(name, id, state, options);
    }
}
