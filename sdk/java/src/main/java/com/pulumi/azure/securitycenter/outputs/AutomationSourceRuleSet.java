// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.securitycenter.outputs;

import com.pulumi.azure.securitycenter.outputs.AutomationSourceRuleSetRule;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.util.List;
import java.util.Objects;

@CustomType
public final class AutomationSourceRuleSet {
    /**
     * @return One or more `rule` blocks as defined below.
     * 
     * &gt; **NOTE:** This automation will trigger when all of the `rule`s in this `rule_set` are evaluated as &#39;true&#39;. This is equivalent to a logical &#39;AND&#39;.
     * 
     */
    private List<AutomationSourceRuleSetRule> rules;

    private AutomationSourceRuleSet() {}
    /**
     * @return One or more `rule` blocks as defined below.
     * 
     * &gt; **NOTE:** This automation will trigger when all of the `rule`s in this `rule_set` are evaluated as &#39;true&#39;. This is equivalent to a logical &#39;AND&#39;.
     * 
     */
    public List<AutomationSourceRuleSetRule> rules() {
        return this.rules;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AutomationSourceRuleSet defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<AutomationSourceRuleSetRule> rules;
        public Builder() {}
        public Builder(AutomationSourceRuleSet defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.rules = defaults.rules;
        }

        @CustomType.Setter
        public Builder rules(List<AutomationSourceRuleSetRule> rules) {
            if (rules == null) {
              throw new MissingRequiredPropertyException("AutomationSourceRuleSet", "rules");
            }
            this.rules = rules;
            return this;
        }
        public Builder rules(AutomationSourceRuleSetRule... rules) {
            return rules(List.of(rules));
        }
        public AutomationSourceRuleSet build() {
            final var _resultValue = new AutomationSourceRuleSet();
            _resultValue.rules = rules;
            return _resultValue;
        }
    }
}
