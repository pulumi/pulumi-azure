// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.dns;

import com.pulumi.azure.Utilities;
import com.pulumi.azure.dns.inputs.GetAAAARecordArgs;
import com.pulumi.azure.dns.inputs.GetAAAARecordPlainArgs;
import com.pulumi.azure.dns.inputs.GetARecordArgs;
import com.pulumi.azure.dns.inputs.GetARecordPlainArgs;
import com.pulumi.azure.dns.inputs.GetCAARecordArgs;
import com.pulumi.azure.dns.inputs.GetCAARecordPlainArgs;
import com.pulumi.azure.dns.inputs.GetCnameRecordArgs;
import com.pulumi.azure.dns.inputs.GetCnameRecordPlainArgs;
import com.pulumi.azure.dns.inputs.GetMxRecordArgs;
import com.pulumi.azure.dns.inputs.GetMxRecordPlainArgs;
import com.pulumi.azure.dns.inputs.GetNsRecordArgs;
import com.pulumi.azure.dns.inputs.GetNsRecordPlainArgs;
import com.pulumi.azure.dns.inputs.GetPtrRecordArgs;
import com.pulumi.azure.dns.inputs.GetPtrRecordPlainArgs;
import com.pulumi.azure.dns.inputs.GetSoaRecordArgs;
import com.pulumi.azure.dns.inputs.GetSoaRecordPlainArgs;
import com.pulumi.azure.dns.inputs.GetSrvRecordArgs;
import com.pulumi.azure.dns.inputs.GetSrvRecordPlainArgs;
import com.pulumi.azure.dns.inputs.GetTxtRecordArgs;
import com.pulumi.azure.dns.inputs.GetTxtRecordPlainArgs;
import com.pulumi.azure.dns.inputs.GetZoneArgs;
import com.pulumi.azure.dns.inputs.GetZonePlainArgs;
import com.pulumi.azure.dns.outputs.GetAAAARecordResult;
import com.pulumi.azure.dns.outputs.GetARecordResult;
import com.pulumi.azure.dns.outputs.GetCAARecordResult;
import com.pulumi.azure.dns.outputs.GetCnameRecordResult;
import com.pulumi.azure.dns.outputs.GetMxRecordResult;
import com.pulumi.azure.dns.outputs.GetNsRecordResult;
import com.pulumi.azure.dns.outputs.GetPtrRecordResult;
import com.pulumi.azure.dns.outputs.GetSoaRecordResult;
import com.pulumi.azure.dns.outputs.GetSrvRecordResult;
import com.pulumi.azure.dns.outputs.GetTxtRecordResult;
import com.pulumi.azure.dns.outputs.GetZoneResult;
import com.pulumi.core.Output;
import com.pulumi.core.TypeShape;
import com.pulumi.deployment.Deployment;
import com.pulumi.deployment.InvokeOptions;
import java.util.concurrent.CompletableFuture;

public final class DnsFunctions {
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azure.dns.DnsFunctions;
     * import com.pulumi.azure.dns.inputs.GetAAAARecordArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = DnsFunctions.getAAAARecord(GetAAAARecordArgs.builder()
     *             .name("test")
     *             .zoneName("test-zone")
     *             .resourceGroupName("test-rg")
     *             .build());
     * 
     *         ctx.export("dnsAaaaRecordId", example.applyValue(getAAAARecordResult -> getAAAARecordResult.id()));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetAAAARecordResult> getAAAARecord(GetAAAARecordArgs args) {
        return getAAAARecord(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azure.dns.DnsFunctions;
     * import com.pulumi.azure.dns.inputs.GetAAAARecordArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = DnsFunctions.getAAAARecord(GetAAAARecordArgs.builder()
     *             .name("test")
     *             .zoneName("test-zone")
     *             .resourceGroupName("test-rg")
     *             .build());
     * 
     *         ctx.export("dnsAaaaRecordId", example.applyValue(getAAAARecordResult -> getAAAARecordResult.id()));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetAAAARecordResult> getAAAARecordPlain(GetAAAARecordPlainArgs args) {
        return getAAAARecordPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azure.dns.DnsFunctions;
     * import com.pulumi.azure.dns.inputs.GetAAAARecordArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = DnsFunctions.getAAAARecord(GetAAAARecordArgs.builder()
     *             .name("test")
     *             .zoneName("test-zone")
     *             .resourceGroupName("test-rg")
     *             .build());
     * 
     *         ctx.export("dnsAaaaRecordId", example.applyValue(getAAAARecordResult -> getAAAARecordResult.id()));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetAAAARecordResult> getAAAARecord(GetAAAARecordArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("azure:dns/getAAAARecord:getAAAARecord", TypeShape.of(GetAAAARecordResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azure.dns.DnsFunctions;
     * import com.pulumi.azure.dns.inputs.GetAAAARecordArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = DnsFunctions.getAAAARecord(GetAAAARecordArgs.builder()
     *             .name("test")
     *             .zoneName("test-zone")
     *             .resourceGroupName("test-rg")
     *             .build());
     * 
     *         ctx.export("dnsAaaaRecordId", example.applyValue(getAAAARecordResult -> getAAAARecordResult.id()));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetAAAARecordResult> getAAAARecordPlain(GetAAAARecordPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("azure:dns/getAAAARecord:getAAAARecord", TypeShape.of(GetAAAARecordResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azure.dns.DnsFunctions;
     * import com.pulumi.azure.dns.inputs.GetARecordArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = DnsFunctions.getARecord(GetARecordArgs.builder()
     *             .name("test")
     *             .zoneName("test-zone")
     *             .resourceGroupName("test-rg")
     *             .build());
     * 
     *         ctx.export("dnsARecordId", example.applyValue(getARecordResult -> getARecordResult.id()));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetARecordResult> getARecord(GetARecordArgs args) {
        return getARecord(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azure.dns.DnsFunctions;
     * import com.pulumi.azure.dns.inputs.GetARecordArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = DnsFunctions.getARecord(GetARecordArgs.builder()
     *             .name("test")
     *             .zoneName("test-zone")
     *             .resourceGroupName("test-rg")
     *             .build());
     * 
     *         ctx.export("dnsARecordId", example.applyValue(getARecordResult -> getARecordResult.id()));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetARecordResult> getARecordPlain(GetARecordPlainArgs args) {
        return getARecordPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azure.dns.DnsFunctions;
     * import com.pulumi.azure.dns.inputs.GetARecordArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = DnsFunctions.getARecord(GetARecordArgs.builder()
     *             .name("test")
     *             .zoneName("test-zone")
     *             .resourceGroupName("test-rg")
     *             .build());
     * 
     *         ctx.export("dnsARecordId", example.applyValue(getARecordResult -> getARecordResult.id()));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetARecordResult> getARecord(GetARecordArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("azure:dns/getARecord:getARecord", TypeShape.of(GetARecordResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azure.dns.DnsFunctions;
     * import com.pulumi.azure.dns.inputs.GetARecordArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = DnsFunctions.getARecord(GetARecordArgs.builder()
     *             .name("test")
     *             .zoneName("test-zone")
     *             .resourceGroupName("test-rg")
     *             .build());
     * 
     *         ctx.export("dnsARecordId", example.applyValue(getARecordResult -> getARecordResult.id()));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetARecordResult> getARecordPlain(GetARecordPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("azure:dns/getARecord:getARecord", TypeShape.of(GetARecordResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azure.dns.DnsFunctions;
     * import com.pulumi.azure.dns.inputs.GetCAARecordArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = DnsFunctions.getCAARecord(GetCAARecordArgs.builder()
     *             .name("test")
     *             .zoneName("test-zone")
     *             .resourceGroupName("test-rg")
     *             .build());
     * 
     *         ctx.export("dnsCaaRecordId", example.applyValue(getCAARecordResult -> getCAARecordResult.id()));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetCAARecordResult> getCAARecord(GetCAARecordArgs args) {
        return getCAARecord(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azure.dns.DnsFunctions;
     * import com.pulumi.azure.dns.inputs.GetCAARecordArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = DnsFunctions.getCAARecord(GetCAARecordArgs.builder()
     *             .name("test")
     *             .zoneName("test-zone")
     *             .resourceGroupName("test-rg")
     *             .build());
     * 
     *         ctx.export("dnsCaaRecordId", example.applyValue(getCAARecordResult -> getCAARecordResult.id()));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetCAARecordResult> getCAARecordPlain(GetCAARecordPlainArgs args) {
        return getCAARecordPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azure.dns.DnsFunctions;
     * import com.pulumi.azure.dns.inputs.GetCAARecordArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = DnsFunctions.getCAARecord(GetCAARecordArgs.builder()
     *             .name("test")
     *             .zoneName("test-zone")
     *             .resourceGroupName("test-rg")
     *             .build());
     * 
     *         ctx.export("dnsCaaRecordId", example.applyValue(getCAARecordResult -> getCAARecordResult.id()));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetCAARecordResult> getCAARecord(GetCAARecordArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("azure:dns/getCAARecord:getCAARecord", TypeShape.of(GetCAARecordResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azure.dns.DnsFunctions;
     * import com.pulumi.azure.dns.inputs.GetCAARecordArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = DnsFunctions.getCAARecord(GetCAARecordArgs.builder()
     *             .name("test")
     *             .zoneName("test-zone")
     *             .resourceGroupName("test-rg")
     *             .build());
     * 
     *         ctx.export("dnsCaaRecordId", example.applyValue(getCAARecordResult -> getCAARecordResult.id()));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetCAARecordResult> getCAARecordPlain(GetCAARecordPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("azure:dns/getCAARecord:getCAARecord", TypeShape.of(GetCAARecordResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azure.dns.DnsFunctions;
     * import com.pulumi.azure.dns.inputs.GetCnameRecordArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = DnsFunctions.getCnameRecord(GetCnameRecordArgs.builder()
     *             .name("test")
     *             .zoneName("test-zone")
     *             .resourceGroupName("test-rg")
     *             .build());
     * 
     *         ctx.export("dnsCnameRecordId", example.applyValue(getCnameRecordResult -> getCnameRecordResult.id()));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetCnameRecordResult> getCnameRecord(GetCnameRecordArgs args) {
        return getCnameRecord(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azure.dns.DnsFunctions;
     * import com.pulumi.azure.dns.inputs.GetCnameRecordArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = DnsFunctions.getCnameRecord(GetCnameRecordArgs.builder()
     *             .name("test")
     *             .zoneName("test-zone")
     *             .resourceGroupName("test-rg")
     *             .build());
     * 
     *         ctx.export("dnsCnameRecordId", example.applyValue(getCnameRecordResult -> getCnameRecordResult.id()));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetCnameRecordResult> getCnameRecordPlain(GetCnameRecordPlainArgs args) {
        return getCnameRecordPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azure.dns.DnsFunctions;
     * import com.pulumi.azure.dns.inputs.GetCnameRecordArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = DnsFunctions.getCnameRecord(GetCnameRecordArgs.builder()
     *             .name("test")
     *             .zoneName("test-zone")
     *             .resourceGroupName("test-rg")
     *             .build());
     * 
     *         ctx.export("dnsCnameRecordId", example.applyValue(getCnameRecordResult -> getCnameRecordResult.id()));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetCnameRecordResult> getCnameRecord(GetCnameRecordArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("azure:dns/getCnameRecord:getCnameRecord", TypeShape.of(GetCnameRecordResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azure.dns.DnsFunctions;
     * import com.pulumi.azure.dns.inputs.GetCnameRecordArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = DnsFunctions.getCnameRecord(GetCnameRecordArgs.builder()
     *             .name("test")
     *             .zoneName("test-zone")
     *             .resourceGroupName("test-rg")
     *             .build());
     * 
     *         ctx.export("dnsCnameRecordId", example.applyValue(getCnameRecordResult -> getCnameRecordResult.id()));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetCnameRecordResult> getCnameRecordPlain(GetCnameRecordPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("azure:dns/getCnameRecord:getCnameRecord", TypeShape.of(GetCnameRecordResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azure.dns.DnsFunctions;
     * import com.pulumi.azure.dns.inputs.GetMxRecordArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = DnsFunctions.getMxRecord(GetMxRecordArgs.builder()
     *             .name("test")
     *             .zoneName("test-zone")
     *             .resourceGroupName("test-rg")
     *             .build());
     * 
     *         ctx.export("dnsMxRecordId", example.applyValue(getMxRecordResult -> getMxRecordResult.id()));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetMxRecordResult> getMxRecord(GetMxRecordArgs args) {
        return getMxRecord(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azure.dns.DnsFunctions;
     * import com.pulumi.azure.dns.inputs.GetMxRecordArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = DnsFunctions.getMxRecord(GetMxRecordArgs.builder()
     *             .name("test")
     *             .zoneName("test-zone")
     *             .resourceGroupName("test-rg")
     *             .build());
     * 
     *         ctx.export("dnsMxRecordId", example.applyValue(getMxRecordResult -> getMxRecordResult.id()));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetMxRecordResult> getMxRecordPlain(GetMxRecordPlainArgs args) {
        return getMxRecordPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azure.dns.DnsFunctions;
     * import com.pulumi.azure.dns.inputs.GetMxRecordArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = DnsFunctions.getMxRecord(GetMxRecordArgs.builder()
     *             .name("test")
     *             .zoneName("test-zone")
     *             .resourceGroupName("test-rg")
     *             .build());
     * 
     *         ctx.export("dnsMxRecordId", example.applyValue(getMxRecordResult -> getMxRecordResult.id()));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetMxRecordResult> getMxRecord(GetMxRecordArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("azure:dns/getMxRecord:getMxRecord", TypeShape.of(GetMxRecordResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azure.dns.DnsFunctions;
     * import com.pulumi.azure.dns.inputs.GetMxRecordArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = DnsFunctions.getMxRecord(GetMxRecordArgs.builder()
     *             .name("test")
     *             .zoneName("test-zone")
     *             .resourceGroupName("test-rg")
     *             .build());
     * 
     *         ctx.export("dnsMxRecordId", example.applyValue(getMxRecordResult -> getMxRecordResult.id()));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetMxRecordResult> getMxRecordPlain(GetMxRecordPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("azure:dns/getMxRecord:getMxRecord", TypeShape.of(GetMxRecordResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azure.dns.DnsFunctions;
     * import com.pulumi.azure.dns.inputs.GetNsRecordArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = DnsFunctions.getNsRecord(GetNsRecordArgs.builder()
     *             .name("test")
     *             .zoneName("test-zone")
     *             .resourceGroupName("test-rg")
     *             .build());
     * 
     *         ctx.export("dnsNsRecordId", example.applyValue(getNsRecordResult -> getNsRecordResult.id()));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetNsRecordResult> getNsRecord(GetNsRecordArgs args) {
        return getNsRecord(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azure.dns.DnsFunctions;
     * import com.pulumi.azure.dns.inputs.GetNsRecordArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = DnsFunctions.getNsRecord(GetNsRecordArgs.builder()
     *             .name("test")
     *             .zoneName("test-zone")
     *             .resourceGroupName("test-rg")
     *             .build());
     * 
     *         ctx.export("dnsNsRecordId", example.applyValue(getNsRecordResult -> getNsRecordResult.id()));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetNsRecordResult> getNsRecordPlain(GetNsRecordPlainArgs args) {
        return getNsRecordPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azure.dns.DnsFunctions;
     * import com.pulumi.azure.dns.inputs.GetNsRecordArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = DnsFunctions.getNsRecord(GetNsRecordArgs.builder()
     *             .name("test")
     *             .zoneName("test-zone")
     *             .resourceGroupName("test-rg")
     *             .build());
     * 
     *         ctx.export("dnsNsRecordId", example.applyValue(getNsRecordResult -> getNsRecordResult.id()));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetNsRecordResult> getNsRecord(GetNsRecordArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("azure:dns/getNsRecord:getNsRecord", TypeShape.of(GetNsRecordResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azure.dns.DnsFunctions;
     * import com.pulumi.azure.dns.inputs.GetNsRecordArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = DnsFunctions.getNsRecord(GetNsRecordArgs.builder()
     *             .name("test")
     *             .zoneName("test-zone")
     *             .resourceGroupName("test-rg")
     *             .build());
     * 
     *         ctx.export("dnsNsRecordId", example.applyValue(getNsRecordResult -> getNsRecordResult.id()));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetNsRecordResult> getNsRecordPlain(GetNsRecordPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("azure:dns/getNsRecord:getNsRecord", TypeShape.of(GetNsRecordResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azure.dns.DnsFunctions;
     * import com.pulumi.azure.dns.inputs.GetPtrRecordArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = DnsFunctions.getPtrRecord(GetPtrRecordArgs.builder()
     *             .name("test")
     *             .zoneName("test-zone")
     *             .resourceGroupName("test-rg")
     *             .build());
     * 
     *         ctx.export("dnsPtrRecordId", example.applyValue(getPtrRecordResult -> getPtrRecordResult.id()));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetPtrRecordResult> getPtrRecord(GetPtrRecordArgs args) {
        return getPtrRecord(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azure.dns.DnsFunctions;
     * import com.pulumi.azure.dns.inputs.GetPtrRecordArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = DnsFunctions.getPtrRecord(GetPtrRecordArgs.builder()
     *             .name("test")
     *             .zoneName("test-zone")
     *             .resourceGroupName("test-rg")
     *             .build());
     * 
     *         ctx.export("dnsPtrRecordId", example.applyValue(getPtrRecordResult -> getPtrRecordResult.id()));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetPtrRecordResult> getPtrRecordPlain(GetPtrRecordPlainArgs args) {
        return getPtrRecordPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azure.dns.DnsFunctions;
     * import com.pulumi.azure.dns.inputs.GetPtrRecordArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = DnsFunctions.getPtrRecord(GetPtrRecordArgs.builder()
     *             .name("test")
     *             .zoneName("test-zone")
     *             .resourceGroupName("test-rg")
     *             .build());
     * 
     *         ctx.export("dnsPtrRecordId", example.applyValue(getPtrRecordResult -> getPtrRecordResult.id()));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetPtrRecordResult> getPtrRecord(GetPtrRecordArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("azure:dns/getPtrRecord:getPtrRecord", TypeShape.of(GetPtrRecordResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azure.dns.DnsFunctions;
     * import com.pulumi.azure.dns.inputs.GetPtrRecordArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = DnsFunctions.getPtrRecord(GetPtrRecordArgs.builder()
     *             .name("test")
     *             .zoneName("test-zone")
     *             .resourceGroupName("test-rg")
     *             .build());
     * 
     *         ctx.export("dnsPtrRecordId", example.applyValue(getPtrRecordResult -> getPtrRecordResult.id()));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetPtrRecordResult> getPtrRecordPlain(GetPtrRecordPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("azure:dns/getPtrRecord:getPtrRecord", TypeShape.of(GetPtrRecordResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azure.dns.DnsFunctions;
     * import com.pulumi.azure.dns.inputs.GetSoaRecordArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = DnsFunctions.getSoaRecord(GetSoaRecordArgs.builder()
     *             .zoneName("test-zone")
     *             .resourceGroupName("test-rg")
     *             .build());
     * 
     *         ctx.export("dnsSoaRecordId", example.applyValue(getSoaRecordResult -> getSoaRecordResult.id()));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetSoaRecordResult> getSoaRecord(GetSoaRecordArgs args) {
        return getSoaRecord(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azure.dns.DnsFunctions;
     * import com.pulumi.azure.dns.inputs.GetSoaRecordArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = DnsFunctions.getSoaRecord(GetSoaRecordArgs.builder()
     *             .zoneName("test-zone")
     *             .resourceGroupName("test-rg")
     *             .build());
     * 
     *         ctx.export("dnsSoaRecordId", example.applyValue(getSoaRecordResult -> getSoaRecordResult.id()));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetSoaRecordResult> getSoaRecordPlain(GetSoaRecordPlainArgs args) {
        return getSoaRecordPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azure.dns.DnsFunctions;
     * import com.pulumi.azure.dns.inputs.GetSoaRecordArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = DnsFunctions.getSoaRecord(GetSoaRecordArgs.builder()
     *             .zoneName("test-zone")
     *             .resourceGroupName("test-rg")
     *             .build());
     * 
     *         ctx.export("dnsSoaRecordId", example.applyValue(getSoaRecordResult -> getSoaRecordResult.id()));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetSoaRecordResult> getSoaRecord(GetSoaRecordArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("azure:dns/getSoaRecord:getSoaRecord", TypeShape.of(GetSoaRecordResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azure.dns.DnsFunctions;
     * import com.pulumi.azure.dns.inputs.GetSoaRecordArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = DnsFunctions.getSoaRecord(GetSoaRecordArgs.builder()
     *             .zoneName("test-zone")
     *             .resourceGroupName("test-rg")
     *             .build());
     * 
     *         ctx.export("dnsSoaRecordId", example.applyValue(getSoaRecordResult -> getSoaRecordResult.id()));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetSoaRecordResult> getSoaRecordPlain(GetSoaRecordPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("azure:dns/getSoaRecord:getSoaRecord", TypeShape.of(GetSoaRecordResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azure.dns.DnsFunctions;
     * import com.pulumi.azure.dns.inputs.GetSrvRecordArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = DnsFunctions.getSrvRecord(GetSrvRecordArgs.builder()
     *             .name("test")
     *             .zoneName("test-zone")
     *             .resourceGroupName("test-rg")
     *             .build());
     * 
     *         ctx.export("dnsSrvRecordId", example.applyValue(getSrvRecordResult -> getSrvRecordResult.id()));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetSrvRecordResult> getSrvRecord(GetSrvRecordArgs args) {
        return getSrvRecord(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azure.dns.DnsFunctions;
     * import com.pulumi.azure.dns.inputs.GetSrvRecordArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = DnsFunctions.getSrvRecord(GetSrvRecordArgs.builder()
     *             .name("test")
     *             .zoneName("test-zone")
     *             .resourceGroupName("test-rg")
     *             .build());
     * 
     *         ctx.export("dnsSrvRecordId", example.applyValue(getSrvRecordResult -> getSrvRecordResult.id()));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetSrvRecordResult> getSrvRecordPlain(GetSrvRecordPlainArgs args) {
        return getSrvRecordPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azure.dns.DnsFunctions;
     * import com.pulumi.azure.dns.inputs.GetSrvRecordArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = DnsFunctions.getSrvRecord(GetSrvRecordArgs.builder()
     *             .name("test")
     *             .zoneName("test-zone")
     *             .resourceGroupName("test-rg")
     *             .build());
     * 
     *         ctx.export("dnsSrvRecordId", example.applyValue(getSrvRecordResult -> getSrvRecordResult.id()));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetSrvRecordResult> getSrvRecord(GetSrvRecordArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("azure:dns/getSrvRecord:getSrvRecord", TypeShape.of(GetSrvRecordResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azure.dns.DnsFunctions;
     * import com.pulumi.azure.dns.inputs.GetSrvRecordArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = DnsFunctions.getSrvRecord(GetSrvRecordArgs.builder()
     *             .name("test")
     *             .zoneName("test-zone")
     *             .resourceGroupName("test-rg")
     *             .build());
     * 
     *         ctx.export("dnsSrvRecordId", example.applyValue(getSrvRecordResult -> getSrvRecordResult.id()));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetSrvRecordResult> getSrvRecordPlain(GetSrvRecordPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("azure:dns/getSrvRecord:getSrvRecord", TypeShape.of(GetSrvRecordResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azure.dns.DnsFunctions;
     * import com.pulumi.azure.dns.inputs.GetTxtRecordArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = DnsFunctions.getTxtRecord(GetTxtRecordArgs.builder()
     *             .name("test")
     *             .zoneName("test-zone")
     *             .resourceGroupName("test-rg")
     *             .build());
     * 
     *         ctx.export("dnsTxtRecordId", example.applyValue(getTxtRecordResult -> getTxtRecordResult.id()));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetTxtRecordResult> getTxtRecord(GetTxtRecordArgs args) {
        return getTxtRecord(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azure.dns.DnsFunctions;
     * import com.pulumi.azure.dns.inputs.GetTxtRecordArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = DnsFunctions.getTxtRecord(GetTxtRecordArgs.builder()
     *             .name("test")
     *             .zoneName("test-zone")
     *             .resourceGroupName("test-rg")
     *             .build());
     * 
     *         ctx.export("dnsTxtRecordId", example.applyValue(getTxtRecordResult -> getTxtRecordResult.id()));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetTxtRecordResult> getTxtRecordPlain(GetTxtRecordPlainArgs args) {
        return getTxtRecordPlain(args, InvokeOptions.Empty);
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azure.dns.DnsFunctions;
     * import com.pulumi.azure.dns.inputs.GetTxtRecordArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = DnsFunctions.getTxtRecord(GetTxtRecordArgs.builder()
     *             .name("test")
     *             .zoneName("test-zone")
     *             .resourceGroupName("test-rg")
     *             .build());
     * 
     *         ctx.export("dnsTxtRecordId", example.applyValue(getTxtRecordResult -> getTxtRecordResult.id()));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetTxtRecordResult> getTxtRecord(GetTxtRecordArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("azure:dns/getTxtRecord:getTxtRecord", TypeShape.of(GetTxtRecordResult.class), args, Utilities.withVersion(options));
    }
    /**
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azure.dns.DnsFunctions;
     * import com.pulumi.azure.dns.inputs.GetTxtRecordArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = DnsFunctions.getTxtRecord(GetTxtRecordArgs.builder()
     *             .name("test")
     *             .zoneName("test-zone")
     *             .resourceGroupName("test-rg")
     *             .build());
     * 
     *         ctx.export("dnsTxtRecordId", example.applyValue(getTxtRecordResult -> getTxtRecordResult.id()));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetTxtRecordResult> getTxtRecordPlain(GetTxtRecordPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("azure:dns/getTxtRecord:getTxtRecord", TypeShape.of(GetTxtRecordResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to access information about an existing DNS Zone.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azure.dns.DnsFunctions;
     * import com.pulumi.azure.dns.inputs.GetZoneArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = DnsFunctions.getZone(GetZoneArgs.builder()
     *             .name("search-eventhubns")
     *             .resourceGroupName("search-service")
     *             .build());
     * 
     *         ctx.export("dnsZoneId", example.applyValue(getZoneResult -> getZoneResult.id()));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZoneResult> getZone(GetZoneArgs args) {
        return getZone(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to access information about an existing DNS Zone.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azure.dns.DnsFunctions;
     * import com.pulumi.azure.dns.inputs.GetZoneArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = DnsFunctions.getZone(GetZoneArgs.builder()
     *             .name("search-eventhubns")
     *             .resourceGroupName("search-service")
     *             .build());
     * 
     *         ctx.export("dnsZoneId", example.applyValue(getZoneResult -> getZoneResult.id()));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetZoneResult> getZonePlain(GetZonePlainArgs args) {
        return getZonePlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to access information about an existing DNS Zone.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azure.dns.DnsFunctions;
     * import com.pulumi.azure.dns.inputs.GetZoneArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = DnsFunctions.getZone(GetZoneArgs.builder()
     *             .name("search-eventhubns")
     *             .resourceGroupName("search-service")
     *             .build());
     * 
     *         ctx.export("dnsZoneId", example.applyValue(getZoneResult -> getZoneResult.id()));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetZoneResult> getZone(GetZoneArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("azure:dns/getZone:getZone", TypeShape.of(GetZoneResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to access information about an existing DNS Zone.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azure.dns.DnsFunctions;
     * import com.pulumi.azure.dns.inputs.GetZoneArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = DnsFunctions.getZone(GetZoneArgs.builder()
     *             .name("search-eventhubns")
     *             .resourceGroupName("search-service")
     *             .build());
     * 
     *         ctx.export("dnsZoneId", example.applyValue(getZoneResult -> getZoneResult.id()));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetZoneResult> getZonePlain(GetZonePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("azure:dns/getZone:getZone", TypeShape.of(GetZoneResult.class), args, Utilities.withVersion(options));
    }
}
