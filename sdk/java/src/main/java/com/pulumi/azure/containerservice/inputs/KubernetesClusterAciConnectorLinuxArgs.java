// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.containerservice.inputs;

import com.pulumi.azure.containerservice.inputs.KubernetesClusterAciConnectorLinuxConnectorIdentityArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class KubernetesClusterAciConnectorLinuxArgs extends com.pulumi.resources.ResourceArgs {

    public static final KubernetesClusterAciConnectorLinuxArgs Empty = new KubernetesClusterAciConnectorLinuxArgs();

    /**
     * A `connector_identity` block is exported. The exported attributes are defined below.
     * 
     */
    @Import(name="connectorIdentities")
    private @Nullable Output<List<KubernetesClusterAciConnectorLinuxConnectorIdentityArgs>> connectorIdentities;

    /**
     * @return A `connector_identity` block is exported. The exported attributes are defined below.
     * 
     */
    public Optional<Output<List<KubernetesClusterAciConnectorLinuxConnectorIdentityArgs>>> connectorIdentities() {
        return Optional.ofNullable(this.connectorIdentities);
    }

    /**
     * The subnet name for the virtual nodes to run.
     * 
     * &gt; **Note:** At this time ACI Connectors are not supported in Azure China.
     * 
     * &gt; **Note:** AKS will add a delegation to the subnet named here. To prevent further runs from failing you should make sure that the subnet you create for virtual nodes has a delegation, like so.
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azure.network.Subnet;
     * import com.pulumi.azure.network.SubnetArgs;
     * import com.pulumi.azure.network.inputs.SubnetDelegationArgs;
     * import com.pulumi.azure.network.inputs.SubnetDelegationServiceDelegationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var virtual = new Subnet(&#34;virtual&#34;, SubnetArgs.builder()        
     *             .delegations(SubnetDelegationArgs.builder()
     *                 .name(&#34;aciDelegation&#34;)
     *                 .serviceDelegation(SubnetDelegationServiceDelegationArgs.builder()
     *                     .actions(&#34;Microsoft.Network/virtualNetworks/subnets/action&#34;)
     *                     .name(&#34;Microsoft.ContainerInstance/containerGroups&#34;)
     *                     .build())
     *                 .build())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    @Import(name="subnetName", required=true)
    private Output<String> subnetName;

    /**
     * @return The subnet name for the virtual nodes to run.
     * 
     * &gt; **Note:** At this time ACI Connectors are not supported in Azure China.
     * 
     * &gt; **Note:** AKS will add a delegation to the subnet named here. To prevent further runs from failing you should make sure that the subnet you create for virtual nodes has a delegation, like so.
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azure.network.Subnet;
     * import com.pulumi.azure.network.SubnetArgs;
     * import com.pulumi.azure.network.inputs.SubnetDelegationArgs;
     * import com.pulumi.azure.network.inputs.SubnetDelegationServiceDelegationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var virtual = new Subnet(&#34;virtual&#34;, SubnetArgs.builder()        
     *             .delegations(SubnetDelegationArgs.builder()
     *                 .name(&#34;aciDelegation&#34;)
     *                 .serviceDelegation(SubnetDelegationServiceDelegationArgs.builder()
     *                     .actions(&#34;Microsoft.Network/virtualNetworks/subnets/action&#34;)
     *                     .name(&#34;Microsoft.ContainerInstance/containerGroups&#34;)
     *                     .build())
     *                 .build())
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public Output<String> subnetName() {
        return this.subnetName;
    }

    private KubernetesClusterAciConnectorLinuxArgs() {}

    private KubernetesClusterAciConnectorLinuxArgs(KubernetesClusterAciConnectorLinuxArgs $) {
        this.connectorIdentities = $.connectorIdentities;
        this.subnetName = $.subnetName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(KubernetesClusterAciConnectorLinuxArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private KubernetesClusterAciConnectorLinuxArgs $;

        public Builder() {
            $ = new KubernetesClusterAciConnectorLinuxArgs();
        }

        public Builder(KubernetesClusterAciConnectorLinuxArgs defaults) {
            $ = new KubernetesClusterAciConnectorLinuxArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param connectorIdentities A `connector_identity` block is exported. The exported attributes are defined below.
         * 
         * @return builder
         * 
         */
        public Builder connectorIdentities(@Nullable Output<List<KubernetesClusterAciConnectorLinuxConnectorIdentityArgs>> connectorIdentities) {
            $.connectorIdentities = connectorIdentities;
            return this;
        }

        /**
         * @param connectorIdentities A `connector_identity` block is exported. The exported attributes are defined below.
         * 
         * @return builder
         * 
         */
        public Builder connectorIdentities(List<KubernetesClusterAciConnectorLinuxConnectorIdentityArgs> connectorIdentities) {
            return connectorIdentities(Output.of(connectorIdentities));
        }

        /**
         * @param connectorIdentities A `connector_identity` block is exported. The exported attributes are defined below.
         * 
         * @return builder
         * 
         */
        public Builder connectorIdentities(KubernetesClusterAciConnectorLinuxConnectorIdentityArgs... connectorIdentities) {
            return connectorIdentities(List.of(connectorIdentities));
        }

        /**
         * @param subnetName The subnet name for the virtual nodes to run.
         * 
         * &gt; **Note:** At this time ACI Connectors are not supported in Azure China.
         * 
         * &gt; **Note:** AKS will add a delegation to the subnet named here. To prevent further runs from failing you should make sure that the subnet you create for virtual nodes has a delegation, like so.
         * ```java
         * package generated_program;
         * 
         * import com.pulumi.Context;
         * import com.pulumi.Pulumi;
         * import com.pulumi.core.Output;
         * import com.pulumi.azure.network.Subnet;
         * import com.pulumi.azure.network.SubnetArgs;
         * import com.pulumi.azure.network.inputs.SubnetDelegationArgs;
         * import com.pulumi.azure.network.inputs.SubnetDelegationServiceDelegationArgs;
         * import java.util.List;
         * import java.util.ArrayList;
         * import java.util.Map;
         * import java.io.File;
         * import java.nio.file.Files;
         * import java.nio.file.Paths;
         * 
         * public class App {
         *     public static void main(String[] args) {
         *         Pulumi.run(App::stack);
         *     }
         * 
         *     public static void stack(Context ctx) {
         *         var virtual = new Subnet(&#34;virtual&#34;, SubnetArgs.builder()        
         *             .delegations(SubnetDelegationArgs.builder()
         *                 .name(&#34;aciDelegation&#34;)
         *                 .serviceDelegation(SubnetDelegationServiceDelegationArgs.builder()
         *                     .actions(&#34;Microsoft.Network/virtualNetworks/subnets/action&#34;)
         *                     .name(&#34;Microsoft.ContainerInstance/containerGroups&#34;)
         *                     .build())
         *                 .build())
         *             .build());
         * 
         *     }
         * }
         * ```
         * 
         * @return builder
         * 
         */
        public Builder subnetName(Output<String> subnetName) {
            $.subnetName = subnetName;
            return this;
        }

        /**
         * @param subnetName The subnet name for the virtual nodes to run.
         * 
         * &gt; **Note:** At this time ACI Connectors are not supported in Azure China.
         * 
         * &gt; **Note:** AKS will add a delegation to the subnet named here. To prevent further runs from failing you should make sure that the subnet you create for virtual nodes has a delegation, like so.
         * ```java
         * package generated_program;
         * 
         * import com.pulumi.Context;
         * import com.pulumi.Pulumi;
         * import com.pulumi.core.Output;
         * import com.pulumi.azure.network.Subnet;
         * import com.pulumi.azure.network.SubnetArgs;
         * import com.pulumi.azure.network.inputs.SubnetDelegationArgs;
         * import com.pulumi.azure.network.inputs.SubnetDelegationServiceDelegationArgs;
         * import java.util.List;
         * import java.util.ArrayList;
         * import java.util.Map;
         * import java.io.File;
         * import java.nio.file.Files;
         * import java.nio.file.Paths;
         * 
         * public class App {
         *     public static void main(String[] args) {
         *         Pulumi.run(App::stack);
         *     }
         * 
         *     public static void stack(Context ctx) {
         *         var virtual = new Subnet(&#34;virtual&#34;, SubnetArgs.builder()        
         *             .delegations(SubnetDelegationArgs.builder()
         *                 .name(&#34;aciDelegation&#34;)
         *                 .serviceDelegation(SubnetDelegationServiceDelegationArgs.builder()
         *                     .actions(&#34;Microsoft.Network/virtualNetworks/subnets/action&#34;)
         *                     .name(&#34;Microsoft.ContainerInstance/containerGroups&#34;)
         *                     .build())
         *                 .build())
         *             .build());
         * 
         *     }
         * }
         * ```
         * 
         * @return builder
         * 
         */
        public Builder subnetName(String subnetName) {
            return subnetName(Output.of(subnetName));
        }

        public KubernetesClusterAciConnectorLinuxArgs build() {
            if ($.subnetName == null) {
                throw new MissingRequiredPropertyException("KubernetesClusterAciConnectorLinuxArgs", "subnetName");
            }
            return $;
        }
    }

}
