// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.management.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GroupPolicyAssignmentNonComplianceMessageArgs extends com.pulumi.resources.ResourceArgs {

    public static final GroupPolicyAssignmentNonComplianceMessageArgs Empty = new GroupPolicyAssignmentNonComplianceMessageArgs();

    /**
     * The non-compliance message text. When assigning policy sets (initiatives), unless `policy_definition_reference_id` is specified then this message will be the default for all policies.
     * 
     */
    @Import(name="content", required=true)
    private Output<String> content;

    /**
     * @return The non-compliance message text. When assigning policy sets (initiatives), unless `policy_definition_reference_id` is specified then this message will be the default for all policies.
     * 
     */
    public Output<String> content() {
        return this.content;
    }

    /**
     * When assigning policy sets (initiatives), this is the ID of the policy definition that the non-compliance message applies to.
     * 
     */
    @Import(name="policyDefinitionReferenceId")
    private @Nullable Output<String> policyDefinitionReferenceId;

    /**
     * @return When assigning policy sets (initiatives), this is the ID of the policy definition that the non-compliance message applies to.
     * 
     */
    public Optional<Output<String>> policyDefinitionReferenceId() {
        return Optional.ofNullable(this.policyDefinitionReferenceId);
    }

    private GroupPolicyAssignmentNonComplianceMessageArgs() {}

    private GroupPolicyAssignmentNonComplianceMessageArgs(GroupPolicyAssignmentNonComplianceMessageArgs $) {
        this.content = $.content;
        this.policyDefinitionReferenceId = $.policyDefinitionReferenceId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GroupPolicyAssignmentNonComplianceMessageArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GroupPolicyAssignmentNonComplianceMessageArgs $;

        public Builder() {
            $ = new GroupPolicyAssignmentNonComplianceMessageArgs();
        }

        public Builder(GroupPolicyAssignmentNonComplianceMessageArgs defaults) {
            $ = new GroupPolicyAssignmentNonComplianceMessageArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param content The non-compliance message text. When assigning policy sets (initiatives), unless `policy_definition_reference_id` is specified then this message will be the default for all policies.
         * 
         * @return builder
         * 
         */
        public Builder content(Output<String> content) {
            $.content = content;
            return this;
        }

        /**
         * @param content The non-compliance message text. When assigning policy sets (initiatives), unless `policy_definition_reference_id` is specified then this message will be the default for all policies.
         * 
         * @return builder
         * 
         */
        public Builder content(String content) {
            return content(Output.of(content));
        }

        /**
         * @param policyDefinitionReferenceId When assigning policy sets (initiatives), this is the ID of the policy definition that the non-compliance message applies to.
         * 
         * @return builder
         * 
         */
        public Builder policyDefinitionReferenceId(@Nullable Output<String> policyDefinitionReferenceId) {
            $.policyDefinitionReferenceId = policyDefinitionReferenceId;
            return this;
        }

        /**
         * @param policyDefinitionReferenceId When assigning policy sets (initiatives), this is the ID of the policy definition that the non-compliance message applies to.
         * 
         * @return builder
         * 
         */
        public Builder policyDefinitionReferenceId(String policyDefinitionReferenceId) {
            return policyDefinitionReferenceId(Output.of(policyDefinitionReferenceId));
        }

        public GroupPolicyAssignmentNonComplianceMessageArgs build() {
            if ($.content == null) {
                throw new MissingRequiredPropertyException("GroupPolicyAssignmentNonComplianceMessageArgs", "content");
            }
            return $;
        }
    }

}
