// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.appplatform.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class SpringCloudAppPersistentDisk {
    /**
     * @return Specifies the mount path of the persistent disk. Defaults to `/persistent`.
     * 
     */
    private final @Nullable String mountPath;
    /**
     * @return Specifies the size of the persistent disk in GB. Possible values are between `0` and `50`.
     * 
     */
    private final Integer sizeInGb;

    @CustomType.Constructor
    private SpringCloudAppPersistentDisk(
        @CustomType.Parameter("mountPath") @Nullable String mountPath,
        @CustomType.Parameter("sizeInGb") Integer sizeInGb) {
        this.mountPath = mountPath;
        this.sizeInGb = sizeInGb;
    }

    /**
     * @return Specifies the mount path of the persistent disk. Defaults to `/persistent`.
     * 
     */
    public Optional<String> mountPath() {
        return Optional.ofNullable(this.mountPath);
    }
    /**
     * @return Specifies the size of the persistent disk in GB. Possible values are between `0` and `50`.
     * 
     */
    public Integer sizeInGb() {
        return this.sizeInGb;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SpringCloudAppPersistentDisk defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String mountPath;
        private Integer sizeInGb;

        public Builder() {
    	      // Empty
        }

        public Builder(SpringCloudAppPersistentDisk defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.mountPath = defaults.mountPath;
    	      this.sizeInGb = defaults.sizeInGb;
        }

        public Builder mountPath(@Nullable String mountPath) {
            this.mountPath = mountPath;
            return this;
        }
        public Builder sizeInGb(Integer sizeInGb) {
            this.sizeInGb = Objects.requireNonNull(sizeInGb);
            return this;
        }        public SpringCloudAppPersistentDisk build() {
            return new SpringCloudAppPersistentDisk(mountPath, sizeInGb);
        }
    }
}
