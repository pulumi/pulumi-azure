// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.compute.outputs;

import com.pulumi.azure.compute.outputs.GetDisk;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetResult {
    /**
     * @return a `disk` block as detailed below.
     * 
     */
    private List<GetDisk> disks;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private String resourceGroupName;

    private GetResult() {}
    /**
     * @return a `disk` block as detailed below.
     * 
     */
    public List<GetDisk> disks() {
        return this.disks;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public String resourceGroupName() {
        return this.resourceGroupName;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetDisk> disks;
        private String id;
        private String resourceGroupName;
        public Builder() {}
        public Builder(GetResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.disks = defaults.disks;
    	      this.id = defaults.id;
    	      this.resourceGroupName = defaults.resourceGroupName;
        }

        @CustomType.Setter
        public Builder disks(List<GetDisk> disks) {
            if (disks == null) {
              throw new MissingRequiredPropertyException("GetResult", "disks");
            }
            this.disks = disks;
            return this;
        }
        public Builder disks(GetDisk... disks) {
            return disks(List.of(disks));
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder resourceGroupName(String resourceGroupName) {
            if (resourceGroupName == null) {
              throw new MissingRequiredPropertyException("GetResult", "resourceGroupName");
            }
            this.resourceGroupName = resourceGroupName;
            return this;
        }
        public GetResult build() {
            final var _resultValue = new GetResult();
            _resultValue.disks = disks;
            _resultValue.id = id;
            _resultValue.resourceGroupName = resourceGroupName;
            return _resultValue;
        }
    }
}
