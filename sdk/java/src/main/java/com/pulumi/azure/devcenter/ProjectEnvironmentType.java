// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.devcenter;

import com.pulumi.azure.Utilities;
import com.pulumi.azure.devcenter.ProjectEnvironmentTypeArgs;
import com.pulumi.azure.devcenter.inputs.ProjectEnvironmentTypeState;
import com.pulumi.azure.devcenter.outputs.ProjectEnvironmentTypeIdentity;
import com.pulumi.azure.devcenter.outputs.ProjectEnvironmentTypeUserRoleAssignment;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Manages a Dev Center Project Environment Type.
 * 
 * ## Example Usage
 * 
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.azure.core.CoreFunctions;
 * import com.pulumi.azure.core.ResourceGroup;
 * import com.pulumi.azure.core.ResourceGroupArgs;
 * import com.pulumi.azure.devcenter.DevCenter;
 * import com.pulumi.azure.devcenter.DevCenterArgs;
 * import com.pulumi.azure.devcenter.inputs.DevCenterIdentityArgs;
 * import com.pulumi.azure.devcenter.EnvironmentType;
 * import com.pulumi.azure.devcenter.EnvironmentTypeArgs;
 * import com.pulumi.azure.devcenter.Project;
 * import com.pulumi.azure.devcenter.ProjectArgs;
 * import com.pulumi.azure.devcenter.ProjectEnvironmentType;
 * import com.pulumi.azure.devcenter.ProjectEnvironmentTypeArgs;
 * import com.pulumi.azure.devcenter.inputs.ProjectEnvironmentTypeIdentityArgs;
 * import com.pulumi.resources.CustomResourceOptions;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         final var current = CoreFunctions.getClientConfig(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference);
 * 
 *         var example = new ResourceGroup("example", ResourceGroupArgs.builder()
 *             .name("example-resources")
 *             .location("West Europe")
 *             .build());
 * 
 *         var exampleDevCenter = new DevCenter("exampleDevCenter", DevCenterArgs.builder()
 *             .name("example-dc")
 *             .resourceGroupName(example.name())
 *             .location(example.location())
 *             .identity(DevCenterIdentityArgs.builder()
 *                 .type("SystemAssigned")
 *                 .build())
 *             .build());
 * 
 *         var exampleEnvironmentType = new EnvironmentType("exampleEnvironmentType", EnvironmentTypeArgs.builder()
 *             .name("example-et")
 *             .devCenterId(exampleDevCenter.id())
 *             .build());
 * 
 *         var exampleProject = new Project("exampleProject", ProjectArgs.builder()
 *             .name("example-dcp")
 *             .resourceGroupName(example.name())
 *             .location(example.location())
 *             .devCenterId(exampleDevCenter.id())
 *             .build(), CustomResourceOptions.builder()
 *                 .dependsOn(exampleEnvironmentType)
 *                 .build());
 * 
 *         var exampleProjectEnvironmentType = new ProjectEnvironmentType("exampleProjectEnvironmentType", ProjectEnvironmentTypeArgs.builder()
 *             .name("example-et")
 *             .location(example.location())
 *             .devCenterProjectId(exampleProject.id())
 *             .deploymentTargetId(String.format("/subscriptions/%s", current.subscriptionId()))
 *             .identity(ProjectEnvironmentTypeIdentityArgs.builder()
 *                 .type("SystemAssigned")
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * 
 * ## API Providers
 * 
 * &lt;!-- This section is generated, changes will be overwritten --&gt;
 * This resource uses the following Azure API Providers:
 * 
 * * `Microsoft.DevCenter` - 2025-02-01
 * 
 * ## Import
 * 
 * An existing Dev Center Project Environment Type can be imported into Pulumi using the `resource id`, e.g.
 * 
 * ```sh
 * $ pulumi import azure:devcenter/projectEnvironmentType:ProjectEnvironmentType example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.DevCenter/projects/project1/environmentTypes/et1
 * ```
 * 
 */
@ResourceType(type="azure:devcenter/projectEnvironmentType:ProjectEnvironmentType")
public class ProjectEnvironmentType extends com.pulumi.resources.CustomResource {
    /**
     * A list of roles to assign to the environment creator.
     * 
     */
    @Export(name="creatorRoleAssignmentRoles", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> creatorRoleAssignmentRoles;

    /**
     * @return A list of roles to assign to the environment creator.
     * 
     */
    public Output<Optional<List<String>>> creatorRoleAssignmentRoles() {
        return Codegen.optional(this.creatorRoleAssignmentRoles);
    }
    /**
     * The ID of the subscription that the Environment Type will be mapped to. The environment&#39;s resources will be deployed into this subscription.
     * 
     */
    @Export(name="deploymentTargetId", refs={String.class}, tree="[0]")
    private Output<String> deploymentTargetId;

    /**
     * @return The ID of the subscription that the Environment Type will be mapped to. The environment&#39;s resources will be deployed into this subscription.
     * 
     */
    public Output<String> deploymentTargetId() {
        return this.deploymentTargetId;
    }
    /**
     * The ID of the associated Dev Center Project. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="devCenterProjectId", refs={String.class}, tree="[0]")
    private Output<String> devCenterProjectId;

    /**
     * @return The ID of the associated Dev Center Project. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> devCenterProjectId() {
        return this.devCenterProjectId;
    }
    /**
     * An `identity` block as defined below.
     * 
     */
    @Export(name="identity", refs={ProjectEnvironmentTypeIdentity.class}, tree="[0]")
    private Output<ProjectEnvironmentTypeIdentity> identity;

    /**
     * @return An `identity` block as defined below.
     * 
     */
    public Output<ProjectEnvironmentTypeIdentity> identity() {
        return this.identity;
    }
    /**
     * The Azure Region where the Dev Center Project Environment Type should exist. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="location", refs={String.class}, tree="[0]")
    private Output<String> location;

    /**
     * @return The Azure Region where the Dev Center Project Environment Type should exist. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> location() {
        return this.location;
    }
    /**
     * Specifies the name of this Dev Center Project Environment Type. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return Specifies the name of this Dev Center Project Environment Type. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * A mapping of tags which should be assigned to the Dev Center Project Environment Type.
     * 
     */
    @Export(name="tags", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output</* @Nullable */ Map<String,String>> tags;

    /**
     * @return A mapping of tags which should be assigned to the Dev Center Project Environment Type.
     * 
     */
    public Output<Optional<Map<String,String>>> tags() {
        return Codegen.optional(this.tags);
    }
    /**
     * A `user_role_assignment` block as defined below.
     * 
     */
    @Export(name="userRoleAssignments", refs={List.class,ProjectEnvironmentTypeUserRoleAssignment.class}, tree="[0,1]")
    private Output</* @Nullable */ List<ProjectEnvironmentTypeUserRoleAssignment>> userRoleAssignments;

    /**
     * @return A `user_role_assignment` block as defined below.
     * 
     */
    public Output<Optional<List<ProjectEnvironmentTypeUserRoleAssignment>>> userRoleAssignments() {
        return Codegen.optional(this.userRoleAssignments);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public ProjectEnvironmentType(java.lang.String name) {
        this(name, ProjectEnvironmentTypeArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public ProjectEnvironmentType(java.lang.String name, ProjectEnvironmentTypeArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public ProjectEnvironmentType(java.lang.String name, ProjectEnvironmentTypeArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:devcenter/projectEnvironmentType:ProjectEnvironmentType", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private ProjectEnvironmentType(java.lang.String name, Output<java.lang.String> id, @Nullable ProjectEnvironmentTypeState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:devcenter/projectEnvironmentType:ProjectEnvironmentType", name, state, makeResourceOptions(options, id), false);
    }

    private static ProjectEnvironmentTypeArgs makeArgs(ProjectEnvironmentTypeArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? ProjectEnvironmentTypeArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static ProjectEnvironmentType get(java.lang.String name, Output<java.lang.String> id, @Nullable ProjectEnvironmentTypeState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new ProjectEnvironmentType(name, id, state, options);
    }
}
