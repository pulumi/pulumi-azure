// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.hdinsight;

import com.pulumi.azure.Utilities;
import com.pulumi.azure.hdinsight.HBaseClusterArgs;
import com.pulumi.azure.hdinsight.inputs.HBaseClusterState;
import com.pulumi.azure.hdinsight.outputs.HBaseClusterComponentVersion;
import com.pulumi.azure.hdinsight.outputs.HBaseClusterComputeIsolation;
import com.pulumi.azure.hdinsight.outputs.HBaseClusterDiskEncryption;
import com.pulumi.azure.hdinsight.outputs.HBaseClusterExtension;
import com.pulumi.azure.hdinsight.outputs.HBaseClusterGateway;
import com.pulumi.azure.hdinsight.outputs.HBaseClusterMetastores;
import com.pulumi.azure.hdinsight.outputs.HBaseClusterMonitor;
import com.pulumi.azure.hdinsight.outputs.HBaseClusterNetwork;
import com.pulumi.azure.hdinsight.outputs.HBaseClusterPrivateLinkConfiguration;
import com.pulumi.azure.hdinsight.outputs.HBaseClusterRoles;
import com.pulumi.azure.hdinsight.outputs.HBaseClusterSecurityProfile;
import com.pulumi.azure.hdinsight.outputs.HBaseClusterStorageAccount;
import com.pulumi.azure.hdinsight.outputs.HBaseClusterStorageAccountGen2;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Manages a HDInsight HBase Cluster.
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.azure.core.ResourceGroup;
 * import com.pulumi.azure.core.ResourceGroupArgs;
 * import com.pulumi.azure.storage.Account;
 * import com.pulumi.azure.storage.AccountArgs;
 * import com.pulumi.azure.storage.Container;
 * import com.pulumi.azure.storage.ContainerArgs;
 * import com.pulumi.azure.hdinsight.HBaseCluster;
 * import com.pulumi.azure.hdinsight.HBaseClusterArgs;
 * import com.pulumi.azure.hdinsight.inputs.HBaseClusterComponentVersionArgs;
 * import com.pulumi.azure.hdinsight.inputs.HBaseClusterGatewayArgs;
 * import com.pulumi.azure.hdinsight.inputs.HBaseClusterStorageAccountArgs;
 * import com.pulumi.azure.hdinsight.inputs.HBaseClusterRolesArgs;
 * import com.pulumi.azure.hdinsight.inputs.HBaseClusterRolesHeadNodeArgs;
 * import com.pulumi.azure.hdinsight.inputs.HBaseClusterRolesWorkerNodeArgs;
 * import com.pulumi.azure.hdinsight.inputs.HBaseClusterRolesZookeeperNodeArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new ResourceGroup("example", ResourceGroupArgs.builder()
 *             .name("example-resources")
 *             .location("West Europe")
 *             .build());
 * 
 *         var exampleAccount = new Account("exampleAccount", AccountArgs.builder()
 *             .name("hdinsightstor")
 *             .resourceGroupName(example.name())
 *             .location(example.location())
 *             .accountTier("Standard")
 *             .accountReplicationType("LRS")
 *             .build());
 * 
 *         var exampleContainer = new Container("exampleContainer", ContainerArgs.builder()
 *             .name("hdinsight")
 *             .storageAccountName(exampleAccount.name())
 *             .containerAccessType("private")
 *             .build());
 * 
 *         var exampleHBaseCluster = new HBaseCluster("exampleHBaseCluster", HBaseClusterArgs.builder()
 *             .name("example-hdicluster")
 *             .resourceGroupName(example.name())
 *             .location(example.location())
 *             .clusterVersion("3.6")
 *             .tier("Standard")
 *             .componentVersion(HBaseClusterComponentVersionArgs.builder()
 *                 .hbase("1.1")
 *                 .build())
 *             .gateway(HBaseClusterGatewayArgs.builder()
 *                 .username("acctestusrgw")
 *                 .password("Password123!")
 *                 .build())
 *             .storageAccounts(HBaseClusterStorageAccountArgs.builder()
 *                 .storageContainerId(exampleContainer.id())
 *                 .storageAccountKey(exampleAccount.primaryAccessKey())
 *                 .isDefault(true)
 *                 .build())
 *             .roles(HBaseClusterRolesArgs.builder()
 *                 .headNode(HBaseClusterRolesHeadNodeArgs.builder()
 *                     .vmSize("Standard_D3_V2")
 *                     .username("acctestusrvm")
 *                     .password("AccTestvdSC4daf986!")
 *                     .build())
 *                 .workerNode(HBaseClusterRolesWorkerNodeArgs.builder()
 *                     .vmSize("Standard_D3_V2")
 *                     .username("acctestusrvm")
 *                     .password("AccTestvdSC4daf986!")
 *                     .targetInstanceCount(3)
 *                     .build())
 *                 .zookeeperNode(HBaseClusterRolesZookeeperNodeArgs.builder()
 *                     .vmSize("Standard_D3_V2")
 *                     .username("acctestusrvm")
 *                     .password("AccTestvdSC4daf986!")
 *                     .build())
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## API Providers
 * 
 * &lt;!-- This section is generated, changes will be overwritten --&gt;
 * This resource uses the following Azure API Providers:
 * 
 * * `Microsoft.HDInsight`: 2021-06-01
 * 
 * ## Import
 * 
 * HDInsight HBase Clusters can be imported using the `resource id`, e.g.
 * 
 * ```sh
 * $ pulumi import azure:hdinsight/hBaseCluster:HBaseCluster example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/mygroup1/providers/Microsoft.HDInsight/clusters/cluster1
 * ```
 * 
 */
@ResourceType(type="azure:hdinsight/hBaseCluster:HBaseCluster")
public class HBaseCluster extends com.pulumi.resources.CustomResource {
    /**
     * Specifies the Version of HDInsights which should be used for this Cluster. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="clusterVersion", refs={String.class}, tree="[0]")
    private Output<String> clusterVersion;

    /**
     * @return Specifies the Version of HDInsights which should be used for this Cluster. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> clusterVersion() {
        return this.clusterVersion;
    }
    /**
     * A `component_version` block as defined below.
     * 
     */
    @Export(name="componentVersion", refs={HBaseClusterComponentVersion.class}, tree="[0]")
    private Output<HBaseClusterComponentVersion> componentVersion;

    /**
     * @return A `component_version` block as defined below.
     * 
     */
    public Output<HBaseClusterComponentVersion> componentVersion() {
        return this.componentVersion;
    }
    /**
     * A `compute_isolation` block as defined below.
     * 
     */
    @Export(name="computeIsolation", refs={HBaseClusterComputeIsolation.class}, tree="[0]")
    private Output</* @Nullable */ HBaseClusterComputeIsolation> computeIsolation;

    /**
     * @return A `compute_isolation` block as defined below.
     * 
     */
    public Output<Optional<HBaseClusterComputeIsolation>> computeIsolation() {
        return Codegen.optional(this.computeIsolation);
    }
    /**
     * One or more `disk_encryption` block as defined below.
     * 
     */
    @Export(name="diskEncryptions", refs={List.class,HBaseClusterDiskEncryption.class}, tree="[0,1]")
    private Output</* @Nullable */ List<HBaseClusterDiskEncryption>> diskEncryptions;

    /**
     * @return One or more `disk_encryption` block as defined below.
     * 
     */
    public Output<Optional<List<HBaseClusterDiskEncryption>>> diskEncryptions() {
        return Codegen.optional(this.diskEncryptions);
    }
    /**
     * An `extension` block as defined below.
     * 
     */
    @Export(name="extension", refs={HBaseClusterExtension.class}, tree="[0]")
    private Output</* @Nullable */ HBaseClusterExtension> extension;

    /**
     * @return An `extension` block as defined below.
     * 
     */
    public Output<Optional<HBaseClusterExtension>> extension() {
        return Codegen.optional(this.extension);
    }
    /**
     * A `gateway` block as defined below.
     * 
     */
    @Export(name="gateway", refs={HBaseClusterGateway.class}, tree="[0]")
    private Output<HBaseClusterGateway> gateway;

    /**
     * @return A `gateway` block as defined below.
     * 
     */
    public Output<HBaseClusterGateway> gateway() {
        return this.gateway;
    }
    /**
     * The HTTPS Connectivity Endpoint for this HDInsight HBase Cluster.
     * 
     */
    @Export(name="httpsEndpoint", refs={String.class}, tree="[0]")
    private Output<String> httpsEndpoint;

    /**
     * @return The HTTPS Connectivity Endpoint for this HDInsight HBase Cluster.
     * 
     */
    public Output<String> httpsEndpoint() {
        return this.httpsEndpoint;
    }
    /**
     * Specifies the Azure Region which this HDInsight HBase Cluster should exist. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="location", refs={String.class}, tree="[0]")
    private Output<String> location;

    /**
     * @return Specifies the Azure Region which this HDInsight HBase Cluster should exist. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> location() {
        return this.location;
    }
    /**
     * A `metastores` block as defined below.
     * 
     */
    @Export(name="metastores", refs={HBaseClusterMetastores.class}, tree="[0]")
    private Output</* @Nullable */ HBaseClusterMetastores> metastores;

    /**
     * @return A `metastores` block as defined below.
     * 
     */
    public Output<Optional<HBaseClusterMetastores>> metastores() {
        return Codegen.optional(this.metastores);
    }
    /**
     * A `monitor` block as defined below.
     * 
     */
    @Export(name="monitor", refs={HBaseClusterMonitor.class}, tree="[0]")
    private Output</* @Nullable */ HBaseClusterMonitor> monitor;

    /**
     * @return A `monitor` block as defined below.
     * 
     */
    public Output<Optional<HBaseClusterMonitor>> monitor() {
        return Codegen.optional(this.monitor);
    }
    /**
     * Specifies the name for this HDInsight HBase Cluster. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return Specifies the name for this HDInsight HBase Cluster. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * A `network` block as defined below.
     * 
     */
    @Export(name="network", refs={HBaseClusterNetwork.class}, tree="[0]")
    private Output</* @Nullable */ HBaseClusterNetwork> network;

    /**
     * @return A `network` block as defined below.
     * 
     */
    public Output<Optional<HBaseClusterNetwork>> network() {
        return Codegen.optional(this.network);
    }
    /**
     * A `private_link_configuration` block as defined below.
     * 
     */
    @Export(name="privateLinkConfiguration", refs={HBaseClusterPrivateLinkConfiguration.class}, tree="[0]")
    private Output</* @Nullable */ HBaseClusterPrivateLinkConfiguration> privateLinkConfiguration;

    /**
     * @return A `private_link_configuration` block as defined below.
     * 
     */
    public Output<Optional<HBaseClusterPrivateLinkConfiguration>> privateLinkConfiguration() {
        return Codegen.optional(this.privateLinkConfiguration);
    }
    /**
     * Specifies the name of the Resource Group in which this HDInsight HBase Cluster should exist. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="resourceGroupName", refs={String.class}, tree="[0]")
    private Output<String> resourceGroupName;

    /**
     * @return Specifies the name of the Resource Group in which this HDInsight HBase Cluster should exist. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }
    /**
     * A `roles` block as defined below.
     * 
     */
    @Export(name="roles", refs={HBaseClusterRoles.class}, tree="[0]")
    private Output<HBaseClusterRoles> roles;

    /**
     * @return A `roles` block as defined below.
     * 
     */
    public Output<HBaseClusterRoles> roles() {
        return this.roles;
    }
    /**
     * A `security_profile` block as defined below. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="securityProfile", refs={HBaseClusterSecurityProfile.class}, tree="[0]")
    private Output</* @Nullable */ HBaseClusterSecurityProfile> securityProfile;

    /**
     * @return A `security_profile` block as defined below. Changing this forces a new resource to be created.
     * 
     */
    public Output<Optional<HBaseClusterSecurityProfile>> securityProfile() {
        return Codegen.optional(this.securityProfile);
    }
    /**
     * The SSH Connectivity Endpoint for this HDInsight HBase Cluster.
     * 
     */
    @Export(name="sshEndpoint", refs={String.class}, tree="[0]")
    private Output<String> sshEndpoint;

    /**
     * @return The SSH Connectivity Endpoint for this HDInsight HBase Cluster.
     * 
     */
    public Output<String> sshEndpoint() {
        return this.sshEndpoint;
    }
    /**
     * A `storage_account_gen2` block as defined below.
     * 
     */
    @Export(name="storageAccountGen2", refs={HBaseClusterStorageAccountGen2.class}, tree="[0]")
    private Output</* @Nullable */ HBaseClusterStorageAccountGen2> storageAccountGen2;

    /**
     * @return A `storage_account_gen2` block as defined below.
     * 
     */
    public Output<Optional<HBaseClusterStorageAccountGen2>> storageAccountGen2() {
        return Codegen.optional(this.storageAccountGen2);
    }
    /**
     * One or more `storage_account` block as defined below.
     * 
     */
    @Export(name="storageAccounts", refs={List.class,HBaseClusterStorageAccount.class}, tree="[0,1]")
    private Output</* @Nullable */ List<HBaseClusterStorageAccount>> storageAccounts;

    /**
     * @return One or more `storage_account` block as defined below.
     * 
     */
    public Output<Optional<List<HBaseClusterStorageAccount>>> storageAccounts() {
        return Codegen.optional(this.storageAccounts);
    }
    /**
     * A map of Tags which should be assigned to this HDInsight HBase Cluster.
     * 
     */
    @Export(name="tags", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output</* @Nullable */ Map<String,String>> tags;

    /**
     * @return A map of Tags which should be assigned to this HDInsight HBase Cluster.
     * 
     */
    public Output<Optional<Map<String,String>>> tags() {
        return Codegen.optional(this.tags);
    }
    /**
     * Specifies the Tier which should be used for this HDInsight HBase Cluster. Possible values are `Standard` or `Premium`. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="tier", refs={String.class}, tree="[0]")
    private Output<String> tier;

    /**
     * @return Specifies the Tier which should be used for this HDInsight HBase Cluster. Possible values are `Standard` or `Premium`. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> tier() {
        return this.tier;
    }
    /**
     * The minimal supported TLS version. Possible values are 1.0, 1.1 or 1.2. Changing this forces a new resource to be created.
     * 
     * &gt; **Note:** Starting on June 30, 2020, Azure HDInsight will enforce TLS 1.2 or later versions for all HTTPS connections. For more information, see [Azure HDInsight TLS 1.2 Enforcement](https://azure.microsoft.com/en-us/updates/azure-hdinsight-tls-12-enforcement/).
     * 
     */
    @Export(name="tlsMinVersion", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> tlsMinVersion;

    /**
     * @return The minimal supported TLS version. Possible values are 1.0, 1.1 or 1.2. Changing this forces a new resource to be created.
     * 
     * &gt; **Note:** Starting on June 30, 2020, Azure HDInsight will enforce TLS 1.2 or later versions for all HTTPS connections. For more information, see [Azure HDInsight TLS 1.2 Enforcement](https://azure.microsoft.com/en-us/updates/azure-hdinsight-tls-12-enforcement/).
     * 
     */
    public Output<Optional<String>> tlsMinVersion() {
        return Codegen.optional(this.tlsMinVersion);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public HBaseCluster(java.lang.String name) {
        this(name, HBaseClusterArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public HBaseCluster(java.lang.String name, HBaseClusterArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public HBaseCluster(java.lang.String name, HBaseClusterArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:hdinsight/hBaseCluster:HBaseCluster", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private HBaseCluster(java.lang.String name, Output<java.lang.String> id, @Nullable HBaseClusterState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:hdinsight/hBaseCluster:HBaseCluster", name, state, makeResourceOptions(options, id), false);
    }

    private static HBaseClusterArgs makeArgs(HBaseClusterArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? HBaseClusterArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static HBaseCluster get(java.lang.String name, Output<java.lang.String> id, @Nullable HBaseClusterState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new HBaseCluster(name, id, state, options);
    }
}
