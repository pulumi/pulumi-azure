// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.pim.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class RoleManagementPolicyNotificationRulesEligibleAssignmentsAdminNotifications {
    /**
     * @return The additional recipients to notify
     * 
     */
    private @Nullable List<String> additionalRecipients;
    /**
     * @return Whether the default recipients are notified
     * 
     */
    private Boolean defaultRecipients;
    /**
     * @return What level of notifications are sent
     * 
     */
    private String notificationLevel;

    private RoleManagementPolicyNotificationRulesEligibleAssignmentsAdminNotifications() {}
    /**
     * @return The additional recipients to notify
     * 
     */
    public List<String> additionalRecipients() {
        return this.additionalRecipients == null ? List.of() : this.additionalRecipients;
    }
    /**
     * @return Whether the default recipients are notified
     * 
     */
    public Boolean defaultRecipients() {
        return this.defaultRecipients;
    }
    /**
     * @return What level of notifications are sent
     * 
     */
    public String notificationLevel() {
        return this.notificationLevel;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(RoleManagementPolicyNotificationRulesEligibleAssignmentsAdminNotifications defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<String> additionalRecipients;
        private Boolean defaultRecipients;
        private String notificationLevel;
        public Builder() {}
        public Builder(RoleManagementPolicyNotificationRulesEligibleAssignmentsAdminNotifications defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.additionalRecipients = defaults.additionalRecipients;
    	      this.defaultRecipients = defaults.defaultRecipients;
    	      this.notificationLevel = defaults.notificationLevel;
        }

        @CustomType.Setter
        public Builder additionalRecipients(@Nullable List<String> additionalRecipients) {

            this.additionalRecipients = additionalRecipients;
            return this;
        }
        public Builder additionalRecipients(String... additionalRecipients) {
            return additionalRecipients(List.of(additionalRecipients));
        }
        @CustomType.Setter
        public Builder defaultRecipients(Boolean defaultRecipients) {
            if (defaultRecipients == null) {
              throw new MissingRequiredPropertyException("RoleManagementPolicyNotificationRulesEligibleAssignmentsAdminNotifications", "defaultRecipients");
            }
            this.defaultRecipients = defaultRecipients;
            return this;
        }
        @CustomType.Setter
        public Builder notificationLevel(String notificationLevel) {
            if (notificationLevel == null) {
              throw new MissingRequiredPropertyException("RoleManagementPolicyNotificationRulesEligibleAssignmentsAdminNotifications", "notificationLevel");
            }
            this.notificationLevel = notificationLevel;
            return this;
        }
        public RoleManagementPolicyNotificationRulesEligibleAssignmentsAdminNotifications build() {
            final var _resultValue = new RoleManagementPolicyNotificationRulesEligibleAssignmentsAdminNotifications();
            _resultValue.additionalRecipients = additionalRecipients;
            _resultValue.defaultRecipients = defaultRecipients;
            _resultValue.notificationLevel = notificationLevel;
            return _resultValue;
        }
    }
}
