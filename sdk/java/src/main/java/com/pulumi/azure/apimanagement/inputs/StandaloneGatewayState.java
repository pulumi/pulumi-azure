// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.apimanagement.inputs;

import com.pulumi.azure.apimanagement.inputs.StandaloneGatewaySkuArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class StandaloneGatewayState extends com.pulumi.resources.ResourceArgs {

    public static final StandaloneGatewayState Empty = new StandaloneGatewayState();

    /**
     * Specifies the subnet ID in which the backend systems are hosted. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="backendSubnetId")
    private @Nullable Output<String> backendSubnetId;

    /**
     * @return Specifies the subnet ID in which the backend systems are hosted. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> backendSubnetId() {
        return Optional.ofNullable(this.backendSubnetId);
    }

    /**
     * Specifies the Azure Region where the API Management Standalone Gateway should exist. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="location")
    private @Nullable Output<String> location;

    /**
     * @return Specifies the Azure Region where the API Management Standalone Gateway should exist. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * Specifies the name which should be used for this API Management Standalone Gateway. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Specifies the name which should be used for this API Management Standalone Gateway. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Specifies the name of the Resource Group where the API Management Standalone Gateway should exist. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="resourceGroupName")
    private @Nullable Output<String> resourceGroupName;

    /**
     * @return Specifies the name of the Resource Group where the API Management Standalone Gateway should exist. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> resourceGroupName() {
        return Optional.ofNullable(this.resourceGroupName);
    }

    /**
     * A `sku` block as defined below.
     * 
     */
    @Import(name="sku")
    private @Nullable Output<StandaloneGatewaySkuArgs> sku;

    /**
     * @return A `sku` block as defined below.
     * 
     */
    public Optional<Output<StandaloneGatewaySkuArgs>> sku() {
        return Optional.ofNullable(this.sku);
    }

    /**
     * A mapping of tags which should be assigned to the API Management Standalone Gateway. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return A mapping of tags which should be assigned to the API Management Standalone Gateway. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * Specifies the type of VPN in which API Management gateway needs to be configured. Possible values are `External` and `Internal`. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="virtualNetworkType")
    private @Nullable Output<String> virtualNetworkType;

    /**
     * @return Specifies the type of VPN in which API Management gateway needs to be configured. Possible values are `External` and `Internal`. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> virtualNetworkType() {
        return Optional.ofNullable(this.virtualNetworkType);
    }

    private StandaloneGatewayState() {}

    private StandaloneGatewayState(StandaloneGatewayState $) {
        this.backendSubnetId = $.backendSubnetId;
        this.location = $.location;
        this.name = $.name;
        this.resourceGroupName = $.resourceGroupName;
        this.sku = $.sku;
        this.tags = $.tags;
        this.virtualNetworkType = $.virtualNetworkType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(StandaloneGatewayState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private StandaloneGatewayState $;

        public Builder() {
            $ = new StandaloneGatewayState();
        }

        public Builder(StandaloneGatewayState defaults) {
            $ = new StandaloneGatewayState(Objects.requireNonNull(defaults));
        }

        /**
         * @param backendSubnetId Specifies the subnet ID in which the backend systems are hosted. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder backendSubnetId(@Nullable Output<String> backendSubnetId) {
            $.backendSubnetId = backendSubnetId;
            return this;
        }

        /**
         * @param backendSubnetId Specifies the subnet ID in which the backend systems are hosted. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder backendSubnetId(String backendSubnetId) {
            return backendSubnetId(Output.of(backendSubnetId));
        }

        /**
         * @param location Specifies the Azure Region where the API Management Standalone Gateway should exist. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location Specifies the Azure Region where the API Management Standalone Gateway should exist. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param name Specifies the name which should be used for this API Management Standalone Gateway. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Specifies the name which should be used for this API Management Standalone Gateway. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param resourceGroupName Specifies the name of the Resource Group where the API Management Standalone Gateway should exist. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(@Nullable Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName Specifies the name of the Resource Group where the API Management Standalone Gateway should exist. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        /**
         * @param sku A `sku` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder sku(@Nullable Output<StandaloneGatewaySkuArgs> sku) {
            $.sku = sku;
            return this;
        }

        /**
         * @param sku A `sku` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder sku(StandaloneGatewaySkuArgs sku) {
            return sku(Output.of(sku));
        }

        /**
         * @param tags A mapping of tags which should be assigned to the API Management Standalone Gateway. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags A mapping of tags which should be assigned to the API Management Standalone Gateway. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param virtualNetworkType Specifies the type of VPN in which API Management gateway needs to be configured. Possible values are `External` and `Internal`. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder virtualNetworkType(@Nullable Output<String> virtualNetworkType) {
            $.virtualNetworkType = virtualNetworkType;
            return this;
        }

        /**
         * @param virtualNetworkType Specifies the type of VPN in which API Management gateway needs to be configured. Possible values are `External` and `Internal`. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder virtualNetworkType(String virtualNetworkType) {
            return virtualNetworkType(Output.of(virtualNetworkType));
        }

        public StandaloneGatewayState build() {
            return $;
        }
    }

}
