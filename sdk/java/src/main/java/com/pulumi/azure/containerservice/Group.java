// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.containerservice;

import com.pulumi.azure.Utilities;
import com.pulumi.azure.containerservice.GroupArgs;
import com.pulumi.azure.containerservice.inputs.GroupState;
import com.pulumi.azure.containerservice.outputs.GroupContainer;
import com.pulumi.azure.containerservice.outputs.GroupDiagnostics;
import com.pulumi.azure.containerservice.outputs.GroupDnsConfig;
import com.pulumi.azure.containerservice.outputs.GroupExposedPort;
import com.pulumi.azure.containerservice.outputs.GroupIdentity;
import com.pulumi.azure.containerservice.outputs.GroupImageRegistryCredential;
import com.pulumi.azure.containerservice.outputs.GroupInitContainer;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Manages as an Azure Container Group instance.
 * 
 * ## Example Usage
 * 
 * This example provisions a Basic Container.
 * ```java
 * package generated_program;
 * 
 * import java.util.*;
 * import java.io.*;
 * import java.nio.*;
 * import com.pulumi.*;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var exampleResourceGroup = new ResourceGroup(&#34;exampleResourceGroup&#34;, ResourceGroupArgs.builder()        
 *             .location(&#34;West Europe&#34;)
 *             .build());
 * 
 *         var exampleGroup = new Group(&#34;exampleGroup&#34;, GroupArgs.builder()        
 *             .location(exampleResourceGroup.location())
 *             .resourceGroupName(exampleResourceGroup.name())
 *             .ipAddressType(&#34;Public&#34;)
 *             .dnsNameLabel(&#34;aci-label&#34;)
 *             .osType(&#34;Linux&#34;)
 *             .containers(            
 *                 GroupContainerArgs.builder()
 *                     .name(&#34;hello-world&#34;)
 *                     .image(&#34;mcr.microsoft.com/azuredocs/aci-helloworld:latest&#34;)
 *                     .cpu(&#34;0.5&#34;)
 *                     .memory(&#34;1.5&#34;)
 *                     .ports(GroupContainerPortArgs.builder()
 *                         .port(443)
 *                         .protocol(&#34;TCP&#34;)
 *                         .build())
 *                     .build(),
 *                 GroupContainerArgs.builder()
 *                     .name(&#34;sidecar&#34;)
 *                     .image(&#34;mcr.microsoft.com/azuredocs/aci-tutorial-sidecar&#34;)
 *                     .cpu(&#34;0.5&#34;)
 *                     .memory(&#34;1.5&#34;)
 *                     .build())
 *             .tags(Map.of(&#34;environment&#34;, &#34;testing&#34;))
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * Container Group&#39;s can be imported using the `resource id`, e.g.
 * 
 * ```sh
 *  $ pulumi import azure:containerservice/group:Group containerGroup1 /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/mygroup1/providers/Microsoft.ContainerInstance/containerGroups/myContainerGroup1
 * ```
 * 
 */
@ResourceType(type="azure:containerservice/group:Group")
public class Group extends com.pulumi.resources.CustomResource {
    /**
     * The definition of a container that is part of the group as documented in the `container` block below. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="containers", type=List.class, parameters={GroupContainer.class})
    private Output<List<GroupContainer>> containers;

    /**
     * @return The definition of a container that is part of the group as documented in the `container` block below. Changing this forces a new resource to be created.
     * 
     */
    public Output<List<GroupContainer>> containers() {
        return this.containers;
    }
    /**
     * A `diagnostics` block as documented below.
     * 
     */
    @Export(name="diagnostics", type=GroupDiagnostics.class, parameters={})
    private Output</* @Nullable */ GroupDiagnostics> diagnostics;

    /**
     * @return A `diagnostics` block as documented below.
     * 
     */
    public Output<Optional<GroupDiagnostics>> diagnostics() {
        return Codegen.optional(this.diagnostics);
    }
    /**
     * A `dns_config` block as documented below.
     * 
     */
    @Export(name="dnsConfig", type=GroupDnsConfig.class, parameters={})
    private Output</* @Nullable */ GroupDnsConfig> dnsConfig;

    /**
     * @return A `dns_config` block as documented below.
     * 
     */
    public Output<Optional<GroupDnsConfig>> dnsConfig() {
        return Codegen.optional(this.dnsConfig);
    }
    /**
     * The DNS label/name for the container groups IP. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="dnsNameLabel", type=String.class, parameters={})
    private Output</* @Nullable */ String> dnsNameLabel;

    /**
     * @return The DNS label/name for the container groups IP. Changing this forces a new resource to be created.
     * 
     */
    public Output<Optional<String>> dnsNameLabel() {
        return Codegen.optional(this.dnsNameLabel);
    }
    /**
     * Zero or more `exposed_port` blocks as defined below. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="exposedPorts", type=List.class, parameters={GroupExposedPort.class})
    private Output<List<GroupExposedPort>> exposedPorts;

    /**
     * @return Zero or more `exposed_port` blocks as defined below. Changing this forces a new resource to be created.
     * 
     */
    public Output<List<GroupExposedPort>> exposedPorts() {
        return this.exposedPorts;
    }
    /**
     * The FQDN of the container group derived from `dns_name_label`.
     * 
     */
    @Export(name="fqdn", type=String.class, parameters={})
    private Output<String> fqdn;

    /**
     * @return The FQDN of the container group derived from `dns_name_label`.
     * 
     */
    public Output<String> fqdn() {
        return this.fqdn;
    }
    /**
     * An `identity` block as defined below.
     * 
     */
    @Export(name="identity", type=GroupIdentity.class, parameters={})
    private Output</* @Nullable */ GroupIdentity> identity;

    /**
     * @return An `identity` block as defined below.
     * 
     */
    public Output<Optional<GroupIdentity>> identity() {
        return Codegen.optional(this.identity);
    }
    /**
     * A `image_registry_credential` block as documented below. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="imageRegistryCredentials", type=List.class, parameters={GroupImageRegistryCredential.class})
    private Output</* @Nullable */ List<GroupImageRegistryCredential>> imageRegistryCredentials;

    /**
     * @return A `image_registry_credential` block as documented below. Changing this forces a new resource to be created.
     * 
     */
    public Output<Optional<List<GroupImageRegistryCredential>>> imageRegistryCredentials() {
        return Codegen.optional(this.imageRegistryCredentials);
    }
    /**
     * The definition of an init container that is part of the group as documented in the `init_container` block below. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="initContainers", type=List.class, parameters={GroupInitContainer.class})
    private Output</* @Nullable */ List<GroupInitContainer>> initContainers;

    /**
     * @return The definition of an init container that is part of the group as documented in the `init_container` block below. Changing this forces a new resource to be created.
     * 
     */
    public Output<Optional<List<GroupInitContainer>>> initContainers() {
        return Codegen.optional(this.initContainers);
    }
    /**
     * The IP address allocated to the container group.
     * 
     */
    @Export(name="ipAddress", type=String.class, parameters={})
    private Output<String> ipAddress;

    /**
     * @return The IP address allocated to the container group.
     * 
     */
    public Output<String> ipAddress() {
        return this.ipAddress;
    }
    /**
     * Specifies the IP address type of the container. `Public`, `Private` or `None`. Changing this forces a new resource to be created. If set to `Private`, `network_profile_id` also needs to be set.
     * 
     */
    @Export(name="ipAddressType", type=String.class, parameters={})
    private Output</* @Nullable */ String> ipAddressType;

    /**
     * @return Specifies the IP address type of the container. `Public`, `Private` or `None`. Changing this forces a new resource to be created. If set to `Private`, `network_profile_id` also needs to be set.
     * 
     */
    public Output<Optional<String>> ipAddressType() {
        return Codegen.optional(this.ipAddressType);
    }
    /**
     * The Key Vault key URI for CMK encryption. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="keyVaultKeyId", type=String.class, parameters={})
    private Output</* @Nullable */ String> keyVaultKeyId;

    /**
     * @return The Key Vault key URI for CMK encryption. Changing this forces a new resource to be created.
     * 
     */
    public Output<Optional<String>> keyVaultKeyId() {
        return Codegen.optional(this.keyVaultKeyId);
    }
    /**
     * Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="location", type=String.class, parameters={})
    private Output<String> location;

    /**
     * @return Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> location() {
        return this.location;
    }
    /**
     * Specifies the name of the Container Group. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return Specifies the name of the Container Group. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Network profile ID for deploying to virtual network.
     * 
     */
    @Export(name="networkProfileId", type=String.class, parameters={})
    private Output</* @Nullable */ String> networkProfileId;

    /**
     * @return Network profile ID for deploying to virtual network.
     * 
     */
    public Output<Optional<String>> networkProfileId() {
        return Codegen.optional(this.networkProfileId);
    }
    /**
     * The OS for the container group. Allowed values are `Linux` and `Windows`. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="osType", type=String.class, parameters={})
    private Output<String> osType;

    /**
     * @return The OS for the container group. Allowed values are `Linux` and `Windows`. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> osType() {
        return this.osType;
    }
    /**
     * The name of the resource group in which to create the Container Group. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="resourceGroupName", type=String.class, parameters={})
    private Output<String> resourceGroupName;

    /**
     * @return The name of the resource group in which to create the Container Group. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }
    /**
     * Restart policy for the container group. Allowed values are `Always`, `Never`, `OnFailure`. Defaults to `Always`. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="restartPolicy", type=String.class, parameters={})
    private Output</* @Nullable */ String> restartPolicy;

    /**
     * @return Restart policy for the container group. Allowed values are `Always`, `Never`, `OnFailure`. Defaults to `Always`. Changing this forces a new resource to be created.
     * 
     */
    public Output<Optional<String>> restartPolicy() {
        return Codegen.optional(this.restartPolicy);
    }
    /**
     * A mapping of tags to assign to the resource.
     * 
     */
    @Export(name="tags", type=Map.class, parameters={String.class, String.class})
    private Output</* @Nullable */ Map<String,String>> tags;

    /**
     * @return A mapping of tags to assign to the resource.
     * 
     */
    public Output<Optional<Map<String,String>>> tags() {
        return Codegen.optional(this.tags);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Group(String name) {
        this(name, GroupArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Group(String name, GroupArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Group(String name, GroupArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:containerservice/group:Group", name, args == null ? GroupArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private Group(String name, Output<String> id, @Nullable GroupState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:containerservice/group:Group", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Group get(String name, Output<String> id, @Nullable GroupState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Group(name, id, state, options);
    }
}
