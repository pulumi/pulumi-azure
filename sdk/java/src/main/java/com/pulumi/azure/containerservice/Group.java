// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.containerservice;

import com.pulumi.azure.Utilities;
import com.pulumi.azure.containerservice.GroupArgs;
import com.pulumi.azure.containerservice.inputs.GroupState;
import com.pulumi.azure.containerservice.outputs.GroupContainer;
import com.pulumi.azure.containerservice.outputs.GroupDiagnostics;
import com.pulumi.azure.containerservice.outputs.GroupDnsConfig;
import com.pulumi.azure.containerservice.outputs.GroupExposedPort;
import com.pulumi.azure.containerservice.outputs.GroupIdentity;
import com.pulumi.azure.containerservice.outputs.GroupImageRegistryCredential;
import com.pulumi.azure.containerservice.outputs.GroupInitContainer;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Manages as an Azure Container Group instance.
 * 
 * &gt; **Note** `network_profile_id` is [deprecated](https://docs.microsoft.com/en-us/azure/container-instances/container-instances-vnet) by Azure. For users who want to continue to manage existing `azure.containerservice.Group` that rely on `network_profile_id`, please stay on provider versions prior to v3.16.0. Otherwise, use `subnet_ids` instead.
 * 
 * ## Example Usage
 * 
 * This example provisions a Basic Container.
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.azure.core.ResourceGroup;
 * import com.pulumi.azure.core.ResourceGroupArgs;
 * import com.pulumi.azure.containerservice.Group;
 * import com.pulumi.azure.containerservice.GroupArgs;
 * import com.pulumi.azure.containerservice.inputs.GroupContainerArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var exampleResourceGroup = new ResourceGroup(&#34;exampleResourceGroup&#34;, ResourceGroupArgs.builder()        
 *             .location(&#34;West Europe&#34;)
 *             .build());
 * 
 *         var exampleGroup = new Group(&#34;exampleGroup&#34;, GroupArgs.builder()        
 *             .location(exampleResourceGroup.location())
 *             .resourceGroupName(exampleResourceGroup.name())
 *             .ipAddressType(&#34;Public&#34;)
 *             .dnsNameLabel(&#34;aci-label&#34;)
 *             .osType(&#34;Linux&#34;)
 *             .containers(            
 *                 GroupContainerArgs.builder()
 *                     .name(&#34;hello-world&#34;)
 *                     .image(&#34;mcr.microsoft.com/azuredocs/aci-helloworld:latest&#34;)
 *                     .cpu(&#34;0.5&#34;)
 *                     .memory(&#34;1.5&#34;)
 *                     .ports(GroupContainerPortArgs.builder()
 *                         .port(443)
 *                         .protocol(&#34;TCP&#34;)
 *                         .build())
 *                     .build(),
 *                 GroupContainerArgs.builder()
 *                     .name(&#34;sidecar&#34;)
 *                     .image(&#34;mcr.microsoft.com/azuredocs/aci-tutorial-sidecar&#34;)
 *                     .cpu(&#34;0.5&#34;)
 *                     .memory(&#34;1.5&#34;)
 *                     .build())
 *             .tags(Map.of(&#34;environment&#34;, &#34;testing&#34;))
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * Container Group&#39;s can be imported using the `resource id`, e.g.
 * 
 * ```sh
 *  $ pulumi import azure:containerservice/group:Group containerGroup1 /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/mygroup1/providers/Microsoft.ContainerInstance/containerGroups/myContainerGroup1
 * ```
 * 
 */
@ResourceType(type="azure:containerservice/group:Group")
public class Group extends com.pulumi.resources.CustomResource {
    /**
     * The definition of a container that is part of the group as documented in the `container` block below. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="containers", refs={List.class,GroupContainer.class}, tree="[0,1]")
    private Output<List<GroupContainer>> containers;

    /**
     * @return The definition of a container that is part of the group as documented in the `container` block below. Changing this forces a new resource to be created.
     * 
     */
    public Output<List<GroupContainer>> containers() {
        return this.containers;
    }
    /**
     * A `diagnostics` block as documented below. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="diagnostics", refs={GroupDiagnostics.class}, tree="[0]")
    private Output</* @Nullable */ GroupDiagnostics> diagnostics;

    /**
     * @return A `diagnostics` block as documented below. Changing this forces a new resource to be created.
     * 
     */
    public Output<Optional<GroupDiagnostics>> diagnostics() {
        return Codegen.optional(this.diagnostics);
    }
    /**
     * A `dns_config` block as documented below. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="dnsConfig", refs={GroupDnsConfig.class}, tree="[0]")
    private Output</* @Nullable */ GroupDnsConfig> dnsConfig;

    /**
     * @return A `dns_config` block as documented below. Changing this forces a new resource to be created.
     * 
     */
    public Output<Optional<GroupDnsConfig>> dnsConfig() {
        return Codegen.optional(this.dnsConfig);
    }
    /**
     * The DNS label/name for the container group&#39;s IP. Changing this forces a new resource to be created.
     * 
     * &gt; **Note:** DNS label/name is not supported when deploying to virtual networks.
     * 
     */
    @Export(name="dnsNameLabel", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> dnsNameLabel;

    /**
     * @return The DNS label/name for the container group&#39;s IP. Changing this forces a new resource to be created.
     * 
     * &gt; **Note:** DNS label/name is not supported when deploying to virtual networks.
     * 
     */
    public Output<Optional<String>> dnsNameLabel() {
        return Codegen.optional(this.dnsNameLabel);
    }
    /**
     * The value representing the security enum. `Noreuse`, `ResourceGroupReuse`, `SubscriptionReuse`, `TenantReuse` or `Unsecure`. Defaults to `Unsecure`.
     * 
     */
    @Export(name="dnsNameLabelReusePolicy", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> dnsNameLabelReusePolicy;

    /**
     * @return The value representing the security enum. `Noreuse`, `ResourceGroupReuse`, `SubscriptionReuse`, `TenantReuse` or `Unsecure`. Defaults to `Unsecure`.
     * 
     */
    public Output<Optional<String>> dnsNameLabelReusePolicy() {
        return Codegen.optional(this.dnsNameLabelReusePolicy);
    }
    /**
     * Zero or more `exposed_port` blocks as defined below. Changing this forces a new resource to be created.
     * 
     * &gt; **Note:** The `exposed_port` can only contain ports that are also exposed on one or more containers in the group.
     * 
     */
    @Export(name="exposedPorts", refs={List.class,GroupExposedPort.class}, tree="[0,1]")
    private Output<List<GroupExposedPort>> exposedPorts;

    /**
     * @return Zero or more `exposed_port` blocks as defined below. Changing this forces a new resource to be created.
     * 
     * &gt; **Note:** The `exposed_port` can only contain ports that are also exposed on one or more containers in the group.
     * 
     */
    public Output<List<GroupExposedPort>> exposedPorts() {
        return this.exposedPorts;
    }
    /**
     * The FQDN of the container group derived from `dns_name_label`.
     * 
     */
    @Export(name="fqdn", refs={String.class}, tree="[0]")
    private Output<String> fqdn;

    /**
     * @return The FQDN of the container group derived from `dns_name_label`.
     * 
     */
    public Output<String> fqdn() {
        return this.fqdn;
    }
    /**
     * An `identity` block as defined below.
     * 
     */
    @Export(name="identity", refs={GroupIdentity.class}, tree="[0]")
    private Output</* @Nullable */ GroupIdentity> identity;

    /**
     * @return An `identity` block as defined below.
     * 
     */
    public Output<Optional<GroupIdentity>> identity() {
        return Codegen.optional(this.identity);
    }
    /**
     * An `image_registry_credential` block as documented below. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="imageRegistryCredentials", refs={List.class,GroupImageRegistryCredential.class}, tree="[0,1]")
    private Output</* @Nullable */ List<GroupImageRegistryCredential>> imageRegistryCredentials;

    /**
     * @return An `image_registry_credential` block as documented below. Changing this forces a new resource to be created.
     * 
     */
    public Output<Optional<List<GroupImageRegistryCredential>>> imageRegistryCredentials() {
        return Codegen.optional(this.imageRegistryCredentials);
    }
    /**
     * The definition of an init container that is part of the group as documented in the `init_container` block below. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="initContainers", refs={List.class,GroupInitContainer.class}, tree="[0,1]")
    private Output</* @Nullable */ List<GroupInitContainer>> initContainers;

    /**
     * @return The definition of an init container that is part of the group as documented in the `init_container` block below. Changing this forces a new resource to be created.
     * 
     */
    public Output<Optional<List<GroupInitContainer>>> initContainers() {
        return Codegen.optional(this.initContainers);
    }
    /**
     * The IP address allocated to the container group.
     * 
     */
    @Export(name="ipAddress", refs={String.class}, tree="[0]")
    private Output<String> ipAddress;

    /**
     * @return The IP address allocated to the container group.
     * 
     */
    public Output<String> ipAddress() {
        return this.ipAddress;
    }
    /**
     * Specifies the IP address type of the container. `Public`, `Private` or `None`. Changing this forces a new resource to be created. If set to `Private`, `subnet_ids` also needs to be set. Defaults to `Public`.
     * 
     * &gt; **Note:** `dns_name_label` and `os_type` set to `windows` are not compatible with `Private` `ip_address_type`
     * 
     */
    @Export(name="ipAddressType", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> ipAddressType;

    /**
     * @return Specifies the IP address type of the container. `Public`, `Private` or `None`. Changing this forces a new resource to be created. If set to `Private`, `subnet_ids` also needs to be set. Defaults to `Public`.
     * 
     * &gt; **Note:** `dns_name_label` and `os_type` set to `windows` are not compatible with `Private` `ip_address_type`
     * 
     */
    public Output<Optional<String>> ipAddressType() {
        return Codegen.optional(this.ipAddressType);
    }
    /**
     * The Key Vault key URI for CMK encryption. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="keyVaultKeyId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> keyVaultKeyId;

    /**
     * @return The Key Vault key URI for CMK encryption. Changing this forces a new resource to be created.
     * 
     */
    public Output<Optional<String>> keyVaultKeyId() {
        return Codegen.optional(this.keyVaultKeyId);
    }
    /**
     * The user assigned identity that has access to the Key Vault Key. If not specified, the RP principal named &#34;Azure Container Instance Service&#34; will be used instead. Make sure the identity has the proper `key_permissions` set, at least with `Get`, `UnwrapKey`, `WrapKey` and `GetRotationPolicy`.
     * 
     */
    @Export(name="keyVaultUserAssignedIdentityId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> keyVaultUserAssignedIdentityId;

    /**
     * @return The user assigned identity that has access to the Key Vault Key. If not specified, the RP principal named &#34;Azure Container Instance Service&#34; will be used instead. Make sure the identity has the proper `key_permissions` set, at least with `Get`, `UnwrapKey`, `WrapKey` and `GetRotationPolicy`.
     * 
     */
    public Output<Optional<String>> keyVaultUserAssignedIdentityId() {
        return Codegen.optional(this.keyVaultUserAssignedIdentityId);
    }
    /**
     * Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="location", refs={String.class}, tree="[0]")
    private Output<String> location;

    /**
     * @return Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> location() {
        return this.location;
    }
    /**
     * Specifies the name of the Container Group. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return Specifies the name of the Container Group. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * @deprecated
     * the &#39;network_profile_id&#39; has been removed from the latest versions of the container instance API and has been deprecated. It no longer functions and will be removed from the 4.0 AzureRM provider. Please use the &#39;subnet_ids&#39; field instead
     * 
     */
    @Deprecated /* the 'network_profile_id' has been removed from the latest versions of the container instance API and has been deprecated. It no longer functions and will be removed from the 4.0 AzureRM provider. Please use the 'subnet_ids' field instead */
    @Export(name="networkProfileId", refs={String.class}, tree="[0]")
    private Output<String> networkProfileId;

    public Output<String> networkProfileId() {
        return this.networkProfileId;
    }
    /**
     * The OS for the container group. Allowed values are `Linux` and `Windows`. Changing this forces a new resource to be created.
     * 
     * &gt; **Note:** if `os_type` is set to `Windows` currently only a single `container` block is supported. Windows containers are not supported in virtual networks.
     * 
     */
    @Export(name="osType", refs={String.class}, tree="[0]")
    private Output<String> osType;

    /**
     * @return The OS for the container group. Allowed values are `Linux` and `Windows`. Changing this forces a new resource to be created.
     * 
     * &gt; **Note:** if `os_type` is set to `Windows` currently only a single `container` block is supported. Windows containers are not supported in virtual networks.
     * 
     */
    public Output<String> osType() {
        return this.osType;
    }
    /**
     * The priority of the Container Group. Possible values are `Regular` and `Spot`. Changing this forces a new resource to be created.
     * 
     * &gt; **NOTE:** When `priority` is set to `Spot`, the `ip_address_type` has to be `None`.
     * 
     */
    @Export(name="priority", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> priority;

    /**
     * @return The priority of the Container Group. Possible values are `Regular` and `Spot`. Changing this forces a new resource to be created.
     * 
     * &gt; **NOTE:** When `priority` is set to `Spot`, the `ip_address_type` has to be `None`.
     * 
     */
    public Output<Optional<String>> priority() {
        return Codegen.optional(this.priority);
    }
    /**
     * The name of the resource group in which to create the Container Group. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="resourceGroupName", refs={String.class}, tree="[0]")
    private Output<String> resourceGroupName;

    /**
     * @return The name of the resource group in which to create the Container Group. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }
    /**
     * Restart policy for the container group. Allowed values are `Always`, `Never`, `OnFailure`. Defaults to `Always`. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="restartPolicy", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> restartPolicy;

    /**
     * @return Restart policy for the container group. Allowed values are `Always`, `Never`, `OnFailure`. Defaults to `Always`. Changing this forces a new resource to be created.
     * 
     */
    public Output<Optional<String>> restartPolicy() {
        return Codegen.optional(this.restartPolicy);
    }
    /**
     * Specifies the sku of the Container Group. Possible values are `Confidential`, `Dedicated` and `Standard`. Defaults to `Standard`. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="sku", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> sku;

    /**
     * @return Specifies the sku of the Container Group. Possible values are `Confidential`, `Dedicated` and `Standard`. Defaults to `Standard`. Changing this forces a new resource to be created.
     * 
     */
    public Output<Optional<String>> sku() {
        return Codegen.optional(this.sku);
    }
    /**
     * The subnet resource IDs for a container group. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="subnetIds", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> subnetIds;

    /**
     * @return The subnet resource IDs for a container group. Changing this forces a new resource to be created.
     * 
     */
    public Output<Optional<String>> subnetIds() {
        return Codegen.optional(this.subnetIds);
    }
    /**
     * A mapping of tags to assign to the resource.
     * 
     */
    @Export(name="tags", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output</* @Nullable */ Map<String,String>> tags;

    /**
     * @return A mapping of tags to assign to the resource.
     * 
     */
    public Output<Optional<Map<String,String>>> tags() {
        return Codegen.optional(this.tags);
    }
    /**
     * A list of Availability Zones in which this Container Group is located. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="zones", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> zones;

    /**
     * @return A list of Availability Zones in which this Container Group is located. Changing this forces a new resource to be created.
     * 
     */
    public Output<Optional<List<String>>> zones() {
        return Codegen.optional(this.zones);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Group(String name) {
        this(name, GroupArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Group(String name, GroupArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Group(String name, GroupArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:containerservice/group:Group", name, args == null ? GroupArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private Group(String name, Output<String> id, @Nullable GroupState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:containerservice/group:Group", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Group get(String name, Output<String> id, @Nullable GroupState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Group(name, id, state, options);
    }
}
