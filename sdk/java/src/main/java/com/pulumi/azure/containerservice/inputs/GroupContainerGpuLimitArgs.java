// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.containerservice.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GroupContainerGpuLimitArgs extends com.pulumi.resources.ResourceArgs {

    public static final GroupContainerGpuLimitArgs Empty = new GroupContainerGpuLimitArgs();

    /**
     * The upper limit of the number of GPUs which should be assigned to this container.
     * 
     */
    @Import(name="count")
    private @Nullable Output<Integer> count;

    /**
     * @return The upper limit of the number of GPUs which should be assigned to this container.
     * 
     */
    public Optional<Output<Integer>> count() {
        return Optional.ofNullable(this.count);
    }

    /**
     * The allowed SKU which should be used for the GPU. Possible values are `K80`, `P100`, or `V100`.
     * 
     */
    @Import(name="sku")
    private @Nullable Output<String> sku;

    /**
     * @return The allowed SKU which should be used for the GPU. Possible values are `K80`, `P100`, or `V100`.
     * 
     */
    public Optional<Output<String>> sku() {
        return Optional.ofNullable(this.sku);
    }

    private GroupContainerGpuLimitArgs() {}

    private GroupContainerGpuLimitArgs(GroupContainerGpuLimitArgs $) {
        this.count = $.count;
        this.sku = $.sku;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GroupContainerGpuLimitArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GroupContainerGpuLimitArgs $;

        public Builder() {
            $ = new GroupContainerGpuLimitArgs();
        }

        public Builder(GroupContainerGpuLimitArgs defaults) {
            $ = new GroupContainerGpuLimitArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param count The upper limit of the number of GPUs which should be assigned to this container.
         * 
         * @return builder
         * 
         */
        public Builder count(@Nullable Output<Integer> count) {
            $.count = count;
            return this;
        }

        /**
         * @param count The upper limit of the number of GPUs which should be assigned to this container.
         * 
         * @return builder
         * 
         */
        public Builder count(Integer count) {
            return count(Output.of(count));
        }

        /**
         * @param sku The allowed SKU which should be used for the GPU. Possible values are `K80`, `P100`, or `V100`.
         * 
         * @return builder
         * 
         */
        public Builder sku(@Nullable Output<String> sku) {
            $.sku = sku;
            return this;
        }

        /**
         * @param sku The allowed SKU which should be used for the GPU. Possible values are `K80`, `P100`, or `V100`.
         * 
         * @return builder
         * 
         */
        public Builder sku(String sku) {
            return sku(Output.of(sku));
        }

        public GroupContainerGpuLimitArgs build() {
            return $;
        }
    }

}
