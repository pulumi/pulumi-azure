// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.eventgrid.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class EventSubscriptionWebhookEndpoint {
    /**
     * @return The Azure Active Directory Application ID or URI to get the access token that will be included as the bearer token in delivery requests.
     * 
     */
    private final @Nullable String activeDirectoryAppIdOrUri;
    /**
     * @return The Azure Active Directory Tenant ID to get the access token that will be included as the bearer token in delivery requests.
     * 
     */
    private final @Nullable String activeDirectoryTenantId;
    /**
     * @return The base url of the webhook where the Event Subscription will receive events.
     * 
     */
    private final @Nullable String baseUrl;
    /**
     * @return Maximum number of events per batch.
     * 
     */
    private final @Nullable Integer maxEventsPerBatch;
    /**
     * @return Preferred batch size in Kilobytes.
     * 
     */
    private final @Nullable Integer preferredBatchSizeInKilobytes;
    /**
     * @return Specifies the url of the webhook where the Event Subscription will receive events.
     * 
     */
    private final String url;

    @CustomType.Constructor
    private EventSubscriptionWebhookEndpoint(
        @CustomType.Parameter("activeDirectoryAppIdOrUri") @Nullable String activeDirectoryAppIdOrUri,
        @CustomType.Parameter("activeDirectoryTenantId") @Nullable String activeDirectoryTenantId,
        @CustomType.Parameter("baseUrl") @Nullable String baseUrl,
        @CustomType.Parameter("maxEventsPerBatch") @Nullable Integer maxEventsPerBatch,
        @CustomType.Parameter("preferredBatchSizeInKilobytes") @Nullable Integer preferredBatchSizeInKilobytes,
        @CustomType.Parameter("url") String url) {
        this.activeDirectoryAppIdOrUri = activeDirectoryAppIdOrUri;
        this.activeDirectoryTenantId = activeDirectoryTenantId;
        this.baseUrl = baseUrl;
        this.maxEventsPerBatch = maxEventsPerBatch;
        this.preferredBatchSizeInKilobytes = preferredBatchSizeInKilobytes;
        this.url = url;
    }

    /**
     * @return The Azure Active Directory Application ID or URI to get the access token that will be included as the bearer token in delivery requests.
     * 
     */
    public Optional<String> activeDirectoryAppIdOrUri() {
        return Optional.ofNullable(this.activeDirectoryAppIdOrUri);
    }
    /**
     * @return The Azure Active Directory Tenant ID to get the access token that will be included as the bearer token in delivery requests.
     * 
     */
    public Optional<String> activeDirectoryTenantId() {
        return Optional.ofNullable(this.activeDirectoryTenantId);
    }
    /**
     * @return The base url of the webhook where the Event Subscription will receive events.
     * 
     */
    public Optional<String> baseUrl() {
        return Optional.ofNullable(this.baseUrl);
    }
    /**
     * @return Maximum number of events per batch.
     * 
     */
    public Optional<Integer> maxEventsPerBatch() {
        return Optional.ofNullable(this.maxEventsPerBatch);
    }
    /**
     * @return Preferred batch size in Kilobytes.
     * 
     */
    public Optional<Integer> preferredBatchSizeInKilobytes() {
        return Optional.ofNullable(this.preferredBatchSizeInKilobytes);
    }
    /**
     * @return Specifies the url of the webhook where the Event Subscription will receive events.
     * 
     */
    public String url() {
        return this.url;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(EventSubscriptionWebhookEndpoint defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String activeDirectoryAppIdOrUri;
        private @Nullable String activeDirectoryTenantId;
        private @Nullable String baseUrl;
        private @Nullable Integer maxEventsPerBatch;
        private @Nullable Integer preferredBatchSizeInKilobytes;
        private String url;

        public Builder() {
    	      // Empty
        }

        public Builder(EventSubscriptionWebhookEndpoint defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.activeDirectoryAppIdOrUri = defaults.activeDirectoryAppIdOrUri;
    	      this.activeDirectoryTenantId = defaults.activeDirectoryTenantId;
    	      this.baseUrl = defaults.baseUrl;
    	      this.maxEventsPerBatch = defaults.maxEventsPerBatch;
    	      this.preferredBatchSizeInKilobytes = defaults.preferredBatchSizeInKilobytes;
    	      this.url = defaults.url;
        }

        public Builder activeDirectoryAppIdOrUri(@Nullable String activeDirectoryAppIdOrUri) {
            this.activeDirectoryAppIdOrUri = activeDirectoryAppIdOrUri;
            return this;
        }
        public Builder activeDirectoryTenantId(@Nullable String activeDirectoryTenantId) {
            this.activeDirectoryTenantId = activeDirectoryTenantId;
            return this;
        }
        public Builder baseUrl(@Nullable String baseUrl) {
            this.baseUrl = baseUrl;
            return this;
        }
        public Builder maxEventsPerBatch(@Nullable Integer maxEventsPerBatch) {
            this.maxEventsPerBatch = maxEventsPerBatch;
            return this;
        }
        public Builder preferredBatchSizeInKilobytes(@Nullable Integer preferredBatchSizeInKilobytes) {
            this.preferredBatchSizeInKilobytes = preferredBatchSizeInKilobytes;
            return this;
        }
        public Builder url(String url) {
            this.url = Objects.requireNonNull(url);
            return this;
        }        public EventSubscriptionWebhookEndpoint build() {
            return new EventSubscriptionWebhookEndpoint(activeDirectoryAppIdOrUri, activeDirectoryTenantId, baseUrl, maxEventsPerBatch, preferredBatchSizeInKilobytes, url);
        }
    }
}
