// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.batch.outputs;

import com.pulumi.azure.batch.outputs.PoolNetworkConfigurationEndpointConfiguration;
import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class PoolNetworkConfiguration {
    /**
     * @return Whether to enable accelerated networking. Possible values are `true` and `false`. Defaults to `false`. Changing this forces a new resource to be created.
     * 
     */
    private @Nullable Boolean acceleratedNetworkingEnabled;
    /**
     * @return The scope of dynamic vnet assignment. Allowed values: `none`, `job`. Changing this forces a new resource to be created. Defaults to `none`.
     * 
     */
    private @Nullable String dynamicVnetAssignmentScope;
    /**
     * @return A list of `endpoint_configuration` blocks that can be used to address specific ports on an individual compute node externally as defined below. Set as documented in the inbound_nat_pools block below. Changing this forces a new resource to be created.
     * 
     */
    private @Nullable List<PoolNetworkConfigurationEndpointConfiguration> endpointConfigurations;
    /**
     * @return Type of public IP address provisioning. Supported values are `BatchManaged`, `UserManaged` and `NoPublicIPAddresses`.
     * 
     */
    private @Nullable String publicAddressProvisioningType;
    /**
     * @return A list of public IP ids that will be allocated to nodes. Changing this forces a new resource to be created.
     * 
     */
    private @Nullable List<String> publicIps;
    /**
     * @return The ARM resource identifier of the virtual network subnet which the compute nodes of the pool will join. Changing this forces a new resource to be created.
     * 
     */
    private @Nullable String subnetId;

    private PoolNetworkConfiguration() {}
    /**
     * @return Whether to enable accelerated networking. Possible values are `true` and `false`. Defaults to `false`. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Boolean> acceleratedNetworkingEnabled() {
        return Optional.ofNullable(this.acceleratedNetworkingEnabled);
    }
    /**
     * @return The scope of dynamic vnet assignment. Allowed values: `none`, `job`. Changing this forces a new resource to be created. Defaults to `none`.
     * 
     */
    public Optional<String> dynamicVnetAssignmentScope() {
        return Optional.ofNullable(this.dynamicVnetAssignmentScope);
    }
    /**
     * @return A list of `endpoint_configuration` blocks that can be used to address specific ports on an individual compute node externally as defined below. Set as documented in the inbound_nat_pools block below. Changing this forces a new resource to be created.
     * 
     */
    public List<PoolNetworkConfigurationEndpointConfiguration> endpointConfigurations() {
        return this.endpointConfigurations == null ? List.of() : this.endpointConfigurations;
    }
    /**
     * @return Type of public IP address provisioning. Supported values are `BatchManaged`, `UserManaged` and `NoPublicIPAddresses`.
     * 
     */
    public Optional<String> publicAddressProvisioningType() {
        return Optional.ofNullable(this.publicAddressProvisioningType);
    }
    /**
     * @return A list of public IP ids that will be allocated to nodes. Changing this forces a new resource to be created.
     * 
     */
    public List<String> publicIps() {
        return this.publicIps == null ? List.of() : this.publicIps;
    }
    /**
     * @return The ARM resource identifier of the virtual network subnet which the compute nodes of the pool will join. Changing this forces a new resource to be created.
     * 
     */
    public Optional<String> subnetId() {
        return Optional.ofNullable(this.subnetId);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(PoolNetworkConfiguration defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Boolean acceleratedNetworkingEnabled;
        private @Nullable String dynamicVnetAssignmentScope;
        private @Nullable List<PoolNetworkConfigurationEndpointConfiguration> endpointConfigurations;
        private @Nullable String publicAddressProvisioningType;
        private @Nullable List<String> publicIps;
        private @Nullable String subnetId;
        public Builder() {}
        public Builder(PoolNetworkConfiguration defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.acceleratedNetworkingEnabled = defaults.acceleratedNetworkingEnabled;
    	      this.dynamicVnetAssignmentScope = defaults.dynamicVnetAssignmentScope;
    	      this.endpointConfigurations = defaults.endpointConfigurations;
    	      this.publicAddressProvisioningType = defaults.publicAddressProvisioningType;
    	      this.publicIps = defaults.publicIps;
    	      this.subnetId = defaults.subnetId;
        }

        @CustomType.Setter
        public Builder acceleratedNetworkingEnabled(@Nullable Boolean acceleratedNetworkingEnabled) {

            this.acceleratedNetworkingEnabled = acceleratedNetworkingEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder dynamicVnetAssignmentScope(@Nullable String dynamicVnetAssignmentScope) {

            this.dynamicVnetAssignmentScope = dynamicVnetAssignmentScope;
            return this;
        }
        @CustomType.Setter
        public Builder endpointConfigurations(@Nullable List<PoolNetworkConfigurationEndpointConfiguration> endpointConfigurations) {

            this.endpointConfigurations = endpointConfigurations;
            return this;
        }
        public Builder endpointConfigurations(PoolNetworkConfigurationEndpointConfiguration... endpointConfigurations) {
            return endpointConfigurations(List.of(endpointConfigurations));
        }
        @CustomType.Setter
        public Builder publicAddressProvisioningType(@Nullable String publicAddressProvisioningType) {

            this.publicAddressProvisioningType = publicAddressProvisioningType;
            return this;
        }
        @CustomType.Setter
        public Builder publicIps(@Nullable List<String> publicIps) {

            this.publicIps = publicIps;
            return this;
        }
        public Builder publicIps(String... publicIps) {
            return publicIps(List.of(publicIps));
        }
        @CustomType.Setter
        public Builder subnetId(@Nullable String subnetId) {

            this.subnetId = subnetId;
            return this;
        }
        public PoolNetworkConfiguration build() {
            final var _resultValue = new PoolNetworkConfiguration();
            _resultValue.acceleratedNetworkingEnabled = acceleratedNetworkingEnabled;
            _resultValue.dynamicVnetAssignmentScope = dynamicVnetAssignmentScope;
            _resultValue.endpointConfigurations = endpointConfigurations;
            _resultValue.publicAddressProvisioningType = publicAddressProvisioningType;
            _resultValue.publicIps = publicIps;
            _resultValue.subnetId = subnetId;
            return _resultValue;
        }
    }
}
