// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.monitoring.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AutoscaleSettingNotificationEmailArgs extends com.pulumi.resources.ResourceArgs {

    public static final AutoscaleSettingNotificationEmailArgs Empty = new AutoscaleSettingNotificationEmailArgs();

    /**
     * Specifies a list of custom email addresses to which the email notifications will be sent.
     * 
     */
    @Import(name="customEmails")
    private @Nullable Output<List<String>> customEmails;

    /**
     * @return Specifies a list of custom email addresses to which the email notifications will be sent.
     * 
     */
    public Optional<Output<List<String>>> customEmails() {
        return Optional.ofNullable(this.customEmails);
    }

    /**
     * Should email notifications be sent to the subscription administrator? Defaults to `false`.
     * 
     */
    @Import(name="sendToSubscriptionAdministrator")
    private @Nullable Output<Boolean> sendToSubscriptionAdministrator;

    /**
     * @return Should email notifications be sent to the subscription administrator? Defaults to `false`.
     * 
     */
    public Optional<Output<Boolean>> sendToSubscriptionAdministrator() {
        return Optional.ofNullable(this.sendToSubscriptionAdministrator);
    }

    /**
     * Should email notifications be sent to the subscription co-administrator? Defaults to `false`.
     * 
     */
    @Import(name="sendToSubscriptionCoAdministrator")
    private @Nullable Output<Boolean> sendToSubscriptionCoAdministrator;

    /**
     * @return Should email notifications be sent to the subscription co-administrator? Defaults to `false`.
     * 
     */
    public Optional<Output<Boolean>> sendToSubscriptionCoAdministrator() {
        return Optional.ofNullable(this.sendToSubscriptionCoAdministrator);
    }

    private AutoscaleSettingNotificationEmailArgs() {}

    private AutoscaleSettingNotificationEmailArgs(AutoscaleSettingNotificationEmailArgs $) {
        this.customEmails = $.customEmails;
        this.sendToSubscriptionAdministrator = $.sendToSubscriptionAdministrator;
        this.sendToSubscriptionCoAdministrator = $.sendToSubscriptionCoAdministrator;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AutoscaleSettingNotificationEmailArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AutoscaleSettingNotificationEmailArgs $;

        public Builder() {
            $ = new AutoscaleSettingNotificationEmailArgs();
        }

        public Builder(AutoscaleSettingNotificationEmailArgs defaults) {
            $ = new AutoscaleSettingNotificationEmailArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param customEmails Specifies a list of custom email addresses to which the email notifications will be sent.
         * 
         * @return builder
         * 
         */
        public Builder customEmails(@Nullable Output<List<String>> customEmails) {
            $.customEmails = customEmails;
            return this;
        }

        /**
         * @param customEmails Specifies a list of custom email addresses to which the email notifications will be sent.
         * 
         * @return builder
         * 
         */
        public Builder customEmails(List<String> customEmails) {
            return customEmails(Output.of(customEmails));
        }

        /**
         * @param customEmails Specifies a list of custom email addresses to which the email notifications will be sent.
         * 
         * @return builder
         * 
         */
        public Builder customEmails(String... customEmails) {
            return customEmails(List.of(customEmails));
        }

        /**
         * @param sendToSubscriptionAdministrator Should email notifications be sent to the subscription administrator? Defaults to `false`.
         * 
         * @return builder
         * 
         */
        public Builder sendToSubscriptionAdministrator(@Nullable Output<Boolean> sendToSubscriptionAdministrator) {
            $.sendToSubscriptionAdministrator = sendToSubscriptionAdministrator;
            return this;
        }

        /**
         * @param sendToSubscriptionAdministrator Should email notifications be sent to the subscription administrator? Defaults to `false`.
         * 
         * @return builder
         * 
         */
        public Builder sendToSubscriptionAdministrator(Boolean sendToSubscriptionAdministrator) {
            return sendToSubscriptionAdministrator(Output.of(sendToSubscriptionAdministrator));
        }

        /**
         * @param sendToSubscriptionCoAdministrator Should email notifications be sent to the subscription co-administrator? Defaults to `false`.
         * 
         * @return builder
         * 
         */
        public Builder sendToSubscriptionCoAdministrator(@Nullable Output<Boolean> sendToSubscriptionCoAdministrator) {
            $.sendToSubscriptionCoAdministrator = sendToSubscriptionCoAdministrator;
            return this;
        }

        /**
         * @param sendToSubscriptionCoAdministrator Should email notifications be sent to the subscription co-administrator? Defaults to `false`.
         * 
         * @return builder
         * 
         */
        public Builder sendToSubscriptionCoAdministrator(Boolean sendToSubscriptionCoAdministrator) {
            return sendToSubscriptionCoAdministrator(Output.of(sendToSubscriptionCoAdministrator));
        }

        public AutoscaleSettingNotificationEmailArgs build() {
            return $;
        }
    }

}
