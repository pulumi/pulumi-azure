// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.storage.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetTableEntitiesItem {
    /**
     * @return Partition Key of the Entity.
     * 
     */
    private String partitionKey;
    /**
     * @return A map of any additional properties in key-value format.
     * 
     */
    private Map<String,String> properties;
    /**
     * @return Row Key of the Entity.
     * 
     */
    private String rowKey;

    private GetTableEntitiesItem() {}
    /**
     * @return Partition Key of the Entity.
     * 
     */
    public String partitionKey() {
        return this.partitionKey;
    }
    /**
     * @return A map of any additional properties in key-value format.
     * 
     */
    public Map<String,String> properties() {
        return this.properties;
    }
    /**
     * @return Row Key of the Entity.
     * 
     */
    public String rowKey() {
        return this.rowKey;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetTableEntitiesItem defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String partitionKey;
        private Map<String,String> properties;
        private String rowKey;
        public Builder() {}
        public Builder(GetTableEntitiesItem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.partitionKey = defaults.partitionKey;
    	      this.properties = defaults.properties;
    	      this.rowKey = defaults.rowKey;
        }

        @CustomType.Setter
        public Builder partitionKey(String partitionKey) {
            if (partitionKey == null) {
              throw new MissingRequiredPropertyException("GetTableEntitiesItem", "partitionKey");
            }
            this.partitionKey = partitionKey;
            return this;
        }
        @CustomType.Setter
        public Builder properties(Map<String,String> properties) {
            if (properties == null) {
              throw new MissingRequiredPropertyException("GetTableEntitiesItem", "properties");
            }
            this.properties = properties;
            return this;
        }
        @CustomType.Setter
        public Builder rowKey(String rowKey) {
            if (rowKey == null) {
              throw new MissingRequiredPropertyException("GetTableEntitiesItem", "rowKey");
            }
            this.rowKey = rowKey;
            return this;
        }
        public GetTableEntitiesItem build() {
            final var _resultValue = new GetTableEntitiesItem();
            _resultValue.partitionKey = partitionKey;
            _resultValue.properties = properties;
            _resultValue.rowKey = rowKey;
            return _resultValue;
        }
    }
}
