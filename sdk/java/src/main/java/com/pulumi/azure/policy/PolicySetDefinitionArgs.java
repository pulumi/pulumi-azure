// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.policy;

import com.pulumi.azure.policy.inputs.PolicySetDefinitionPolicyDefinitionGroupArgs;
import com.pulumi.azure.policy.inputs.PolicySetDefinitionPolicyDefinitionReferenceArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class PolicySetDefinitionArgs extends com.pulumi.resources.ResourceArgs {

    public static final PolicySetDefinitionArgs Empty = new PolicySetDefinitionArgs();

    /**
     * The description of the policy set definition.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return The description of the policy set definition.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * The display name of the policy set definition.
     * 
     */
    @Import(name="displayName", required=true)
    private Output<String> displayName;

    /**
     * @return The display name of the policy set definition.
     * 
     */
    public Output<String> displayName() {
        return this.displayName;
    }

    /**
     * The id of the Management Group where this policy set definition should be defined. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="managementGroupId")
    private @Nullable Output<String> managementGroupId;

    /**
     * @return The id of the Management Group where this policy set definition should be defined. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> managementGroupId() {
        return Optional.ofNullable(this.managementGroupId);
    }

    /**
     * The metadata for the policy set definition. This is a JSON object representing additional metadata that should be stored with the policy definition.
     * 
     */
    @Import(name="metadata")
    private @Nullable Output<String> metadata;

    /**
     * @return The metadata for the policy set definition. This is a JSON object representing additional metadata that should be stored with the policy definition.
     * 
     */
    public Optional<Output<String>> metadata() {
        return Optional.ofNullable(this.metadata);
    }

    /**
     * The name of the policy set definition. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the policy set definition. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Parameters for the policy set definition. This field is a JSON object that allows you to parameterize your policy definition.
     * 
     */
    @Import(name="parameters")
    private @Nullable Output<String> parameters;

    /**
     * @return Parameters for the policy set definition. This field is a JSON object that allows you to parameterize your policy definition.
     * 
     */
    public Optional<Output<String>> parameters() {
        return Optional.ofNullable(this.parameters);
    }

    /**
     * One or more `policy_definition_group` blocks as defined below.
     * 
     */
    @Import(name="policyDefinitionGroups")
    private @Nullable Output<List<PolicySetDefinitionPolicyDefinitionGroupArgs>> policyDefinitionGroups;

    /**
     * @return One or more `policy_definition_group` blocks as defined below.
     * 
     */
    public Optional<Output<List<PolicySetDefinitionPolicyDefinitionGroupArgs>>> policyDefinitionGroups() {
        return Optional.ofNullable(this.policyDefinitionGroups);
    }

    /**
     * One or more `policy_definition_reference` blocks as defined below.
     * 
     */
    @Import(name="policyDefinitionReferences", required=true)
    private Output<List<PolicySetDefinitionPolicyDefinitionReferenceArgs>> policyDefinitionReferences;

    /**
     * @return One or more `policy_definition_reference` blocks as defined below.
     * 
     */
    public Output<List<PolicySetDefinitionPolicyDefinitionReferenceArgs>> policyDefinitionReferences() {
        return this.policyDefinitionReferences;
    }

    /**
     * The policy set type. Possible values are `BuiltIn`, `Custom`, `NotSpecified` and `Static`. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="policyType", required=true)
    private Output<String> policyType;

    /**
     * @return The policy set type. Possible values are `BuiltIn`, `Custom`, `NotSpecified` and `Static`. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> policyType() {
        return this.policyType;
    }

    private PolicySetDefinitionArgs() {}

    private PolicySetDefinitionArgs(PolicySetDefinitionArgs $) {
        this.description = $.description;
        this.displayName = $.displayName;
        this.managementGroupId = $.managementGroupId;
        this.metadata = $.metadata;
        this.name = $.name;
        this.parameters = $.parameters;
        this.policyDefinitionGroups = $.policyDefinitionGroups;
        this.policyDefinitionReferences = $.policyDefinitionReferences;
        this.policyType = $.policyType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PolicySetDefinitionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PolicySetDefinitionArgs $;

        public Builder() {
            $ = new PolicySetDefinitionArgs();
        }

        public Builder(PolicySetDefinitionArgs defaults) {
            $ = new PolicySetDefinitionArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param description The description of the policy set definition.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description The description of the policy set definition.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param displayName The display name of the policy set definition.
         * 
         * @return builder
         * 
         */
        public Builder displayName(Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName The display name of the policy set definition.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param managementGroupId The id of the Management Group where this policy set definition should be defined. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder managementGroupId(@Nullable Output<String> managementGroupId) {
            $.managementGroupId = managementGroupId;
            return this;
        }

        /**
         * @param managementGroupId The id of the Management Group where this policy set definition should be defined. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder managementGroupId(String managementGroupId) {
            return managementGroupId(Output.of(managementGroupId));
        }

        /**
         * @param metadata The metadata for the policy set definition. This is a JSON object representing additional metadata that should be stored with the policy definition.
         * 
         * @return builder
         * 
         */
        public Builder metadata(@Nullable Output<String> metadata) {
            $.metadata = metadata;
            return this;
        }

        /**
         * @param metadata The metadata for the policy set definition. This is a JSON object representing additional metadata that should be stored with the policy definition.
         * 
         * @return builder
         * 
         */
        public Builder metadata(String metadata) {
            return metadata(Output.of(metadata));
        }

        /**
         * @param name The name of the policy set definition. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the policy set definition. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param parameters Parameters for the policy set definition. This field is a JSON object that allows you to parameterize your policy definition.
         * 
         * @return builder
         * 
         */
        public Builder parameters(@Nullable Output<String> parameters) {
            $.parameters = parameters;
            return this;
        }

        /**
         * @param parameters Parameters for the policy set definition. This field is a JSON object that allows you to parameterize your policy definition.
         * 
         * @return builder
         * 
         */
        public Builder parameters(String parameters) {
            return parameters(Output.of(parameters));
        }

        /**
         * @param policyDefinitionGroups One or more `policy_definition_group` blocks as defined below.
         * 
         * @return builder
         * 
         */
        public Builder policyDefinitionGroups(@Nullable Output<List<PolicySetDefinitionPolicyDefinitionGroupArgs>> policyDefinitionGroups) {
            $.policyDefinitionGroups = policyDefinitionGroups;
            return this;
        }

        /**
         * @param policyDefinitionGroups One or more `policy_definition_group` blocks as defined below.
         * 
         * @return builder
         * 
         */
        public Builder policyDefinitionGroups(List<PolicySetDefinitionPolicyDefinitionGroupArgs> policyDefinitionGroups) {
            return policyDefinitionGroups(Output.of(policyDefinitionGroups));
        }

        /**
         * @param policyDefinitionGroups One or more `policy_definition_group` blocks as defined below.
         * 
         * @return builder
         * 
         */
        public Builder policyDefinitionGroups(PolicySetDefinitionPolicyDefinitionGroupArgs... policyDefinitionGroups) {
            return policyDefinitionGroups(List.of(policyDefinitionGroups));
        }

        /**
         * @param policyDefinitionReferences One or more `policy_definition_reference` blocks as defined below.
         * 
         * @return builder
         * 
         */
        public Builder policyDefinitionReferences(Output<List<PolicySetDefinitionPolicyDefinitionReferenceArgs>> policyDefinitionReferences) {
            $.policyDefinitionReferences = policyDefinitionReferences;
            return this;
        }

        /**
         * @param policyDefinitionReferences One or more `policy_definition_reference` blocks as defined below.
         * 
         * @return builder
         * 
         */
        public Builder policyDefinitionReferences(List<PolicySetDefinitionPolicyDefinitionReferenceArgs> policyDefinitionReferences) {
            return policyDefinitionReferences(Output.of(policyDefinitionReferences));
        }

        /**
         * @param policyDefinitionReferences One or more `policy_definition_reference` blocks as defined below.
         * 
         * @return builder
         * 
         */
        public Builder policyDefinitionReferences(PolicySetDefinitionPolicyDefinitionReferenceArgs... policyDefinitionReferences) {
            return policyDefinitionReferences(List.of(policyDefinitionReferences));
        }

        /**
         * @param policyType The policy set type. Possible values are `BuiltIn`, `Custom`, `NotSpecified` and `Static`. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder policyType(Output<String> policyType) {
            $.policyType = policyType;
            return this;
        }

        /**
         * @param policyType The policy set type. Possible values are `BuiltIn`, `Custom`, `NotSpecified` and `Static`. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder policyType(String policyType) {
            return policyType(Output.of(policyType));
        }

        public PolicySetDefinitionArgs build() {
            if ($.displayName == null) {
                throw new MissingRequiredPropertyException("PolicySetDefinitionArgs", "displayName");
            }
            if ($.policyDefinitionReferences == null) {
                throw new MissingRequiredPropertyException("PolicySetDefinitionArgs", "policyDefinitionReferences");
            }
            if ($.policyType == null) {
                throw new MissingRequiredPropertyException("PolicySetDefinitionArgs", "policyType");
            }
            return $;
        }
    }

}
