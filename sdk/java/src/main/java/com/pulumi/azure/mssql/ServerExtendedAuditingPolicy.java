// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.mssql;

import com.pulumi.azure.Utilities;
import com.pulumi.azure.mssql.ServerExtendedAuditingPolicyArgs;
import com.pulumi.azure.mssql.inputs.ServerExtendedAuditingPolicyState;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Manages a MS SQL Server Extended Auditing Policy.
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.azure.core.ResourceGroup;
 * import com.pulumi.azure.core.ResourceGroupArgs;
 * import com.pulumi.azure.mssql.Server;
 * import com.pulumi.azure.mssql.ServerArgs;
 * import com.pulumi.azure.storage.Account;
 * import com.pulumi.azure.storage.AccountArgs;
 * import com.pulumi.azure.mssql.ServerExtendedAuditingPolicy;
 * import com.pulumi.azure.mssql.ServerExtendedAuditingPolicyArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new ResourceGroup("example", ResourceGroupArgs.builder()        
 *             .name("example-resources")
 *             .location("West Europe")
 *             .build());
 * 
 *         var exampleServer = new Server("exampleServer", ServerArgs.builder()        
 *             .name("example-sqlserver")
 *             .resourceGroupName(example.name())
 *             .location(example.location())
 *             .version("12.0")
 *             .administratorLogin("missadministrator")
 *             .administratorLoginPassword("AdminPassword123!")
 *             .build());
 * 
 *         var exampleAccount = new Account("exampleAccount", AccountArgs.builder()        
 *             .name("examplesa")
 *             .resourceGroupName(example.name())
 *             .location(example.location())
 *             .accountTier("Standard")
 *             .accountReplicationType("LRS")
 *             .build());
 * 
 *         var exampleServerExtendedAuditingPolicy = new ServerExtendedAuditingPolicy("exampleServerExtendedAuditingPolicy", ServerExtendedAuditingPolicyArgs.builder()        
 *             .serverId(exampleServer.id())
 *             .storageEndpoint(exampleAccount.primaryBlobEndpoint())
 *             .storageAccountAccessKey(exampleAccount.primaryAccessKey())
 *             .storageAccountAccessKeyIsSecondary(false)
 *             .retentionInDays(6)
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ### With Storage Account Behind VNet And Firewall
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.azure.core.CoreFunctions;
 * import com.pulumi.azure.core.inputs.GetSubscriptionArgs;
 * import com.pulumi.azure.core.ResourceGroup;
 * import com.pulumi.azure.core.ResourceGroupArgs;
 * import com.pulumi.azure.network.VirtualNetwork;
 * import com.pulumi.azure.network.VirtualNetworkArgs;
 * import com.pulumi.azure.network.Subnet;
 * import com.pulumi.azure.network.SubnetArgs;
 * import com.pulumi.azure.mssql.Server;
 * import com.pulumi.azure.mssql.ServerArgs;
 * import com.pulumi.azure.mssql.inputs.ServerIdentityArgs;
 * import com.pulumi.azure.authorization.Assignment;
 * import com.pulumi.azure.authorization.AssignmentArgs;
 * import com.pulumi.azure.sql.VirtualNetworkRule;
 * import com.pulumi.azure.sql.VirtualNetworkRuleArgs;
 * import com.pulumi.azure.sql.FirewallRule;
 * import com.pulumi.azure.sql.FirewallRuleArgs;
 * import com.pulumi.azure.storage.Account;
 * import com.pulumi.azure.storage.AccountArgs;
 * import com.pulumi.azure.storage.inputs.AccountNetworkRulesArgs;
 * import com.pulumi.azure.storage.inputs.AccountIdentityArgs;
 * import com.pulumi.azure.mssql.ServerExtendedAuditingPolicy;
 * import com.pulumi.azure.mssql.ServerExtendedAuditingPolicyArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         final var primary = CoreFunctions.getSubscription();
 * 
 *         final var example = CoreFunctions.getClientConfig();
 * 
 *         var exampleResourceGroup = new ResourceGroup("exampleResourceGroup", ResourceGroupArgs.builder()        
 *             .name("example")
 *             .location("West Europe")
 *             .build());
 * 
 *         var exampleVirtualNetwork = new VirtualNetwork("exampleVirtualNetwork", VirtualNetworkArgs.builder()        
 *             .name("virtnetname-1")
 *             .addressSpaces("10.0.0.0/16")
 *             .location(exampleResourceGroup.location())
 *             .resourceGroupName(exampleResourceGroup.name())
 *             .build());
 * 
 *         var exampleSubnet = new Subnet("exampleSubnet", SubnetArgs.builder()        
 *             .name("subnetname-1")
 *             .resourceGroupName(exampleResourceGroup.name())
 *             .virtualNetworkName(exampleVirtualNetwork.name())
 *             .addressPrefixes("10.0.2.0/24")
 *             .serviceEndpoints(            
 *                 "Microsoft.Sql",
 *                 "Microsoft.Storage")
 *             .enforcePrivateLinkEndpointNetworkPolicies(true)
 *             .build());
 * 
 *         var exampleServer = new Server("exampleServer", ServerArgs.builder()        
 *             .name("example-sqlserver")
 *             .resourceGroupName(exampleResourceGroup.name())
 *             .location(exampleResourceGroup.location())
 *             .version("12.0")
 *             .administratorLogin("missadministrator")
 *             .administratorLoginPassword("AdminPassword123!")
 *             .minimumTlsVersion("1.2")
 *             .identity(ServerIdentityArgs.builder()
 *                 .type("SystemAssigned")
 *                 .build())
 *             .build());
 * 
 *         var exampleAssignment = new Assignment("exampleAssignment", AssignmentArgs.builder()        
 *             .scope(primary.applyValue(getSubscriptionResult -> getSubscriptionResult.id()))
 *             .roleDefinitionName("Storage Blob Data Contributor")
 *             .principalId(exampleServer.identity().applyValue(identity -> identity.principalId()))
 *             .build());
 * 
 *         var sqlvnetrule = new VirtualNetworkRule("sqlvnetrule", VirtualNetworkRuleArgs.builder()        
 *             .name("sql-vnet-rule")
 *             .resourceGroupName(exampleResourceGroup.name())
 *             .serverName(exampleServer.name())
 *             .subnetId(exampleSubnet.id())
 *             .build());
 * 
 *         var exampleFirewallRule = new FirewallRule("exampleFirewallRule", FirewallRuleArgs.builder()        
 *             .name("FirewallRule1")
 *             .resourceGroupName(exampleResourceGroup.name())
 *             .serverName(exampleServer.name())
 *             .startIpAddress("0.0.0.0")
 *             .endIpAddress("0.0.0.0")
 *             .build());
 * 
 *         var exampleAccount = new Account("exampleAccount", AccountArgs.builder()        
 *             .name("examplesa")
 *             .resourceGroupName(exampleResourceGroup.name())
 *             .location(exampleResourceGroup.location())
 *             .accountTier("Standard")
 *             .accountReplicationType("LRS")
 *             .accountKind("StorageV2")
 *             .allowNestedItemsToBePublic(false)
 *             .networkRules(AccountNetworkRulesArgs.builder()
 *                 .defaultAction("Deny")
 *                 .ipRules("127.0.0.1")
 *                 .virtualNetworkSubnetIds(exampleSubnet.id())
 *                 .bypasses("AzureServices")
 *                 .build())
 *             .identity(AccountIdentityArgs.builder()
 *                 .type("SystemAssigned")
 *                 .build())
 *             .build());
 * 
 *         var exampleServerExtendedAuditingPolicy = new ServerExtendedAuditingPolicy("exampleServerExtendedAuditingPolicy", ServerExtendedAuditingPolicyArgs.builder()        
 *             .storageEndpoint(exampleAccount.primaryBlobEndpoint())
 *             .serverId(exampleServer.id())
 *             .retentionInDays(6)
 *             .logMonitoringEnabled(false)
 *             .storageAccountSubscriptionId(primaryAzurermSubscription.subscriptionId())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * MS SQL Server Extended Auditing Policies can be imported using the `resource id`, e.g.
 * 
 * ```sh
 * $ pulumi import azure:mssql/serverExtendedAuditingPolicy:ServerExtendedAuditingPolicy example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.Sql/servers/sqlServer1/extendedAuditingSettings/default
 * ```
 * 
 */
@ResourceType(type="azure:mssql/serverExtendedAuditingPolicy:ServerExtendedAuditingPolicy")
public class ServerExtendedAuditingPolicy extends com.pulumi.resources.CustomResource {
    /**
     * A list of Actions-Groups and Actions to audit.
     * 
     */
    @Export(name="auditActionsAndGroups", refs={List.class,String.class}, tree="[0,1]")
    private Output<List<String>> auditActionsAndGroups;

    /**
     * @return A list of Actions-Groups and Actions to audit.
     * 
     */
    public Output<List<String>> auditActionsAndGroups() {
        return this.auditActionsAndGroups;
    }
    /**
     * Whether to enable the extended auditing policy. Possible values are `true` and `false`. Defaults to `true`.
     * 
     * -&gt;**NOTE:**  If `enabled` is `true`, `storage_endpoint` or `log_monitoring_enabled` are required.
     * 
     */
    @Export(name="enabled", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> enabled;

    /**
     * @return Whether to enable the extended auditing policy. Possible values are `true` and `false`. Defaults to `true`.
     * 
     * -&gt;**NOTE:**  If `enabled` is `true`, `storage_endpoint` or `log_monitoring_enabled` are required.
     * 
     */
    public Output<Optional<Boolean>> enabled() {
        return Codegen.optional(this.enabled);
    }
    /**
     * Enable audit events to Azure Monitor? To enable server audit events to Azure Monitor, please enable its main database audit events to Azure Monitor. Defaults to `true`.
     * 
     */
    @Export(name="logMonitoringEnabled", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> logMonitoringEnabled;

    /**
     * @return Enable audit events to Azure Monitor? To enable server audit events to Azure Monitor, please enable its main database audit events to Azure Monitor. Defaults to `true`.
     * 
     */
    public Output<Optional<Boolean>> logMonitoringEnabled() {
        return Codegen.optional(this.logMonitoringEnabled);
    }
    /**
     * Specifies condition of where clause when creating an audit.
     * 
     */
    @Export(name="predicateExpression", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> predicateExpression;

    /**
     * @return Specifies condition of where clause when creating an audit.
     * 
     */
    public Output<Optional<String>> predicateExpression() {
        return Codegen.optional(this.predicateExpression);
    }
    /**
     * The number of days to retain logs for in the storage account. Defaults to `0`.
     * 
     */
    @Export(name="retentionInDays", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> retentionInDays;

    /**
     * @return The number of days to retain logs for in the storage account. Defaults to `0`.
     * 
     */
    public Output<Optional<Integer>> retentionInDays() {
        return Codegen.optional(this.retentionInDays);
    }
    /**
     * The ID of the SQL Server to set the extended auditing policy. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="serverId", refs={String.class}, tree="[0]")
    private Output<String> serverId;

    /**
     * @return The ID of the SQL Server to set the extended auditing policy. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> serverId() {
        return this.serverId;
    }
    /**
     * The access key to use for the auditing storage account.
     * 
     */
    @Export(name="storageAccountAccessKey", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> storageAccountAccessKey;

    /**
     * @return The access key to use for the auditing storage account.
     * 
     */
    public Output<Optional<String>> storageAccountAccessKey() {
        return Codegen.optional(this.storageAccountAccessKey);
    }
    /**
     * Is `storage_account_access_key` value the storage&#39;s secondary key?
     * 
     */
    @Export(name="storageAccountAccessKeyIsSecondary", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> storageAccountAccessKeyIsSecondary;

    /**
     * @return Is `storage_account_access_key` value the storage&#39;s secondary key?
     * 
     */
    public Output<Optional<Boolean>> storageAccountAccessKeyIsSecondary() {
        return Codegen.optional(this.storageAccountAccessKeyIsSecondary);
    }
    /**
     * The ID of the Subscription containing the Storage Account.
     * 
     */
    @Export(name="storageAccountSubscriptionId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> storageAccountSubscriptionId;

    /**
     * @return The ID of the Subscription containing the Storage Account.
     * 
     */
    public Output<Optional<String>> storageAccountSubscriptionId() {
        return Codegen.optional(this.storageAccountSubscriptionId);
    }
    /**
     * The blob storage endpoint (e.g. &lt;https://example.blob.core.windows.net&gt;). This blob storage will hold all extended auditing logs.
     * 
     */
    @Export(name="storageEndpoint", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> storageEndpoint;

    /**
     * @return The blob storage endpoint (e.g. &lt;https://example.blob.core.windows.net&gt;). This blob storage will hold all extended auditing logs.
     * 
     */
    public Output<Optional<String>> storageEndpoint() {
        return Codegen.optional(this.storageEndpoint);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public ServerExtendedAuditingPolicy(String name) {
        this(name, ServerExtendedAuditingPolicyArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public ServerExtendedAuditingPolicy(String name, ServerExtendedAuditingPolicyArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public ServerExtendedAuditingPolicy(String name, ServerExtendedAuditingPolicyArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:mssql/serverExtendedAuditingPolicy:ServerExtendedAuditingPolicy", name, args == null ? ServerExtendedAuditingPolicyArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private ServerExtendedAuditingPolicy(String name, Output<String> id, @Nullable ServerExtendedAuditingPolicyState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:mssql/serverExtendedAuditingPolicy:ServerExtendedAuditingPolicy", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .additionalSecretOutputs(List.of(
                "storageAccountAccessKey",
                "storageAccountSubscriptionId"
            ))
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static ServerExtendedAuditingPolicy get(String name, Output<String> id, @Nullable ServerExtendedAuditingPolicyState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new ServerExtendedAuditingPolicy(name, id, state, options);
    }
}
