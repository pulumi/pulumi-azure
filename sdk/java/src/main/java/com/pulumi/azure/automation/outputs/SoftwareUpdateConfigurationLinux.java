// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.automation.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class SoftwareUpdateConfigurationLinux {
    private @Nullable String classificationIncluded;
    /**
     * @return Specifies the list of update classifications included in the Software Update Configuration. Possible values are `Unclassified`, `Critical`, `Security` and `Other`.
     * 
     */
    private @Nullable List<String> classificationsIncludeds;
    /**
     * @return Specifies a list of packages to excluded from the Software Update Configuration.
     * 
     */
    private @Nullable List<String> excludedPackages;
    /**
     * @return Specifies a list of packages to included from the Software Update Configuration.
     * 
     */
    private @Nullable List<String> includedPackages;
    /**
     * @return Specifies the reboot settings after software update, possible values are `IfRequired`, `Never`, `RebootOnly` and `Always`. Defaults to `IfRequired`.
     * 
     */
    private @Nullable String reboot;

    private SoftwareUpdateConfigurationLinux() {}
    public Optional<String> classificationIncluded() {
        return Optional.ofNullable(this.classificationIncluded);
    }
    /**
     * @return Specifies the list of update classifications included in the Software Update Configuration. Possible values are `Unclassified`, `Critical`, `Security` and `Other`.
     * 
     */
    public List<String> classificationsIncludeds() {
        return this.classificationsIncludeds == null ? List.of() : this.classificationsIncludeds;
    }
    /**
     * @return Specifies a list of packages to excluded from the Software Update Configuration.
     * 
     */
    public List<String> excludedPackages() {
        return this.excludedPackages == null ? List.of() : this.excludedPackages;
    }
    /**
     * @return Specifies a list of packages to included from the Software Update Configuration.
     * 
     */
    public List<String> includedPackages() {
        return this.includedPackages == null ? List.of() : this.includedPackages;
    }
    /**
     * @return Specifies the reboot settings after software update, possible values are `IfRequired`, `Never`, `RebootOnly` and `Always`. Defaults to `IfRequired`.
     * 
     */
    public Optional<String> reboot() {
        return Optional.ofNullable(this.reboot);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SoftwareUpdateConfigurationLinux defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String classificationIncluded;
        private @Nullable List<String> classificationsIncludeds;
        private @Nullable List<String> excludedPackages;
        private @Nullable List<String> includedPackages;
        private @Nullable String reboot;
        public Builder() {}
        public Builder(SoftwareUpdateConfigurationLinux defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.classificationIncluded = defaults.classificationIncluded;
    	      this.classificationsIncludeds = defaults.classificationsIncludeds;
    	      this.excludedPackages = defaults.excludedPackages;
    	      this.includedPackages = defaults.includedPackages;
    	      this.reboot = defaults.reboot;
        }

        @CustomType.Setter
        public Builder classificationIncluded(@Nullable String classificationIncluded) {

            this.classificationIncluded = classificationIncluded;
            return this;
        }
        @CustomType.Setter
        public Builder classificationsIncludeds(@Nullable List<String> classificationsIncludeds) {

            this.classificationsIncludeds = classificationsIncludeds;
            return this;
        }
        public Builder classificationsIncludeds(String... classificationsIncludeds) {
            return classificationsIncludeds(List.of(classificationsIncludeds));
        }
        @CustomType.Setter
        public Builder excludedPackages(@Nullable List<String> excludedPackages) {

            this.excludedPackages = excludedPackages;
            return this;
        }
        public Builder excludedPackages(String... excludedPackages) {
            return excludedPackages(List.of(excludedPackages));
        }
        @CustomType.Setter
        public Builder includedPackages(@Nullable List<String> includedPackages) {

            this.includedPackages = includedPackages;
            return this;
        }
        public Builder includedPackages(String... includedPackages) {
            return includedPackages(List.of(includedPackages));
        }
        @CustomType.Setter
        public Builder reboot(@Nullable String reboot) {

            this.reboot = reboot;
            return this;
        }
        public SoftwareUpdateConfigurationLinux build() {
            final var _resultValue = new SoftwareUpdateConfigurationLinux();
            _resultValue.classificationIncluded = classificationIncluded;
            _resultValue.classificationsIncludeds = classificationsIncludeds;
            _resultValue.excludedPackages = excludedPackages;
            _resultValue.includedPackages = includedPackages;
            _resultValue.reboot = reboot;
            return _resultValue;
        }
    }
}
