// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.cdn.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetFrontdoorProfileResult {
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private String name;
    private String resourceGroupName;
    /**
     * @return The UUID of the Front Door Profile which will be sent in the HTTP Header as the `X-Azure-FDID` attribute.
     * 
     */
    private String resourceGuid;
    /**
     * @return Specifies the maximum response timeout in seconds.
     * 
     */
    private Integer responseTimeoutSeconds;
    /**
     * @return Specifies the SKU for this Front Door Profile.
     * 
     */
    private String skuName;
    /**
     * @return Specifies a mapping of Tags assigned to this Front Door Profile.
     * 
     */
    private Map<String,String> tags;

    private GetFrontdoorProfileResult() {}
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public String name() {
        return this.name;
    }
    public String resourceGroupName() {
        return this.resourceGroupName;
    }
    /**
     * @return The UUID of the Front Door Profile which will be sent in the HTTP Header as the `X-Azure-FDID` attribute.
     * 
     */
    public String resourceGuid() {
        return this.resourceGuid;
    }
    /**
     * @return Specifies the maximum response timeout in seconds.
     * 
     */
    public Integer responseTimeoutSeconds() {
        return this.responseTimeoutSeconds;
    }
    /**
     * @return Specifies the SKU for this Front Door Profile.
     * 
     */
    public String skuName() {
        return this.skuName;
    }
    /**
     * @return Specifies a mapping of Tags assigned to this Front Door Profile.
     * 
     */
    public Map<String,String> tags() {
        return this.tags;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetFrontdoorProfileResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String id;
        private String name;
        private String resourceGroupName;
        private String resourceGuid;
        private Integer responseTimeoutSeconds;
        private String skuName;
        private Map<String,String> tags;
        public Builder() {}
        public Builder(GetFrontdoorProfileResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.resourceGroupName = defaults.resourceGroupName;
    	      this.resourceGuid = defaults.resourceGuid;
    	      this.responseTimeoutSeconds = defaults.responseTimeoutSeconds;
    	      this.skuName = defaults.skuName;
    	      this.tags = defaults.tags;
        }

        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetFrontdoorProfileResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetFrontdoorProfileResult", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder resourceGroupName(String resourceGroupName) {
            if (resourceGroupName == null) {
              throw new MissingRequiredPropertyException("GetFrontdoorProfileResult", "resourceGroupName");
            }
            this.resourceGroupName = resourceGroupName;
            return this;
        }
        @CustomType.Setter
        public Builder resourceGuid(String resourceGuid) {
            if (resourceGuid == null) {
              throw new MissingRequiredPropertyException("GetFrontdoorProfileResult", "resourceGuid");
            }
            this.resourceGuid = resourceGuid;
            return this;
        }
        @CustomType.Setter
        public Builder responseTimeoutSeconds(Integer responseTimeoutSeconds) {
            if (responseTimeoutSeconds == null) {
              throw new MissingRequiredPropertyException("GetFrontdoorProfileResult", "responseTimeoutSeconds");
            }
            this.responseTimeoutSeconds = responseTimeoutSeconds;
            return this;
        }
        @CustomType.Setter
        public Builder skuName(String skuName) {
            if (skuName == null) {
              throw new MissingRequiredPropertyException("GetFrontdoorProfileResult", "skuName");
            }
            this.skuName = skuName;
            return this;
        }
        @CustomType.Setter
        public Builder tags(Map<String,String> tags) {
            if (tags == null) {
              throw new MissingRequiredPropertyException("GetFrontdoorProfileResult", "tags");
            }
            this.tags = tags;
            return this;
        }
        public GetFrontdoorProfileResult build() {
            final var _resultValue = new GetFrontdoorProfileResult();
            _resultValue.id = id;
            _resultValue.name = name;
            _resultValue.resourceGroupName = resourceGroupName;
            _resultValue.resourceGuid = resourceGuid;
            _resultValue.responseTimeoutSeconds = responseTimeoutSeconds;
            _resultValue.skuName = skuName;
            _resultValue.tags = tags;
            return _resultValue;
        }
    }
}
