// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.appservice.outputs;

import com.pulumi.azure.appservice.outputs.LinuxFunctionAppSiteConfigIpRestrictionHeaders;
import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class LinuxFunctionAppSiteConfigIpRestriction {
    /**
     * @return The action to take. Possible values are `Allow` or `Deny`. Defaults to `Allow`.
     * 
     */
    private @Nullable String action;
    /**
     * @return A `headers` block as defined above.
     * 
     */
    private @Nullable LinuxFunctionAppSiteConfigIpRestrictionHeaders headers;
    /**
     * @return The CIDR notation of the IP or IP Range to match. For example: `10.0.0.0/24` or `192.168.10.1/32`
     * 
     */
    private @Nullable String ipAddress;
    /**
     * @return The name which should be used for this `ip_restriction`.
     * 
     */
    private @Nullable String name;
    /**
     * @return The priority value of this `ip_restriction`. Defaults to `65000`.
     * 
     */
    private @Nullable Integer priority;
    /**
     * @return The Service Tag used for this IP Restriction.
     * 
     */
    private @Nullable String serviceTag;
    /**
     * @return The Virtual Network Subnet ID used for this IP Restriction.
     * 
     * &gt; **NOTE:** One and only one of `ip_address`, `service_tag` or `virtual_network_subnet_id` must be specified.
     * 
     */
    private @Nullable String virtualNetworkSubnetId;

    private LinuxFunctionAppSiteConfigIpRestriction() {}
    /**
     * @return The action to take. Possible values are `Allow` or `Deny`. Defaults to `Allow`.
     * 
     */
    public Optional<String> action() {
        return Optional.ofNullable(this.action);
    }
    /**
     * @return A `headers` block as defined above.
     * 
     */
    public Optional<LinuxFunctionAppSiteConfigIpRestrictionHeaders> headers() {
        return Optional.ofNullable(this.headers);
    }
    /**
     * @return The CIDR notation of the IP or IP Range to match. For example: `10.0.0.0/24` or `192.168.10.1/32`
     * 
     */
    public Optional<String> ipAddress() {
        return Optional.ofNullable(this.ipAddress);
    }
    /**
     * @return The name which should be used for this `ip_restriction`.
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    /**
     * @return The priority value of this `ip_restriction`. Defaults to `65000`.
     * 
     */
    public Optional<Integer> priority() {
        return Optional.ofNullable(this.priority);
    }
    /**
     * @return The Service Tag used for this IP Restriction.
     * 
     */
    public Optional<String> serviceTag() {
        return Optional.ofNullable(this.serviceTag);
    }
    /**
     * @return The Virtual Network Subnet ID used for this IP Restriction.
     * 
     * &gt; **NOTE:** One and only one of `ip_address`, `service_tag` or `virtual_network_subnet_id` must be specified.
     * 
     */
    public Optional<String> virtualNetworkSubnetId() {
        return Optional.ofNullable(this.virtualNetworkSubnetId);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(LinuxFunctionAppSiteConfigIpRestriction defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String action;
        private @Nullable LinuxFunctionAppSiteConfigIpRestrictionHeaders headers;
        private @Nullable String ipAddress;
        private @Nullable String name;
        private @Nullable Integer priority;
        private @Nullable String serviceTag;
        private @Nullable String virtualNetworkSubnetId;
        public Builder() {}
        public Builder(LinuxFunctionAppSiteConfigIpRestriction defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.action = defaults.action;
    	      this.headers = defaults.headers;
    	      this.ipAddress = defaults.ipAddress;
    	      this.name = defaults.name;
    	      this.priority = defaults.priority;
    	      this.serviceTag = defaults.serviceTag;
    	      this.virtualNetworkSubnetId = defaults.virtualNetworkSubnetId;
        }

        @CustomType.Setter
        public Builder action(@Nullable String action) {
            this.action = action;
            return this;
        }
        @CustomType.Setter
        public Builder headers(@Nullable LinuxFunctionAppSiteConfigIpRestrictionHeaders headers) {
            this.headers = headers;
            return this;
        }
        @CustomType.Setter
        public Builder ipAddress(@Nullable String ipAddress) {
            this.ipAddress = ipAddress;
            return this;
        }
        @CustomType.Setter
        public Builder name(@Nullable String name) {
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder priority(@Nullable Integer priority) {
            this.priority = priority;
            return this;
        }
        @CustomType.Setter
        public Builder serviceTag(@Nullable String serviceTag) {
            this.serviceTag = serviceTag;
            return this;
        }
        @CustomType.Setter
        public Builder virtualNetworkSubnetId(@Nullable String virtualNetworkSubnetId) {
            this.virtualNetworkSubnetId = virtualNetworkSubnetId;
            return this;
        }
        public LinuxFunctionAppSiteConfigIpRestriction build() {
            final var _resultValue = new LinuxFunctionAppSiteConfigIpRestriction();
            _resultValue.action = action;
            _resultValue.headers = headers;
            _resultValue.ipAddress = ipAddress;
            _resultValue.name = name;
            _resultValue.priority = priority;
            _resultValue.serviceTag = serviceTag;
            _resultValue.virtualNetworkSubnetId = virtualNetworkSubnetId;
            return _resultValue;
        }
    }
}
