// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.core;

import com.pulumi.azure.Utilities;
import com.pulumi.azure.core.ResourceProviderRegistrationArgs;
import com.pulumi.azure.core.inputs.ResourceProviderRegistrationState;
import com.pulumi.azure.core.outputs.ResourceProviderRegistrationFeature;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Manages the registration of a Resource Provider - which allows access to the API&#39;s supported by this Resource Provider.
 * 
 * &gt; The Azure Provider will automatically register all of the Resource Providers which it supports on launch (unless opted-out using the `skip_provider_registration` field within the provider block).
 * 
 * !&gt; **Note:** The errors returned from the Azure API when a Resource Provider is unregistered are unclear (example `API version &#39;2019-01-01&#39; was not found for &#39;Microsoft.Foo&#39;`) - please ensure that all of the necessary Resource Providers you&#39;re using are registered - if in doubt **we strongly recommend letting the provider register these for you**.
 * 
 * &gt; **Note:** Adding or Removing a Preview Feature will re-register the Resource Provider.
 * 
 * ## Example Usage
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.azure.core.ResourceProviderRegistration;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new ResourceProviderRegistration(&#34;example&#34;);
 * 
 *     }
 * }
 * ```
 * ### Registering A Preview Feature)
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.azure.core.ResourceProviderRegistration;
 * import com.pulumi.azure.core.ResourceProviderRegistrationArgs;
 * import com.pulumi.azure.core.inputs.ResourceProviderRegistrationFeatureArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new ResourceProviderRegistration(&#34;example&#34;, ResourceProviderRegistrationArgs.builder()        
 *             .features(ResourceProviderRegistrationFeatureArgs.builder()
 *                 .name(&#34;AKS-DataPlaneAutoApprove&#34;)
 *                 .registered(true)
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * Resource Provider Registrations can be imported using the `resource id`, e.g.
 * 
 * ```sh
 *  $ pulumi import azure:core/resourceProviderRegistration:ResourceProviderRegistration example /subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.PolicyInsights
 * ```
 * 
 */
@ResourceType(type="azure:core/resourceProviderRegistration:ResourceProviderRegistration")
public class ResourceProviderRegistration extends com.pulumi.resources.CustomResource {
    /**
     * A list of `feature` blocks as defined below.
     * 
     */
    @Export(name="features", refs={List.class,ResourceProviderRegistrationFeature.class}, tree="[0,1]")
    private Output</* @Nullable */ List<ResourceProviderRegistrationFeature>> features;

    /**
     * @return A list of `feature` blocks as defined below.
     * 
     */
    public Output<Optional<List<ResourceProviderRegistrationFeature>>> features() {
        return Codegen.optional(this.features);
    }
    /**
     * The namespace of the Resource Provider which should be registered. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The namespace of the Resource Provider which should be registered. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public ResourceProviderRegistration(String name) {
        this(name, ResourceProviderRegistrationArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public ResourceProviderRegistration(String name, @Nullable ResourceProviderRegistrationArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public ResourceProviderRegistration(String name, @Nullable ResourceProviderRegistrationArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:core/resourceProviderRegistration:ResourceProviderRegistration", name, args == null ? ResourceProviderRegistrationArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private ResourceProviderRegistration(String name, Output<String> id, @Nullable ResourceProviderRegistrationState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:core/resourceProviderRegistration:ResourceProviderRegistration", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static ResourceProviderRegistration get(String name, Output<String> id, @Nullable ResourceProviderRegistrationState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new ResourceProviderRegistration(name, id, state, options);
    }
}
