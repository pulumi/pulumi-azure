// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.network;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class NetworkManagerStaticMemberArgs extends com.pulumi.resources.ResourceArgs {

    public static final NetworkManagerStaticMemberArgs Empty = new NetworkManagerStaticMemberArgs();

    /**
     * Specifies the name which should be used for this Network Manager Static Member. Changing this forces a new Network Manager Static Member to be created.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Specifies the name which should be used for this Network Manager Static Member. Changing this forces a new Network Manager Static Member to be created.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Specifies the ID of the Network Manager Group. Changing this forces a new Network Manager Static Member to be created.
     * 
     */
    @Import(name="networkGroupId", required=true)
    private Output<String> networkGroupId;

    /**
     * @return Specifies the ID of the Network Manager Group. Changing this forces a new Network Manager Static Member to be created.
     * 
     */
    public Output<String> networkGroupId() {
        return this.networkGroupId;
    }

    @Import(name="targetVirtualNetworkId", required=true)
    private Output<String> targetVirtualNetworkId;

    public Output<String> targetVirtualNetworkId() {
        return this.targetVirtualNetworkId;
    }

    private NetworkManagerStaticMemberArgs() {}

    private NetworkManagerStaticMemberArgs(NetworkManagerStaticMemberArgs $) {
        this.name = $.name;
        this.networkGroupId = $.networkGroupId;
        this.targetVirtualNetworkId = $.targetVirtualNetworkId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(NetworkManagerStaticMemberArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private NetworkManagerStaticMemberArgs $;

        public Builder() {
            $ = new NetworkManagerStaticMemberArgs();
        }

        public Builder(NetworkManagerStaticMemberArgs defaults) {
            $ = new NetworkManagerStaticMemberArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param name Specifies the name which should be used for this Network Manager Static Member. Changing this forces a new Network Manager Static Member to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Specifies the name which should be used for this Network Manager Static Member. Changing this forces a new Network Manager Static Member to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param networkGroupId Specifies the ID of the Network Manager Group. Changing this forces a new Network Manager Static Member to be created.
         * 
         * @return builder
         * 
         */
        public Builder networkGroupId(Output<String> networkGroupId) {
            $.networkGroupId = networkGroupId;
            return this;
        }

        /**
         * @param networkGroupId Specifies the ID of the Network Manager Group. Changing this forces a new Network Manager Static Member to be created.
         * 
         * @return builder
         * 
         */
        public Builder networkGroupId(String networkGroupId) {
            return networkGroupId(Output.of(networkGroupId));
        }

        public Builder targetVirtualNetworkId(Output<String> targetVirtualNetworkId) {
            $.targetVirtualNetworkId = targetVirtualNetworkId;
            return this;
        }

        public Builder targetVirtualNetworkId(String targetVirtualNetworkId) {
            return targetVirtualNetworkId(Output.of(targetVirtualNetworkId));
        }

        public NetworkManagerStaticMemberArgs build() {
            $.networkGroupId = Objects.requireNonNull($.networkGroupId, "expected parameter 'networkGroupId' to be non-null");
            $.targetVirtualNetworkId = Objects.requireNonNull($.targetVirtualNetworkId, "expected parameter 'targetVirtualNetworkId' to be non-null");
            return $;
        }
    }

}
