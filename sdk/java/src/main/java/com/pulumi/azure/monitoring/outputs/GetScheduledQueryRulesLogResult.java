// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.monitoring.outputs;

import com.pulumi.azure.monitoring.outputs.GetScheduledQueryRulesLogCriteria;
import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetScheduledQueryRulesLogResult {
    private List<String> authorizedResourceIds;
    /**
     * @return A `criteria` block as defined below.
     * 
     */
    private List<GetScheduledQueryRulesLogCriteria> criterias;
    /**
     * @return The resource URI over which log search query is to be run.
     * 
     */
    private String dataSourceId;
    /**
     * @return The description of the scheduled query rule.
     * 
     */
    private String description;
    /**
     * @return Whether this scheduled query rule is enabled.
     * 
     */
    private Boolean enabled;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private String location;
    /**
     * @return Name of the dimension.
     * 
     */
    private String name;
    private String resourceGroupName;
    private Map<String,String> tags;

    private GetScheduledQueryRulesLogResult() {}
    public List<String> authorizedResourceIds() {
        return this.authorizedResourceIds;
    }
    /**
     * @return A `criteria` block as defined below.
     * 
     */
    public List<GetScheduledQueryRulesLogCriteria> criterias() {
        return this.criterias;
    }
    /**
     * @return The resource URI over which log search query is to be run.
     * 
     */
    public String dataSourceId() {
        return this.dataSourceId;
    }
    /**
     * @return The description of the scheduled query rule.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return Whether this scheduled query rule is enabled.
     * 
     */
    public Boolean enabled() {
        return this.enabled;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public String location() {
        return this.location;
    }
    /**
     * @return Name of the dimension.
     * 
     */
    public String name() {
        return this.name;
    }
    public String resourceGroupName() {
        return this.resourceGroupName;
    }
    public Map<String,String> tags() {
        return this.tags;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetScheduledQueryRulesLogResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<String> authorizedResourceIds;
        private List<GetScheduledQueryRulesLogCriteria> criterias;
        private String dataSourceId;
        private String description;
        private Boolean enabled;
        private String id;
        private String location;
        private String name;
        private String resourceGroupName;
        private Map<String,String> tags;
        public Builder() {}
        public Builder(GetScheduledQueryRulesLogResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.authorizedResourceIds = defaults.authorizedResourceIds;
    	      this.criterias = defaults.criterias;
    	      this.dataSourceId = defaults.dataSourceId;
    	      this.description = defaults.description;
    	      this.enabled = defaults.enabled;
    	      this.id = defaults.id;
    	      this.location = defaults.location;
    	      this.name = defaults.name;
    	      this.resourceGroupName = defaults.resourceGroupName;
    	      this.tags = defaults.tags;
        }

        @CustomType.Setter
        public Builder authorizedResourceIds(List<String> authorizedResourceIds) {
            this.authorizedResourceIds = Objects.requireNonNull(authorizedResourceIds);
            return this;
        }
        public Builder authorizedResourceIds(String... authorizedResourceIds) {
            return authorizedResourceIds(List.of(authorizedResourceIds));
        }
        @CustomType.Setter
        public Builder criterias(List<GetScheduledQueryRulesLogCriteria> criterias) {
            this.criterias = Objects.requireNonNull(criterias);
            return this;
        }
        public Builder criterias(GetScheduledQueryRulesLogCriteria... criterias) {
            return criterias(List.of(criterias));
        }
        @CustomType.Setter
        public Builder dataSourceId(String dataSourceId) {
            this.dataSourceId = Objects.requireNonNull(dataSourceId);
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }
        @CustomType.Setter
        public Builder enabled(Boolean enabled) {
            this.enabled = Objects.requireNonNull(enabled);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder location(String location) {
            this.location = Objects.requireNonNull(location);
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder resourceGroupName(String resourceGroupName) {
            this.resourceGroupName = Objects.requireNonNull(resourceGroupName);
            return this;
        }
        @CustomType.Setter
        public Builder tags(Map<String,String> tags) {
            this.tags = Objects.requireNonNull(tags);
            return this;
        }
        public GetScheduledQueryRulesLogResult build() {
            final var o = new GetScheduledQueryRulesLogResult();
            o.authorizedResourceIds = authorizedResourceIds;
            o.criterias = criterias;
            o.dataSourceId = dataSourceId;
            o.description = description;
            o.enabled = enabled;
            o.id = id;
            o.location = location;
            o.name = name;
            o.resourceGroupName = resourceGroupName;
            o.tags = tags;
            return o;
        }
    }
}
