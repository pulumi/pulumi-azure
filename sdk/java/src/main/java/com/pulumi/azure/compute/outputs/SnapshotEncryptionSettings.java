// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.compute.outputs;

import com.pulumi.azure.compute.outputs.SnapshotEncryptionSettingsDiskEncryptionKey;
import com.pulumi.azure.compute.outputs.SnapshotEncryptionSettingsKeyEncryptionKey;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class SnapshotEncryptionSettings {
    /**
     * @return A `disk_encryption_key` block as defined below.
     * 
     */
    private SnapshotEncryptionSettingsDiskEncryptionKey diskEncryptionKey;
    /**
     * @return A `key_encryption_key` block as defined below.
     * 
     */
    private @Nullable SnapshotEncryptionSettingsKeyEncryptionKey keyEncryptionKey;

    private SnapshotEncryptionSettings() {}
    /**
     * @return A `disk_encryption_key` block as defined below.
     * 
     */
    public SnapshotEncryptionSettingsDiskEncryptionKey diskEncryptionKey() {
        return this.diskEncryptionKey;
    }
    /**
     * @return A `key_encryption_key` block as defined below.
     * 
     */
    public Optional<SnapshotEncryptionSettingsKeyEncryptionKey> keyEncryptionKey() {
        return Optional.ofNullable(this.keyEncryptionKey);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SnapshotEncryptionSettings defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private SnapshotEncryptionSettingsDiskEncryptionKey diskEncryptionKey;
        private @Nullable SnapshotEncryptionSettingsKeyEncryptionKey keyEncryptionKey;
        public Builder() {}
        public Builder(SnapshotEncryptionSettings defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.diskEncryptionKey = defaults.diskEncryptionKey;
    	      this.keyEncryptionKey = defaults.keyEncryptionKey;
        }

        @CustomType.Setter
        public Builder diskEncryptionKey(SnapshotEncryptionSettingsDiskEncryptionKey diskEncryptionKey) {
            if (diskEncryptionKey == null) {
              throw new MissingRequiredPropertyException("SnapshotEncryptionSettings", "diskEncryptionKey");
            }
            this.diskEncryptionKey = diskEncryptionKey;
            return this;
        }
        @CustomType.Setter
        public Builder keyEncryptionKey(@Nullable SnapshotEncryptionSettingsKeyEncryptionKey keyEncryptionKey) {

            this.keyEncryptionKey = keyEncryptionKey;
            return this;
        }
        public SnapshotEncryptionSettings build() {
            final var _resultValue = new SnapshotEncryptionSettings();
            _resultValue.diskEncryptionKey = diskEncryptionKey;
            _resultValue.keyEncryptionKey = keyEncryptionKey;
            return _resultValue;
        }
    }
}
