// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.storage.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.util.Objects;

@CustomType
public final class GetPolicyRuleActionBaseBlob {
    /**
     * @return Whether a blob should automatically be tiered from cool back to hot if it&#39;s accessed again after being tiered to cool.
     * 
     */
    private Boolean autoTierToHotFromCoolEnabled;
    /**
     * @return The age in days after creation to delete the blob snapshot.
     * 
     */
    private Integer deleteAfterDaysSinceCreationGreaterThan;
    /**
     * @return The age in days after last access time to delete the blob.
     * 
     */
    private Integer deleteAfterDaysSinceLastAccessTimeGreaterThan;
    /**
     * @return The age in days after last modification to delete the blob.
     * 
     */
    private Integer deleteAfterDaysSinceModificationGreaterThan;
    /**
     * @return The age in days after creation to archive storage.
     * 
     */
    private Integer tierToArchiveAfterDaysSinceCreationGreaterThan;
    /**
     * @return The age in days after last access time to tier blobs to archive storage.
     * 
     */
    private Integer tierToArchiveAfterDaysSinceLastAccessTimeGreaterThan;
    /**
     * @return The age in days after last tier change to the blobs to skip to be archived.
     * 
     */
    private Integer tierToArchiveAfterDaysSinceLastTierChangeGreaterThan;
    /**
     * @return The age in days after last modification to tier blobs to archive storage.
     * 
     */
    private Integer tierToArchiveAfterDaysSinceModificationGreaterThan;
    /**
     * @return Optional The age in days after creation to cold storage. Supports blob currently at Hot tier.
     * 
     */
    private Integer tierToColdAfterDaysSinceCreationGreaterThan;
    /**
     * @return The age in days after last access time to tier blobs to cold storage. Supports blob currently at Hot tier.
     * 
     */
    private Integer tierToColdAfterDaysSinceLastAccessTimeGreaterThan;
    /**
     * @return The age in days after last modification to tier blobs to cold storage. Supports blob currently at Hot tier.
     * 
     */
    private Integer tierToColdAfterDaysSinceModificationGreaterThan;
    /**
     * @return Optional The age in days after creation to cool storage. Supports blob currently at Hot tier.
     * 
     */
    private Integer tierToCoolAfterDaysSinceCreationGreaterThan;
    /**
     * @return The age in days after last access time to tier blobs to cool storage. Supports blob currently at Hot tier.
     * 
     */
    private Integer tierToCoolAfterDaysSinceLastAccessTimeGreaterThan;
    /**
     * @return The age in days after last modification to tier blobs to cool storage. Supports blob currently at Hot tier.
     * 
     */
    private Integer tierToCoolAfterDaysSinceModificationGreaterThan;

    private GetPolicyRuleActionBaseBlob() {}
    /**
     * @return Whether a blob should automatically be tiered from cool back to hot if it&#39;s accessed again after being tiered to cool.
     * 
     */
    public Boolean autoTierToHotFromCoolEnabled() {
        return this.autoTierToHotFromCoolEnabled;
    }
    /**
     * @return The age in days after creation to delete the blob snapshot.
     * 
     */
    public Integer deleteAfterDaysSinceCreationGreaterThan() {
        return this.deleteAfterDaysSinceCreationGreaterThan;
    }
    /**
     * @return The age in days after last access time to delete the blob.
     * 
     */
    public Integer deleteAfterDaysSinceLastAccessTimeGreaterThan() {
        return this.deleteAfterDaysSinceLastAccessTimeGreaterThan;
    }
    /**
     * @return The age in days after last modification to delete the blob.
     * 
     */
    public Integer deleteAfterDaysSinceModificationGreaterThan() {
        return this.deleteAfterDaysSinceModificationGreaterThan;
    }
    /**
     * @return The age in days after creation to archive storage.
     * 
     */
    public Integer tierToArchiveAfterDaysSinceCreationGreaterThan() {
        return this.tierToArchiveAfterDaysSinceCreationGreaterThan;
    }
    /**
     * @return The age in days after last access time to tier blobs to archive storage.
     * 
     */
    public Integer tierToArchiveAfterDaysSinceLastAccessTimeGreaterThan() {
        return this.tierToArchiveAfterDaysSinceLastAccessTimeGreaterThan;
    }
    /**
     * @return The age in days after last tier change to the blobs to skip to be archived.
     * 
     */
    public Integer tierToArchiveAfterDaysSinceLastTierChangeGreaterThan() {
        return this.tierToArchiveAfterDaysSinceLastTierChangeGreaterThan;
    }
    /**
     * @return The age in days after last modification to tier blobs to archive storage.
     * 
     */
    public Integer tierToArchiveAfterDaysSinceModificationGreaterThan() {
        return this.tierToArchiveAfterDaysSinceModificationGreaterThan;
    }
    /**
     * @return Optional The age in days after creation to cold storage. Supports blob currently at Hot tier.
     * 
     */
    public Integer tierToColdAfterDaysSinceCreationGreaterThan() {
        return this.tierToColdAfterDaysSinceCreationGreaterThan;
    }
    /**
     * @return The age in days after last access time to tier blobs to cold storage. Supports blob currently at Hot tier.
     * 
     */
    public Integer tierToColdAfterDaysSinceLastAccessTimeGreaterThan() {
        return this.tierToColdAfterDaysSinceLastAccessTimeGreaterThan;
    }
    /**
     * @return The age in days after last modification to tier blobs to cold storage. Supports blob currently at Hot tier.
     * 
     */
    public Integer tierToColdAfterDaysSinceModificationGreaterThan() {
        return this.tierToColdAfterDaysSinceModificationGreaterThan;
    }
    /**
     * @return Optional The age in days after creation to cool storage. Supports blob currently at Hot tier.
     * 
     */
    public Integer tierToCoolAfterDaysSinceCreationGreaterThan() {
        return this.tierToCoolAfterDaysSinceCreationGreaterThan;
    }
    /**
     * @return The age in days after last access time to tier blobs to cool storage. Supports blob currently at Hot tier.
     * 
     */
    public Integer tierToCoolAfterDaysSinceLastAccessTimeGreaterThan() {
        return this.tierToCoolAfterDaysSinceLastAccessTimeGreaterThan;
    }
    /**
     * @return The age in days after last modification to tier blobs to cool storage. Supports blob currently at Hot tier.
     * 
     */
    public Integer tierToCoolAfterDaysSinceModificationGreaterThan() {
        return this.tierToCoolAfterDaysSinceModificationGreaterThan;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetPolicyRuleActionBaseBlob defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Boolean autoTierToHotFromCoolEnabled;
        private Integer deleteAfterDaysSinceCreationGreaterThan;
        private Integer deleteAfterDaysSinceLastAccessTimeGreaterThan;
        private Integer deleteAfterDaysSinceModificationGreaterThan;
        private Integer tierToArchiveAfterDaysSinceCreationGreaterThan;
        private Integer tierToArchiveAfterDaysSinceLastAccessTimeGreaterThan;
        private Integer tierToArchiveAfterDaysSinceLastTierChangeGreaterThan;
        private Integer tierToArchiveAfterDaysSinceModificationGreaterThan;
        private Integer tierToColdAfterDaysSinceCreationGreaterThan;
        private Integer tierToColdAfterDaysSinceLastAccessTimeGreaterThan;
        private Integer tierToColdAfterDaysSinceModificationGreaterThan;
        private Integer tierToCoolAfterDaysSinceCreationGreaterThan;
        private Integer tierToCoolAfterDaysSinceLastAccessTimeGreaterThan;
        private Integer tierToCoolAfterDaysSinceModificationGreaterThan;
        public Builder() {}
        public Builder(GetPolicyRuleActionBaseBlob defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.autoTierToHotFromCoolEnabled = defaults.autoTierToHotFromCoolEnabled;
    	      this.deleteAfterDaysSinceCreationGreaterThan = defaults.deleteAfterDaysSinceCreationGreaterThan;
    	      this.deleteAfterDaysSinceLastAccessTimeGreaterThan = defaults.deleteAfterDaysSinceLastAccessTimeGreaterThan;
    	      this.deleteAfterDaysSinceModificationGreaterThan = defaults.deleteAfterDaysSinceModificationGreaterThan;
    	      this.tierToArchiveAfterDaysSinceCreationGreaterThan = defaults.tierToArchiveAfterDaysSinceCreationGreaterThan;
    	      this.tierToArchiveAfterDaysSinceLastAccessTimeGreaterThan = defaults.tierToArchiveAfterDaysSinceLastAccessTimeGreaterThan;
    	      this.tierToArchiveAfterDaysSinceLastTierChangeGreaterThan = defaults.tierToArchiveAfterDaysSinceLastTierChangeGreaterThan;
    	      this.tierToArchiveAfterDaysSinceModificationGreaterThan = defaults.tierToArchiveAfterDaysSinceModificationGreaterThan;
    	      this.tierToColdAfterDaysSinceCreationGreaterThan = defaults.tierToColdAfterDaysSinceCreationGreaterThan;
    	      this.tierToColdAfterDaysSinceLastAccessTimeGreaterThan = defaults.tierToColdAfterDaysSinceLastAccessTimeGreaterThan;
    	      this.tierToColdAfterDaysSinceModificationGreaterThan = defaults.tierToColdAfterDaysSinceModificationGreaterThan;
    	      this.tierToCoolAfterDaysSinceCreationGreaterThan = defaults.tierToCoolAfterDaysSinceCreationGreaterThan;
    	      this.tierToCoolAfterDaysSinceLastAccessTimeGreaterThan = defaults.tierToCoolAfterDaysSinceLastAccessTimeGreaterThan;
    	      this.tierToCoolAfterDaysSinceModificationGreaterThan = defaults.tierToCoolAfterDaysSinceModificationGreaterThan;
        }

        @CustomType.Setter
        public Builder autoTierToHotFromCoolEnabled(Boolean autoTierToHotFromCoolEnabled) {
            if (autoTierToHotFromCoolEnabled == null) {
              throw new MissingRequiredPropertyException("GetPolicyRuleActionBaseBlob", "autoTierToHotFromCoolEnabled");
            }
            this.autoTierToHotFromCoolEnabled = autoTierToHotFromCoolEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder deleteAfterDaysSinceCreationGreaterThan(Integer deleteAfterDaysSinceCreationGreaterThan) {
            if (deleteAfterDaysSinceCreationGreaterThan == null) {
              throw new MissingRequiredPropertyException("GetPolicyRuleActionBaseBlob", "deleteAfterDaysSinceCreationGreaterThan");
            }
            this.deleteAfterDaysSinceCreationGreaterThan = deleteAfterDaysSinceCreationGreaterThan;
            return this;
        }
        @CustomType.Setter
        public Builder deleteAfterDaysSinceLastAccessTimeGreaterThan(Integer deleteAfterDaysSinceLastAccessTimeGreaterThan) {
            if (deleteAfterDaysSinceLastAccessTimeGreaterThan == null) {
              throw new MissingRequiredPropertyException("GetPolicyRuleActionBaseBlob", "deleteAfterDaysSinceLastAccessTimeGreaterThan");
            }
            this.deleteAfterDaysSinceLastAccessTimeGreaterThan = deleteAfterDaysSinceLastAccessTimeGreaterThan;
            return this;
        }
        @CustomType.Setter
        public Builder deleteAfterDaysSinceModificationGreaterThan(Integer deleteAfterDaysSinceModificationGreaterThan) {
            if (deleteAfterDaysSinceModificationGreaterThan == null) {
              throw new MissingRequiredPropertyException("GetPolicyRuleActionBaseBlob", "deleteAfterDaysSinceModificationGreaterThan");
            }
            this.deleteAfterDaysSinceModificationGreaterThan = deleteAfterDaysSinceModificationGreaterThan;
            return this;
        }
        @CustomType.Setter
        public Builder tierToArchiveAfterDaysSinceCreationGreaterThan(Integer tierToArchiveAfterDaysSinceCreationGreaterThan) {
            if (tierToArchiveAfterDaysSinceCreationGreaterThan == null) {
              throw new MissingRequiredPropertyException("GetPolicyRuleActionBaseBlob", "tierToArchiveAfterDaysSinceCreationGreaterThan");
            }
            this.tierToArchiveAfterDaysSinceCreationGreaterThan = tierToArchiveAfterDaysSinceCreationGreaterThan;
            return this;
        }
        @CustomType.Setter
        public Builder tierToArchiveAfterDaysSinceLastAccessTimeGreaterThan(Integer tierToArchiveAfterDaysSinceLastAccessTimeGreaterThan) {
            if (tierToArchiveAfterDaysSinceLastAccessTimeGreaterThan == null) {
              throw new MissingRequiredPropertyException("GetPolicyRuleActionBaseBlob", "tierToArchiveAfterDaysSinceLastAccessTimeGreaterThan");
            }
            this.tierToArchiveAfterDaysSinceLastAccessTimeGreaterThan = tierToArchiveAfterDaysSinceLastAccessTimeGreaterThan;
            return this;
        }
        @CustomType.Setter
        public Builder tierToArchiveAfterDaysSinceLastTierChangeGreaterThan(Integer tierToArchiveAfterDaysSinceLastTierChangeGreaterThan) {
            if (tierToArchiveAfterDaysSinceLastTierChangeGreaterThan == null) {
              throw new MissingRequiredPropertyException("GetPolicyRuleActionBaseBlob", "tierToArchiveAfterDaysSinceLastTierChangeGreaterThan");
            }
            this.tierToArchiveAfterDaysSinceLastTierChangeGreaterThan = tierToArchiveAfterDaysSinceLastTierChangeGreaterThan;
            return this;
        }
        @CustomType.Setter
        public Builder tierToArchiveAfterDaysSinceModificationGreaterThan(Integer tierToArchiveAfterDaysSinceModificationGreaterThan) {
            if (tierToArchiveAfterDaysSinceModificationGreaterThan == null) {
              throw new MissingRequiredPropertyException("GetPolicyRuleActionBaseBlob", "tierToArchiveAfterDaysSinceModificationGreaterThan");
            }
            this.tierToArchiveAfterDaysSinceModificationGreaterThan = tierToArchiveAfterDaysSinceModificationGreaterThan;
            return this;
        }
        @CustomType.Setter
        public Builder tierToColdAfterDaysSinceCreationGreaterThan(Integer tierToColdAfterDaysSinceCreationGreaterThan) {
            if (tierToColdAfterDaysSinceCreationGreaterThan == null) {
              throw new MissingRequiredPropertyException("GetPolicyRuleActionBaseBlob", "tierToColdAfterDaysSinceCreationGreaterThan");
            }
            this.tierToColdAfterDaysSinceCreationGreaterThan = tierToColdAfterDaysSinceCreationGreaterThan;
            return this;
        }
        @CustomType.Setter
        public Builder tierToColdAfterDaysSinceLastAccessTimeGreaterThan(Integer tierToColdAfterDaysSinceLastAccessTimeGreaterThan) {
            if (tierToColdAfterDaysSinceLastAccessTimeGreaterThan == null) {
              throw new MissingRequiredPropertyException("GetPolicyRuleActionBaseBlob", "tierToColdAfterDaysSinceLastAccessTimeGreaterThan");
            }
            this.tierToColdAfterDaysSinceLastAccessTimeGreaterThan = tierToColdAfterDaysSinceLastAccessTimeGreaterThan;
            return this;
        }
        @CustomType.Setter
        public Builder tierToColdAfterDaysSinceModificationGreaterThan(Integer tierToColdAfterDaysSinceModificationGreaterThan) {
            if (tierToColdAfterDaysSinceModificationGreaterThan == null) {
              throw new MissingRequiredPropertyException("GetPolicyRuleActionBaseBlob", "tierToColdAfterDaysSinceModificationGreaterThan");
            }
            this.tierToColdAfterDaysSinceModificationGreaterThan = tierToColdAfterDaysSinceModificationGreaterThan;
            return this;
        }
        @CustomType.Setter
        public Builder tierToCoolAfterDaysSinceCreationGreaterThan(Integer tierToCoolAfterDaysSinceCreationGreaterThan) {
            if (tierToCoolAfterDaysSinceCreationGreaterThan == null) {
              throw new MissingRequiredPropertyException("GetPolicyRuleActionBaseBlob", "tierToCoolAfterDaysSinceCreationGreaterThan");
            }
            this.tierToCoolAfterDaysSinceCreationGreaterThan = tierToCoolAfterDaysSinceCreationGreaterThan;
            return this;
        }
        @CustomType.Setter
        public Builder tierToCoolAfterDaysSinceLastAccessTimeGreaterThan(Integer tierToCoolAfterDaysSinceLastAccessTimeGreaterThan) {
            if (tierToCoolAfterDaysSinceLastAccessTimeGreaterThan == null) {
              throw new MissingRequiredPropertyException("GetPolicyRuleActionBaseBlob", "tierToCoolAfterDaysSinceLastAccessTimeGreaterThan");
            }
            this.tierToCoolAfterDaysSinceLastAccessTimeGreaterThan = tierToCoolAfterDaysSinceLastAccessTimeGreaterThan;
            return this;
        }
        @CustomType.Setter
        public Builder tierToCoolAfterDaysSinceModificationGreaterThan(Integer tierToCoolAfterDaysSinceModificationGreaterThan) {
            if (tierToCoolAfterDaysSinceModificationGreaterThan == null) {
              throw new MissingRequiredPropertyException("GetPolicyRuleActionBaseBlob", "tierToCoolAfterDaysSinceModificationGreaterThan");
            }
            this.tierToCoolAfterDaysSinceModificationGreaterThan = tierToCoolAfterDaysSinceModificationGreaterThan;
            return this;
        }
        public GetPolicyRuleActionBaseBlob build() {
            final var _resultValue = new GetPolicyRuleActionBaseBlob();
            _resultValue.autoTierToHotFromCoolEnabled = autoTierToHotFromCoolEnabled;
            _resultValue.deleteAfterDaysSinceCreationGreaterThan = deleteAfterDaysSinceCreationGreaterThan;
            _resultValue.deleteAfterDaysSinceLastAccessTimeGreaterThan = deleteAfterDaysSinceLastAccessTimeGreaterThan;
            _resultValue.deleteAfterDaysSinceModificationGreaterThan = deleteAfterDaysSinceModificationGreaterThan;
            _resultValue.tierToArchiveAfterDaysSinceCreationGreaterThan = tierToArchiveAfterDaysSinceCreationGreaterThan;
            _resultValue.tierToArchiveAfterDaysSinceLastAccessTimeGreaterThan = tierToArchiveAfterDaysSinceLastAccessTimeGreaterThan;
            _resultValue.tierToArchiveAfterDaysSinceLastTierChangeGreaterThan = tierToArchiveAfterDaysSinceLastTierChangeGreaterThan;
            _resultValue.tierToArchiveAfterDaysSinceModificationGreaterThan = tierToArchiveAfterDaysSinceModificationGreaterThan;
            _resultValue.tierToColdAfterDaysSinceCreationGreaterThan = tierToColdAfterDaysSinceCreationGreaterThan;
            _resultValue.tierToColdAfterDaysSinceLastAccessTimeGreaterThan = tierToColdAfterDaysSinceLastAccessTimeGreaterThan;
            _resultValue.tierToColdAfterDaysSinceModificationGreaterThan = tierToColdAfterDaysSinceModificationGreaterThan;
            _resultValue.tierToCoolAfterDaysSinceCreationGreaterThan = tierToCoolAfterDaysSinceCreationGreaterThan;
            _resultValue.tierToCoolAfterDaysSinceLastAccessTimeGreaterThan = tierToCoolAfterDaysSinceLastAccessTimeGreaterThan;
            _resultValue.tierToCoolAfterDaysSinceModificationGreaterThan = tierToCoolAfterDaysSinceModificationGreaterThan;
            return _resultValue;
        }
    }
}
