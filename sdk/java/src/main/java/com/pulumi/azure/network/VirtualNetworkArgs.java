// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.network;

import com.pulumi.azure.network.inputs.VirtualNetworkDdosProtectionPlanArgs;
import com.pulumi.azure.network.inputs.VirtualNetworkEncryptionArgs;
import com.pulumi.azure.network.inputs.VirtualNetworkSubnetArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class VirtualNetworkArgs extends com.pulumi.resources.ResourceArgs {

    public static final VirtualNetworkArgs Empty = new VirtualNetworkArgs();

    /**
     * The address space that is used the virtual network. You can supply more than one address space.
     * 
     */
    @Import(name="addressSpaces", required=true)
    private Output<List<String>> addressSpaces;

    /**
     * @return The address space that is used the virtual network. You can supply more than one address space.
     * 
     */
    public Output<List<String>> addressSpaces() {
        return this.addressSpaces;
    }

    /**
     * The BGP community attribute in format `&lt;as-number&gt;:&lt;community-value&gt;`.
     * 
     * &gt; **NOTE** The `as-number` segment is the Microsoft ASN, which is always `12076` for now.
     * 
     */
    @Import(name="bgpCommunity")
    private @Nullable Output<String> bgpCommunity;

    /**
     * @return The BGP community attribute in format `&lt;as-number&gt;:&lt;community-value&gt;`.
     * 
     * &gt; **NOTE** The `as-number` segment is the Microsoft ASN, which is always `12076` for now.
     * 
     */
    public Optional<Output<String>> bgpCommunity() {
        return Optional.ofNullable(this.bgpCommunity);
    }

    /**
     * A `ddos_protection_plan` block as documented below.
     * 
     */
    @Import(name="ddosProtectionPlan")
    private @Nullable Output<VirtualNetworkDdosProtectionPlanArgs> ddosProtectionPlan;

    /**
     * @return A `ddos_protection_plan` block as documented below.
     * 
     */
    public Optional<Output<VirtualNetworkDdosProtectionPlanArgs>> ddosProtectionPlan() {
        return Optional.ofNullable(this.ddosProtectionPlan);
    }

    /**
     * List of IP addresses of DNS servers
     * 
     * &gt; **NOTE** Since `dns_servers` can be configured both inline and via the separate `azure.network.VirtualNetworkDnsServers` resource, we have to explicitly set it to empty slice (`[]`) to remove it.
     * 
     */
    @Import(name="dnsServers")
    private @Nullable Output<List<String>> dnsServers;

    /**
     * @return List of IP addresses of DNS servers
     * 
     * &gt; **NOTE** Since `dns_servers` can be configured both inline and via the separate `azure.network.VirtualNetworkDnsServers` resource, we have to explicitly set it to empty slice (`[]`) to remove it.
     * 
     */
    public Optional<Output<List<String>>> dnsServers() {
        return Optional.ofNullable(this.dnsServers);
    }

    /**
     * Specifies the Edge Zone within the Azure Region where this Virtual Network should exist. Changing this forces a new Virtual Network to be created.
     * 
     */
    @Import(name="edgeZone")
    private @Nullable Output<String> edgeZone;

    /**
     * @return Specifies the Edge Zone within the Azure Region where this Virtual Network should exist. Changing this forces a new Virtual Network to be created.
     * 
     */
    public Optional<Output<String>> edgeZone() {
        return Optional.ofNullable(this.edgeZone);
    }

    /**
     * A `encryption` block as defined below.
     * 
     */
    @Import(name="encryption")
    private @Nullable Output<VirtualNetworkEncryptionArgs> encryption;

    /**
     * @return A `encryption` block as defined below.
     * 
     */
    public Optional<Output<VirtualNetworkEncryptionArgs>> encryption() {
        return Optional.ofNullable(this.encryption);
    }

    /**
     * The flow timeout in minutes for the Virtual Network, which is used to enable connection tracking for intra-VM flows. Possible values are between `4` and `30` minutes.
     * 
     */
    @Import(name="flowTimeoutInMinutes")
    private @Nullable Output<Integer> flowTimeoutInMinutes;

    /**
     * @return The flow timeout in minutes for the Virtual Network, which is used to enable connection tracking for intra-VM flows. Possible values are between `4` and `30` minutes.
     * 
     */
    public Optional<Output<Integer>> flowTimeoutInMinutes() {
        return Optional.ofNullable(this.flowTimeoutInMinutes);
    }

    /**
     * The location/region where the virtual network is created. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="location")
    private @Nullable Output<String> location;

    /**
     * @return The location/region where the virtual network is created. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * The name of the virtual network. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the virtual network. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The name of the resource group in which to create the virtual network. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    /**
     * @return The name of the resource group in which to create the virtual network. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * Can be specified multiple times to define multiple subnets. Each `subnet` block supports fields documented below.
     * 
     * &gt; **NOTE** Since `subnet` can be configured both inline and via the separate `azure.network.Subnet` resource, we have to explicitly set it to empty slice (`[]`) to remove it.
     * 
     */
    @Import(name="subnets")
    private @Nullable Output<List<VirtualNetworkSubnetArgs>> subnets;

    /**
     * @return Can be specified multiple times to define multiple subnets. Each `subnet` block supports fields documented below.
     * 
     * &gt; **NOTE** Since `subnet` can be configured both inline and via the separate `azure.network.Subnet` resource, we have to explicitly set it to empty slice (`[]`) to remove it.
     * 
     */
    public Optional<Output<List<VirtualNetworkSubnetArgs>>> subnets() {
        return Optional.ofNullable(this.subnets);
    }

    /**
     * A mapping of tags to assign to the resource.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return A mapping of tags to assign to the resource.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private VirtualNetworkArgs() {}

    private VirtualNetworkArgs(VirtualNetworkArgs $) {
        this.addressSpaces = $.addressSpaces;
        this.bgpCommunity = $.bgpCommunity;
        this.ddosProtectionPlan = $.ddosProtectionPlan;
        this.dnsServers = $.dnsServers;
        this.edgeZone = $.edgeZone;
        this.encryption = $.encryption;
        this.flowTimeoutInMinutes = $.flowTimeoutInMinutes;
        this.location = $.location;
        this.name = $.name;
        this.resourceGroupName = $.resourceGroupName;
        this.subnets = $.subnets;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VirtualNetworkArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VirtualNetworkArgs $;

        public Builder() {
            $ = new VirtualNetworkArgs();
        }

        public Builder(VirtualNetworkArgs defaults) {
            $ = new VirtualNetworkArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param addressSpaces The address space that is used the virtual network. You can supply more than one address space.
         * 
         * @return builder
         * 
         */
        public Builder addressSpaces(Output<List<String>> addressSpaces) {
            $.addressSpaces = addressSpaces;
            return this;
        }

        /**
         * @param addressSpaces The address space that is used the virtual network. You can supply more than one address space.
         * 
         * @return builder
         * 
         */
        public Builder addressSpaces(List<String> addressSpaces) {
            return addressSpaces(Output.of(addressSpaces));
        }

        /**
         * @param addressSpaces The address space that is used the virtual network. You can supply more than one address space.
         * 
         * @return builder
         * 
         */
        public Builder addressSpaces(String... addressSpaces) {
            return addressSpaces(List.of(addressSpaces));
        }

        /**
         * @param bgpCommunity The BGP community attribute in format `&lt;as-number&gt;:&lt;community-value&gt;`.
         * 
         * &gt; **NOTE** The `as-number` segment is the Microsoft ASN, which is always `12076` for now.
         * 
         * @return builder
         * 
         */
        public Builder bgpCommunity(@Nullable Output<String> bgpCommunity) {
            $.bgpCommunity = bgpCommunity;
            return this;
        }

        /**
         * @param bgpCommunity The BGP community attribute in format `&lt;as-number&gt;:&lt;community-value&gt;`.
         * 
         * &gt; **NOTE** The `as-number` segment is the Microsoft ASN, which is always `12076` for now.
         * 
         * @return builder
         * 
         */
        public Builder bgpCommunity(String bgpCommunity) {
            return bgpCommunity(Output.of(bgpCommunity));
        }

        /**
         * @param ddosProtectionPlan A `ddos_protection_plan` block as documented below.
         * 
         * @return builder
         * 
         */
        public Builder ddosProtectionPlan(@Nullable Output<VirtualNetworkDdosProtectionPlanArgs> ddosProtectionPlan) {
            $.ddosProtectionPlan = ddosProtectionPlan;
            return this;
        }

        /**
         * @param ddosProtectionPlan A `ddos_protection_plan` block as documented below.
         * 
         * @return builder
         * 
         */
        public Builder ddosProtectionPlan(VirtualNetworkDdosProtectionPlanArgs ddosProtectionPlan) {
            return ddosProtectionPlan(Output.of(ddosProtectionPlan));
        }

        /**
         * @param dnsServers List of IP addresses of DNS servers
         * 
         * &gt; **NOTE** Since `dns_servers` can be configured both inline and via the separate `azure.network.VirtualNetworkDnsServers` resource, we have to explicitly set it to empty slice (`[]`) to remove it.
         * 
         * @return builder
         * 
         */
        public Builder dnsServers(@Nullable Output<List<String>> dnsServers) {
            $.dnsServers = dnsServers;
            return this;
        }

        /**
         * @param dnsServers List of IP addresses of DNS servers
         * 
         * &gt; **NOTE** Since `dns_servers` can be configured both inline and via the separate `azure.network.VirtualNetworkDnsServers` resource, we have to explicitly set it to empty slice (`[]`) to remove it.
         * 
         * @return builder
         * 
         */
        public Builder dnsServers(List<String> dnsServers) {
            return dnsServers(Output.of(dnsServers));
        }

        /**
         * @param dnsServers List of IP addresses of DNS servers
         * 
         * &gt; **NOTE** Since `dns_servers` can be configured both inline and via the separate `azure.network.VirtualNetworkDnsServers` resource, we have to explicitly set it to empty slice (`[]`) to remove it.
         * 
         * @return builder
         * 
         */
        public Builder dnsServers(String... dnsServers) {
            return dnsServers(List.of(dnsServers));
        }

        /**
         * @param edgeZone Specifies the Edge Zone within the Azure Region where this Virtual Network should exist. Changing this forces a new Virtual Network to be created.
         * 
         * @return builder
         * 
         */
        public Builder edgeZone(@Nullable Output<String> edgeZone) {
            $.edgeZone = edgeZone;
            return this;
        }

        /**
         * @param edgeZone Specifies the Edge Zone within the Azure Region where this Virtual Network should exist. Changing this forces a new Virtual Network to be created.
         * 
         * @return builder
         * 
         */
        public Builder edgeZone(String edgeZone) {
            return edgeZone(Output.of(edgeZone));
        }

        /**
         * @param encryption A `encryption` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder encryption(@Nullable Output<VirtualNetworkEncryptionArgs> encryption) {
            $.encryption = encryption;
            return this;
        }

        /**
         * @param encryption A `encryption` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder encryption(VirtualNetworkEncryptionArgs encryption) {
            return encryption(Output.of(encryption));
        }

        /**
         * @param flowTimeoutInMinutes The flow timeout in minutes for the Virtual Network, which is used to enable connection tracking for intra-VM flows. Possible values are between `4` and `30` minutes.
         * 
         * @return builder
         * 
         */
        public Builder flowTimeoutInMinutes(@Nullable Output<Integer> flowTimeoutInMinutes) {
            $.flowTimeoutInMinutes = flowTimeoutInMinutes;
            return this;
        }

        /**
         * @param flowTimeoutInMinutes The flow timeout in minutes for the Virtual Network, which is used to enable connection tracking for intra-VM flows. Possible values are between `4` and `30` minutes.
         * 
         * @return builder
         * 
         */
        public Builder flowTimeoutInMinutes(Integer flowTimeoutInMinutes) {
            return flowTimeoutInMinutes(Output.of(flowTimeoutInMinutes));
        }

        /**
         * @param location The location/region where the virtual network is created. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location The location/region where the virtual network is created. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param name The name of the virtual network. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the virtual network. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param resourceGroupName The name of the resource group in which to create the virtual network. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName The name of the resource group in which to create the virtual network. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        /**
         * @param subnets Can be specified multiple times to define multiple subnets. Each `subnet` block supports fields documented below.
         * 
         * &gt; **NOTE** Since `subnet` can be configured both inline and via the separate `azure.network.Subnet` resource, we have to explicitly set it to empty slice (`[]`) to remove it.
         * 
         * @return builder
         * 
         */
        public Builder subnets(@Nullable Output<List<VirtualNetworkSubnetArgs>> subnets) {
            $.subnets = subnets;
            return this;
        }

        /**
         * @param subnets Can be specified multiple times to define multiple subnets. Each `subnet` block supports fields documented below.
         * 
         * &gt; **NOTE** Since `subnet` can be configured both inline and via the separate `azure.network.Subnet` resource, we have to explicitly set it to empty slice (`[]`) to remove it.
         * 
         * @return builder
         * 
         */
        public Builder subnets(List<VirtualNetworkSubnetArgs> subnets) {
            return subnets(Output.of(subnets));
        }

        /**
         * @param subnets Can be specified multiple times to define multiple subnets. Each `subnet` block supports fields documented below.
         * 
         * &gt; **NOTE** Since `subnet` can be configured both inline and via the separate `azure.network.Subnet` resource, we have to explicitly set it to empty slice (`[]`) to remove it.
         * 
         * @return builder
         * 
         */
        public Builder subnets(VirtualNetworkSubnetArgs... subnets) {
            return subnets(List.of(subnets));
        }

        /**
         * @param tags A mapping of tags to assign to the resource.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags A mapping of tags to assign to the resource.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public VirtualNetworkArgs build() {
            if ($.addressSpaces == null) {
                throw new MissingRequiredPropertyException("VirtualNetworkArgs", "addressSpaces");
            }
            if ($.resourceGroupName == null) {
                throw new MissingRequiredPropertyException("VirtualNetworkArgs", "resourceGroupName");
            }
            return $;
        }
    }

}
