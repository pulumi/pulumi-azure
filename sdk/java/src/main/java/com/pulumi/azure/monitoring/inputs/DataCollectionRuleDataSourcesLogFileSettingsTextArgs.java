// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.monitoring.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class DataCollectionRuleDataSourcesLogFileSettingsTextArgs extends com.pulumi.resources.ResourceArgs {

    public static final DataCollectionRuleDataSourcesLogFileSettingsTextArgs Empty = new DataCollectionRuleDataSourcesLogFileSettingsTextArgs();

    /**
     * The timestamp format of the text log files. Possible values are `ISO 8601`, `YYYY-MM-DD HH:MM:SS`, `M/D/YYYY HH:MM:SS AM/PM`, `Mon DD, YYYY HH:MM:SS`, `yyMMdd HH:mm:ss`, `ddMMyy HH:mm:ss`, `MMM d hh:mm:ss`, `dd/MMM/yyyy:HH:mm:ss zzz`,and `yyyy-MM-ddTHH:mm:ssK`.
     * 
     */
    @Import(name="recordStartTimestampFormat", required=true)
    private Output<String> recordStartTimestampFormat;

    /**
     * @return The timestamp format of the text log files. Possible values are `ISO 8601`, `YYYY-MM-DD HH:MM:SS`, `M/D/YYYY HH:MM:SS AM/PM`, `Mon DD, YYYY HH:MM:SS`, `yyMMdd HH:mm:ss`, `ddMMyy HH:mm:ss`, `MMM d hh:mm:ss`, `dd/MMM/yyyy:HH:mm:ss zzz`,and `yyyy-MM-ddTHH:mm:ssK`.
     * 
     */
    public Output<String> recordStartTimestampFormat() {
        return this.recordStartTimestampFormat;
    }

    private DataCollectionRuleDataSourcesLogFileSettingsTextArgs() {}

    private DataCollectionRuleDataSourcesLogFileSettingsTextArgs(DataCollectionRuleDataSourcesLogFileSettingsTextArgs $) {
        this.recordStartTimestampFormat = $.recordStartTimestampFormat;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DataCollectionRuleDataSourcesLogFileSettingsTextArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DataCollectionRuleDataSourcesLogFileSettingsTextArgs $;

        public Builder() {
            $ = new DataCollectionRuleDataSourcesLogFileSettingsTextArgs();
        }

        public Builder(DataCollectionRuleDataSourcesLogFileSettingsTextArgs defaults) {
            $ = new DataCollectionRuleDataSourcesLogFileSettingsTextArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param recordStartTimestampFormat The timestamp format of the text log files. Possible values are `ISO 8601`, `YYYY-MM-DD HH:MM:SS`, `M/D/YYYY HH:MM:SS AM/PM`, `Mon DD, YYYY HH:MM:SS`, `yyMMdd HH:mm:ss`, `ddMMyy HH:mm:ss`, `MMM d hh:mm:ss`, `dd/MMM/yyyy:HH:mm:ss zzz`,and `yyyy-MM-ddTHH:mm:ssK`.
         * 
         * @return builder
         * 
         */
        public Builder recordStartTimestampFormat(Output<String> recordStartTimestampFormat) {
            $.recordStartTimestampFormat = recordStartTimestampFormat;
            return this;
        }

        /**
         * @param recordStartTimestampFormat The timestamp format of the text log files. Possible values are `ISO 8601`, `YYYY-MM-DD HH:MM:SS`, `M/D/YYYY HH:MM:SS AM/PM`, `Mon DD, YYYY HH:MM:SS`, `yyMMdd HH:mm:ss`, `ddMMyy HH:mm:ss`, `MMM d hh:mm:ss`, `dd/MMM/yyyy:HH:mm:ss zzz`,and `yyyy-MM-ddTHH:mm:ssK`.
         * 
         * @return builder
         * 
         */
        public Builder recordStartTimestampFormat(String recordStartTimestampFormat) {
            return recordStartTimestampFormat(Output.of(recordStartTimestampFormat));
        }

        public DataCollectionRuleDataSourcesLogFileSettingsTextArgs build() {
            if ($.recordStartTimestampFormat == null) {
                throw new MissingRequiredPropertyException("DataCollectionRuleDataSourcesLogFileSettingsTextArgs", "recordStartTimestampFormat");
            }
            return $;
        }
    }

}
