// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.servicebus.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class SubscriptionClientScopedSubscription {
    /**
     * @return Specifies the Client ID of the application that created the client-scoped subscription. Changing this forces a new resource to be created.
     * 
     * &gt; **NOTE:** Client ID can be null or empty, but it must match the client ID set on the JMS client application. From the Azure Service Bus perspective, a null client ID and an empty client id have the same behavior. If the client ID is set to null or empty, it is only accessible to client applications whose client ID is also set to null or empty.
     * 
     */
    private @Nullable String clientId;
    /**
     * @return Whether the client scoped subscription is durable. This property can only be controlled from the application side.
     * 
     */
    private @Nullable Boolean isClientScopedSubscriptionDurable;
    /**
     * @return Whether the client scoped subscription is shareable. Defaults to `true` Changing this forces a new resource to be created.
     * 
     */
    private @Nullable Boolean isClientScopedSubscriptionShareable;

    private SubscriptionClientScopedSubscription() {}
    /**
     * @return Specifies the Client ID of the application that created the client-scoped subscription. Changing this forces a new resource to be created.
     * 
     * &gt; **NOTE:** Client ID can be null or empty, but it must match the client ID set on the JMS client application. From the Azure Service Bus perspective, a null client ID and an empty client id have the same behavior. If the client ID is set to null or empty, it is only accessible to client applications whose client ID is also set to null or empty.
     * 
     */
    public Optional<String> clientId() {
        return Optional.ofNullable(this.clientId);
    }
    /**
     * @return Whether the client scoped subscription is durable. This property can only be controlled from the application side.
     * 
     */
    public Optional<Boolean> isClientScopedSubscriptionDurable() {
        return Optional.ofNullable(this.isClientScopedSubscriptionDurable);
    }
    /**
     * @return Whether the client scoped subscription is shareable. Defaults to `true` Changing this forces a new resource to be created.
     * 
     */
    public Optional<Boolean> isClientScopedSubscriptionShareable() {
        return Optional.ofNullable(this.isClientScopedSubscriptionShareable);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SubscriptionClientScopedSubscription defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String clientId;
        private @Nullable Boolean isClientScopedSubscriptionDurable;
        private @Nullable Boolean isClientScopedSubscriptionShareable;
        public Builder() {}
        public Builder(SubscriptionClientScopedSubscription defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.clientId = defaults.clientId;
    	      this.isClientScopedSubscriptionDurable = defaults.isClientScopedSubscriptionDurable;
    	      this.isClientScopedSubscriptionShareable = defaults.isClientScopedSubscriptionShareable;
        }

        @CustomType.Setter
        public Builder clientId(@Nullable String clientId) {

            this.clientId = clientId;
            return this;
        }
        @CustomType.Setter
        public Builder isClientScopedSubscriptionDurable(@Nullable Boolean isClientScopedSubscriptionDurable) {

            this.isClientScopedSubscriptionDurable = isClientScopedSubscriptionDurable;
            return this;
        }
        @CustomType.Setter
        public Builder isClientScopedSubscriptionShareable(@Nullable Boolean isClientScopedSubscriptionShareable) {

            this.isClientScopedSubscriptionShareable = isClientScopedSubscriptionShareable;
            return this;
        }
        public SubscriptionClientScopedSubscription build() {
            final var _resultValue = new SubscriptionClientScopedSubscription();
            _resultValue.clientId = clientId;
            _resultValue.isClientScopedSubscriptionDurable = isClientScopedSubscriptionDurable;
            _resultValue.isClientScopedSubscriptionShareable = isClientScopedSubscriptionShareable;
            return _resultValue;
        }
    }
}
