// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.management.inputs;

import com.pulumi.azure.management.inputs.GroupPolicySetDefinitionPolicyDefinitionGroupArgs;
import com.pulumi.azure.management.inputs.GroupPolicySetDefinitionPolicyDefinitionReferenceArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GroupPolicySetDefinitionState extends com.pulumi.resources.ResourceArgs {

    public static final GroupPolicySetDefinitionState Empty = new GroupPolicySetDefinitionState();

    /**
     * The description of this Policy Set Definition.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return The description of this Policy Set Definition.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * The display name of this Policy Set Definition.
     * 
     */
    @Import(name="displayName")
    private @Nullable Output<String> displayName;

    /**
     * @return The display name of this Policy Set Definition.
     * 
     */
    public Optional<Output<String>> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    /**
     * The ID of the Management Group where this Policy Set Definition should be created. Changing this forces a new Policy Set Definition to be created.
     * 
     */
    @Import(name="managementGroupId")
    private @Nullable Output<String> managementGroupId;

    /**
     * @return The ID of the Management Group where this Policy Set Definition should be created. Changing this forces a new Policy Set Definition to be created.
     * 
     */
    public Optional<Output<String>> managementGroupId() {
        return Optional.ofNullable(this.managementGroupId);
    }

    /**
     * The metadata for the Policy Set Definition in JSON format.
     * 
     */
    @Import(name="metadata")
    private @Nullable Output<String> metadata;

    /**
     * @return The metadata for the Policy Set Definition in JSON format.
     * 
     */
    public Optional<Output<String>> metadata() {
        return Optional.ofNullable(this.metadata);
    }

    /**
     * The name which should be used for this Policy Set Definition. Changing this forces a new Policy Set Definition to be created.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name which should be used for this Policy Set Definition. Changing this forces a new Policy Set Definition to be created.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The parameters for the Policy Set Definition in JSON format. Reducing the number of parameters forces a new resource to be created.
     * 
     */
    @Import(name="parameters")
    private @Nullable Output<String> parameters;

    /**
     * @return The parameters for the Policy Set Definition in JSON format. Reducing the number of parameters forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> parameters() {
        return Optional.ofNullable(this.parameters);
    }

    /**
     * One or more `policyDefinitionGroup` blocks as defined below.
     * 
     */
    @Import(name="policyDefinitionGroups")
    private @Nullable Output<List<GroupPolicySetDefinitionPolicyDefinitionGroupArgs>> policyDefinitionGroups;

    /**
     * @return One or more `policyDefinitionGroup` blocks as defined below.
     * 
     */
    public Optional<Output<List<GroupPolicySetDefinitionPolicyDefinitionGroupArgs>>> policyDefinitionGroups() {
        return Optional.ofNullable(this.policyDefinitionGroups);
    }

    /**
     * One or more `policyDefinitionReference` blocks as defined below.
     * 
     */
    @Import(name="policyDefinitionReferences")
    private @Nullable Output<List<GroupPolicySetDefinitionPolicyDefinitionReferenceArgs>> policyDefinitionReferences;

    /**
     * @return One or more `policyDefinitionReference` blocks as defined below.
     * 
     */
    public Optional<Output<List<GroupPolicySetDefinitionPolicyDefinitionReferenceArgs>>> policyDefinitionReferences() {
        return Optional.ofNullable(this.policyDefinitionReferences);
    }

    /**
     * The Policy Set Definition type. Possible values are `BuiltIn`, `Custom`, `NotSpecified`, and `Static`. Changing this forces a new Policy Set Definition to be created.
     * 
     */
    @Import(name="policyType")
    private @Nullable Output<String> policyType;

    /**
     * @return The Policy Set Definition type. Possible values are `BuiltIn`, `Custom`, `NotSpecified`, and `Static`. Changing this forces a new Policy Set Definition to be created.
     * 
     */
    public Optional<Output<String>> policyType() {
        return Optional.ofNullable(this.policyType);
    }

    private GroupPolicySetDefinitionState() {}

    private GroupPolicySetDefinitionState(GroupPolicySetDefinitionState $) {
        this.description = $.description;
        this.displayName = $.displayName;
        this.managementGroupId = $.managementGroupId;
        this.metadata = $.metadata;
        this.name = $.name;
        this.parameters = $.parameters;
        this.policyDefinitionGroups = $.policyDefinitionGroups;
        this.policyDefinitionReferences = $.policyDefinitionReferences;
        this.policyType = $.policyType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GroupPolicySetDefinitionState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GroupPolicySetDefinitionState $;

        public Builder() {
            $ = new GroupPolicySetDefinitionState();
        }

        public Builder(GroupPolicySetDefinitionState defaults) {
            $ = new GroupPolicySetDefinitionState(Objects.requireNonNull(defaults));
        }

        /**
         * @param description The description of this Policy Set Definition.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description The description of this Policy Set Definition.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param displayName The display name of this Policy Set Definition.
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName The display name of this Policy Set Definition.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param managementGroupId The ID of the Management Group where this Policy Set Definition should be created. Changing this forces a new Policy Set Definition to be created.
         * 
         * @return builder
         * 
         */
        public Builder managementGroupId(@Nullable Output<String> managementGroupId) {
            $.managementGroupId = managementGroupId;
            return this;
        }

        /**
         * @param managementGroupId The ID of the Management Group where this Policy Set Definition should be created. Changing this forces a new Policy Set Definition to be created.
         * 
         * @return builder
         * 
         */
        public Builder managementGroupId(String managementGroupId) {
            return managementGroupId(Output.of(managementGroupId));
        }

        /**
         * @param metadata The metadata for the Policy Set Definition in JSON format.
         * 
         * @return builder
         * 
         */
        public Builder metadata(@Nullable Output<String> metadata) {
            $.metadata = metadata;
            return this;
        }

        /**
         * @param metadata The metadata for the Policy Set Definition in JSON format.
         * 
         * @return builder
         * 
         */
        public Builder metadata(String metadata) {
            return metadata(Output.of(metadata));
        }

        /**
         * @param name The name which should be used for this Policy Set Definition. Changing this forces a new Policy Set Definition to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name which should be used for this Policy Set Definition. Changing this forces a new Policy Set Definition to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param parameters The parameters for the Policy Set Definition in JSON format. Reducing the number of parameters forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder parameters(@Nullable Output<String> parameters) {
            $.parameters = parameters;
            return this;
        }

        /**
         * @param parameters The parameters for the Policy Set Definition in JSON format. Reducing the number of parameters forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder parameters(String parameters) {
            return parameters(Output.of(parameters));
        }

        /**
         * @param policyDefinitionGroups One or more `policyDefinitionGroup` blocks as defined below.
         * 
         * @return builder
         * 
         */
        public Builder policyDefinitionGroups(@Nullable Output<List<GroupPolicySetDefinitionPolicyDefinitionGroupArgs>> policyDefinitionGroups) {
            $.policyDefinitionGroups = policyDefinitionGroups;
            return this;
        }

        /**
         * @param policyDefinitionGroups One or more `policyDefinitionGroup` blocks as defined below.
         * 
         * @return builder
         * 
         */
        public Builder policyDefinitionGroups(List<GroupPolicySetDefinitionPolicyDefinitionGroupArgs> policyDefinitionGroups) {
            return policyDefinitionGroups(Output.of(policyDefinitionGroups));
        }

        /**
         * @param policyDefinitionGroups One or more `policyDefinitionGroup` blocks as defined below.
         * 
         * @return builder
         * 
         */
        public Builder policyDefinitionGroups(GroupPolicySetDefinitionPolicyDefinitionGroupArgs... policyDefinitionGroups) {
            return policyDefinitionGroups(List.of(policyDefinitionGroups));
        }

        /**
         * @param policyDefinitionReferences One or more `policyDefinitionReference` blocks as defined below.
         * 
         * @return builder
         * 
         */
        public Builder policyDefinitionReferences(@Nullable Output<List<GroupPolicySetDefinitionPolicyDefinitionReferenceArgs>> policyDefinitionReferences) {
            $.policyDefinitionReferences = policyDefinitionReferences;
            return this;
        }

        /**
         * @param policyDefinitionReferences One or more `policyDefinitionReference` blocks as defined below.
         * 
         * @return builder
         * 
         */
        public Builder policyDefinitionReferences(List<GroupPolicySetDefinitionPolicyDefinitionReferenceArgs> policyDefinitionReferences) {
            return policyDefinitionReferences(Output.of(policyDefinitionReferences));
        }

        /**
         * @param policyDefinitionReferences One or more `policyDefinitionReference` blocks as defined below.
         * 
         * @return builder
         * 
         */
        public Builder policyDefinitionReferences(GroupPolicySetDefinitionPolicyDefinitionReferenceArgs... policyDefinitionReferences) {
            return policyDefinitionReferences(List.of(policyDefinitionReferences));
        }

        /**
         * @param policyType The Policy Set Definition type. Possible values are `BuiltIn`, `Custom`, `NotSpecified`, and `Static`. Changing this forces a new Policy Set Definition to be created.
         * 
         * @return builder
         * 
         */
        public Builder policyType(@Nullable Output<String> policyType) {
            $.policyType = policyType;
            return this;
        }

        /**
         * @param policyType The Policy Set Definition type. Possible values are `BuiltIn`, `Custom`, `NotSpecified`, and `Static`. Changing this forces a new Policy Set Definition to be created.
         * 
         * @return builder
         * 
         */
        public Builder policyType(String policyType) {
            return policyType(Output.of(policyType));
        }

        public GroupPolicySetDefinitionState build() {
            return $;
        }
    }

}
