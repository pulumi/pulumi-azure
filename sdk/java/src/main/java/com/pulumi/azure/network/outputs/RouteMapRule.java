// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.network.outputs;

import com.pulumi.azure.network.outputs.RouteMapRuleAction;
import com.pulumi.azure.network.outputs.RouteMapRuleMatchCriterion;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class RouteMapRule {
    /**
     * @return An `action` block as defined below.
     * 
     */
    private @Nullable List<RouteMapRuleAction> actions;
    /**
     * @return A `match_criterion` block as defined below.
     * 
     */
    private @Nullable List<RouteMapRuleMatchCriterion> matchCriterions;
    /**
     * @return The unique name for the rule.
     * 
     */
    private String name;
    /**
     * @return The next step after the rule is evaluated. Possible values are `Continue`, `Terminate` and `Unknown`. Defaults to `Unknown`.
     * 
     */
    private @Nullable String nextStepIfMatched;

    private RouteMapRule() {}
    /**
     * @return An `action` block as defined below.
     * 
     */
    public List<RouteMapRuleAction> actions() {
        return this.actions == null ? List.of() : this.actions;
    }
    /**
     * @return A `match_criterion` block as defined below.
     * 
     */
    public List<RouteMapRuleMatchCriterion> matchCriterions() {
        return this.matchCriterions == null ? List.of() : this.matchCriterions;
    }
    /**
     * @return The unique name for the rule.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The next step after the rule is evaluated. Possible values are `Continue`, `Terminate` and `Unknown`. Defaults to `Unknown`.
     * 
     */
    public Optional<String> nextStepIfMatched() {
        return Optional.ofNullable(this.nextStepIfMatched);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(RouteMapRule defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<RouteMapRuleAction> actions;
        private @Nullable List<RouteMapRuleMatchCriterion> matchCriterions;
        private String name;
        private @Nullable String nextStepIfMatched;
        public Builder() {}
        public Builder(RouteMapRule defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.actions = defaults.actions;
    	      this.matchCriterions = defaults.matchCriterions;
    	      this.name = defaults.name;
    	      this.nextStepIfMatched = defaults.nextStepIfMatched;
        }

        @CustomType.Setter
        public Builder actions(@Nullable List<RouteMapRuleAction> actions) {

            this.actions = actions;
            return this;
        }
        public Builder actions(RouteMapRuleAction... actions) {
            return actions(List.of(actions));
        }
        @CustomType.Setter
        public Builder matchCriterions(@Nullable List<RouteMapRuleMatchCriterion> matchCriterions) {

            this.matchCriterions = matchCriterions;
            return this;
        }
        public Builder matchCriterions(RouteMapRuleMatchCriterion... matchCriterions) {
            return matchCriterions(List.of(matchCriterions));
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("RouteMapRule", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder nextStepIfMatched(@Nullable String nextStepIfMatched) {

            this.nextStepIfMatched = nextStepIfMatched;
            return this;
        }
        public RouteMapRule build() {
            final var _resultValue = new RouteMapRule();
            _resultValue.actions = actions;
            _resultValue.matchCriterions = matchCriterions;
            _resultValue.name = name;
            _resultValue.nextStepIfMatched = nextStepIfMatched;
            return _resultValue;
        }
    }
}
