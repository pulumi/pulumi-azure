// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.compute;

import com.pulumi.azure.Utilities;
import com.pulumi.azure.compute.DiskPoolManagedDiskAttachmentArgs;
import com.pulumi.azure.compute.inputs.DiskPoolManagedDiskAttachmentState;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import javax.annotation.Nullable;

/**
 * Manages a Disk Pool Managed Disk Attachment.
 * 
 * !&gt; **Note:** Azure are officially [halting](https://learn.microsoft.com/en-us/azure/azure-vmware/attach-disk-pools-to-azure-vmware-solution-hosts?tabs=azure-cli) the preview of Azure Disk Pools, and it **will not** be made generally available. New customers will not be able to register the Microsoft.StoragePool resource provider on their subscription and deploy new Disk Pools. Existing subscriptions registered with Microsoft.StoragePool may continue to deploy and manage disk pools for the time being.
 * 
 * &gt; **Note:** Must be either a premium SSD, standard SSD, or an ultra disk in the same region and availability zone as the disk pool.
 * 
 * &gt; **Note:** Ultra disks must have a disk sector size of 512 bytes.
 * 
 * &gt; **Note:** Must be a shared disk, with a maxShares value of two or greater.
 * 
 * &gt; **Note:** You must provide the StoragePool resource provider RBAC permissions to the disks that will be added to the disk pool.
 * 
 * ## Import
 * 
 * Disks Pool Managed Disk Attachments can be imported using the `resource id`, e.g.
 * 
 * ```sh
 *  $ pulumi import azure:compute/diskPoolManagedDiskAttachment:DiskPoolManagedDiskAttachment example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resGroup1/providers/Microsoft.StoragePool/diskPools/storagePool1/managedDisks|/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resGroup1/providers/Microsoft.Compute/disks/disk1
 * ```
 * 
 */
@ResourceType(type="azure:compute/diskPoolManagedDiskAttachment:DiskPoolManagedDiskAttachment")
public class DiskPoolManagedDiskAttachment extends com.pulumi.resources.CustomResource {
    /**
     * The ID of the Disk Pool. Changing this forces a new Disk Pool Managed Disk Attachment to be created.
     * 
     */
    @Export(name="diskPoolId", type=String.class, parameters={})
    private Output<String> diskPoolId;

    /**
     * @return The ID of the Disk Pool. Changing this forces a new Disk Pool Managed Disk Attachment to be created.
     * 
     */
    public Output<String> diskPoolId() {
        return this.diskPoolId;
    }
    /**
     * The ID of the Managed Disk. Changing this forces a new Disks Pool Managed Disk Attachment to be created.
     * 
     */
    @Export(name="managedDiskId", type=String.class, parameters={})
    private Output<String> managedDiskId;

    /**
     * @return The ID of the Managed Disk. Changing this forces a new Disks Pool Managed Disk Attachment to be created.
     * 
     */
    public Output<String> managedDiskId() {
        return this.managedDiskId;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public DiskPoolManagedDiskAttachment(String name) {
        this(name, DiskPoolManagedDiskAttachmentArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public DiskPoolManagedDiskAttachment(String name, DiskPoolManagedDiskAttachmentArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public DiskPoolManagedDiskAttachment(String name, DiskPoolManagedDiskAttachmentArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:compute/diskPoolManagedDiskAttachment:DiskPoolManagedDiskAttachment", name, args == null ? DiskPoolManagedDiskAttachmentArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private DiskPoolManagedDiskAttachment(String name, Output<String> id, @Nullable DiskPoolManagedDiskAttachmentState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:compute/diskPoolManagedDiskAttachment:DiskPoolManagedDiskAttachment", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static DiskPoolManagedDiskAttachment get(String name, Output<String> id, @Nullable DiskPoolManagedDiskAttachmentState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new DiskPoolManagedDiskAttachment(name, id, state, options);
    }
}
