// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.devtest.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class VirtualNetworkSubnetArgs extends com.pulumi.resources.ResourceArgs {

    public static final VirtualNetworkSubnetArgs Empty = new VirtualNetworkSubnetArgs();

    /**
     * Specifies the name of the Dev Test Virtual Network. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Specifies the name of the Dev Test Virtual Network. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Can this subnet be used for creating Virtual Machines? Possible values are `Allow`, `Default` and `Deny`. Defaults to `Allow`.
     * 
     */
    @Import(name="useInVirtualMachineCreation")
    private @Nullable Output<String> useInVirtualMachineCreation;

    /**
     * @return Can this subnet be used for creating Virtual Machines? Possible values are `Allow`, `Default` and `Deny`. Defaults to `Allow`.
     * 
     */
    public Optional<Output<String>> useInVirtualMachineCreation() {
        return Optional.ofNullable(this.useInVirtualMachineCreation);
    }

    /**
     * Can Virtual Machines in this Subnet use Public IP Addresses? Possible values are `Allow`, `Default` and `Deny`. Defaults to `Allow`.
     * 
     */
    @Import(name="usePublicIpAddress")
    private @Nullable Output<String> usePublicIpAddress;

    /**
     * @return Can Virtual Machines in this Subnet use Public IP Addresses? Possible values are `Allow`, `Default` and `Deny`. Defaults to `Allow`.
     * 
     */
    public Optional<Output<String>> usePublicIpAddress() {
        return Optional.ofNullable(this.usePublicIpAddress);
    }

    private VirtualNetworkSubnetArgs() {}

    private VirtualNetworkSubnetArgs(VirtualNetworkSubnetArgs $) {
        this.name = $.name;
        this.useInVirtualMachineCreation = $.useInVirtualMachineCreation;
        this.usePublicIpAddress = $.usePublicIpAddress;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VirtualNetworkSubnetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VirtualNetworkSubnetArgs $;

        public Builder() {
            $ = new VirtualNetworkSubnetArgs();
        }

        public Builder(VirtualNetworkSubnetArgs defaults) {
            $ = new VirtualNetworkSubnetArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param name Specifies the name of the Dev Test Virtual Network. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Specifies the name of the Dev Test Virtual Network. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param useInVirtualMachineCreation Can this subnet be used for creating Virtual Machines? Possible values are `Allow`, `Default` and `Deny`. Defaults to `Allow`.
         * 
         * @return builder
         * 
         */
        public Builder useInVirtualMachineCreation(@Nullable Output<String> useInVirtualMachineCreation) {
            $.useInVirtualMachineCreation = useInVirtualMachineCreation;
            return this;
        }

        /**
         * @param useInVirtualMachineCreation Can this subnet be used for creating Virtual Machines? Possible values are `Allow`, `Default` and `Deny`. Defaults to `Allow`.
         * 
         * @return builder
         * 
         */
        public Builder useInVirtualMachineCreation(String useInVirtualMachineCreation) {
            return useInVirtualMachineCreation(Output.of(useInVirtualMachineCreation));
        }

        /**
         * @param usePublicIpAddress Can Virtual Machines in this Subnet use Public IP Addresses? Possible values are `Allow`, `Default` and `Deny`. Defaults to `Allow`.
         * 
         * @return builder
         * 
         */
        public Builder usePublicIpAddress(@Nullable Output<String> usePublicIpAddress) {
            $.usePublicIpAddress = usePublicIpAddress;
            return this;
        }

        /**
         * @param usePublicIpAddress Can Virtual Machines in this Subnet use Public IP Addresses? Possible values are `Allow`, `Default` and `Deny`. Defaults to `Allow`.
         * 
         * @return builder
         * 
         */
        public Builder usePublicIpAddress(String usePublicIpAddress) {
            return usePublicIpAddress(Output.of(usePublicIpAddress));
        }

        public VirtualNetworkSubnetArgs build() {
            return $;
        }
    }

}
