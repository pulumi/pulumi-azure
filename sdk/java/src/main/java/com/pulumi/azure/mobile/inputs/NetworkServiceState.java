// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.mobile.inputs;

import com.pulumi.azure.mobile.inputs.NetworkServicePccRuleArgs;
import com.pulumi.azure.mobile.inputs.NetworkServiceServiceQosPolicyArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class NetworkServiceState extends com.pulumi.resources.ResourceArgs {

    public static final NetworkServiceState Empty = new NetworkServiceState();

    /**
     * Specifies the Azure Region where the Mobile Network Service should exist. Changing this forces a new Mobile Network Service to be created.
     * 
     */
    @Import(name="location")
    private @Nullable Output<String> location;

    /**
     * @return Specifies the Azure Region where the Mobile Network Service should exist. Changing this forces a new Mobile Network Service to be created.
     * 
     */
    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * Specifies the ID of the Mobile Network Service. Changing this forces a new Mobile Network Service to be created.
     * 
     */
    @Import(name="mobileNetworkId")
    private @Nullable Output<String> mobileNetworkId;

    /**
     * @return Specifies the ID of the Mobile Network Service. Changing this forces a new Mobile Network Service to be created.
     * 
     */
    public Optional<Output<String>> mobileNetworkId() {
        return Optional.ofNullable(this.mobileNetworkId);
    }

    /**
     * Specifies the name which should be used for this Mobile Network Service. Changing this forces a new Mobile Network Service to be created.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Specifies the name which should be used for this Mobile Network Service. Changing this forces a new Mobile Network Service to be created.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * A `pcc_rule` block as defined below. The set of PCC Rules that make up this service.
     * 
     */
    @Import(name="pccRules")
    private @Nullable Output<List<NetworkServicePccRuleArgs>> pccRules;

    /**
     * @return A `pcc_rule` block as defined below. The set of PCC Rules that make up this service.
     * 
     */
    public Optional<Output<List<NetworkServicePccRuleArgs>>> pccRules() {
        return Optional.ofNullable(this.pccRules);
    }

    /**
     * A precedence value that is used to decide between services when identifying the QoS values to use for a particular SIM. A lower value means a higher priority. This value should be unique among all services configured in the mobile network. Must be between `0` and `255`.
     * 
     */
    @Import(name="servicePrecedence")
    private @Nullable Output<Integer> servicePrecedence;

    /**
     * @return A precedence value that is used to decide between services when identifying the QoS values to use for a particular SIM. A lower value means a higher priority. This value should be unique among all services configured in the mobile network. Must be between `0` and `255`.
     * 
     */
    public Optional<Output<Integer>> servicePrecedence() {
        return Optional.ofNullable(this.servicePrecedence);
    }

    /**
     * A `service_qos_policy` block as defined below. The QoS policy to use for packets matching this service. This can be overridden for particular flows using the ruleQosPolicy field in a `pcc_rule`. If this field is not specified then the `sim_policy` of User Equipment (UE) will define the QoS settings.
     * 
     */
    @Import(name="serviceQosPolicy")
    private @Nullable Output<NetworkServiceServiceQosPolicyArgs> serviceQosPolicy;

    /**
     * @return A `service_qos_policy` block as defined below. The QoS policy to use for packets matching this service. This can be overridden for particular flows using the ruleQosPolicy field in a `pcc_rule`. If this field is not specified then the `sim_policy` of User Equipment (UE) will define the QoS settings.
     * 
     */
    public Optional<Output<NetworkServiceServiceQosPolicyArgs>> serviceQosPolicy() {
        return Optional.ofNullable(this.serviceQosPolicy);
    }

    /**
     * A mapping of tags which should be assigned to the Mobile Network Service.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return A mapping of tags which should be assigned to the Mobile Network Service.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private NetworkServiceState() {}

    private NetworkServiceState(NetworkServiceState $) {
        this.location = $.location;
        this.mobileNetworkId = $.mobileNetworkId;
        this.name = $.name;
        this.pccRules = $.pccRules;
        this.servicePrecedence = $.servicePrecedence;
        this.serviceQosPolicy = $.serviceQosPolicy;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(NetworkServiceState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private NetworkServiceState $;

        public Builder() {
            $ = new NetworkServiceState();
        }

        public Builder(NetworkServiceState defaults) {
            $ = new NetworkServiceState(Objects.requireNonNull(defaults));
        }

        /**
         * @param location Specifies the Azure Region where the Mobile Network Service should exist. Changing this forces a new Mobile Network Service to be created.
         * 
         * @return builder
         * 
         */
        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location Specifies the Azure Region where the Mobile Network Service should exist. Changing this forces a new Mobile Network Service to be created.
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param mobileNetworkId Specifies the ID of the Mobile Network Service. Changing this forces a new Mobile Network Service to be created.
         * 
         * @return builder
         * 
         */
        public Builder mobileNetworkId(@Nullable Output<String> mobileNetworkId) {
            $.mobileNetworkId = mobileNetworkId;
            return this;
        }

        /**
         * @param mobileNetworkId Specifies the ID of the Mobile Network Service. Changing this forces a new Mobile Network Service to be created.
         * 
         * @return builder
         * 
         */
        public Builder mobileNetworkId(String mobileNetworkId) {
            return mobileNetworkId(Output.of(mobileNetworkId));
        }

        /**
         * @param name Specifies the name which should be used for this Mobile Network Service. Changing this forces a new Mobile Network Service to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Specifies the name which should be used for this Mobile Network Service. Changing this forces a new Mobile Network Service to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param pccRules A `pcc_rule` block as defined below. The set of PCC Rules that make up this service.
         * 
         * @return builder
         * 
         */
        public Builder pccRules(@Nullable Output<List<NetworkServicePccRuleArgs>> pccRules) {
            $.pccRules = pccRules;
            return this;
        }

        /**
         * @param pccRules A `pcc_rule` block as defined below. The set of PCC Rules that make up this service.
         * 
         * @return builder
         * 
         */
        public Builder pccRules(List<NetworkServicePccRuleArgs> pccRules) {
            return pccRules(Output.of(pccRules));
        }

        /**
         * @param pccRules A `pcc_rule` block as defined below. The set of PCC Rules that make up this service.
         * 
         * @return builder
         * 
         */
        public Builder pccRules(NetworkServicePccRuleArgs... pccRules) {
            return pccRules(List.of(pccRules));
        }

        /**
         * @param servicePrecedence A precedence value that is used to decide between services when identifying the QoS values to use for a particular SIM. A lower value means a higher priority. This value should be unique among all services configured in the mobile network. Must be between `0` and `255`.
         * 
         * @return builder
         * 
         */
        public Builder servicePrecedence(@Nullable Output<Integer> servicePrecedence) {
            $.servicePrecedence = servicePrecedence;
            return this;
        }

        /**
         * @param servicePrecedence A precedence value that is used to decide between services when identifying the QoS values to use for a particular SIM. A lower value means a higher priority. This value should be unique among all services configured in the mobile network. Must be between `0` and `255`.
         * 
         * @return builder
         * 
         */
        public Builder servicePrecedence(Integer servicePrecedence) {
            return servicePrecedence(Output.of(servicePrecedence));
        }

        /**
         * @param serviceQosPolicy A `service_qos_policy` block as defined below. The QoS policy to use for packets matching this service. This can be overridden for particular flows using the ruleQosPolicy field in a `pcc_rule`. If this field is not specified then the `sim_policy` of User Equipment (UE) will define the QoS settings.
         * 
         * @return builder
         * 
         */
        public Builder serviceQosPolicy(@Nullable Output<NetworkServiceServiceQosPolicyArgs> serviceQosPolicy) {
            $.serviceQosPolicy = serviceQosPolicy;
            return this;
        }

        /**
         * @param serviceQosPolicy A `service_qos_policy` block as defined below. The QoS policy to use for packets matching this service. This can be overridden for particular flows using the ruleQosPolicy field in a `pcc_rule`. If this field is not specified then the `sim_policy` of User Equipment (UE) will define the QoS settings.
         * 
         * @return builder
         * 
         */
        public Builder serviceQosPolicy(NetworkServiceServiceQosPolicyArgs serviceQosPolicy) {
            return serviceQosPolicy(Output.of(serviceQosPolicy));
        }

        /**
         * @param tags A mapping of tags which should be assigned to the Mobile Network Service.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags A mapping of tags which should be assigned to the Mobile Network Service.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public NetworkServiceState build() {
            return $;
        }
    }

}
