// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.datafactory.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CustomerManagedKeyState extends com.pulumi.resources.ResourceArgs {

    public static final CustomerManagedKeyState Empty = new CustomerManagedKeyState();

    /**
     * The ID the of the Customer Managed Key to associate with the Data Factory.
     * 
     */
    @Import(name="customerManagedKeyId")
    private @Nullable Output<String> customerManagedKeyId;

    /**
     * @return The ID the of the Customer Managed Key to associate with the Data Factory.
     * 
     */
    public Optional<Output<String>> customerManagedKeyId() {
        return Optional.ofNullable(this.customerManagedKeyId);
    }

    /**
     * The ID of the Data Factory Resource the Customer Managed Key will be associated with. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="dataFactoryId")
    private @Nullable Output<String> dataFactoryId;

    /**
     * @return The ID of the Data Factory Resource the Customer Managed Key will be associated with. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> dataFactoryId() {
        return Optional.ofNullable(this.dataFactoryId);
    }

    /**
     * The User Assigned Identity ID that will be used to access Key Vaults that contain the encryption keys.
     * 
     */
    @Import(name="userAssignedIdentityId")
    private @Nullable Output<String> userAssignedIdentityId;

    /**
     * @return The User Assigned Identity ID that will be used to access Key Vaults that contain the encryption keys.
     * 
     */
    public Optional<Output<String>> userAssignedIdentityId() {
        return Optional.ofNullable(this.userAssignedIdentityId);
    }

    private CustomerManagedKeyState() {}

    private CustomerManagedKeyState(CustomerManagedKeyState $) {
        this.customerManagedKeyId = $.customerManagedKeyId;
        this.dataFactoryId = $.dataFactoryId;
        this.userAssignedIdentityId = $.userAssignedIdentityId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CustomerManagedKeyState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CustomerManagedKeyState $;

        public Builder() {
            $ = new CustomerManagedKeyState();
        }

        public Builder(CustomerManagedKeyState defaults) {
            $ = new CustomerManagedKeyState(Objects.requireNonNull(defaults));
        }

        /**
         * @param customerManagedKeyId The ID the of the Customer Managed Key to associate with the Data Factory.
         * 
         * @return builder
         * 
         */
        public Builder customerManagedKeyId(@Nullable Output<String> customerManagedKeyId) {
            $.customerManagedKeyId = customerManagedKeyId;
            return this;
        }

        /**
         * @param customerManagedKeyId The ID the of the Customer Managed Key to associate with the Data Factory.
         * 
         * @return builder
         * 
         */
        public Builder customerManagedKeyId(String customerManagedKeyId) {
            return customerManagedKeyId(Output.of(customerManagedKeyId));
        }

        /**
         * @param dataFactoryId The ID of the Data Factory Resource the Customer Managed Key will be associated with. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder dataFactoryId(@Nullable Output<String> dataFactoryId) {
            $.dataFactoryId = dataFactoryId;
            return this;
        }

        /**
         * @param dataFactoryId The ID of the Data Factory Resource the Customer Managed Key will be associated with. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder dataFactoryId(String dataFactoryId) {
            return dataFactoryId(Output.of(dataFactoryId));
        }

        /**
         * @param userAssignedIdentityId The User Assigned Identity ID that will be used to access Key Vaults that contain the encryption keys.
         * 
         * @return builder
         * 
         */
        public Builder userAssignedIdentityId(@Nullable Output<String> userAssignedIdentityId) {
            $.userAssignedIdentityId = userAssignedIdentityId;
            return this;
        }

        /**
         * @param userAssignedIdentityId The User Assigned Identity ID that will be used to access Key Vaults that contain the encryption keys.
         * 
         * @return builder
         * 
         */
        public Builder userAssignedIdentityId(String userAssignedIdentityId) {
            return userAssignedIdentityId(Output.of(userAssignedIdentityId));
        }

        public CustomerManagedKeyState build() {
            return $;
        }
    }

}
