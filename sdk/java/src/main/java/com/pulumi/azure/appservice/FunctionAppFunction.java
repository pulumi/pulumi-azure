// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.appservice;

import com.pulumi.azure.Utilities;
import com.pulumi.azure.appservice.FunctionAppFunctionArgs;
import com.pulumi.azure.appservice.inputs.FunctionAppFunctionState;
import com.pulumi.azure.appservice.outputs.FunctionAppFunctionFile;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Manages a Function App Function.
 * 
 * ## Example Usage
 * 
 * ### Basic HTTP Trigger
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.azure.core.ResourceGroup;
 * import com.pulumi.azure.core.ResourceGroupArgs;
 * import com.pulumi.azure.storage.Account;
 * import com.pulumi.azure.storage.AccountArgs;
 * import com.pulumi.azure.appservice.ServicePlan;
 * import com.pulumi.azure.appservice.ServicePlanArgs;
 * import com.pulumi.azure.appservice.LinuxFunctionApp;
 * import com.pulumi.azure.appservice.LinuxFunctionAppArgs;
 * import com.pulumi.azure.appservice.inputs.LinuxFunctionAppSiteConfigArgs;
 * import com.pulumi.azure.appservice.inputs.LinuxFunctionAppSiteConfigApplicationStackArgs;
 * import com.pulumi.azure.appservice.FunctionAppFunction;
 * import com.pulumi.azure.appservice.FunctionAppFunctionArgs;
 * import static com.pulumi.codegen.internal.Serialization.*;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new ResourceGroup("example", ResourceGroupArgs.builder()
 *             .name("example-group")
 *             .location("West Europe")
 *             .build());
 * 
 *         var exampleAccount = new Account("exampleAccount", AccountArgs.builder()
 *             .name("examplesa")
 *             .resourceGroupName(example.name())
 *             .location(example.location())
 *             .accountTier("Standard")
 *             .accountReplicationType("LRS")
 *             .build());
 * 
 *         var exampleServicePlan = new ServicePlan("exampleServicePlan", ServicePlanArgs.builder()
 *             .name("example-service-plan")
 *             .location(example.location())
 *             .resourceGroupName(example.name())
 *             .osType("Linux")
 *             .skuName("S1")
 *             .build());
 * 
 *         var exampleLinuxFunctionApp = new LinuxFunctionApp("exampleLinuxFunctionApp", LinuxFunctionAppArgs.builder()
 *             .name("example-function-app")
 *             .location(example.location())
 *             .resourceGroupName(example.name())
 *             .servicePlanId(exampleServicePlan.id())
 *             .storageAccountName(exampleAccount.name())
 *             .storageAccountAccessKey(exampleAccount.primaryAccessKey())
 *             .siteConfig(LinuxFunctionAppSiteConfigArgs.builder()
 *                 .applicationStack(LinuxFunctionAppSiteConfigApplicationStackArgs.builder()
 *                     .pythonVersion("3.9")
 *                     .build())
 *                 .build())
 *             .build());
 * 
 *         var exampleFunctionAppFunction = new FunctionAppFunction("exampleFunctionAppFunction", FunctionAppFunctionArgs.builder()
 *             .name("example-function-app-function")
 *             .functionAppId(exampleLinuxFunctionApp.id())
 *             .language("Python")
 *             .testData(serializeJson(
 *                 jsonObject(
 *                     jsonProperty("name", "Azure")
 *                 )))
 *             .configJson(serializeJson(
 *                 jsonObject(
 *                     jsonProperty("bindings", jsonArray(
 *                         jsonObject(
 *                             jsonProperty("authLevel", "function"),
 *                             jsonProperty("direction", "in"),
 *                             jsonProperty("methods", jsonArray(
 *                                 "get", 
 *                                 "post"
 *                             )),
 *                             jsonProperty("name", "req"),
 *                             jsonProperty("type", "httpTrigger")
 *                         ), 
 *                         jsonObject(
 *                             jsonProperty("direction", "out"),
 *                             jsonProperty("name", "$return"),
 *                             jsonProperty("type", "http")
 *                         )
 *                     ))
 *                 )))
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ### HTTP Trigger With Code Upload
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.azure.core.ResourceGroup;
 * import com.pulumi.azure.core.ResourceGroupArgs;
 * import com.pulumi.azure.storage.Account;
 * import com.pulumi.azure.storage.AccountArgs;
 * import com.pulumi.azure.appservice.ServicePlan;
 * import com.pulumi.azure.appservice.ServicePlanArgs;
 * import com.pulumi.azure.appservice.WindowsFunctionApp;
 * import com.pulumi.azure.appservice.WindowsFunctionAppArgs;
 * import com.pulumi.azure.appservice.inputs.WindowsFunctionAppSiteConfigArgs;
 * import com.pulumi.azure.appservice.inputs.WindowsFunctionAppSiteConfigApplicationStackArgs;
 * import com.pulumi.azure.appservice.FunctionAppFunction;
 * import com.pulumi.azure.appservice.FunctionAppFunctionArgs;
 * import com.pulumi.azure.appservice.inputs.FunctionAppFunctionFileArgs;
 * import static com.pulumi.codegen.internal.Serialization.*;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new ResourceGroup("example", ResourceGroupArgs.builder()
 *             .name("example-group")
 *             .location("West Europe")
 *             .build());
 * 
 *         var exampleAccount = new Account("exampleAccount", AccountArgs.builder()
 *             .name("examplesa")
 *             .resourceGroupName(example.name())
 *             .location(example.location())
 *             .accountTier("Standard")
 *             .accountReplicationType("LRS")
 *             .build());
 * 
 *         var exampleServicePlan = new ServicePlan("exampleServicePlan", ServicePlanArgs.builder()
 *             .name("example-service-plan")
 *             .location(example.location())
 *             .resourceGroupName(example.name())
 *             .osType("Windows")
 *             .skuName("S1")
 *             .build());
 * 
 *         var exampleWindowsFunctionApp = new WindowsFunctionApp("exampleWindowsFunctionApp", WindowsFunctionAppArgs.builder()
 *             .name("example-function-app")
 *             .location(example.location())
 *             .resourceGroupName(example.name())
 *             .servicePlanId(exampleServicePlan.id())
 *             .storageAccountName(exampleAccount.name())
 *             .storageAccountAccessKey(exampleAccount.primaryAccessKey())
 *             .siteConfig(WindowsFunctionAppSiteConfigArgs.builder()
 *                 .applicationStack(WindowsFunctionAppSiteConfigApplicationStackArgs.builder()
 *                     .dotnetVersion("6")
 *                     .build())
 *                 .build())
 *             .build());
 * 
 *         var exampleFunctionAppFunction = new FunctionAppFunction("exampleFunctionAppFunction", FunctionAppFunctionArgs.builder()
 *             .name("example-function-app-function")
 *             .functionAppId(exampleWindowsFunctionApp.id())
 *             .language("CSharp")
 *             .files(FunctionAppFunctionFileArgs.builder()
 *                 .name("run.csx")
 *                 .content(StdFunctions.file(FileArgs.builder()
 *                     .input("exampledata/run.csx")
 *                     .build()).result())
 *                 .build())
 *             .testData(serializeJson(
 *                 jsonObject(
 *                     jsonProperty("name", "Azure")
 *                 )))
 *             .configJson(serializeJson(
 *                 jsonObject(
 *                     jsonProperty("bindings", jsonArray(
 *                         jsonObject(
 *                             jsonProperty("authLevel", "function"),
 *                             jsonProperty("direction", "in"),
 *                             jsonProperty("methods", jsonArray(
 *                                 "get", 
 *                                 "post"
 *                             )),
 *                             jsonProperty("name", "req"),
 *                             jsonProperty("type", "httpTrigger")
 *                         ), 
 *                         jsonObject(
 *                             jsonProperty("direction", "out"),
 *                             jsonProperty("name", "$return"),
 *                             jsonProperty("type", "http")
 *                         )
 *                     ))
 *                 )))
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * a Function App Function can be imported using the `resource id`, e.g.
 * 
 * ```sh
 * $ pulumi import azure:appservice/functionAppFunction:FunctionAppFunction example &#34;/subscriptions/12345678-1234-9876-4563-123456789012/resourceGroups/resGroup1/providers/Microsoft.Web/sites/site1/functions/function1&#34;
 * ```
 * 
 */
@ResourceType(type="azure:appservice/functionAppFunction:FunctionAppFunction")
public class FunctionAppFunction extends com.pulumi.resources.CustomResource {
    /**
     * The config for this Function in JSON format.
     * 
     */
    @Export(name="configJson", refs={String.class}, tree="[0]")
    private Output<String> configJson;

    /**
     * @return The config for this Function in JSON format.
     * 
     */
    public Output<String> configJson() {
        return this.configJson;
    }
    /**
     * The URL of the configuration JSON.
     * 
     */
    @Export(name="configUrl", refs={String.class}, tree="[0]")
    private Output<String> configUrl;

    /**
     * @return The URL of the configuration JSON.
     * 
     */
    public Output<String> configUrl() {
        return this.configUrl;
    }
    /**
     * Should this function be enabled. Defaults to `true`.
     * 
     */
    @Export(name="enabled", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> enabled;

    /**
     * @return Should this function be enabled. Defaults to `true`.
     * 
     */
    public Output<Optional<Boolean>> enabled() {
        return Codegen.optional(this.enabled);
    }
    /**
     * A `file` block as detailed below. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="files", refs={List.class,FunctionAppFunctionFile.class}, tree="[0,1]")
    private Output</* @Nullable */ List<FunctionAppFunctionFile>> files;

    /**
     * @return A `file` block as detailed below. Changing this forces a new resource to be created.
     * 
     */
    public Output<Optional<List<FunctionAppFunctionFile>>> files() {
        return Codegen.optional(this.files);
    }
    /**
     * The ID of the Function App in which this function should reside. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="functionAppId", refs={String.class}, tree="[0]")
    private Output<String> functionAppId;

    /**
     * @return The ID of the Function App in which this function should reside. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> functionAppId() {
        return this.functionAppId;
    }
    /**
     * The invocation URL.
     * 
     */
    @Export(name="invocationUrl", refs={String.class}, tree="[0]")
    private Output<String> invocationUrl;

    /**
     * @return The invocation URL.
     * 
     */
    public Output<String> invocationUrl() {
        return this.invocationUrl;
    }
    /**
     * The language the Function is written in. Possible values are `CSharp`, `Custom`, `Java`, `Javascript`, `Python`, `PowerShell`, and `TypeScript`.
     * 
     * &gt; **NOTE:** when using `Custom` language, you must specify the code handler in the `host.json` file for your function. See the [official docs](https://docs.microsoft.com/azure/azure-functions/functions-custom-handlers#hostjson) for more information.
     * 
     */
    @Export(name="language", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> language;

    /**
     * @return The language the Function is written in. Possible values are `CSharp`, `Custom`, `Java`, `Javascript`, `Python`, `PowerShell`, and `TypeScript`.
     * 
     * &gt; **NOTE:** when using `Custom` language, you must specify the code handler in the `host.json` file for your function. See the [official docs](https://docs.microsoft.com/azure/azure-functions/functions-custom-handlers#hostjson) for more information.
     * 
     */
    public Output<Optional<String>> language() {
        return Codegen.optional(this.language);
    }
    /**
     * The name of the function. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The name of the function. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The Script root path URL.
     * 
     */
    @Export(name="scriptRootPathUrl", refs={String.class}, tree="[0]")
    private Output<String> scriptRootPathUrl;

    /**
     * @return The Script root path URL.
     * 
     */
    public Output<String> scriptRootPathUrl() {
        return this.scriptRootPathUrl;
    }
    /**
     * The script URL.
     * 
     */
    @Export(name="scriptUrl", refs={String.class}, tree="[0]")
    private Output<String> scriptUrl;

    /**
     * @return The script URL.
     * 
     */
    public Output<String> scriptUrl() {
        return this.scriptUrl;
    }
    /**
     * The URL for the Secrets File.
     * 
     */
    @Export(name="secretsFileUrl", refs={String.class}, tree="[0]")
    private Output<String> secretsFileUrl;

    /**
     * @return The URL for the Secrets File.
     * 
     */
    public Output<String> secretsFileUrl() {
        return this.secretsFileUrl;
    }
    /**
     * The test data for the function.
     * 
     */
    @Export(name="testData", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> testData;

    /**
     * @return The test data for the function.
     * 
     */
    public Output<Optional<String>> testData() {
        return Codegen.optional(this.testData);
    }
    /**
     * The Test data URL.
     * 
     */
    @Export(name="testDataUrl", refs={String.class}, tree="[0]")
    private Output<String> testDataUrl;

    /**
     * @return The Test data URL.
     * 
     */
    public Output<String> testDataUrl() {
        return this.testDataUrl;
    }
    /**
     * The function URL.
     * 
     */
    @Export(name="url", refs={String.class}, tree="[0]")
    private Output<String> url;

    /**
     * @return The function URL.
     * 
     */
    public Output<String> url() {
        return this.url;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public FunctionAppFunction(String name) {
        this(name, FunctionAppFunctionArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public FunctionAppFunction(String name, FunctionAppFunctionArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public FunctionAppFunction(String name, FunctionAppFunctionArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:appservice/functionAppFunction:FunctionAppFunction", name, args == null ? FunctionAppFunctionArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private FunctionAppFunction(String name, Output<String> id, @Nullable FunctionAppFunctionState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:appservice/functionAppFunction:FunctionAppFunction", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static FunctionAppFunction get(String name, Output<String> id, @Nullable FunctionAppFunctionState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new FunctionAppFunction(name, id, state, options);
    }
}
