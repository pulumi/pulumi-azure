// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.monitoring.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ActionGroupAzureFunctionReceiverArgs extends com.pulumi.resources.ResourceArgs {

    public static final ActionGroupAzureFunctionReceiverArgs Empty = new ActionGroupAzureFunctionReceiverArgs();

    /**
     * The Azure resource ID of the function app.
     * 
     */
    @Import(name="functionAppResourceId", required=true)
    private Output<String> functionAppResourceId;

    /**
     * @return The Azure resource ID of the function app.
     * 
     */
    public Output<String> functionAppResourceId() {
        return this.functionAppResourceId;
    }

    /**
     * The function name in the function app.
     * 
     */
    @Import(name="functionName", required=true)
    private Output<String> functionName;

    /**
     * @return The function name in the function app.
     * 
     */
    public Output<String> functionName() {
        return this.functionName;
    }

    /**
     * The HTTP trigger url where HTTP request sent to.
     * 
     */
    @Import(name="httpTriggerUrl", required=true)
    private Output<String> httpTriggerUrl;

    /**
     * @return The HTTP trigger url where HTTP request sent to.
     * 
     */
    public Output<String> httpTriggerUrl() {
        return this.httpTriggerUrl;
    }

    /**
     * The name of the Azure Function receiver.
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    /**
     * @return The name of the Azure Function receiver.
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    /**
     * Enables or disables the common alert schema.
     * 
     */
    @Import(name="useCommonAlertSchema")
    private @Nullable Output<Boolean> useCommonAlertSchema;

    /**
     * @return Enables or disables the common alert schema.
     * 
     */
    public Optional<Output<Boolean>> useCommonAlertSchema() {
        return Optional.ofNullable(this.useCommonAlertSchema);
    }

    private ActionGroupAzureFunctionReceiverArgs() {}

    private ActionGroupAzureFunctionReceiverArgs(ActionGroupAzureFunctionReceiverArgs $) {
        this.functionAppResourceId = $.functionAppResourceId;
        this.functionName = $.functionName;
        this.httpTriggerUrl = $.httpTriggerUrl;
        this.name = $.name;
        this.useCommonAlertSchema = $.useCommonAlertSchema;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ActionGroupAzureFunctionReceiverArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ActionGroupAzureFunctionReceiverArgs $;

        public Builder() {
            $ = new ActionGroupAzureFunctionReceiverArgs();
        }

        public Builder(ActionGroupAzureFunctionReceiverArgs defaults) {
            $ = new ActionGroupAzureFunctionReceiverArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param functionAppResourceId The Azure resource ID of the function app.
         * 
         * @return builder
         * 
         */
        public Builder functionAppResourceId(Output<String> functionAppResourceId) {
            $.functionAppResourceId = functionAppResourceId;
            return this;
        }

        /**
         * @param functionAppResourceId The Azure resource ID of the function app.
         * 
         * @return builder
         * 
         */
        public Builder functionAppResourceId(String functionAppResourceId) {
            return functionAppResourceId(Output.of(functionAppResourceId));
        }

        /**
         * @param functionName The function name in the function app.
         * 
         * @return builder
         * 
         */
        public Builder functionName(Output<String> functionName) {
            $.functionName = functionName;
            return this;
        }

        /**
         * @param functionName The function name in the function app.
         * 
         * @return builder
         * 
         */
        public Builder functionName(String functionName) {
            return functionName(Output.of(functionName));
        }

        /**
         * @param httpTriggerUrl The HTTP trigger url where HTTP request sent to.
         * 
         * @return builder
         * 
         */
        public Builder httpTriggerUrl(Output<String> httpTriggerUrl) {
            $.httpTriggerUrl = httpTriggerUrl;
            return this;
        }

        /**
         * @param httpTriggerUrl The HTTP trigger url where HTTP request sent to.
         * 
         * @return builder
         * 
         */
        public Builder httpTriggerUrl(String httpTriggerUrl) {
            return httpTriggerUrl(Output.of(httpTriggerUrl));
        }

        /**
         * @param name The name of the Azure Function receiver.
         * 
         * @return builder
         * 
         */
        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the Azure Function receiver.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param useCommonAlertSchema Enables or disables the common alert schema.
         * 
         * @return builder
         * 
         */
        public Builder useCommonAlertSchema(@Nullable Output<Boolean> useCommonAlertSchema) {
            $.useCommonAlertSchema = useCommonAlertSchema;
            return this;
        }

        /**
         * @param useCommonAlertSchema Enables or disables the common alert schema.
         * 
         * @return builder
         * 
         */
        public Builder useCommonAlertSchema(Boolean useCommonAlertSchema) {
            return useCommonAlertSchema(Output.of(useCommonAlertSchema));
        }

        public ActionGroupAzureFunctionReceiverArgs build() {
            if ($.functionAppResourceId == null) {
                throw new MissingRequiredPropertyException("ActionGroupAzureFunctionReceiverArgs", "functionAppResourceId");
            }
            if ($.functionName == null) {
                throw new MissingRequiredPropertyException("ActionGroupAzureFunctionReceiverArgs", "functionName");
            }
            if ($.httpTriggerUrl == null) {
                throw new MissingRequiredPropertyException("ActionGroupAzureFunctionReceiverArgs", "httpTriggerUrl");
            }
            if ($.name == null) {
                throw new MissingRequiredPropertyException("ActionGroupAzureFunctionReceiverArgs", "name");
            }
            return $;
        }
    }

}
