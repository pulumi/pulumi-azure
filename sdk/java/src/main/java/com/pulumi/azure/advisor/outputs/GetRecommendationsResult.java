// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.advisor.outputs;

import com.pulumi.azure.advisor.outputs.GetRecommendationsRecommendation;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class GetRecommendationsResult {
    private final @Nullable List<String> filterByCategories;
    private final @Nullable List<String> filterByResourceGroups;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private final String id;
    /**
     * @return One or more `recommendations` blocks as defined below.
     * 
     */
    private final List<GetRecommendationsRecommendation> recommendations;

    @CustomType.Constructor
    private GetRecommendationsResult(
        @CustomType.Parameter("filterByCategories") @Nullable List<String> filterByCategories,
        @CustomType.Parameter("filterByResourceGroups") @Nullable List<String> filterByResourceGroups,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("recommendations") List<GetRecommendationsRecommendation> recommendations) {
        this.filterByCategories = filterByCategories;
        this.filterByResourceGroups = filterByResourceGroups;
        this.id = id;
        this.recommendations = recommendations;
    }

    public List<String> filterByCategories() {
        return this.filterByCategories == null ? List.of() : this.filterByCategories;
    }
    public List<String> filterByResourceGroups() {
        return this.filterByResourceGroups == null ? List.of() : this.filterByResourceGroups;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return One or more `recommendations` blocks as defined below.
     * 
     */
    public List<GetRecommendationsRecommendation> recommendations() {
        return this.recommendations;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetRecommendationsResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable List<String> filterByCategories;
        private @Nullable List<String> filterByResourceGroups;
        private String id;
        private List<GetRecommendationsRecommendation> recommendations;

        public Builder() {
    	      // Empty
        }

        public Builder(GetRecommendationsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.filterByCategories = defaults.filterByCategories;
    	      this.filterByResourceGroups = defaults.filterByResourceGroups;
    	      this.id = defaults.id;
    	      this.recommendations = defaults.recommendations;
        }

        public Builder filterByCategories(@Nullable List<String> filterByCategories) {
            this.filterByCategories = filterByCategories;
            return this;
        }
        public Builder filterByCategories(String... filterByCategories) {
            return filterByCategories(List.of(filterByCategories));
        }
        public Builder filterByResourceGroups(@Nullable List<String> filterByResourceGroups) {
            this.filterByResourceGroups = filterByResourceGroups;
            return this;
        }
        public Builder filterByResourceGroups(String... filterByResourceGroups) {
            return filterByResourceGroups(List.of(filterByResourceGroups));
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder recommendations(List<GetRecommendationsRecommendation> recommendations) {
            this.recommendations = Objects.requireNonNull(recommendations);
            return this;
        }
        public Builder recommendations(GetRecommendationsRecommendation... recommendations) {
            return recommendations(List.of(recommendations));
        }        public GetRecommendationsResult build() {
            return new GetRecommendationsResult(filterByCategories, filterByResourceGroups, id, recommendations);
        }
    }
}
