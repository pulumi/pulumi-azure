// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.storage.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetContainersPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetContainersPlainArgs Empty = new GetContainersPlainArgs();

    /**
     * A prefix match used for the Storage Container `name` field.
     * 
     */
    @Import(name="namePrefix")
    private @Nullable String namePrefix;

    /**
     * @return A prefix match used for the Storage Container `name` field.
     * 
     */
    public Optional<String> namePrefix() {
        return Optional.ofNullable(this.namePrefix);
    }

    /**
     * The ID of the Storage Account that the Storage Containers reside in.
     * 
     */
    @Import(name="storageAccountId", required=true)
    private String storageAccountId;

    /**
     * @return The ID of the Storage Account that the Storage Containers reside in.
     * 
     */
    public String storageAccountId() {
        return this.storageAccountId;
    }

    private GetContainersPlainArgs() {}

    private GetContainersPlainArgs(GetContainersPlainArgs $) {
        this.namePrefix = $.namePrefix;
        this.storageAccountId = $.storageAccountId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetContainersPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetContainersPlainArgs $;

        public Builder() {
            $ = new GetContainersPlainArgs();
        }

        public Builder(GetContainersPlainArgs defaults) {
            $ = new GetContainersPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param namePrefix A prefix match used for the Storage Container `name` field.
         * 
         * @return builder
         * 
         */
        public Builder namePrefix(@Nullable String namePrefix) {
            $.namePrefix = namePrefix;
            return this;
        }

        /**
         * @param storageAccountId The ID of the Storage Account that the Storage Containers reside in.
         * 
         * @return builder
         * 
         */
        public Builder storageAccountId(String storageAccountId) {
            $.storageAccountId = storageAccountId;
            return this;
        }

        public GetContainersPlainArgs build() {
            $.storageAccountId = Objects.requireNonNull($.storageAccountId, "expected parameter 'storageAccountId' to be non-null");
            return $;
        }
    }

}
