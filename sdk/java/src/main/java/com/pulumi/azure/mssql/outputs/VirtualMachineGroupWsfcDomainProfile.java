// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.mssql.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class VirtualMachineGroupWsfcDomainProfile {
    /**
     * @return The account name used for creating cluster. Changing this forces a new resource to be created.
     * 
     */
    private @Nullable String clusterBootstrapAccountName;
    /**
     * @return The account name used for operating cluster. Changing this forces a new resource to be created.
     * 
     */
    private @Nullable String clusterOperatorAccountName;
    /**
     * @return The subnet type of the SQL Virtual Machine cluster. Possible values are `MultiSubnet` and `SingleSubnet`. Changing this forces a new resource to be created.
     * 
     */
    private String clusterSubnetType;
    /**
     * @return The fully qualified name of the domain. Changing this forces a new resource to be created.
     * 
     */
    private String fqdn;
    /**
     * @return The organizational Unit path in which the nodes and cluster will be present. Changing this forces a new resource to be created.
     * 
     */
    private @Nullable String organizationalUnitPath;
    /**
     * @return The account name under which SQL service will run on all participating SQL virtual machines in the cluster. Changing this forces a new resource to be created.
     * 
     */
    private @Nullable String sqlServiceAccountName;
    /**
     * @return The primary key of the Storage Account.
     * 
     */
    private @Nullable String storageAccountPrimaryKey;
    /**
     * @return The SAS URL to the Storage Container of the witness storage account. Changing this forces a new resource to be created.
     * 
     */
    private @Nullable String storageAccountUrl;

    private VirtualMachineGroupWsfcDomainProfile() {}
    /**
     * @return The account name used for creating cluster. Changing this forces a new resource to be created.
     * 
     */
    public Optional<String> clusterBootstrapAccountName() {
        return Optional.ofNullable(this.clusterBootstrapAccountName);
    }
    /**
     * @return The account name used for operating cluster. Changing this forces a new resource to be created.
     * 
     */
    public Optional<String> clusterOperatorAccountName() {
        return Optional.ofNullable(this.clusterOperatorAccountName);
    }
    /**
     * @return The subnet type of the SQL Virtual Machine cluster. Possible values are `MultiSubnet` and `SingleSubnet`. Changing this forces a new resource to be created.
     * 
     */
    public String clusterSubnetType() {
        return this.clusterSubnetType;
    }
    /**
     * @return The fully qualified name of the domain. Changing this forces a new resource to be created.
     * 
     */
    public String fqdn() {
        return this.fqdn;
    }
    /**
     * @return The organizational Unit path in which the nodes and cluster will be present. Changing this forces a new resource to be created.
     * 
     */
    public Optional<String> organizationalUnitPath() {
        return Optional.ofNullable(this.organizationalUnitPath);
    }
    /**
     * @return The account name under which SQL service will run on all participating SQL virtual machines in the cluster. Changing this forces a new resource to be created.
     * 
     */
    public Optional<String> sqlServiceAccountName() {
        return Optional.ofNullable(this.sqlServiceAccountName);
    }
    /**
     * @return The primary key of the Storage Account.
     * 
     */
    public Optional<String> storageAccountPrimaryKey() {
        return Optional.ofNullable(this.storageAccountPrimaryKey);
    }
    /**
     * @return The SAS URL to the Storage Container of the witness storage account. Changing this forces a new resource to be created.
     * 
     */
    public Optional<String> storageAccountUrl() {
        return Optional.ofNullable(this.storageAccountUrl);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(VirtualMachineGroupWsfcDomainProfile defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String clusterBootstrapAccountName;
        private @Nullable String clusterOperatorAccountName;
        private String clusterSubnetType;
        private String fqdn;
        private @Nullable String organizationalUnitPath;
        private @Nullable String sqlServiceAccountName;
        private @Nullable String storageAccountPrimaryKey;
        private @Nullable String storageAccountUrl;
        public Builder() {}
        public Builder(VirtualMachineGroupWsfcDomainProfile defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.clusterBootstrapAccountName = defaults.clusterBootstrapAccountName;
    	      this.clusterOperatorAccountName = defaults.clusterOperatorAccountName;
    	      this.clusterSubnetType = defaults.clusterSubnetType;
    	      this.fqdn = defaults.fqdn;
    	      this.organizationalUnitPath = defaults.organizationalUnitPath;
    	      this.sqlServiceAccountName = defaults.sqlServiceAccountName;
    	      this.storageAccountPrimaryKey = defaults.storageAccountPrimaryKey;
    	      this.storageAccountUrl = defaults.storageAccountUrl;
        }

        @CustomType.Setter
        public Builder clusterBootstrapAccountName(@Nullable String clusterBootstrapAccountName) {

            this.clusterBootstrapAccountName = clusterBootstrapAccountName;
            return this;
        }
        @CustomType.Setter
        public Builder clusterOperatorAccountName(@Nullable String clusterOperatorAccountName) {

            this.clusterOperatorAccountName = clusterOperatorAccountName;
            return this;
        }
        @CustomType.Setter
        public Builder clusterSubnetType(String clusterSubnetType) {
            if (clusterSubnetType == null) {
              throw new MissingRequiredPropertyException("VirtualMachineGroupWsfcDomainProfile", "clusterSubnetType");
            }
            this.clusterSubnetType = clusterSubnetType;
            return this;
        }
        @CustomType.Setter
        public Builder fqdn(String fqdn) {
            if (fqdn == null) {
              throw new MissingRequiredPropertyException("VirtualMachineGroupWsfcDomainProfile", "fqdn");
            }
            this.fqdn = fqdn;
            return this;
        }
        @CustomType.Setter
        public Builder organizationalUnitPath(@Nullable String organizationalUnitPath) {

            this.organizationalUnitPath = organizationalUnitPath;
            return this;
        }
        @CustomType.Setter
        public Builder sqlServiceAccountName(@Nullable String sqlServiceAccountName) {

            this.sqlServiceAccountName = sqlServiceAccountName;
            return this;
        }
        @CustomType.Setter
        public Builder storageAccountPrimaryKey(@Nullable String storageAccountPrimaryKey) {

            this.storageAccountPrimaryKey = storageAccountPrimaryKey;
            return this;
        }
        @CustomType.Setter
        public Builder storageAccountUrl(@Nullable String storageAccountUrl) {

            this.storageAccountUrl = storageAccountUrl;
            return this;
        }
        public VirtualMachineGroupWsfcDomainProfile build() {
            final var _resultValue = new VirtualMachineGroupWsfcDomainProfile();
            _resultValue.clusterBootstrapAccountName = clusterBootstrapAccountName;
            _resultValue.clusterOperatorAccountName = clusterOperatorAccountName;
            _resultValue.clusterSubnetType = clusterSubnetType;
            _resultValue.fqdn = fqdn;
            _resultValue.organizationalUnitPath = organizationalUnitPath;
            _resultValue.sqlServiceAccountName = sqlServiceAccountName;
            _resultValue.storageAccountPrimaryKey = storageAccountPrimaryKey;
            _resultValue.storageAccountUrl = storageAccountUrl;
            return _resultValue;
        }
    }
}
