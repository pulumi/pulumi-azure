// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.devtest.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetVirtualNetworkSubnetOverride {
    /**
     * @return The name of the subnet.
     * 
     */
    private final String labSubnetName;
    /**
     * @return The resource identifier for the subnet.
     * 
     */
    private final String resourceId;
    /**
     * @return Indicates if the subnet can be used for VM creation.  Possible values are `Allow`, `Default` and `Deny`.
     * 
     */
    private final String useInVmCreationPermission;
    private final String usePublicIpAddressPermission;
    /**
     * @return The virtual network pool associated with this subnet.
     * 
     */
    private final String virtualNetworkPoolName;

    @CustomType.Constructor
    private GetVirtualNetworkSubnetOverride(
        @CustomType.Parameter("labSubnetName") String labSubnetName,
        @CustomType.Parameter("resourceId") String resourceId,
        @CustomType.Parameter("useInVmCreationPermission") String useInVmCreationPermission,
        @CustomType.Parameter("usePublicIpAddressPermission") String usePublicIpAddressPermission,
        @CustomType.Parameter("virtualNetworkPoolName") String virtualNetworkPoolName) {
        this.labSubnetName = labSubnetName;
        this.resourceId = resourceId;
        this.useInVmCreationPermission = useInVmCreationPermission;
        this.usePublicIpAddressPermission = usePublicIpAddressPermission;
        this.virtualNetworkPoolName = virtualNetworkPoolName;
    }

    /**
     * @return The name of the subnet.
     * 
     */
    public String labSubnetName() {
        return this.labSubnetName;
    }
    /**
     * @return The resource identifier for the subnet.
     * 
     */
    public String resourceId() {
        return this.resourceId;
    }
    /**
     * @return Indicates if the subnet can be used for VM creation.  Possible values are `Allow`, `Default` and `Deny`.
     * 
     */
    public String useInVmCreationPermission() {
        return this.useInVmCreationPermission;
    }
    public String usePublicIpAddressPermission() {
        return this.usePublicIpAddressPermission;
    }
    /**
     * @return The virtual network pool associated with this subnet.
     * 
     */
    public String virtualNetworkPoolName() {
        return this.virtualNetworkPoolName;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetVirtualNetworkSubnetOverride defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String labSubnetName;
        private String resourceId;
        private String useInVmCreationPermission;
        private String usePublicIpAddressPermission;
        private String virtualNetworkPoolName;

        public Builder() {
    	      // Empty
        }

        public Builder(GetVirtualNetworkSubnetOverride defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.labSubnetName = defaults.labSubnetName;
    	      this.resourceId = defaults.resourceId;
    	      this.useInVmCreationPermission = defaults.useInVmCreationPermission;
    	      this.usePublicIpAddressPermission = defaults.usePublicIpAddressPermission;
    	      this.virtualNetworkPoolName = defaults.virtualNetworkPoolName;
        }

        public Builder labSubnetName(String labSubnetName) {
            this.labSubnetName = Objects.requireNonNull(labSubnetName);
            return this;
        }
        public Builder resourceId(String resourceId) {
            this.resourceId = Objects.requireNonNull(resourceId);
            return this;
        }
        public Builder useInVmCreationPermission(String useInVmCreationPermission) {
            this.useInVmCreationPermission = Objects.requireNonNull(useInVmCreationPermission);
            return this;
        }
        public Builder usePublicIpAddressPermission(String usePublicIpAddressPermission) {
            this.usePublicIpAddressPermission = Objects.requireNonNull(usePublicIpAddressPermission);
            return this;
        }
        public Builder virtualNetworkPoolName(String virtualNetworkPoolName) {
            this.virtualNetworkPoolName = Objects.requireNonNull(virtualNetworkPoolName);
            return this;
        }        public GetVirtualNetworkSubnetOverride build() {
            return new GetVirtualNetworkSubnetOverride(labSubnetName, resourceId, useInVmCreationPermission, usePublicIpAddressPermission, virtualNetworkPoolName);
        }
    }
}
