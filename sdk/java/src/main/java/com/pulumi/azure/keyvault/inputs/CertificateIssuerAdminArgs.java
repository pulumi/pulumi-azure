// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.keyvault.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CertificateIssuerAdminArgs extends com.pulumi.resources.ResourceArgs {

    public static final CertificateIssuerAdminArgs Empty = new CertificateIssuerAdminArgs();

    /**
     * E-mail address of the admin.
     * 
     */
    @Import(name="emailAddress", required=true)
    private Output<String> emailAddress;

    /**
     * @return E-mail address of the admin.
     * 
     */
    public Output<String> emailAddress() {
        return this.emailAddress;
    }

    /**
     * First name of the admin.
     * 
     */
    @Import(name="firstName")
    private @Nullable Output<String> firstName;

    /**
     * @return First name of the admin.
     * 
     */
    public Optional<Output<String>> firstName() {
        return Optional.ofNullable(this.firstName);
    }

    /**
     * Last name of the admin.
     * 
     */
    @Import(name="lastName")
    private @Nullable Output<String> lastName;

    /**
     * @return Last name of the admin.
     * 
     */
    public Optional<Output<String>> lastName() {
        return Optional.ofNullable(this.lastName);
    }

    /**
     * Phone number of the admin.
     * 
     */
    @Import(name="phone")
    private @Nullable Output<String> phone;

    /**
     * @return Phone number of the admin.
     * 
     */
    public Optional<Output<String>> phone() {
        return Optional.ofNullable(this.phone);
    }

    private CertificateIssuerAdminArgs() {}

    private CertificateIssuerAdminArgs(CertificateIssuerAdminArgs $) {
        this.emailAddress = $.emailAddress;
        this.firstName = $.firstName;
        this.lastName = $.lastName;
        this.phone = $.phone;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CertificateIssuerAdminArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CertificateIssuerAdminArgs $;

        public Builder() {
            $ = new CertificateIssuerAdminArgs();
        }

        public Builder(CertificateIssuerAdminArgs defaults) {
            $ = new CertificateIssuerAdminArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param emailAddress E-mail address of the admin.
         * 
         * @return builder
         * 
         */
        public Builder emailAddress(Output<String> emailAddress) {
            $.emailAddress = emailAddress;
            return this;
        }

        /**
         * @param emailAddress E-mail address of the admin.
         * 
         * @return builder
         * 
         */
        public Builder emailAddress(String emailAddress) {
            return emailAddress(Output.of(emailAddress));
        }

        /**
         * @param firstName First name of the admin.
         * 
         * @return builder
         * 
         */
        public Builder firstName(@Nullable Output<String> firstName) {
            $.firstName = firstName;
            return this;
        }

        /**
         * @param firstName First name of the admin.
         * 
         * @return builder
         * 
         */
        public Builder firstName(String firstName) {
            return firstName(Output.of(firstName));
        }

        /**
         * @param lastName Last name of the admin.
         * 
         * @return builder
         * 
         */
        public Builder lastName(@Nullable Output<String> lastName) {
            $.lastName = lastName;
            return this;
        }

        /**
         * @param lastName Last name of the admin.
         * 
         * @return builder
         * 
         */
        public Builder lastName(String lastName) {
            return lastName(Output.of(lastName));
        }

        /**
         * @param phone Phone number of the admin.
         * 
         * @return builder
         * 
         */
        public Builder phone(@Nullable Output<String> phone) {
            $.phone = phone;
            return this;
        }

        /**
         * @param phone Phone number of the admin.
         * 
         * @return builder
         * 
         */
        public Builder phone(String phone) {
            return phone(Output.of(phone));
        }

        public CertificateIssuerAdminArgs build() {
            if ($.emailAddress == null) {
                throw new MissingRequiredPropertyException("CertificateIssuerAdminArgs", "emailAddress");
            }
            return $;
        }
    }

}
