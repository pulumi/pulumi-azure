// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.apimanagement;

import com.pulumi.azure.Utilities;
import com.pulumi.azure.apimanagement.GlobalSchemaArgs;
import com.pulumi.azure.apimanagement.inputs.GlobalSchemaState;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Manages a Global Schema within an API Management Service.
 * 
 * ## Example Usage
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.azure.core.ResourceGroup;
 * import com.pulumi.azure.core.ResourceGroupArgs;
 * import com.pulumi.azure.apimanagement.Service;
 * import com.pulumi.azure.apimanagement.ServiceArgs;
 * import com.pulumi.azure.apimanagement.GlobalSchema;
 * import com.pulumi.azure.apimanagement.GlobalSchemaArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var exampleResourceGroup = new ResourceGroup(&#34;exampleResourceGroup&#34;, ResourceGroupArgs.builder()        
 *             .location(&#34;West Europe&#34;)
 *             .build());
 * 
 *         var exampleService = new Service(&#34;exampleService&#34;, ServiceArgs.builder()        
 *             .location(exampleResourceGroup.location())
 *             .resourceGroupName(exampleResourceGroup.name())
 *             .publisherName(&#34;pub1&#34;)
 *             .publisherEmail(&#34;pub1@email.com&#34;)
 *             .skuName(&#34;Consumption_0&#34;)
 *             .build());
 * 
 *         var exampleGlobalSchema = new GlobalSchema(&#34;exampleGlobalSchema&#34;, GlobalSchemaArgs.builder()        
 *             .schemaId(&#34;example-schema1&#34;)
 *             .apiManagementName(exampleService.name())
 *             .resourceGroupName(exampleResourceGroup.name())
 *             .type(&#34;xml&#34;)
 *             .value(Files.readString(Paths.get(&#34;api_management_api_schema.xml&#34;)))
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * API Management API Schema&#39;s can be imported using the `resource id`, e.g.
 * 
 * ```sh
 *  $ pulumi import azure:apimanagement/globalSchema:GlobalSchema example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/mygroup1/providers/Microsoft.ApiManagement/service/instance1/schemas/schema1
 * ```
 * 
 */
@ResourceType(type="azure:apimanagement/globalSchema:GlobalSchema")
public class GlobalSchema extends com.pulumi.resources.CustomResource {
    /**
     * The Name of the API Management Service where the API exists. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="apiManagementName", type=String.class, parameters={})
    private Output<String> apiManagementName;

    /**
     * @return The Name of the API Management Service where the API exists. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> apiManagementName() {
        return this.apiManagementName;
    }
    /**
     * The description of the schema.
     * 
     */
    @Export(name="description", type=String.class, parameters={})
    private Output</* @Nullable */ String> description;

    /**
     * @return The description of the schema.
     * 
     */
    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    /**
     * The Name of the Resource Group in which the API Management Service exists. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="resourceGroupName", type=String.class, parameters={})
    private Output<String> resourceGroupName;

    /**
     * @return The Name of the Resource Group in which the API Management Service exists. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }
    /**
     * A unique identifier for this Schema. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="schemaId", type=String.class, parameters={})
    private Output<String> schemaId;

    /**
     * @return A unique identifier for this Schema. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> schemaId() {
        return this.schemaId;
    }
    /**
     * The content type of the Schema. Possible values are `xml` and `json`.
     * 
     */
    @Export(name="type", type=String.class, parameters={})
    private Output<String> type;

    /**
     * @return The content type of the Schema. Possible values are `xml` and `json`.
     * 
     */
    public Output<String> type() {
        return this.type;
    }
    /**
     * The string defining the document representing the Schema.
     * 
     */
    @Export(name="value", type=String.class, parameters={})
    private Output<String> value;

    /**
     * @return The string defining the document representing the Schema.
     * 
     */
    public Output<String> value() {
        return this.value;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public GlobalSchema(String name) {
        this(name, GlobalSchemaArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public GlobalSchema(String name, GlobalSchemaArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public GlobalSchema(String name, GlobalSchemaArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:apimanagement/globalSchema:GlobalSchema", name, args == null ? GlobalSchemaArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private GlobalSchema(String name, Output<String> id, @Nullable GlobalSchemaState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:apimanagement/globalSchema:GlobalSchema", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static GlobalSchema get(String name, Output<String> id, @Nullable GlobalSchemaState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new GlobalSchema(name, id, state, options);
    }
}
