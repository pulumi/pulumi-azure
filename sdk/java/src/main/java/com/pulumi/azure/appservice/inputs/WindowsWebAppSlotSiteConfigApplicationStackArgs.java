// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.appservice.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class WindowsWebAppSlotSiteConfigApplicationStackArgs extends com.pulumi.resources.ResourceArgs {

    public static final WindowsWebAppSlotSiteConfigApplicationStackArgs Empty = new WindowsWebAppSlotSiteConfigApplicationStackArgs();

    /**
     * The Application Stack for the Windows Web App. Possible values include `dotnet`, `dotnetcore`, `node`, `python`, `php`, and `java`.
     * 
     * &gt; **NOTE:** Whilst this property is Optional omitting it can cause unexpected behaviour, in particular for display of settings in the Azure Portal.
     * 
     */
    @Import(name="currentStack")
    private @Nullable Output<String> currentStack;

    /**
     * @return The Application Stack for the Windows Web App. Possible values include `dotnet`, `dotnetcore`, `node`, `python`, `php`, and `java`.
     * 
     * &gt; **NOTE:** Whilst this property is Optional omitting it can cause unexpected behaviour, in particular for display of settings in the Azure Portal.
     * 
     */
    public Optional<Output<String>> currentStack() {
        return Optional.ofNullable(this.currentStack);
    }

    /**
     * The name of the Docker Container. For example `azure-app-service/samples/aspnethelloworld`
     * 
     */
    @Import(name="dockerContainerName")
    private @Nullable Output<String> dockerContainerName;

    /**
     * @return The name of the Docker Container. For example `azure-app-service/samples/aspnethelloworld`
     * 
     */
    public Optional<Output<String>> dockerContainerName() {
        return Optional.ofNullable(this.dockerContainerName);
    }

    /**
     * The registry Host on which the specified Docker Container can be located. For example `mcr.microsoft.com`
     * 
     */
    @Import(name="dockerContainerRegistry")
    private @Nullable Output<String> dockerContainerRegistry;

    /**
     * @return The registry Host on which the specified Docker Container can be located. For example `mcr.microsoft.com`
     * 
     */
    public Optional<Output<String>> dockerContainerRegistry() {
        return Optional.ofNullable(this.dockerContainerRegistry);
    }

    /**
     * The Image Tag of the specified Docker Container to use. For example `latest`
     * 
     */
    @Import(name="dockerContainerTag")
    private @Nullable Output<String> dockerContainerTag;

    /**
     * @return The Image Tag of the specified Docker Container to use. For example `latest`
     * 
     */
    public Optional<Output<String>> dockerContainerTag() {
        return Optional.ofNullable(this.dockerContainerTag);
    }

    /**
     * The version of .NET to use when `current_stack` is set to `dotnetcore`. Possible values include `v4.0`.
     * 
     */
    @Import(name="dotnetCoreVersion")
    private @Nullable Output<String> dotnetCoreVersion;

    /**
     * @return The version of .NET to use when `current_stack` is set to `dotnetcore`. Possible values include `v4.0`.
     * 
     */
    public Optional<Output<String>> dotnetCoreVersion() {
        return Optional.ofNullable(this.dotnetCoreVersion);
    }

    /**
     * The version of .NET to use when `current_stack` is set to `dotnet`. Possible values include `v2.0`,`v3.0`, `v4.0`, `v5.0`, `v6.0` and `v7.0`.
     * 
     */
    @Import(name="dotnetVersion")
    private @Nullable Output<String> dotnetVersion;

    /**
     * @return The version of .NET to use when `current_stack` is set to `dotnet`. Possible values include `v2.0`,`v3.0`, `v4.0`, `v5.0`, `v6.0` and `v7.0`.
     * 
     */
    public Optional<Output<String>> dotnetVersion() {
        return Optional.ofNullable(this.dotnetVersion);
    }

    /**
     * @deprecated
     * this property has been deprecated in favour of `tomcat_version` and `java_embedded_server_enabled`
     * 
     */
    @Deprecated /* this property has been deprecated in favour of `tomcat_version` and `java_embedded_server_enabled` */
    @Import(name="javaContainer")
    private @Nullable Output<String> javaContainer;

    /**
     * @deprecated
     * this property has been deprecated in favour of `tomcat_version` and `java_embedded_server_enabled`
     * 
     */
    @Deprecated /* this property has been deprecated in favour of `tomcat_version` and `java_embedded_server_enabled` */
    public Optional<Output<String>> javaContainer() {
        return Optional.ofNullable(this.javaContainer);
    }

    /**
     * @deprecated
     * This property has been deprecated in favour of `tomcat_version` and `java_embedded_server_enabled`
     * 
     */
    @Deprecated /* This property has been deprecated in favour of `tomcat_version` and `java_embedded_server_enabled` */
    @Import(name="javaContainerVersion")
    private @Nullable Output<String> javaContainerVersion;

    /**
     * @deprecated
     * This property has been deprecated in favour of `tomcat_version` and `java_embedded_server_enabled`
     * 
     */
    @Deprecated /* This property has been deprecated in favour of `tomcat_version` and `java_embedded_server_enabled` */
    public Optional<Output<String>> javaContainerVersion() {
        return Optional.ofNullable(this.javaContainerVersion);
    }

    /**
     * Should the Java Embedded Server (Java SE) be used to run the app.
     * 
     */
    @Import(name="javaEmbeddedServerEnabled")
    private @Nullable Output<Boolean> javaEmbeddedServerEnabled;

    /**
     * @return Should the Java Embedded Server (Java SE) be used to run the app.
     * 
     */
    public Optional<Output<Boolean>> javaEmbeddedServerEnabled() {
        return Optional.ofNullable(this.javaEmbeddedServerEnabled);
    }

    /**
     * The version of Java to use when `current_stack` is set to `java`. Possible values include `1.7`, `1.8`, `11` and `17`. Required with `java_container` and `java_container_version`.
     * 
     * &gt; **NOTE:** For compatible combinations of `java_version`, `java_container` and `java_container_version` users can use `az webapp list-runtimes` from command line.
     * 
     */
    @Import(name="javaVersion")
    private @Nullable Output<String> javaVersion;

    /**
     * @return The version of Java to use when `current_stack` is set to `java`. Possible values include `1.7`, `1.8`, `11` and `17`. Required with `java_container` and `java_container_version`.
     * 
     * &gt; **NOTE:** For compatible combinations of `java_version`, `java_container` and `java_container_version` users can use `az webapp list-runtimes` from command line.
     * 
     */
    public Optional<Output<String>> javaVersion() {
        return Optional.ofNullable(this.javaVersion);
    }

    /**
     * The version of node to use when `current_stack` is set to `node`. Possible values include `~12`, `~14`, `~16`, and `~18`.
     * 
     * &gt; **NOTE:** This property conflicts with `java_version`.
     * 
     */
    @Import(name="nodeVersion")
    private @Nullable Output<String> nodeVersion;

    /**
     * @return The version of node to use when `current_stack` is set to `node`. Possible values include `~12`, `~14`, `~16`, and `~18`.
     * 
     * &gt; **NOTE:** This property conflicts with `java_version`.
     * 
     */
    public Optional<Output<String>> nodeVersion() {
        return Optional.ofNullable(this.nodeVersion);
    }

    /**
     * The version of PHP to use when `current_stack` is set to `php`. Possible values are `7.1`, `7.4` and `Off`.
     * 
     * &gt; **NOTE:** The value `Off` is used to signify latest supported by the service.
     * 
     */
    @Import(name="phpVersion")
    private @Nullable Output<String> phpVersion;

    /**
     * @return The version of PHP to use when `current_stack` is set to `php`. Possible values are `7.1`, `7.4` and `Off`.
     * 
     * &gt; **NOTE:** The value `Off` is used to signify latest supported by the service.
     * 
     */
    public Optional<Output<String>> phpVersion() {
        return Optional.ofNullable(this.phpVersion);
    }

    /**
     * The app is a Python app. Defaults to `false`.
     * 
     */
    @Import(name="python")
    private @Nullable Output<Boolean> python;

    /**
     * @return The app is a Python app. Defaults to `false`.
     * 
     */
    public Optional<Output<Boolean>> python() {
        return Optional.ofNullable(this.python);
    }

    /**
     * @deprecated
     * This property is deprecated. Values set are not used by the service.
     * 
     */
    @Deprecated /* This property is deprecated. Values set are not used by the service. */
    @Import(name="pythonVersion")
    private @Nullable Output<String> pythonVersion;

    /**
     * @deprecated
     * This property is deprecated. Values set are not used by the service.
     * 
     */
    @Deprecated /* This property is deprecated. Values set are not used by the service. */
    public Optional<Output<String>> pythonVersion() {
        return Optional.ofNullable(this.pythonVersion);
    }

    /**
     * The version of Tomcat the Java App should use.
     * 
     * &gt; **NOTE:** See the official documentation for current supported versions.
     * 
     */
    @Import(name="tomcatVersion")
    private @Nullable Output<String> tomcatVersion;

    /**
     * @return The version of Tomcat the Java App should use.
     * 
     * &gt; **NOTE:** See the official documentation for current supported versions.
     * 
     */
    public Optional<Output<String>> tomcatVersion() {
        return Optional.ofNullable(this.tomcatVersion);
    }

    private WindowsWebAppSlotSiteConfigApplicationStackArgs() {}

    private WindowsWebAppSlotSiteConfigApplicationStackArgs(WindowsWebAppSlotSiteConfigApplicationStackArgs $) {
        this.currentStack = $.currentStack;
        this.dockerContainerName = $.dockerContainerName;
        this.dockerContainerRegistry = $.dockerContainerRegistry;
        this.dockerContainerTag = $.dockerContainerTag;
        this.dotnetCoreVersion = $.dotnetCoreVersion;
        this.dotnetVersion = $.dotnetVersion;
        this.javaContainer = $.javaContainer;
        this.javaContainerVersion = $.javaContainerVersion;
        this.javaEmbeddedServerEnabled = $.javaEmbeddedServerEnabled;
        this.javaVersion = $.javaVersion;
        this.nodeVersion = $.nodeVersion;
        this.phpVersion = $.phpVersion;
        this.python = $.python;
        this.pythonVersion = $.pythonVersion;
        this.tomcatVersion = $.tomcatVersion;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(WindowsWebAppSlotSiteConfigApplicationStackArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private WindowsWebAppSlotSiteConfigApplicationStackArgs $;

        public Builder() {
            $ = new WindowsWebAppSlotSiteConfigApplicationStackArgs();
        }

        public Builder(WindowsWebAppSlotSiteConfigApplicationStackArgs defaults) {
            $ = new WindowsWebAppSlotSiteConfigApplicationStackArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param currentStack The Application Stack for the Windows Web App. Possible values include `dotnet`, `dotnetcore`, `node`, `python`, `php`, and `java`.
         * 
         * &gt; **NOTE:** Whilst this property is Optional omitting it can cause unexpected behaviour, in particular for display of settings in the Azure Portal.
         * 
         * @return builder
         * 
         */
        public Builder currentStack(@Nullable Output<String> currentStack) {
            $.currentStack = currentStack;
            return this;
        }

        /**
         * @param currentStack The Application Stack for the Windows Web App. Possible values include `dotnet`, `dotnetcore`, `node`, `python`, `php`, and `java`.
         * 
         * &gt; **NOTE:** Whilst this property is Optional omitting it can cause unexpected behaviour, in particular for display of settings in the Azure Portal.
         * 
         * @return builder
         * 
         */
        public Builder currentStack(String currentStack) {
            return currentStack(Output.of(currentStack));
        }

        /**
         * @param dockerContainerName The name of the Docker Container. For example `azure-app-service/samples/aspnethelloworld`
         * 
         * @return builder
         * 
         */
        public Builder dockerContainerName(@Nullable Output<String> dockerContainerName) {
            $.dockerContainerName = dockerContainerName;
            return this;
        }

        /**
         * @param dockerContainerName The name of the Docker Container. For example `azure-app-service/samples/aspnethelloworld`
         * 
         * @return builder
         * 
         */
        public Builder dockerContainerName(String dockerContainerName) {
            return dockerContainerName(Output.of(dockerContainerName));
        }

        /**
         * @param dockerContainerRegistry The registry Host on which the specified Docker Container can be located. For example `mcr.microsoft.com`
         * 
         * @return builder
         * 
         */
        public Builder dockerContainerRegistry(@Nullable Output<String> dockerContainerRegistry) {
            $.dockerContainerRegistry = dockerContainerRegistry;
            return this;
        }

        /**
         * @param dockerContainerRegistry The registry Host on which the specified Docker Container can be located. For example `mcr.microsoft.com`
         * 
         * @return builder
         * 
         */
        public Builder dockerContainerRegistry(String dockerContainerRegistry) {
            return dockerContainerRegistry(Output.of(dockerContainerRegistry));
        }

        /**
         * @param dockerContainerTag The Image Tag of the specified Docker Container to use. For example `latest`
         * 
         * @return builder
         * 
         */
        public Builder dockerContainerTag(@Nullable Output<String> dockerContainerTag) {
            $.dockerContainerTag = dockerContainerTag;
            return this;
        }

        /**
         * @param dockerContainerTag The Image Tag of the specified Docker Container to use. For example `latest`
         * 
         * @return builder
         * 
         */
        public Builder dockerContainerTag(String dockerContainerTag) {
            return dockerContainerTag(Output.of(dockerContainerTag));
        }

        /**
         * @param dotnetCoreVersion The version of .NET to use when `current_stack` is set to `dotnetcore`. Possible values include `v4.0`.
         * 
         * @return builder
         * 
         */
        public Builder dotnetCoreVersion(@Nullable Output<String> dotnetCoreVersion) {
            $.dotnetCoreVersion = dotnetCoreVersion;
            return this;
        }

        /**
         * @param dotnetCoreVersion The version of .NET to use when `current_stack` is set to `dotnetcore`. Possible values include `v4.0`.
         * 
         * @return builder
         * 
         */
        public Builder dotnetCoreVersion(String dotnetCoreVersion) {
            return dotnetCoreVersion(Output.of(dotnetCoreVersion));
        }

        /**
         * @param dotnetVersion The version of .NET to use when `current_stack` is set to `dotnet`. Possible values include `v2.0`,`v3.0`, `v4.0`, `v5.0`, `v6.0` and `v7.0`.
         * 
         * @return builder
         * 
         */
        public Builder dotnetVersion(@Nullable Output<String> dotnetVersion) {
            $.dotnetVersion = dotnetVersion;
            return this;
        }

        /**
         * @param dotnetVersion The version of .NET to use when `current_stack` is set to `dotnet`. Possible values include `v2.0`,`v3.0`, `v4.0`, `v5.0`, `v6.0` and `v7.0`.
         * 
         * @return builder
         * 
         */
        public Builder dotnetVersion(String dotnetVersion) {
            return dotnetVersion(Output.of(dotnetVersion));
        }

        /**
         * @return builder
         * 
         * @deprecated
         * this property has been deprecated in favour of `tomcat_version` and `java_embedded_server_enabled`
         * 
         */
        @Deprecated /* this property has been deprecated in favour of `tomcat_version` and `java_embedded_server_enabled` */
        public Builder javaContainer(@Nullable Output<String> javaContainer) {
            $.javaContainer = javaContainer;
            return this;
        }

        /**
         * @return builder
         * 
         * @deprecated
         * this property has been deprecated in favour of `tomcat_version` and `java_embedded_server_enabled`
         * 
         */
        @Deprecated /* this property has been deprecated in favour of `tomcat_version` and `java_embedded_server_enabled` */
        public Builder javaContainer(String javaContainer) {
            return javaContainer(Output.of(javaContainer));
        }

        /**
         * @return builder
         * 
         * @deprecated
         * This property has been deprecated in favour of `tomcat_version` and `java_embedded_server_enabled`
         * 
         */
        @Deprecated /* This property has been deprecated in favour of `tomcat_version` and `java_embedded_server_enabled` */
        public Builder javaContainerVersion(@Nullable Output<String> javaContainerVersion) {
            $.javaContainerVersion = javaContainerVersion;
            return this;
        }

        /**
         * @return builder
         * 
         * @deprecated
         * This property has been deprecated in favour of `tomcat_version` and `java_embedded_server_enabled`
         * 
         */
        @Deprecated /* This property has been deprecated in favour of `tomcat_version` and `java_embedded_server_enabled` */
        public Builder javaContainerVersion(String javaContainerVersion) {
            return javaContainerVersion(Output.of(javaContainerVersion));
        }

        /**
         * @param javaEmbeddedServerEnabled Should the Java Embedded Server (Java SE) be used to run the app.
         * 
         * @return builder
         * 
         */
        public Builder javaEmbeddedServerEnabled(@Nullable Output<Boolean> javaEmbeddedServerEnabled) {
            $.javaEmbeddedServerEnabled = javaEmbeddedServerEnabled;
            return this;
        }

        /**
         * @param javaEmbeddedServerEnabled Should the Java Embedded Server (Java SE) be used to run the app.
         * 
         * @return builder
         * 
         */
        public Builder javaEmbeddedServerEnabled(Boolean javaEmbeddedServerEnabled) {
            return javaEmbeddedServerEnabled(Output.of(javaEmbeddedServerEnabled));
        }

        /**
         * @param javaVersion The version of Java to use when `current_stack` is set to `java`. Possible values include `1.7`, `1.8`, `11` and `17`. Required with `java_container` and `java_container_version`.
         * 
         * &gt; **NOTE:** For compatible combinations of `java_version`, `java_container` and `java_container_version` users can use `az webapp list-runtimes` from command line.
         * 
         * @return builder
         * 
         */
        public Builder javaVersion(@Nullable Output<String> javaVersion) {
            $.javaVersion = javaVersion;
            return this;
        }

        /**
         * @param javaVersion The version of Java to use when `current_stack` is set to `java`. Possible values include `1.7`, `1.8`, `11` and `17`. Required with `java_container` and `java_container_version`.
         * 
         * &gt; **NOTE:** For compatible combinations of `java_version`, `java_container` and `java_container_version` users can use `az webapp list-runtimes` from command line.
         * 
         * @return builder
         * 
         */
        public Builder javaVersion(String javaVersion) {
            return javaVersion(Output.of(javaVersion));
        }

        /**
         * @param nodeVersion The version of node to use when `current_stack` is set to `node`. Possible values include `~12`, `~14`, `~16`, and `~18`.
         * 
         * &gt; **NOTE:** This property conflicts with `java_version`.
         * 
         * @return builder
         * 
         */
        public Builder nodeVersion(@Nullable Output<String> nodeVersion) {
            $.nodeVersion = nodeVersion;
            return this;
        }

        /**
         * @param nodeVersion The version of node to use when `current_stack` is set to `node`. Possible values include `~12`, `~14`, `~16`, and `~18`.
         * 
         * &gt; **NOTE:** This property conflicts with `java_version`.
         * 
         * @return builder
         * 
         */
        public Builder nodeVersion(String nodeVersion) {
            return nodeVersion(Output.of(nodeVersion));
        }

        /**
         * @param phpVersion The version of PHP to use when `current_stack` is set to `php`. Possible values are `7.1`, `7.4` and `Off`.
         * 
         * &gt; **NOTE:** The value `Off` is used to signify latest supported by the service.
         * 
         * @return builder
         * 
         */
        public Builder phpVersion(@Nullable Output<String> phpVersion) {
            $.phpVersion = phpVersion;
            return this;
        }

        /**
         * @param phpVersion The version of PHP to use when `current_stack` is set to `php`. Possible values are `7.1`, `7.4` and `Off`.
         * 
         * &gt; **NOTE:** The value `Off` is used to signify latest supported by the service.
         * 
         * @return builder
         * 
         */
        public Builder phpVersion(String phpVersion) {
            return phpVersion(Output.of(phpVersion));
        }

        /**
         * @param python The app is a Python app. Defaults to `false`.
         * 
         * @return builder
         * 
         */
        public Builder python(@Nullable Output<Boolean> python) {
            $.python = python;
            return this;
        }

        /**
         * @param python The app is a Python app. Defaults to `false`.
         * 
         * @return builder
         * 
         */
        public Builder python(Boolean python) {
            return python(Output.of(python));
        }

        /**
         * @return builder
         * 
         * @deprecated
         * This property is deprecated. Values set are not used by the service.
         * 
         */
        @Deprecated /* This property is deprecated. Values set are not used by the service. */
        public Builder pythonVersion(@Nullable Output<String> pythonVersion) {
            $.pythonVersion = pythonVersion;
            return this;
        }

        /**
         * @return builder
         * 
         * @deprecated
         * This property is deprecated. Values set are not used by the service.
         * 
         */
        @Deprecated /* This property is deprecated. Values set are not used by the service. */
        public Builder pythonVersion(String pythonVersion) {
            return pythonVersion(Output.of(pythonVersion));
        }

        /**
         * @param tomcatVersion The version of Tomcat the Java App should use.
         * 
         * &gt; **NOTE:** See the official documentation for current supported versions.
         * 
         * @return builder
         * 
         */
        public Builder tomcatVersion(@Nullable Output<String> tomcatVersion) {
            $.tomcatVersion = tomcatVersion;
            return this;
        }

        /**
         * @param tomcatVersion The version of Tomcat the Java App should use.
         * 
         * &gt; **NOTE:** See the official documentation for current supported versions.
         * 
         * @return builder
         * 
         */
        public Builder tomcatVersion(String tomcatVersion) {
            return tomcatVersion(Output.of(tomcatVersion));
        }

        public WindowsWebAppSlotSiteConfigApplicationStackArgs build() {
            return $;
        }
    }

}
