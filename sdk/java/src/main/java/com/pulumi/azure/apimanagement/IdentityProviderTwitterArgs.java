// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.apimanagement;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class IdentityProviderTwitterArgs extends com.pulumi.resources.ResourceArgs {

    public static final IdentityProviderTwitterArgs Empty = new IdentityProviderTwitterArgs();

    /**
     * App Consumer API key for Twitter.
     * 
     */
    @Import(name="apiKey", required=true)
    private Output<String> apiKey;

    /**
     * @return App Consumer API key for Twitter.
     * 
     */
    public Output<String> apiKey() {
        return this.apiKey;
    }

    /**
     * The Name of the API Management Service where this Twitter Identity Provider should be created. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="apiManagementName", required=true)
    private Output<String> apiManagementName;

    /**
     * @return The Name of the API Management Service where this Twitter Identity Provider should be created. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> apiManagementName() {
        return this.apiManagementName;
    }

    /**
     * App Consumer API secret key for Twitter.
     * 
     */
    @Import(name="apiSecretKey", required=true)
    private Output<String> apiSecretKey;

    /**
     * @return App Consumer API secret key for Twitter.
     * 
     */
    public Output<String> apiSecretKey() {
        return this.apiSecretKey;
    }

    /**
     * The Name of the Resource Group where the API Management Service exists. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    /**
     * @return The Name of the Resource Group where the API Management Service exists. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    private IdentityProviderTwitterArgs() {}

    private IdentityProviderTwitterArgs(IdentityProviderTwitterArgs $) {
        this.apiKey = $.apiKey;
        this.apiManagementName = $.apiManagementName;
        this.apiSecretKey = $.apiSecretKey;
        this.resourceGroupName = $.resourceGroupName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(IdentityProviderTwitterArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private IdentityProviderTwitterArgs $;

        public Builder() {
            $ = new IdentityProviderTwitterArgs();
        }

        public Builder(IdentityProviderTwitterArgs defaults) {
            $ = new IdentityProviderTwitterArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param apiKey App Consumer API key for Twitter.
         * 
         * @return builder
         * 
         */
        public Builder apiKey(Output<String> apiKey) {
            $.apiKey = apiKey;
            return this;
        }

        /**
         * @param apiKey App Consumer API key for Twitter.
         * 
         * @return builder
         * 
         */
        public Builder apiKey(String apiKey) {
            return apiKey(Output.of(apiKey));
        }

        /**
         * @param apiManagementName The Name of the API Management Service where this Twitter Identity Provider should be created. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder apiManagementName(Output<String> apiManagementName) {
            $.apiManagementName = apiManagementName;
            return this;
        }

        /**
         * @param apiManagementName The Name of the API Management Service where this Twitter Identity Provider should be created. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder apiManagementName(String apiManagementName) {
            return apiManagementName(Output.of(apiManagementName));
        }

        /**
         * @param apiSecretKey App Consumer API secret key for Twitter.
         * 
         * @return builder
         * 
         */
        public Builder apiSecretKey(Output<String> apiSecretKey) {
            $.apiSecretKey = apiSecretKey;
            return this;
        }

        /**
         * @param apiSecretKey App Consumer API secret key for Twitter.
         * 
         * @return builder
         * 
         */
        public Builder apiSecretKey(String apiSecretKey) {
            return apiSecretKey(Output.of(apiSecretKey));
        }

        /**
         * @param resourceGroupName The Name of the Resource Group where the API Management Service exists. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName The Name of the Resource Group where the API Management Service exists. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        public IdentityProviderTwitterArgs build() {
            if ($.apiKey == null) {
                throw new MissingRequiredPropertyException("IdentityProviderTwitterArgs", "apiKey");
            }
            if ($.apiManagementName == null) {
                throw new MissingRequiredPropertyException("IdentityProviderTwitterArgs", "apiManagementName");
            }
            if ($.apiSecretKey == null) {
                throw new MissingRequiredPropertyException("IdentityProviderTwitterArgs", "apiSecretKey");
            }
            if ($.resourceGroupName == null) {
                throw new MissingRequiredPropertyException("IdentityProviderTwitterArgs", "resourceGroupName");
            }
            return $;
        }
    }

}
