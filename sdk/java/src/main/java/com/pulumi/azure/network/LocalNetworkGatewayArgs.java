// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.network;

import com.pulumi.azure.network.inputs.LocalNetworkGatewayBgpSettingsArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class LocalNetworkGatewayArgs extends com.pulumi.resources.ResourceArgs {

    public static final LocalNetworkGatewayArgs Empty = new LocalNetworkGatewayArgs();

    /**
     * The list of string CIDRs representing the address spaces the gateway exposes.
     * 
     */
    @Import(name="addressSpaces")
    private @Nullable Output<List<String>> addressSpaces;

    /**
     * @return The list of string CIDRs representing the address spaces the gateway exposes.
     * 
     */
    public Optional<Output<List<String>>> addressSpaces() {
        return Optional.ofNullable(this.addressSpaces);
    }

    /**
     * A `bgp_settings` block as defined below containing the Local Network Gateway&#39;s BGP speaker settings.
     * 
     */
    @Import(name="bgpSettings")
    private @Nullable Output<LocalNetworkGatewayBgpSettingsArgs> bgpSettings;

    /**
     * @return A `bgp_settings` block as defined below containing the Local Network Gateway&#39;s BGP speaker settings.
     * 
     */
    public Optional<Output<LocalNetworkGatewayBgpSettingsArgs>> bgpSettings() {
        return Optional.ofNullable(this.bgpSettings);
    }

    /**
     * The gateway IP address to connect with.
     * 
     */
    @Import(name="gatewayAddress")
    private @Nullable Output<String> gatewayAddress;

    /**
     * @return The gateway IP address to connect with.
     * 
     */
    public Optional<Output<String>> gatewayAddress() {
        return Optional.ofNullable(this.gatewayAddress);
    }

    /**
     * The gateway FQDN to connect with.
     * 
     * &gt; **NOTE:** Either `gateway_address` or `gateway_fqdn` should be specified.
     * 
     */
    @Import(name="gatewayFqdn")
    private @Nullable Output<String> gatewayFqdn;

    /**
     * @return The gateway FQDN to connect with.
     * 
     * &gt; **NOTE:** Either `gateway_address` or `gateway_fqdn` should be specified.
     * 
     */
    public Optional<Output<String>> gatewayFqdn() {
        return Optional.ofNullable(this.gatewayFqdn);
    }

    /**
     * The location/region where the local network gateway is created. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="location")
    private @Nullable Output<String> location;

    /**
     * @return The location/region where the local network gateway is created. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * The name of the local network gateway. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the local network gateway. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The name of the resource group in which to create the local network gateway. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    /**
     * @return The name of the resource group in which to create the local network gateway. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * A mapping of tags to assign to the resource.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return A mapping of tags to assign to the resource.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private LocalNetworkGatewayArgs() {}

    private LocalNetworkGatewayArgs(LocalNetworkGatewayArgs $) {
        this.addressSpaces = $.addressSpaces;
        this.bgpSettings = $.bgpSettings;
        this.gatewayAddress = $.gatewayAddress;
        this.gatewayFqdn = $.gatewayFqdn;
        this.location = $.location;
        this.name = $.name;
        this.resourceGroupName = $.resourceGroupName;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(LocalNetworkGatewayArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private LocalNetworkGatewayArgs $;

        public Builder() {
            $ = new LocalNetworkGatewayArgs();
        }

        public Builder(LocalNetworkGatewayArgs defaults) {
            $ = new LocalNetworkGatewayArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param addressSpaces The list of string CIDRs representing the address spaces the gateway exposes.
         * 
         * @return builder
         * 
         */
        public Builder addressSpaces(@Nullable Output<List<String>> addressSpaces) {
            $.addressSpaces = addressSpaces;
            return this;
        }

        /**
         * @param addressSpaces The list of string CIDRs representing the address spaces the gateway exposes.
         * 
         * @return builder
         * 
         */
        public Builder addressSpaces(List<String> addressSpaces) {
            return addressSpaces(Output.of(addressSpaces));
        }

        /**
         * @param addressSpaces The list of string CIDRs representing the address spaces the gateway exposes.
         * 
         * @return builder
         * 
         */
        public Builder addressSpaces(String... addressSpaces) {
            return addressSpaces(List.of(addressSpaces));
        }

        /**
         * @param bgpSettings A `bgp_settings` block as defined below containing the Local Network Gateway&#39;s BGP speaker settings.
         * 
         * @return builder
         * 
         */
        public Builder bgpSettings(@Nullable Output<LocalNetworkGatewayBgpSettingsArgs> bgpSettings) {
            $.bgpSettings = bgpSettings;
            return this;
        }

        /**
         * @param bgpSettings A `bgp_settings` block as defined below containing the Local Network Gateway&#39;s BGP speaker settings.
         * 
         * @return builder
         * 
         */
        public Builder bgpSettings(LocalNetworkGatewayBgpSettingsArgs bgpSettings) {
            return bgpSettings(Output.of(bgpSettings));
        }

        /**
         * @param gatewayAddress The gateway IP address to connect with.
         * 
         * @return builder
         * 
         */
        public Builder gatewayAddress(@Nullable Output<String> gatewayAddress) {
            $.gatewayAddress = gatewayAddress;
            return this;
        }

        /**
         * @param gatewayAddress The gateway IP address to connect with.
         * 
         * @return builder
         * 
         */
        public Builder gatewayAddress(String gatewayAddress) {
            return gatewayAddress(Output.of(gatewayAddress));
        }

        /**
         * @param gatewayFqdn The gateway FQDN to connect with.
         * 
         * &gt; **NOTE:** Either `gateway_address` or `gateway_fqdn` should be specified.
         * 
         * @return builder
         * 
         */
        public Builder gatewayFqdn(@Nullable Output<String> gatewayFqdn) {
            $.gatewayFqdn = gatewayFqdn;
            return this;
        }

        /**
         * @param gatewayFqdn The gateway FQDN to connect with.
         * 
         * &gt; **NOTE:** Either `gateway_address` or `gateway_fqdn` should be specified.
         * 
         * @return builder
         * 
         */
        public Builder gatewayFqdn(String gatewayFqdn) {
            return gatewayFqdn(Output.of(gatewayFqdn));
        }

        /**
         * @param location The location/region where the local network gateway is created. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location The location/region where the local network gateway is created. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param name The name of the local network gateway. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the local network gateway. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param resourceGroupName The name of the resource group in which to create the local network gateway. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName The name of the resource group in which to create the local network gateway. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        /**
         * @param tags A mapping of tags to assign to the resource.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags A mapping of tags to assign to the resource.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public LocalNetworkGatewayArgs build() {
            if ($.resourceGroupName == null) {
                throw new MissingRequiredPropertyException("LocalNetworkGatewayArgs", "resourceGroupName");
            }
            return $;
        }
    }

}
