// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.core;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SubscriptionArgs extends com.pulumi.resources.ResourceArgs {

    public static final SubscriptionArgs Empty = new SubscriptionArgs();

    /**
     * The Alias name for the subscription. This provider will generate a new GUID if this is not supplied. Changing this forces a new Subscription to be created.
     * 
     */
    @Import(name="alias")
    private @Nullable Output<String> alias;

    /**
     * @return The Alias name for the subscription. This provider will generate a new GUID if this is not supplied. Changing this forces a new Subscription to be created.
     * 
     */
    public Optional<Output<String>> alias() {
        return Optional.ofNullable(this.alias);
    }

    /**
     * The Azure Billing Scope ID. Can be a Microsoft Customer Account Billing Scope ID, a Microsoft Partner Account Billing Scope ID or an Enrollment Billing Scope ID.
     * 
     */
    @Import(name="billingScopeId")
    private @Nullable Output<String> billingScopeId;

    /**
     * @return The Azure Billing Scope ID. Can be a Microsoft Customer Account Billing Scope ID, a Microsoft Partner Account Billing Scope ID or an Enrollment Billing Scope ID.
     * 
     */
    public Optional<Output<String>> billingScopeId() {
        return Optional.ofNullable(this.billingScopeId);
    }

    /**
     * The ID of the Subscription. Changing this forces a new Subscription to be created.
     * 
     * &gt; **NOTE:** This value can be specified only for adopting control of an existing Subscription, it cannot be used to provide a custom Subscription ID.
     * 
     * &gt; **NOTE:** Either `billing_scope_id` or `subscription_id` has to be specified.
     * 
     */
    @Import(name="subscriptionId")
    private @Nullable Output<String> subscriptionId;

    /**
     * @return The ID of the Subscription. Changing this forces a new Subscription to be created.
     * 
     * &gt; **NOTE:** This value can be specified only for adopting control of an existing Subscription, it cannot be used to provide a custom Subscription ID.
     * 
     * &gt; **NOTE:** Either `billing_scope_id` or `subscription_id` has to be specified.
     * 
     */
    public Optional<Output<String>> subscriptionId() {
        return Optional.ofNullable(this.subscriptionId);
    }

    /**
     * The Name of the Subscription. This is the Display Name in the portal.
     * 
     */
    @Import(name="subscriptionName", required=true)
    private Output<String> subscriptionName;

    /**
     * @return The Name of the Subscription. This is the Display Name in the portal.
     * 
     */
    public Output<String> subscriptionName() {
        return this.subscriptionName;
    }

    /**
     * A mapping of tags to assign to the Subscription.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return A mapping of tags to assign to the Subscription.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * The workload type of the Subscription. Possible values are `Production` (default) and `DevTest`. Changing this forces a new Subscription to be created.
     * 
     */
    @Import(name="workload")
    private @Nullable Output<String> workload;

    /**
     * @return The workload type of the Subscription. Possible values are `Production` (default) and `DevTest`. Changing this forces a new Subscription to be created.
     * 
     */
    public Optional<Output<String>> workload() {
        return Optional.ofNullable(this.workload);
    }

    private SubscriptionArgs() {}

    private SubscriptionArgs(SubscriptionArgs $) {
        this.alias = $.alias;
        this.billingScopeId = $.billingScopeId;
        this.subscriptionId = $.subscriptionId;
        this.subscriptionName = $.subscriptionName;
        this.tags = $.tags;
        this.workload = $.workload;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SubscriptionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SubscriptionArgs $;

        public Builder() {
            $ = new SubscriptionArgs();
        }

        public Builder(SubscriptionArgs defaults) {
            $ = new SubscriptionArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param alias The Alias name for the subscription. This provider will generate a new GUID if this is not supplied. Changing this forces a new Subscription to be created.
         * 
         * @return builder
         * 
         */
        public Builder alias(@Nullable Output<String> alias) {
            $.alias = alias;
            return this;
        }

        /**
         * @param alias The Alias name for the subscription. This provider will generate a new GUID if this is not supplied. Changing this forces a new Subscription to be created.
         * 
         * @return builder
         * 
         */
        public Builder alias(String alias) {
            return alias(Output.of(alias));
        }

        /**
         * @param billingScopeId The Azure Billing Scope ID. Can be a Microsoft Customer Account Billing Scope ID, a Microsoft Partner Account Billing Scope ID or an Enrollment Billing Scope ID.
         * 
         * @return builder
         * 
         */
        public Builder billingScopeId(@Nullable Output<String> billingScopeId) {
            $.billingScopeId = billingScopeId;
            return this;
        }

        /**
         * @param billingScopeId The Azure Billing Scope ID. Can be a Microsoft Customer Account Billing Scope ID, a Microsoft Partner Account Billing Scope ID or an Enrollment Billing Scope ID.
         * 
         * @return builder
         * 
         */
        public Builder billingScopeId(String billingScopeId) {
            return billingScopeId(Output.of(billingScopeId));
        }

        /**
         * @param subscriptionId The ID of the Subscription. Changing this forces a new Subscription to be created.
         * 
         * &gt; **NOTE:** This value can be specified only for adopting control of an existing Subscription, it cannot be used to provide a custom Subscription ID.
         * 
         * &gt; **NOTE:** Either `billing_scope_id` or `subscription_id` has to be specified.
         * 
         * @return builder
         * 
         */
        public Builder subscriptionId(@Nullable Output<String> subscriptionId) {
            $.subscriptionId = subscriptionId;
            return this;
        }

        /**
         * @param subscriptionId The ID of the Subscription. Changing this forces a new Subscription to be created.
         * 
         * &gt; **NOTE:** This value can be specified only for adopting control of an existing Subscription, it cannot be used to provide a custom Subscription ID.
         * 
         * &gt; **NOTE:** Either `billing_scope_id` or `subscription_id` has to be specified.
         * 
         * @return builder
         * 
         */
        public Builder subscriptionId(String subscriptionId) {
            return subscriptionId(Output.of(subscriptionId));
        }

        /**
         * @param subscriptionName The Name of the Subscription. This is the Display Name in the portal.
         * 
         * @return builder
         * 
         */
        public Builder subscriptionName(Output<String> subscriptionName) {
            $.subscriptionName = subscriptionName;
            return this;
        }

        /**
         * @param subscriptionName The Name of the Subscription. This is the Display Name in the portal.
         * 
         * @return builder
         * 
         */
        public Builder subscriptionName(String subscriptionName) {
            return subscriptionName(Output.of(subscriptionName));
        }

        /**
         * @param tags A mapping of tags to assign to the Subscription.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags A mapping of tags to assign to the Subscription.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param workload The workload type of the Subscription. Possible values are `Production` (default) and `DevTest`. Changing this forces a new Subscription to be created.
         * 
         * @return builder
         * 
         */
        public Builder workload(@Nullable Output<String> workload) {
            $.workload = workload;
            return this;
        }

        /**
         * @param workload The workload type of the Subscription. Possible values are `Production` (default) and `DevTest`. Changing this forces a new Subscription to be created.
         * 
         * @return builder
         * 
         */
        public Builder workload(String workload) {
            return workload(Output.of(workload));
        }

        public SubscriptionArgs build() {
            if ($.subscriptionName == null) {
                throw new MissingRequiredPropertyException("SubscriptionArgs", "subscriptionName");
            }
            return $;
        }
    }

}
