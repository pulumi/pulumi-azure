// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.compute;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class AutomanageConfigurationAssignmentArgs extends com.pulumi.resources.ResourceArgs {

    public static final AutomanageConfigurationAssignmentArgs Empty = new AutomanageConfigurationAssignmentArgs();

    /**
     * The ARM resource ID of the Automanage Configuration to assign to the Virtual Machine. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="configurationId", required=true)
    private Output<String> configurationId;

    /**
     * @return The ARM resource ID of the Automanage Configuration to assign to the Virtual Machine. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> configurationId() {
        return this.configurationId;
    }

    /**
     * The ARM resource ID of the Virtual Machine to assign the Automanage Configuration to. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="virtualMachineId", required=true)
    private Output<String> virtualMachineId;

    /**
     * @return The ARM resource ID of the Virtual Machine to assign the Automanage Configuration to. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> virtualMachineId() {
        return this.virtualMachineId;
    }

    private AutomanageConfigurationAssignmentArgs() {}

    private AutomanageConfigurationAssignmentArgs(AutomanageConfigurationAssignmentArgs $) {
        this.configurationId = $.configurationId;
        this.virtualMachineId = $.virtualMachineId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AutomanageConfigurationAssignmentArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AutomanageConfigurationAssignmentArgs $;

        public Builder() {
            $ = new AutomanageConfigurationAssignmentArgs();
        }

        public Builder(AutomanageConfigurationAssignmentArgs defaults) {
            $ = new AutomanageConfigurationAssignmentArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param configurationId The ARM resource ID of the Automanage Configuration to assign to the Virtual Machine. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder configurationId(Output<String> configurationId) {
            $.configurationId = configurationId;
            return this;
        }

        /**
         * @param configurationId The ARM resource ID of the Automanage Configuration to assign to the Virtual Machine. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder configurationId(String configurationId) {
            return configurationId(Output.of(configurationId));
        }

        /**
         * @param virtualMachineId The ARM resource ID of the Virtual Machine to assign the Automanage Configuration to. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder virtualMachineId(Output<String> virtualMachineId) {
            $.virtualMachineId = virtualMachineId;
            return this;
        }

        /**
         * @param virtualMachineId The ARM resource ID of the Virtual Machine to assign the Automanage Configuration to. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder virtualMachineId(String virtualMachineId) {
            return virtualMachineId(Output.of(virtualMachineId));
        }

        public AutomanageConfigurationAssignmentArgs build() {
            if ($.configurationId == null) {
                throw new MissingRequiredPropertyException("AutomanageConfigurationAssignmentArgs", "configurationId");
            }
            if ($.virtualMachineId == null) {
                throw new MissingRequiredPropertyException("AutomanageConfigurationAssignmentArgs", "virtualMachineId");
            }
            return $;
        }
    }

}
