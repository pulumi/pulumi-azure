// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.lb.outputs;

import com.pulumi.azure.lb.outputs.GetBackendAddressPoolBackendAddressInboundNatRulePortMapping;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetBackendAddressPoolBackendAddress {
    /**
     * @return A list of `inbound_nat_rule_port_mapping` block as defined below.
     * 
     */
    private List<GetBackendAddressPoolBackendAddressInboundNatRulePortMapping> inboundNatRulePortMappings;
    /**
     * @return The Static IP address for this Load Balancer within the Virtual Network.
     * 
     */
    private String ipAddress;
    /**
     * @return Specifies the name of the Backend Address Pool.
     * 
     */
    private String name;
    /**
     * @return The ID of the Virtual Network where the Backend Address of the Load Balancer exists.
     * 
     */
    private String virtualNetworkId;

    private GetBackendAddressPoolBackendAddress() {}
    /**
     * @return A list of `inbound_nat_rule_port_mapping` block as defined below.
     * 
     */
    public List<GetBackendAddressPoolBackendAddressInboundNatRulePortMapping> inboundNatRulePortMappings() {
        return this.inboundNatRulePortMappings;
    }
    /**
     * @return The Static IP address for this Load Balancer within the Virtual Network.
     * 
     */
    public String ipAddress() {
        return this.ipAddress;
    }
    /**
     * @return Specifies the name of the Backend Address Pool.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The ID of the Virtual Network where the Backend Address of the Load Balancer exists.
     * 
     */
    public String virtualNetworkId() {
        return this.virtualNetworkId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetBackendAddressPoolBackendAddress defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetBackendAddressPoolBackendAddressInboundNatRulePortMapping> inboundNatRulePortMappings;
        private String ipAddress;
        private String name;
        private String virtualNetworkId;
        public Builder() {}
        public Builder(GetBackendAddressPoolBackendAddress defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.inboundNatRulePortMappings = defaults.inboundNatRulePortMappings;
    	      this.ipAddress = defaults.ipAddress;
    	      this.name = defaults.name;
    	      this.virtualNetworkId = defaults.virtualNetworkId;
        }

        @CustomType.Setter
        public Builder inboundNatRulePortMappings(List<GetBackendAddressPoolBackendAddressInboundNatRulePortMapping> inboundNatRulePortMappings) {
            if (inboundNatRulePortMappings == null) {
              throw new MissingRequiredPropertyException("GetBackendAddressPoolBackendAddress", "inboundNatRulePortMappings");
            }
            this.inboundNatRulePortMappings = inboundNatRulePortMappings;
            return this;
        }
        public Builder inboundNatRulePortMappings(GetBackendAddressPoolBackendAddressInboundNatRulePortMapping... inboundNatRulePortMappings) {
            return inboundNatRulePortMappings(List.of(inboundNatRulePortMappings));
        }
        @CustomType.Setter
        public Builder ipAddress(String ipAddress) {
            if (ipAddress == null) {
              throw new MissingRequiredPropertyException("GetBackendAddressPoolBackendAddress", "ipAddress");
            }
            this.ipAddress = ipAddress;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetBackendAddressPoolBackendAddress", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder virtualNetworkId(String virtualNetworkId) {
            if (virtualNetworkId == null) {
              throw new MissingRequiredPropertyException("GetBackendAddressPoolBackendAddress", "virtualNetworkId");
            }
            this.virtualNetworkId = virtualNetworkId;
            return this;
        }
        public GetBackendAddressPoolBackendAddress build() {
            final var _resultValue = new GetBackendAddressPoolBackendAddress();
            _resultValue.inboundNatRulePortMappings = inboundNatRulePortMappings;
            _resultValue.ipAddress = ipAddress;
            _resultValue.name = name;
            _resultValue.virtualNetworkId = virtualNetworkId;
            return _resultValue;
        }
    }
}
