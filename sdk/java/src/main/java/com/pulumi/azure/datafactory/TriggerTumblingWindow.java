// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.datafactory;

import com.pulumi.azure.Utilities;
import com.pulumi.azure.datafactory.TriggerTumblingWindowArgs;
import com.pulumi.azure.datafactory.inputs.TriggerTumblingWindowState;
import com.pulumi.azure.datafactory.outputs.TriggerTumblingWindowPipeline;
import com.pulumi.azure.datafactory.outputs.TriggerTumblingWindowRetry;
import com.pulumi.azure.datafactory.outputs.TriggerTumblingWindowTriggerDependency;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Manages a Tumbling Window Trigger inside an Azure Data Factory.
 * 
 * ## Example Usage
 * 
 * ```java
 * package generated_program;
 * 
 * import java.util.*;
 * import java.io.*;
 * import java.nio.*;
 * import com.pulumi.*;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var exampleResourceGroup = new ResourceGroup(&#34;exampleResourceGroup&#34;, ResourceGroupArgs.builder()        
 *             .location(&#34;West Europe&#34;)
 *             .build());
 * 
 *         var exampleFactory = new Factory(&#34;exampleFactory&#34;, FactoryArgs.builder()        
 *             .location(exampleResourceGroup.location())
 *             .resourceGroupName(exampleResourceGroup.name())
 *             .build());
 * 
 *         var examplePipeline = new Pipeline(&#34;examplePipeline&#34;, PipelineArgs.builder()        
 *             .resourceGroupName(exampleResourceGroup.name())
 *             .dataFactoryId(exampleFactory.id())
 *             .build());
 * 
 *         var exampleTriggerTumblingWindow = new TriggerTumblingWindow(&#34;exampleTriggerTumblingWindow&#34;, TriggerTumblingWindowArgs.builder()        
 *             .dataFactoryId(exampleFactory.id())
 *             .startTime(&#34;2022-09-21T00:00:00Z&#34;)
 *             .endTime(&#34;2022-09-21T08:00:00Z&#34;)
 *             .frequency(&#34;Minute&#34;)
 *             .interval(15)
 *             .delay(&#34;16:00:00&#34;)
 *             .annotations(            
 *                 &#34;example1&#34;,
 *                 &#34;example2&#34;,
 *                 &#34;example3&#34;)
 *             .description(&#34;example description&#34;)
 *             .retry(TriggerTumblingWindowRetryArgs.builder()
 *                 .count(1)
 *                 .interval(30)
 *                 .build())
 *             .pipeline(TriggerTumblingWindowPipelineArgs.builder()
 *                 .name(azurerm_data_factory_pipeline.test().name())
 *                 .parameters(Map.of(&#34;Env&#34;, &#34;Prod&#34;))
 *                 .build())
 *             .triggerDependencies(TriggerTumblingWindowTriggerDependencyArgs.builder()
 *                 .size(&#34;24:00:00&#34;)
 *                 .offset(&#34;-24:00:00&#34;)
 *                 .build())
 *             .additionalProperties(Map.ofEntries(
 *                 Map.entry(&#34;foo&#34;, &#34;value1&#34;),
 *                 Map.entry(&#34;bar&#34;, &#34;value2&#34;)
 *             ))
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * Data Factory Tumbling Window Trigger can be imported using the `resource id`, e.g.
 * 
 * ```sh
 *  $ pulumi import azure:datafactory/triggerTumblingWindow:TriggerTumblingWindow example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/example/providers/Microsoft.DataFactory/factories/example/triggers/example
 * ```
 * 
 */
@ResourceType(type="azure:datafactory/triggerTumblingWindow:TriggerTumblingWindow")
public class TriggerTumblingWindow extends com.pulumi.resources.CustomResource {
    /**
     * Specifies if the Data Factory Tumbling Window Trigger is activated. Defaults to `true`.
     * 
     */
    @Export(name="activated", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> activated;

    /**
     * @return Specifies if the Data Factory Tumbling Window Trigger is activated. Defaults to `true`.
     * 
     */
    public Output<Optional<Boolean>> activated() {
        return Codegen.optional(this.activated);
    }
    /**
     * A map of additional properties to associate with the Data Factory Tumbling Window Trigger.
     * 
     */
    @Export(name="additionalProperties", type=Map.class, parameters={String.class, String.class})
    private Output</* @Nullable */ Map<String,String>> additionalProperties;

    /**
     * @return A map of additional properties to associate with the Data Factory Tumbling Window Trigger.
     * 
     */
    public Output<Optional<Map<String,String>>> additionalProperties() {
        return Codegen.optional(this.additionalProperties);
    }
    /**
     * List of tags that can be used for describing the Data Factory Tumbling Window Trigger.
     * 
     */
    @Export(name="annotations", type=List.class, parameters={String.class})
    private Output</* @Nullable */ List<String>> annotations;

    /**
     * @return List of tags that can be used for describing the Data Factory Tumbling Window Trigger.
     * 
     */
    public Output<Optional<List<String>>> annotations() {
        return Codegen.optional(this.annotations);
    }
    /**
     * The ID of Data Factory in which to associate the Trigger with. Changing this forces a new resource.
     * 
     */
    @Export(name="dataFactoryId", type=String.class, parameters={})
    private Output<String> dataFactoryId;

    /**
     * @return The ID of Data Factory in which to associate the Trigger with. Changing this forces a new resource.
     * 
     */
    public Output<String> dataFactoryId() {
        return this.dataFactoryId;
    }
    /**
     * Specifies how long the trigger waits before triggering new run. formatted as an `D.HH:MM:SS`.
     * 
     */
    @Export(name="delay", type=String.class, parameters={})
    private Output</* @Nullable */ String> delay;

    /**
     * @return Specifies how long the trigger waits before triggering new run. formatted as an `D.HH:MM:SS`.
     * 
     */
    public Output<Optional<String>> delay() {
        return Codegen.optional(this.delay);
    }
    /**
     * The description for the Data Factory Tumbling Window Trigger.
     * 
     */
    @Export(name="description", type=String.class, parameters={})
    private Output</* @Nullable */ String> description;

    /**
     * @return The description for the Data Factory Tumbling Window Trigger.
     * 
     */
    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    /**
     * Specifies the end time of Tumbling Window, formatted as an RFC3339 string.
     * 
     */
    @Export(name="endTime", type=String.class, parameters={})
    private Output</* @Nullable */ String> endTime;

    /**
     * @return Specifies the end time of Tumbling Window, formatted as an RFC3339 string.
     * 
     */
    public Output<Optional<String>> endTime() {
        return Codegen.optional(this.endTime);
    }
    /**
     * Specifies the frequency of Tumbling Window. Possible values are `Hour`, `Minute` and `Month`. Changing this forces a new resource.
     * 
     */
    @Export(name="frequency", type=String.class, parameters={})
    private Output<String> frequency;

    /**
     * @return Specifies the frequency of Tumbling Window. Possible values are `Hour`, `Minute` and `Month`. Changing this forces a new resource.
     * 
     */
    public Output<String> frequency() {
        return this.frequency;
    }
    /**
     * Specifies the interval of Tumbling Window. Changing this forces a new resource.
     * 
     */
    @Export(name="interval", type=Integer.class, parameters={})
    private Output<Integer> interval;

    /**
     * @return Specifies the interval of Tumbling Window. Changing this forces a new resource.
     * 
     */
    public Output<Integer> interval() {
        return this.interval;
    }
    /**
     * The max number for simultaneous trigger run fired by Tumbling Window. Possible values are between `1` and `50`. Defaults to `50`.
     * 
     */
    @Export(name="maxConcurrency", type=Integer.class, parameters={})
    private Output</* @Nullable */ Integer> maxConcurrency;

    /**
     * @return The max number for simultaneous trigger run fired by Tumbling Window. Possible values are between `1` and `50`. Defaults to `50`.
     * 
     */
    public Output<Optional<Integer>> maxConcurrency() {
        return Codegen.optional(this.maxConcurrency);
    }
    /**
     * Specifies the name of the Data Factory Tumbling Window Trigger. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return Specifies the name of the Data Factory Tumbling Window Trigger. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * A `pipeline` block as defined below.
     * 
     */
    @Export(name="pipeline", type=TriggerTumblingWindowPipeline.class, parameters={})
    private Output<TriggerTumblingWindowPipeline> pipeline;

    /**
     * @return A `pipeline` block as defined below.
     * 
     */
    public Output<TriggerTumblingWindowPipeline> pipeline() {
        return this.pipeline;
    }
    /**
     * A `retry` block as defined below.
     * 
     */
    @Export(name="retry", type=TriggerTumblingWindowRetry.class, parameters={})
    private Output</* @Nullable */ TriggerTumblingWindowRetry> retry;

    /**
     * @return A `retry` block as defined below.
     * 
     */
    public Output<Optional<TriggerTumblingWindowRetry>> retry() {
        return Codegen.optional(this.retry);
    }
    /**
     * Specifies the start time of Tumbling Window, formatted as an RFC3339 string. Changing this forces a new resource.
     * 
     */
    @Export(name="startTime", type=String.class, parameters={})
    private Output<String> startTime;

    /**
     * @return Specifies the start time of Tumbling Window, formatted as an RFC3339 string. Changing this forces a new resource.
     * 
     */
    public Output<String> startTime() {
        return this.startTime;
    }
    /**
     * One or more `trigger_dependency` block as defined below.
     * 
     */
    @Export(name="triggerDependencies", type=List.class, parameters={TriggerTumblingWindowTriggerDependency.class})
    private Output</* @Nullable */ List<TriggerTumblingWindowTriggerDependency>> triggerDependencies;

    /**
     * @return One or more `trigger_dependency` block as defined below.
     * 
     */
    public Output<Optional<List<TriggerTumblingWindowTriggerDependency>>> triggerDependencies() {
        return Codegen.optional(this.triggerDependencies);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public TriggerTumblingWindow(String name) {
        this(name, TriggerTumblingWindowArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public TriggerTumblingWindow(String name, TriggerTumblingWindowArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public TriggerTumblingWindow(String name, TriggerTumblingWindowArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:datafactory/triggerTumblingWindow:TriggerTumblingWindow", name, args == null ? TriggerTumblingWindowArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private TriggerTumblingWindow(String name, Output<String> id, @Nullable TriggerTumblingWindowState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:datafactory/triggerTumblingWindow:TriggerTumblingWindow", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static TriggerTumblingWindow get(String name, Output<String> id, @Nullable TriggerTumblingWindowState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new TriggerTumblingWindow(name, id, state, options);
    }
}
