// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.datashare.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class GetDatasetBlobStorageArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetDatasetBlobStorageArgs Empty = new GetDatasetBlobStorageArgs();

    /**
     * The ID of the Data Share in which this Data Share Blob Storage Dataset should be created.
     * 
     */
    @Import(name="dataShareId", required=true)
    private Output<String> dataShareId;

    /**
     * @return The ID of the Data Share in which this Data Share Blob Storage Dataset should be created.
     * 
     */
    public Output<String> dataShareId() {
        return this.dataShareId;
    }

    /**
     * The name of this Data Share Blob Storage Dataset.
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    /**
     * @return The name of this Data Share Blob Storage Dataset.
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    private GetDatasetBlobStorageArgs() {}

    private GetDatasetBlobStorageArgs(GetDatasetBlobStorageArgs $) {
        this.dataShareId = $.dataShareId;
        this.name = $.name;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetDatasetBlobStorageArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetDatasetBlobStorageArgs $;

        public Builder() {
            $ = new GetDatasetBlobStorageArgs();
        }

        public Builder(GetDatasetBlobStorageArgs defaults) {
            $ = new GetDatasetBlobStorageArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param dataShareId The ID of the Data Share in which this Data Share Blob Storage Dataset should be created.
         * 
         * @return builder
         * 
         */
        public Builder dataShareId(Output<String> dataShareId) {
            $.dataShareId = dataShareId;
            return this;
        }

        /**
         * @param dataShareId The ID of the Data Share in which this Data Share Blob Storage Dataset should be created.
         * 
         * @return builder
         * 
         */
        public Builder dataShareId(String dataShareId) {
            return dataShareId(Output.of(dataShareId));
        }

        /**
         * @param name The name of this Data Share Blob Storage Dataset.
         * 
         * @return builder
         * 
         */
        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of this Data Share Blob Storage Dataset.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        public GetDatasetBlobStorageArgs build() {
            if ($.dataShareId == null) {
                throw new MissingRequiredPropertyException("GetDatasetBlobStorageArgs", "dataShareId");
            }
            if ($.name == null) {
                throw new MissingRequiredPropertyException("GetDatasetBlobStorageArgs", "name");
            }
            return $;
        }
    }

}
