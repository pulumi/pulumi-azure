// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.compute.outputs;

import com.pulumi.azure.compute.outputs.WindowsVirtualMachineScaleSetExtensionProtectedSettingsFromKeyVault;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class WindowsVirtualMachineScaleSetExtension {
    /**
     * @return Should the latest version of the Extension be used at Deployment Time, if one is available? This won&#39;t auto-update the extension on existing installation. Defaults to `true`.
     * 
     */
    private @Nullable Boolean autoUpgradeMinorVersion;
    /**
     * @return Should the Extension be automatically updated whenever the Publisher releases a new version of this VM Extension?
     * 
     */
    private @Nullable Boolean automaticUpgradeEnabled;
    /**
     * @return A value which, when different to the previous value can be used to force-run the Extension even if the Extension Configuration hasn&#39;t changed.
     * 
     */
    private @Nullable String forceUpdateTag;
    /**
     * @return The name for the Virtual Machine Scale Set Extension.
     * 
     */
    private String name;
    /**
     * @return A JSON String which specifies Sensitive Settings (such as Passwords) for the Extension.
     * 
     * &gt; **NOTE:** Keys within the `protected_settings` block are notoriously case-sensitive, where the casing required (e.g. TitleCase vs snakeCase) depends on the Extension being used. Please refer to the documentation for the specific Virtual Machine Extension you&#39;re looking to use for more information.
     * 
     */
    private @Nullable String protectedSettings;
    private @Nullable WindowsVirtualMachineScaleSetExtensionProtectedSettingsFromKeyVault protectedSettingsFromKeyVault;
    /**
     * @return An ordered list of Extension names which this should be provisioned after.
     * 
     */
    private @Nullable List<String> provisionAfterExtensions;
    /**
     * @return Specifies the Publisher of the Extension.
     * 
     */
    private String publisher;
    /**
     * @return A JSON String which specifies Settings for the Extension.
     * 
     * &gt; **NOTE:** Keys within the `settings` block are notoriously case-sensitive, where the casing required (e.g. TitleCase vs snakeCase) depends on the Extension being used. Please refer to the documentation for the specific Virtual Machine Extension you&#39;re looking to use for more information.
     * 
     */
    private @Nullable String settings;
    /**
     * @return Specifies the Type of the Extension.
     * 
     */
    private String type;
    /**
     * @return Specifies the version of the extension to use, available versions can be found using the Azure CLI.
     * 
     */
    private String typeHandlerVersion;

    private WindowsVirtualMachineScaleSetExtension() {}
    /**
     * @return Should the latest version of the Extension be used at Deployment Time, if one is available? This won&#39;t auto-update the extension on existing installation. Defaults to `true`.
     * 
     */
    public Optional<Boolean> autoUpgradeMinorVersion() {
        return Optional.ofNullable(this.autoUpgradeMinorVersion);
    }
    /**
     * @return Should the Extension be automatically updated whenever the Publisher releases a new version of this VM Extension?
     * 
     */
    public Optional<Boolean> automaticUpgradeEnabled() {
        return Optional.ofNullable(this.automaticUpgradeEnabled);
    }
    /**
     * @return A value which, when different to the previous value can be used to force-run the Extension even if the Extension Configuration hasn&#39;t changed.
     * 
     */
    public Optional<String> forceUpdateTag() {
        return Optional.ofNullable(this.forceUpdateTag);
    }
    /**
     * @return The name for the Virtual Machine Scale Set Extension.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return A JSON String which specifies Sensitive Settings (such as Passwords) for the Extension.
     * 
     * &gt; **NOTE:** Keys within the `protected_settings` block are notoriously case-sensitive, where the casing required (e.g. TitleCase vs snakeCase) depends on the Extension being used. Please refer to the documentation for the specific Virtual Machine Extension you&#39;re looking to use for more information.
     * 
     */
    public Optional<String> protectedSettings() {
        return Optional.ofNullable(this.protectedSettings);
    }
    public Optional<WindowsVirtualMachineScaleSetExtensionProtectedSettingsFromKeyVault> protectedSettingsFromKeyVault() {
        return Optional.ofNullable(this.protectedSettingsFromKeyVault);
    }
    /**
     * @return An ordered list of Extension names which this should be provisioned after.
     * 
     */
    public List<String> provisionAfterExtensions() {
        return this.provisionAfterExtensions == null ? List.of() : this.provisionAfterExtensions;
    }
    /**
     * @return Specifies the Publisher of the Extension.
     * 
     */
    public String publisher() {
        return this.publisher;
    }
    /**
     * @return A JSON String which specifies Settings for the Extension.
     * 
     * &gt; **NOTE:** Keys within the `settings` block are notoriously case-sensitive, where the casing required (e.g. TitleCase vs snakeCase) depends on the Extension being used. Please refer to the documentation for the specific Virtual Machine Extension you&#39;re looking to use for more information.
     * 
     */
    public Optional<String> settings() {
        return Optional.ofNullable(this.settings);
    }
    /**
     * @return Specifies the Type of the Extension.
     * 
     */
    public String type() {
        return this.type;
    }
    /**
     * @return Specifies the version of the extension to use, available versions can be found using the Azure CLI.
     * 
     */
    public String typeHandlerVersion() {
        return this.typeHandlerVersion;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(WindowsVirtualMachineScaleSetExtension defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Boolean autoUpgradeMinorVersion;
        private @Nullable Boolean automaticUpgradeEnabled;
        private @Nullable String forceUpdateTag;
        private String name;
        private @Nullable String protectedSettings;
        private @Nullable WindowsVirtualMachineScaleSetExtensionProtectedSettingsFromKeyVault protectedSettingsFromKeyVault;
        private @Nullable List<String> provisionAfterExtensions;
        private String publisher;
        private @Nullable String settings;
        private String type;
        private String typeHandlerVersion;
        public Builder() {}
        public Builder(WindowsVirtualMachineScaleSetExtension defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.autoUpgradeMinorVersion = defaults.autoUpgradeMinorVersion;
    	      this.automaticUpgradeEnabled = defaults.automaticUpgradeEnabled;
    	      this.forceUpdateTag = defaults.forceUpdateTag;
    	      this.name = defaults.name;
    	      this.protectedSettings = defaults.protectedSettings;
    	      this.protectedSettingsFromKeyVault = defaults.protectedSettingsFromKeyVault;
    	      this.provisionAfterExtensions = defaults.provisionAfterExtensions;
    	      this.publisher = defaults.publisher;
    	      this.settings = defaults.settings;
    	      this.type = defaults.type;
    	      this.typeHandlerVersion = defaults.typeHandlerVersion;
        }

        @CustomType.Setter
        public Builder autoUpgradeMinorVersion(@Nullable Boolean autoUpgradeMinorVersion) {

            this.autoUpgradeMinorVersion = autoUpgradeMinorVersion;
            return this;
        }
        @CustomType.Setter
        public Builder automaticUpgradeEnabled(@Nullable Boolean automaticUpgradeEnabled) {

            this.automaticUpgradeEnabled = automaticUpgradeEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder forceUpdateTag(@Nullable String forceUpdateTag) {

            this.forceUpdateTag = forceUpdateTag;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("WindowsVirtualMachineScaleSetExtension", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder protectedSettings(@Nullable String protectedSettings) {

            this.protectedSettings = protectedSettings;
            return this;
        }
        @CustomType.Setter
        public Builder protectedSettingsFromKeyVault(@Nullable WindowsVirtualMachineScaleSetExtensionProtectedSettingsFromKeyVault protectedSettingsFromKeyVault) {

            this.protectedSettingsFromKeyVault = protectedSettingsFromKeyVault;
            return this;
        }
        @CustomType.Setter
        public Builder provisionAfterExtensions(@Nullable List<String> provisionAfterExtensions) {

            this.provisionAfterExtensions = provisionAfterExtensions;
            return this;
        }
        public Builder provisionAfterExtensions(String... provisionAfterExtensions) {
            return provisionAfterExtensions(List.of(provisionAfterExtensions));
        }
        @CustomType.Setter
        public Builder publisher(String publisher) {
            if (publisher == null) {
              throw new MissingRequiredPropertyException("WindowsVirtualMachineScaleSetExtension", "publisher");
            }
            this.publisher = publisher;
            return this;
        }
        @CustomType.Setter
        public Builder settings(@Nullable String settings) {

            this.settings = settings;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            if (type == null) {
              throw new MissingRequiredPropertyException("WindowsVirtualMachineScaleSetExtension", "type");
            }
            this.type = type;
            return this;
        }
        @CustomType.Setter
        public Builder typeHandlerVersion(String typeHandlerVersion) {
            if (typeHandlerVersion == null) {
              throw new MissingRequiredPropertyException("WindowsVirtualMachineScaleSetExtension", "typeHandlerVersion");
            }
            this.typeHandlerVersion = typeHandlerVersion;
            return this;
        }
        public WindowsVirtualMachineScaleSetExtension build() {
            final var _resultValue = new WindowsVirtualMachineScaleSetExtension();
            _resultValue.autoUpgradeMinorVersion = autoUpgradeMinorVersion;
            _resultValue.automaticUpgradeEnabled = automaticUpgradeEnabled;
            _resultValue.forceUpdateTag = forceUpdateTag;
            _resultValue.name = name;
            _resultValue.protectedSettings = protectedSettings;
            _resultValue.protectedSettingsFromKeyVault = protectedSettingsFromKeyVault;
            _resultValue.provisionAfterExtensions = provisionAfterExtensions;
            _resultValue.publisher = publisher;
            _resultValue.settings = settings;
            _resultValue.type = type;
            _resultValue.typeHandlerVersion = typeHandlerVersion;
            return _resultValue;
        }
    }
}
