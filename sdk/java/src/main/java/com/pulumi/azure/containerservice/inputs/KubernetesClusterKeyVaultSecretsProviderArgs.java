// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.containerservice.inputs;

import com.pulumi.azure.containerservice.inputs.KubernetesClusterKeyVaultSecretsProviderSecretIdentityArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class KubernetesClusterKeyVaultSecretsProviderArgs extends com.pulumi.resources.ResourceArgs {

    public static final KubernetesClusterKeyVaultSecretsProviderArgs Empty = new KubernetesClusterKeyVaultSecretsProviderArgs();

    /**
     * An `secret_identity` block is exported. The exported attributes are defined below.
     * 
     */
    @Import(name="secretIdentities")
    private @Nullable Output<List<KubernetesClusterKeyVaultSecretsProviderSecretIdentityArgs>> secretIdentities;

    /**
     * @return An `secret_identity` block is exported. The exported attributes are defined below.
     * 
     */
    public Optional<Output<List<KubernetesClusterKeyVaultSecretsProviderSecretIdentityArgs>>> secretIdentities() {
        return Optional.ofNullable(this.secretIdentities);
    }

    /**
     * Should the secret store CSI driver on the AKS cluster be enabled?
     * 
     */
    @Import(name="secretRotationEnabled")
    private @Nullable Output<Boolean> secretRotationEnabled;

    /**
     * @return Should the secret store CSI driver on the AKS cluster be enabled?
     * 
     */
    public Optional<Output<Boolean>> secretRotationEnabled() {
        return Optional.ofNullable(this.secretRotationEnabled);
    }

    /**
     * The interval to poll for secret rotation. This attribute is only set when `secret_rotation` is true. Defaults to `2m`.
     * 
     * &gt; **Note:** To enable`key_vault_secrets_provider` either `secret_rotation_enabled` or `secret_rotation_interval` must be specified.
     * 
     */
    @Import(name="secretRotationInterval")
    private @Nullable Output<String> secretRotationInterval;

    /**
     * @return The interval to poll for secret rotation. This attribute is only set when `secret_rotation` is true. Defaults to `2m`.
     * 
     * &gt; **Note:** To enable`key_vault_secrets_provider` either `secret_rotation_enabled` or `secret_rotation_interval` must be specified.
     * 
     */
    public Optional<Output<String>> secretRotationInterval() {
        return Optional.ofNullable(this.secretRotationInterval);
    }

    private KubernetesClusterKeyVaultSecretsProviderArgs() {}

    private KubernetesClusterKeyVaultSecretsProviderArgs(KubernetesClusterKeyVaultSecretsProviderArgs $) {
        this.secretIdentities = $.secretIdentities;
        this.secretRotationEnabled = $.secretRotationEnabled;
        this.secretRotationInterval = $.secretRotationInterval;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(KubernetesClusterKeyVaultSecretsProviderArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private KubernetesClusterKeyVaultSecretsProviderArgs $;

        public Builder() {
            $ = new KubernetesClusterKeyVaultSecretsProviderArgs();
        }

        public Builder(KubernetesClusterKeyVaultSecretsProviderArgs defaults) {
            $ = new KubernetesClusterKeyVaultSecretsProviderArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param secretIdentities An `secret_identity` block is exported. The exported attributes are defined below.
         * 
         * @return builder
         * 
         */
        public Builder secretIdentities(@Nullable Output<List<KubernetesClusterKeyVaultSecretsProviderSecretIdentityArgs>> secretIdentities) {
            $.secretIdentities = secretIdentities;
            return this;
        }

        /**
         * @param secretIdentities An `secret_identity` block is exported. The exported attributes are defined below.
         * 
         * @return builder
         * 
         */
        public Builder secretIdentities(List<KubernetesClusterKeyVaultSecretsProviderSecretIdentityArgs> secretIdentities) {
            return secretIdentities(Output.of(secretIdentities));
        }

        /**
         * @param secretIdentities An `secret_identity` block is exported. The exported attributes are defined below.
         * 
         * @return builder
         * 
         */
        public Builder secretIdentities(KubernetesClusterKeyVaultSecretsProviderSecretIdentityArgs... secretIdentities) {
            return secretIdentities(List.of(secretIdentities));
        }

        /**
         * @param secretRotationEnabled Should the secret store CSI driver on the AKS cluster be enabled?
         * 
         * @return builder
         * 
         */
        public Builder secretRotationEnabled(@Nullable Output<Boolean> secretRotationEnabled) {
            $.secretRotationEnabled = secretRotationEnabled;
            return this;
        }

        /**
         * @param secretRotationEnabled Should the secret store CSI driver on the AKS cluster be enabled?
         * 
         * @return builder
         * 
         */
        public Builder secretRotationEnabled(Boolean secretRotationEnabled) {
            return secretRotationEnabled(Output.of(secretRotationEnabled));
        }

        /**
         * @param secretRotationInterval The interval to poll for secret rotation. This attribute is only set when `secret_rotation` is true. Defaults to `2m`.
         * 
         * &gt; **Note:** To enable`key_vault_secrets_provider` either `secret_rotation_enabled` or `secret_rotation_interval` must be specified.
         * 
         * @return builder
         * 
         */
        public Builder secretRotationInterval(@Nullable Output<String> secretRotationInterval) {
            $.secretRotationInterval = secretRotationInterval;
            return this;
        }

        /**
         * @param secretRotationInterval The interval to poll for secret rotation. This attribute is only set when `secret_rotation` is true. Defaults to `2m`.
         * 
         * &gt; **Note:** To enable`key_vault_secrets_provider` either `secret_rotation_enabled` or `secret_rotation_interval` must be specified.
         * 
         * @return builder
         * 
         */
        public Builder secretRotationInterval(String secretRotationInterval) {
            return secretRotationInterval(Output.of(secretRotationInterval));
        }

        public KubernetesClusterKeyVaultSecretsProviderArgs build() {
            return $;
        }
    }

}
