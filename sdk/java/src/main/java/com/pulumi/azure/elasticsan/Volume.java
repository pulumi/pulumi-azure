// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.elasticsan;

import com.pulumi.azure.Utilities;
import com.pulumi.azure.elasticsan.VolumeArgs;
import com.pulumi.azure.elasticsan.inputs.VolumeState;
import com.pulumi.azure.elasticsan.outputs.VolumeCreateSource;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Integer;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Manages an Elastic SAN Volume resource.
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.azure.core.ResourceGroup;
 * import com.pulumi.azure.core.ResourceGroupArgs;
 * import com.pulumi.azure.elasticsan.ElasticSan;
 * import com.pulumi.azure.elasticsan.ElasticSanArgs;
 * import com.pulumi.azure.elasticsan.inputs.ElasticSanSkuArgs;
 * import com.pulumi.azure.elasticsan.VolumeGroup;
 * import com.pulumi.azure.elasticsan.VolumeGroupArgs;
 * import com.pulumi.azure.elasticsan.Volume;
 * import com.pulumi.azure.elasticsan.VolumeArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new ResourceGroup("example", ResourceGroupArgs.builder()
 *             .name("example-rg")
 *             .location("West Europe")
 *             .build());
 * 
 *         var exampleElasticSan = new ElasticSan("exampleElasticSan", ElasticSanArgs.builder()
 *             .name("example-es")
 *             .resourceGroupName(example.name())
 *             .location(example.location())
 *             .baseSizeInTib(1)
 *             .sku(ElasticSanSkuArgs.builder()
 *                 .name("Premium_LRS")
 *                 .build())
 *             .build());
 * 
 *         var exampleVolumeGroup = new VolumeGroup("exampleVolumeGroup", VolumeGroupArgs.builder()
 *             .name("example-esvg")
 *             .elasticSanId(exampleElasticSan.id())
 *             .build());
 * 
 *         var exampleVolume = new Volume("exampleVolume", VolumeArgs.builder()
 *             .name("example-esv")
 *             .volumeGroupId(exampleVolumeGroup.id())
 *             .sizeInGib(1)
 *             .build());
 * 
 *         ctx.export("targetIqn", exampleVolume.targetIqn());
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Example of creating an Elastic SAN Volume from a Disk Snapshot
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.azure.core.ResourceGroup;
 * import com.pulumi.azure.core.ResourceGroupArgs;
 * import com.pulumi.azure.elasticsan.ElasticSan;
 * import com.pulumi.azure.elasticsan.ElasticSanArgs;
 * import com.pulumi.azure.elasticsan.inputs.ElasticSanSkuArgs;
 * import com.pulumi.azure.elasticsan.VolumeGroup;
 * import com.pulumi.azure.elasticsan.VolumeGroupArgs;
 * import com.pulumi.azure.compute.ManagedDisk;
 * import com.pulumi.azure.compute.ManagedDiskArgs;
 * import com.pulumi.azure.compute.Snapshot;
 * import com.pulumi.azure.compute.SnapshotArgs;
 * import com.pulumi.azure.elasticsan.Volume;
 * import com.pulumi.azure.elasticsan.VolumeArgs;
 * import com.pulumi.azure.elasticsan.inputs.VolumeCreateSourceArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new ResourceGroup("example", ResourceGroupArgs.builder()
 *             .name("example-rg")
 *             .location("West Europe")
 *             .build());
 * 
 *         var exampleElasticSan = new ElasticSan("exampleElasticSan", ElasticSanArgs.builder()
 *             .name("example-es")
 *             .resourceGroupName(example.name())
 *             .location(example.location())
 *             .baseSizeInTib(1)
 *             .sku(ElasticSanSkuArgs.builder()
 *                 .name("Premium_LRS")
 *                 .build())
 *             .build());
 * 
 *         var exampleVolumeGroup = new VolumeGroup("exampleVolumeGroup", VolumeGroupArgs.builder()
 *             .name("example-esvg")
 *             .elasticSanId(exampleElasticSan.id())
 *             .build());
 * 
 *         var exampleManagedDisk = new ManagedDisk("exampleManagedDisk", ManagedDiskArgs.builder()
 *             .name("example-disk")
 *             .location(example.location())
 *             .resourceGroupName(example.name())
 *             .createOption("Empty")
 *             .storageAccountType("Standard_LRS")
 *             .diskSizeGb(2)
 *             .build());
 * 
 *         var exampleSnapshot = new Snapshot("exampleSnapshot", SnapshotArgs.builder()
 *             .name("example-ss")
 *             .location(example.location())
 *             .resourceGroupName(example.name())
 *             .createOption("Copy")
 *             .sourceUri(exampleManagedDisk.id())
 *             .build());
 * 
 *         var example2 = new Volume("example2", VolumeArgs.builder()
 *             .name("example-esv2")
 *             .volumeGroupId(exampleVolumeGroup.id())
 *             .sizeInGib(2)
 *             .createSource(VolumeCreateSourceArgs.builder()
 *                 .sourceType("DiskSnapshot")
 *                 .sourceId(exampleSnapshot.id())
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * An existing Elastic SAN Volume can be imported into Terraform using the `resource id`, e.g.
 * 
 * ```sh
 * $ pulumi import azure:elasticsan/volume:Volume example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rg1/providers/Microsoft.ElasticSan/elasticSans/esan1/volumeGroups/vg1/volumes/vol1
 * ```
 * 
 */
@ResourceType(type="azure:elasticsan/volume:Volume")
public class Volume extends com.pulumi.resources.CustomResource {
    /**
     * A `create_source` block as defined below.
     * 
     */
    @Export(name="createSource", refs={VolumeCreateSource.class}, tree="[0]")
    private Output</* @Nullable */ VolumeCreateSource> createSource;

    /**
     * @return A `create_source` block as defined below.
     * 
     */
    public Output<Optional<VolumeCreateSource>> createSource() {
        return Codegen.optional(this.createSource);
    }
    /**
     * Specifies the name of this Elastic SAN Volume. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return Specifies the name of this Elastic SAN Volume. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Specifies the size of the Elastic SAN Volume in GiB. The size should be within the remaining capacity of the parent Elastic SAN. Possible values are between `1` and `65536` (16 TiB).
     * 
     * &gt; **NOTE:** The size can only be increased. If `create_source` is specified, then the size must be equal to or greater than the source&#39;s size.
     * 
     */
    @Export(name="sizeInGib", refs={Integer.class}, tree="[0]")
    private Output<Integer> sizeInGib;

    /**
     * @return Specifies the size of the Elastic SAN Volume in GiB. The size should be within the remaining capacity of the parent Elastic SAN. Possible values are between `1` and `65536` (16 TiB).
     * 
     * &gt; **NOTE:** The size can only be increased. If `create_source` is specified, then the size must be equal to or greater than the source&#39;s size.
     * 
     */
    public Output<Integer> sizeInGib() {
        return this.sizeInGib;
    }
    /**
     * The iSCSI Target IQN of the Elastic SAN Volume.
     * 
     */
    @Export(name="targetIqn", refs={String.class}, tree="[0]")
    private Output<String> targetIqn;

    /**
     * @return The iSCSI Target IQN of the Elastic SAN Volume.
     * 
     */
    public Output<String> targetIqn() {
        return this.targetIqn;
    }
    /**
     * The iSCSI Target Portal Host Name of the Elastic SAN Volume.
     * 
     */
    @Export(name="targetPortalHostname", refs={String.class}, tree="[0]")
    private Output<String> targetPortalHostname;

    /**
     * @return The iSCSI Target Portal Host Name of the Elastic SAN Volume.
     * 
     */
    public Output<String> targetPortalHostname() {
        return this.targetPortalHostname;
    }
    /**
     * The iSCSI Target Portal Port of the Elastic SAN Volume.
     * 
     */
    @Export(name="targetPortalPort", refs={Integer.class}, tree="[0]")
    private Output<Integer> targetPortalPort;

    /**
     * @return The iSCSI Target Portal Port of the Elastic SAN Volume.
     * 
     */
    public Output<Integer> targetPortalPort() {
        return this.targetPortalPort;
    }
    /**
     * Specifies the Volume Group ID within which this Elastic SAN Volume should exist. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="volumeGroupId", refs={String.class}, tree="[0]")
    private Output<String> volumeGroupId;

    /**
     * @return Specifies the Volume Group ID within which this Elastic SAN Volume should exist. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> volumeGroupId() {
        return this.volumeGroupId;
    }
    /**
     * The UUID of the Elastic SAN Volume.
     * 
     */
    @Export(name="volumeId", refs={String.class}, tree="[0]")
    private Output<String> volumeId;

    /**
     * @return The UUID of the Elastic SAN Volume.
     * 
     */
    public Output<String> volumeId() {
        return this.volumeId;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Volume(String name) {
        this(name, VolumeArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Volume(String name, VolumeArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Volume(String name, VolumeArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:elasticsan/volume:Volume", name, args == null ? VolumeArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private Volume(String name, Output<String> id, @Nullable VolumeState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:elasticsan/volume:Volume", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Volume get(String name, Output<String> id, @Nullable VolumeState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Volume(name, id, state, options);
    }
}
