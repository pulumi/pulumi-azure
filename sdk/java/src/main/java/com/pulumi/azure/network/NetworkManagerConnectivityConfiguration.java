// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.network;

import com.pulumi.azure.Utilities;
import com.pulumi.azure.network.NetworkManagerConnectivityConfigurationArgs;
import com.pulumi.azure.network.inputs.NetworkManagerConnectivityConfigurationState;
import com.pulumi.azure.network.outputs.NetworkManagerConnectivityConfigurationAppliesToGroup;
import com.pulumi.azure.network.outputs.NetworkManagerConnectivityConfigurationHub;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Manages a Network Manager Connectivity Configuration.
 * 
 * &gt; **Note:** The `azure.network.NetworkManagerConnectivityConfiguration` deployment may modify or delete existing Network Peering resource.
 * 
 * ## Import
 * 
 * Network Manager Connectivity Configuration can be imported using the `resource id`, e.g.
 * 
 * ```sh
 * $ pulumi import azure:network/networkManagerConnectivityConfiguration:NetworkManagerConnectivityConfiguration example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resourceGroup1/providers/Microsoft.Network/networkManagers/networkManager1/connectivityConfigurations/configuration1
 * ```
 * 
 */
@ResourceType(type="azure:network/networkManagerConnectivityConfiguration:NetworkManagerConnectivityConfiguration")
public class NetworkManagerConnectivityConfiguration extends com.pulumi.resources.CustomResource {
    /**
     * One or more `applies_to_group` blocks as defined below.
     * 
     */
    @Export(name="appliesToGroups", refs={List.class,NetworkManagerConnectivityConfigurationAppliesToGroup.class}, tree="[0,1]")
    private Output<List<NetworkManagerConnectivityConfigurationAppliesToGroup>> appliesToGroups;

    /**
     * @return One or more `applies_to_group` blocks as defined below.
     * 
     */
    public Output<List<NetworkManagerConnectivityConfigurationAppliesToGroup>> appliesToGroups() {
        return this.appliesToGroups;
    }
    /**
     * Specifies the connectivity topology type. Possible values are `HubAndSpoke` and `Mesh`.
     * 
     */
    @Export(name="connectivityTopology", refs={String.class}, tree="[0]")
    private Output<String> connectivityTopology;

    /**
     * @return Specifies the connectivity topology type. Possible values are `HubAndSpoke` and `Mesh`.
     * 
     */
    public Output<String> connectivityTopology() {
        return this.connectivityTopology;
    }
    /**
     * Indicates whether to remove current existing Virtual Network Peering in the Connectivity Configuration affected scope. Possible values are `true` and `false`.
     * 
     */
    @Export(name="deleteExistingPeeringEnabled", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> deleteExistingPeeringEnabled;

    /**
     * @return Indicates whether to remove current existing Virtual Network Peering in the Connectivity Configuration affected scope. Possible values are `true` and `false`.
     * 
     */
    public Output<Optional<Boolean>> deleteExistingPeeringEnabled() {
        return Codegen.optional(this.deleteExistingPeeringEnabled);
    }
    /**
     * A description of the Connectivity Configuration.
     * 
     */
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> description;

    /**
     * @return A description of the Connectivity Configuration.
     * 
     */
    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    /**
     * Indicates whether to global mesh is supported. Possible values are `true` and `false`.
     * 
     */
    @Export(name="globalMeshEnabled", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> globalMeshEnabled;

    /**
     * @return Indicates whether to global mesh is supported. Possible values are `true` and `false`.
     * 
     */
    public Output<Optional<Boolean>> globalMeshEnabled() {
        return Codegen.optional(this.globalMeshEnabled);
    }
    /**
     * A `hub` block as defined below.
     * 
     */
    @Export(name="hub", refs={NetworkManagerConnectivityConfigurationHub.class}, tree="[0]")
    private Output</* @Nullable */ NetworkManagerConnectivityConfigurationHub> hub;

    /**
     * @return A `hub` block as defined below.
     * 
     */
    public Output<Optional<NetworkManagerConnectivityConfigurationHub>> hub() {
        return Codegen.optional(this.hub);
    }
    /**
     * Specifies the name which should be used for this Network Manager Connectivity Configuration. Changing this forces a new Network Manager Connectivity Configuration to be created.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return Specifies the name which should be used for this Network Manager Connectivity Configuration. Changing this forces a new Network Manager Connectivity Configuration to be created.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Specifies the ID of the Network Manager. Changing this forces a new Network Manager Connectivity Configuration to be created.
     * 
     */
    @Export(name="networkManagerId", refs={String.class}, tree="[0]")
    private Output<String> networkManagerId;

    /**
     * @return Specifies the ID of the Network Manager. Changing this forces a new Network Manager Connectivity Configuration to be created.
     * 
     */
    public Output<String> networkManagerId() {
        return this.networkManagerId;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public NetworkManagerConnectivityConfiguration(String name) {
        this(name, NetworkManagerConnectivityConfigurationArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public NetworkManagerConnectivityConfiguration(String name, NetworkManagerConnectivityConfigurationArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public NetworkManagerConnectivityConfiguration(String name, NetworkManagerConnectivityConfigurationArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:network/networkManagerConnectivityConfiguration:NetworkManagerConnectivityConfiguration", name, args == null ? NetworkManagerConnectivityConfigurationArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private NetworkManagerConnectivityConfiguration(String name, Output<String> id, @Nullable NetworkManagerConnectivityConfigurationState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:network/networkManagerConnectivityConfiguration:NetworkManagerConnectivityConfiguration", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static NetworkManagerConnectivityConfiguration get(String name, Output<String> id, @Nullable NetworkManagerConnectivityConfigurationState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new NetworkManagerConnectivityConfiguration(name, id, state, options);
    }
}
