// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.appinsights.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AnalyticsItemState extends com.pulumi.resources.ResourceArgs {

    public static final AnalyticsItemState Empty = new AnalyticsItemState();

    /**
     * The ID of the Application Insights component on which the Analytics Item exists. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="applicationInsightsId")
    private @Nullable Output<String> applicationInsightsId;

    /**
     * @return The ID of the Application Insights component on which the Analytics Item exists. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> applicationInsightsId() {
        return Optional.ofNullable(this.applicationInsightsId);
    }

    /**
     * The content for the Analytics Item, for example the query text if `type` is `query`.
     * 
     */
    @Import(name="content")
    private @Nullable Output<String> content;

    /**
     * @return The content for the Analytics Item, for example the query text if `type` is `query`.
     * 
     */
    public Optional<Output<String>> content() {
        return Optional.ofNullable(this.content);
    }

    /**
     * The alias to use for the function. Required when `type` is `function`.
     * 
     */
    @Import(name="functionAlias")
    private @Nullable Output<String> functionAlias;

    /**
     * @return The alias to use for the function. Required when `type` is `function`.
     * 
     */
    public Optional<Output<String>> functionAlias() {
        return Optional.ofNullable(this.functionAlias);
    }

    /**
     * Specifies the name of the Application Insights Analytics Item. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Specifies the name of the Application Insights Analytics Item. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The scope for the Analytics Item. Can be `shared` or `user`. Changing this forces a new resource to be created. Must be `shared` for functions.
     * 
     */
    @Import(name="scope")
    private @Nullable Output<String> scope;

    /**
     * @return The scope for the Analytics Item. Can be `shared` or `user`. Changing this forces a new resource to be created. Must be `shared` for functions.
     * 
     */
    public Optional<Output<String>> scope() {
        return Optional.ofNullable(this.scope);
    }

    /**
     * A string containing the time the Analytics Item was created.
     * 
     */
    @Import(name="timeCreated")
    private @Nullable Output<String> timeCreated;

    /**
     * @return A string containing the time the Analytics Item was created.
     * 
     */
    public Optional<Output<String>> timeCreated() {
        return Optional.ofNullable(this.timeCreated);
    }

    /**
     * A string containing the time the Analytics Item was last modified.
     * 
     */
    @Import(name="timeModified")
    private @Nullable Output<String> timeModified;

    /**
     * @return A string containing the time the Analytics Item was last modified.
     * 
     */
    public Optional<Output<String>> timeModified() {
        return Optional.ofNullable(this.timeModified);
    }

    /**
     * The type of Analytics Item to create. Can be one of `query`, `function`, `folder`, `recent`. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="type")
    private @Nullable Output<String> type;

    /**
     * @return The type of Analytics Item to create. Can be one of `query`, `function`, `folder`, `recent`. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> type() {
        return Optional.ofNullable(this.type);
    }

    /**
     * A string indicating the version of the query format
     * 
     */
    @Import(name="version")
    private @Nullable Output<String> version;

    /**
     * @return A string indicating the version of the query format
     * 
     */
    public Optional<Output<String>> version() {
        return Optional.ofNullable(this.version);
    }

    private AnalyticsItemState() {}

    private AnalyticsItemState(AnalyticsItemState $) {
        this.applicationInsightsId = $.applicationInsightsId;
        this.content = $.content;
        this.functionAlias = $.functionAlias;
        this.name = $.name;
        this.scope = $.scope;
        this.timeCreated = $.timeCreated;
        this.timeModified = $.timeModified;
        this.type = $.type;
        this.version = $.version;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AnalyticsItemState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AnalyticsItemState $;

        public Builder() {
            $ = new AnalyticsItemState();
        }

        public Builder(AnalyticsItemState defaults) {
            $ = new AnalyticsItemState(Objects.requireNonNull(defaults));
        }

        /**
         * @param applicationInsightsId The ID of the Application Insights component on which the Analytics Item exists. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder applicationInsightsId(@Nullable Output<String> applicationInsightsId) {
            $.applicationInsightsId = applicationInsightsId;
            return this;
        }

        /**
         * @param applicationInsightsId The ID of the Application Insights component on which the Analytics Item exists. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder applicationInsightsId(String applicationInsightsId) {
            return applicationInsightsId(Output.of(applicationInsightsId));
        }

        /**
         * @param content The content for the Analytics Item, for example the query text if `type` is `query`.
         * 
         * @return builder
         * 
         */
        public Builder content(@Nullable Output<String> content) {
            $.content = content;
            return this;
        }

        /**
         * @param content The content for the Analytics Item, for example the query text if `type` is `query`.
         * 
         * @return builder
         * 
         */
        public Builder content(String content) {
            return content(Output.of(content));
        }

        /**
         * @param functionAlias The alias to use for the function. Required when `type` is `function`.
         * 
         * @return builder
         * 
         */
        public Builder functionAlias(@Nullable Output<String> functionAlias) {
            $.functionAlias = functionAlias;
            return this;
        }

        /**
         * @param functionAlias The alias to use for the function. Required when `type` is `function`.
         * 
         * @return builder
         * 
         */
        public Builder functionAlias(String functionAlias) {
            return functionAlias(Output.of(functionAlias));
        }

        /**
         * @param name Specifies the name of the Application Insights Analytics Item. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Specifies the name of the Application Insights Analytics Item. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param scope The scope for the Analytics Item. Can be `shared` or `user`. Changing this forces a new resource to be created. Must be `shared` for functions.
         * 
         * @return builder
         * 
         */
        public Builder scope(@Nullable Output<String> scope) {
            $.scope = scope;
            return this;
        }

        /**
         * @param scope The scope for the Analytics Item. Can be `shared` or `user`. Changing this forces a new resource to be created. Must be `shared` for functions.
         * 
         * @return builder
         * 
         */
        public Builder scope(String scope) {
            return scope(Output.of(scope));
        }

        /**
         * @param timeCreated A string containing the time the Analytics Item was created.
         * 
         * @return builder
         * 
         */
        public Builder timeCreated(@Nullable Output<String> timeCreated) {
            $.timeCreated = timeCreated;
            return this;
        }

        /**
         * @param timeCreated A string containing the time the Analytics Item was created.
         * 
         * @return builder
         * 
         */
        public Builder timeCreated(String timeCreated) {
            return timeCreated(Output.of(timeCreated));
        }

        /**
         * @param timeModified A string containing the time the Analytics Item was last modified.
         * 
         * @return builder
         * 
         */
        public Builder timeModified(@Nullable Output<String> timeModified) {
            $.timeModified = timeModified;
            return this;
        }

        /**
         * @param timeModified A string containing the time the Analytics Item was last modified.
         * 
         * @return builder
         * 
         */
        public Builder timeModified(String timeModified) {
            return timeModified(Output.of(timeModified));
        }

        /**
         * @param type The type of Analytics Item to create. Can be one of `query`, `function`, `folder`, `recent`. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder type(@Nullable Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type The type of Analytics Item to create. Can be one of `query`, `function`, `folder`, `recent`. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        /**
         * @param version A string indicating the version of the query format
         * 
         * @return builder
         * 
         */
        public Builder version(@Nullable Output<String> version) {
            $.version = version;
            return this;
        }

        /**
         * @param version A string indicating the version of the query format
         * 
         * @return builder
         * 
         */
        public Builder version(String version) {
            return version(Output.of(version));
        }

        public AnalyticsItemState build() {
            return $;
        }
    }

}
