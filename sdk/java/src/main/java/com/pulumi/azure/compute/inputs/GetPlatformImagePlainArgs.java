// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.compute.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetPlatformImagePlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetPlatformImagePlainArgs Empty = new GetPlatformImagePlainArgs();

    /**
     * Specifies the Location to pull information about this Platform Image from.
     * 
     */
    @Import(name="location", required=true)
    private String location;

    /**
     * @return Specifies the Location to pull information about this Platform Image from.
     * 
     */
    public String location() {
        return this.location;
    }

    /**
     * Specifies the Offer associated with the Platform Image.
     * 
     */
    @Import(name="offer", required=true)
    private String offer;

    /**
     * @return Specifies the Offer associated with the Platform Image.
     * 
     */
    public String offer() {
        return this.offer;
    }

    /**
     * Specifies the Publisher associated with the Platform Image.
     * 
     */
    @Import(name="publisher", required=true)
    private String publisher;

    /**
     * @return Specifies the Publisher associated with the Platform Image.
     * 
     */
    public String publisher() {
        return this.publisher;
    }

    /**
     * Specifies the SKU of the Platform Image.
     * 
     */
    @Import(name="sku", required=true)
    private String sku;

    /**
     * @return Specifies the SKU of the Platform Image.
     * 
     */
    public String sku() {
        return this.sku;
    }

    /**
     * The version of the Platform Image.
     * 
     */
    @Import(name="version")
    private @Nullable String version;

    /**
     * @return The version of the Platform Image.
     * 
     */
    public Optional<String> version() {
        return Optional.ofNullable(this.version);
    }

    private GetPlatformImagePlainArgs() {}

    private GetPlatformImagePlainArgs(GetPlatformImagePlainArgs $) {
        this.location = $.location;
        this.offer = $.offer;
        this.publisher = $.publisher;
        this.sku = $.sku;
        this.version = $.version;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetPlatformImagePlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetPlatformImagePlainArgs $;

        public Builder() {
            $ = new GetPlatformImagePlainArgs();
        }

        public Builder(GetPlatformImagePlainArgs defaults) {
            $ = new GetPlatformImagePlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param location Specifies the Location to pull information about this Platform Image from.
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            $.location = location;
            return this;
        }

        /**
         * @param offer Specifies the Offer associated with the Platform Image.
         * 
         * @return builder
         * 
         */
        public Builder offer(String offer) {
            $.offer = offer;
            return this;
        }

        /**
         * @param publisher Specifies the Publisher associated with the Platform Image.
         * 
         * @return builder
         * 
         */
        public Builder publisher(String publisher) {
            $.publisher = publisher;
            return this;
        }

        /**
         * @param sku Specifies the SKU of the Platform Image.
         * 
         * @return builder
         * 
         */
        public Builder sku(String sku) {
            $.sku = sku;
            return this;
        }

        /**
         * @param version The version of the Platform Image.
         * 
         * @return builder
         * 
         */
        public Builder version(@Nullable String version) {
            $.version = version;
            return this;
        }

        public GetPlatformImagePlainArgs build() {
            if ($.location == null) {
                throw new MissingRequiredPropertyException("GetPlatformImagePlainArgs", "location");
            }
            if ($.offer == null) {
                throw new MissingRequiredPropertyException("GetPlatformImagePlainArgs", "offer");
            }
            if ($.publisher == null) {
                throw new MissingRequiredPropertyException("GetPlatformImagePlainArgs", "publisher");
            }
            if ($.sku == null) {
                throw new MissingRequiredPropertyException("GetPlatformImagePlainArgs", "sku");
            }
            return $;
        }
    }

}
