// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.cdn.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetFrontdoorProfileIdentity extends com.pulumi.resources.InvokeArgs {

    public static final GetFrontdoorProfileIdentity Empty = new GetFrontdoorProfileIdentity();

    /**
     * The list of User Assigned Managed Identity IDs assigned to this Front Door Profile.
     * 
     */
    @Import(name="identityIds")
    private @Nullable List<String> identityIds;

    /**
     * @return The list of User Assigned Managed Identity IDs assigned to this Front Door Profile.
     * 
     */
    public Optional<List<String>> identityIds() {
        return Optional.ofNullable(this.identityIds);
    }

    @Import(name="principalId", required=true)
    private String principalId;

    public String principalId() {
        return this.principalId;
    }

    @Import(name="tenantId", required=true)
    private String tenantId;

    public String tenantId() {
        return this.tenantId;
    }

    /**
     * The type of Managed Service Identity that is configured on this Front Door Profile.
     * 
     */
    @Import(name="type", required=true)
    private String type;

    /**
     * @return The type of Managed Service Identity that is configured on this Front Door Profile.
     * 
     */
    public String type() {
        return this.type;
    }

    private GetFrontdoorProfileIdentity() {}

    private GetFrontdoorProfileIdentity(GetFrontdoorProfileIdentity $) {
        this.identityIds = $.identityIds;
        this.principalId = $.principalId;
        this.tenantId = $.tenantId;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetFrontdoorProfileIdentity defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetFrontdoorProfileIdentity $;

        public Builder() {
            $ = new GetFrontdoorProfileIdentity();
        }

        public Builder(GetFrontdoorProfileIdentity defaults) {
            $ = new GetFrontdoorProfileIdentity(Objects.requireNonNull(defaults));
        }

        /**
         * @param identityIds The list of User Assigned Managed Identity IDs assigned to this Front Door Profile.
         * 
         * @return builder
         * 
         */
        public Builder identityIds(@Nullable List<String> identityIds) {
            $.identityIds = identityIds;
            return this;
        }

        /**
         * @param identityIds The list of User Assigned Managed Identity IDs assigned to this Front Door Profile.
         * 
         * @return builder
         * 
         */
        public Builder identityIds(String... identityIds) {
            return identityIds(List.of(identityIds));
        }

        public Builder principalId(String principalId) {
            $.principalId = principalId;
            return this;
        }

        public Builder tenantId(String tenantId) {
            $.tenantId = tenantId;
            return this;
        }

        /**
         * @param type The type of Managed Service Identity that is configured on this Front Door Profile.
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            $.type = type;
            return this;
        }

        public GetFrontdoorProfileIdentity build() {
            if ($.principalId == null) {
                throw new MissingRequiredPropertyException("GetFrontdoorProfileIdentity", "principalId");
            }
            if ($.tenantId == null) {
                throw new MissingRequiredPropertyException("GetFrontdoorProfileIdentity", "tenantId");
            }
            if ($.type == null) {
                throw new MissingRequiredPropertyException("GetFrontdoorProfileIdentity", "type");
            }
            return $;
        }
    }

}
