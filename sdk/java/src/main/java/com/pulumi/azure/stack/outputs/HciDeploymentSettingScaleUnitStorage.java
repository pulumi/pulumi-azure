// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.stack.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class HciDeploymentSettingScaleUnitStorage {
    /**
     * @return The configuration mode of storage. If set to `Express` and your storage is configured as per best practices based on the number of nodes in the cluster. Possible values are `Express`, `InfraOnly` and `KeepStorage`. Changing this forces a new Stack HCI Deployment Setting to be created.
     * 
     */
    private String configurationMode;

    private HciDeploymentSettingScaleUnitStorage() {}
    /**
     * @return The configuration mode of storage. If set to `Express` and your storage is configured as per best practices based on the number of nodes in the cluster. Possible values are `Express`, `InfraOnly` and `KeepStorage`. Changing this forces a new Stack HCI Deployment Setting to be created.
     * 
     */
    public String configurationMode() {
        return this.configurationMode;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(HciDeploymentSettingScaleUnitStorage defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String configurationMode;
        public Builder() {}
        public Builder(HciDeploymentSettingScaleUnitStorage defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.configurationMode = defaults.configurationMode;
        }

        @CustomType.Setter
        public Builder configurationMode(String configurationMode) {
            if (configurationMode == null) {
              throw new MissingRequiredPropertyException("HciDeploymentSettingScaleUnitStorage", "configurationMode");
            }
            this.configurationMode = configurationMode;
            return this;
        }
        public HciDeploymentSettingScaleUnitStorage build() {
            final var _resultValue = new HciDeploymentSettingScaleUnitStorage();
            _resultValue.configurationMode = configurationMode;
            return _resultValue;
        }
    }
}
