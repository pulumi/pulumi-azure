// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.synapse;

import com.pulumi.azure.Utilities;
import com.pulumi.azure.synapse.SqlPoolArgs;
import com.pulumi.azure.synapse.inputs.SqlPoolState;
import com.pulumi.azure.synapse.outputs.SqlPoolRestore;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.String;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Manages a Synapse SQL Pool.
 * 
 * ## Example Usage
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.azure.core.ResourceGroup;
 * import com.pulumi.azure.core.ResourceGroupArgs;
 * import com.pulumi.azure.storage.Account;
 * import com.pulumi.azure.storage.AccountArgs;
 * import com.pulumi.azure.storage.DataLakeGen2Filesystem;
 * import com.pulumi.azure.storage.DataLakeGen2FilesystemArgs;
 * import com.pulumi.azure.synapse.Workspace;
 * import com.pulumi.azure.synapse.WorkspaceArgs;
 * import com.pulumi.azure.synapse.inputs.WorkspaceIdentityArgs;
 * import com.pulumi.azure.synapse.SqlPool;
 * import com.pulumi.azure.synapse.SqlPoolArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var exampleResourceGroup = new ResourceGroup(&#34;exampleResourceGroup&#34;, ResourceGroupArgs.builder()        
 *             .location(&#34;West Europe&#34;)
 *             .build());
 * 
 *         var exampleAccount = new Account(&#34;exampleAccount&#34;, AccountArgs.builder()        
 *             .resourceGroupName(exampleResourceGroup.name())
 *             .location(exampleResourceGroup.location())
 *             .accountTier(&#34;Standard&#34;)
 *             .accountReplicationType(&#34;LRS&#34;)
 *             .accountKind(&#34;BlobStorage&#34;)
 *             .build());
 * 
 *         var exampleDataLakeGen2Filesystem = new DataLakeGen2Filesystem(&#34;exampleDataLakeGen2Filesystem&#34;, DataLakeGen2FilesystemArgs.builder()        
 *             .storageAccountId(exampleAccount.id())
 *             .build());
 * 
 *         var exampleWorkspace = new Workspace(&#34;exampleWorkspace&#34;, WorkspaceArgs.builder()        
 *             .resourceGroupName(exampleResourceGroup.name())
 *             .location(exampleResourceGroup.location())
 *             .storageDataLakeGen2FilesystemId(exampleDataLakeGen2Filesystem.id())
 *             .sqlAdministratorLogin(&#34;sqladminuser&#34;)
 *             .sqlAdministratorLoginPassword(&#34;H@Sh1CoR3!&#34;)
 *             .identity(WorkspaceIdentityArgs.builder()
 *                 .type(&#34;SystemAssigned&#34;)
 *                 .build())
 *             .build());
 * 
 *         var exampleSqlPool = new SqlPool(&#34;exampleSqlPool&#34;, SqlPoolArgs.builder()        
 *             .synapseWorkspaceId(exampleWorkspace.id())
 *             .skuName(&#34;DW100c&#34;)
 *             .createMode(&#34;Default&#34;)
 *             .storageAccountType(&#34;GRS&#34;)
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * Synapse SQL Pool can be imported using the `resource id`, e.g.
 * 
 * ```sh
 *  $ pulumi import azure:synapse/sqlPool:SqlPool example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.Synapse/workspaces/workspace1/sqlPools/sqlPool1
 * ```
 * 
 */
@ResourceType(type="azure:synapse/sqlPool:SqlPool")
public class SqlPool extends com.pulumi.resources.CustomResource {
    /**
     * The name of the collation to use with this pool, only applicable when `create_mode` is set to `Default`. Azure default is `SQL_LATIN1_GENERAL_CP1_CI_AS`. Changing this forces a new Synapse SQL Pool to be created.
     * 
     */
    @Export(name="collation", refs={String.class}, tree="[0]")
    private Output<String> collation;

    /**
     * @return The name of the collation to use with this pool, only applicable when `create_mode` is set to `Default`. Azure default is `SQL_LATIN1_GENERAL_CP1_CI_AS`. Changing this forces a new Synapse SQL Pool to be created.
     * 
     */
    public Output<String> collation() {
        return this.collation;
    }
    /**
     * Specifies how to create the SQL Pool. Valid values are: `Default`, `Recovery` or `PointInTimeRestore`. Must be `Default` to create a new database. Defaults to `Default`. Changing this forces a new Synapse SQL Pool to be created.
     * 
     */
    @Export(name="createMode", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> createMode;

    /**
     * @return Specifies how to create the SQL Pool. Valid values are: `Default`, `Recovery` or `PointInTimeRestore`. Must be `Default` to create a new database. Defaults to `Default`. Changing this forces a new Synapse SQL Pool to be created.
     * 
     */
    public Output<Optional<String>> createMode() {
        return Codegen.optional(this.createMode);
    }
    /**
     * Is transparent data encryption enabled?
     * 
     */
    @Export(name="dataEncrypted", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> dataEncrypted;

    /**
     * @return Is transparent data encryption enabled?
     * 
     */
    public Output<Optional<Boolean>> dataEncrypted() {
        return Codegen.optional(this.dataEncrypted);
    }
    /**
     * Is geo-backup policy enabled? Possible values include `true` or `false`. Defaults to `true`.
     * 
     */
    @Export(name="geoBackupPolicyEnabled", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> geoBackupPolicyEnabled;

    /**
     * @return Is geo-backup policy enabled? Possible values include `true` or `false`. Defaults to `true`.
     * 
     */
    public Output<Optional<Boolean>> geoBackupPolicyEnabled() {
        return Codegen.optional(this.geoBackupPolicyEnabled);
    }
    /**
     * The name which should be used for this Synapse SQL Pool. Changing this forces a new Synapse SQL Pool to be created.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The name which should be used for this Synapse SQL Pool. Changing this forces a new Synapse SQL Pool to be created.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The ID of the Synapse SQL Pool or SQL Database which is to back up, only applicable when `create_mode` is set to `Recovery`. Changing this forces a new Synapse SQL Pool to be created.
     * 
     */
    @Export(name="recoveryDatabaseId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> recoveryDatabaseId;

    /**
     * @return The ID of the Synapse SQL Pool or SQL Database which is to back up, only applicable when `create_mode` is set to `Recovery`. Changing this forces a new Synapse SQL Pool to be created.
     * 
     */
    public Output<Optional<String>> recoveryDatabaseId() {
        return Codegen.optional(this.recoveryDatabaseId);
    }
    /**
     * A `restore` block as defined below. Only applicable when `create_mode` is set to `PointInTimeRestore`. Changing this forces a new Synapse SQL Pool to be created.
     * 
     */
    @Export(name="restore", refs={SqlPoolRestore.class}, tree="[0]")
    private Output</* @Nullable */ SqlPoolRestore> restore;

    /**
     * @return A `restore` block as defined below. Only applicable when `create_mode` is set to `PointInTimeRestore`. Changing this forces a new Synapse SQL Pool to be created.
     * 
     */
    public Output<Optional<SqlPoolRestore>> restore() {
        return Codegen.optional(this.restore);
    }
    /**
     * Specifies the SKU Name for this Synapse SQL Pool. Possible values are `DW100c`, `DW200c`, `DW300c`, `DW400c`, `DW500c`, `DW1000c`, `DW1500c`, `DW2000c`, `DW2500c`, `DW3000c`, `DW5000c`, `DW6000c`, `DW7500c`, `DW10000c`, `DW15000c` or `DW30000c`.
     * 
     */
    @Export(name="skuName", refs={String.class}, tree="[0]")
    private Output<String> skuName;

    /**
     * @return Specifies the SKU Name for this Synapse SQL Pool. Possible values are `DW100c`, `DW200c`, `DW300c`, `DW400c`, `DW500c`, `DW1000c`, `DW1500c`, `DW2000c`, `DW2500c`, `DW3000c`, `DW5000c`, `DW6000c`, `DW7500c`, `DW10000c`, `DW15000c` or `DW30000c`.
     * 
     */
    public Output<String> skuName() {
        return this.skuName;
    }
    /**
     * The storage account type that will be used to store backups for this Synapse SQL Pool. Possible values are `LRS` or `GRS`. Changing this forces a new Synapse SQL Pool to be created. Defaults to `GRS`.
     * 
     */
    @Export(name="storageAccountType", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> storageAccountType;

    /**
     * @return The storage account type that will be used to store backups for this Synapse SQL Pool. Possible values are `LRS` or `GRS`. Changing this forces a new Synapse SQL Pool to be created. Defaults to `GRS`.
     * 
     */
    public Output<Optional<String>> storageAccountType() {
        return Codegen.optional(this.storageAccountType);
    }
    /**
     * The ID of Synapse Workspace within which this SQL Pool should be created. Changing this forces a new Synapse SQL Pool to be created.
     * 
     */
    @Export(name="synapseWorkspaceId", refs={String.class}, tree="[0]")
    private Output<String> synapseWorkspaceId;

    /**
     * @return The ID of Synapse Workspace within which this SQL Pool should be created. Changing this forces a new Synapse SQL Pool to be created.
     * 
     */
    public Output<String> synapseWorkspaceId() {
        return this.synapseWorkspaceId;
    }
    /**
     * A mapping of tags which should be assigned to the Synapse SQL Pool.
     * 
     */
    @Export(name="tags", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output</* @Nullable */ Map<String,String>> tags;

    /**
     * @return A mapping of tags which should be assigned to the Synapse SQL Pool.
     * 
     */
    public Output<Optional<Map<String,String>>> tags() {
        return Codegen.optional(this.tags);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public SqlPool(String name) {
        this(name, SqlPoolArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public SqlPool(String name, SqlPoolArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public SqlPool(String name, SqlPoolArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:synapse/sqlPool:SqlPool", name, args == null ? SqlPoolArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private SqlPool(String name, Output<String> id, @Nullable SqlPoolState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:synapse/sqlPool:SqlPool", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static SqlPool get(String name, Output<String> id, @Nullable SqlPoolState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new SqlPool(name, id, state, options);
    }
}
