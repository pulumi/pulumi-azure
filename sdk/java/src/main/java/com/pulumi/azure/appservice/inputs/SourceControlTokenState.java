// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.appservice.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SourceControlTokenState extends com.pulumi.resources.ResourceArgs {

    public static final SourceControlTokenState Empty = new SourceControlTokenState();

    /**
     * The Access Token.
     * 
     */
    @Import(name="token")
    private @Nullable Output<String> token;

    /**
     * @return The Access Token.
     * 
     */
    public Optional<Output<String>> token() {
        return Optional.ofNullable(this.token);
    }

    @Import(name="tokenSecret")
    private @Nullable Output<String> tokenSecret;

    public Optional<Output<String>> tokenSecret() {
        return Optional.ofNullable(this.tokenSecret);
    }

    /**
     * The Token type. Possible values include `Bitbucket`, `Dropbox`, `Github`, and `OneDrive`.
     * 
     */
    @Import(name="type")
    private @Nullable Output<String> type;

    /**
     * @return The Token type. Possible values include `Bitbucket`, `Dropbox`, `Github`, and `OneDrive`.
     * 
     */
    public Optional<Output<String>> type() {
        return Optional.ofNullable(this.type);
    }

    private SourceControlTokenState() {}

    private SourceControlTokenState(SourceControlTokenState $) {
        this.token = $.token;
        this.tokenSecret = $.tokenSecret;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SourceControlTokenState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SourceControlTokenState $;

        public Builder() {
            $ = new SourceControlTokenState();
        }

        public Builder(SourceControlTokenState defaults) {
            $ = new SourceControlTokenState(Objects.requireNonNull(defaults));
        }

        /**
         * @param token The Access Token.
         * 
         * @return builder
         * 
         */
        public Builder token(@Nullable Output<String> token) {
            $.token = token;
            return this;
        }

        /**
         * @param token The Access Token.
         * 
         * @return builder
         * 
         */
        public Builder token(String token) {
            return token(Output.of(token));
        }

        public Builder tokenSecret(@Nullable Output<String> tokenSecret) {
            $.tokenSecret = tokenSecret;
            return this;
        }

        public Builder tokenSecret(String tokenSecret) {
            return tokenSecret(Output.of(tokenSecret));
        }

        /**
         * @param type The Token type. Possible values include `Bitbucket`, `Dropbox`, `Github`, and `OneDrive`.
         * 
         * @return builder
         * 
         */
        public Builder type(@Nullable Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type The Token type. Possible values include `Bitbucket`, `Dropbox`, `Github`, and `OneDrive`.
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        public SourceControlTokenState build() {
            return $;
        }
    }

}
