// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.servicebus;

import com.pulumi.azure.servicebus.inputs.NamespaceNetworkRuleSetNetworkRuleArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class NamespaceNetworkRuleSetArgs extends com.pulumi.resources.ResourceArgs {

    public static final NamespaceNetworkRuleSetArgs Empty = new NamespaceNetworkRuleSetArgs();

    /**
     * Specifies the default action for the ServiceBus Namespace Network Rule Set. Possible values are `Allow` and `Deny`. Defaults to `Allow`.
     * 
     */
    @Import(name="defaultAction")
    private @Nullable Output<String> defaultAction;

    /**
     * @return Specifies the default action for the ServiceBus Namespace Network Rule Set. Possible values are `Allow` and `Deny`. Defaults to `Allow`.
     * 
     */
    public Optional<Output<String>> defaultAction() {
        return Optional.ofNullable(this.defaultAction);
    }

    /**
     * One or more IP Addresses, or CIDR Blocks which should be able to access the ServiceBus Namespace.
     * 
     */
    @Import(name="ipRules")
    private @Nullable Output<List<String>> ipRules;

    /**
     * @return One or more IP Addresses, or CIDR Blocks which should be able to access the ServiceBus Namespace.
     * 
     */
    public Optional<Output<List<String>>> ipRules() {
        return Optional.ofNullable(this.ipRules);
    }

    /**
     * Specifies the ServiceBus Namespace ID to which to attach the ServiceBus Namespace Network Rule Set. Changing this forces a new resource to be created.
     * 
     * &gt; **NOTE:** The ServiceBus Namespace must be `Premium` in order to attach a ServiceBus Namespace Network Rule Set.
     * 
     */
    @Import(name="namespaceId", required=true)
    private Output<String> namespaceId;

    /**
     * @return Specifies the ServiceBus Namespace ID to which to attach the ServiceBus Namespace Network Rule Set. Changing this forces a new resource to be created.
     * 
     * &gt; **NOTE:** The ServiceBus Namespace must be `Premium` in order to attach a ServiceBus Namespace Network Rule Set.
     * 
     */
    public Output<String> namespaceId() {
        return this.namespaceId;
    }

    /**
     * One or more `network_rules` blocks as defined below.
     * 
     */
    @Import(name="networkRules")
    private @Nullable Output<List<NamespaceNetworkRuleSetNetworkRuleArgs>> networkRules;

    /**
     * @return One or more `network_rules` blocks as defined below.
     * 
     */
    public Optional<Output<List<NamespaceNetworkRuleSetNetworkRuleArgs>>> networkRules() {
        return Optional.ofNullable(this.networkRules);
    }

    /**
     * Whether to allow traffic over public network. Possible values are `true` and `false`. Defaults to `true`.
     * 
     */
    @Import(name="publicNetworkAccessEnabled")
    private @Nullable Output<Boolean> publicNetworkAccessEnabled;

    /**
     * @return Whether to allow traffic over public network. Possible values are `true` and `false`. Defaults to `true`.
     * 
     */
    public Optional<Output<Boolean>> publicNetworkAccessEnabled() {
        return Optional.ofNullable(this.publicNetworkAccessEnabled);
    }

    /**
     * If True, then Azure Services that are known and trusted for this resource type are allowed to bypass firewall configuration. See [Trusted Microsoft Services](https://github.com/MicrosoftDocs/azure-docs/blob/master/articles/service-bus-messaging/includes/service-bus-trusted-services.md)
     * 
     */
    @Import(name="trustedServicesAllowed")
    private @Nullable Output<Boolean> trustedServicesAllowed;

    /**
     * @return If True, then Azure Services that are known and trusted for this resource type are allowed to bypass firewall configuration. See [Trusted Microsoft Services](https://github.com/MicrosoftDocs/azure-docs/blob/master/articles/service-bus-messaging/includes/service-bus-trusted-services.md)
     * 
     */
    public Optional<Output<Boolean>> trustedServicesAllowed() {
        return Optional.ofNullable(this.trustedServicesAllowed);
    }

    private NamespaceNetworkRuleSetArgs() {}

    private NamespaceNetworkRuleSetArgs(NamespaceNetworkRuleSetArgs $) {
        this.defaultAction = $.defaultAction;
        this.ipRules = $.ipRules;
        this.namespaceId = $.namespaceId;
        this.networkRules = $.networkRules;
        this.publicNetworkAccessEnabled = $.publicNetworkAccessEnabled;
        this.trustedServicesAllowed = $.trustedServicesAllowed;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(NamespaceNetworkRuleSetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private NamespaceNetworkRuleSetArgs $;

        public Builder() {
            $ = new NamespaceNetworkRuleSetArgs();
        }

        public Builder(NamespaceNetworkRuleSetArgs defaults) {
            $ = new NamespaceNetworkRuleSetArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param defaultAction Specifies the default action for the ServiceBus Namespace Network Rule Set. Possible values are `Allow` and `Deny`. Defaults to `Allow`.
         * 
         * @return builder
         * 
         */
        public Builder defaultAction(@Nullable Output<String> defaultAction) {
            $.defaultAction = defaultAction;
            return this;
        }

        /**
         * @param defaultAction Specifies the default action for the ServiceBus Namespace Network Rule Set. Possible values are `Allow` and `Deny`. Defaults to `Allow`.
         * 
         * @return builder
         * 
         */
        public Builder defaultAction(String defaultAction) {
            return defaultAction(Output.of(defaultAction));
        }

        /**
         * @param ipRules One or more IP Addresses, or CIDR Blocks which should be able to access the ServiceBus Namespace.
         * 
         * @return builder
         * 
         */
        public Builder ipRules(@Nullable Output<List<String>> ipRules) {
            $.ipRules = ipRules;
            return this;
        }

        /**
         * @param ipRules One or more IP Addresses, or CIDR Blocks which should be able to access the ServiceBus Namespace.
         * 
         * @return builder
         * 
         */
        public Builder ipRules(List<String> ipRules) {
            return ipRules(Output.of(ipRules));
        }

        /**
         * @param ipRules One or more IP Addresses, or CIDR Blocks which should be able to access the ServiceBus Namespace.
         * 
         * @return builder
         * 
         */
        public Builder ipRules(String... ipRules) {
            return ipRules(List.of(ipRules));
        }

        /**
         * @param namespaceId Specifies the ServiceBus Namespace ID to which to attach the ServiceBus Namespace Network Rule Set. Changing this forces a new resource to be created.
         * 
         * &gt; **NOTE:** The ServiceBus Namespace must be `Premium` in order to attach a ServiceBus Namespace Network Rule Set.
         * 
         * @return builder
         * 
         */
        public Builder namespaceId(Output<String> namespaceId) {
            $.namespaceId = namespaceId;
            return this;
        }

        /**
         * @param namespaceId Specifies the ServiceBus Namespace ID to which to attach the ServiceBus Namespace Network Rule Set. Changing this forces a new resource to be created.
         * 
         * &gt; **NOTE:** The ServiceBus Namespace must be `Premium` in order to attach a ServiceBus Namespace Network Rule Set.
         * 
         * @return builder
         * 
         */
        public Builder namespaceId(String namespaceId) {
            return namespaceId(Output.of(namespaceId));
        }

        /**
         * @param networkRules One or more `network_rules` blocks as defined below.
         * 
         * @return builder
         * 
         */
        public Builder networkRules(@Nullable Output<List<NamespaceNetworkRuleSetNetworkRuleArgs>> networkRules) {
            $.networkRules = networkRules;
            return this;
        }

        /**
         * @param networkRules One or more `network_rules` blocks as defined below.
         * 
         * @return builder
         * 
         */
        public Builder networkRules(List<NamespaceNetworkRuleSetNetworkRuleArgs> networkRules) {
            return networkRules(Output.of(networkRules));
        }

        /**
         * @param networkRules One or more `network_rules` blocks as defined below.
         * 
         * @return builder
         * 
         */
        public Builder networkRules(NamespaceNetworkRuleSetNetworkRuleArgs... networkRules) {
            return networkRules(List.of(networkRules));
        }

        /**
         * @param publicNetworkAccessEnabled Whether to allow traffic over public network. Possible values are `true` and `false`. Defaults to `true`.
         * 
         * @return builder
         * 
         */
        public Builder publicNetworkAccessEnabled(@Nullable Output<Boolean> publicNetworkAccessEnabled) {
            $.publicNetworkAccessEnabled = publicNetworkAccessEnabled;
            return this;
        }

        /**
         * @param publicNetworkAccessEnabled Whether to allow traffic over public network. Possible values are `true` and `false`. Defaults to `true`.
         * 
         * @return builder
         * 
         */
        public Builder publicNetworkAccessEnabled(Boolean publicNetworkAccessEnabled) {
            return publicNetworkAccessEnabled(Output.of(publicNetworkAccessEnabled));
        }

        /**
         * @param trustedServicesAllowed If True, then Azure Services that are known and trusted for this resource type are allowed to bypass firewall configuration. See [Trusted Microsoft Services](https://github.com/MicrosoftDocs/azure-docs/blob/master/articles/service-bus-messaging/includes/service-bus-trusted-services.md)
         * 
         * @return builder
         * 
         */
        public Builder trustedServicesAllowed(@Nullable Output<Boolean> trustedServicesAllowed) {
            $.trustedServicesAllowed = trustedServicesAllowed;
            return this;
        }

        /**
         * @param trustedServicesAllowed If True, then Azure Services that are known and trusted for this resource type are allowed to bypass firewall configuration. See [Trusted Microsoft Services](https://github.com/MicrosoftDocs/azure-docs/blob/master/articles/service-bus-messaging/includes/service-bus-trusted-services.md)
         * 
         * @return builder
         * 
         */
        public Builder trustedServicesAllowed(Boolean trustedServicesAllowed) {
            return trustedServicesAllowed(Output.of(trustedServicesAllowed));
        }

        public NamespaceNetworkRuleSetArgs build() {
            $.namespaceId = Objects.requireNonNull($.namespaceId, "expected parameter 'namespaceId' to be non-null");
            return $;
        }
    }

}
