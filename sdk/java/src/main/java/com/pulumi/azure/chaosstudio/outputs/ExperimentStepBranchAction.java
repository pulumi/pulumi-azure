// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.chaosstudio.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ExperimentStepBranchAction {
    /**
     * @return The type of action that should be added to the experiment. Possible values are `continuous`, `delay` and `discrete`.
     * 
     */
    private String actionType;
    /**
     * @return An ISO8601 formatted string specifying the duration for a `delay` or `continuous` action.
     * 
     */
    private @Nullable String duration;
    /**
     * @return A key-value map of additional parameters to configure the action. The values that are accepted by this depend on the `urn` i.e. the capability/fault that is applied. Possible parameter values can be found in this [documentation](https://learn.microsoft.com/azure/chaos-studio/chaos-studio-fault-library)
     * 
     */
    private @Nullable Map<String,String> parameters;
    /**
     * @return The name of the Selector to which this action should apply to. This must be specified if the `actionType` is `continuous` or `discrete`.
     * 
     */
    private @Nullable String selectorName;
    /**
     * @return The Unique Resource Name of the action, this value is provided by the `azure.chaosstudio.Capability` resource e.g. `azurerm_chaos_studio_capability.example.urn`. This must be specified if the `actionType` is `continuous` or `discrete`.
     * 
     */
    private @Nullable String urn;

    private ExperimentStepBranchAction() {}
    /**
     * @return The type of action that should be added to the experiment. Possible values are `continuous`, `delay` and `discrete`.
     * 
     */
    public String actionType() {
        return this.actionType;
    }
    /**
     * @return An ISO8601 formatted string specifying the duration for a `delay` or `continuous` action.
     * 
     */
    public Optional<String> duration() {
        return Optional.ofNullable(this.duration);
    }
    /**
     * @return A key-value map of additional parameters to configure the action. The values that are accepted by this depend on the `urn` i.e. the capability/fault that is applied. Possible parameter values can be found in this [documentation](https://learn.microsoft.com/azure/chaos-studio/chaos-studio-fault-library)
     * 
     */
    public Map<String,String> parameters() {
        return this.parameters == null ? Map.of() : this.parameters;
    }
    /**
     * @return The name of the Selector to which this action should apply to. This must be specified if the `actionType` is `continuous` or `discrete`.
     * 
     */
    public Optional<String> selectorName() {
        return Optional.ofNullable(this.selectorName);
    }
    /**
     * @return The Unique Resource Name of the action, this value is provided by the `azure.chaosstudio.Capability` resource e.g. `azurerm_chaos_studio_capability.example.urn`. This must be specified if the `actionType` is `continuous` or `discrete`.
     * 
     */
    public Optional<String> urn() {
        return Optional.ofNullable(this.urn);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ExperimentStepBranchAction defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String actionType;
        private @Nullable String duration;
        private @Nullable Map<String,String> parameters;
        private @Nullable String selectorName;
        private @Nullable String urn;
        public Builder() {}
        public Builder(ExperimentStepBranchAction defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.actionType = defaults.actionType;
    	      this.duration = defaults.duration;
    	      this.parameters = defaults.parameters;
    	      this.selectorName = defaults.selectorName;
    	      this.urn = defaults.urn;
        }

        @CustomType.Setter
        public Builder actionType(String actionType) {
            if (actionType == null) {
              throw new MissingRequiredPropertyException("ExperimentStepBranchAction", "actionType");
            }
            this.actionType = actionType;
            return this;
        }
        @CustomType.Setter
        public Builder duration(@Nullable String duration) {

            this.duration = duration;
            return this;
        }
        @CustomType.Setter
        public Builder parameters(@Nullable Map<String,String> parameters) {

            this.parameters = parameters;
            return this;
        }
        @CustomType.Setter
        public Builder selectorName(@Nullable String selectorName) {

            this.selectorName = selectorName;
            return this;
        }
        @CustomType.Setter
        public Builder urn(@Nullable String urn) {

            this.urn = urn;
            return this;
        }
        public ExperimentStepBranchAction build() {
            final var _resultValue = new ExperimentStepBranchAction();
            _resultValue.actionType = actionType;
            _resultValue.duration = duration;
            _resultValue.parameters = parameters;
            _resultValue.selectorName = selectorName;
            _resultValue.urn = urn;
            return _resultValue;
        }
    }
}
