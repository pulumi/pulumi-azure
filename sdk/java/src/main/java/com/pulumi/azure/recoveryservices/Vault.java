// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.recoveryservices;

import com.pulumi.azure.Utilities;
import com.pulumi.azure.recoveryservices.VaultArgs;
import com.pulumi.azure.recoveryservices.inputs.VaultState;
import com.pulumi.azure.recoveryservices.outputs.VaultEncryption;
import com.pulumi.azure.recoveryservices.outputs.VaultIdentity;
import com.pulumi.azure.recoveryservices.outputs.VaultMonitoring;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.String;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Manages a Recovery Services Vault.
 * 
 * ## Example Usage
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.azure.core.ResourceGroup;
 * import com.pulumi.azure.core.ResourceGroupArgs;
 * import com.pulumi.azure.recoveryservices.Vault;
 * import com.pulumi.azure.recoveryservices.VaultArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new ResourceGroup(&#34;example&#34;, ResourceGroupArgs.builder()        
 *             .location(&#34;West Europe&#34;)
 *             .build());
 * 
 *         var vault = new Vault(&#34;vault&#34;, VaultArgs.builder()        
 *             .location(example.location())
 *             .resourceGroupName(example.name())
 *             .sku(&#34;Standard&#34;)
 *             .softDeleteEnabled(true)
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * Recovery Services Vaults can be imported using the `resource id`, e.g.
 * 
 * ```sh
 *  $ pulumi import azure:recoveryservices/vault:Vault vault1 /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.RecoveryServices/vaults/vault1
 * ```
 * 
 */
@ResourceType(type="azure:recoveryservices/vault:Vault")
public class Vault extends com.pulumi.resources.CustomResource {
    /**
     * Whether to enable the Classic experience for VMware replication. If set to `false` VMware machines will be protected using the new stateless ASR replication appliance. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="classicVmwareReplicationEnabled", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> classicVmwareReplicationEnabled;

    /**
     * @return Whether to enable the Classic experience for VMware replication. If set to `false` VMware machines will be protected using the new stateless ASR replication appliance. Changing this forces a new resource to be created.
     * 
     */
    public Output<Boolean> classicVmwareReplicationEnabled() {
        return this.classicVmwareReplicationEnabled;
    }
    /**
     * Is cross region restore enabled for this Vault? Only can be `true`, when `storage_mode_type` is `GeoRedundant`. Defaults to `false`.
     * 
     * &gt; **Note:** Once `cross_region_restore_enabled` is set to `true`, changing it back to `false` forces a new Recovery Service Vault to be created.
     * 
     */
    @Export(name="crossRegionRestoreEnabled", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> crossRegionRestoreEnabled;

    /**
     * @return Is cross region restore enabled for this Vault? Only can be `true`, when `storage_mode_type` is `GeoRedundant`. Defaults to `false`.
     * 
     * &gt; **Note:** Once `cross_region_restore_enabled` is set to `true`, changing it back to `false` forces a new Recovery Service Vault to be created.
     * 
     */
    public Output<Optional<Boolean>> crossRegionRestoreEnabled() {
        return Codegen.optional(this.crossRegionRestoreEnabled);
    }
    /**
     * An `encryption` block as defined below. Required with `identity`.
     * 
     * !&gt; **Note:** Once Encryption with your own key has been Enabled it&#39;s not possible to Disable it.
     * 
     */
    @Export(name="encryption", refs={VaultEncryption.class}, tree="[0]")
    private Output</* @Nullable */ VaultEncryption> encryption;

    /**
     * @return An `encryption` block as defined below. Required with `identity`.
     * 
     * !&gt; **Note:** Once Encryption with your own key has been Enabled it&#39;s not possible to Disable it.
     * 
     */
    public Output<Optional<VaultEncryption>> encryption() {
        return Codegen.optional(this.encryption);
    }
    /**
     * An `identity` block as defined below.
     * 
     */
    @Export(name="identity", refs={VaultIdentity.class}, tree="[0]")
    private Output</* @Nullable */ VaultIdentity> identity;

    /**
     * @return An `identity` block as defined below.
     * 
     */
    public Output<Optional<VaultIdentity>> identity() {
        return Codegen.optional(this.identity);
    }
    /**
     * Immutability Settings of vault, possible values include: `Locked`, `Unlocked` and `Disabled`.
     * 
     * &gt; **Note:** Once `immutability` is set to `Locked`, changing it to other values forces a new Recovery Services Vault to be created.
     * 
     */
    @Export(name="immutability", refs={String.class}, tree="[0]")
    private Output<String> immutability;

    /**
     * @return Immutability Settings of vault, possible values include: `Locked`, `Unlocked` and `Disabled`.
     * 
     * &gt; **Note:** Once `immutability` is set to `Locked`, changing it to other values forces a new Recovery Services Vault to be created.
     * 
     */
    public Output<String> immutability() {
        return this.immutability;
    }
    /**
     * Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="location", refs={String.class}, tree="[0]")
    private Output<String> location;

    /**
     * @return Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> location() {
        return this.location;
    }
    /**
     * A `monitoring` block as defined below.
     * 
     */
    @Export(name="monitoring", refs={VaultMonitoring.class}, tree="[0]")
    private Output</* @Nullable */ VaultMonitoring> monitoring;

    /**
     * @return A `monitoring` block as defined below.
     * 
     */
    public Output<Optional<VaultMonitoring>> monitoring() {
        return Codegen.optional(this.monitoring);
    }
    /**
     * Specifies the name of the Recovery Services Vault. Recovery Service Vault name must be 2 - 50 characters long, start with a letter, contain only letters, numbers and hyphens. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return Specifies the name of the Recovery Services Vault. Recovery Service Vault name must be 2 - 50 characters long, start with a letter, contain only letters, numbers and hyphens. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Is it enabled to access the vault from public networks. Defaults to `true`.
     * 
     */
    @Export(name="publicNetworkAccessEnabled", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> publicNetworkAccessEnabled;

    /**
     * @return Is it enabled to access the vault from public networks. Defaults to `true`.
     * 
     */
    public Output<Optional<Boolean>> publicNetworkAccessEnabled() {
        return Codegen.optional(this.publicNetworkAccessEnabled);
    }
    /**
     * The name of the resource group in which to create the Recovery Services Vault. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="resourceGroupName", refs={String.class}, tree="[0]")
    private Output<String> resourceGroupName;

    /**
     * @return The name of the resource group in which to create the Recovery Services Vault. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }
    /**
     * Sets the vault&#39;s SKU. Possible values include: `Standard`, `RS0`.
     * 
     */
    @Export(name="sku", refs={String.class}, tree="[0]")
    private Output<String> sku;

    /**
     * @return Sets the vault&#39;s SKU. Possible values include: `Standard`, `RS0`.
     * 
     */
    public Output<String> sku() {
        return this.sku;
    }
    /**
     * Is soft delete enable for this Vault? Defaults to `true`.
     * 
     */
    @Export(name="softDeleteEnabled", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> softDeleteEnabled;

    /**
     * @return Is soft delete enable for this Vault? Defaults to `true`.
     * 
     */
    public Output<Optional<Boolean>> softDeleteEnabled() {
        return Codegen.optional(this.softDeleteEnabled);
    }
    /**
     * The storage type of the Recovery Services Vault. Possible values are `GeoRedundant`, `LocallyRedundant` and `ZoneRedundant`. Defaults to `GeoRedundant`.
     * 
     */
    @Export(name="storageModeType", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> storageModeType;

    /**
     * @return The storage type of the Recovery Services Vault. Possible values are `GeoRedundant`, `LocallyRedundant` and `ZoneRedundant`. Defaults to `GeoRedundant`.
     * 
     */
    public Output<Optional<String>> storageModeType() {
        return Codegen.optional(this.storageModeType);
    }
    /**
     * A mapping of tags to assign to the resource.
     * 
     */
    @Export(name="tags", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output</* @Nullable */ Map<String,String>> tags;

    /**
     * @return A mapping of tags to assign to the resource.
     * 
     */
    public Output<Optional<Map<String,String>>> tags() {
        return Codegen.optional(this.tags);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Vault(String name) {
        this(name, VaultArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Vault(String name, VaultArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Vault(String name, VaultArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:recoveryservices/vault:Vault", name, args == null ? VaultArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private Vault(String name, Output<String> id, @Nullable VaultState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:recoveryservices/vault:Vault", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Vault get(String name, Output<String> id, @Nullable VaultState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Vault(name, id, state, options);
    }
}
