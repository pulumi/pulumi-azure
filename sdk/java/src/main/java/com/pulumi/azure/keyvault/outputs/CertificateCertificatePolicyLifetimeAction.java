// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.keyvault.outputs;

import com.pulumi.azure.keyvault.outputs.CertificateCertificatePolicyLifetimeActionAction;
import com.pulumi.azure.keyvault.outputs.CertificateCertificatePolicyLifetimeActionTrigger;
import com.pulumi.core.annotations.CustomType;
import java.util.Objects;

@CustomType
public final class CertificateCertificatePolicyLifetimeAction {
    /**
     * @return A `action` block as defined below.
     * 
     */
    private final CertificateCertificatePolicyLifetimeActionAction action;
    /**
     * @return A `trigger` block as defined below.
     * 
     */
    private final CertificateCertificatePolicyLifetimeActionTrigger trigger;

    @CustomType.Constructor
    private CertificateCertificatePolicyLifetimeAction(
        @CustomType.Parameter("action") CertificateCertificatePolicyLifetimeActionAction action,
        @CustomType.Parameter("trigger") CertificateCertificatePolicyLifetimeActionTrigger trigger) {
        this.action = action;
        this.trigger = trigger;
    }

    /**
     * @return A `action` block as defined below.
     * 
     */
    public CertificateCertificatePolicyLifetimeActionAction action() {
        return this.action;
    }
    /**
     * @return A `trigger` block as defined below.
     * 
     */
    public CertificateCertificatePolicyLifetimeActionTrigger trigger() {
        return this.trigger;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(CertificateCertificatePolicyLifetimeAction defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CertificateCertificatePolicyLifetimeActionAction action;
        private CertificateCertificatePolicyLifetimeActionTrigger trigger;

        public Builder() {
    	      // Empty
        }

        public Builder(CertificateCertificatePolicyLifetimeAction defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.action = defaults.action;
    	      this.trigger = defaults.trigger;
        }

        public Builder action(CertificateCertificatePolicyLifetimeActionAction action) {
            this.action = Objects.requireNonNull(action);
            return this;
        }
        public Builder trigger(CertificateCertificatePolicyLifetimeActionTrigger trigger) {
            this.trigger = Objects.requireNonNull(trigger);
            return this;
        }        public CertificateCertificatePolicyLifetimeAction build() {
            return new CertificateCertificatePolicyLifetimeAction(action, trigger);
        }
    }
}
