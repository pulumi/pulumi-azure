// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.redhatopenshift.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ClusterNetworkProfileArgs extends com.pulumi.resources.ResourceArgs {

    public static final ClusterNetworkProfileArgs Empty = new ClusterNetworkProfileArgs();

    /**
     * The outbound (egress) routing method. Possible values are `Loadbalancer` and `UserDefinedRouting`. Defaults to `Loadbalancer`. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="outboundType")
    private @Nullable Output<String> outboundType;

    /**
     * @return The outbound (egress) routing method. Possible values are `Loadbalancer` and `UserDefinedRouting`. Defaults to `Loadbalancer`. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> outboundType() {
        return Optional.ofNullable(this.outboundType);
    }

    /**
     * The CIDR to use for pod IP addresses. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="podCidr", required=true)
    private Output<String> podCidr;

    /**
     * @return The CIDR to use for pod IP addresses. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> podCidr() {
        return this.podCidr;
    }

    /**
     * Whether a preconfigured network security group is being used on the subnets.  Defaults to `false`.  Changing this forces a new resource to be created.
     * 
     */
    @Import(name="preconfiguredNetworkSecurityGroupEnabled")
    private @Nullable Output<Boolean> preconfiguredNetworkSecurityGroupEnabled;

    /**
     * @return Whether a preconfigured network security group is being used on the subnets.  Defaults to `false`.  Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<Boolean>> preconfiguredNetworkSecurityGroupEnabled() {
        return Optional.ofNullable(this.preconfiguredNetworkSecurityGroupEnabled);
    }

    /**
     * The network range used by the OpenShift service. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="serviceCidr", required=true)
    private Output<String> serviceCidr;

    /**
     * @return The network range used by the OpenShift service. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> serviceCidr() {
        return this.serviceCidr;
    }

    private ClusterNetworkProfileArgs() {}

    private ClusterNetworkProfileArgs(ClusterNetworkProfileArgs $) {
        this.outboundType = $.outboundType;
        this.podCidr = $.podCidr;
        this.preconfiguredNetworkSecurityGroupEnabled = $.preconfiguredNetworkSecurityGroupEnabled;
        this.serviceCidr = $.serviceCidr;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ClusterNetworkProfileArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ClusterNetworkProfileArgs $;

        public Builder() {
            $ = new ClusterNetworkProfileArgs();
        }

        public Builder(ClusterNetworkProfileArgs defaults) {
            $ = new ClusterNetworkProfileArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param outboundType The outbound (egress) routing method. Possible values are `Loadbalancer` and `UserDefinedRouting`. Defaults to `Loadbalancer`. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder outboundType(@Nullable Output<String> outboundType) {
            $.outboundType = outboundType;
            return this;
        }

        /**
         * @param outboundType The outbound (egress) routing method. Possible values are `Loadbalancer` and `UserDefinedRouting`. Defaults to `Loadbalancer`. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder outboundType(String outboundType) {
            return outboundType(Output.of(outboundType));
        }

        /**
         * @param podCidr The CIDR to use for pod IP addresses. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder podCidr(Output<String> podCidr) {
            $.podCidr = podCidr;
            return this;
        }

        /**
         * @param podCidr The CIDR to use for pod IP addresses. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder podCidr(String podCidr) {
            return podCidr(Output.of(podCidr));
        }

        /**
         * @param preconfiguredNetworkSecurityGroupEnabled Whether a preconfigured network security group is being used on the subnets.  Defaults to `false`.  Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder preconfiguredNetworkSecurityGroupEnabled(@Nullable Output<Boolean> preconfiguredNetworkSecurityGroupEnabled) {
            $.preconfiguredNetworkSecurityGroupEnabled = preconfiguredNetworkSecurityGroupEnabled;
            return this;
        }

        /**
         * @param preconfiguredNetworkSecurityGroupEnabled Whether a preconfigured network security group is being used on the subnets.  Defaults to `false`.  Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder preconfiguredNetworkSecurityGroupEnabled(Boolean preconfiguredNetworkSecurityGroupEnabled) {
            return preconfiguredNetworkSecurityGroupEnabled(Output.of(preconfiguredNetworkSecurityGroupEnabled));
        }

        /**
         * @param serviceCidr The network range used by the OpenShift service. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder serviceCidr(Output<String> serviceCidr) {
            $.serviceCidr = serviceCidr;
            return this;
        }

        /**
         * @param serviceCidr The network range used by the OpenShift service. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder serviceCidr(String serviceCidr) {
            return serviceCidr(Output.of(serviceCidr));
        }

        public ClusterNetworkProfileArgs build() {
            if ($.podCidr == null) {
                throw new MissingRequiredPropertyException("ClusterNetworkProfileArgs", "podCidr");
            }
            if ($.serviceCidr == null) {
                throw new MissingRequiredPropertyException("ClusterNetworkProfileArgs", "serviceCidr");
            }
            return $;
        }
    }

}
