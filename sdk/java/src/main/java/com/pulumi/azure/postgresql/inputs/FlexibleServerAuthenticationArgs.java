// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.postgresql.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class FlexibleServerAuthenticationArgs extends com.pulumi.resources.ResourceArgs {

    public static final FlexibleServerAuthenticationArgs Empty = new FlexibleServerAuthenticationArgs();

    /**
     * Whether or not Active Directory authentication is allowed to access the PostgreSQL Flexible Server.
     * 
     */
    @Import(name="activeDirectoryAuthEnabled")
    private @Nullable Output<Boolean> activeDirectoryAuthEnabled;

    /**
     * @return Whether or not Active Directory authentication is allowed to access the PostgreSQL Flexible Server.
     * 
     */
    public Optional<Output<Boolean>> activeDirectoryAuthEnabled() {
        return Optional.ofNullable(this.activeDirectoryAuthEnabled);
    }

    /**
     * Whether or not password authentication is allowed to access the PostgreSQL Flexible Server.
     * 
     */
    @Import(name="passwordAuthEnabled")
    private @Nullable Output<Boolean> passwordAuthEnabled;

    /**
     * @return Whether or not password authentication is allowed to access the PostgreSQL Flexible Server.
     * 
     */
    public Optional<Output<Boolean>> passwordAuthEnabled() {
        return Optional.ofNullable(this.passwordAuthEnabled);
    }

    /**
     * The Tenant ID of the Azure Active Directory which is used by the Active Directory authentication. `active_directory_auth_enabled` must be set to `true`.
     * 
     */
    @Import(name="tenantId")
    private @Nullable Output<String> tenantId;

    /**
     * @return The Tenant ID of the Azure Active Directory which is used by the Active Directory authentication. `active_directory_auth_enabled` must be set to `true`.
     * 
     */
    public Optional<Output<String>> tenantId() {
        return Optional.ofNullable(this.tenantId);
    }

    private FlexibleServerAuthenticationArgs() {}

    private FlexibleServerAuthenticationArgs(FlexibleServerAuthenticationArgs $) {
        this.activeDirectoryAuthEnabled = $.activeDirectoryAuthEnabled;
        this.passwordAuthEnabled = $.passwordAuthEnabled;
        this.tenantId = $.tenantId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FlexibleServerAuthenticationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FlexibleServerAuthenticationArgs $;

        public Builder() {
            $ = new FlexibleServerAuthenticationArgs();
        }

        public Builder(FlexibleServerAuthenticationArgs defaults) {
            $ = new FlexibleServerAuthenticationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param activeDirectoryAuthEnabled Whether or not Active Directory authentication is allowed to access the PostgreSQL Flexible Server.
         * 
         * @return builder
         * 
         */
        public Builder activeDirectoryAuthEnabled(@Nullable Output<Boolean> activeDirectoryAuthEnabled) {
            $.activeDirectoryAuthEnabled = activeDirectoryAuthEnabled;
            return this;
        }

        /**
         * @param activeDirectoryAuthEnabled Whether or not Active Directory authentication is allowed to access the PostgreSQL Flexible Server.
         * 
         * @return builder
         * 
         */
        public Builder activeDirectoryAuthEnabled(Boolean activeDirectoryAuthEnabled) {
            return activeDirectoryAuthEnabled(Output.of(activeDirectoryAuthEnabled));
        }

        /**
         * @param passwordAuthEnabled Whether or not password authentication is allowed to access the PostgreSQL Flexible Server.
         * 
         * @return builder
         * 
         */
        public Builder passwordAuthEnabled(@Nullable Output<Boolean> passwordAuthEnabled) {
            $.passwordAuthEnabled = passwordAuthEnabled;
            return this;
        }

        /**
         * @param passwordAuthEnabled Whether or not password authentication is allowed to access the PostgreSQL Flexible Server.
         * 
         * @return builder
         * 
         */
        public Builder passwordAuthEnabled(Boolean passwordAuthEnabled) {
            return passwordAuthEnabled(Output.of(passwordAuthEnabled));
        }

        /**
         * @param tenantId The Tenant ID of the Azure Active Directory which is used by the Active Directory authentication. `active_directory_auth_enabled` must be set to `true`.
         * 
         * @return builder
         * 
         */
        public Builder tenantId(@Nullable Output<String> tenantId) {
            $.tenantId = tenantId;
            return this;
        }

        /**
         * @param tenantId The Tenant ID of the Azure Active Directory which is used by the Active Directory authentication. `active_directory_auth_enabled` must be set to `true`.
         * 
         * @return builder
         * 
         */
        public Builder tenantId(String tenantId) {
            return tenantId(Output.of(tenantId));
        }

        public FlexibleServerAuthenticationArgs build() {
            return $;
        }
    }

}
