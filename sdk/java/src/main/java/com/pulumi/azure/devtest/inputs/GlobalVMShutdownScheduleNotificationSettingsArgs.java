// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.devtest.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GlobalVMShutdownScheduleNotificationSettingsArgs extends com.pulumi.resources.ResourceArgs {

    public static final GlobalVMShutdownScheduleNotificationSettingsArgs Empty = new GlobalVMShutdownScheduleNotificationSettingsArgs();

    /**
     * E-mail address to which the notification will be sent.
     * 
     */
    @Import(name="email")
    private @Nullable Output<String> email;

    /**
     * @return E-mail address to which the notification will be sent.
     * 
     */
    public Optional<Output<String>> email() {
        return Optional.ofNullable(this.email);
    }

    /**
     * Whether to enable pre-shutdown notifications. Possible values are `true` and `false`.
     * 
     */
    @Import(name="enabled", required=true)
    private Output<Boolean> enabled;

    /**
     * @return Whether to enable pre-shutdown notifications. Possible values are `true` and `false`.
     * 
     */
    public Output<Boolean> enabled() {
        return this.enabled;
    }

    /**
     * Time in minutes between 15 and 120 before a shutdown event at which a notification will be sent. Defaults to `30`.
     * 
     */
    @Import(name="timeInMinutes")
    private @Nullable Output<Integer> timeInMinutes;

    /**
     * @return Time in minutes between 15 and 120 before a shutdown event at which a notification will be sent. Defaults to `30`.
     * 
     */
    public Optional<Output<Integer>> timeInMinutes() {
        return Optional.ofNullable(this.timeInMinutes);
    }

    /**
     * The webhook URL to which the notification will be sent.
     * 
     */
    @Import(name="webhookUrl")
    private @Nullable Output<String> webhookUrl;

    /**
     * @return The webhook URL to which the notification will be sent.
     * 
     */
    public Optional<Output<String>> webhookUrl() {
        return Optional.ofNullable(this.webhookUrl);
    }

    private GlobalVMShutdownScheduleNotificationSettingsArgs() {}

    private GlobalVMShutdownScheduleNotificationSettingsArgs(GlobalVMShutdownScheduleNotificationSettingsArgs $) {
        this.email = $.email;
        this.enabled = $.enabled;
        this.timeInMinutes = $.timeInMinutes;
        this.webhookUrl = $.webhookUrl;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GlobalVMShutdownScheduleNotificationSettingsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GlobalVMShutdownScheduleNotificationSettingsArgs $;

        public Builder() {
            $ = new GlobalVMShutdownScheduleNotificationSettingsArgs();
        }

        public Builder(GlobalVMShutdownScheduleNotificationSettingsArgs defaults) {
            $ = new GlobalVMShutdownScheduleNotificationSettingsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param email E-mail address to which the notification will be sent.
         * 
         * @return builder
         * 
         */
        public Builder email(@Nullable Output<String> email) {
            $.email = email;
            return this;
        }

        /**
         * @param email E-mail address to which the notification will be sent.
         * 
         * @return builder
         * 
         */
        public Builder email(String email) {
            return email(Output.of(email));
        }

        /**
         * @param enabled Whether to enable pre-shutdown notifications. Possible values are `true` and `false`.
         * 
         * @return builder
         * 
         */
        public Builder enabled(Output<Boolean> enabled) {
            $.enabled = enabled;
            return this;
        }

        /**
         * @param enabled Whether to enable pre-shutdown notifications. Possible values are `true` and `false`.
         * 
         * @return builder
         * 
         */
        public Builder enabled(Boolean enabled) {
            return enabled(Output.of(enabled));
        }

        /**
         * @param timeInMinutes Time in minutes between 15 and 120 before a shutdown event at which a notification will be sent. Defaults to `30`.
         * 
         * @return builder
         * 
         */
        public Builder timeInMinutes(@Nullable Output<Integer> timeInMinutes) {
            $.timeInMinutes = timeInMinutes;
            return this;
        }

        /**
         * @param timeInMinutes Time in minutes between 15 and 120 before a shutdown event at which a notification will be sent. Defaults to `30`.
         * 
         * @return builder
         * 
         */
        public Builder timeInMinutes(Integer timeInMinutes) {
            return timeInMinutes(Output.of(timeInMinutes));
        }

        /**
         * @param webhookUrl The webhook URL to which the notification will be sent.
         * 
         * @return builder
         * 
         */
        public Builder webhookUrl(@Nullable Output<String> webhookUrl) {
            $.webhookUrl = webhookUrl;
            return this;
        }

        /**
         * @param webhookUrl The webhook URL to which the notification will be sent.
         * 
         * @return builder
         * 
         */
        public Builder webhookUrl(String webhookUrl) {
            return webhookUrl(Output.of(webhookUrl));
        }

        public GlobalVMShutdownScheduleNotificationSettingsArgs build() {
            if ($.enabled == null) {
                throw new MissingRequiredPropertyException("GlobalVMShutdownScheduleNotificationSettingsArgs", "enabled");
            }
            return $;
        }
    }

}
