// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.datafactory.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DatasetDelimitedTextAzureBlobFsLocationArgs extends com.pulumi.resources.ResourceArgs {

    public static final DatasetDelimitedTextAzureBlobFsLocationArgs Empty = new DatasetDelimitedTextAzureBlobFsLocationArgs();

    /**
     * The storage data lake gen2 file system on the Azure Blob Storage Account hosting the file.
     * 
     */
    @Import(name="fileSystem", required=true)
    private Output<String> fileSystem;

    /**
     * @return The storage data lake gen2 file system on the Azure Blob Storage Account hosting the file.
     * 
     */
    public Output<String> fileSystem() {
        return this.fileSystem;
    }

    /**
     * The filename of the file.
     * 
     */
    @Import(name="filename")
    private @Nullable Output<String> filename;

    /**
     * @return The filename of the file.
     * 
     */
    public Optional<Output<String>> filename() {
        return Optional.ofNullable(this.filename);
    }

    /**
     * The folder path to the file.
     * 
     */
    @Import(name="path")
    private @Nullable Output<String> path;

    /**
     * @return The folder path to the file.
     * 
     */
    public Optional<Output<String>> path() {
        return Optional.ofNullable(this.path);
    }

    private DatasetDelimitedTextAzureBlobFsLocationArgs() {}

    private DatasetDelimitedTextAzureBlobFsLocationArgs(DatasetDelimitedTextAzureBlobFsLocationArgs $) {
        this.fileSystem = $.fileSystem;
        this.filename = $.filename;
        this.path = $.path;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DatasetDelimitedTextAzureBlobFsLocationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DatasetDelimitedTextAzureBlobFsLocationArgs $;

        public Builder() {
            $ = new DatasetDelimitedTextAzureBlobFsLocationArgs();
        }

        public Builder(DatasetDelimitedTextAzureBlobFsLocationArgs defaults) {
            $ = new DatasetDelimitedTextAzureBlobFsLocationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param fileSystem The storage data lake gen2 file system on the Azure Blob Storage Account hosting the file.
         * 
         * @return builder
         * 
         */
        public Builder fileSystem(Output<String> fileSystem) {
            $.fileSystem = fileSystem;
            return this;
        }

        /**
         * @param fileSystem The storage data lake gen2 file system on the Azure Blob Storage Account hosting the file.
         * 
         * @return builder
         * 
         */
        public Builder fileSystem(String fileSystem) {
            return fileSystem(Output.of(fileSystem));
        }

        /**
         * @param filename The filename of the file.
         * 
         * @return builder
         * 
         */
        public Builder filename(@Nullable Output<String> filename) {
            $.filename = filename;
            return this;
        }

        /**
         * @param filename The filename of the file.
         * 
         * @return builder
         * 
         */
        public Builder filename(String filename) {
            return filename(Output.of(filename));
        }

        /**
         * @param path The folder path to the file.
         * 
         * @return builder
         * 
         */
        public Builder path(@Nullable Output<String> path) {
            $.path = path;
            return this;
        }

        /**
         * @param path The folder path to the file.
         * 
         * @return builder
         * 
         */
        public Builder path(String path) {
            return path(Output.of(path));
        }

        public DatasetDelimitedTextAzureBlobFsLocationArgs build() {
            $.fileSystem = Objects.requireNonNull($.fileSystem, "expected parameter 'fileSystem' to be non-null");
            return $;
        }
    }

}
