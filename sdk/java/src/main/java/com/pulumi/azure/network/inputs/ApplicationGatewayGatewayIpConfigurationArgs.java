// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.network.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ApplicationGatewayGatewayIpConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final ApplicationGatewayGatewayIpConfigurationArgs Empty = new ApplicationGatewayGatewayIpConfigurationArgs();

    /**
     * The ID of the Rewrite Rule Set
     * 
     */
    @Import(name="id")
    private @Nullable Output<String> id;

    /**
     * @return The ID of the Rewrite Rule Set
     * 
     */
    public Optional<Output<String>> id() {
        return Optional.ofNullable(this.id);
    }

    /**
     * The Name of this Gateway IP Configuration.
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    /**
     * @return The Name of this Gateway IP Configuration.
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    /**
     * The ID of the Subnet which the Application Gateway should be connected to.
     * 
     */
    @Import(name="subnetId", required=true)
    private Output<String> subnetId;

    /**
     * @return The ID of the Subnet which the Application Gateway should be connected to.
     * 
     */
    public Output<String> subnetId() {
        return this.subnetId;
    }

    private ApplicationGatewayGatewayIpConfigurationArgs() {}

    private ApplicationGatewayGatewayIpConfigurationArgs(ApplicationGatewayGatewayIpConfigurationArgs $) {
        this.id = $.id;
        this.name = $.name;
        this.subnetId = $.subnetId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ApplicationGatewayGatewayIpConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ApplicationGatewayGatewayIpConfigurationArgs $;

        public Builder() {
            $ = new ApplicationGatewayGatewayIpConfigurationArgs();
        }

        public Builder(ApplicationGatewayGatewayIpConfigurationArgs defaults) {
            $ = new ApplicationGatewayGatewayIpConfigurationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param id The ID of the Rewrite Rule Set
         * 
         * @return builder
         * 
         */
        public Builder id(@Nullable Output<String> id) {
            $.id = id;
            return this;
        }

        /**
         * @param id The ID of the Rewrite Rule Set
         * 
         * @return builder
         * 
         */
        public Builder id(String id) {
            return id(Output.of(id));
        }

        /**
         * @param name The Name of this Gateway IP Configuration.
         * 
         * @return builder
         * 
         */
        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The Name of this Gateway IP Configuration.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param subnetId The ID of the Subnet which the Application Gateway should be connected to.
         * 
         * @return builder
         * 
         */
        public Builder subnetId(Output<String> subnetId) {
            $.subnetId = subnetId;
            return this;
        }

        /**
         * @param subnetId The ID of the Subnet which the Application Gateway should be connected to.
         * 
         * @return builder
         * 
         */
        public Builder subnetId(String subnetId) {
            return subnetId(Output.of(subnetId));
        }

        public ApplicationGatewayGatewayIpConfigurationArgs build() {
            if ($.name == null) {
                throw new MissingRequiredPropertyException("ApplicationGatewayGatewayIpConfigurationArgs", "name");
            }
            if ($.subnetId == null) {
                throw new MissingRequiredPropertyException("ApplicationGatewayGatewayIpConfigurationArgs", "subnetId");
            }
            return $;
        }
    }

}
