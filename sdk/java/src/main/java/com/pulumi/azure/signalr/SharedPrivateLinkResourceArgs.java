// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.signalr;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SharedPrivateLinkResourceArgs extends com.pulumi.resources.ResourceArgs {

    public static final SharedPrivateLinkResourceArgs Empty = new SharedPrivateLinkResourceArgs();

    /**
     * The name of the Signalr Shared Private Link Resource. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the Signalr Shared Private Link Resource. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The request message for requesting approval of the Shared Private Link Enabled Remote Resource.
     * 
     */
    @Import(name="requestMessage")
    private @Nullable Output<String> requestMessage;

    /**
     * @return The request message for requesting approval of the Shared Private Link Enabled Remote Resource.
     * 
     */
    public Optional<Output<String>> requestMessage() {
        return Optional.ofNullable(this.requestMessage);
    }

    /**
     * The id of the Signalr Service. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="signalrServiceId", required=true)
    private Output<String> signalrServiceId;

    /**
     * @return The id of the Signalr Service. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> signalrServiceId() {
        return this.signalrServiceId;
    }

    /**
     * The sub resource name which the Signalr Private Endpoint can connect to. Possible values are `sites`, `vault`. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="subResourceName", required=true)
    private Output<String> subResourceName;

    /**
     * @return The sub resource name which the Signalr Private Endpoint can connect to. Possible values are `sites`, `vault`. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> subResourceName() {
        return this.subResourceName;
    }

    /**
     * The ID of the Shared Private Link Enabled Remote Resource which this Signalr Private Endpoint should be connected to. Changing this forces a new resource to be created.
     * 
     * &gt; **NOTE:** The `sub_resource_name` should match with the type of the `target_resource_id` that&#39;s being specified.
     * 
     */
    @Import(name="targetResourceId", required=true)
    private Output<String> targetResourceId;

    /**
     * @return The ID of the Shared Private Link Enabled Remote Resource which this Signalr Private Endpoint should be connected to. Changing this forces a new resource to be created.
     * 
     * &gt; **NOTE:** The `sub_resource_name` should match with the type of the `target_resource_id` that&#39;s being specified.
     * 
     */
    public Output<String> targetResourceId() {
        return this.targetResourceId;
    }

    private SharedPrivateLinkResourceArgs() {}

    private SharedPrivateLinkResourceArgs(SharedPrivateLinkResourceArgs $) {
        this.name = $.name;
        this.requestMessage = $.requestMessage;
        this.signalrServiceId = $.signalrServiceId;
        this.subResourceName = $.subResourceName;
        this.targetResourceId = $.targetResourceId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SharedPrivateLinkResourceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SharedPrivateLinkResourceArgs $;

        public Builder() {
            $ = new SharedPrivateLinkResourceArgs();
        }

        public Builder(SharedPrivateLinkResourceArgs defaults) {
            $ = new SharedPrivateLinkResourceArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param name The name of the Signalr Shared Private Link Resource. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the Signalr Shared Private Link Resource. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param requestMessage The request message for requesting approval of the Shared Private Link Enabled Remote Resource.
         * 
         * @return builder
         * 
         */
        public Builder requestMessage(@Nullable Output<String> requestMessage) {
            $.requestMessage = requestMessage;
            return this;
        }

        /**
         * @param requestMessage The request message for requesting approval of the Shared Private Link Enabled Remote Resource.
         * 
         * @return builder
         * 
         */
        public Builder requestMessage(String requestMessage) {
            return requestMessage(Output.of(requestMessage));
        }

        /**
         * @param signalrServiceId The id of the Signalr Service. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder signalrServiceId(Output<String> signalrServiceId) {
            $.signalrServiceId = signalrServiceId;
            return this;
        }

        /**
         * @param signalrServiceId The id of the Signalr Service. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder signalrServiceId(String signalrServiceId) {
            return signalrServiceId(Output.of(signalrServiceId));
        }

        /**
         * @param subResourceName The sub resource name which the Signalr Private Endpoint can connect to. Possible values are `sites`, `vault`. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder subResourceName(Output<String> subResourceName) {
            $.subResourceName = subResourceName;
            return this;
        }

        /**
         * @param subResourceName The sub resource name which the Signalr Private Endpoint can connect to. Possible values are `sites`, `vault`. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder subResourceName(String subResourceName) {
            return subResourceName(Output.of(subResourceName));
        }

        /**
         * @param targetResourceId The ID of the Shared Private Link Enabled Remote Resource which this Signalr Private Endpoint should be connected to. Changing this forces a new resource to be created.
         * 
         * &gt; **NOTE:** The `sub_resource_name` should match with the type of the `target_resource_id` that&#39;s being specified.
         * 
         * @return builder
         * 
         */
        public Builder targetResourceId(Output<String> targetResourceId) {
            $.targetResourceId = targetResourceId;
            return this;
        }

        /**
         * @param targetResourceId The ID of the Shared Private Link Enabled Remote Resource which this Signalr Private Endpoint should be connected to. Changing this forces a new resource to be created.
         * 
         * &gt; **NOTE:** The `sub_resource_name` should match with the type of the `target_resource_id` that&#39;s being specified.
         * 
         * @return builder
         * 
         */
        public Builder targetResourceId(String targetResourceId) {
            return targetResourceId(Output.of(targetResourceId));
        }

        public SharedPrivateLinkResourceArgs build() {
            if ($.signalrServiceId == null) {
                throw new MissingRequiredPropertyException("SharedPrivateLinkResourceArgs", "signalrServiceId");
            }
            if ($.subResourceName == null) {
                throw new MissingRequiredPropertyException("SharedPrivateLinkResourceArgs", "subResourceName");
            }
            if ($.targetResourceId == null) {
                throw new MissingRequiredPropertyException("SharedPrivateLinkResourceArgs", "targetResourceId");
            }
            return $;
        }
    }

}
