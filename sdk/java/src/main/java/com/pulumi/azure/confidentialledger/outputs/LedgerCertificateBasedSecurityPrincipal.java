// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.confidentialledger.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class LedgerCertificateBasedSecurityPrincipal {
    /**
     * @return Specifies the Ledger Role to grant this Certificate Security Principal. Possible values are `Administrator`, `Contributor` and `Reader`.
     * 
     */
    private String ledgerRoleName;
    /**
     * @return The public key, in PEM format, of the certificate used by this identity to authenticate with the Confidential Ledger.
     * 
     */
    private String pemPublicKey;

    private LedgerCertificateBasedSecurityPrincipal() {}
    /**
     * @return Specifies the Ledger Role to grant this Certificate Security Principal. Possible values are `Administrator`, `Contributor` and `Reader`.
     * 
     */
    public String ledgerRoleName() {
        return this.ledgerRoleName;
    }
    /**
     * @return The public key, in PEM format, of the certificate used by this identity to authenticate with the Confidential Ledger.
     * 
     */
    public String pemPublicKey() {
        return this.pemPublicKey;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(LedgerCertificateBasedSecurityPrincipal defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String ledgerRoleName;
        private String pemPublicKey;
        public Builder() {}
        public Builder(LedgerCertificateBasedSecurityPrincipal defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.ledgerRoleName = defaults.ledgerRoleName;
    	      this.pemPublicKey = defaults.pemPublicKey;
        }

        @CustomType.Setter
        public Builder ledgerRoleName(String ledgerRoleName) {
            if (ledgerRoleName == null) {
              throw new MissingRequiredPropertyException("LedgerCertificateBasedSecurityPrincipal", "ledgerRoleName");
            }
            this.ledgerRoleName = ledgerRoleName;
            return this;
        }
        @CustomType.Setter
        public Builder pemPublicKey(String pemPublicKey) {
            if (pemPublicKey == null) {
              throw new MissingRequiredPropertyException("LedgerCertificateBasedSecurityPrincipal", "pemPublicKey");
            }
            this.pemPublicKey = pemPublicKey;
            return this;
        }
        public LedgerCertificateBasedSecurityPrincipal build() {
            final var _resultValue = new LedgerCertificateBasedSecurityPrincipal();
            _resultValue.ledgerRoleName = ledgerRoleName;
            _resultValue.pemPublicKey = pemPublicKey;
            return _resultValue;
        }
    }
}
