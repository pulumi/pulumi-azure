// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.mobile.inputs;

import com.pulumi.azure.mobile.inputs.NetworkSimPolicySliceDataNetworkSessionAggregateMaximumBitRateArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class NetworkSimPolicySliceDataNetworkArgs extends com.pulumi.resources.ResourceArgs {

    public static final NetworkSimPolicySliceDataNetworkArgs Empty = new NetworkSimPolicySliceDataNetworkArgs();

    /**
     * Allowed session types in addition to the default session type. Must not duplicate the default session type. Possible values are `IPv4` and `IPv6`.
     * 
     */
    @Import(name="additionalAllowedSessionTypes")
    private @Nullable Output<List<String>> additionalAllowedSessionTypes;

    /**
     * @return Allowed session types in addition to the default session type. Must not duplicate the default session type. Possible values are `IPv4` and `IPv6`.
     * 
     */
    public Optional<Output<List<String>>> additionalAllowedSessionTypes() {
        return Optional.ofNullable(this.additionalAllowedSessionTypes);
    }

    /**
     * Default QoS Flow allocation and retention priority (ARP) level. Flows with higher priority preempt flows with lower priority, if the settings of `preemption_capability` and `preemption_vulnerability` allow it. `1` is the highest level of priority. If this field is not specified then `qos_indicator` is used to derive the ARP value. See 3GPP TS23.501 section 5.7.2.2 for a full description of the ARP parameters.
     * 
     */
    @Import(name="allocationAndRetentionPriorityLevel")
    private @Nullable Output<Integer> allocationAndRetentionPriorityLevel;

    /**
     * @return Default QoS Flow allocation and retention priority (ARP) level. Flows with higher priority preempt flows with lower priority, if the settings of `preemption_capability` and `preemption_vulnerability` allow it. `1` is the highest level of priority. If this field is not specified then `qos_indicator` is used to derive the ARP value. See 3GPP TS23.501 section 5.7.2.2 for a full description of the ARP parameters.
     * 
     */
    public Optional<Output<Integer>> allocationAndRetentionPriorityLevel() {
        return Optional.ofNullable(this.allocationAndRetentionPriorityLevel);
    }

    /**
     * An array of IDs of services that can be used as part of this SIM policy. The array must not contain duplicate items and must contain at least one item.
     * 
     */
    @Import(name="allowedServicesIds", required=true)
    private Output<List<String>> allowedServicesIds;

    /**
     * @return An array of IDs of services that can be used as part of this SIM policy. The array must not contain duplicate items and must contain at least one item.
     * 
     */
    public Output<List<String>> allowedServicesIds() {
        return this.allowedServicesIds;
    }

    /**
     * The ID of Mobile Network Data Network which these settings apply to.
     * 
     */
    @Import(name="dataNetworkId", required=true)
    private Output<String> dataNetworkId;

    /**
     * @return The ID of Mobile Network Data Network which these settings apply to.
     * 
     */
    public Output<String> dataNetworkId() {
        return this.dataNetworkId;
    }

    /**
     * The default PDU session type, which is used if the user equipment does not request a specific session type. Possible values are `IPv4` and `IPv6`. Defaults to `IPv4`.
     * 
     */
    @Import(name="defaultSessionType")
    private @Nullable Output<String> defaultSessionType;

    /**
     * @return The default PDU session type, which is used if the user equipment does not request a specific session type. Possible values are `IPv4` and `IPv6`. Defaults to `IPv4`.
     * 
     */
    public Optional<Output<String>> defaultSessionType() {
        return Optional.ofNullable(this.defaultSessionType);
    }

    /**
     * The maximum number of downlink packets to buffer at the user plane for High Latency Communication - Extended Buffering. Defaults to `10`, Must be at least `0`, See 3GPP TS29.272 v15.10.0 section 7.3.188 for a full description. This maximum is not guaranteed because there is a internal limit on buffered packets across all PDU sessions.
     * 
     */
    @Import(name="maxBufferedPackets")
    private @Nullable Output<Integer> maxBufferedPackets;

    /**
     * @return The maximum number of downlink packets to buffer at the user plane for High Latency Communication - Extended Buffering. Defaults to `10`, Must be at least `0`, See 3GPP TS29.272 v15.10.0 section 7.3.188 for a full description. This maximum is not guaranteed because there is a internal limit on buffered packets across all PDU sessions.
     * 
     */
    public Optional<Output<Integer>> maxBufferedPackets() {
        return Optional.ofNullable(this.maxBufferedPackets);
    }

    /**
     * The Preemption Capability of a QoS Flow, it controls whether it can preempt another QoS Flow with a lower priority level. See 3GPP TS23.501 section 5.7.2.2 for a full description of the ARP parameters. Possible values are `NotPreempt` and `MayPreempt`, Defaults to `NotPreempt`.
     * 
     */
    @Import(name="preemptionCapability")
    private @Nullable Output<String> preemptionCapability;

    /**
     * @return The Preemption Capability of a QoS Flow, it controls whether it can preempt another QoS Flow with a lower priority level. See 3GPP TS23.501 section 5.7.2.2 for a full description of the ARP parameters. Possible values are `NotPreempt` and `MayPreempt`, Defaults to `NotPreempt`.
     * 
     */
    public Optional<Output<String>> preemptionCapability() {
        return Optional.ofNullable(this.preemptionCapability);
    }

    /**
     * The Preemption Vulnerability of a QoS Flow, it controls whether it can be preempted by QoS Flow with a higher priority level. See 3GPP TS23.501 section 5.7.2.2 for a full description of the ARP parameters. Possible values are `NotPreemptable` and `Preemptable`. Defaults to `NotPreemptable`.
     * 
     */
    @Import(name="preemptionVulnerability")
    private @Nullable Output<String> preemptionVulnerability;

    /**
     * @return The Preemption Vulnerability of a QoS Flow, it controls whether it can be preempted by QoS Flow with a higher priority level. See 3GPP TS23.501 section 5.7.2.2 for a full description of the ARP parameters. Possible values are `NotPreemptable` and `Preemptable`. Defaults to `NotPreemptable`.
     * 
     */
    public Optional<Output<String>> preemptionVulnerability() {
        return Optional.ofNullable(this.preemptionVulnerability);
    }

    /**
     * The QoS Indicator (5QI for 5G network /QCI for 4G net work) value identifies a set of QoS characteristics, it controls QoS forwarding treatment for QoS flows or EPS bearers. Recommended values: 5-9; 69-70; 79-80. Must be between `1` and `127`.
     * 
     */
    @Import(name="qosIndicator", required=true)
    private Output<Integer> qosIndicator;

    /**
     * @return The QoS Indicator (5QI for 5G network /QCI for 4G net work) value identifies a set of QoS characteristics, it controls QoS forwarding treatment for QoS flows or EPS bearers. Recommended values: 5-9; 69-70; 79-80. Must be between `1` and `127`.
     * 
     */
    public Output<Integer> qosIndicator() {
        return this.qosIndicator;
    }

    /**
     * A `session_aggregate_maximum_bit_rate` block as defined below.
     * 
     */
    @Import(name="sessionAggregateMaximumBitRate", required=true)
    private Output<NetworkSimPolicySliceDataNetworkSessionAggregateMaximumBitRateArgs> sessionAggregateMaximumBitRate;

    /**
     * @return A `session_aggregate_maximum_bit_rate` block as defined below.
     * 
     */
    public Output<NetworkSimPolicySliceDataNetworkSessionAggregateMaximumBitRateArgs> sessionAggregateMaximumBitRate() {
        return this.sessionAggregateMaximumBitRate;
    }

    private NetworkSimPolicySliceDataNetworkArgs() {}

    private NetworkSimPolicySliceDataNetworkArgs(NetworkSimPolicySliceDataNetworkArgs $) {
        this.additionalAllowedSessionTypes = $.additionalAllowedSessionTypes;
        this.allocationAndRetentionPriorityLevel = $.allocationAndRetentionPriorityLevel;
        this.allowedServicesIds = $.allowedServicesIds;
        this.dataNetworkId = $.dataNetworkId;
        this.defaultSessionType = $.defaultSessionType;
        this.maxBufferedPackets = $.maxBufferedPackets;
        this.preemptionCapability = $.preemptionCapability;
        this.preemptionVulnerability = $.preemptionVulnerability;
        this.qosIndicator = $.qosIndicator;
        this.sessionAggregateMaximumBitRate = $.sessionAggregateMaximumBitRate;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(NetworkSimPolicySliceDataNetworkArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private NetworkSimPolicySliceDataNetworkArgs $;

        public Builder() {
            $ = new NetworkSimPolicySliceDataNetworkArgs();
        }

        public Builder(NetworkSimPolicySliceDataNetworkArgs defaults) {
            $ = new NetworkSimPolicySliceDataNetworkArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param additionalAllowedSessionTypes Allowed session types in addition to the default session type. Must not duplicate the default session type. Possible values are `IPv4` and `IPv6`.
         * 
         * @return builder
         * 
         */
        public Builder additionalAllowedSessionTypes(@Nullable Output<List<String>> additionalAllowedSessionTypes) {
            $.additionalAllowedSessionTypes = additionalAllowedSessionTypes;
            return this;
        }

        /**
         * @param additionalAllowedSessionTypes Allowed session types in addition to the default session type. Must not duplicate the default session type. Possible values are `IPv4` and `IPv6`.
         * 
         * @return builder
         * 
         */
        public Builder additionalAllowedSessionTypes(List<String> additionalAllowedSessionTypes) {
            return additionalAllowedSessionTypes(Output.of(additionalAllowedSessionTypes));
        }

        /**
         * @param additionalAllowedSessionTypes Allowed session types in addition to the default session type. Must not duplicate the default session type. Possible values are `IPv4` and `IPv6`.
         * 
         * @return builder
         * 
         */
        public Builder additionalAllowedSessionTypes(String... additionalAllowedSessionTypes) {
            return additionalAllowedSessionTypes(List.of(additionalAllowedSessionTypes));
        }

        /**
         * @param allocationAndRetentionPriorityLevel Default QoS Flow allocation and retention priority (ARP) level. Flows with higher priority preempt flows with lower priority, if the settings of `preemption_capability` and `preemption_vulnerability` allow it. `1` is the highest level of priority. If this field is not specified then `qos_indicator` is used to derive the ARP value. See 3GPP TS23.501 section 5.7.2.2 for a full description of the ARP parameters.
         * 
         * @return builder
         * 
         */
        public Builder allocationAndRetentionPriorityLevel(@Nullable Output<Integer> allocationAndRetentionPriorityLevel) {
            $.allocationAndRetentionPriorityLevel = allocationAndRetentionPriorityLevel;
            return this;
        }

        /**
         * @param allocationAndRetentionPriorityLevel Default QoS Flow allocation and retention priority (ARP) level. Flows with higher priority preempt flows with lower priority, if the settings of `preemption_capability` and `preemption_vulnerability` allow it. `1` is the highest level of priority. If this field is not specified then `qos_indicator` is used to derive the ARP value. See 3GPP TS23.501 section 5.7.2.2 for a full description of the ARP parameters.
         * 
         * @return builder
         * 
         */
        public Builder allocationAndRetentionPriorityLevel(Integer allocationAndRetentionPriorityLevel) {
            return allocationAndRetentionPriorityLevel(Output.of(allocationAndRetentionPriorityLevel));
        }

        /**
         * @param allowedServicesIds An array of IDs of services that can be used as part of this SIM policy. The array must not contain duplicate items and must contain at least one item.
         * 
         * @return builder
         * 
         */
        public Builder allowedServicesIds(Output<List<String>> allowedServicesIds) {
            $.allowedServicesIds = allowedServicesIds;
            return this;
        }

        /**
         * @param allowedServicesIds An array of IDs of services that can be used as part of this SIM policy. The array must not contain duplicate items and must contain at least one item.
         * 
         * @return builder
         * 
         */
        public Builder allowedServicesIds(List<String> allowedServicesIds) {
            return allowedServicesIds(Output.of(allowedServicesIds));
        }

        /**
         * @param allowedServicesIds An array of IDs of services that can be used as part of this SIM policy. The array must not contain duplicate items and must contain at least one item.
         * 
         * @return builder
         * 
         */
        public Builder allowedServicesIds(String... allowedServicesIds) {
            return allowedServicesIds(List.of(allowedServicesIds));
        }

        /**
         * @param dataNetworkId The ID of Mobile Network Data Network which these settings apply to.
         * 
         * @return builder
         * 
         */
        public Builder dataNetworkId(Output<String> dataNetworkId) {
            $.dataNetworkId = dataNetworkId;
            return this;
        }

        /**
         * @param dataNetworkId The ID of Mobile Network Data Network which these settings apply to.
         * 
         * @return builder
         * 
         */
        public Builder dataNetworkId(String dataNetworkId) {
            return dataNetworkId(Output.of(dataNetworkId));
        }

        /**
         * @param defaultSessionType The default PDU session type, which is used if the user equipment does not request a specific session type. Possible values are `IPv4` and `IPv6`. Defaults to `IPv4`.
         * 
         * @return builder
         * 
         */
        public Builder defaultSessionType(@Nullable Output<String> defaultSessionType) {
            $.defaultSessionType = defaultSessionType;
            return this;
        }

        /**
         * @param defaultSessionType The default PDU session type, which is used if the user equipment does not request a specific session type. Possible values are `IPv4` and `IPv6`. Defaults to `IPv4`.
         * 
         * @return builder
         * 
         */
        public Builder defaultSessionType(String defaultSessionType) {
            return defaultSessionType(Output.of(defaultSessionType));
        }

        /**
         * @param maxBufferedPackets The maximum number of downlink packets to buffer at the user plane for High Latency Communication - Extended Buffering. Defaults to `10`, Must be at least `0`, See 3GPP TS29.272 v15.10.0 section 7.3.188 for a full description. This maximum is not guaranteed because there is a internal limit on buffered packets across all PDU sessions.
         * 
         * @return builder
         * 
         */
        public Builder maxBufferedPackets(@Nullable Output<Integer> maxBufferedPackets) {
            $.maxBufferedPackets = maxBufferedPackets;
            return this;
        }

        /**
         * @param maxBufferedPackets The maximum number of downlink packets to buffer at the user plane for High Latency Communication - Extended Buffering. Defaults to `10`, Must be at least `0`, See 3GPP TS29.272 v15.10.0 section 7.3.188 for a full description. This maximum is not guaranteed because there is a internal limit on buffered packets across all PDU sessions.
         * 
         * @return builder
         * 
         */
        public Builder maxBufferedPackets(Integer maxBufferedPackets) {
            return maxBufferedPackets(Output.of(maxBufferedPackets));
        }

        /**
         * @param preemptionCapability The Preemption Capability of a QoS Flow, it controls whether it can preempt another QoS Flow with a lower priority level. See 3GPP TS23.501 section 5.7.2.2 for a full description of the ARP parameters. Possible values are `NotPreempt` and `MayPreempt`, Defaults to `NotPreempt`.
         * 
         * @return builder
         * 
         */
        public Builder preemptionCapability(@Nullable Output<String> preemptionCapability) {
            $.preemptionCapability = preemptionCapability;
            return this;
        }

        /**
         * @param preemptionCapability The Preemption Capability of a QoS Flow, it controls whether it can preempt another QoS Flow with a lower priority level. See 3GPP TS23.501 section 5.7.2.2 for a full description of the ARP parameters. Possible values are `NotPreempt` and `MayPreempt`, Defaults to `NotPreempt`.
         * 
         * @return builder
         * 
         */
        public Builder preemptionCapability(String preemptionCapability) {
            return preemptionCapability(Output.of(preemptionCapability));
        }

        /**
         * @param preemptionVulnerability The Preemption Vulnerability of a QoS Flow, it controls whether it can be preempted by QoS Flow with a higher priority level. See 3GPP TS23.501 section 5.7.2.2 for a full description of the ARP parameters. Possible values are `NotPreemptable` and `Preemptable`. Defaults to `NotPreemptable`.
         * 
         * @return builder
         * 
         */
        public Builder preemptionVulnerability(@Nullable Output<String> preemptionVulnerability) {
            $.preemptionVulnerability = preemptionVulnerability;
            return this;
        }

        /**
         * @param preemptionVulnerability The Preemption Vulnerability of a QoS Flow, it controls whether it can be preempted by QoS Flow with a higher priority level. See 3GPP TS23.501 section 5.7.2.2 for a full description of the ARP parameters. Possible values are `NotPreemptable` and `Preemptable`. Defaults to `NotPreemptable`.
         * 
         * @return builder
         * 
         */
        public Builder preemptionVulnerability(String preemptionVulnerability) {
            return preemptionVulnerability(Output.of(preemptionVulnerability));
        }

        /**
         * @param qosIndicator The QoS Indicator (5QI for 5G network /QCI for 4G net work) value identifies a set of QoS characteristics, it controls QoS forwarding treatment for QoS flows or EPS bearers. Recommended values: 5-9; 69-70; 79-80. Must be between `1` and `127`.
         * 
         * @return builder
         * 
         */
        public Builder qosIndicator(Output<Integer> qosIndicator) {
            $.qosIndicator = qosIndicator;
            return this;
        }

        /**
         * @param qosIndicator The QoS Indicator (5QI for 5G network /QCI for 4G net work) value identifies a set of QoS characteristics, it controls QoS forwarding treatment for QoS flows or EPS bearers. Recommended values: 5-9; 69-70; 79-80. Must be between `1` and `127`.
         * 
         * @return builder
         * 
         */
        public Builder qosIndicator(Integer qosIndicator) {
            return qosIndicator(Output.of(qosIndicator));
        }

        /**
         * @param sessionAggregateMaximumBitRate A `session_aggregate_maximum_bit_rate` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder sessionAggregateMaximumBitRate(Output<NetworkSimPolicySliceDataNetworkSessionAggregateMaximumBitRateArgs> sessionAggregateMaximumBitRate) {
            $.sessionAggregateMaximumBitRate = sessionAggregateMaximumBitRate;
            return this;
        }

        /**
         * @param sessionAggregateMaximumBitRate A `session_aggregate_maximum_bit_rate` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder sessionAggregateMaximumBitRate(NetworkSimPolicySliceDataNetworkSessionAggregateMaximumBitRateArgs sessionAggregateMaximumBitRate) {
            return sessionAggregateMaximumBitRate(Output.of(sessionAggregateMaximumBitRate));
        }

        public NetworkSimPolicySliceDataNetworkArgs build() {
            if ($.allowedServicesIds == null) {
                throw new MissingRequiredPropertyException("NetworkSimPolicySliceDataNetworkArgs", "allowedServicesIds");
            }
            if ($.dataNetworkId == null) {
                throw new MissingRequiredPropertyException("NetworkSimPolicySliceDataNetworkArgs", "dataNetworkId");
            }
            if ($.qosIndicator == null) {
                throw new MissingRequiredPropertyException("NetworkSimPolicySliceDataNetworkArgs", "qosIndicator");
            }
            if ($.sessionAggregateMaximumBitRate == null) {
                throw new MissingRequiredPropertyException("NetworkSimPolicySliceDataNetworkArgs", "sessionAggregateMaximumBitRate");
            }
            return $;
        }
    }

}
