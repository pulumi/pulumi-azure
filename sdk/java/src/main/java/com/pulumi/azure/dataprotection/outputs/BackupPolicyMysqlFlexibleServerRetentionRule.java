// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.dataprotection.outputs;

import com.pulumi.azure.dataprotection.outputs.BackupPolicyMysqlFlexibleServerRetentionRuleCriteria;
import com.pulumi.azure.dataprotection.outputs.BackupPolicyMysqlFlexibleServerRetentionRuleLifeCycle;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class BackupPolicyMysqlFlexibleServerRetentionRule {
    /**
     * @return A `criteria` block as defined below. Changing this forces a new resource to be created.
     * 
     */
    private BackupPolicyMysqlFlexibleServerRetentionRuleCriteria criteria;
    /**
     * @return A `lifeCycle` block as defined below. Changing this forces a new resource to be created.
     * 
     */
    private List<BackupPolicyMysqlFlexibleServerRetentionRuleLifeCycle> lifeCycles;
    /**
     * @return Specifies the name of the retention rule. Changing this forces a new resource to be created.
     * 
     */
    private String name;
    /**
     * @return Specifies the priority of the rule. The priority number must be unique for each rule. The lower the priority number, the higher the priority of the rule. Changing this forces a new resource to be created.
     * 
     */
    private Integer priority;

    private BackupPolicyMysqlFlexibleServerRetentionRule() {}
    /**
     * @return A `criteria` block as defined below. Changing this forces a new resource to be created.
     * 
     */
    public BackupPolicyMysqlFlexibleServerRetentionRuleCriteria criteria() {
        return this.criteria;
    }
    /**
     * @return A `lifeCycle` block as defined below. Changing this forces a new resource to be created.
     * 
     */
    public List<BackupPolicyMysqlFlexibleServerRetentionRuleLifeCycle> lifeCycles() {
        return this.lifeCycles;
    }
    /**
     * @return Specifies the name of the retention rule. Changing this forces a new resource to be created.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Specifies the priority of the rule. The priority number must be unique for each rule. The lower the priority number, the higher the priority of the rule. Changing this forces a new resource to be created.
     * 
     */
    public Integer priority() {
        return this.priority;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(BackupPolicyMysqlFlexibleServerRetentionRule defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private BackupPolicyMysqlFlexibleServerRetentionRuleCriteria criteria;
        private List<BackupPolicyMysqlFlexibleServerRetentionRuleLifeCycle> lifeCycles;
        private String name;
        private Integer priority;
        public Builder() {}
        public Builder(BackupPolicyMysqlFlexibleServerRetentionRule defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.criteria = defaults.criteria;
    	      this.lifeCycles = defaults.lifeCycles;
    	      this.name = defaults.name;
    	      this.priority = defaults.priority;
        }

        @CustomType.Setter
        public Builder criteria(BackupPolicyMysqlFlexibleServerRetentionRuleCriteria criteria) {
            if (criteria == null) {
              throw new MissingRequiredPropertyException("BackupPolicyMysqlFlexibleServerRetentionRule", "criteria");
            }
            this.criteria = criteria;
            return this;
        }
        @CustomType.Setter
        public Builder lifeCycles(List<BackupPolicyMysqlFlexibleServerRetentionRuleLifeCycle> lifeCycles) {
            if (lifeCycles == null) {
              throw new MissingRequiredPropertyException("BackupPolicyMysqlFlexibleServerRetentionRule", "lifeCycles");
            }
            this.lifeCycles = lifeCycles;
            return this;
        }
        public Builder lifeCycles(BackupPolicyMysqlFlexibleServerRetentionRuleLifeCycle... lifeCycles) {
            return lifeCycles(List.of(lifeCycles));
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("BackupPolicyMysqlFlexibleServerRetentionRule", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder priority(Integer priority) {
            if (priority == null) {
              throw new MissingRequiredPropertyException("BackupPolicyMysqlFlexibleServerRetentionRule", "priority");
            }
            this.priority = priority;
            return this;
        }
        public BackupPolicyMysqlFlexibleServerRetentionRule build() {
            final var _resultValue = new BackupPolicyMysqlFlexibleServerRetentionRule();
            _resultValue.criteria = criteria;
            _resultValue.lifeCycles = lifeCycles;
            _resultValue.name = name;
            _resultValue.priority = priority;
            return _resultValue;
        }
    }
}
