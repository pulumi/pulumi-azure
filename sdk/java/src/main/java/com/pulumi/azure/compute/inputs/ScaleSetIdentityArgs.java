// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.compute.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ScaleSetIdentityArgs extends com.pulumi.resources.ResourceArgs {

    public static final ScaleSetIdentityArgs Empty = new ScaleSetIdentityArgs();

    /**
     * Specifies a list of user managed identity ids to be assigned to the VMSS. Required if `type` is `UserAssigned`.
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azure.compute.ScaleSet;
     * import com.pulumi.azure.compute.ScaleSetArgs;
     * import com.pulumi.azure.compute.inputs.ScaleSetSkuArgs;
     * import com.pulumi.azure.compute.inputs.ScaleSetIdentityArgs;
     * import com.pulumi.azure.compute.inputs.ScaleSetExtensionArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var example = new ScaleSet("example", ScaleSetArgs.builder()
     *             .name("vm-scaleset")
     *             .resourceGroupName(exampleAzurermResourceGroup.name())
     *             .location(exampleAzurermResourceGroup.location())
     *             .sku(ScaleSetSkuArgs.builder()
     *                 .name(vmSku)
     *                 .tier("Standard")
     *                 .capacity(instanceCount)
     *                 .build())
     *             .identity(ScaleSetIdentityArgs.builder()
     *                 .type("SystemAssigned")
     *                 .build())
     *             .extensions(ScaleSetExtensionArgs.builder()
     *                 .name("MSILinuxExtension")
     *                 .publisher("Microsoft.ManagedIdentity")
     *                 .type("ManagedIdentityExtensionForLinux")
     *                 .typeHandlerVersion("1.0")
     *                 .settings("{\"port\": 50342}")
     *                 .build())
     *             .build());
     * 
     *         ctx.export("principalId", example.identity().applyValue(_identity -> _identity.principalId()));
     *     }
     * }
     * }
     * </pre>
     * 
     */
    @Import(name="identityIds")
    private @Nullable Output<List<String>> identityIds;

    /**
     * @return Specifies a list of user managed identity ids to be assigned to the VMSS. Required if `type` is `UserAssigned`.
     * 
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azure.compute.ScaleSet;
     * import com.pulumi.azure.compute.ScaleSetArgs;
     * import com.pulumi.azure.compute.inputs.ScaleSetSkuArgs;
     * import com.pulumi.azure.compute.inputs.ScaleSetIdentityArgs;
     * import com.pulumi.azure.compute.inputs.ScaleSetExtensionArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var example = new ScaleSet("example", ScaleSetArgs.builder()
     *             .name("vm-scaleset")
     *             .resourceGroupName(exampleAzurermResourceGroup.name())
     *             .location(exampleAzurermResourceGroup.location())
     *             .sku(ScaleSetSkuArgs.builder()
     *                 .name(vmSku)
     *                 .tier("Standard")
     *                 .capacity(instanceCount)
     *                 .build())
     *             .identity(ScaleSetIdentityArgs.builder()
     *                 .type("SystemAssigned")
     *                 .build())
     *             .extensions(ScaleSetExtensionArgs.builder()
     *                 .name("MSILinuxExtension")
     *                 .publisher("Microsoft.ManagedIdentity")
     *                 .type("ManagedIdentityExtensionForLinux")
     *                 .typeHandlerVersion("1.0")
     *                 .settings("{\"port\": 50342}")
     *                 .build())
     *             .build());
     * 
     *         ctx.export("principalId", example.identity().applyValue(_identity -> _identity.principalId()));
     *     }
     * }
     * }
     * </pre>
     * 
     */
    public Optional<Output<List<String>>> identityIds() {
        return Optional.ofNullable(this.identityIds);
    }

    @Import(name="principalId")
    private @Nullable Output<String> principalId;

    public Optional<Output<String>> principalId() {
        return Optional.ofNullable(this.principalId);
    }

    @Import(name="tenantId")
    private @Nullable Output<String> tenantId;

    public Optional<Output<String>> tenantId() {
        return Optional.ofNullable(this.tenantId);
    }

    /**
     * Specifies the identity type to be assigned to the scale set. Allowable values are `SystemAssigned` and `UserAssigned`. For the `SystemAssigned` identity the scale set&#39;s Service Principal ID (SPN) can be retrieved after the scale set has been created. See [documentation](https://docs.microsoft.com/azure/active-directory/managed-service-identity/overview) for more information. Possible values are `SystemAssigned`, `UserAssigned` and `SystemAssigned, UserAssigned`.
     * 
     */
    @Import(name="type", required=true)
    private Output<String> type;

    /**
     * @return Specifies the identity type to be assigned to the scale set. Allowable values are `SystemAssigned` and `UserAssigned`. For the `SystemAssigned` identity the scale set&#39;s Service Principal ID (SPN) can be retrieved after the scale set has been created. See [documentation](https://docs.microsoft.com/azure/active-directory/managed-service-identity/overview) for more information. Possible values are `SystemAssigned`, `UserAssigned` and `SystemAssigned, UserAssigned`.
     * 
     */
    public Output<String> type() {
        return this.type;
    }

    private ScaleSetIdentityArgs() {}

    private ScaleSetIdentityArgs(ScaleSetIdentityArgs $) {
        this.identityIds = $.identityIds;
        this.principalId = $.principalId;
        this.tenantId = $.tenantId;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ScaleSetIdentityArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ScaleSetIdentityArgs $;

        public Builder() {
            $ = new ScaleSetIdentityArgs();
        }

        public Builder(ScaleSetIdentityArgs defaults) {
            $ = new ScaleSetIdentityArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param identityIds Specifies a list of user managed identity ids to be assigned to the VMSS. Required if `type` is `UserAssigned`.
         * 
         * <pre>
         * {@code
         * package generated_program;
         * 
         * import com.pulumi.Context;
         * import com.pulumi.Pulumi;
         * import com.pulumi.core.Output;
         * import com.pulumi.azure.compute.ScaleSet;
         * import com.pulumi.azure.compute.ScaleSetArgs;
         * import com.pulumi.azure.compute.inputs.ScaleSetSkuArgs;
         * import com.pulumi.azure.compute.inputs.ScaleSetIdentityArgs;
         * import com.pulumi.azure.compute.inputs.ScaleSetExtensionArgs;
         * import java.util.List;
         * import java.util.ArrayList;
         * import java.util.Map;
         * import java.io.File;
         * import java.nio.file.Files;
         * import java.nio.file.Paths;
         * 
         * public class App {
         *     public static void main(String[] args) {
         *         Pulumi.run(App::stack);
         *     }
         * 
         *     public static void stack(Context ctx) {
         *         var example = new ScaleSet("example", ScaleSetArgs.builder()
         *             .name("vm-scaleset")
         *             .resourceGroupName(exampleAzurermResourceGroup.name())
         *             .location(exampleAzurermResourceGroup.location())
         *             .sku(ScaleSetSkuArgs.builder()
         *                 .name(vmSku)
         *                 .tier("Standard")
         *                 .capacity(instanceCount)
         *                 .build())
         *             .identity(ScaleSetIdentityArgs.builder()
         *                 .type("SystemAssigned")
         *                 .build())
         *             .extensions(ScaleSetExtensionArgs.builder()
         *                 .name("MSILinuxExtension")
         *                 .publisher("Microsoft.ManagedIdentity")
         *                 .type("ManagedIdentityExtensionForLinux")
         *                 .typeHandlerVersion("1.0")
         *                 .settings("{\"port\": 50342}")
         *                 .build())
         *             .build());
         * 
         *         ctx.export("principalId", example.identity().applyValue(_identity -> _identity.principalId()));
         *     }
         * }
         * }
         * </pre>
         * 
         * @return builder
         * 
         */
        public Builder identityIds(@Nullable Output<List<String>> identityIds) {
            $.identityIds = identityIds;
            return this;
        }

        /**
         * @param identityIds Specifies a list of user managed identity ids to be assigned to the VMSS. Required if `type` is `UserAssigned`.
         * 
         * <pre>
         * {@code
         * package generated_program;
         * 
         * import com.pulumi.Context;
         * import com.pulumi.Pulumi;
         * import com.pulumi.core.Output;
         * import com.pulumi.azure.compute.ScaleSet;
         * import com.pulumi.azure.compute.ScaleSetArgs;
         * import com.pulumi.azure.compute.inputs.ScaleSetSkuArgs;
         * import com.pulumi.azure.compute.inputs.ScaleSetIdentityArgs;
         * import com.pulumi.azure.compute.inputs.ScaleSetExtensionArgs;
         * import java.util.List;
         * import java.util.ArrayList;
         * import java.util.Map;
         * import java.io.File;
         * import java.nio.file.Files;
         * import java.nio.file.Paths;
         * 
         * public class App {
         *     public static void main(String[] args) {
         *         Pulumi.run(App::stack);
         *     }
         * 
         *     public static void stack(Context ctx) {
         *         var example = new ScaleSet("example", ScaleSetArgs.builder()
         *             .name("vm-scaleset")
         *             .resourceGroupName(exampleAzurermResourceGroup.name())
         *             .location(exampleAzurermResourceGroup.location())
         *             .sku(ScaleSetSkuArgs.builder()
         *                 .name(vmSku)
         *                 .tier("Standard")
         *                 .capacity(instanceCount)
         *                 .build())
         *             .identity(ScaleSetIdentityArgs.builder()
         *                 .type("SystemAssigned")
         *                 .build())
         *             .extensions(ScaleSetExtensionArgs.builder()
         *                 .name("MSILinuxExtension")
         *                 .publisher("Microsoft.ManagedIdentity")
         *                 .type("ManagedIdentityExtensionForLinux")
         *                 .typeHandlerVersion("1.0")
         *                 .settings("{\"port\": 50342}")
         *                 .build())
         *             .build());
         * 
         *         ctx.export("principalId", example.identity().applyValue(_identity -> _identity.principalId()));
         *     }
         * }
         * }
         * </pre>
         * 
         * @return builder
         * 
         */
        public Builder identityIds(List<String> identityIds) {
            return identityIds(Output.of(identityIds));
        }

        /**
         * @param identityIds Specifies a list of user managed identity ids to be assigned to the VMSS. Required if `type` is `UserAssigned`.
         * 
         * <pre>
         * {@code
         * package generated_program;
         * 
         * import com.pulumi.Context;
         * import com.pulumi.Pulumi;
         * import com.pulumi.core.Output;
         * import com.pulumi.azure.compute.ScaleSet;
         * import com.pulumi.azure.compute.ScaleSetArgs;
         * import com.pulumi.azure.compute.inputs.ScaleSetSkuArgs;
         * import com.pulumi.azure.compute.inputs.ScaleSetIdentityArgs;
         * import com.pulumi.azure.compute.inputs.ScaleSetExtensionArgs;
         * import java.util.List;
         * import java.util.ArrayList;
         * import java.util.Map;
         * import java.io.File;
         * import java.nio.file.Files;
         * import java.nio.file.Paths;
         * 
         * public class App {
         *     public static void main(String[] args) {
         *         Pulumi.run(App::stack);
         *     }
         * 
         *     public static void stack(Context ctx) {
         *         var example = new ScaleSet("example", ScaleSetArgs.builder()
         *             .name("vm-scaleset")
         *             .resourceGroupName(exampleAzurermResourceGroup.name())
         *             .location(exampleAzurermResourceGroup.location())
         *             .sku(ScaleSetSkuArgs.builder()
         *                 .name(vmSku)
         *                 .tier("Standard")
         *                 .capacity(instanceCount)
         *                 .build())
         *             .identity(ScaleSetIdentityArgs.builder()
         *                 .type("SystemAssigned")
         *                 .build())
         *             .extensions(ScaleSetExtensionArgs.builder()
         *                 .name("MSILinuxExtension")
         *                 .publisher("Microsoft.ManagedIdentity")
         *                 .type("ManagedIdentityExtensionForLinux")
         *                 .typeHandlerVersion("1.0")
         *                 .settings("{\"port\": 50342}")
         *                 .build())
         *             .build());
         * 
         *         ctx.export("principalId", example.identity().applyValue(_identity -> _identity.principalId()));
         *     }
         * }
         * }
         * </pre>
         * 
         * @return builder
         * 
         */
        public Builder identityIds(String... identityIds) {
            return identityIds(List.of(identityIds));
        }

        public Builder principalId(@Nullable Output<String> principalId) {
            $.principalId = principalId;
            return this;
        }

        public Builder principalId(String principalId) {
            return principalId(Output.of(principalId));
        }

        public Builder tenantId(@Nullable Output<String> tenantId) {
            $.tenantId = tenantId;
            return this;
        }

        public Builder tenantId(String tenantId) {
            return tenantId(Output.of(tenantId));
        }

        /**
         * @param type Specifies the identity type to be assigned to the scale set. Allowable values are `SystemAssigned` and `UserAssigned`. For the `SystemAssigned` identity the scale set&#39;s Service Principal ID (SPN) can be retrieved after the scale set has been created. See [documentation](https://docs.microsoft.com/azure/active-directory/managed-service-identity/overview) for more information. Possible values are `SystemAssigned`, `UserAssigned` and `SystemAssigned, UserAssigned`.
         * 
         * @return builder
         * 
         */
        public Builder type(Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type Specifies the identity type to be assigned to the scale set. Allowable values are `SystemAssigned` and `UserAssigned`. For the `SystemAssigned` identity the scale set&#39;s Service Principal ID (SPN) can be retrieved after the scale set has been created. See [documentation](https://docs.microsoft.com/azure/active-directory/managed-service-identity/overview) for more information. Possible values are `SystemAssigned`, `UserAssigned` and `SystemAssigned, UserAssigned`.
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        public ScaleSetIdentityArgs build() {
            if ($.type == null) {
                throw new MissingRequiredPropertyException("ScaleSetIdentityArgs", "type");
            }
            return $;
        }
    }

}
