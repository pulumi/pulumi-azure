// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.containerservice.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class KubernetesClusterUpgradeOverride {
    /**
     * @return Specifies the duration, in RFC 3339 format (e.g., `2025-10-01T13:00:00Z`), the `upgradeOverride` values are effective. This field must be set for the `upgradeOverride` values to take effect. The date-time must be within the next 30 days.
     * 
     * &gt; **Note:** This only matches the start time of an upgrade, and the effectiveness won&#39;t change once an upgrade starts even if the `effectiveUntil` value expires as the upgrade proceeds.
     * 
     */
    private @Nullable String effectiveUntil;
    /**
     * @return Whether to force upgrade the cluster. Possible values are `true` or `false`.
     * 
     * !&gt; **Note:** The `forceUpgradeEnabled` field instructs the upgrade operation to bypass upgrade protections (e.g. checking for deprecated API usage) which may render the cluster inoperative after the upgrade process has completed. Use the `forceUpgradeEnabled` option with extreme caution only.
     * 
     */
    private Boolean forceUpgradeEnabled;

    private KubernetesClusterUpgradeOverride() {}
    /**
     * @return Specifies the duration, in RFC 3339 format (e.g., `2025-10-01T13:00:00Z`), the `upgradeOverride` values are effective. This field must be set for the `upgradeOverride` values to take effect. The date-time must be within the next 30 days.
     * 
     * &gt; **Note:** This only matches the start time of an upgrade, and the effectiveness won&#39;t change once an upgrade starts even if the `effectiveUntil` value expires as the upgrade proceeds.
     * 
     */
    public Optional<String> effectiveUntil() {
        return Optional.ofNullable(this.effectiveUntil);
    }
    /**
     * @return Whether to force upgrade the cluster. Possible values are `true` or `false`.
     * 
     * !&gt; **Note:** The `forceUpgradeEnabled` field instructs the upgrade operation to bypass upgrade protections (e.g. checking for deprecated API usage) which may render the cluster inoperative after the upgrade process has completed. Use the `forceUpgradeEnabled` option with extreme caution only.
     * 
     */
    public Boolean forceUpgradeEnabled() {
        return this.forceUpgradeEnabled;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(KubernetesClusterUpgradeOverride defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String effectiveUntil;
        private Boolean forceUpgradeEnabled;
        public Builder() {}
        public Builder(KubernetesClusterUpgradeOverride defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.effectiveUntil = defaults.effectiveUntil;
    	      this.forceUpgradeEnabled = defaults.forceUpgradeEnabled;
        }

        @CustomType.Setter
        public Builder effectiveUntil(@Nullable String effectiveUntil) {

            this.effectiveUntil = effectiveUntil;
            return this;
        }
        @CustomType.Setter
        public Builder forceUpgradeEnabled(Boolean forceUpgradeEnabled) {
            if (forceUpgradeEnabled == null) {
              throw new MissingRequiredPropertyException("KubernetesClusterUpgradeOverride", "forceUpgradeEnabled");
            }
            this.forceUpgradeEnabled = forceUpgradeEnabled;
            return this;
        }
        public KubernetesClusterUpgradeOverride build() {
            final var _resultValue = new KubernetesClusterUpgradeOverride();
            _resultValue.effectiveUntil = effectiveUntil;
            _resultValue.forceUpgradeEnabled = forceUpgradeEnabled;
            return _resultValue;
        }
    }
}
