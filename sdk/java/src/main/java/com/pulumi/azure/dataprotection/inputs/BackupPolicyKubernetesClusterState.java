// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.dataprotection.inputs;

import com.pulumi.azure.dataprotection.inputs.BackupPolicyKubernetesClusterDefaultRetentionRuleArgs;
import com.pulumi.azure.dataprotection.inputs.BackupPolicyKubernetesClusterRetentionRuleArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class BackupPolicyKubernetesClusterState extends com.pulumi.resources.ResourceArgs {

    public static final BackupPolicyKubernetesClusterState Empty = new BackupPolicyKubernetesClusterState();

    /**
     * Specifies a list of repeating time interval. It supports weekly back. It should follow `ISO 8601` repeating time interval. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="backupRepeatingTimeIntervals")
    private @Nullable Output<List<String>> backupRepeatingTimeIntervals;

    /**
     * @return Specifies a list of repeating time interval. It supports weekly back. It should follow `ISO 8601` repeating time interval. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<List<String>>> backupRepeatingTimeIntervals() {
        return Optional.ofNullable(this.backupRepeatingTimeIntervals);
    }

    /**
     * A `defaultRetentionRule` block as defined below. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="defaultRetentionRule")
    private @Nullable Output<BackupPolicyKubernetesClusterDefaultRetentionRuleArgs> defaultRetentionRule;

    /**
     * @return A `defaultRetentionRule` block as defined below. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<BackupPolicyKubernetesClusterDefaultRetentionRuleArgs>> defaultRetentionRule() {
        return Optional.ofNullable(this.defaultRetentionRule);
    }

    /**
     * The name which should be used for the Backup Policy Kubernetes Cluster. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name which should be used for the Backup Policy Kubernetes Cluster. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The name of the Resource Group where the Backup Policy Kubernetes Cluster should exist. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="resourceGroupName")
    private @Nullable Output<String> resourceGroupName;

    /**
     * @return The name of the Resource Group where the Backup Policy Kubernetes Cluster should exist. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> resourceGroupName() {
        return Optional.ofNullable(this.resourceGroupName);
    }

    /**
     * One or more `retentionRule` blocks as defined below. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="retentionRules")
    private @Nullable Output<List<BackupPolicyKubernetesClusterRetentionRuleArgs>> retentionRules;

    /**
     * @return One or more `retentionRule` blocks as defined below. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<List<BackupPolicyKubernetesClusterRetentionRuleArgs>>> retentionRules() {
        return Optional.ofNullable(this.retentionRules);
    }

    /**
     * Specifies the Time Zone which should be used by the backup schedule. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="timeZone")
    private @Nullable Output<String> timeZone;

    /**
     * @return Specifies the Time Zone which should be used by the backup schedule. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> timeZone() {
        return Optional.ofNullable(this.timeZone);
    }

    /**
     * The name of the Backup Vault where the Backup Policy Kubernetes Cluster should exist. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="vaultName")
    private @Nullable Output<String> vaultName;

    /**
     * @return The name of the Backup Vault where the Backup Policy Kubernetes Cluster should exist. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> vaultName() {
        return Optional.ofNullable(this.vaultName);
    }

    private BackupPolicyKubernetesClusterState() {}

    private BackupPolicyKubernetesClusterState(BackupPolicyKubernetesClusterState $) {
        this.backupRepeatingTimeIntervals = $.backupRepeatingTimeIntervals;
        this.defaultRetentionRule = $.defaultRetentionRule;
        this.name = $.name;
        this.resourceGroupName = $.resourceGroupName;
        this.retentionRules = $.retentionRules;
        this.timeZone = $.timeZone;
        this.vaultName = $.vaultName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BackupPolicyKubernetesClusterState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BackupPolicyKubernetesClusterState $;

        public Builder() {
            $ = new BackupPolicyKubernetesClusterState();
        }

        public Builder(BackupPolicyKubernetesClusterState defaults) {
            $ = new BackupPolicyKubernetesClusterState(Objects.requireNonNull(defaults));
        }

        /**
         * @param backupRepeatingTimeIntervals Specifies a list of repeating time interval. It supports weekly back. It should follow `ISO 8601` repeating time interval. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder backupRepeatingTimeIntervals(@Nullable Output<List<String>> backupRepeatingTimeIntervals) {
            $.backupRepeatingTimeIntervals = backupRepeatingTimeIntervals;
            return this;
        }

        /**
         * @param backupRepeatingTimeIntervals Specifies a list of repeating time interval. It supports weekly back. It should follow `ISO 8601` repeating time interval. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder backupRepeatingTimeIntervals(List<String> backupRepeatingTimeIntervals) {
            return backupRepeatingTimeIntervals(Output.of(backupRepeatingTimeIntervals));
        }

        /**
         * @param backupRepeatingTimeIntervals Specifies a list of repeating time interval. It supports weekly back. It should follow `ISO 8601` repeating time interval. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder backupRepeatingTimeIntervals(String... backupRepeatingTimeIntervals) {
            return backupRepeatingTimeIntervals(List.of(backupRepeatingTimeIntervals));
        }

        /**
         * @param defaultRetentionRule A `defaultRetentionRule` block as defined below. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder defaultRetentionRule(@Nullable Output<BackupPolicyKubernetesClusterDefaultRetentionRuleArgs> defaultRetentionRule) {
            $.defaultRetentionRule = defaultRetentionRule;
            return this;
        }

        /**
         * @param defaultRetentionRule A `defaultRetentionRule` block as defined below. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder defaultRetentionRule(BackupPolicyKubernetesClusterDefaultRetentionRuleArgs defaultRetentionRule) {
            return defaultRetentionRule(Output.of(defaultRetentionRule));
        }

        /**
         * @param name The name which should be used for the Backup Policy Kubernetes Cluster. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name which should be used for the Backup Policy Kubernetes Cluster. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param resourceGroupName The name of the Resource Group where the Backup Policy Kubernetes Cluster should exist. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(@Nullable Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName The name of the Resource Group where the Backup Policy Kubernetes Cluster should exist. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        /**
         * @param retentionRules One or more `retentionRule` blocks as defined below. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder retentionRules(@Nullable Output<List<BackupPolicyKubernetesClusterRetentionRuleArgs>> retentionRules) {
            $.retentionRules = retentionRules;
            return this;
        }

        /**
         * @param retentionRules One or more `retentionRule` blocks as defined below. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder retentionRules(List<BackupPolicyKubernetesClusterRetentionRuleArgs> retentionRules) {
            return retentionRules(Output.of(retentionRules));
        }

        /**
         * @param retentionRules One or more `retentionRule` blocks as defined below. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder retentionRules(BackupPolicyKubernetesClusterRetentionRuleArgs... retentionRules) {
            return retentionRules(List.of(retentionRules));
        }

        /**
         * @param timeZone Specifies the Time Zone which should be used by the backup schedule. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder timeZone(@Nullable Output<String> timeZone) {
            $.timeZone = timeZone;
            return this;
        }

        /**
         * @param timeZone Specifies the Time Zone which should be used by the backup schedule. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder timeZone(String timeZone) {
            return timeZone(Output.of(timeZone));
        }

        /**
         * @param vaultName The name of the Backup Vault where the Backup Policy Kubernetes Cluster should exist. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder vaultName(@Nullable Output<String> vaultName) {
            $.vaultName = vaultName;
            return this;
        }

        /**
         * @param vaultName The name of the Backup Vault where the Backup Policy Kubernetes Cluster should exist. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder vaultName(String vaultName) {
            return vaultName(Output.of(vaultName));
        }

        public BackupPolicyKubernetesClusterState build() {
            return $;
        }
    }

}
