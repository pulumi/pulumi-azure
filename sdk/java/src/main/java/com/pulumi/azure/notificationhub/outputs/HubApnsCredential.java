// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.notificationhub.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class HubApnsCredential {
    /**
     * @return The Application Mode which defines which server the APNS Messages should be sent to. Possible values are `Production` and `Sandbox`.
     * 
     */
    private String applicationMode;
    /**
     * @return The Bundle ID of the iOS/macOS application to send push notifications for, such as `com.org.example`.
     * 
     */
    private String bundleId;
    /**
     * @return The Apple Push Notifications Service (APNS) Key.
     * 
     */
    private String keyId;
    /**
     * @return The ID of the team the Token.
     * 
     */
    private String teamId;
    /**
     * @return The Push Token associated with the Apple Developer Account. This is the contents of the `key` downloaded from [the Apple Developer Portal](https://developer.apple.com/account/ios/authkey/) between the `-----BEGIN PRIVATE KEY-----` and `-----END PRIVATE KEY-----` blocks.
     * 
     */
    private String token;

    private HubApnsCredential() {}
    /**
     * @return The Application Mode which defines which server the APNS Messages should be sent to. Possible values are `Production` and `Sandbox`.
     * 
     */
    public String applicationMode() {
        return this.applicationMode;
    }
    /**
     * @return The Bundle ID of the iOS/macOS application to send push notifications for, such as `com.org.example`.
     * 
     */
    public String bundleId() {
        return this.bundleId;
    }
    /**
     * @return The Apple Push Notifications Service (APNS) Key.
     * 
     */
    public String keyId() {
        return this.keyId;
    }
    /**
     * @return The ID of the team the Token.
     * 
     */
    public String teamId() {
        return this.teamId;
    }
    /**
     * @return The Push Token associated with the Apple Developer Account. This is the contents of the `key` downloaded from [the Apple Developer Portal](https://developer.apple.com/account/ios/authkey/) between the `-----BEGIN PRIVATE KEY-----` and `-----END PRIVATE KEY-----` blocks.
     * 
     */
    public String token() {
        return this.token;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(HubApnsCredential defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String applicationMode;
        private String bundleId;
        private String keyId;
        private String teamId;
        private String token;
        public Builder() {}
        public Builder(HubApnsCredential defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.applicationMode = defaults.applicationMode;
    	      this.bundleId = defaults.bundleId;
    	      this.keyId = defaults.keyId;
    	      this.teamId = defaults.teamId;
    	      this.token = defaults.token;
        }

        @CustomType.Setter
        public Builder applicationMode(String applicationMode) {
            if (applicationMode == null) {
              throw new MissingRequiredPropertyException("HubApnsCredential", "applicationMode");
            }
            this.applicationMode = applicationMode;
            return this;
        }
        @CustomType.Setter
        public Builder bundleId(String bundleId) {
            if (bundleId == null) {
              throw new MissingRequiredPropertyException("HubApnsCredential", "bundleId");
            }
            this.bundleId = bundleId;
            return this;
        }
        @CustomType.Setter
        public Builder keyId(String keyId) {
            if (keyId == null) {
              throw new MissingRequiredPropertyException("HubApnsCredential", "keyId");
            }
            this.keyId = keyId;
            return this;
        }
        @CustomType.Setter
        public Builder teamId(String teamId) {
            if (teamId == null) {
              throw new MissingRequiredPropertyException("HubApnsCredential", "teamId");
            }
            this.teamId = teamId;
            return this;
        }
        @CustomType.Setter
        public Builder token(String token) {
            if (token == null) {
              throw new MissingRequiredPropertyException("HubApnsCredential", "token");
            }
            this.token = token;
            return this;
        }
        public HubApnsCredential build() {
            final var _resultValue = new HubApnsCredential();
            _resultValue.applicationMode = applicationMode;
            _resultValue.bundleId = bundleId;
            _resultValue.keyId = keyId;
            _resultValue.teamId = teamId;
            _resultValue.token = token;
            return _resultValue;
        }
    }
}
