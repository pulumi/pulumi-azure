// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.cosmosdb.outputs;

import com.pulumi.azure.cosmosdb.outputs.AccountRestoreDatabase;
import com.pulumi.azure.cosmosdb.outputs.AccountRestoreGremlinDatabase;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class AccountRestore {
    /**
     * @return A `database` block as defined below. Changing this forces a new resource to be created.
     * 
     */
    private @Nullable List<AccountRestoreDatabase> databases;
    /**
     * @return One or more `gremlinDatabase` blocks as defined below. Changing this forces a new resource to be created.
     * 
     */
    private @Nullable List<AccountRestoreGremlinDatabase> gremlinDatabases;
    /**
     * @return The creation time of the database or the collection (Datetime Format `RFC 3339`). Changing this forces a new resource to be created.
     * 
     */
    private String restoreTimestampInUtc;
    /**
     * @return The resource ID of the restorable database account from which the restore has to be initiated. The example is `/subscriptions/{subscriptionId}/providers/Microsoft.DocumentDB/locations/{location}/restorableDatabaseAccounts/{restorableDatabaseAccountName}`. Changing this forces a new resource to be created.
     * 
     * &gt; **Note:** Any database account with `Continuous` type (live account or accounts deleted in last 30 days) is a restorable database account and there cannot be Create/Update/Delete operations on the restorable database accounts. They can only be read and retrieved by `azure.cosmosdb.getRestorableDatabaseAccounts`.
     * 
     */
    private String sourceCosmosdbAccountId;
    /**
     * @return A list of specific tables available for restore. Changing this forces a new resource to be created.
     * 
     */
    private @Nullable List<String> tablesToRestores;

    private AccountRestore() {}
    /**
     * @return A `database` block as defined below. Changing this forces a new resource to be created.
     * 
     */
    public List<AccountRestoreDatabase> databases() {
        return this.databases == null ? List.of() : this.databases;
    }
    /**
     * @return One or more `gremlinDatabase` blocks as defined below. Changing this forces a new resource to be created.
     * 
     */
    public List<AccountRestoreGremlinDatabase> gremlinDatabases() {
        return this.gremlinDatabases == null ? List.of() : this.gremlinDatabases;
    }
    /**
     * @return The creation time of the database or the collection (Datetime Format `RFC 3339`). Changing this forces a new resource to be created.
     * 
     */
    public String restoreTimestampInUtc() {
        return this.restoreTimestampInUtc;
    }
    /**
     * @return The resource ID of the restorable database account from which the restore has to be initiated. The example is `/subscriptions/{subscriptionId}/providers/Microsoft.DocumentDB/locations/{location}/restorableDatabaseAccounts/{restorableDatabaseAccountName}`. Changing this forces a new resource to be created.
     * 
     * &gt; **Note:** Any database account with `Continuous` type (live account or accounts deleted in last 30 days) is a restorable database account and there cannot be Create/Update/Delete operations on the restorable database accounts. They can only be read and retrieved by `azure.cosmosdb.getRestorableDatabaseAccounts`.
     * 
     */
    public String sourceCosmosdbAccountId() {
        return this.sourceCosmosdbAccountId;
    }
    /**
     * @return A list of specific tables available for restore. Changing this forces a new resource to be created.
     * 
     */
    public List<String> tablesToRestores() {
        return this.tablesToRestores == null ? List.of() : this.tablesToRestores;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AccountRestore defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<AccountRestoreDatabase> databases;
        private @Nullable List<AccountRestoreGremlinDatabase> gremlinDatabases;
        private String restoreTimestampInUtc;
        private String sourceCosmosdbAccountId;
        private @Nullable List<String> tablesToRestores;
        public Builder() {}
        public Builder(AccountRestore defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.databases = defaults.databases;
    	      this.gremlinDatabases = defaults.gremlinDatabases;
    	      this.restoreTimestampInUtc = defaults.restoreTimestampInUtc;
    	      this.sourceCosmosdbAccountId = defaults.sourceCosmosdbAccountId;
    	      this.tablesToRestores = defaults.tablesToRestores;
        }

        @CustomType.Setter
        public Builder databases(@Nullable List<AccountRestoreDatabase> databases) {

            this.databases = databases;
            return this;
        }
        public Builder databases(AccountRestoreDatabase... databases) {
            return databases(List.of(databases));
        }
        @CustomType.Setter
        public Builder gremlinDatabases(@Nullable List<AccountRestoreGremlinDatabase> gremlinDatabases) {

            this.gremlinDatabases = gremlinDatabases;
            return this;
        }
        public Builder gremlinDatabases(AccountRestoreGremlinDatabase... gremlinDatabases) {
            return gremlinDatabases(List.of(gremlinDatabases));
        }
        @CustomType.Setter
        public Builder restoreTimestampInUtc(String restoreTimestampInUtc) {
            if (restoreTimestampInUtc == null) {
              throw new MissingRequiredPropertyException("AccountRestore", "restoreTimestampInUtc");
            }
            this.restoreTimestampInUtc = restoreTimestampInUtc;
            return this;
        }
        @CustomType.Setter
        public Builder sourceCosmosdbAccountId(String sourceCosmosdbAccountId) {
            if (sourceCosmosdbAccountId == null) {
              throw new MissingRequiredPropertyException("AccountRestore", "sourceCosmosdbAccountId");
            }
            this.sourceCosmosdbAccountId = sourceCosmosdbAccountId;
            return this;
        }
        @CustomType.Setter
        public Builder tablesToRestores(@Nullable List<String> tablesToRestores) {

            this.tablesToRestores = tablesToRestores;
            return this;
        }
        public Builder tablesToRestores(String... tablesToRestores) {
            return tablesToRestores(List.of(tablesToRestores));
        }
        public AccountRestore build() {
            final var _resultValue = new AccountRestore();
            _resultValue.databases = databases;
            _resultValue.gremlinDatabases = gremlinDatabases;
            _resultValue.restoreTimestampInUtc = restoreTimestampInUtc;
            _resultValue.sourceCosmosdbAccountId = sourceCosmosdbAccountId;
            _resultValue.tablesToRestores = tablesToRestores;
            return _resultValue;
        }
    }
}
