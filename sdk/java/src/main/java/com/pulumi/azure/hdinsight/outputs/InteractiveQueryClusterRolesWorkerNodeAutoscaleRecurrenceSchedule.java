// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.hdinsight.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class InteractiveQueryClusterRolesWorkerNodeAutoscaleRecurrenceSchedule {
    /**
     * @return The days of the week to perform autoscale. Possible values are `Monday`, `Tuesday`, `Wednesday`, `Thursday`, `Friday`, `Saturday` and `Sunday`.
     * 
     */
    private List<String> days;
    /**
     * @return The number of worker nodes to autoscale at the specified time.
     * 
     */
    private Integer targetInstanceCount;
    /**
     * @return The time of day to perform the autoscale in 24hour format.
     * 
     */
    private String time;

    private InteractiveQueryClusterRolesWorkerNodeAutoscaleRecurrenceSchedule() {}
    /**
     * @return The days of the week to perform autoscale. Possible values are `Monday`, `Tuesday`, `Wednesday`, `Thursday`, `Friday`, `Saturday` and `Sunday`.
     * 
     */
    public List<String> days() {
        return this.days;
    }
    /**
     * @return The number of worker nodes to autoscale at the specified time.
     * 
     */
    public Integer targetInstanceCount() {
        return this.targetInstanceCount;
    }
    /**
     * @return The time of day to perform the autoscale in 24hour format.
     * 
     */
    public String time() {
        return this.time;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(InteractiveQueryClusterRolesWorkerNodeAutoscaleRecurrenceSchedule defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<String> days;
        private Integer targetInstanceCount;
        private String time;
        public Builder() {}
        public Builder(InteractiveQueryClusterRolesWorkerNodeAutoscaleRecurrenceSchedule defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.days = defaults.days;
    	      this.targetInstanceCount = defaults.targetInstanceCount;
    	      this.time = defaults.time;
        }

        @CustomType.Setter
        public Builder days(List<String> days) {
            if (days == null) {
              throw new MissingRequiredPropertyException("InteractiveQueryClusterRolesWorkerNodeAutoscaleRecurrenceSchedule", "days");
            }
            this.days = days;
            return this;
        }
        public Builder days(String... days) {
            return days(List.of(days));
        }
        @CustomType.Setter
        public Builder targetInstanceCount(Integer targetInstanceCount) {
            if (targetInstanceCount == null) {
              throw new MissingRequiredPropertyException("InteractiveQueryClusterRolesWorkerNodeAutoscaleRecurrenceSchedule", "targetInstanceCount");
            }
            this.targetInstanceCount = targetInstanceCount;
            return this;
        }
        @CustomType.Setter
        public Builder time(String time) {
            if (time == null) {
              throw new MissingRequiredPropertyException("InteractiveQueryClusterRolesWorkerNodeAutoscaleRecurrenceSchedule", "time");
            }
            this.time = time;
            return this;
        }
        public InteractiveQueryClusterRolesWorkerNodeAutoscaleRecurrenceSchedule build() {
            final var _resultValue = new InteractiveQueryClusterRolesWorkerNodeAutoscaleRecurrenceSchedule();
            _resultValue.days = days;
            _resultValue.targetInstanceCount = targetInstanceCount;
            _resultValue.time = time;
            return _resultValue;
        }
    }
}
