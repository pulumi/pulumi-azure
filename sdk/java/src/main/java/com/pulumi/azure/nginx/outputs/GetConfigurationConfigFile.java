// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.nginx.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetConfigurationConfigFile {
    /**
     * @return The base-64 encoded contents of this configuration file.
     * 
     */
    private String content;
    /**
     * @return The path of this configuration file.
     * 
     */
    private String virtualPath;

    private GetConfigurationConfigFile() {}
    /**
     * @return The base-64 encoded contents of this configuration file.
     * 
     */
    public String content() {
        return this.content;
    }
    /**
     * @return The path of this configuration file.
     * 
     */
    public String virtualPath() {
        return this.virtualPath;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetConfigurationConfigFile defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String content;
        private String virtualPath;
        public Builder() {}
        public Builder(GetConfigurationConfigFile defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.content = defaults.content;
    	      this.virtualPath = defaults.virtualPath;
        }

        @CustomType.Setter
        public Builder content(String content) {
            if (content == null) {
              throw new MissingRequiredPropertyException("GetConfigurationConfigFile", "content");
            }
            this.content = content;
            return this;
        }
        @CustomType.Setter
        public Builder virtualPath(String virtualPath) {
            if (virtualPath == null) {
              throw new MissingRequiredPropertyException("GetConfigurationConfigFile", "virtualPath");
            }
            this.virtualPath = virtualPath;
            return this;
        }
        public GetConfigurationConfigFile build() {
            final var _resultValue = new GetConfigurationConfigFile();
            _resultValue.content = content;
            _resultValue.virtualPath = virtualPath;
            return _resultValue;
        }
    }
}
