// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.network.outputs;

import com.pulumi.azure.network.outputs.GetApplicationGatewayUrlPathMapPathRule;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetApplicationGatewayUrlPathMap {
    /**
     * @return The ID of the Default Backend Address Pool.
     * 
     */
    private String defaultBackendAddressPoolId;
    /**
     * @return The Name of the Default Backend Address Pool which is used for this URL Path Map.
     * 
     */
    private String defaultBackendAddressPoolName;
    /**
     * @return The ID of the Default Backend HTTP Settings Collection.
     * 
     */
    private String defaultBackendHttpSettingsId;
    /**
     * @return The Name of the Default Backend HTTP Settings Collection which is used for this URL Path Map.
     * 
     */
    private String defaultBackendHttpSettingsName;
    /**
     * @return The ID of the Default Redirect Configuration.
     * 
     */
    private String defaultRedirectConfigurationId;
    /**
     * @return The Name of the Default Redirect Configuration which is used for this URL Path Map.
     * 
     */
    private String defaultRedirectConfigurationName;
    private String defaultRewriteRuleSetId;
    /**
     * @return The Name of the Default Rewrite Rule Set which is used for this URL Path Map.
     * 
     */
    private String defaultRewriteRuleSetName;
    /**
     * @return The ID of the Rewrite Rule Set
     * 
     */
    private String id;
    /**
     * @return The name of this Application Gateway.
     * 
     */
    private String name;
    /**
     * @return One or more `path_rule` blocks as defined above.
     * 
     */
    private List<GetApplicationGatewayUrlPathMapPathRule> pathRules;

    private GetApplicationGatewayUrlPathMap() {}
    /**
     * @return The ID of the Default Backend Address Pool.
     * 
     */
    public String defaultBackendAddressPoolId() {
        return this.defaultBackendAddressPoolId;
    }
    /**
     * @return The Name of the Default Backend Address Pool which is used for this URL Path Map.
     * 
     */
    public String defaultBackendAddressPoolName() {
        return this.defaultBackendAddressPoolName;
    }
    /**
     * @return The ID of the Default Backend HTTP Settings Collection.
     * 
     */
    public String defaultBackendHttpSettingsId() {
        return this.defaultBackendHttpSettingsId;
    }
    /**
     * @return The Name of the Default Backend HTTP Settings Collection which is used for this URL Path Map.
     * 
     */
    public String defaultBackendHttpSettingsName() {
        return this.defaultBackendHttpSettingsName;
    }
    /**
     * @return The ID of the Default Redirect Configuration.
     * 
     */
    public String defaultRedirectConfigurationId() {
        return this.defaultRedirectConfigurationId;
    }
    /**
     * @return The Name of the Default Redirect Configuration which is used for this URL Path Map.
     * 
     */
    public String defaultRedirectConfigurationName() {
        return this.defaultRedirectConfigurationName;
    }
    public String defaultRewriteRuleSetId() {
        return this.defaultRewriteRuleSetId;
    }
    /**
     * @return The Name of the Default Rewrite Rule Set which is used for this URL Path Map.
     * 
     */
    public String defaultRewriteRuleSetName() {
        return this.defaultRewriteRuleSetName;
    }
    /**
     * @return The ID of the Rewrite Rule Set
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The name of this Application Gateway.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return One or more `path_rule` blocks as defined above.
     * 
     */
    public List<GetApplicationGatewayUrlPathMapPathRule> pathRules() {
        return this.pathRules;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetApplicationGatewayUrlPathMap defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String defaultBackendAddressPoolId;
        private String defaultBackendAddressPoolName;
        private String defaultBackendHttpSettingsId;
        private String defaultBackendHttpSettingsName;
        private String defaultRedirectConfigurationId;
        private String defaultRedirectConfigurationName;
        private String defaultRewriteRuleSetId;
        private String defaultRewriteRuleSetName;
        private String id;
        private String name;
        private List<GetApplicationGatewayUrlPathMapPathRule> pathRules;
        public Builder() {}
        public Builder(GetApplicationGatewayUrlPathMap defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.defaultBackendAddressPoolId = defaults.defaultBackendAddressPoolId;
    	      this.defaultBackendAddressPoolName = defaults.defaultBackendAddressPoolName;
    	      this.defaultBackendHttpSettingsId = defaults.defaultBackendHttpSettingsId;
    	      this.defaultBackendHttpSettingsName = defaults.defaultBackendHttpSettingsName;
    	      this.defaultRedirectConfigurationId = defaults.defaultRedirectConfigurationId;
    	      this.defaultRedirectConfigurationName = defaults.defaultRedirectConfigurationName;
    	      this.defaultRewriteRuleSetId = defaults.defaultRewriteRuleSetId;
    	      this.defaultRewriteRuleSetName = defaults.defaultRewriteRuleSetName;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.pathRules = defaults.pathRules;
        }

        @CustomType.Setter
        public Builder defaultBackendAddressPoolId(String defaultBackendAddressPoolId) {
            this.defaultBackendAddressPoolId = Objects.requireNonNull(defaultBackendAddressPoolId);
            return this;
        }
        @CustomType.Setter
        public Builder defaultBackendAddressPoolName(String defaultBackendAddressPoolName) {
            this.defaultBackendAddressPoolName = Objects.requireNonNull(defaultBackendAddressPoolName);
            return this;
        }
        @CustomType.Setter
        public Builder defaultBackendHttpSettingsId(String defaultBackendHttpSettingsId) {
            this.defaultBackendHttpSettingsId = Objects.requireNonNull(defaultBackendHttpSettingsId);
            return this;
        }
        @CustomType.Setter
        public Builder defaultBackendHttpSettingsName(String defaultBackendHttpSettingsName) {
            this.defaultBackendHttpSettingsName = Objects.requireNonNull(defaultBackendHttpSettingsName);
            return this;
        }
        @CustomType.Setter
        public Builder defaultRedirectConfigurationId(String defaultRedirectConfigurationId) {
            this.defaultRedirectConfigurationId = Objects.requireNonNull(defaultRedirectConfigurationId);
            return this;
        }
        @CustomType.Setter
        public Builder defaultRedirectConfigurationName(String defaultRedirectConfigurationName) {
            this.defaultRedirectConfigurationName = Objects.requireNonNull(defaultRedirectConfigurationName);
            return this;
        }
        @CustomType.Setter
        public Builder defaultRewriteRuleSetId(String defaultRewriteRuleSetId) {
            this.defaultRewriteRuleSetId = Objects.requireNonNull(defaultRewriteRuleSetId);
            return this;
        }
        @CustomType.Setter
        public Builder defaultRewriteRuleSetName(String defaultRewriteRuleSetName) {
            this.defaultRewriteRuleSetName = Objects.requireNonNull(defaultRewriteRuleSetName);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder pathRules(List<GetApplicationGatewayUrlPathMapPathRule> pathRules) {
            this.pathRules = Objects.requireNonNull(pathRules);
            return this;
        }
        public Builder pathRules(GetApplicationGatewayUrlPathMapPathRule... pathRules) {
            return pathRules(List.of(pathRules));
        }
        public GetApplicationGatewayUrlPathMap build() {
            final var _resultValue = new GetApplicationGatewayUrlPathMap();
            _resultValue.defaultBackendAddressPoolId = defaultBackendAddressPoolId;
            _resultValue.defaultBackendAddressPoolName = defaultBackendAddressPoolName;
            _resultValue.defaultBackendHttpSettingsId = defaultBackendHttpSettingsId;
            _resultValue.defaultBackendHttpSettingsName = defaultBackendHttpSettingsName;
            _resultValue.defaultRedirectConfigurationId = defaultRedirectConfigurationId;
            _resultValue.defaultRedirectConfigurationName = defaultRedirectConfigurationName;
            _resultValue.defaultRewriteRuleSetId = defaultRewriteRuleSetId;
            _resultValue.defaultRewriteRuleSetName = defaultRewriteRuleSetName;
            _resultValue.id = id;
            _resultValue.name = name;
            _resultValue.pathRules = pathRules;
            return _resultValue;
        }
    }
}
