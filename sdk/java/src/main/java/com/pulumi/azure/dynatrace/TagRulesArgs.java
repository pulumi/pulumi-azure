// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.dynatrace;

import com.pulumi.azure.dynatrace.inputs.TagRulesLogRuleArgs;
import com.pulumi.azure.dynatrace.inputs.TagRulesMetricRuleArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class TagRulesArgs extends com.pulumi.resources.ResourceArgs {

    public static final TagRulesArgs Empty = new TagRulesArgs();

    /**
     * Set of rules for sending logs for the Monitor resource. A `log_rule` block as defined below.
     * 
     */
    @Import(name="logRule")
    private @Nullable Output<TagRulesLogRuleArgs> logRule;

    /**
     * @return Set of rules for sending logs for the Monitor resource. A `log_rule` block as defined below.
     * 
     */
    public Optional<Output<TagRulesLogRuleArgs>> logRule() {
        return Optional.ofNullable(this.logRule);
    }

    /**
     * Set of rules for sending metrics for the Monitor resource. A `metric_rule` block as defined below.
     * 
     */
    @Import(name="metricRule")
    private @Nullable Output<TagRulesMetricRuleArgs> metricRule;

    /**
     * @return Set of rules for sending metrics for the Monitor resource. A `metric_rule` block as defined below.
     * 
     */
    public Optional<Output<TagRulesMetricRuleArgs>> metricRule() {
        return Optional.ofNullable(this.metricRule);
    }

    /**
     * Name of the Dynatrace monitor. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="monitorId", required=true)
    private Output<String> monitorId;

    /**
     * @return Name of the Dynatrace monitor. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> monitorId() {
        return this.monitorId;
    }

    /**
     * Name of the Dynatrace tag rules. Currently, the only supported value is `default`. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Name of the Dynatrace tag rules. Currently, the only supported value is `default`. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    private TagRulesArgs() {}

    private TagRulesArgs(TagRulesArgs $) {
        this.logRule = $.logRule;
        this.metricRule = $.metricRule;
        this.monitorId = $.monitorId;
        this.name = $.name;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TagRulesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TagRulesArgs $;

        public Builder() {
            $ = new TagRulesArgs();
        }

        public Builder(TagRulesArgs defaults) {
            $ = new TagRulesArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param logRule Set of rules for sending logs for the Monitor resource. A `log_rule` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder logRule(@Nullable Output<TagRulesLogRuleArgs> logRule) {
            $.logRule = logRule;
            return this;
        }

        /**
         * @param logRule Set of rules for sending logs for the Monitor resource. A `log_rule` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder logRule(TagRulesLogRuleArgs logRule) {
            return logRule(Output.of(logRule));
        }

        /**
         * @param metricRule Set of rules for sending metrics for the Monitor resource. A `metric_rule` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder metricRule(@Nullable Output<TagRulesMetricRuleArgs> metricRule) {
            $.metricRule = metricRule;
            return this;
        }

        /**
         * @param metricRule Set of rules for sending metrics for the Monitor resource. A `metric_rule` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder metricRule(TagRulesMetricRuleArgs metricRule) {
            return metricRule(Output.of(metricRule));
        }

        /**
         * @param monitorId Name of the Dynatrace monitor. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder monitorId(Output<String> monitorId) {
            $.monitorId = monitorId;
            return this;
        }

        /**
         * @param monitorId Name of the Dynatrace monitor. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder monitorId(String monitorId) {
            return monitorId(Output.of(monitorId));
        }

        /**
         * @param name Name of the Dynatrace tag rules. Currently, the only supported value is `default`. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Name of the Dynatrace tag rules. Currently, the only supported value is `default`. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        public TagRulesArgs build() {
            if ($.monitorId == null) {
                throw new MissingRequiredPropertyException("TagRulesArgs", "monitorId");
            }
            return $;
        }
    }

}
