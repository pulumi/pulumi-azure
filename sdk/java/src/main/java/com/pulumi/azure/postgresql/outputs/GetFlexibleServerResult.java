// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.postgresql.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetFlexibleServerResult {
    /**
     * @return The Administrator login for the PostgreSQL Flexible Server.
     * 
     */
    private final String administratorLogin;
    /**
     * @return The backup retention days for the PostgreSQL Flexible Server.
     * 
     */
    private final Integer backupRetentionDays;
    /**
     * @return The ID of the virtual network subnet to create the PostgreSQL Flexible Server.
     * 
     */
    private final String delegatedSubnetId;
    /**
     * @return The FQDN of the PostgreSQL Flexible Server.
     * 
     */
    private final String fqdn;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private final String id;
    /**
     * @return The Azure Region where the PostgreSQL Flexible Server exists.
     * 
     */
    private final String location;
    private final String name;
    /**
     * @return Is public network access enabled?
     * 
     */
    private final Boolean publicNetworkAccessEnabled;
    private final String resourceGroupName;
    /**
     * @return The SKU Name for the PostgreSQL Flexible Server. The name of the SKU, follows the `tier` + `name` pattern (e.g. `B_Standard_B1ms`, `GP_Standard_D2s_v3`, `MO_Standard_E4s_v3`).
     * 
     */
    private final String skuName;
    /**
     * @return The max storage allowed for the PostgreSQL Flexible Server.
     * 
     */
    private final Integer storageMb;
    /**
     * @return A mapping of tags assigned to the PostgreSQL Flexible Server.
     * 
     */
    private final Map<String,String> tags;
    /**
     * @return The version of PostgreSQL Flexible Server to use.
     * 
     */
    private final String version;

    @CustomType.Constructor
    private GetFlexibleServerResult(
        @CustomType.Parameter("administratorLogin") String administratorLogin,
        @CustomType.Parameter("backupRetentionDays") Integer backupRetentionDays,
        @CustomType.Parameter("delegatedSubnetId") String delegatedSubnetId,
        @CustomType.Parameter("fqdn") String fqdn,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("location") String location,
        @CustomType.Parameter("name") String name,
        @CustomType.Parameter("publicNetworkAccessEnabled") Boolean publicNetworkAccessEnabled,
        @CustomType.Parameter("resourceGroupName") String resourceGroupName,
        @CustomType.Parameter("skuName") String skuName,
        @CustomType.Parameter("storageMb") Integer storageMb,
        @CustomType.Parameter("tags") Map<String,String> tags,
        @CustomType.Parameter("version") String version) {
        this.administratorLogin = administratorLogin;
        this.backupRetentionDays = backupRetentionDays;
        this.delegatedSubnetId = delegatedSubnetId;
        this.fqdn = fqdn;
        this.id = id;
        this.location = location;
        this.name = name;
        this.publicNetworkAccessEnabled = publicNetworkAccessEnabled;
        this.resourceGroupName = resourceGroupName;
        this.skuName = skuName;
        this.storageMb = storageMb;
        this.tags = tags;
        this.version = version;
    }

    /**
     * @return The Administrator login for the PostgreSQL Flexible Server.
     * 
     */
    public String administratorLogin() {
        return this.administratorLogin;
    }
    /**
     * @return The backup retention days for the PostgreSQL Flexible Server.
     * 
     */
    public Integer backupRetentionDays() {
        return this.backupRetentionDays;
    }
    /**
     * @return The ID of the virtual network subnet to create the PostgreSQL Flexible Server.
     * 
     */
    public String delegatedSubnetId() {
        return this.delegatedSubnetId;
    }
    /**
     * @return The FQDN of the PostgreSQL Flexible Server.
     * 
     */
    public String fqdn() {
        return this.fqdn;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The Azure Region where the PostgreSQL Flexible Server exists.
     * 
     */
    public String location() {
        return this.location;
    }
    public String name() {
        return this.name;
    }
    /**
     * @return Is public network access enabled?
     * 
     */
    public Boolean publicNetworkAccessEnabled() {
        return this.publicNetworkAccessEnabled;
    }
    public String resourceGroupName() {
        return this.resourceGroupName;
    }
    /**
     * @return The SKU Name for the PostgreSQL Flexible Server. The name of the SKU, follows the `tier` + `name` pattern (e.g. `B_Standard_B1ms`, `GP_Standard_D2s_v3`, `MO_Standard_E4s_v3`).
     * 
     */
    public String skuName() {
        return this.skuName;
    }
    /**
     * @return The max storage allowed for the PostgreSQL Flexible Server.
     * 
     */
    public Integer storageMb() {
        return this.storageMb;
    }
    /**
     * @return A mapping of tags assigned to the PostgreSQL Flexible Server.
     * 
     */
    public Map<String,String> tags() {
        return this.tags;
    }
    /**
     * @return The version of PostgreSQL Flexible Server to use.
     * 
     */
    public String version() {
        return this.version;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetFlexibleServerResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String administratorLogin;
        private Integer backupRetentionDays;
        private String delegatedSubnetId;
        private String fqdn;
        private String id;
        private String location;
        private String name;
        private Boolean publicNetworkAccessEnabled;
        private String resourceGroupName;
        private String skuName;
        private Integer storageMb;
        private Map<String,String> tags;
        private String version;

        public Builder() {
    	      // Empty
        }

        public Builder(GetFlexibleServerResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.administratorLogin = defaults.administratorLogin;
    	      this.backupRetentionDays = defaults.backupRetentionDays;
    	      this.delegatedSubnetId = defaults.delegatedSubnetId;
    	      this.fqdn = defaults.fqdn;
    	      this.id = defaults.id;
    	      this.location = defaults.location;
    	      this.name = defaults.name;
    	      this.publicNetworkAccessEnabled = defaults.publicNetworkAccessEnabled;
    	      this.resourceGroupName = defaults.resourceGroupName;
    	      this.skuName = defaults.skuName;
    	      this.storageMb = defaults.storageMb;
    	      this.tags = defaults.tags;
    	      this.version = defaults.version;
        }

        public Builder administratorLogin(String administratorLogin) {
            this.administratorLogin = Objects.requireNonNull(administratorLogin);
            return this;
        }
        public Builder backupRetentionDays(Integer backupRetentionDays) {
            this.backupRetentionDays = Objects.requireNonNull(backupRetentionDays);
            return this;
        }
        public Builder delegatedSubnetId(String delegatedSubnetId) {
            this.delegatedSubnetId = Objects.requireNonNull(delegatedSubnetId);
            return this;
        }
        public Builder fqdn(String fqdn) {
            this.fqdn = Objects.requireNonNull(fqdn);
            return this;
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder location(String location) {
            this.location = Objects.requireNonNull(location);
            return this;
        }
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        public Builder publicNetworkAccessEnabled(Boolean publicNetworkAccessEnabled) {
            this.publicNetworkAccessEnabled = Objects.requireNonNull(publicNetworkAccessEnabled);
            return this;
        }
        public Builder resourceGroupName(String resourceGroupName) {
            this.resourceGroupName = Objects.requireNonNull(resourceGroupName);
            return this;
        }
        public Builder skuName(String skuName) {
            this.skuName = Objects.requireNonNull(skuName);
            return this;
        }
        public Builder storageMb(Integer storageMb) {
            this.storageMb = Objects.requireNonNull(storageMb);
            return this;
        }
        public Builder tags(Map<String,String> tags) {
            this.tags = Objects.requireNonNull(tags);
            return this;
        }
        public Builder version(String version) {
            this.version = Objects.requireNonNull(version);
            return this;
        }        public GetFlexibleServerResult build() {
            return new GetFlexibleServerResult(administratorLogin, backupRetentionDays, delegatedSubnetId, fqdn, id, location, name, publicNetworkAccessEnabled, resourceGroupName, skuName, storageMb, tags, version);
        }
    }
}
