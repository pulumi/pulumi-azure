// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.containerservice.outputs;

import com.pulumi.azure.containerservice.outputs.GetKubernetesClusterServiceMeshProfileCertificateAuthority;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetKubernetesClusterServiceMeshProfile {
    /**
     * @return A `certificateAuthority` block as documented below.
     * 
     */
    private List<GetKubernetesClusterServiceMeshProfileCertificateAuthority> certificateAuthorities;
    /**
     * @return Is Istio External Ingress Gateway enabled?
     * 
     */
    private Boolean externalIngressGatewayEnabled;
    /**
     * @return Is Istio Internal Ingress Gateway enabled?
     * 
     */
    private Boolean internalIngressGatewayEnabled;
    /**
     * @return The mode of the service mesh.
     * 
     */
    private String mode;
    /**
     * @return List of revisions of the Istio control plane. When an upgrade is not in progress, this holds one value. When canary upgrade is in progress, this can only hold two consecutive values. Learn More.
     * 
     */
    private List<String> revisions;

    private GetKubernetesClusterServiceMeshProfile() {}
    /**
     * @return A `certificateAuthority` block as documented below.
     * 
     */
    public List<GetKubernetesClusterServiceMeshProfileCertificateAuthority> certificateAuthorities() {
        return this.certificateAuthorities;
    }
    /**
     * @return Is Istio External Ingress Gateway enabled?
     * 
     */
    public Boolean externalIngressGatewayEnabled() {
        return this.externalIngressGatewayEnabled;
    }
    /**
     * @return Is Istio Internal Ingress Gateway enabled?
     * 
     */
    public Boolean internalIngressGatewayEnabled() {
        return this.internalIngressGatewayEnabled;
    }
    /**
     * @return The mode of the service mesh.
     * 
     */
    public String mode() {
        return this.mode;
    }
    /**
     * @return List of revisions of the Istio control plane. When an upgrade is not in progress, this holds one value. When canary upgrade is in progress, this can only hold two consecutive values. Learn More.
     * 
     */
    public List<String> revisions() {
        return this.revisions;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetKubernetesClusterServiceMeshProfile defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetKubernetesClusterServiceMeshProfileCertificateAuthority> certificateAuthorities;
        private Boolean externalIngressGatewayEnabled;
        private Boolean internalIngressGatewayEnabled;
        private String mode;
        private List<String> revisions;
        public Builder() {}
        public Builder(GetKubernetesClusterServiceMeshProfile defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.certificateAuthorities = defaults.certificateAuthorities;
    	      this.externalIngressGatewayEnabled = defaults.externalIngressGatewayEnabled;
    	      this.internalIngressGatewayEnabled = defaults.internalIngressGatewayEnabled;
    	      this.mode = defaults.mode;
    	      this.revisions = defaults.revisions;
        }

        @CustomType.Setter
        public Builder certificateAuthorities(List<GetKubernetesClusterServiceMeshProfileCertificateAuthority> certificateAuthorities) {
            if (certificateAuthorities == null) {
              throw new MissingRequiredPropertyException("GetKubernetesClusterServiceMeshProfile", "certificateAuthorities");
            }
            this.certificateAuthorities = certificateAuthorities;
            return this;
        }
        public Builder certificateAuthorities(GetKubernetesClusterServiceMeshProfileCertificateAuthority... certificateAuthorities) {
            return certificateAuthorities(List.of(certificateAuthorities));
        }
        @CustomType.Setter
        public Builder externalIngressGatewayEnabled(Boolean externalIngressGatewayEnabled) {
            if (externalIngressGatewayEnabled == null) {
              throw new MissingRequiredPropertyException("GetKubernetesClusterServiceMeshProfile", "externalIngressGatewayEnabled");
            }
            this.externalIngressGatewayEnabled = externalIngressGatewayEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder internalIngressGatewayEnabled(Boolean internalIngressGatewayEnabled) {
            if (internalIngressGatewayEnabled == null) {
              throw new MissingRequiredPropertyException("GetKubernetesClusterServiceMeshProfile", "internalIngressGatewayEnabled");
            }
            this.internalIngressGatewayEnabled = internalIngressGatewayEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder mode(String mode) {
            if (mode == null) {
              throw new MissingRequiredPropertyException("GetKubernetesClusterServiceMeshProfile", "mode");
            }
            this.mode = mode;
            return this;
        }
        @CustomType.Setter
        public Builder revisions(List<String> revisions) {
            if (revisions == null) {
              throw new MissingRequiredPropertyException("GetKubernetesClusterServiceMeshProfile", "revisions");
            }
            this.revisions = revisions;
            return this;
        }
        public Builder revisions(String... revisions) {
            return revisions(List.of(revisions));
        }
        public GetKubernetesClusterServiceMeshProfile build() {
            final var _resultValue = new GetKubernetesClusterServiceMeshProfile();
            _resultValue.certificateAuthorities = certificateAuthorities;
            _resultValue.externalIngressGatewayEnabled = externalIngressGatewayEnabled;
            _resultValue.internalIngressGatewayEnabled = internalIngressGatewayEnabled;
            _resultValue.mode = mode;
            _resultValue.revisions = revisions;
            return _resultValue;
        }
    }
}
