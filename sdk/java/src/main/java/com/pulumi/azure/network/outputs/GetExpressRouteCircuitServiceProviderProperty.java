// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.network.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetExpressRouteCircuitServiceProviderProperty {
    /**
     * @return The bandwidth in Mbps of the ExpressRoute circuit.
     * 
     */
    private Integer bandwidthInMbps;
    /**
     * @return The name of the peering location and **not** the Azure resource location.
     * 
     */
    private String peeringLocation;
    /**
     * @return The name of the ExpressRoute Service Provider.
     * 
     */
    private String serviceProviderName;

    private GetExpressRouteCircuitServiceProviderProperty() {}
    /**
     * @return The bandwidth in Mbps of the ExpressRoute circuit.
     * 
     */
    public Integer bandwidthInMbps() {
        return this.bandwidthInMbps;
    }
    /**
     * @return The name of the peering location and **not** the Azure resource location.
     * 
     */
    public String peeringLocation() {
        return this.peeringLocation;
    }
    /**
     * @return The name of the ExpressRoute Service Provider.
     * 
     */
    public String serviceProviderName() {
        return this.serviceProviderName;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetExpressRouteCircuitServiceProviderProperty defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer bandwidthInMbps;
        private String peeringLocation;
        private String serviceProviderName;
        public Builder() {}
        public Builder(GetExpressRouteCircuitServiceProviderProperty defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.bandwidthInMbps = defaults.bandwidthInMbps;
    	      this.peeringLocation = defaults.peeringLocation;
    	      this.serviceProviderName = defaults.serviceProviderName;
        }

        @CustomType.Setter
        public Builder bandwidthInMbps(Integer bandwidthInMbps) {
            if (bandwidthInMbps == null) {
              throw new MissingRequiredPropertyException("GetExpressRouteCircuitServiceProviderProperty", "bandwidthInMbps");
            }
            this.bandwidthInMbps = bandwidthInMbps;
            return this;
        }
        @CustomType.Setter
        public Builder peeringLocation(String peeringLocation) {
            if (peeringLocation == null) {
              throw new MissingRequiredPropertyException("GetExpressRouteCircuitServiceProviderProperty", "peeringLocation");
            }
            this.peeringLocation = peeringLocation;
            return this;
        }
        @CustomType.Setter
        public Builder serviceProviderName(String serviceProviderName) {
            if (serviceProviderName == null) {
              throw new MissingRequiredPropertyException("GetExpressRouteCircuitServiceProviderProperty", "serviceProviderName");
            }
            this.serviceProviderName = serviceProviderName;
            return this;
        }
        public GetExpressRouteCircuitServiceProviderProperty build() {
            final var _resultValue = new GetExpressRouteCircuitServiceProviderProperty();
            _resultValue.bandwidthInMbps = bandwidthInMbps;
            _resultValue.peeringLocation = peeringLocation;
            _resultValue.serviceProviderName = serviceProviderName;
            return _resultValue;
        }
    }
}
