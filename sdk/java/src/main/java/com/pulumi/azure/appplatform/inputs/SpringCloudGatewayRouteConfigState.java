// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.appplatform.inputs;

import com.pulumi.azure.appplatform.inputs.SpringCloudGatewayRouteConfigOpenApiArgs;
import com.pulumi.azure.appplatform.inputs.SpringCloudGatewayRouteConfigRouteArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SpringCloudGatewayRouteConfigState extends com.pulumi.resources.ResourceArgs {

    public static final SpringCloudGatewayRouteConfigState Empty = new SpringCloudGatewayRouteConfigState();

    /**
     * The name which should be used for this Spring Cloud Gateway Route Config. Changing this forces a new Spring Cloud Gateway Route Config to be created.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name which should be used for this Spring Cloud Gateway Route Config. Changing this forces a new Spring Cloud Gateway Route Config to be created.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * One or more `open_api` blocks as defined below.
     * 
     */
    @Import(name="openApi")
    private @Nullable Output<SpringCloudGatewayRouteConfigOpenApiArgs> openApi;

    /**
     * @return One or more `open_api` blocks as defined below.
     * 
     */
    public Optional<Output<SpringCloudGatewayRouteConfigOpenApiArgs>> openApi() {
        return Optional.ofNullable(this.openApi);
    }

    /**
     * Specifies the protocol of routed Spring Cloud App. Allowed values are `HTTP` and `HTTPS`. Defaults to `HTTP`.
     * 
     */
    @Import(name="protocol")
    private @Nullable Output<String> protocol;

    /**
     * @return Specifies the protocol of routed Spring Cloud App. Allowed values are `HTTP` and `HTTPS`. Defaults to `HTTP`.
     * 
     */
    public Optional<Output<String>> protocol() {
        return Optional.ofNullable(this.protocol);
    }

    /**
     * One or more `route` blocks as defined below.
     * 
     */
    @Import(name="routes")
    private @Nullable Output<List<SpringCloudGatewayRouteConfigRouteArgs>> routes;

    /**
     * @return One or more `route` blocks as defined below.
     * 
     */
    public Optional<Output<List<SpringCloudGatewayRouteConfigRouteArgs>>> routes() {
        return Optional.ofNullable(this.routes);
    }

    /**
     * The ID of the Spring Cloud App.
     * 
     */
    @Import(name="springCloudAppId")
    private @Nullable Output<String> springCloudAppId;

    /**
     * @return The ID of the Spring Cloud App.
     * 
     */
    public Optional<Output<String>> springCloudAppId() {
        return Optional.ofNullable(this.springCloudAppId);
    }

    /**
     * The ID of the Spring Cloud Gateway. Changing this forces a new Spring Cloud Gateway Route Config to be created.
     * 
     */
    @Import(name="springCloudGatewayId")
    private @Nullable Output<String> springCloudGatewayId;

    /**
     * @return The ID of the Spring Cloud Gateway. Changing this forces a new Spring Cloud Gateway Route Config to be created.
     * 
     */
    public Optional<Output<String>> springCloudGatewayId() {
        return Optional.ofNullable(this.springCloudGatewayId);
    }

    private SpringCloudGatewayRouteConfigState() {}

    private SpringCloudGatewayRouteConfigState(SpringCloudGatewayRouteConfigState $) {
        this.name = $.name;
        this.openApi = $.openApi;
        this.protocol = $.protocol;
        this.routes = $.routes;
        this.springCloudAppId = $.springCloudAppId;
        this.springCloudGatewayId = $.springCloudGatewayId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SpringCloudGatewayRouteConfigState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SpringCloudGatewayRouteConfigState $;

        public Builder() {
            $ = new SpringCloudGatewayRouteConfigState();
        }

        public Builder(SpringCloudGatewayRouteConfigState defaults) {
            $ = new SpringCloudGatewayRouteConfigState(Objects.requireNonNull(defaults));
        }

        /**
         * @param name The name which should be used for this Spring Cloud Gateway Route Config. Changing this forces a new Spring Cloud Gateway Route Config to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name which should be used for this Spring Cloud Gateway Route Config. Changing this forces a new Spring Cloud Gateway Route Config to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param openApi One or more `open_api` blocks as defined below.
         * 
         * @return builder
         * 
         */
        public Builder openApi(@Nullable Output<SpringCloudGatewayRouteConfigOpenApiArgs> openApi) {
            $.openApi = openApi;
            return this;
        }

        /**
         * @param openApi One or more `open_api` blocks as defined below.
         * 
         * @return builder
         * 
         */
        public Builder openApi(SpringCloudGatewayRouteConfigOpenApiArgs openApi) {
            return openApi(Output.of(openApi));
        }

        /**
         * @param protocol Specifies the protocol of routed Spring Cloud App. Allowed values are `HTTP` and `HTTPS`. Defaults to `HTTP`.
         * 
         * @return builder
         * 
         */
        public Builder protocol(@Nullable Output<String> protocol) {
            $.protocol = protocol;
            return this;
        }

        /**
         * @param protocol Specifies the protocol of routed Spring Cloud App. Allowed values are `HTTP` and `HTTPS`. Defaults to `HTTP`.
         * 
         * @return builder
         * 
         */
        public Builder protocol(String protocol) {
            return protocol(Output.of(protocol));
        }

        /**
         * @param routes One or more `route` blocks as defined below.
         * 
         * @return builder
         * 
         */
        public Builder routes(@Nullable Output<List<SpringCloudGatewayRouteConfigRouteArgs>> routes) {
            $.routes = routes;
            return this;
        }

        /**
         * @param routes One or more `route` blocks as defined below.
         * 
         * @return builder
         * 
         */
        public Builder routes(List<SpringCloudGatewayRouteConfigRouteArgs> routes) {
            return routes(Output.of(routes));
        }

        /**
         * @param routes One or more `route` blocks as defined below.
         * 
         * @return builder
         * 
         */
        public Builder routes(SpringCloudGatewayRouteConfigRouteArgs... routes) {
            return routes(List.of(routes));
        }

        /**
         * @param springCloudAppId The ID of the Spring Cloud App.
         * 
         * @return builder
         * 
         */
        public Builder springCloudAppId(@Nullable Output<String> springCloudAppId) {
            $.springCloudAppId = springCloudAppId;
            return this;
        }

        /**
         * @param springCloudAppId The ID of the Spring Cloud App.
         * 
         * @return builder
         * 
         */
        public Builder springCloudAppId(String springCloudAppId) {
            return springCloudAppId(Output.of(springCloudAppId));
        }

        /**
         * @param springCloudGatewayId The ID of the Spring Cloud Gateway. Changing this forces a new Spring Cloud Gateway Route Config to be created.
         * 
         * @return builder
         * 
         */
        public Builder springCloudGatewayId(@Nullable Output<String> springCloudGatewayId) {
            $.springCloudGatewayId = springCloudGatewayId;
            return this;
        }

        /**
         * @param springCloudGatewayId The ID of the Spring Cloud Gateway. Changing this forces a new Spring Cloud Gateway Route Config to be created.
         * 
         * @return builder
         * 
         */
        public Builder springCloudGatewayId(String springCloudGatewayId) {
            return springCloudGatewayId(Output.of(springCloudGatewayId));
        }

        public SpringCloudGatewayRouteConfigState build() {
            return $;
        }
    }

}
