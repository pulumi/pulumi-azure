// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.core.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class ResourceGroupCostManagementExportExportDataOptionsArgs extends com.pulumi.resources.ResourceArgs {

    public static final ResourceGroupCostManagementExportExportDataOptionsArgs Empty = new ResourceGroupCostManagementExportExportDataOptionsArgs();

    /**
     * The time frame for pulling data for the query. If custom, then a specific time period must be provided. Possible values include: `WeekToDate`, `MonthToDate`, `BillingMonthToDate`, `TheLast7Days`, `TheLastMonth`, `TheLastBillingMonth`, `Custom`.
     * 
     */
    @Import(name="timeFrame", required=true)
    private Output<String> timeFrame;

    /**
     * @return The time frame for pulling data for the query. If custom, then a specific time period must be provided. Possible values include: `WeekToDate`, `MonthToDate`, `BillingMonthToDate`, `TheLast7Days`, `TheLastMonth`, `TheLastBillingMonth`, `Custom`.
     * 
     */
    public Output<String> timeFrame() {
        return this.timeFrame;
    }

    /**
     * The type of the query. Possible values are `ActualCost`, `AmortizedCost` and `Usage`.
     * 
     */
    @Import(name="type", required=true)
    private Output<String> type;

    /**
     * @return The type of the query. Possible values are `ActualCost`, `AmortizedCost` and `Usage`.
     * 
     */
    public Output<String> type() {
        return this.type;
    }

    private ResourceGroupCostManagementExportExportDataOptionsArgs() {}

    private ResourceGroupCostManagementExportExportDataOptionsArgs(ResourceGroupCostManagementExportExportDataOptionsArgs $) {
        this.timeFrame = $.timeFrame;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ResourceGroupCostManagementExportExportDataOptionsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ResourceGroupCostManagementExportExportDataOptionsArgs $;

        public Builder() {
            $ = new ResourceGroupCostManagementExportExportDataOptionsArgs();
        }

        public Builder(ResourceGroupCostManagementExportExportDataOptionsArgs defaults) {
            $ = new ResourceGroupCostManagementExportExportDataOptionsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param timeFrame The time frame for pulling data for the query. If custom, then a specific time period must be provided. Possible values include: `WeekToDate`, `MonthToDate`, `BillingMonthToDate`, `TheLast7Days`, `TheLastMonth`, `TheLastBillingMonth`, `Custom`.
         * 
         * @return builder
         * 
         */
        public Builder timeFrame(Output<String> timeFrame) {
            $.timeFrame = timeFrame;
            return this;
        }

        /**
         * @param timeFrame The time frame for pulling data for the query. If custom, then a specific time period must be provided. Possible values include: `WeekToDate`, `MonthToDate`, `BillingMonthToDate`, `TheLast7Days`, `TheLastMonth`, `TheLastBillingMonth`, `Custom`.
         * 
         * @return builder
         * 
         */
        public Builder timeFrame(String timeFrame) {
            return timeFrame(Output.of(timeFrame));
        }

        /**
         * @param type The type of the query. Possible values are `ActualCost`, `AmortizedCost` and `Usage`.
         * 
         * @return builder
         * 
         */
        public Builder type(Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type The type of the query. Possible values are `ActualCost`, `AmortizedCost` and `Usage`.
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        public ResourceGroupCostManagementExportExportDataOptionsArgs build() {
            if ($.timeFrame == null) {
                throw new MissingRequiredPropertyException("ResourceGroupCostManagementExportExportDataOptionsArgs", "timeFrame");
            }
            if ($.type == null) {
                throw new MissingRequiredPropertyException("ResourceGroupCostManagementExportExportDataOptionsArgs", "type");
            }
            return $;
        }
    }

}
