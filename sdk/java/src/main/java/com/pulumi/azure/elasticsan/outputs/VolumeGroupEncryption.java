// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.elasticsan.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class VolumeGroupEncryption {
    /**
     * @return The timestamp of the expiration time for the current version of the customer managed key.
     * 
     */
    private @Nullable String currentVersionedKeyExpirationTimestamp;
    /**
     * @return The ID of the current versioned Key Vault Key in use.
     * 
     */
    private @Nullable String currentVersionedKeyId;
    /**
     * @return The Key Vault key URI for Customer Managed Key encryption, which can be either a full URI or a versionless URI.
     * 
     */
    private String keyVaultKeyId;
    /**
     * @return The timestamp of the last rotation of the Key Vault Key.
     * 
     */
    private @Nullable String lastKeyRotationTimestamp;
    /**
     * @return The ID of the User Assigned Identity used by this Elastic SAN Volume Group.
     * 
     */
    private @Nullable String userAssignedIdentityId;

    private VolumeGroupEncryption() {}
    /**
     * @return The timestamp of the expiration time for the current version of the customer managed key.
     * 
     */
    public Optional<String> currentVersionedKeyExpirationTimestamp() {
        return Optional.ofNullable(this.currentVersionedKeyExpirationTimestamp);
    }
    /**
     * @return The ID of the current versioned Key Vault Key in use.
     * 
     */
    public Optional<String> currentVersionedKeyId() {
        return Optional.ofNullable(this.currentVersionedKeyId);
    }
    /**
     * @return The Key Vault key URI for Customer Managed Key encryption, which can be either a full URI or a versionless URI.
     * 
     */
    public String keyVaultKeyId() {
        return this.keyVaultKeyId;
    }
    /**
     * @return The timestamp of the last rotation of the Key Vault Key.
     * 
     */
    public Optional<String> lastKeyRotationTimestamp() {
        return Optional.ofNullable(this.lastKeyRotationTimestamp);
    }
    /**
     * @return The ID of the User Assigned Identity used by this Elastic SAN Volume Group.
     * 
     */
    public Optional<String> userAssignedIdentityId() {
        return Optional.ofNullable(this.userAssignedIdentityId);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(VolumeGroupEncryption defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String currentVersionedKeyExpirationTimestamp;
        private @Nullable String currentVersionedKeyId;
        private String keyVaultKeyId;
        private @Nullable String lastKeyRotationTimestamp;
        private @Nullable String userAssignedIdentityId;
        public Builder() {}
        public Builder(VolumeGroupEncryption defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.currentVersionedKeyExpirationTimestamp = defaults.currentVersionedKeyExpirationTimestamp;
    	      this.currentVersionedKeyId = defaults.currentVersionedKeyId;
    	      this.keyVaultKeyId = defaults.keyVaultKeyId;
    	      this.lastKeyRotationTimestamp = defaults.lastKeyRotationTimestamp;
    	      this.userAssignedIdentityId = defaults.userAssignedIdentityId;
        }

        @CustomType.Setter
        public Builder currentVersionedKeyExpirationTimestamp(@Nullable String currentVersionedKeyExpirationTimestamp) {

            this.currentVersionedKeyExpirationTimestamp = currentVersionedKeyExpirationTimestamp;
            return this;
        }
        @CustomType.Setter
        public Builder currentVersionedKeyId(@Nullable String currentVersionedKeyId) {

            this.currentVersionedKeyId = currentVersionedKeyId;
            return this;
        }
        @CustomType.Setter
        public Builder keyVaultKeyId(String keyVaultKeyId) {
            if (keyVaultKeyId == null) {
              throw new MissingRequiredPropertyException("VolumeGroupEncryption", "keyVaultKeyId");
            }
            this.keyVaultKeyId = keyVaultKeyId;
            return this;
        }
        @CustomType.Setter
        public Builder lastKeyRotationTimestamp(@Nullable String lastKeyRotationTimestamp) {

            this.lastKeyRotationTimestamp = lastKeyRotationTimestamp;
            return this;
        }
        @CustomType.Setter
        public Builder userAssignedIdentityId(@Nullable String userAssignedIdentityId) {

            this.userAssignedIdentityId = userAssignedIdentityId;
            return this;
        }
        public VolumeGroupEncryption build() {
            final var _resultValue = new VolumeGroupEncryption();
            _resultValue.currentVersionedKeyExpirationTimestamp = currentVersionedKeyExpirationTimestamp;
            _resultValue.currentVersionedKeyId = currentVersionedKeyId;
            _resultValue.keyVaultKeyId = keyVaultKeyId;
            _resultValue.lastKeyRotationTimestamp = lastKeyRotationTimestamp;
            _resultValue.userAssignedIdentityId = userAssignedIdentityId;
            return _resultValue;
        }
    }
}
