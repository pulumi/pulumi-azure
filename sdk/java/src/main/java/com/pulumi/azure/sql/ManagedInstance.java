// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.sql;

import com.pulumi.azure.Utilities;
import com.pulumi.azure.sql.ManagedInstanceArgs;
import com.pulumi.azure.sql.inputs.ManagedInstanceState;
import com.pulumi.azure.sql.outputs.ManagedInstanceIdentity;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Manages a SQL Azure Managed Instance.
 * 
 * &gt; **Note:** The `azure.sql.ManagedInstance` resource is deprecated in version 3.0 of the AzureRM provider and will be removed in version 4.0. Please use the `azure.mssql.ManagedInstance` resource instead.
 * 
 * &gt; **Note:** All arguments including the administrator login and password will be stored in the raw state as plain-text. Read more about sensitive data in state.
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.azure.core.ResourceGroup;
 * import com.pulumi.azure.core.ResourceGroupArgs;
 * import com.pulumi.azure.network.NetworkSecurityGroup;
 * import com.pulumi.azure.network.NetworkSecurityGroupArgs;
 * import com.pulumi.azure.network.NetworkSecurityRule;
 * import com.pulumi.azure.network.NetworkSecurityRuleArgs;
 * import com.pulumi.azure.network.VirtualNetwork;
 * import com.pulumi.azure.network.VirtualNetworkArgs;
 * import com.pulumi.azure.network.Subnet;
 * import com.pulumi.azure.network.SubnetArgs;
 * import com.pulumi.azure.network.inputs.SubnetDelegationArgs;
 * import com.pulumi.azure.network.inputs.SubnetDelegationServiceDelegationArgs;
 * import com.pulumi.azure.network.SubnetNetworkSecurityGroupAssociation;
 * import com.pulumi.azure.network.SubnetNetworkSecurityGroupAssociationArgs;
 * import com.pulumi.azure.network.RouteTable;
 * import com.pulumi.azure.network.RouteTableArgs;
 * import com.pulumi.azure.network.SubnetRouteTableAssociation;
 * import com.pulumi.azure.network.SubnetRouteTableAssociationArgs;
 * import com.pulumi.azure.sql.ManagedInstance;
 * import com.pulumi.azure.sql.ManagedInstanceArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new ResourceGroup("example", ResourceGroupArgs.builder()
 *             .name("database-rg")
 *             .location("West Europe")
 *             .build());
 * 
 *         var exampleNetworkSecurityGroup = new NetworkSecurityGroup("exampleNetworkSecurityGroup", NetworkSecurityGroupArgs.builder()
 *             .name("mi-security-group")
 *             .location(example.location())
 *             .resourceGroupName(example.name())
 *             .build());
 * 
 *         var allowManagementInbound = new NetworkSecurityRule("allowManagementInbound", NetworkSecurityRuleArgs.builder()
 *             .name("allow_management_inbound")
 *             .priority(106)
 *             .direction("Inbound")
 *             .access("Allow")
 *             .protocol("Tcp")
 *             .sourcePortRange("*")
 *             .destinationPortRanges(            
 *                 "9000",
 *                 "9003",
 *                 "1438",
 *                 "1440",
 *                 "1452")
 *             .sourceAddressPrefix("*")
 *             .destinationAddressPrefix("*")
 *             .resourceGroupName(example.name())
 *             .networkSecurityGroupName(exampleNetworkSecurityGroup.name())
 *             .build());
 * 
 *         var allowMisubnetInbound = new NetworkSecurityRule("allowMisubnetInbound", NetworkSecurityRuleArgs.builder()
 *             .name("allow_misubnet_inbound")
 *             .priority(200)
 *             .direction("Inbound")
 *             .access("Allow")
 *             .protocol("*")
 *             .sourcePortRange("*")
 *             .destinationPortRange("*")
 *             .sourceAddressPrefix("10.0.0.0/24")
 *             .destinationAddressPrefix("*")
 *             .resourceGroupName(example.name())
 *             .networkSecurityGroupName(exampleNetworkSecurityGroup.name())
 *             .build());
 * 
 *         var allowHealthProbeInbound = new NetworkSecurityRule("allowHealthProbeInbound", NetworkSecurityRuleArgs.builder()
 *             .name("allow_health_probe_inbound")
 *             .priority(300)
 *             .direction("Inbound")
 *             .access("Allow")
 *             .protocol("*")
 *             .sourcePortRange("*")
 *             .destinationPortRange("*")
 *             .sourceAddressPrefix("AzureLoadBalancer")
 *             .destinationAddressPrefix("*")
 *             .resourceGroupName(example.name())
 *             .networkSecurityGroupName(exampleNetworkSecurityGroup.name())
 *             .build());
 * 
 *         var allowTdsInbound = new NetworkSecurityRule("allowTdsInbound", NetworkSecurityRuleArgs.builder()
 *             .name("allow_tds_inbound")
 *             .priority(1000)
 *             .direction("Inbound")
 *             .access("Allow")
 *             .protocol("Tcp")
 *             .sourcePortRange("*")
 *             .destinationPortRange("1433")
 *             .sourceAddressPrefix("VirtualNetwork")
 *             .destinationAddressPrefix("*")
 *             .resourceGroupName(example.name())
 *             .networkSecurityGroupName(exampleNetworkSecurityGroup.name())
 *             .build());
 * 
 *         var denyAllInbound = new NetworkSecurityRule("denyAllInbound", NetworkSecurityRuleArgs.builder()
 *             .name("deny_all_inbound")
 *             .priority(4096)
 *             .direction("Inbound")
 *             .access("Deny")
 *             .protocol("*")
 *             .sourcePortRange("*")
 *             .destinationPortRange("*")
 *             .sourceAddressPrefix("*")
 *             .destinationAddressPrefix("*")
 *             .resourceGroupName(example.name())
 *             .networkSecurityGroupName(exampleNetworkSecurityGroup.name())
 *             .build());
 * 
 *         var allowManagementOutbound = new NetworkSecurityRule("allowManagementOutbound", NetworkSecurityRuleArgs.builder()
 *             .name("allow_management_outbound")
 *             .priority(102)
 *             .direction("Outbound")
 *             .access("Allow")
 *             .protocol("Tcp")
 *             .sourcePortRange("*")
 *             .destinationPortRanges(            
 *                 "80",
 *                 "443",
 *                 "12000")
 *             .sourceAddressPrefix("*")
 *             .destinationAddressPrefix("*")
 *             .resourceGroupName(example.name())
 *             .networkSecurityGroupName(exampleNetworkSecurityGroup.name())
 *             .build());
 * 
 *         var allowMisubnetOutbound = new NetworkSecurityRule("allowMisubnetOutbound", NetworkSecurityRuleArgs.builder()
 *             .name("allow_misubnet_outbound")
 *             .priority(200)
 *             .direction("Outbound")
 *             .access("Allow")
 *             .protocol("*")
 *             .sourcePortRange("*")
 *             .destinationPortRange("*")
 *             .sourceAddressPrefix("10.0.0.0/24")
 *             .destinationAddressPrefix("*")
 *             .resourceGroupName(example.name())
 *             .networkSecurityGroupName(exampleNetworkSecurityGroup.name())
 *             .build());
 * 
 *         var denyAllOutbound = new NetworkSecurityRule("denyAllOutbound", NetworkSecurityRuleArgs.builder()
 *             .name("deny_all_outbound")
 *             .priority(4096)
 *             .direction("Outbound")
 *             .access("Deny")
 *             .protocol("*")
 *             .sourcePortRange("*")
 *             .destinationPortRange("*")
 *             .sourceAddressPrefix("*")
 *             .destinationAddressPrefix("*")
 *             .resourceGroupName(example.name())
 *             .networkSecurityGroupName(exampleNetworkSecurityGroup.name())
 *             .build());
 * 
 *         var exampleVirtualNetwork = new VirtualNetwork("exampleVirtualNetwork", VirtualNetworkArgs.builder()
 *             .name("vnet-mi")
 *             .resourceGroupName(example.name())
 *             .addressSpaces("10.0.0.0/16")
 *             .location(example.location())
 *             .build());
 * 
 *         var exampleSubnet = new Subnet("exampleSubnet", SubnetArgs.builder()
 *             .name("subnet-mi")
 *             .resourceGroupName(example.name())
 *             .virtualNetworkName(exampleVirtualNetwork.name())
 *             .addressPrefixes("10.0.0.0/24")
 *             .delegations(SubnetDelegationArgs.builder()
 *                 .name("managedinstancedelegation")
 *                 .serviceDelegation(SubnetDelegationServiceDelegationArgs.builder()
 *                     .name("Microsoft.Sql/managedInstances")
 *                     .actions(                    
 *                         "Microsoft.Network/virtualNetworks/subnets/join/action",
 *                         "Microsoft.Network/virtualNetworks/subnets/prepareNetworkPolicies/action",
 *                         "Microsoft.Network/virtualNetworks/subnets/unprepareNetworkPolicies/action")
 *                     .build())
 *                 .build())
 *             .build());
 * 
 *         var exampleSubnetNetworkSecurityGroupAssociation = new SubnetNetworkSecurityGroupAssociation("exampleSubnetNetworkSecurityGroupAssociation", SubnetNetworkSecurityGroupAssociationArgs.builder()
 *             .subnetId(exampleSubnet.id())
 *             .networkSecurityGroupId(exampleNetworkSecurityGroup.id())
 *             .build());
 * 
 *         var exampleRouteTable = new RouteTable("exampleRouteTable", RouteTableArgs.builder()
 *             .name("routetable-mi")
 *             .location(example.location())
 *             .resourceGroupName(example.name())
 *             .disableBgpRoutePropagation(false)
 *             .build());
 * 
 *         var exampleSubnetRouteTableAssociation = new SubnetRouteTableAssociation("exampleSubnetRouteTableAssociation", SubnetRouteTableAssociationArgs.builder()
 *             .subnetId(exampleSubnet.id())
 *             .routeTableId(exampleRouteTable.id())
 *             .build());
 * 
 *         var exampleManagedInstance = new ManagedInstance("exampleManagedInstance", ManagedInstanceArgs.builder()
 *             .name("managedsqlinstance")
 *             .resourceGroupName(example.name())
 *             .location(example.location())
 *             .administratorLogin("mradministrator")
 *             .administratorLoginPassword("thisIsDog11")
 *             .licenseType("BasePrice")
 *             .subnetId(exampleSubnet.id())
 *             .skuName("GP_Gen5")
 *             .vcores(4)
 *             .storageSizeInGb(32)
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * SQL Servers can be imported using the `resource id`, e.g.
 * 
 * ```sh
 * $ pulumi import azure:sql/managedInstance:ManagedInstance example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myresourcegroup/providers/Microsoft.Sql/managedInstances/myserver
 * ```
 * 
 */
@ResourceType(type="azure:sql/managedInstance:ManagedInstance")
public class ManagedInstance extends com.pulumi.resources.CustomResource {
    /**
     * The administrator login name for the new server. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="administratorLogin", refs={String.class}, tree="[0]")
    private Output<String> administratorLogin;

    /**
     * @return The administrator login name for the new server. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> administratorLogin() {
        return this.administratorLogin;
    }
    /**
     * The password associated with the `administrator_login` user. Needs to comply with Azure&#39;s [Password Policy](https://msdn.microsoft.com/library/ms161959.aspx)
     * 
     */
    @Export(name="administratorLoginPassword", refs={String.class}, tree="[0]")
    private Output<String> administratorLoginPassword;

    /**
     * @return The password associated with the `administrator_login` user. Needs to comply with Azure&#39;s [Password Policy](https://msdn.microsoft.com/library/ms161959.aspx)
     * 
     */
    public Output<String> administratorLoginPassword() {
        return this.administratorLoginPassword;
    }
    /**
     * Specifies how the SQL Managed Instance will be collated. Default value is `SQL_Latin1_General_CP1_CI_AS`. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="collation", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> collation;

    /**
     * @return Specifies how the SQL Managed Instance will be collated. Default value is `SQL_Latin1_General_CP1_CI_AS`. Changing this forces a new resource to be created.
     * 
     */
    public Output<Optional<String>> collation() {
        return Codegen.optional(this.collation);
    }
    /**
     * The ID of the Managed Instance which will share the DNS zone. This is a prerequisite for creating a `azure.sql.ManagedInstanceFailoverGroup`. Setting this after creation forces a new resource to be created.
     * 
     */
    @Export(name="dnsZonePartnerId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> dnsZonePartnerId;

    /**
     * @return The ID of the Managed Instance which will share the DNS zone. This is a prerequisite for creating a `azure.sql.ManagedInstanceFailoverGroup`. Setting this after creation forces a new resource to be created.
     * 
     */
    public Output<Optional<String>> dnsZonePartnerId() {
        return Codegen.optional(this.dnsZonePartnerId);
    }
    /**
     * The fully qualified domain name of the Azure Managed SQL Instance
     * 
     */
    @Export(name="fqdn", refs={String.class}, tree="[0]")
    private Output<String> fqdn;

    /**
     * @return The fully qualified domain name of the Azure Managed SQL Instance
     * 
     */
    public Output<String> fqdn() {
        return this.fqdn;
    }
    /**
     * An `identity` block as defined below.
     * 
     */
    @Export(name="identity", refs={ManagedInstanceIdentity.class}, tree="[0]")
    private Output</* @Nullable */ ManagedInstanceIdentity> identity;

    /**
     * @return An `identity` block as defined below.
     * 
     */
    public Output<Optional<ManagedInstanceIdentity>> identity() {
        return Codegen.optional(this.identity);
    }
    /**
     * What type of license the Managed Instance will use. Valid values include can be `LicenseIncluded` or `BasePrice`.
     * 
     */
    @Export(name="licenseType", refs={String.class}, tree="[0]")
    private Output<String> licenseType;

    /**
     * @return What type of license the Managed Instance will use. Valid values include can be `LicenseIncluded` or `BasePrice`.
     * 
     */
    public Output<String> licenseType() {
        return this.licenseType;
    }
    /**
     * Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="location", refs={String.class}, tree="[0]")
    private Output<String> location;

    /**
     * @return Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> location() {
        return this.location;
    }
    /**
     * The Minimum TLS Version. Default value is `1.2` Valid values include `1.0`, `1.1`, `1.2`.
     * 
     */
    @Export(name="minimumTlsVersion", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> minimumTlsVersion;

    /**
     * @return The Minimum TLS Version. Default value is `1.2` Valid values include `1.0`, `1.1`, `1.2`.
     * 
     */
    public Output<Optional<String>> minimumTlsVersion() {
        return Codegen.optional(this.minimumTlsVersion);
    }
    /**
     * The name of the SQL Managed Instance. This needs to be globally unique within Azure. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The name of the SQL Managed Instance. This needs to be globally unique within Azure. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Specifies how the SQL Managed Instance will be accessed. Default value is `Default`. Valid values include `Default`, `Proxy`, and `Redirect`.
     * 
     */
    @Export(name="proxyOverride", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> proxyOverride;

    /**
     * @return Specifies how the SQL Managed Instance will be accessed. Default value is `Default`. Valid values include `Default`, `Proxy`, and `Redirect`.
     * 
     */
    public Output<Optional<String>> proxyOverride() {
        return Codegen.optional(this.proxyOverride);
    }
    /**
     * Is the public data endpoint enabled? Default value is `false`.
     * 
     */
    @Export(name="publicDataEndpointEnabled", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> publicDataEndpointEnabled;

    /**
     * @return Is the public data endpoint enabled? Default value is `false`.
     * 
     */
    public Output<Optional<Boolean>> publicDataEndpointEnabled() {
        return Codegen.optional(this.publicDataEndpointEnabled);
    }
    /**
     * The name of the resource group in which to create the SQL Server. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="resourceGroupName", refs={String.class}, tree="[0]")
    private Output<String> resourceGroupName;

    /**
     * @return The name of the resource group in which to create the SQL Server. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }
    /**
     * Specifies the SKU Name for the SQL Managed Instance. Valid values include `GP_Gen4`, `GP_Gen5`, `BC_Gen4`, `BC_Gen5`.
     * 
     */
    @Export(name="skuName", refs={String.class}, tree="[0]")
    private Output<String> skuName;

    /**
     * @return Specifies the SKU Name for the SQL Managed Instance. Valid values include `GP_Gen4`, `GP_Gen5`, `BC_Gen4`, `BC_Gen5`.
     * 
     */
    public Output<String> skuName() {
        return this.skuName;
    }
    /**
     * Specifies the storage account type used to store backups for this database. Changing this forces a new resource to be created. Possible values are `GRS`, `LRS` and `ZRS`. Defaults to `GRS`.
     * 
     */
    @Export(name="storageAccountType", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> storageAccountType;

    /**
     * @return Specifies the storage account type used to store backups for this database. Changing this forces a new resource to be created. Possible values are `GRS`, `LRS` and `ZRS`. Defaults to `GRS`.
     * 
     */
    public Output<Optional<String>> storageAccountType() {
        return Codegen.optional(this.storageAccountType);
    }
    /**
     * Maximum storage space for your instance. It should be a multiple of 32GB.
     * 
     */
    @Export(name="storageSizeInGb", refs={Integer.class}, tree="[0]")
    private Output<Integer> storageSizeInGb;

    /**
     * @return Maximum storage space for your instance. It should be a multiple of 32GB.
     * 
     */
    public Output<Integer> storageSizeInGb() {
        return this.storageSizeInGb;
    }
    /**
     * The subnet resource id that the SQL Managed Instance will be associated with. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="subnetId", refs={String.class}, tree="[0]")
    private Output<String> subnetId;

    /**
     * @return The subnet resource id that the SQL Managed Instance will be associated with. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> subnetId() {
        return this.subnetId;
    }
    /**
     * A mapping of tags to assign to the resource.
     * 
     */
    @Export(name="tags", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output</* @Nullable */ Map<String,String>> tags;

    /**
     * @return A mapping of tags to assign to the resource.
     * 
     */
    public Output<Optional<Map<String,String>>> tags() {
        return Codegen.optional(this.tags);
    }
    /**
     * The TimeZone ID that the SQL Managed Instance will be operating in. Default value is `UTC`. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="timezoneId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> timezoneId;

    /**
     * @return The TimeZone ID that the SQL Managed Instance will be operating in. Default value is `UTC`. Changing this forces a new resource to be created.
     * 
     */
    public Output<Optional<String>> timezoneId() {
        return Codegen.optional(this.timezoneId);
    }
    /**
     * Number of cores that should be assigned to your instance. Values can be `8`, `16`, or `24` if `sku_name` is `GP_Gen4`, or `8`, `16`, `24`, `32`, or `40` if `sku_name` is `GP_Gen5`.
     * 
     */
    @Export(name="vcores", refs={Integer.class}, tree="[0]")
    private Output<Integer> vcores;

    /**
     * @return Number of cores that should be assigned to your instance. Values can be `8`, `16`, or `24` if `sku_name` is `GP_Gen4`, or `8`, `16`, `24`, `32`, or `40` if `sku_name` is `GP_Gen5`.
     * 
     */
    public Output<Integer> vcores() {
        return this.vcores;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public ManagedInstance(String name) {
        this(name, ManagedInstanceArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public ManagedInstance(String name, ManagedInstanceArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public ManagedInstance(String name, ManagedInstanceArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:sql/managedInstance:ManagedInstance", name, args == null ? ManagedInstanceArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private ManagedInstance(String name, Output<String> id, @Nullable ManagedInstanceState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:sql/managedInstance:ManagedInstance", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .additionalSecretOutputs(List.of(
                "administratorLoginPassword"
            ))
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static ManagedInstance get(String name, Output<String> id, @Nullable ManagedInstanceState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new ManagedInstance(name, id, state, options);
    }
}
