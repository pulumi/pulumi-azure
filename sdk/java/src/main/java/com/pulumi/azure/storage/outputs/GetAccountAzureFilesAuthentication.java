// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.storage.outputs;

import com.pulumi.azure.storage.outputs.GetAccountAzureFilesAuthenticationActiveDirectory;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetAccountAzureFilesAuthentication {
    /**
     * @return An `active_directory` block as documented below.
     * 
     */
    private List<GetAccountAzureFilesAuthenticationActiveDirectory> activeDirectories;
    /**
     * @return The directory service used for this Storage Account.
     * 
     */
    private String directoryType;

    private GetAccountAzureFilesAuthentication() {}
    /**
     * @return An `active_directory` block as documented below.
     * 
     */
    public List<GetAccountAzureFilesAuthenticationActiveDirectory> activeDirectories() {
        return this.activeDirectories;
    }
    /**
     * @return The directory service used for this Storage Account.
     * 
     */
    public String directoryType() {
        return this.directoryType;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAccountAzureFilesAuthentication defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetAccountAzureFilesAuthenticationActiveDirectory> activeDirectories;
        private String directoryType;
        public Builder() {}
        public Builder(GetAccountAzureFilesAuthentication defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.activeDirectories = defaults.activeDirectories;
    	      this.directoryType = defaults.directoryType;
        }

        @CustomType.Setter
        public Builder activeDirectories(List<GetAccountAzureFilesAuthenticationActiveDirectory> activeDirectories) {
            if (activeDirectories == null) {
              throw new MissingRequiredPropertyException("GetAccountAzureFilesAuthentication", "activeDirectories");
            }
            this.activeDirectories = activeDirectories;
            return this;
        }
        public Builder activeDirectories(GetAccountAzureFilesAuthenticationActiveDirectory... activeDirectories) {
            return activeDirectories(List.of(activeDirectories));
        }
        @CustomType.Setter
        public Builder directoryType(String directoryType) {
            if (directoryType == null) {
              throw new MissingRequiredPropertyException("GetAccountAzureFilesAuthentication", "directoryType");
            }
            this.directoryType = directoryType;
            return this;
        }
        public GetAccountAzureFilesAuthentication build() {
            final var _resultValue = new GetAccountAzureFilesAuthentication();
            _resultValue.activeDirectories = activeDirectories;
            _resultValue.directoryType = directoryType;
            return _resultValue;
        }
    }
}
