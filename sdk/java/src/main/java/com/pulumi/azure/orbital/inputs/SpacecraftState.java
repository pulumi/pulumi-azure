// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.orbital.inputs;

import com.pulumi.azure.orbital.inputs.SpacecraftLinkArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SpacecraftState extends com.pulumi.resources.ResourceArgs {

    public static final SpacecraftState Empty = new SpacecraftState();

    /**
     * A `links` block as defined below.
     * 
     */
    @Import(name="links")
    private @Nullable Output<List<SpacecraftLinkArgs>> links;

    /**
     * @return A `links` block as defined below.
     * 
     */
    public Optional<Output<List<SpacecraftLinkArgs>>> links() {
        return Optional.ofNullable(this.links);
    }

    /**
     * The location where the Spacecraft exists. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="location")
    private @Nullable Output<String> location;

    /**
     * @return The location where the Spacecraft exists. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * Name of the link. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Name of the link. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * NORAD ID of the Spacecraft.
     * 
     */
    @Import(name="noradId")
    private @Nullable Output<String> noradId;

    /**
     * @return NORAD ID of the Spacecraft.
     * 
     */
    public Optional<Output<String>> noradId() {
        return Optional.ofNullable(this.noradId);
    }

    /**
     * The name of the Resource Group where the Spacecraft exists. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="resourceGroupName")
    private @Nullable Output<String> resourceGroupName;

    /**
     * @return The name of the Resource Group where the Spacecraft exists. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> resourceGroupName() {
        return Optional.ofNullable(this.resourceGroupName);
    }

    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * Title of the two line elements(TLE).
     * 
     */
    @Import(name="titleLine")
    private @Nullable Output<String> titleLine;

    /**
     * @return Title of the two line elements(TLE).
     * 
     */
    public Optional<Output<String>> titleLine() {
        return Optional.ofNullable(this.titleLine);
    }

    /**
     * A list of the two line elements(TLE), the first string in the list is the first line of TLE, the second one is the second line of TLE.
     * 
     */
    @Import(name="twoLineElements")
    private @Nullable Output<List<String>> twoLineElements;

    /**
     * @return A list of the two line elements(TLE), the first string in the list is the first line of TLE, the second one is the second line of TLE.
     * 
     */
    public Optional<Output<List<String>>> twoLineElements() {
        return Optional.ofNullable(this.twoLineElements);
    }

    private SpacecraftState() {}

    private SpacecraftState(SpacecraftState $) {
        this.links = $.links;
        this.location = $.location;
        this.name = $.name;
        this.noradId = $.noradId;
        this.resourceGroupName = $.resourceGroupName;
        this.tags = $.tags;
        this.titleLine = $.titleLine;
        this.twoLineElements = $.twoLineElements;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SpacecraftState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SpacecraftState $;

        public Builder() {
            $ = new SpacecraftState();
        }

        public Builder(SpacecraftState defaults) {
            $ = new SpacecraftState(Objects.requireNonNull(defaults));
        }

        /**
         * @param links A `links` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder links(@Nullable Output<List<SpacecraftLinkArgs>> links) {
            $.links = links;
            return this;
        }

        /**
         * @param links A `links` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder links(List<SpacecraftLinkArgs> links) {
            return links(Output.of(links));
        }

        /**
         * @param links A `links` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder links(SpacecraftLinkArgs... links) {
            return links(List.of(links));
        }

        /**
         * @param location The location where the Spacecraft exists. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location The location where the Spacecraft exists. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param name Name of the link. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Name of the link. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param noradId NORAD ID of the Spacecraft.
         * 
         * @return builder
         * 
         */
        public Builder noradId(@Nullable Output<String> noradId) {
            $.noradId = noradId;
            return this;
        }

        /**
         * @param noradId NORAD ID of the Spacecraft.
         * 
         * @return builder
         * 
         */
        public Builder noradId(String noradId) {
            return noradId(Output.of(noradId));
        }

        /**
         * @param resourceGroupName The name of the Resource Group where the Spacecraft exists. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(@Nullable Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName The name of the Resource Group where the Spacecraft exists. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param titleLine Title of the two line elements(TLE).
         * 
         * @return builder
         * 
         */
        public Builder titleLine(@Nullable Output<String> titleLine) {
            $.titleLine = titleLine;
            return this;
        }

        /**
         * @param titleLine Title of the two line elements(TLE).
         * 
         * @return builder
         * 
         */
        public Builder titleLine(String titleLine) {
            return titleLine(Output.of(titleLine));
        }

        /**
         * @param twoLineElements A list of the two line elements(TLE), the first string in the list is the first line of TLE, the second one is the second line of TLE.
         * 
         * @return builder
         * 
         */
        public Builder twoLineElements(@Nullable Output<List<String>> twoLineElements) {
            $.twoLineElements = twoLineElements;
            return this;
        }

        /**
         * @param twoLineElements A list of the two line elements(TLE), the first string in the list is the first line of TLE, the second one is the second line of TLE.
         * 
         * @return builder
         * 
         */
        public Builder twoLineElements(List<String> twoLineElements) {
            return twoLineElements(Output.of(twoLineElements));
        }

        /**
         * @param twoLineElements A list of the two line elements(TLE), the first string in the list is the first line of TLE, the second one is the second line of TLE.
         * 
         * @return builder
         * 
         */
        public Builder twoLineElements(String... twoLineElements) {
            return twoLineElements(List.of(twoLineElements));
        }

        public SpacecraftState build() {
            return $;
        }
    }

}
