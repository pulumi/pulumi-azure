// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.storage.outputs;

import com.pulumi.azure.storage.outputs.GetContainersContainer;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetContainersResult {
    /**
     * @return A `containers` block as defined below.
     * 
     */
    private List<GetContainersContainer> containers;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private @Nullable String namePrefix;
    private String storageAccountId;

    private GetContainersResult() {}
    /**
     * @return A `containers` block as defined below.
     * 
     */
    public List<GetContainersContainer> containers() {
        return this.containers;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public Optional<String> namePrefix() {
        return Optional.ofNullable(this.namePrefix);
    }
    public String storageAccountId() {
        return this.storageAccountId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetContainersResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetContainersContainer> containers;
        private String id;
        private @Nullable String namePrefix;
        private String storageAccountId;
        public Builder() {}
        public Builder(GetContainersResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.containers = defaults.containers;
    	      this.id = defaults.id;
    	      this.namePrefix = defaults.namePrefix;
    	      this.storageAccountId = defaults.storageAccountId;
        }

        @CustomType.Setter
        public Builder containers(List<GetContainersContainer> containers) {
            if (containers == null) {
              throw new MissingRequiredPropertyException("GetContainersResult", "containers");
            }
            this.containers = containers;
            return this;
        }
        public Builder containers(GetContainersContainer... containers) {
            return containers(List.of(containers));
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetContainersResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder namePrefix(@Nullable String namePrefix) {

            this.namePrefix = namePrefix;
            return this;
        }
        @CustomType.Setter
        public Builder storageAccountId(String storageAccountId) {
            if (storageAccountId == null) {
              throw new MissingRequiredPropertyException("GetContainersResult", "storageAccountId");
            }
            this.storageAccountId = storageAccountId;
            return this;
        }
        public GetContainersResult build() {
            final var _resultValue = new GetContainersResult();
            _resultValue.containers = containers;
            _resultValue.id = id;
            _resultValue.namePrefix = namePrefix;
            _resultValue.storageAccountId = storageAccountId;
            return _resultValue;
        }
    }
}
