// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.pim.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class RoleManagementPolicyEligibleAssignmentRules {
    /**
     * @return Must an assignment have an expiry date. `false` allows permanent assignment.
     * 
     */
    private @Nullable Boolean expirationRequired;
    /**
     * @return The maximum length of time an assignment can be valid, as an ISO8601 duration. Permitted values: `P15D`, `P30D`, `P90D`, `P180D`, or `P365D`.
     * 
     * One of `expiration_required` or `expire_after` must be provided.
     * 
     */
    private @Nullable String expireAfter;

    private RoleManagementPolicyEligibleAssignmentRules() {}
    /**
     * @return Must an assignment have an expiry date. `false` allows permanent assignment.
     * 
     */
    public Optional<Boolean> expirationRequired() {
        return Optional.ofNullable(this.expirationRequired);
    }
    /**
     * @return The maximum length of time an assignment can be valid, as an ISO8601 duration. Permitted values: `P15D`, `P30D`, `P90D`, `P180D`, or `P365D`.
     * 
     * One of `expiration_required` or `expire_after` must be provided.
     * 
     */
    public Optional<String> expireAfter() {
        return Optional.ofNullable(this.expireAfter);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(RoleManagementPolicyEligibleAssignmentRules defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Boolean expirationRequired;
        private @Nullable String expireAfter;
        public Builder() {}
        public Builder(RoleManagementPolicyEligibleAssignmentRules defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.expirationRequired = defaults.expirationRequired;
    	      this.expireAfter = defaults.expireAfter;
        }

        @CustomType.Setter
        public Builder expirationRequired(@Nullable Boolean expirationRequired) {

            this.expirationRequired = expirationRequired;
            return this;
        }
        @CustomType.Setter
        public Builder expireAfter(@Nullable String expireAfter) {

            this.expireAfter = expireAfter;
            return this;
        }
        public RoleManagementPolicyEligibleAssignmentRules build() {
            final var _resultValue = new RoleManagementPolicyEligibleAssignmentRules();
            _resultValue.expirationRequired = expirationRequired;
            _resultValue.expireAfter = expireAfter;
            return _resultValue;
        }
    }
}
