// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.containerservice.inputs;

import com.pulumi.azure.containerservice.inputs.RegistryCredentialSetAuthenticationCredentialsArgs;
import com.pulumi.azure.containerservice.inputs.RegistryCredentialSetIdentityArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class RegistryCredentialSetState extends com.pulumi.resources.ResourceArgs {

    public static final RegistryCredentialSetState Empty = new RegistryCredentialSetState();

    /**
     * A `authentication_credentials` block as defined below.
     * 
     */
    @Import(name="authenticationCredentials")
    private @Nullable Output<RegistryCredentialSetAuthenticationCredentialsArgs> authenticationCredentials;

    /**
     * @return A `authentication_credentials` block as defined below.
     * 
     */
    public Optional<Output<RegistryCredentialSetAuthenticationCredentialsArgs>> authenticationCredentials() {
        return Optional.ofNullable(this.authenticationCredentials);
    }

    /**
     * The ID of the Container Registry. Changing this forces a new Container Registry Credential Set to be created.
     * 
     */
    @Import(name="containerRegistryId")
    private @Nullable Output<String> containerRegistryId;

    /**
     * @return The ID of the Container Registry. Changing this forces a new Container Registry Credential Set to be created.
     * 
     */
    public Optional<Output<String>> containerRegistryId() {
        return Optional.ofNullable(this.containerRegistryId);
    }

    /**
     * An `identity` block as defined below.
     * 
     */
    @Import(name="identity")
    private @Nullable Output<RegistryCredentialSetIdentityArgs> identity;

    /**
     * @return An `identity` block as defined below.
     * 
     */
    public Optional<Output<RegistryCredentialSetIdentityArgs>> identity() {
        return Optional.ofNullable(this.identity);
    }

    /**
     * The login server for the Credential Set. Changing this forces a new Container Registry Credential Set to be created.
     * 
     */
    @Import(name="loginServer")
    private @Nullable Output<String> loginServer;

    /**
     * @return The login server for the Credential Set. Changing this forces a new Container Registry Credential Set to be created.
     * 
     */
    public Optional<Output<String>> loginServer() {
        return Optional.ofNullable(this.loginServer);
    }

    /**
     * The name which should be used for this Container Registry Credential Set. Changing this forces a new Container Registry Credential Set to be created.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name which should be used for this Container Registry Credential Set. Changing this forces a new Container Registry Credential Set to be created.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    private RegistryCredentialSetState() {}

    private RegistryCredentialSetState(RegistryCredentialSetState $) {
        this.authenticationCredentials = $.authenticationCredentials;
        this.containerRegistryId = $.containerRegistryId;
        this.identity = $.identity;
        this.loginServer = $.loginServer;
        this.name = $.name;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RegistryCredentialSetState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RegistryCredentialSetState $;

        public Builder() {
            $ = new RegistryCredentialSetState();
        }

        public Builder(RegistryCredentialSetState defaults) {
            $ = new RegistryCredentialSetState(Objects.requireNonNull(defaults));
        }

        /**
         * @param authenticationCredentials A `authentication_credentials` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder authenticationCredentials(@Nullable Output<RegistryCredentialSetAuthenticationCredentialsArgs> authenticationCredentials) {
            $.authenticationCredentials = authenticationCredentials;
            return this;
        }

        /**
         * @param authenticationCredentials A `authentication_credentials` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder authenticationCredentials(RegistryCredentialSetAuthenticationCredentialsArgs authenticationCredentials) {
            return authenticationCredentials(Output.of(authenticationCredentials));
        }

        /**
         * @param containerRegistryId The ID of the Container Registry. Changing this forces a new Container Registry Credential Set to be created.
         * 
         * @return builder
         * 
         */
        public Builder containerRegistryId(@Nullable Output<String> containerRegistryId) {
            $.containerRegistryId = containerRegistryId;
            return this;
        }

        /**
         * @param containerRegistryId The ID of the Container Registry. Changing this forces a new Container Registry Credential Set to be created.
         * 
         * @return builder
         * 
         */
        public Builder containerRegistryId(String containerRegistryId) {
            return containerRegistryId(Output.of(containerRegistryId));
        }

        /**
         * @param identity An `identity` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder identity(@Nullable Output<RegistryCredentialSetIdentityArgs> identity) {
            $.identity = identity;
            return this;
        }

        /**
         * @param identity An `identity` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder identity(RegistryCredentialSetIdentityArgs identity) {
            return identity(Output.of(identity));
        }

        /**
         * @param loginServer The login server for the Credential Set. Changing this forces a new Container Registry Credential Set to be created.
         * 
         * @return builder
         * 
         */
        public Builder loginServer(@Nullable Output<String> loginServer) {
            $.loginServer = loginServer;
            return this;
        }

        /**
         * @param loginServer The login server for the Credential Set. Changing this forces a new Container Registry Credential Set to be created.
         * 
         * @return builder
         * 
         */
        public Builder loginServer(String loginServer) {
            return loginServer(Output.of(loginServer));
        }

        /**
         * @param name The name which should be used for this Container Registry Credential Set. Changing this forces a new Container Registry Credential Set to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name which should be used for this Container Registry Credential Set. Changing this forces a new Container Registry Credential Set to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        public RegistryCredentialSetState build() {
            return $;
        }
    }

}
