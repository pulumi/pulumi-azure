// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.eventgrid.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class GetDomainTopicArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetDomainTopicArgs Empty = new GetDomainTopicArgs();

    /**
     * The name of the EventGrid Domain Topic domain.
     * 
     */
    @Import(name="domainName", required=true)
    private Output<String> domainName;

    /**
     * @return The name of the EventGrid Domain Topic domain.
     * 
     */
    public Output<String> domainName() {
        return this.domainName;
    }

    /**
     * The name of the EventGrid Domain Topic resource.
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    /**
     * @return The name of the EventGrid Domain Topic resource.
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    /**
     * The name of the resource group in which the EventGrid Domain Topic exists.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    /**
     * @return The name of the resource group in which the EventGrid Domain Topic exists.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    private GetDomainTopicArgs() {}

    private GetDomainTopicArgs(GetDomainTopicArgs $) {
        this.domainName = $.domainName;
        this.name = $.name;
        this.resourceGroupName = $.resourceGroupName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetDomainTopicArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetDomainTopicArgs $;

        public Builder() {
            $ = new GetDomainTopicArgs();
        }

        public Builder(GetDomainTopicArgs defaults) {
            $ = new GetDomainTopicArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param domainName The name of the EventGrid Domain Topic domain.
         * 
         * @return builder
         * 
         */
        public Builder domainName(Output<String> domainName) {
            $.domainName = domainName;
            return this;
        }

        /**
         * @param domainName The name of the EventGrid Domain Topic domain.
         * 
         * @return builder
         * 
         */
        public Builder domainName(String domainName) {
            return domainName(Output.of(domainName));
        }

        /**
         * @param name The name of the EventGrid Domain Topic resource.
         * 
         * @return builder
         * 
         */
        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the EventGrid Domain Topic resource.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param resourceGroupName The name of the resource group in which the EventGrid Domain Topic exists.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName The name of the resource group in which the EventGrid Domain Topic exists.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        public GetDomainTopicArgs build() {
            if ($.domainName == null) {
                throw new MissingRequiredPropertyException("GetDomainTopicArgs", "domainName");
            }
            if ($.name == null) {
                throw new MissingRequiredPropertyException("GetDomainTopicArgs", "name");
            }
            if ($.resourceGroupName == null) {
                throw new MissingRequiredPropertyException("GetDomainTopicArgs", "resourceGroupName");
            }
            return $;
        }
    }

}
