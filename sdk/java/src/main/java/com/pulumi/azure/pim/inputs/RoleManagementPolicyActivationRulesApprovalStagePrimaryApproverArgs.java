// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.pim.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class RoleManagementPolicyActivationRulesApprovalStagePrimaryApproverArgs extends com.pulumi.resources.ResourceArgs {

    public static final RoleManagementPolicyActivationRulesApprovalStagePrimaryApproverArgs Empty = new RoleManagementPolicyActivationRulesApprovalStagePrimaryApproverArgs();

    /**
     * The ID of the object which will act as an approver.
     * 
     */
    @Import(name="objectId", required=true)
    private Output<String> objectId;

    /**
     * @return The ID of the object which will act as an approver.
     * 
     */
    public Output<String> objectId() {
        return this.objectId;
    }

    /**
     * The type of object acting as an approver. Possible options are `User` and `Group`.
     * 
     */
    @Import(name="type", required=true)
    private Output<String> type;

    /**
     * @return The type of object acting as an approver. Possible options are `User` and `Group`.
     * 
     */
    public Output<String> type() {
        return this.type;
    }

    private RoleManagementPolicyActivationRulesApprovalStagePrimaryApproverArgs() {}

    private RoleManagementPolicyActivationRulesApprovalStagePrimaryApproverArgs(RoleManagementPolicyActivationRulesApprovalStagePrimaryApproverArgs $) {
        this.objectId = $.objectId;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RoleManagementPolicyActivationRulesApprovalStagePrimaryApproverArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RoleManagementPolicyActivationRulesApprovalStagePrimaryApproverArgs $;

        public Builder() {
            $ = new RoleManagementPolicyActivationRulesApprovalStagePrimaryApproverArgs();
        }

        public Builder(RoleManagementPolicyActivationRulesApprovalStagePrimaryApproverArgs defaults) {
            $ = new RoleManagementPolicyActivationRulesApprovalStagePrimaryApproverArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param objectId The ID of the object which will act as an approver.
         * 
         * @return builder
         * 
         */
        public Builder objectId(Output<String> objectId) {
            $.objectId = objectId;
            return this;
        }

        /**
         * @param objectId The ID of the object which will act as an approver.
         * 
         * @return builder
         * 
         */
        public Builder objectId(String objectId) {
            return objectId(Output.of(objectId));
        }

        /**
         * @param type The type of object acting as an approver. Possible options are `User` and `Group`.
         * 
         * @return builder
         * 
         */
        public Builder type(Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type The type of object acting as an approver. Possible options are `User` and `Group`.
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        public RoleManagementPolicyActivationRulesApprovalStagePrimaryApproverArgs build() {
            if ($.objectId == null) {
                throw new MissingRequiredPropertyException("RoleManagementPolicyActivationRulesApprovalStagePrimaryApproverArgs", "objectId");
            }
            if ($.type == null) {
                throw new MissingRequiredPropertyException("RoleManagementPolicyActivationRulesApprovalStagePrimaryApproverArgs", "type");
            }
            return $;
        }
    }

}
