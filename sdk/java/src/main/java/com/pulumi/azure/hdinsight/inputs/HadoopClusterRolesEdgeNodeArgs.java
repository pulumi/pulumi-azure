// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.hdinsight.inputs;

import com.pulumi.azure.hdinsight.inputs.HadoopClusterRolesEdgeNodeInstallScriptActionArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class HadoopClusterRolesEdgeNodeArgs extends com.pulumi.resources.ResourceArgs {

    public static final HadoopClusterRolesEdgeNodeArgs Empty = new HadoopClusterRolesEdgeNodeArgs();

    /**
     * A `install_script_action` block as defined below.
     * 
     */
    @Import(name="installScriptActions", required=true)
    private Output<List<HadoopClusterRolesEdgeNodeInstallScriptActionArgs>> installScriptActions;

    /**
     * @return A `install_script_action` block as defined below.
     * 
     */
    public Output<List<HadoopClusterRolesEdgeNodeInstallScriptActionArgs>> installScriptActions() {
        return this.installScriptActions;
    }

    /**
     * The number of instances which should be run for the Worker Nodes.
     * 
     */
    @Import(name="targetInstanceCount", required=true)
    private Output<Integer> targetInstanceCount;

    /**
     * @return The number of instances which should be run for the Worker Nodes.
     * 
     */
    public Output<Integer> targetInstanceCount() {
        return this.targetInstanceCount;
    }

    /**
     * The Size of the Virtual Machine which should be used as the Edge Nodes. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="vmSize", required=true)
    private Output<String> vmSize;

    /**
     * @return The Size of the Virtual Machine which should be used as the Edge Nodes. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> vmSize() {
        return this.vmSize;
    }

    private HadoopClusterRolesEdgeNodeArgs() {}

    private HadoopClusterRolesEdgeNodeArgs(HadoopClusterRolesEdgeNodeArgs $) {
        this.installScriptActions = $.installScriptActions;
        this.targetInstanceCount = $.targetInstanceCount;
        this.vmSize = $.vmSize;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(HadoopClusterRolesEdgeNodeArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private HadoopClusterRolesEdgeNodeArgs $;

        public Builder() {
            $ = new HadoopClusterRolesEdgeNodeArgs();
        }

        public Builder(HadoopClusterRolesEdgeNodeArgs defaults) {
            $ = new HadoopClusterRolesEdgeNodeArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param installScriptActions A `install_script_action` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder installScriptActions(Output<List<HadoopClusterRolesEdgeNodeInstallScriptActionArgs>> installScriptActions) {
            $.installScriptActions = installScriptActions;
            return this;
        }

        /**
         * @param installScriptActions A `install_script_action` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder installScriptActions(List<HadoopClusterRolesEdgeNodeInstallScriptActionArgs> installScriptActions) {
            return installScriptActions(Output.of(installScriptActions));
        }

        /**
         * @param installScriptActions A `install_script_action` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder installScriptActions(HadoopClusterRolesEdgeNodeInstallScriptActionArgs... installScriptActions) {
            return installScriptActions(List.of(installScriptActions));
        }

        /**
         * @param targetInstanceCount The number of instances which should be run for the Worker Nodes.
         * 
         * @return builder
         * 
         */
        public Builder targetInstanceCount(Output<Integer> targetInstanceCount) {
            $.targetInstanceCount = targetInstanceCount;
            return this;
        }

        /**
         * @param targetInstanceCount The number of instances which should be run for the Worker Nodes.
         * 
         * @return builder
         * 
         */
        public Builder targetInstanceCount(Integer targetInstanceCount) {
            return targetInstanceCount(Output.of(targetInstanceCount));
        }

        /**
         * @param vmSize The Size of the Virtual Machine which should be used as the Edge Nodes. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder vmSize(Output<String> vmSize) {
            $.vmSize = vmSize;
            return this;
        }

        /**
         * @param vmSize The Size of the Virtual Machine which should be used as the Edge Nodes. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder vmSize(String vmSize) {
            return vmSize(Output.of(vmSize));
        }

        public HadoopClusterRolesEdgeNodeArgs build() {
            $.installScriptActions = Objects.requireNonNull($.installScriptActions, "expected parameter 'installScriptActions' to be non-null");
            $.targetInstanceCount = Objects.requireNonNull($.targetInstanceCount, "expected parameter 'targetInstanceCount' to be non-null");
            $.vmSize = Objects.requireNonNull($.vmSize, "expected parameter 'vmSize' to be non-null");
            return $;
        }
    }

}
