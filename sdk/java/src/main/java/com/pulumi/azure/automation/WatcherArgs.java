// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.automation;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class WatcherArgs extends com.pulumi.resources.ResourceArgs {

    public static final WatcherArgs Empty = new WatcherArgs();

    /**
     * The ID of Automation Account to manage this Watcher. Changing this forces a new Watcher to be created.
     * 
     */
    @Import(name="automationAccountId", required=true)
    private Output<String> automationAccountId;

    /**
     * @return The ID of Automation Account to manage this Watcher. Changing this forces a new Watcher to be created.
     * 
     */
    public Output<String> automationAccountId() {
        return this.automationAccountId;
    }

    /**
     * A description of this Automation Watcher.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return A description of this Automation Watcher.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * A string of etag assigned to this Automation Watcher.
     * 
     */
    @Import(name="etag")
    private @Nullable Output<String> etag;

    /**
     * @return A string of etag assigned to this Automation Watcher.
     * 
     */
    public Optional<Output<String>> etag() {
        return Optional.ofNullable(this.etag);
    }

    /**
     * Specify the frequency at which the watcher is invoked.
     * 
     */
    @Import(name="executionFrequencyInSeconds", required=true)
    private Output<Integer> executionFrequencyInSeconds;

    /**
     * @return Specify the frequency at which the watcher is invoked.
     * 
     */
    public Output<Integer> executionFrequencyInSeconds() {
        return this.executionFrequencyInSeconds;
    }

    /**
     * The Azure Region where the Automation Watcher should exist. Changing this forces a new Automation Watcher to be created.
     * 
     */
    @Import(name="location")
    private @Nullable Output<String> location;

    /**
     * @return The Azure Region where the Automation Watcher should exist. Changing this forces a new Automation Watcher to be created.
     * 
     */
    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * The name which should be used for this Automation Watcher. Changing this forces a new Automation Watcher to be created.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name which should be used for this Automation Watcher. Changing this forces a new Automation Watcher to be created.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Specify the name of an existing runbook this watcher is attached to. Changing this forces a new Automation to be created.
     * 
     */
    @Import(name="scriptName", required=true)
    private Output<String> scriptName;

    /**
     * @return Specify the name of an existing runbook this watcher is attached to. Changing this forces a new Automation to be created.
     * 
     */
    public Output<String> scriptName() {
        return this.scriptName;
    }

    /**
     * Specifies a list of key-vaule parameters. Changing this forces a new Automation watcher to be created.
     * 
     */
    @Import(name="scriptParameters")
    private @Nullable Output<Map<String,String>> scriptParameters;

    /**
     * @return Specifies a list of key-vaule parameters. Changing this forces a new Automation watcher to be created.
     * 
     */
    public Optional<Output<Map<String,String>>> scriptParameters() {
        return Optional.ofNullable(this.scriptParameters);
    }

    /**
     * Specify the name of the Hybrid work group the watcher will run on.
     * 
     */
    @Import(name="scriptRunOn", required=true)
    private Output<String> scriptRunOn;

    /**
     * @return Specify the name of the Hybrid work group the watcher will run on.
     * 
     */
    public Output<String> scriptRunOn() {
        return this.scriptRunOn;
    }

    /**
     * A mapping of tags which should be assigned to the Automation Watcher.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return A mapping of tags which should be assigned to the Automation Watcher.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private WatcherArgs() {}

    private WatcherArgs(WatcherArgs $) {
        this.automationAccountId = $.automationAccountId;
        this.description = $.description;
        this.etag = $.etag;
        this.executionFrequencyInSeconds = $.executionFrequencyInSeconds;
        this.location = $.location;
        this.name = $.name;
        this.scriptName = $.scriptName;
        this.scriptParameters = $.scriptParameters;
        this.scriptRunOn = $.scriptRunOn;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(WatcherArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private WatcherArgs $;

        public Builder() {
            $ = new WatcherArgs();
        }

        public Builder(WatcherArgs defaults) {
            $ = new WatcherArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param automationAccountId The ID of Automation Account to manage this Watcher. Changing this forces a new Watcher to be created.
         * 
         * @return builder
         * 
         */
        public Builder automationAccountId(Output<String> automationAccountId) {
            $.automationAccountId = automationAccountId;
            return this;
        }

        /**
         * @param automationAccountId The ID of Automation Account to manage this Watcher. Changing this forces a new Watcher to be created.
         * 
         * @return builder
         * 
         */
        public Builder automationAccountId(String automationAccountId) {
            return automationAccountId(Output.of(automationAccountId));
        }

        /**
         * @param description A description of this Automation Watcher.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description A description of this Automation Watcher.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param etag A string of etag assigned to this Automation Watcher.
         * 
         * @return builder
         * 
         */
        public Builder etag(@Nullable Output<String> etag) {
            $.etag = etag;
            return this;
        }

        /**
         * @param etag A string of etag assigned to this Automation Watcher.
         * 
         * @return builder
         * 
         */
        public Builder etag(String etag) {
            return etag(Output.of(etag));
        }

        /**
         * @param executionFrequencyInSeconds Specify the frequency at which the watcher is invoked.
         * 
         * @return builder
         * 
         */
        public Builder executionFrequencyInSeconds(Output<Integer> executionFrequencyInSeconds) {
            $.executionFrequencyInSeconds = executionFrequencyInSeconds;
            return this;
        }

        /**
         * @param executionFrequencyInSeconds Specify the frequency at which the watcher is invoked.
         * 
         * @return builder
         * 
         */
        public Builder executionFrequencyInSeconds(Integer executionFrequencyInSeconds) {
            return executionFrequencyInSeconds(Output.of(executionFrequencyInSeconds));
        }

        /**
         * @param location The Azure Region where the Automation Watcher should exist. Changing this forces a new Automation Watcher to be created.
         * 
         * @return builder
         * 
         */
        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location The Azure Region where the Automation Watcher should exist. Changing this forces a new Automation Watcher to be created.
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param name The name which should be used for this Automation Watcher. Changing this forces a new Automation Watcher to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name which should be used for this Automation Watcher. Changing this forces a new Automation Watcher to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param scriptName Specify the name of an existing runbook this watcher is attached to. Changing this forces a new Automation to be created.
         * 
         * @return builder
         * 
         */
        public Builder scriptName(Output<String> scriptName) {
            $.scriptName = scriptName;
            return this;
        }

        /**
         * @param scriptName Specify the name of an existing runbook this watcher is attached to. Changing this forces a new Automation to be created.
         * 
         * @return builder
         * 
         */
        public Builder scriptName(String scriptName) {
            return scriptName(Output.of(scriptName));
        }

        /**
         * @param scriptParameters Specifies a list of key-vaule parameters. Changing this forces a new Automation watcher to be created.
         * 
         * @return builder
         * 
         */
        public Builder scriptParameters(@Nullable Output<Map<String,String>> scriptParameters) {
            $.scriptParameters = scriptParameters;
            return this;
        }

        /**
         * @param scriptParameters Specifies a list of key-vaule parameters. Changing this forces a new Automation watcher to be created.
         * 
         * @return builder
         * 
         */
        public Builder scriptParameters(Map<String,String> scriptParameters) {
            return scriptParameters(Output.of(scriptParameters));
        }

        /**
         * @param scriptRunOn Specify the name of the Hybrid work group the watcher will run on.
         * 
         * @return builder
         * 
         */
        public Builder scriptRunOn(Output<String> scriptRunOn) {
            $.scriptRunOn = scriptRunOn;
            return this;
        }

        /**
         * @param scriptRunOn Specify the name of the Hybrid work group the watcher will run on.
         * 
         * @return builder
         * 
         */
        public Builder scriptRunOn(String scriptRunOn) {
            return scriptRunOn(Output.of(scriptRunOn));
        }

        /**
         * @param tags A mapping of tags which should be assigned to the Automation Watcher.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags A mapping of tags which should be assigned to the Automation Watcher.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public WatcherArgs build() {
            if ($.automationAccountId == null) {
                throw new MissingRequiredPropertyException("WatcherArgs", "automationAccountId");
            }
            if ($.executionFrequencyInSeconds == null) {
                throw new MissingRequiredPropertyException("WatcherArgs", "executionFrequencyInSeconds");
            }
            if ($.scriptName == null) {
                throw new MissingRequiredPropertyException("WatcherArgs", "scriptName");
            }
            if ($.scriptRunOn == null) {
                throw new MissingRequiredPropertyException("WatcherArgs", "scriptRunOn");
            }
            return $;
        }
    }

}
