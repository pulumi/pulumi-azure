// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.keyvault.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetSecretResult {
    /**
     * @return The content type for the Key Vault Secret.
     * 
     */
    private String contentType;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private String keyVaultId;
    private String name;
    /**
     * @return The (Versioned) ID for this Key Vault Secret. This property points to a specific version of a Key Vault Secret, as such using this won&#39;t auto-rotate values if used in other Azure Services.
     * 
     */
    private String resourceId;
    /**
     * @return The Versionless ID of the Key Vault Secret. This property allows other Azure Services (that support it) to auto-rotate their value when the Key Vault Secret is updated.
     * 
     */
    private String resourceVersionlessId;
    /**
     * @return Any tags assigned to this resource.
     * 
     */
    private Map<String,String> tags;
    /**
     * @return The value of the Key Vault Secret.
     * 
     */
    private String value;
    /**
     * @return The current version of the Key Vault Secret.
     * 
     */
    private String version;
    private String versionlessId;

    private GetSecretResult() {}
    /**
     * @return The content type for the Key Vault Secret.
     * 
     */
    public String contentType() {
        return this.contentType;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public String keyVaultId() {
        return this.keyVaultId;
    }
    public String name() {
        return this.name;
    }
    /**
     * @return The (Versioned) ID for this Key Vault Secret. This property points to a specific version of a Key Vault Secret, as such using this won&#39;t auto-rotate values if used in other Azure Services.
     * 
     */
    public String resourceId() {
        return this.resourceId;
    }
    /**
     * @return The Versionless ID of the Key Vault Secret. This property allows other Azure Services (that support it) to auto-rotate their value when the Key Vault Secret is updated.
     * 
     */
    public String resourceVersionlessId() {
        return this.resourceVersionlessId;
    }
    /**
     * @return Any tags assigned to this resource.
     * 
     */
    public Map<String,String> tags() {
        return this.tags;
    }
    /**
     * @return The value of the Key Vault Secret.
     * 
     */
    public String value() {
        return this.value;
    }
    /**
     * @return The current version of the Key Vault Secret.
     * 
     */
    public String version() {
        return this.version;
    }
    public String versionlessId() {
        return this.versionlessId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSecretResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String contentType;
        private String id;
        private String keyVaultId;
        private String name;
        private String resourceId;
        private String resourceVersionlessId;
        private Map<String,String> tags;
        private String value;
        private String version;
        private String versionlessId;
        public Builder() {}
        public Builder(GetSecretResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.contentType = defaults.contentType;
    	      this.id = defaults.id;
    	      this.keyVaultId = defaults.keyVaultId;
    	      this.name = defaults.name;
    	      this.resourceId = defaults.resourceId;
    	      this.resourceVersionlessId = defaults.resourceVersionlessId;
    	      this.tags = defaults.tags;
    	      this.value = defaults.value;
    	      this.version = defaults.version;
    	      this.versionlessId = defaults.versionlessId;
        }

        @CustomType.Setter
        public Builder contentType(String contentType) {
            this.contentType = Objects.requireNonNull(contentType);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder keyVaultId(String keyVaultId) {
            this.keyVaultId = Objects.requireNonNull(keyVaultId);
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder resourceId(String resourceId) {
            this.resourceId = Objects.requireNonNull(resourceId);
            return this;
        }
        @CustomType.Setter
        public Builder resourceVersionlessId(String resourceVersionlessId) {
            this.resourceVersionlessId = Objects.requireNonNull(resourceVersionlessId);
            return this;
        }
        @CustomType.Setter
        public Builder tags(Map<String,String> tags) {
            this.tags = Objects.requireNonNull(tags);
            return this;
        }
        @CustomType.Setter
        public Builder value(String value) {
            this.value = Objects.requireNonNull(value);
            return this;
        }
        @CustomType.Setter
        public Builder version(String version) {
            this.version = Objects.requireNonNull(version);
            return this;
        }
        @CustomType.Setter
        public Builder versionlessId(String versionlessId) {
            this.versionlessId = Objects.requireNonNull(versionlessId);
            return this;
        }
        public GetSecretResult build() {
            final var o = new GetSecretResult();
            o.contentType = contentType;
            o.id = id;
            o.keyVaultId = keyVaultId;
            o.name = name;
            o.resourceId = resourceId;
            o.resourceVersionlessId = resourceVersionlessId;
            o.tags = tags;
            o.value = value;
            o.version = version;
            o.versionlessId = versionlessId;
            return o;
        }
    }
}
