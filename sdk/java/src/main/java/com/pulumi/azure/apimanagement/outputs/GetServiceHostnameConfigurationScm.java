// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.apimanagement.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetServiceHostnameConfigurationScm {
    /**
     * @return The Hostname used for the SCM URL.
     * 
     */
    private String hostName;
    /**
     * @return The ID of the Key Vault Secret which contains the SSL Certificate.
     * 
     */
    private String keyVaultId;
    /**
     * @return Is Client Certificate Negotiation enabled?
     * 
     */
    private Boolean negotiateClientCertificate;

    private GetServiceHostnameConfigurationScm() {}
    /**
     * @return The Hostname used for the SCM URL.
     * 
     */
    public String hostName() {
        return this.hostName;
    }
    /**
     * @return The ID of the Key Vault Secret which contains the SSL Certificate.
     * 
     */
    public String keyVaultId() {
        return this.keyVaultId;
    }
    /**
     * @return Is Client Certificate Negotiation enabled?
     * 
     */
    public Boolean negotiateClientCertificate() {
        return this.negotiateClientCertificate;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetServiceHostnameConfigurationScm defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String hostName;
        private String keyVaultId;
        private Boolean negotiateClientCertificate;
        public Builder() {}
        public Builder(GetServiceHostnameConfigurationScm defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.hostName = defaults.hostName;
    	      this.keyVaultId = defaults.keyVaultId;
    	      this.negotiateClientCertificate = defaults.negotiateClientCertificate;
        }

        @CustomType.Setter
        public Builder hostName(String hostName) {
            if (hostName == null) {
              throw new MissingRequiredPropertyException("GetServiceHostnameConfigurationScm", "hostName");
            }
            this.hostName = hostName;
            return this;
        }
        @CustomType.Setter
        public Builder keyVaultId(String keyVaultId) {
            if (keyVaultId == null) {
              throw new MissingRequiredPropertyException("GetServiceHostnameConfigurationScm", "keyVaultId");
            }
            this.keyVaultId = keyVaultId;
            return this;
        }
        @CustomType.Setter
        public Builder negotiateClientCertificate(Boolean negotiateClientCertificate) {
            if (negotiateClientCertificate == null) {
              throw new MissingRequiredPropertyException("GetServiceHostnameConfigurationScm", "negotiateClientCertificate");
            }
            this.negotiateClientCertificate = negotiateClientCertificate;
            return this;
        }
        public GetServiceHostnameConfigurationScm build() {
            final var _resultValue = new GetServiceHostnameConfigurationScm();
            _resultValue.hostName = hostName;
            _resultValue.keyVaultId = keyVaultId;
            _resultValue.negotiateClientCertificate = negotiateClientCertificate;
            return _resultValue;
        }
    }
}
