// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.apimanagement;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ApiVersionSetArgs extends com.pulumi.resources.ResourceArgs {

    public static final ApiVersionSetArgs Empty = new ApiVersionSetArgs();

    /**
     * The name of the API Management Service in which the API Version Set should exist. May only contain alphanumeric characters and dashes up to 50 characters in length. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="apiManagementName", required=true)
    private Output<String> apiManagementName;

    /**
     * @return The name of the API Management Service in which the API Version Set should exist. May only contain alphanumeric characters and dashes up to 50 characters in length. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> apiManagementName() {
        return this.apiManagementName;
    }

    /**
     * The description of API Version Set.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return The description of API Version Set.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * The display name of this API Version Set.
     * 
     */
    @Import(name="displayName", required=true)
    private Output<String> displayName;

    /**
     * @return The display name of this API Version Set.
     * 
     */
    public Output<String> displayName() {
        return this.displayName;
    }

    /**
     * The name of the API Version Set. May only contain alphanumeric characters and dashes up to 80 characters in length. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the API Version Set. May only contain alphanumeric characters and dashes up to 80 characters in length. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The name of the Resource Group in which the parent API Management Service exists. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    /**
     * @return The name of the Resource Group in which the parent API Management Service exists. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * The name of the Header which should be read from Inbound Requests which defines the API Version.
     * 
     * &gt; **NOTE:** This must be specified when `versioning_scheme` is set to `Header`.
     * 
     */
    @Import(name="versionHeaderName")
    private @Nullable Output<String> versionHeaderName;

    /**
     * @return The name of the Header which should be read from Inbound Requests which defines the API Version.
     * 
     * &gt; **NOTE:** This must be specified when `versioning_scheme` is set to `Header`.
     * 
     */
    public Optional<Output<String>> versionHeaderName() {
        return Optional.ofNullable(this.versionHeaderName);
    }

    /**
     * The name of the Query String which should be read from Inbound Requests which defines the API Version.
     * 
     * &gt; **NOTE:** This must be specified when `versioning_scheme` is set to `Query`.
     * 
     */
    @Import(name="versionQueryName")
    private @Nullable Output<String> versionQueryName;

    /**
     * @return The name of the Query String which should be read from Inbound Requests which defines the API Version.
     * 
     * &gt; **NOTE:** This must be specified when `versioning_scheme` is set to `Query`.
     * 
     */
    public Optional<Output<String>> versionQueryName() {
        return Optional.ofNullable(this.versionQueryName);
    }

    /**
     * Specifies where in an Inbound HTTP Request that the API Version should be read from. Possible values are `Header`, `Query` and `Segment`.
     * 
     */
    @Import(name="versioningScheme", required=true)
    private Output<String> versioningScheme;

    /**
     * @return Specifies where in an Inbound HTTP Request that the API Version should be read from. Possible values are `Header`, `Query` and `Segment`.
     * 
     */
    public Output<String> versioningScheme() {
        return this.versioningScheme;
    }

    private ApiVersionSetArgs() {}

    private ApiVersionSetArgs(ApiVersionSetArgs $) {
        this.apiManagementName = $.apiManagementName;
        this.description = $.description;
        this.displayName = $.displayName;
        this.name = $.name;
        this.resourceGroupName = $.resourceGroupName;
        this.versionHeaderName = $.versionHeaderName;
        this.versionQueryName = $.versionQueryName;
        this.versioningScheme = $.versioningScheme;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ApiVersionSetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ApiVersionSetArgs $;

        public Builder() {
            $ = new ApiVersionSetArgs();
        }

        public Builder(ApiVersionSetArgs defaults) {
            $ = new ApiVersionSetArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param apiManagementName The name of the API Management Service in which the API Version Set should exist. May only contain alphanumeric characters and dashes up to 50 characters in length. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder apiManagementName(Output<String> apiManagementName) {
            $.apiManagementName = apiManagementName;
            return this;
        }

        /**
         * @param apiManagementName The name of the API Management Service in which the API Version Set should exist. May only contain alphanumeric characters and dashes up to 50 characters in length. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder apiManagementName(String apiManagementName) {
            return apiManagementName(Output.of(apiManagementName));
        }

        /**
         * @param description The description of API Version Set.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description The description of API Version Set.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param displayName The display name of this API Version Set.
         * 
         * @return builder
         * 
         */
        public Builder displayName(Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName The display name of this API Version Set.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param name The name of the API Version Set. May only contain alphanumeric characters and dashes up to 80 characters in length. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the API Version Set. May only contain alphanumeric characters and dashes up to 80 characters in length. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param resourceGroupName The name of the Resource Group in which the parent API Management Service exists. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName The name of the Resource Group in which the parent API Management Service exists. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        /**
         * @param versionHeaderName The name of the Header which should be read from Inbound Requests which defines the API Version.
         * 
         * &gt; **NOTE:** This must be specified when `versioning_scheme` is set to `Header`.
         * 
         * @return builder
         * 
         */
        public Builder versionHeaderName(@Nullable Output<String> versionHeaderName) {
            $.versionHeaderName = versionHeaderName;
            return this;
        }

        /**
         * @param versionHeaderName The name of the Header which should be read from Inbound Requests which defines the API Version.
         * 
         * &gt; **NOTE:** This must be specified when `versioning_scheme` is set to `Header`.
         * 
         * @return builder
         * 
         */
        public Builder versionHeaderName(String versionHeaderName) {
            return versionHeaderName(Output.of(versionHeaderName));
        }

        /**
         * @param versionQueryName The name of the Query String which should be read from Inbound Requests which defines the API Version.
         * 
         * &gt; **NOTE:** This must be specified when `versioning_scheme` is set to `Query`.
         * 
         * @return builder
         * 
         */
        public Builder versionQueryName(@Nullable Output<String> versionQueryName) {
            $.versionQueryName = versionQueryName;
            return this;
        }

        /**
         * @param versionQueryName The name of the Query String which should be read from Inbound Requests which defines the API Version.
         * 
         * &gt; **NOTE:** This must be specified when `versioning_scheme` is set to `Query`.
         * 
         * @return builder
         * 
         */
        public Builder versionQueryName(String versionQueryName) {
            return versionQueryName(Output.of(versionQueryName));
        }

        /**
         * @param versioningScheme Specifies where in an Inbound HTTP Request that the API Version should be read from. Possible values are `Header`, `Query` and `Segment`.
         * 
         * @return builder
         * 
         */
        public Builder versioningScheme(Output<String> versioningScheme) {
            $.versioningScheme = versioningScheme;
            return this;
        }

        /**
         * @param versioningScheme Specifies where in an Inbound HTTP Request that the API Version should be read from. Possible values are `Header`, `Query` and `Segment`.
         * 
         * @return builder
         * 
         */
        public Builder versioningScheme(String versioningScheme) {
            return versioningScheme(Output.of(versioningScheme));
        }

        public ApiVersionSetArgs build() {
            if ($.apiManagementName == null) {
                throw new MissingRequiredPropertyException("ApiVersionSetArgs", "apiManagementName");
            }
            if ($.displayName == null) {
                throw new MissingRequiredPropertyException("ApiVersionSetArgs", "displayName");
            }
            if ($.resourceGroupName == null) {
                throw new MissingRequiredPropertyException("ApiVersionSetArgs", "resourceGroupName");
            }
            if ($.versioningScheme == null) {
                throw new MissingRequiredPropertyException("ApiVersionSetArgs", "versioningScheme");
            }
            return $;
        }
    }

}
