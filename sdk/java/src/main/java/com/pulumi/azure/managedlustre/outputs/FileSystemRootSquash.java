// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.managedlustre.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class FileSystemRootSquash {
    /**
     * @return Squash mode of the AML file system. Possible values are `RootOnly`, and `All`.
     * 
     */
    private String mode;
    /**
     * @return NID IP Address list(s) to be added to the TrustedSystems, separated by semicolons.
     * 
     */
    private String noSquashNids;
    /**
     * @return The GID to be used for the root squash. Defaults to `0`.
     * 
     */
    private @Nullable Integer squashGid;
    /**
     * @return The UID to be used for the root squash. Defaults to `0`.
     * 
     */
    private @Nullable Integer squashUid;

    private FileSystemRootSquash() {}
    /**
     * @return Squash mode of the AML file system. Possible values are `RootOnly`, and `All`.
     * 
     */
    public String mode() {
        return this.mode;
    }
    /**
     * @return NID IP Address list(s) to be added to the TrustedSystems, separated by semicolons.
     * 
     */
    public String noSquashNids() {
        return this.noSquashNids;
    }
    /**
     * @return The GID to be used for the root squash. Defaults to `0`.
     * 
     */
    public Optional<Integer> squashGid() {
        return Optional.ofNullable(this.squashGid);
    }
    /**
     * @return The UID to be used for the root squash. Defaults to `0`.
     * 
     */
    public Optional<Integer> squashUid() {
        return Optional.ofNullable(this.squashUid);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(FileSystemRootSquash defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String mode;
        private String noSquashNids;
        private @Nullable Integer squashGid;
        private @Nullable Integer squashUid;
        public Builder() {}
        public Builder(FileSystemRootSquash defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.mode = defaults.mode;
    	      this.noSquashNids = defaults.noSquashNids;
    	      this.squashGid = defaults.squashGid;
    	      this.squashUid = defaults.squashUid;
        }

        @CustomType.Setter
        public Builder mode(String mode) {
            if (mode == null) {
              throw new MissingRequiredPropertyException("FileSystemRootSquash", "mode");
            }
            this.mode = mode;
            return this;
        }
        @CustomType.Setter
        public Builder noSquashNids(String noSquashNids) {
            if (noSquashNids == null) {
              throw new MissingRequiredPropertyException("FileSystemRootSquash", "noSquashNids");
            }
            this.noSquashNids = noSquashNids;
            return this;
        }
        @CustomType.Setter
        public Builder squashGid(@Nullable Integer squashGid) {

            this.squashGid = squashGid;
            return this;
        }
        @CustomType.Setter
        public Builder squashUid(@Nullable Integer squashUid) {

            this.squashUid = squashUid;
            return this;
        }
        public FileSystemRootSquash build() {
            final var _resultValue = new FileSystemRootSquash();
            _resultValue.mode = mode;
            _resultValue.noSquashNids = noSquashNids;
            _resultValue.squashGid = squashGid;
            _resultValue.squashUid = squashUid;
            return _resultValue;
        }
    }
}
