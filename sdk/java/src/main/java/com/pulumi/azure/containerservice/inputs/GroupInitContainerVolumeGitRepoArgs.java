// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.containerservice.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GroupInitContainerVolumeGitRepoArgs extends com.pulumi.resources.ResourceArgs {

    public static final GroupInitContainerVolumeGitRepoArgs Empty = new GroupInitContainerVolumeGitRepoArgs();

    /**
     * Specifies the directory into which the repository should be cloned. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="directory")
    private @Nullable Output<String> directory;

    /**
     * @return Specifies the directory into which the repository should be cloned. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> directory() {
        return Optional.ofNullable(this.directory);
    }

    /**
     * Specifies the commit hash of the revision to be cloned. If unspecified, the HEAD revision is cloned. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="revision")
    private @Nullable Output<String> revision;

    /**
     * @return Specifies the commit hash of the revision to be cloned. If unspecified, the HEAD revision is cloned. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> revision() {
        return Optional.ofNullable(this.revision);
    }

    /**
     * Specifies the Git repository to be cloned. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="url", required=true)
    private Output<String> url;

    /**
     * @return Specifies the Git repository to be cloned. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> url() {
        return this.url;
    }

    private GroupInitContainerVolumeGitRepoArgs() {}

    private GroupInitContainerVolumeGitRepoArgs(GroupInitContainerVolumeGitRepoArgs $) {
        this.directory = $.directory;
        this.revision = $.revision;
        this.url = $.url;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GroupInitContainerVolumeGitRepoArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GroupInitContainerVolumeGitRepoArgs $;

        public Builder() {
            $ = new GroupInitContainerVolumeGitRepoArgs();
        }

        public Builder(GroupInitContainerVolumeGitRepoArgs defaults) {
            $ = new GroupInitContainerVolumeGitRepoArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param directory Specifies the directory into which the repository should be cloned. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder directory(@Nullable Output<String> directory) {
            $.directory = directory;
            return this;
        }

        /**
         * @param directory Specifies the directory into which the repository should be cloned. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder directory(String directory) {
            return directory(Output.of(directory));
        }

        /**
         * @param revision Specifies the commit hash of the revision to be cloned. If unspecified, the HEAD revision is cloned. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder revision(@Nullable Output<String> revision) {
            $.revision = revision;
            return this;
        }

        /**
         * @param revision Specifies the commit hash of the revision to be cloned. If unspecified, the HEAD revision is cloned. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder revision(String revision) {
            return revision(Output.of(revision));
        }

        /**
         * @param url Specifies the Git repository to be cloned. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder url(Output<String> url) {
            $.url = url;
            return this;
        }

        /**
         * @param url Specifies the Git repository to be cloned. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder url(String url) {
            return url(Output.of(url));
        }

        public GroupInitContainerVolumeGitRepoArgs build() {
            if ($.url == null) {
                throw new MissingRequiredPropertyException("GroupInitContainerVolumeGitRepoArgs", "url");
            }
            return $;
        }
    }

}
