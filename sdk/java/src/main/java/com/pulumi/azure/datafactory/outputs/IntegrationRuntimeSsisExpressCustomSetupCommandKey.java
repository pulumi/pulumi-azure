// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.datafactory.outputs;

import com.pulumi.azure.datafactory.outputs.IntegrationRuntimeSsisExpressCustomSetupCommandKeyKeyVaultPassword;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class IntegrationRuntimeSsisExpressCustomSetupCommandKey {
    /**
     * @return A `key_vault_secret_reference` block as defined below.
     * 
     */
    private final @Nullable IntegrationRuntimeSsisExpressCustomSetupCommandKeyKeyVaultPassword keyVaultPassword;
    /**
     * @return The password for the target device.
     * 
     */
    private final @Nullable String password;
    /**
     * @return The target computer or domain name.
     * 
     */
    private final String targetName;
    /**
     * @return The username for the target device.
     * 
     */
    private final String userName;

    @CustomType.Constructor
    private IntegrationRuntimeSsisExpressCustomSetupCommandKey(
        @CustomType.Parameter("keyVaultPassword") @Nullable IntegrationRuntimeSsisExpressCustomSetupCommandKeyKeyVaultPassword keyVaultPassword,
        @CustomType.Parameter("password") @Nullable String password,
        @CustomType.Parameter("targetName") String targetName,
        @CustomType.Parameter("userName") String userName) {
        this.keyVaultPassword = keyVaultPassword;
        this.password = password;
        this.targetName = targetName;
        this.userName = userName;
    }

    /**
     * @return A `key_vault_secret_reference` block as defined below.
     * 
     */
    public Optional<IntegrationRuntimeSsisExpressCustomSetupCommandKeyKeyVaultPassword> keyVaultPassword() {
        return Optional.ofNullable(this.keyVaultPassword);
    }
    /**
     * @return The password for the target device.
     * 
     */
    public Optional<String> password() {
        return Optional.ofNullable(this.password);
    }
    /**
     * @return The target computer or domain name.
     * 
     */
    public String targetName() {
        return this.targetName;
    }
    /**
     * @return The username for the target device.
     * 
     */
    public String userName() {
        return this.userName;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(IntegrationRuntimeSsisExpressCustomSetupCommandKey defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable IntegrationRuntimeSsisExpressCustomSetupCommandKeyKeyVaultPassword keyVaultPassword;
        private @Nullable String password;
        private String targetName;
        private String userName;

        public Builder() {
    	      // Empty
        }

        public Builder(IntegrationRuntimeSsisExpressCustomSetupCommandKey defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.keyVaultPassword = defaults.keyVaultPassword;
    	      this.password = defaults.password;
    	      this.targetName = defaults.targetName;
    	      this.userName = defaults.userName;
        }

        public Builder keyVaultPassword(@Nullable IntegrationRuntimeSsisExpressCustomSetupCommandKeyKeyVaultPassword keyVaultPassword) {
            this.keyVaultPassword = keyVaultPassword;
            return this;
        }
        public Builder password(@Nullable String password) {
            this.password = password;
            return this;
        }
        public Builder targetName(String targetName) {
            this.targetName = Objects.requireNonNull(targetName);
            return this;
        }
        public Builder userName(String userName) {
            this.userName = Objects.requireNonNull(userName);
            return this;
        }        public IntegrationRuntimeSsisExpressCustomSetupCommandKey build() {
            return new IntegrationRuntimeSsisExpressCustomSetupCommandKey(keyVaultPassword, password, targetName, userName);
        }
    }
}
