// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.cdn.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class EndpointCustomDomainUserManagedHttps {
    /**
     * @return The ID of the Key Vault Certificate that contains the HTTPS certificate. This is deprecated in favor of `key_vault_secret_id`.
     * 
     * @deprecated
     * This is deprecated in favor of `key_vault_secret_id` as the service is actually looking for a secret, not a certificate
     * 
     */
    @Deprecated /* This is deprecated in favor of `key_vault_secret_id` as the service is actually looking for a secret, not a certificate */
    private final @Nullable String keyVaultCertificateId;
    /**
     * @return The ID of the Key Vault Secret that contains the HTTPS certificate.
     * 
     */
    private final @Nullable String keyVaultSecretId;
    /**
     * @return The minimum TLS protocol version that is used for HTTPS. Possible values are `TLS10` (representing TLS 1.0/1.1), `TLS12` (representing TLS 1.2) and `None` (representing no minimums). Defaults to `TLS12`.
     * 
     */
    private final @Nullable String tlsVersion;

    @CustomType.Constructor
    private EndpointCustomDomainUserManagedHttps(
        @CustomType.Parameter("keyVaultCertificateId") @Nullable String keyVaultCertificateId,
        @CustomType.Parameter("keyVaultSecretId") @Nullable String keyVaultSecretId,
        @CustomType.Parameter("tlsVersion") @Nullable String tlsVersion) {
        this.keyVaultCertificateId = keyVaultCertificateId;
        this.keyVaultSecretId = keyVaultSecretId;
        this.tlsVersion = tlsVersion;
    }

    /**
     * @return The ID of the Key Vault Certificate that contains the HTTPS certificate. This is deprecated in favor of `key_vault_secret_id`.
     * 
     * @deprecated
     * This is deprecated in favor of `key_vault_secret_id` as the service is actually looking for a secret, not a certificate
     * 
     */
    @Deprecated /* This is deprecated in favor of `key_vault_secret_id` as the service is actually looking for a secret, not a certificate */
    public Optional<String> keyVaultCertificateId() {
        return Optional.ofNullable(this.keyVaultCertificateId);
    }
    /**
     * @return The ID of the Key Vault Secret that contains the HTTPS certificate.
     * 
     */
    public Optional<String> keyVaultSecretId() {
        return Optional.ofNullable(this.keyVaultSecretId);
    }
    /**
     * @return The minimum TLS protocol version that is used for HTTPS. Possible values are `TLS10` (representing TLS 1.0/1.1), `TLS12` (representing TLS 1.2) and `None` (representing no minimums). Defaults to `TLS12`.
     * 
     */
    public Optional<String> tlsVersion() {
        return Optional.ofNullable(this.tlsVersion);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(EndpointCustomDomainUserManagedHttps defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String keyVaultCertificateId;
        private @Nullable String keyVaultSecretId;
        private @Nullable String tlsVersion;

        public Builder() {
    	      // Empty
        }

        public Builder(EndpointCustomDomainUserManagedHttps defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.keyVaultCertificateId = defaults.keyVaultCertificateId;
    	      this.keyVaultSecretId = defaults.keyVaultSecretId;
    	      this.tlsVersion = defaults.tlsVersion;
        }

        public Builder keyVaultCertificateId(@Nullable String keyVaultCertificateId) {
            this.keyVaultCertificateId = keyVaultCertificateId;
            return this;
        }
        public Builder keyVaultSecretId(@Nullable String keyVaultSecretId) {
            this.keyVaultSecretId = keyVaultSecretId;
            return this;
        }
        public Builder tlsVersion(@Nullable String tlsVersion) {
            this.tlsVersion = tlsVersion;
            return this;
        }        public EndpointCustomDomainUserManagedHttps build() {
            return new EndpointCustomDomainUserManagedHttps(keyVaultCertificateId, keyVaultSecretId, tlsVersion);
        }
    }
}
