// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.consumption.inputs;

import com.pulumi.azure.consumption.inputs.BudgetSubscriptionFilterArgs;
import com.pulumi.azure.consumption.inputs.BudgetSubscriptionNotificationArgs;
import com.pulumi.azure.consumption.inputs.BudgetSubscriptionTimePeriodArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Double;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class BudgetSubscriptionState extends com.pulumi.resources.ResourceArgs {

    public static final BudgetSubscriptionState Empty = new BudgetSubscriptionState();

    /**
     * The total amount of cost to track with the budget.
     * 
     */
    @Import(name="amount")
    private @Nullable Output<Double> amount;

    /**
     * @return The total amount of cost to track with the budget.
     * 
     */
    public Optional<Output<Double>> amount() {
        return Optional.ofNullable(this.amount);
    }

    /**
     * The ETag of the Subscription Consumption Budget.
     * 
     */
    @Import(name="etag")
    private @Nullable Output<String> etag;

    /**
     * @return The ETag of the Subscription Consumption Budget.
     * 
     */
    public Optional<Output<String>> etag() {
        return Optional.ofNullable(this.etag);
    }

    /**
     * A `filter` block as defined below.
     * 
     */
    @Import(name="filter")
    private @Nullable Output<BudgetSubscriptionFilterArgs> filter;

    /**
     * @return A `filter` block as defined below.
     * 
     */
    public Optional<Output<BudgetSubscriptionFilterArgs>> filter() {
        return Optional.ofNullable(this.filter);
    }

    /**
     * The name which should be used for this Subscription Consumption Budget. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name which should be used for this Subscription Consumption Budget. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * One or more `notification` blocks as defined below.
     * 
     */
    @Import(name="notifications")
    private @Nullable Output<List<BudgetSubscriptionNotificationArgs>> notifications;

    /**
     * @return One or more `notification` blocks as defined below.
     * 
     */
    public Optional<Output<List<BudgetSubscriptionNotificationArgs>>> notifications() {
        return Optional.ofNullable(this.notifications);
    }

    /**
     * The ID of the Subscription for which to create a Consumption Budget. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="subscriptionId")
    private @Nullable Output<String> subscriptionId;

    /**
     * @return The ID of the Subscription for which to create a Consumption Budget. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> subscriptionId() {
        return Optional.ofNullable(this.subscriptionId);
    }

    /**
     * The time covered by a budget. Tracking of the amount will be reset based on the time grain. Must be one of `Monthly`, `Quarterly`, `Annually`, `BillingMonth`, `BillingQuarter`, or `BillingYear`. Defaults to `Monthly`.
     * 
     */
    @Import(name="timeGrain")
    private @Nullable Output<String> timeGrain;

    /**
     * @return The time covered by a budget. Tracking of the amount will be reset based on the time grain. Must be one of `Monthly`, `Quarterly`, `Annually`, `BillingMonth`, `BillingQuarter`, or `BillingYear`. Defaults to `Monthly`.
     * 
     */
    public Optional<Output<String>> timeGrain() {
        return Optional.ofNullable(this.timeGrain);
    }

    /**
     * A `time_period` block as defined below.
     * 
     */
    @Import(name="timePeriod")
    private @Nullable Output<BudgetSubscriptionTimePeriodArgs> timePeriod;

    /**
     * @return A `time_period` block as defined below.
     * 
     */
    public Optional<Output<BudgetSubscriptionTimePeriodArgs>> timePeriod() {
        return Optional.ofNullable(this.timePeriod);
    }

    private BudgetSubscriptionState() {}

    private BudgetSubscriptionState(BudgetSubscriptionState $) {
        this.amount = $.amount;
        this.etag = $.etag;
        this.filter = $.filter;
        this.name = $.name;
        this.notifications = $.notifications;
        this.subscriptionId = $.subscriptionId;
        this.timeGrain = $.timeGrain;
        this.timePeriod = $.timePeriod;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BudgetSubscriptionState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BudgetSubscriptionState $;

        public Builder() {
            $ = new BudgetSubscriptionState();
        }

        public Builder(BudgetSubscriptionState defaults) {
            $ = new BudgetSubscriptionState(Objects.requireNonNull(defaults));
        }

        /**
         * @param amount The total amount of cost to track with the budget.
         * 
         * @return builder
         * 
         */
        public Builder amount(@Nullable Output<Double> amount) {
            $.amount = amount;
            return this;
        }

        /**
         * @param amount The total amount of cost to track with the budget.
         * 
         * @return builder
         * 
         */
        public Builder amount(Double amount) {
            return amount(Output.of(amount));
        }

        /**
         * @param etag The ETag of the Subscription Consumption Budget.
         * 
         * @return builder
         * 
         */
        public Builder etag(@Nullable Output<String> etag) {
            $.etag = etag;
            return this;
        }

        /**
         * @param etag The ETag of the Subscription Consumption Budget.
         * 
         * @return builder
         * 
         */
        public Builder etag(String etag) {
            return etag(Output.of(etag));
        }

        /**
         * @param filter A `filter` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder filter(@Nullable Output<BudgetSubscriptionFilterArgs> filter) {
            $.filter = filter;
            return this;
        }

        /**
         * @param filter A `filter` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder filter(BudgetSubscriptionFilterArgs filter) {
            return filter(Output.of(filter));
        }

        /**
         * @param name The name which should be used for this Subscription Consumption Budget. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name which should be used for this Subscription Consumption Budget. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param notifications One or more `notification` blocks as defined below.
         * 
         * @return builder
         * 
         */
        public Builder notifications(@Nullable Output<List<BudgetSubscriptionNotificationArgs>> notifications) {
            $.notifications = notifications;
            return this;
        }

        /**
         * @param notifications One or more `notification` blocks as defined below.
         * 
         * @return builder
         * 
         */
        public Builder notifications(List<BudgetSubscriptionNotificationArgs> notifications) {
            return notifications(Output.of(notifications));
        }

        /**
         * @param notifications One or more `notification` blocks as defined below.
         * 
         * @return builder
         * 
         */
        public Builder notifications(BudgetSubscriptionNotificationArgs... notifications) {
            return notifications(List.of(notifications));
        }

        /**
         * @param subscriptionId The ID of the Subscription for which to create a Consumption Budget. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder subscriptionId(@Nullable Output<String> subscriptionId) {
            $.subscriptionId = subscriptionId;
            return this;
        }

        /**
         * @param subscriptionId The ID of the Subscription for which to create a Consumption Budget. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder subscriptionId(String subscriptionId) {
            return subscriptionId(Output.of(subscriptionId));
        }

        /**
         * @param timeGrain The time covered by a budget. Tracking of the amount will be reset based on the time grain. Must be one of `Monthly`, `Quarterly`, `Annually`, `BillingMonth`, `BillingQuarter`, or `BillingYear`. Defaults to `Monthly`.
         * 
         * @return builder
         * 
         */
        public Builder timeGrain(@Nullable Output<String> timeGrain) {
            $.timeGrain = timeGrain;
            return this;
        }

        /**
         * @param timeGrain The time covered by a budget. Tracking of the amount will be reset based on the time grain. Must be one of `Monthly`, `Quarterly`, `Annually`, `BillingMonth`, `BillingQuarter`, or `BillingYear`. Defaults to `Monthly`.
         * 
         * @return builder
         * 
         */
        public Builder timeGrain(String timeGrain) {
            return timeGrain(Output.of(timeGrain));
        }

        /**
         * @param timePeriod A `time_period` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder timePeriod(@Nullable Output<BudgetSubscriptionTimePeriodArgs> timePeriod) {
            $.timePeriod = timePeriod;
            return this;
        }

        /**
         * @param timePeriod A `time_period` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder timePeriod(BudgetSubscriptionTimePeriodArgs timePeriod) {
            return timePeriod(Output.of(timePeriod));
        }

        public BudgetSubscriptionState build() {
            return $;
        }
    }

}
