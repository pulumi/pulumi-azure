// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.servicebus.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetNamespaceResult {
    /**
     * @return The capacity of the ServiceBus Namespace.
     * 
     */
    private Integer capacity;
    /**
     * @return The primary connection string for the authorization
     * rule `RootManageSharedAccessKey`.
     * 
     */
    private String defaultPrimaryConnectionString;
    /**
     * @return The primary access key for the authorization rule `RootManageSharedAccessKey`.
     * 
     */
    private String defaultPrimaryKey;
    /**
     * @return The secondary connection string for the
     * authorization rule `RootManageSharedAccessKey`.
     * 
     */
    private String defaultSecondaryConnectionString;
    /**
     * @return The secondary access key for the authorization rule `RootManageSharedAccessKey`.
     * 
     */
    private String defaultSecondaryKey;
    /**
     * @return The URL to access the ServiceBus Namespace.
     * 
     */
    private String endpoint;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return The location of the Resource Group in which the ServiceBus Namespace exists.
     * 
     */
    private String location;
    private String name;
    private String resourceGroupName;
    /**
     * @return The Tier used for the ServiceBus Namespace.
     * 
     */
    private String sku;
    /**
     * @return A mapping of tags assigned to the resource.
     * 
     */
    private Map<String,String> tags;
    /**
     * @return Whether or not this ServiceBus Namespace is zone redundant.
     * 
     */
    private Boolean zoneRedundant;

    private GetNamespaceResult() {}
    /**
     * @return The capacity of the ServiceBus Namespace.
     * 
     */
    public Integer capacity() {
        return this.capacity;
    }
    /**
     * @return The primary connection string for the authorization
     * rule `RootManageSharedAccessKey`.
     * 
     */
    public String defaultPrimaryConnectionString() {
        return this.defaultPrimaryConnectionString;
    }
    /**
     * @return The primary access key for the authorization rule `RootManageSharedAccessKey`.
     * 
     */
    public String defaultPrimaryKey() {
        return this.defaultPrimaryKey;
    }
    /**
     * @return The secondary connection string for the
     * authorization rule `RootManageSharedAccessKey`.
     * 
     */
    public String defaultSecondaryConnectionString() {
        return this.defaultSecondaryConnectionString;
    }
    /**
     * @return The secondary access key for the authorization rule `RootManageSharedAccessKey`.
     * 
     */
    public String defaultSecondaryKey() {
        return this.defaultSecondaryKey;
    }
    /**
     * @return The URL to access the ServiceBus Namespace.
     * 
     */
    public String endpoint() {
        return this.endpoint;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The location of the Resource Group in which the ServiceBus Namespace exists.
     * 
     */
    public String location() {
        return this.location;
    }
    public String name() {
        return this.name;
    }
    public String resourceGroupName() {
        return this.resourceGroupName;
    }
    /**
     * @return The Tier used for the ServiceBus Namespace.
     * 
     */
    public String sku() {
        return this.sku;
    }
    /**
     * @return A mapping of tags assigned to the resource.
     * 
     */
    public Map<String,String> tags() {
        return this.tags;
    }
    /**
     * @return Whether or not this ServiceBus Namespace is zone redundant.
     * 
     */
    public Boolean zoneRedundant() {
        return this.zoneRedundant;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetNamespaceResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer capacity;
        private String defaultPrimaryConnectionString;
        private String defaultPrimaryKey;
        private String defaultSecondaryConnectionString;
        private String defaultSecondaryKey;
        private String endpoint;
        private String id;
        private String location;
        private String name;
        private String resourceGroupName;
        private String sku;
        private Map<String,String> tags;
        private Boolean zoneRedundant;
        public Builder() {}
        public Builder(GetNamespaceResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.capacity = defaults.capacity;
    	      this.defaultPrimaryConnectionString = defaults.defaultPrimaryConnectionString;
    	      this.defaultPrimaryKey = defaults.defaultPrimaryKey;
    	      this.defaultSecondaryConnectionString = defaults.defaultSecondaryConnectionString;
    	      this.defaultSecondaryKey = defaults.defaultSecondaryKey;
    	      this.endpoint = defaults.endpoint;
    	      this.id = defaults.id;
    	      this.location = defaults.location;
    	      this.name = defaults.name;
    	      this.resourceGroupName = defaults.resourceGroupName;
    	      this.sku = defaults.sku;
    	      this.tags = defaults.tags;
    	      this.zoneRedundant = defaults.zoneRedundant;
        }

        @CustomType.Setter
        public Builder capacity(Integer capacity) {
            if (capacity == null) {
              throw new MissingRequiredPropertyException("GetNamespaceResult", "capacity");
            }
            this.capacity = capacity;
            return this;
        }
        @CustomType.Setter
        public Builder defaultPrimaryConnectionString(String defaultPrimaryConnectionString) {
            if (defaultPrimaryConnectionString == null) {
              throw new MissingRequiredPropertyException("GetNamespaceResult", "defaultPrimaryConnectionString");
            }
            this.defaultPrimaryConnectionString = defaultPrimaryConnectionString;
            return this;
        }
        @CustomType.Setter
        public Builder defaultPrimaryKey(String defaultPrimaryKey) {
            if (defaultPrimaryKey == null) {
              throw new MissingRequiredPropertyException("GetNamespaceResult", "defaultPrimaryKey");
            }
            this.defaultPrimaryKey = defaultPrimaryKey;
            return this;
        }
        @CustomType.Setter
        public Builder defaultSecondaryConnectionString(String defaultSecondaryConnectionString) {
            if (defaultSecondaryConnectionString == null) {
              throw new MissingRequiredPropertyException("GetNamespaceResult", "defaultSecondaryConnectionString");
            }
            this.defaultSecondaryConnectionString = defaultSecondaryConnectionString;
            return this;
        }
        @CustomType.Setter
        public Builder defaultSecondaryKey(String defaultSecondaryKey) {
            if (defaultSecondaryKey == null) {
              throw new MissingRequiredPropertyException("GetNamespaceResult", "defaultSecondaryKey");
            }
            this.defaultSecondaryKey = defaultSecondaryKey;
            return this;
        }
        @CustomType.Setter
        public Builder endpoint(String endpoint) {
            if (endpoint == null) {
              throw new MissingRequiredPropertyException("GetNamespaceResult", "endpoint");
            }
            this.endpoint = endpoint;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetNamespaceResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder location(String location) {
            if (location == null) {
              throw new MissingRequiredPropertyException("GetNamespaceResult", "location");
            }
            this.location = location;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetNamespaceResult", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder resourceGroupName(String resourceGroupName) {
            if (resourceGroupName == null) {
              throw new MissingRequiredPropertyException("GetNamespaceResult", "resourceGroupName");
            }
            this.resourceGroupName = resourceGroupName;
            return this;
        }
        @CustomType.Setter
        public Builder sku(String sku) {
            if (sku == null) {
              throw new MissingRequiredPropertyException("GetNamespaceResult", "sku");
            }
            this.sku = sku;
            return this;
        }
        @CustomType.Setter
        public Builder tags(Map<String,String> tags) {
            if (tags == null) {
              throw new MissingRequiredPropertyException("GetNamespaceResult", "tags");
            }
            this.tags = tags;
            return this;
        }
        @CustomType.Setter
        public Builder zoneRedundant(Boolean zoneRedundant) {
            if (zoneRedundant == null) {
              throw new MissingRequiredPropertyException("GetNamespaceResult", "zoneRedundant");
            }
            this.zoneRedundant = zoneRedundant;
            return this;
        }
        public GetNamespaceResult build() {
            final var _resultValue = new GetNamespaceResult();
            _resultValue.capacity = capacity;
            _resultValue.defaultPrimaryConnectionString = defaultPrimaryConnectionString;
            _resultValue.defaultPrimaryKey = defaultPrimaryKey;
            _resultValue.defaultSecondaryConnectionString = defaultSecondaryConnectionString;
            _resultValue.defaultSecondaryKey = defaultSecondaryKey;
            _resultValue.endpoint = endpoint;
            _resultValue.id = id;
            _resultValue.location = location;
            _resultValue.name = name;
            _resultValue.resourceGroupName = resourceGroupName;
            _resultValue.sku = sku;
            _resultValue.tags = tags;
            _resultValue.zoneRedundant = zoneRedundant;
            return _resultValue;
        }
    }
}
