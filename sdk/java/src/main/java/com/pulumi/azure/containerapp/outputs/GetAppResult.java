// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.containerapp.outputs;

import com.pulumi.azure.containerapp.outputs.GetAppDapr;
import com.pulumi.azure.containerapp.outputs.GetAppIdentity;
import com.pulumi.azure.containerapp.outputs.GetAppIngress;
import com.pulumi.azure.containerapp.outputs.GetAppRegistry;
import com.pulumi.azure.containerapp.outputs.GetAppSecret;
import com.pulumi.azure.containerapp.outputs.GetAppTemplate;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetAppResult {
    /**
     * @return The ID of the Container App Environment this Container App is linked to.
     * 
     */
    private String containerAppEnvironmentId;
    private String customDomainVerificationId;
    /**
     * @return A `dapr` block as detailed below.
     * 
     */
    private List<GetAppDapr> daprs;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return Resource ID for the User Assigned Managed identity to use when pulling from the Container Registry.
     * 
     */
    private List<GetAppIdentity> identities;
    /**
     * @return An `ingress` block as detailed below.
     * 
     */
    private List<GetAppIngress> ingresses;
    private String latestRevisionFqdn;
    private String latestRevisionName;
    private String location;
    /**
     * @return The hostname of the Certificate. Must be the CN or a named SAN in the certificate.
     * 
     */
    private String name;
    private List<String> outboundIpAddresses;
    /**
     * @return A `registry` block as detailed below.
     * 
     */
    private List<GetAppRegistry> registries;
    private String resourceGroupName;
    /**
     * @return The revision mode of the Container App.
     * 
     */
    private String revisionMode;
    /**
     * @return One or more `secret` block as detailed below.
     * 
     */
    private List<GetAppSecret> secrets;
    /**
     * @return A mapping of tags to assign to the Container App.
     * 
     */
    private Map<String,String> tags;
    /**
     * @return A `template` block as detailed below.
     * 
     */
    private List<GetAppTemplate> templates;
    /**
     * @return The name of the Workload Profile in the Container App Environment in which this Container App is running.
     * 
     */
    private String workloadProfileName;

    private GetAppResult() {}
    /**
     * @return The ID of the Container App Environment this Container App is linked to.
     * 
     */
    public String containerAppEnvironmentId() {
        return this.containerAppEnvironmentId;
    }
    public String customDomainVerificationId() {
        return this.customDomainVerificationId;
    }
    /**
     * @return A `dapr` block as detailed below.
     * 
     */
    public List<GetAppDapr> daprs() {
        return this.daprs;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Resource ID for the User Assigned Managed identity to use when pulling from the Container Registry.
     * 
     */
    public List<GetAppIdentity> identities() {
        return this.identities;
    }
    /**
     * @return An `ingress` block as detailed below.
     * 
     */
    public List<GetAppIngress> ingresses() {
        return this.ingresses;
    }
    public String latestRevisionFqdn() {
        return this.latestRevisionFqdn;
    }
    public String latestRevisionName() {
        return this.latestRevisionName;
    }
    public String location() {
        return this.location;
    }
    /**
     * @return The hostname of the Certificate. Must be the CN or a named SAN in the certificate.
     * 
     */
    public String name() {
        return this.name;
    }
    public List<String> outboundIpAddresses() {
        return this.outboundIpAddresses;
    }
    /**
     * @return A `registry` block as detailed below.
     * 
     */
    public List<GetAppRegistry> registries() {
        return this.registries;
    }
    public String resourceGroupName() {
        return this.resourceGroupName;
    }
    /**
     * @return The revision mode of the Container App.
     * 
     */
    public String revisionMode() {
        return this.revisionMode;
    }
    /**
     * @return One or more `secret` block as detailed below.
     * 
     */
    public List<GetAppSecret> secrets() {
        return this.secrets;
    }
    /**
     * @return A mapping of tags to assign to the Container App.
     * 
     */
    public Map<String,String> tags() {
        return this.tags;
    }
    /**
     * @return A `template` block as detailed below.
     * 
     */
    public List<GetAppTemplate> templates() {
        return this.templates;
    }
    /**
     * @return The name of the Workload Profile in the Container App Environment in which this Container App is running.
     * 
     */
    public String workloadProfileName() {
        return this.workloadProfileName;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAppResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String containerAppEnvironmentId;
        private String customDomainVerificationId;
        private List<GetAppDapr> daprs;
        private String id;
        private List<GetAppIdentity> identities;
        private List<GetAppIngress> ingresses;
        private String latestRevisionFqdn;
        private String latestRevisionName;
        private String location;
        private String name;
        private List<String> outboundIpAddresses;
        private List<GetAppRegistry> registries;
        private String resourceGroupName;
        private String revisionMode;
        private List<GetAppSecret> secrets;
        private Map<String,String> tags;
        private List<GetAppTemplate> templates;
        private String workloadProfileName;
        public Builder() {}
        public Builder(GetAppResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.containerAppEnvironmentId = defaults.containerAppEnvironmentId;
    	      this.customDomainVerificationId = defaults.customDomainVerificationId;
    	      this.daprs = defaults.daprs;
    	      this.id = defaults.id;
    	      this.identities = defaults.identities;
    	      this.ingresses = defaults.ingresses;
    	      this.latestRevisionFqdn = defaults.latestRevisionFqdn;
    	      this.latestRevisionName = defaults.latestRevisionName;
    	      this.location = defaults.location;
    	      this.name = defaults.name;
    	      this.outboundIpAddresses = defaults.outboundIpAddresses;
    	      this.registries = defaults.registries;
    	      this.resourceGroupName = defaults.resourceGroupName;
    	      this.revisionMode = defaults.revisionMode;
    	      this.secrets = defaults.secrets;
    	      this.tags = defaults.tags;
    	      this.templates = defaults.templates;
    	      this.workloadProfileName = defaults.workloadProfileName;
        }

        @CustomType.Setter
        public Builder containerAppEnvironmentId(String containerAppEnvironmentId) {
            this.containerAppEnvironmentId = Objects.requireNonNull(containerAppEnvironmentId);
            return this;
        }
        @CustomType.Setter
        public Builder customDomainVerificationId(String customDomainVerificationId) {
            this.customDomainVerificationId = Objects.requireNonNull(customDomainVerificationId);
            return this;
        }
        @CustomType.Setter
        public Builder daprs(List<GetAppDapr> daprs) {
            this.daprs = Objects.requireNonNull(daprs);
            return this;
        }
        public Builder daprs(GetAppDapr... daprs) {
            return daprs(List.of(daprs));
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder identities(List<GetAppIdentity> identities) {
            this.identities = Objects.requireNonNull(identities);
            return this;
        }
        public Builder identities(GetAppIdentity... identities) {
            return identities(List.of(identities));
        }
        @CustomType.Setter
        public Builder ingresses(List<GetAppIngress> ingresses) {
            this.ingresses = Objects.requireNonNull(ingresses);
            return this;
        }
        public Builder ingresses(GetAppIngress... ingresses) {
            return ingresses(List.of(ingresses));
        }
        @CustomType.Setter
        public Builder latestRevisionFqdn(String latestRevisionFqdn) {
            this.latestRevisionFqdn = Objects.requireNonNull(latestRevisionFqdn);
            return this;
        }
        @CustomType.Setter
        public Builder latestRevisionName(String latestRevisionName) {
            this.latestRevisionName = Objects.requireNonNull(latestRevisionName);
            return this;
        }
        @CustomType.Setter
        public Builder location(String location) {
            this.location = Objects.requireNonNull(location);
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder outboundIpAddresses(List<String> outboundIpAddresses) {
            this.outboundIpAddresses = Objects.requireNonNull(outboundIpAddresses);
            return this;
        }
        public Builder outboundIpAddresses(String... outboundIpAddresses) {
            return outboundIpAddresses(List.of(outboundIpAddresses));
        }
        @CustomType.Setter
        public Builder registries(List<GetAppRegistry> registries) {
            this.registries = Objects.requireNonNull(registries);
            return this;
        }
        public Builder registries(GetAppRegistry... registries) {
            return registries(List.of(registries));
        }
        @CustomType.Setter
        public Builder resourceGroupName(String resourceGroupName) {
            this.resourceGroupName = Objects.requireNonNull(resourceGroupName);
            return this;
        }
        @CustomType.Setter
        public Builder revisionMode(String revisionMode) {
            this.revisionMode = Objects.requireNonNull(revisionMode);
            return this;
        }
        @CustomType.Setter
        public Builder secrets(List<GetAppSecret> secrets) {
            this.secrets = Objects.requireNonNull(secrets);
            return this;
        }
        public Builder secrets(GetAppSecret... secrets) {
            return secrets(List.of(secrets));
        }
        @CustomType.Setter
        public Builder tags(Map<String,String> tags) {
            this.tags = Objects.requireNonNull(tags);
            return this;
        }
        @CustomType.Setter
        public Builder templates(List<GetAppTemplate> templates) {
            this.templates = Objects.requireNonNull(templates);
            return this;
        }
        public Builder templates(GetAppTemplate... templates) {
            return templates(List.of(templates));
        }
        @CustomType.Setter
        public Builder workloadProfileName(String workloadProfileName) {
            this.workloadProfileName = Objects.requireNonNull(workloadProfileName);
            return this;
        }
        public GetAppResult build() {
            final var _resultValue = new GetAppResult();
            _resultValue.containerAppEnvironmentId = containerAppEnvironmentId;
            _resultValue.customDomainVerificationId = customDomainVerificationId;
            _resultValue.daprs = daprs;
            _resultValue.id = id;
            _resultValue.identities = identities;
            _resultValue.ingresses = ingresses;
            _resultValue.latestRevisionFqdn = latestRevisionFqdn;
            _resultValue.latestRevisionName = latestRevisionName;
            _resultValue.location = location;
            _resultValue.name = name;
            _resultValue.outboundIpAddresses = outboundIpAddresses;
            _resultValue.registries = registries;
            _resultValue.resourceGroupName = resourceGroupName;
            _resultValue.revisionMode = revisionMode;
            _resultValue.secrets = secrets;
            _resultValue.tags = tags;
            _resultValue.templates = templates;
            _resultValue.workloadProfileName = workloadProfileName;
            return _resultValue;
        }
    }
}
