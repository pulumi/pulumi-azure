// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.containerapp.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class JobSecretArgs extends com.pulumi.resources.ResourceArgs {

    public static final JobSecretArgs Empty = new JobSecretArgs();

    /**
     * The identity to use for accessing the Key Vault secret reference. This can either be the Resource ID of a User Assigned Identity, or `System` for the System Assigned Identity.
     * 
     * !&gt; **Note:** `identity` must be used together with `key_vault_secret_id`
     * 
     */
    @Import(name="identity")
    private @Nullable Output<String> identity;

    /**
     * @return The identity to use for accessing the Key Vault secret reference. This can either be the Resource ID of a User Assigned Identity, or `System` for the System Assigned Identity.
     * 
     * !&gt; **Note:** `identity` must be used together with `key_vault_secret_id`
     * 
     */
    public Optional<Output<String>> identity() {
        return Optional.ofNullable(this.identity);
    }

    /**
     * The ID of a Key Vault secret. This can be a versioned or version-less ID.
     * 
     * !&gt; **Note:** When using `key_vault_secret_id`, `ignore_changes` should be used to ignore any changes to `value`.
     * 
     */
    @Import(name="keyVaultSecretId")
    private @Nullable Output<String> keyVaultSecretId;

    /**
     * @return The ID of a Key Vault secret. This can be a versioned or version-less ID.
     * 
     * !&gt; **Note:** When using `key_vault_secret_id`, `ignore_changes` should be used to ignore any changes to `value`.
     * 
     */
    public Optional<Output<String>> keyVaultSecretId() {
        return Optional.ofNullable(this.keyVaultSecretId);
    }

    /**
     * The secret name.
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    /**
     * @return The secret name.
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    /**
     * The value for this secret.
     * 
     * !&gt; **Note:** `value` will be ignored if `key_vault_secret_id` and `identity` are provided.
     * 
     */
    @Import(name="value")
    private @Nullable Output<String> value;

    /**
     * @return The value for this secret.
     * 
     * !&gt; **Note:** `value` will be ignored if `key_vault_secret_id` and `identity` are provided.
     * 
     */
    public Optional<Output<String>> value() {
        return Optional.ofNullable(this.value);
    }

    private JobSecretArgs() {}

    private JobSecretArgs(JobSecretArgs $) {
        this.identity = $.identity;
        this.keyVaultSecretId = $.keyVaultSecretId;
        this.name = $.name;
        this.value = $.value;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(JobSecretArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private JobSecretArgs $;

        public Builder() {
            $ = new JobSecretArgs();
        }

        public Builder(JobSecretArgs defaults) {
            $ = new JobSecretArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param identity The identity to use for accessing the Key Vault secret reference. This can either be the Resource ID of a User Assigned Identity, or `System` for the System Assigned Identity.
         * 
         * !&gt; **Note:** `identity` must be used together with `key_vault_secret_id`
         * 
         * @return builder
         * 
         */
        public Builder identity(@Nullable Output<String> identity) {
            $.identity = identity;
            return this;
        }

        /**
         * @param identity The identity to use for accessing the Key Vault secret reference. This can either be the Resource ID of a User Assigned Identity, or `System` for the System Assigned Identity.
         * 
         * !&gt; **Note:** `identity` must be used together with `key_vault_secret_id`
         * 
         * @return builder
         * 
         */
        public Builder identity(String identity) {
            return identity(Output.of(identity));
        }

        /**
         * @param keyVaultSecretId The ID of a Key Vault secret. This can be a versioned or version-less ID.
         * 
         * !&gt; **Note:** When using `key_vault_secret_id`, `ignore_changes` should be used to ignore any changes to `value`.
         * 
         * @return builder
         * 
         */
        public Builder keyVaultSecretId(@Nullable Output<String> keyVaultSecretId) {
            $.keyVaultSecretId = keyVaultSecretId;
            return this;
        }

        /**
         * @param keyVaultSecretId The ID of a Key Vault secret. This can be a versioned or version-less ID.
         * 
         * !&gt; **Note:** When using `key_vault_secret_id`, `ignore_changes` should be used to ignore any changes to `value`.
         * 
         * @return builder
         * 
         */
        public Builder keyVaultSecretId(String keyVaultSecretId) {
            return keyVaultSecretId(Output.of(keyVaultSecretId));
        }

        /**
         * @param name The secret name.
         * 
         * @return builder
         * 
         */
        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The secret name.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param value The value for this secret.
         * 
         * !&gt; **Note:** `value` will be ignored if `key_vault_secret_id` and `identity` are provided.
         * 
         * @return builder
         * 
         */
        public Builder value(@Nullable Output<String> value) {
            $.value = value;
            return this;
        }

        /**
         * @param value The value for this secret.
         * 
         * !&gt; **Note:** `value` will be ignored if `key_vault_secret_id` and `identity` are provided.
         * 
         * @return builder
         * 
         */
        public Builder value(String value) {
            return value(Output.of(value));
        }

        public JobSecretArgs build() {
            if ($.name == null) {
                throw new MissingRequiredPropertyException("JobSecretArgs", "name");
            }
            return $;
        }
    }

}
