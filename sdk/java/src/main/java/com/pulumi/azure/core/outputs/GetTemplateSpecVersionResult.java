// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.core.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetTemplateSpecVersionResult {
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private String name;
    private String resourceGroupName;
    /**
     * @return A mapping of tags assigned to the Template.
     * 
     */
    private Map<String,String> tags;
    /**
     * @return The ARM Template body of the Template Spec Version.
     * 
     */
    private String templateBody;
    private String version;

    private GetTemplateSpecVersionResult() {}
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public String name() {
        return this.name;
    }
    public String resourceGroupName() {
        return this.resourceGroupName;
    }
    /**
     * @return A mapping of tags assigned to the Template.
     * 
     */
    public Map<String,String> tags() {
        return this.tags;
    }
    /**
     * @return The ARM Template body of the Template Spec Version.
     * 
     */
    public String templateBody() {
        return this.templateBody;
    }
    public String version() {
        return this.version;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetTemplateSpecVersionResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String id;
        private String name;
        private String resourceGroupName;
        private Map<String,String> tags;
        private String templateBody;
        private String version;
        public Builder() {}
        public Builder(GetTemplateSpecVersionResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.resourceGroupName = defaults.resourceGroupName;
    	      this.tags = defaults.tags;
    	      this.templateBody = defaults.templateBody;
    	      this.version = defaults.version;
        }

        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetTemplateSpecVersionResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetTemplateSpecVersionResult", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder resourceGroupName(String resourceGroupName) {
            if (resourceGroupName == null) {
              throw new MissingRequiredPropertyException("GetTemplateSpecVersionResult", "resourceGroupName");
            }
            this.resourceGroupName = resourceGroupName;
            return this;
        }
        @CustomType.Setter
        public Builder tags(Map<String,String> tags) {
            if (tags == null) {
              throw new MissingRequiredPropertyException("GetTemplateSpecVersionResult", "tags");
            }
            this.tags = tags;
            return this;
        }
        @CustomType.Setter
        public Builder templateBody(String templateBody) {
            if (templateBody == null) {
              throw new MissingRequiredPropertyException("GetTemplateSpecVersionResult", "templateBody");
            }
            this.templateBody = templateBody;
            return this;
        }
        @CustomType.Setter
        public Builder version(String version) {
            if (version == null) {
              throw new MissingRequiredPropertyException("GetTemplateSpecVersionResult", "version");
            }
            this.version = version;
            return this;
        }
        public GetTemplateSpecVersionResult build() {
            final var _resultValue = new GetTemplateSpecVersionResult();
            _resultValue.id = id;
            _resultValue.name = name;
            _resultValue.resourceGroupName = resourceGroupName;
            _resultValue.tags = tags;
            _resultValue.templateBody = templateBody;
            _resultValue.version = version;
            return _resultValue;
        }
    }
}
