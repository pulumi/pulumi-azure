// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.network.inputs;

import com.pulumi.azure.network.inputs.FirewallApplicationRuleCollectionRuleArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class FirewallApplicationRuleCollectionState extends com.pulumi.resources.ResourceArgs {

    public static final FirewallApplicationRuleCollectionState Empty = new FirewallApplicationRuleCollectionState();

    /**
     * Specifies the action the rule will apply to matching traffic. Possible values are `Allow` and `Deny`.
     * 
     */
    @Import(name="action")
    private @Nullable Output<String> action;

    /**
     * @return Specifies the action the rule will apply to matching traffic. Possible values are `Allow` and `Deny`.
     * 
     */
    public Optional<Output<String>> action() {
        return Optional.ofNullable(this.action);
    }

    /**
     * Specifies the name of the Firewall in which the Application Rule Collection should be created. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="azureFirewallName")
    private @Nullable Output<String> azureFirewallName;

    /**
     * @return Specifies the name of the Firewall in which the Application Rule Collection should be created. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> azureFirewallName() {
        return Optional.ofNullable(this.azureFirewallName);
    }

    /**
     * Specifies the name of the Application Rule Collection which must be unique within the Firewall. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Specifies the name of the Application Rule Collection which must be unique within the Firewall. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Specifies the priority of the rule collection. Possible values are between `100` - `65000`.
     * 
     */
    @Import(name="priority")
    private @Nullable Output<Integer> priority;

    /**
     * @return Specifies the priority of the rule collection. Possible values are between `100` - `65000`.
     * 
     */
    public Optional<Output<Integer>> priority() {
        return Optional.ofNullable(this.priority);
    }

    /**
     * Specifies the name of the Resource Group in which the Firewall exists. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="resourceGroupName")
    private @Nullable Output<String> resourceGroupName;

    /**
     * @return Specifies the name of the Resource Group in which the Firewall exists. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> resourceGroupName() {
        return Optional.ofNullable(this.resourceGroupName);
    }

    /**
     * One or more `rule` blocks as defined below.
     * 
     */
    @Import(name="rules")
    private @Nullable Output<List<FirewallApplicationRuleCollectionRuleArgs>> rules;

    /**
     * @return One or more `rule` blocks as defined below.
     * 
     */
    public Optional<Output<List<FirewallApplicationRuleCollectionRuleArgs>>> rules() {
        return Optional.ofNullable(this.rules);
    }

    private FirewallApplicationRuleCollectionState() {}

    private FirewallApplicationRuleCollectionState(FirewallApplicationRuleCollectionState $) {
        this.action = $.action;
        this.azureFirewallName = $.azureFirewallName;
        this.name = $.name;
        this.priority = $.priority;
        this.resourceGroupName = $.resourceGroupName;
        this.rules = $.rules;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FirewallApplicationRuleCollectionState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FirewallApplicationRuleCollectionState $;

        public Builder() {
            $ = new FirewallApplicationRuleCollectionState();
        }

        public Builder(FirewallApplicationRuleCollectionState defaults) {
            $ = new FirewallApplicationRuleCollectionState(Objects.requireNonNull(defaults));
        }

        /**
         * @param action Specifies the action the rule will apply to matching traffic. Possible values are `Allow` and `Deny`.
         * 
         * @return builder
         * 
         */
        public Builder action(@Nullable Output<String> action) {
            $.action = action;
            return this;
        }

        /**
         * @param action Specifies the action the rule will apply to matching traffic. Possible values are `Allow` and `Deny`.
         * 
         * @return builder
         * 
         */
        public Builder action(String action) {
            return action(Output.of(action));
        }

        /**
         * @param azureFirewallName Specifies the name of the Firewall in which the Application Rule Collection should be created. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder azureFirewallName(@Nullable Output<String> azureFirewallName) {
            $.azureFirewallName = azureFirewallName;
            return this;
        }

        /**
         * @param azureFirewallName Specifies the name of the Firewall in which the Application Rule Collection should be created. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder azureFirewallName(String azureFirewallName) {
            return azureFirewallName(Output.of(azureFirewallName));
        }

        /**
         * @param name Specifies the name of the Application Rule Collection which must be unique within the Firewall. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Specifies the name of the Application Rule Collection which must be unique within the Firewall. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param priority Specifies the priority of the rule collection. Possible values are between `100` - `65000`.
         * 
         * @return builder
         * 
         */
        public Builder priority(@Nullable Output<Integer> priority) {
            $.priority = priority;
            return this;
        }

        /**
         * @param priority Specifies the priority of the rule collection. Possible values are between `100` - `65000`.
         * 
         * @return builder
         * 
         */
        public Builder priority(Integer priority) {
            return priority(Output.of(priority));
        }

        /**
         * @param resourceGroupName Specifies the name of the Resource Group in which the Firewall exists. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(@Nullable Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName Specifies the name of the Resource Group in which the Firewall exists. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        /**
         * @param rules One or more `rule` blocks as defined below.
         * 
         * @return builder
         * 
         */
        public Builder rules(@Nullable Output<List<FirewallApplicationRuleCollectionRuleArgs>> rules) {
            $.rules = rules;
            return this;
        }

        /**
         * @param rules One or more `rule` blocks as defined below.
         * 
         * @return builder
         * 
         */
        public Builder rules(List<FirewallApplicationRuleCollectionRuleArgs> rules) {
            return rules(Output.of(rules));
        }

        /**
         * @param rules One or more `rule` blocks as defined below.
         * 
         * @return builder
         * 
         */
        public Builder rules(FirewallApplicationRuleCollectionRuleArgs... rules) {
            return rules(List.of(rules));
        }

        public FirewallApplicationRuleCollectionState build() {
            return $;
        }
    }

}
