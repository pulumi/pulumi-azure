// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.netapp.outputs;

import com.pulumi.azure.netapp.outputs.GetVolumeDataProtectionReplication;
import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetVolumeResult {
    private String accountName;
    /**
     * @return Volume data protection block
     * 
     */
    private List<GetVolumeDataProtectionReplication> dataProtectionReplications;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return The Azure Region where the NetApp Volume exists.
     * 
     */
    private String location;
    /**
     * @return A list of IPv4 Addresses which should be used to mount the volume.
     * 
     */
    private List<String> mountIpAddresses;
    private String name;
    /**
     * @return Network features in use `Basic` or `Standard`.
     * 
     */
    private String networkFeatures;
    private String poolName;
    /**
     * @return A list of protocol types enabled on volume.
     * 
     */
    private List<String> protocols;
    private String resourceGroupName;
    /**
     * @return Volume security style
     * 
     */
    private @Nullable String securityStyle;
    /**
     * @return The service level of the file system.
     * 
     */
    private String serviceLevel;
    /**
     * @return The maximum Storage Quota in Gigabytes allowed for a file system.
     * 
     */
    private Integer storageQuotaInGb;
    /**
     * @return The ID of a Subnet in which the NetApp Volume resides.
     * 
     */
    private String subnetId;
    /**
     * @return The unique file path of the volume.
     * 
     */
    private String volumePath;
    /**
     * @return The Availability Zone in which the Volume is located.
     * 
     */
    private String zone;

    private GetVolumeResult() {}
    public String accountName() {
        return this.accountName;
    }
    /**
     * @return Volume data protection block
     * 
     */
    public List<GetVolumeDataProtectionReplication> dataProtectionReplications() {
        return this.dataProtectionReplications;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The Azure Region where the NetApp Volume exists.
     * 
     */
    public String location() {
        return this.location;
    }
    /**
     * @return A list of IPv4 Addresses which should be used to mount the volume.
     * 
     */
    public List<String> mountIpAddresses() {
        return this.mountIpAddresses;
    }
    public String name() {
        return this.name;
    }
    /**
     * @return Network features in use `Basic` or `Standard`.
     * 
     */
    public String networkFeatures() {
        return this.networkFeatures;
    }
    public String poolName() {
        return this.poolName;
    }
    /**
     * @return A list of protocol types enabled on volume.
     * 
     */
    public List<String> protocols() {
        return this.protocols;
    }
    public String resourceGroupName() {
        return this.resourceGroupName;
    }
    /**
     * @return Volume security style
     * 
     */
    public Optional<String> securityStyle() {
        return Optional.ofNullable(this.securityStyle);
    }
    /**
     * @return The service level of the file system.
     * 
     */
    public String serviceLevel() {
        return this.serviceLevel;
    }
    /**
     * @return The maximum Storage Quota in Gigabytes allowed for a file system.
     * 
     */
    public Integer storageQuotaInGb() {
        return this.storageQuotaInGb;
    }
    /**
     * @return The ID of a Subnet in which the NetApp Volume resides.
     * 
     */
    public String subnetId() {
        return this.subnetId;
    }
    /**
     * @return The unique file path of the volume.
     * 
     */
    public String volumePath() {
        return this.volumePath;
    }
    /**
     * @return The Availability Zone in which the Volume is located.
     * 
     */
    public String zone() {
        return this.zone;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetVolumeResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String accountName;
        private List<GetVolumeDataProtectionReplication> dataProtectionReplications;
        private String id;
        private String location;
        private List<String> mountIpAddresses;
        private String name;
        private String networkFeatures;
        private String poolName;
        private List<String> protocols;
        private String resourceGroupName;
        private @Nullable String securityStyle;
        private String serviceLevel;
        private Integer storageQuotaInGb;
        private String subnetId;
        private String volumePath;
        private String zone;
        public Builder() {}
        public Builder(GetVolumeResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accountName = defaults.accountName;
    	      this.dataProtectionReplications = defaults.dataProtectionReplications;
    	      this.id = defaults.id;
    	      this.location = defaults.location;
    	      this.mountIpAddresses = defaults.mountIpAddresses;
    	      this.name = defaults.name;
    	      this.networkFeatures = defaults.networkFeatures;
    	      this.poolName = defaults.poolName;
    	      this.protocols = defaults.protocols;
    	      this.resourceGroupName = defaults.resourceGroupName;
    	      this.securityStyle = defaults.securityStyle;
    	      this.serviceLevel = defaults.serviceLevel;
    	      this.storageQuotaInGb = defaults.storageQuotaInGb;
    	      this.subnetId = defaults.subnetId;
    	      this.volumePath = defaults.volumePath;
    	      this.zone = defaults.zone;
        }

        @CustomType.Setter
        public Builder accountName(String accountName) {
            this.accountName = Objects.requireNonNull(accountName);
            return this;
        }
        @CustomType.Setter
        public Builder dataProtectionReplications(List<GetVolumeDataProtectionReplication> dataProtectionReplications) {
            this.dataProtectionReplications = Objects.requireNonNull(dataProtectionReplications);
            return this;
        }
        public Builder dataProtectionReplications(GetVolumeDataProtectionReplication... dataProtectionReplications) {
            return dataProtectionReplications(List.of(dataProtectionReplications));
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder location(String location) {
            this.location = Objects.requireNonNull(location);
            return this;
        }
        @CustomType.Setter
        public Builder mountIpAddresses(List<String> mountIpAddresses) {
            this.mountIpAddresses = Objects.requireNonNull(mountIpAddresses);
            return this;
        }
        public Builder mountIpAddresses(String... mountIpAddresses) {
            return mountIpAddresses(List.of(mountIpAddresses));
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder networkFeatures(String networkFeatures) {
            this.networkFeatures = Objects.requireNonNull(networkFeatures);
            return this;
        }
        @CustomType.Setter
        public Builder poolName(String poolName) {
            this.poolName = Objects.requireNonNull(poolName);
            return this;
        }
        @CustomType.Setter
        public Builder protocols(List<String> protocols) {
            this.protocols = Objects.requireNonNull(protocols);
            return this;
        }
        public Builder protocols(String... protocols) {
            return protocols(List.of(protocols));
        }
        @CustomType.Setter
        public Builder resourceGroupName(String resourceGroupName) {
            this.resourceGroupName = Objects.requireNonNull(resourceGroupName);
            return this;
        }
        @CustomType.Setter
        public Builder securityStyle(@Nullable String securityStyle) {
            this.securityStyle = securityStyle;
            return this;
        }
        @CustomType.Setter
        public Builder serviceLevel(String serviceLevel) {
            this.serviceLevel = Objects.requireNonNull(serviceLevel);
            return this;
        }
        @CustomType.Setter
        public Builder storageQuotaInGb(Integer storageQuotaInGb) {
            this.storageQuotaInGb = Objects.requireNonNull(storageQuotaInGb);
            return this;
        }
        @CustomType.Setter
        public Builder subnetId(String subnetId) {
            this.subnetId = Objects.requireNonNull(subnetId);
            return this;
        }
        @CustomType.Setter
        public Builder volumePath(String volumePath) {
            this.volumePath = Objects.requireNonNull(volumePath);
            return this;
        }
        @CustomType.Setter
        public Builder zone(String zone) {
            this.zone = Objects.requireNonNull(zone);
            return this;
        }
        public GetVolumeResult build() {
            final var o = new GetVolumeResult();
            o.accountName = accountName;
            o.dataProtectionReplications = dataProtectionReplications;
            o.id = id;
            o.location = location;
            o.mountIpAddresses = mountIpAddresses;
            o.name = name;
            o.networkFeatures = networkFeatures;
            o.poolName = poolName;
            o.protocols = protocols;
            o.resourceGroupName = resourceGroupName;
            o.securityStyle = securityStyle;
            o.serviceLevel = serviceLevel;
            o.storageQuotaInGb = storageQuotaInGb;
            o.subnetId = subnetId;
            o.volumePath = volumePath;
            o.zone = zone;
            return o;
        }
    }
}
