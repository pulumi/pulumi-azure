// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.storage;

import com.pulumi.azure.Utilities;
import com.pulumi.azure.storage.SyncServerEndpointArgs;
import com.pulumi.azure.storage.inputs.SyncServerEndpointState;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Manages a Storage Sync Server Endpoint.
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.azure.core.ResourceGroup;
 * import com.pulumi.azure.core.ResourceGroupArgs;
 * import com.pulumi.azure.storage.Sync;
 * import com.pulumi.azure.storage.SyncArgs;
 * import com.pulumi.azure.storage.SyncGroup;
 * import com.pulumi.azure.storage.SyncGroupArgs;
 * import com.pulumi.azure.storage.Account;
 * import com.pulumi.azure.storage.AccountArgs;
 * import com.pulumi.azure.storage.Share;
 * import com.pulumi.azure.storage.ShareArgs;
 * import com.pulumi.azure.storage.inputs.ShareAclArgs;
 * import com.pulumi.azure.storage.SyncServerEndpoint;
 * import com.pulumi.azure.storage.SyncServerEndpointArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new ResourceGroup(&#34;example&#34;, ResourceGroupArgs.builder()        
 *             .name(&#34;example-resources&#34;)
 *             .location(&#34;West Europe&#34;)
 *             .build());
 * 
 *         var exampleSync = new Sync(&#34;exampleSync&#34;, SyncArgs.builder()        
 *             .name(&#34;example-storage-sync&#34;)
 *             .resourceGroupName(example.name())
 *             .location(example.location())
 *             .build());
 * 
 *         var exampleSyncGroup = new SyncGroup(&#34;exampleSyncGroup&#34;, SyncGroupArgs.builder()        
 *             .name(&#34;example-storage-sync-group&#34;)
 *             .storageSyncId(exampleSync.id())
 *             .build());
 * 
 *         var exampleAccount = new Account(&#34;exampleAccount&#34;, AccountArgs.builder()        
 *             .name(&#34;example-storage-account&#34;)
 *             .resourceGroupName(example.name())
 *             .location(example.location())
 *             .accountTier(&#34;Standard&#34;)
 *             .accountReplicationType(&#34;LRS&#34;)
 *             .build());
 * 
 *         var exampleShare = new Share(&#34;exampleShare&#34;, ShareArgs.builder()        
 *             .name(&#34;example-storage-share&#34;)
 *             .storageAccountName(exampleAccount.name())
 *             .quota(1)
 *             .acls(ShareAclArgs.builder()
 *                 .id(&#34;GhostedRecall&#34;)
 *                 .accessPolicies(ShareAclAccessPolicyArgs.builder()
 *                     .permissions(&#34;r&#34;)
 *                     .build())
 *                 .build())
 *             .build());
 * 
 *         var exampleSyncServerEndpoint = new SyncServerEndpoint(&#34;exampleSyncServerEndpoint&#34;, SyncServerEndpointArgs.builder()        
 *             .name(&#34;example-storage-sync-server-endpoint&#34;)
 *             .storageSyncGroupId(exampleSyncGroup.id())
 *             .registeredServerId(exampleSync.registeredServers().applyValue(registeredServers -&gt; registeredServers[0]))
 *             .build());
 * 
 *     }
 * }
 * ```
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * Storage Sync Server Endpoints can be imported using the `resource id`, e.g.
 * 
 * ```sh
 * $ pulumi import azure:storage/syncServerEndpoint:SyncServerEndpoint example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.StorageSync/storageSyncServices/sync1/syncGroups/syncGroup1/serverEndpoints/endpoint1
 * ```
 * 
 */
@ResourceType(type="azure:storage/syncServerEndpoint:SyncServerEndpoint")
public class SyncServerEndpoint extends com.pulumi.resources.CustomResource {
    /**
     * Is Cloud Tiering Enabled? Defaults to `false`.
     * 
     */
    @Export(name="cloudTieringEnabled", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> cloudTieringEnabled;

    /**
     * @return Is Cloud Tiering Enabled? Defaults to `false`.
     * 
     */
    public Output<Optional<Boolean>> cloudTieringEnabled() {
        return Codegen.optional(this.cloudTieringEnabled);
    }
    /**
     * Specifies how the server initially downloads the Azure file share data. Valid Values includes `NamespaceThenModifiedFiles`, `NamespaceOnly`, and `AvoidTieredFiles`. Defaults to `NamespaceThenModifiedFiles`.
     * 
     */
    @Export(name="initialDownloadPolicy", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> initialDownloadPolicy;

    /**
     * @return Specifies how the server initially downloads the Azure file share data. Valid Values includes `NamespaceThenModifiedFiles`, `NamespaceOnly`, and `AvoidTieredFiles`. Defaults to `NamespaceThenModifiedFiles`.
     * 
     */
    public Output<Optional<String>> initialDownloadPolicy() {
        return Codegen.optional(this.initialDownloadPolicy);
    }
    /**
     * Specifies how to handle the local cache. Valid Values include `UpdateLocallyCachedFiles` and `DownloadNewAndModifiedFiles`. Defaults to `UpdateLocallyCachedFiles`.
     * 
     */
    @Export(name="localCacheMode", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> localCacheMode;

    /**
     * @return Specifies how to handle the local cache. Valid Values include `UpdateLocallyCachedFiles` and `DownloadNewAndModifiedFiles`. Defaults to `UpdateLocallyCachedFiles`.
     * 
     */
    public Output<Optional<String>> localCacheMode() {
        return Codegen.optional(this.localCacheMode);
    }
    /**
     * The name which should be used for this Storage Sync. Changing this forces a new Storage Sync Server Endpoint to be created.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The name which should be used for this Storage Sync. Changing this forces a new Storage Sync Server Endpoint to be created.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The ID of the Registered Server that will be associate with the Storage Sync Server Endpoint. Changing this forces a new Storage Sync Server Endpoint to be created.
     * 
     * &gt; **NOTE:** For more information on registering a server see the [Microsoft documentation](https://learn.microsoft.com/azure/storage/file-sync/file-sync-server-registration)
     * 
     */
    @Export(name="registeredServerId", refs={String.class}, tree="[0]")
    private Output<String> registeredServerId;

    /**
     * @return The ID of the Registered Server that will be associate with the Storage Sync Server Endpoint. Changing this forces a new Storage Sync Server Endpoint to be created.
     * 
     * &gt; **NOTE:** For more information on registering a server see the [Microsoft documentation](https://learn.microsoft.com/azure/storage/file-sync/file-sync-server-registration)
     * 
     */
    public Output<String> registeredServerId() {
        return this.registeredServerId;
    }
    /**
     * The path on the Windows Server to be synced to the Azure file share. Changing this forces a new Storage Sync Server Endpoint to be created.
     * 
     */
    @Export(name="serverLocalPath", refs={String.class}, tree="[0]")
    private Output<String> serverLocalPath;

    /**
     * @return The path on the Windows Server to be synced to the Azure file share. Changing this forces a new Storage Sync Server Endpoint to be created.
     * 
     */
    public Output<String> serverLocalPath() {
        return this.serverLocalPath;
    }
    /**
     * The ID of the Storage Sync Group where the Storage Sync Server Endpoint should exist. Changing this forces a new Storage Sync Server Endpoint to be created.
     * 
     */
    @Export(name="storageSyncGroupId", refs={String.class}, tree="[0]")
    private Output<String> storageSyncGroupId;

    /**
     * @return The ID of the Storage Sync Group where the Storage Sync Server Endpoint should exist. Changing this forces a new Storage Sync Server Endpoint to be created.
     * 
     */
    public Output<String> storageSyncGroupId() {
        return this.storageSyncGroupId;
    }
    /**
     * Files older than the specified age will be tiered to the cloud.
     * 
     */
    @Export(name="tierFilesOlderThanDays", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> tierFilesOlderThanDays;

    /**
     * @return Files older than the specified age will be tiered to the cloud.
     * 
     */
    public Output<Optional<Integer>> tierFilesOlderThanDays() {
        return Codegen.optional(this.tierFilesOlderThanDays);
    }
    /**
     * What percentage of free space on the volume should be preserved? Defaults to `20`.
     * 
     */
    @Export(name="volumeFreeSpacePercent", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> volumeFreeSpacePercent;

    /**
     * @return What percentage of free space on the volume should be preserved? Defaults to `20`.
     * 
     */
    public Output<Optional<Integer>> volumeFreeSpacePercent() {
        return Codegen.optional(this.volumeFreeSpacePercent);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public SyncServerEndpoint(String name) {
        this(name, SyncServerEndpointArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public SyncServerEndpoint(String name, SyncServerEndpointArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public SyncServerEndpoint(String name, SyncServerEndpointArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:storage/syncServerEndpoint:SyncServerEndpoint", name, args == null ? SyncServerEndpointArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private SyncServerEndpoint(String name, Output<String> id, @Nullable SyncServerEndpointState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:storage/syncServerEndpoint:SyncServerEndpoint", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static SyncServerEndpoint get(String name, Output<String> id, @Nullable SyncServerEndpointState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new SyncServerEndpoint(name, id, state, options);
    }
}
