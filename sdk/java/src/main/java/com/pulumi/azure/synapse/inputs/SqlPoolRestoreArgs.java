// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.synapse.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class SqlPoolRestoreArgs extends com.pulumi.resources.ResourceArgs {

    public static final SqlPoolRestoreArgs Empty = new SqlPoolRestoreArgs();

    /**
     * Specifies the Snapshot time to restore formatted as an RFC3339 date string. Changing this forces a new Synapse SQL Pool to be created.
     * 
     */
    @Import(name="pointInTime", required=true)
    private Output<String> pointInTime;

    /**
     * @return Specifies the Snapshot time to restore formatted as an RFC3339 date string. Changing this forces a new Synapse SQL Pool to be created.
     * 
     */
    public Output<String> pointInTime() {
        return this.pointInTime;
    }

    /**
     * The ID of the Synapse SQL Pool or SQL Database which is to restore. Changing this forces a new Synapse SQL Pool to be created.
     * 
     */
    @Import(name="sourceDatabaseId", required=true)
    private Output<String> sourceDatabaseId;

    /**
     * @return The ID of the Synapse SQL Pool or SQL Database which is to restore. Changing this forces a new Synapse SQL Pool to be created.
     * 
     */
    public Output<String> sourceDatabaseId() {
        return this.sourceDatabaseId;
    }

    private SqlPoolRestoreArgs() {}

    private SqlPoolRestoreArgs(SqlPoolRestoreArgs $) {
        this.pointInTime = $.pointInTime;
        this.sourceDatabaseId = $.sourceDatabaseId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SqlPoolRestoreArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SqlPoolRestoreArgs $;

        public Builder() {
            $ = new SqlPoolRestoreArgs();
        }

        public Builder(SqlPoolRestoreArgs defaults) {
            $ = new SqlPoolRestoreArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param pointInTime Specifies the Snapshot time to restore formatted as an RFC3339 date string. Changing this forces a new Synapse SQL Pool to be created.
         * 
         * @return builder
         * 
         */
        public Builder pointInTime(Output<String> pointInTime) {
            $.pointInTime = pointInTime;
            return this;
        }

        /**
         * @param pointInTime Specifies the Snapshot time to restore formatted as an RFC3339 date string. Changing this forces a new Synapse SQL Pool to be created.
         * 
         * @return builder
         * 
         */
        public Builder pointInTime(String pointInTime) {
            return pointInTime(Output.of(pointInTime));
        }

        /**
         * @param sourceDatabaseId The ID of the Synapse SQL Pool or SQL Database which is to restore. Changing this forces a new Synapse SQL Pool to be created.
         * 
         * @return builder
         * 
         */
        public Builder sourceDatabaseId(Output<String> sourceDatabaseId) {
            $.sourceDatabaseId = sourceDatabaseId;
            return this;
        }

        /**
         * @param sourceDatabaseId The ID of the Synapse SQL Pool or SQL Database which is to restore. Changing this forces a new Synapse SQL Pool to be created.
         * 
         * @return builder
         * 
         */
        public Builder sourceDatabaseId(String sourceDatabaseId) {
            return sourceDatabaseId(Output.of(sourceDatabaseId));
        }

        public SqlPoolRestoreArgs build() {
            if ($.pointInTime == null) {
                throw new MissingRequiredPropertyException("SqlPoolRestoreArgs", "pointInTime");
            }
            if ($.sourceDatabaseId == null) {
                throw new MissingRequiredPropertyException("SqlPoolRestoreArgs", "sourceDatabaseId");
            }
            return $;
        }
    }

}
