// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.armmsi;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class FederatedIdentityCredentialArgs extends com.pulumi.resources.ResourceArgs {

    public static final FederatedIdentityCredentialArgs Empty = new FederatedIdentityCredentialArgs();

    /**
     * Specifies the audience for this Federated Identity Credential. Changing this forces a new Federated Identity Credential to be created.
     * 
     */
    @Import(name="audience", required=true)
    private Output<String> audience;

    /**
     * @return Specifies the audience for this Federated Identity Credential. Changing this forces a new Federated Identity Credential to be created.
     * 
     */
    public Output<String> audience() {
        return this.audience;
    }

    /**
     * Specifies the issuer of this Federated Identity Credential. Changing this forces a new Federated Identity Credential to be created.
     * 
     */
    @Import(name="issuer", required=true)
    private Output<String> issuer;

    /**
     * @return Specifies the issuer of this Federated Identity Credential. Changing this forces a new Federated Identity Credential to be created.
     * 
     */
    public Output<String> issuer() {
        return this.issuer;
    }

    /**
     * Specifies the name of this Federated Identity Credential. Changing this forces a new Federated Identity Credential to be created.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Specifies the name of this Federated Identity Credential. Changing this forces a new Federated Identity Credential to be created.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Specifies parent ID of User Assigned Identity for this Federated Identity Credential. Changing this forces a new Federated Identity Credential to be created.
     * 
     */
    @Import(name="parentId", required=true)
    private Output<String> parentId;

    /**
     * @return Specifies parent ID of User Assigned Identity for this Federated Identity Credential. Changing this forces a new Federated Identity Credential to be created.
     * 
     */
    public Output<String> parentId() {
        return this.parentId;
    }

    /**
     * Specifies the name of the Resource Group within which this Federated Identity Credential should exist. Changing this forces a new Federated Identity Credential to be created.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    /**
     * @return Specifies the name of the Resource Group within which this Federated Identity Credential should exist. Changing this forces a new Federated Identity Credential to be created.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * Specifies the subject for this Federated Identity Credential. Changing this forces a new Federated Identity Credential to be created.
     * 
     */
    @Import(name="subject", required=true)
    private Output<String> subject;

    /**
     * @return Specifies the subject for this Federated Identity Credential. Changing this forces a new Federated Identity Credential to be created.
     * 
     */
    public Output<String> subject() {
        return this.subject;
    }

    private FederatedIdentityCredentialArgs() {}

    private FederatedIdentityCredentialArgs(FederatedIdentityCredentialArgs $) {
        this.audience = $.audience;
        this.issuer = $.issuer;
        this.name = $.name;
        this.parentId = $.parentId;
        this.resourceGroupName = $.resourceGroupName;
        this.subject = $.subject;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FederatedIdentityCredentialArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FederatedIdentityCredentialArgs $;

        public Builder() {
            $ = new FederatedIdentityCredentialArgs();
        }

        public Builder(FederatedIdentityCredentialArgs defaults) {
            $ = new FederatedIdentityCredentialArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param audience Specifies the audience for this Federated Identity Credential. Changing this forces a new Federated Identity Credential to be created.
         * 
         * @return builder
         * 
         */
        public Builder audience(Output<String> audience) {
            $.audience = audience;
            return this;
        }

        /**
         * @param audience Specifies the audience for this Federated Identity Credential. Changing this forces a new Federated Identity Credential to be created.
         * 
         * @return builder
         * 
         */
        public Builder audience(String audience) {
            return audience(Output.of(audience));
        }

        /**
         * @param issuer Specifies the issuer of this Federated Identity Credential. Changing this forces a new Federated Identity Credential to be created.
         * 
         * @return builder
         * 
         */
        public Builder issuer(Output<String> issuer) {
            $.issuer = issuer;
            return this;
        }

        /**
         * @param issuer Specifies the issuer of this Federated Identity Credential. Changing this forces a new Federated Identity Credential to be created.
         * 
         * @return builder
         * 
         */
        public Builder issuer(String issuer) {
            return issuer(Output.of(issuer));
        }

        /**
         * @param name Specifies the name of this Federated Identity Credential. Changing this forces a new Federated Identity Credential to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Specifies the name of this Federated Identity Credential. Changing this forces a new Federated Identity Credential to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param parentId Specifies parent ID of User Assigned Identity for this Federated Identity Credential. Changing this forces a new Federated Identity Credential to be created.
         * 
         * @return builder
         * 
         */
        public Builder parentId(Output<String> parentId) {
            $.parentId = parentId;
            return this;
        }

        /**
         * @param parentId Specifies parent ID of User Assigned Identity for this Federated Identity Credential. Changing this forces a new Federated Identity Credential to be created.
         * 
         * @return builder
         * 
         */
        public Builder parentId(String parentId) {
            return parentId(Output.of(parentId));
        }

        /**
         * @param resourceGroupName Specifies the name of the Resource Group within which this Federated Identity Credential should exist. Changing this forces a new Federated Identity Credential to be created.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName Specifies the name of the Resource Group within which this Federated Identity Credential should exist. Changing this forces a new Federated Identity Credential to be created.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        /**
         * @param subject Specifies the subject for this Federated Identity Credential. Changing this forces a new Federated Identity Credential to be created.
         * 
         * @return builder
         * 
         */
        public Builder subject(Output<String> subject) {
            $.subject = subject;
            return this;
        }

        /**
         * @param subject Specifies the subject for this Federated Identity Credential. Changing this forces a new Federated Identity Credential to be created.
         * 
         * @return builder
         * 
         */
        public Builder subject(String subject) {
            return subject(Output.of(subject));
        }

        public FederatedIdentityCredentialArgs build() {
            if ($.audience == null) {
                throw new MissingRequiredPropertyException("FederatedIdentityCredentialArgs", "audience");
            }
            if ($.issuer == null) {
                throw new MissingRequiredPropertyException("FederatedIdentityCredentialArgs", "issuer");
            }
            if ($.parentId == null) {
                throw new MissingRequiredPropertyException("FederatedIdentityCredentialArgs", "parentId");
            }
            if ($.resourceGroupName == null) {
                throw new MissingRequiredPropertyException("FederatedIdentityCredentialArgs", "resourceGroupName");
            }
            if ($.subject == null) {
                throw new MissingRequiredPropertyException("FederatedIdentityCredentialArgs", "subject");
            }
            return $;
        }
    }

}
