// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.privatedns.inputs;

import com.pulumi.azure.privatedns.inputs.LinkServiceNatIpConfigurationArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class LinkServiceState extends com.pulumi.resources.ResourceArgs {

    public static final LinkServiceState Empty = new LinkServiceState();

    /**
     * A globally unique DNS Name for your Private Link Service. You can use this alias to request a connection to your Private Link Service.
     * 
     */
    @Import(name="alias")
    private @Nullable Output<String> alias;

    /**
     * @return A globally unique DNS Name for your Private Link Service. You can use this alias to request a connection to your Private Link Service.
     * 
     */
    public Optional<Output<String>> alias() {
        return Optional.ofNullable(this.alias);
    }

    /**
     * A list of Subscription UUID/GUID&#39;s that will be automatically be able to use this Private Link Service.
     * 
     */
    @Import(name="autoApprovalSubscriptionIds")
    private @Nullable Output<List<String>> autoApprovalSubscriptionIds;

    /**
     * @return A list of Subscription UUID/GUID&#39;s that will be automatically be able to use this Private Link Service.
     * 
     */
    public Optional<Output<List<String>>> autoApprovalSubscriptionIds() {
        return Optional.ofNullable(this.autoApprovalSubscriptionIds);
    }

    /**
     * Should the Private Link Service support the Proxy Protocol? Defaults to `false`.
     * 
     */
    @Import(name="enableProxyProtocol")
    private @Nullable Output<Boolean> enableProxyProtocol;

    /**
     * @return Should the Private Link Service support the Proxy Protocol? Defaults to `false`.
     * 
     */
    public Optional<Output<Boolean>> enableProxyProtocol() {
        return Optional.ofNullable(this.enableProxyProtocol);
    }

    /**
     * A list of Frontend IP Configuration IDs from a Standard Load Balancer, where traffic from the Private Link Service should be routed. You can use Load Balancer Rules to direct this traffic to appropriate backend pools where your applications are running.
     * 
     */
    @Import(name="loadBalancerFrontendIpConfigurationIds")
    private @Nullable Output<List<String>> loadBalancerFrontendIpConfigurationIds;

    /**
     * @return A list of Frontend IP Configuration IDs from a Standard Load Balancer, where traffic from the Private Link Service should be routed. You can use Load Balancer Rules to direct this traffic to appropriate backend pools where your applications are running.
     * 
     */
    public Optional<Output<List<String>>> loadBalancerFrontendIpConfigurationIds() {
        return Optional.ofNullable(this.loadBalancerFrontendIpConfigurationIds);
    }

    /**
     * Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="location")
    private @Nullable Output<String> location;

    /**
     * @return Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * Specifies the name of this Private Link Service. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Specifies the name of this Private Link Service. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * One or more (up to 8) `nat_ip_configuration` block as defined below.
     * 
     */
    @Import(name="natIpConfigurations")
    private @Nullable Output<List<LinkServiceNatIpConfigurationArgs>> natIpConfigurations;

    /**
     * @return One or more (up to 8) `nat_ip_configuration` block as defined below.
     * 
     */
    public Optional<Output<List<LinkServiceNatIpConfigurationArgs>>> natIpConfigurations() {
        return Optional.ofNullable(this.natIpConfigurations);
    }

    /**
     * The name of the Resource Group where the Private Link Service should exist. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="resourceGroupName")
    private @Nullable Output<String> resourceGroupName;

    /**
     * @return The name of the Resource Group where the Private Link Service should exist. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> resourceGroupName() {
        return Optional.ofNullable(this.resourceGroupName);
    }

    /**
     * A mapping of tags to assign to the resource. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return A mapping of tags to assign to the resource. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * A list of Subscription UUID/GUID&#39;s that will be able to see this Private Link Service.
     * 
     */
    @Import(name="visibilitySubscriptionIds")
    private @Nullable Output<List<String>> visibilitySubscriptionIds;

    /**
     * @return A list of Subscription UUID/GUID&#39;s that will be able to see this Private Link Service.
     * 
     */
    public Optional<Output<List<String>>> visibilitySubscriptionIds() {
        return Optional.ofNullable(this.visibilitySubscriptionIds);
    }

    private LinkServiceState() {}

    private LinkServiceState(LinkServiceState $) {
        this.alias = $.alias;
        this.autoApprovalSubscriptionIds = $.autoApprovalSubscriptionIds;
        this.enableProxyProtocol = $.enableProxyProtocol;
        this.loadBalancerFrontendIpConfigurationIds = $.loadBalancerFrontendIpConfigurationIds;
        this.location = $.location;
        this.name = $.name;
        this.natIpConfigurations = $.natIpConfigurations;
        this.resourceGroupName = $.resourceGroupName;
        this.tags = $.tags;
        this.visibilitySubscriptionIds = $.visibilitySubscriptionIds;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(LinkServiceState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private LinkServiceState $;

        public Builder() {
            $ = new LinkServiceState();
        }

        public Builder(LinkServiceState defaults) {
            $ = new LinkServiceState(Objects.requireNonNull(defaults));
        }

        /**
         * @param alias A globally unique DNS Name for your Private Link Service. You can use this alias to request a connection to your Private Link Service.
         * 
         * @return builder
         * 
         */
        public Builder alias(@Nullable Output<String> alias) {
            $.alias = alias;
            return this;
        }

        /**
         * @param alias A globally unique DNS Name for your Private Link Service. You can use this alias to request a connection to your Private Link Service.
         * 
         * @return builder
         * 
         */
        public Builder alias(String alias) {
            return alias(Output.of(alias));
        }

        /**
         * @param autoApprovalSubscriptionIds A list of Subscription UUID/GUID&#39;s that will be automatically be able to use this Private Link Service.
         * 
         * @return builder
         * 
         */
        public Builder autoApprovalSubscriptionIds(@Nullable Output<List<String>> autoApprovalSubscriptionIds) {
            $.autoApprovalSubscriptionIds = autoApprovalSubscriptionIds;
            return this;
        }

        /**
         * @param autoApprovalSubscriptionIds A list of Subscription UUID/GUID&#39;s that will be automatically be able to use this Private Link Service.
         * 
         * @return builder
         * 
         */
        public Builder autoApprovalSubscriptionIds(List<String> autoApprovalSubscriptionIds) {
            return autoApprovalSubscriptionIds(Output.of(autoApprovalSubscriptionIds));
        }

        /**
         * @param autoApprovalSubscriptionIds A list of Subscription UUID/GUID&#39;s that will be automatically be able to use this Private Link Service.
         * 
         * @return builder
         * 
         */
        public Builder autoApprovalSubscriptionIds(String... autoApprovalSubscriptionIds) {
            return autoApprovalSubscriptionIds(List.of(autoApprovalSubscriptionIds));
        }

        /**
         * @param enableProxyProtocol Should the Private Link Service support the Proxy Protocol? Defaults to `false`.
         * 
         * @return builder
         * 
         */
        public Builder enableProxyProtocol(@Nullable Output<Boolean> enableProxyProtocol) {
            $.enableProxyProtocol = enableProxyProtocol;
            return this;
        }

        /**
         * @param enableProxyProtocol Should the Private Link Service support the Proxy Protocol? Defaults to `false`.
         * 
         * @return builder
         * 
         */
        public Builder enableProxyProtocol(Boolean enableProxyProtocol) {
            return enableProxyProtocol(Output.of(enableProxyProtocol));
        }

        /**
         * @param loadBalancerFrontendIpConfigurationIds A list of Frontend IP Configuration IDs from a Standard Load Balancer, where traffic from the Private Link Service should be routed. You can use Load Balancer Rules to direct this traffic to appropriate backend pools where your applications are running.
         * 
         * @return builder
         * 
         */
        public Builder loadBalancerFrontendIpConfigurationIds(@Nullable Output<List<String>> loadBalancerFrontendIpConfigurationIds) {
            $.loadBalancerFrontendIpConfigurationIds = loadBalancerFrontendIpConfigurationIds;
            return this;
        }

        /**
         * @param loadBalancerFrontendIpConfigurationIds A list of Frontend IP Configuration IDs from a Standard Load Balancer, where traffic from the Private Link Service should be routed. You can use Load Balancer Rules to direct this traffic to appropriate backend pools where your applications are running.
         * 
         * @return builder
         * 
         */
        public Builder loadBalancerFrontendIpConfigurationIds(List<String> loadBalancerFrontendIpConfigurationIds) {
            return loadBalancerFrontendIpConfigurationIds(Output.of(loadBalancerFrontendIpConfigurationIds));
        }

        /**
         * @param loadBalancerFrontendIpConfigurationIds A list of Frontend IP Configuration IDs from a Standard Load Balancer, where traffic from the Private Link Service should be routed. You can use Load Balancer Rules to direct this traffic to appropriate backend pools where your applications are running.
         * 
         * @return builder
         * 
         */
        public Builder loadBalancerFrontendIpConfigurationIds(String... loadBalancerFrontendIpConfigurationIds) {
            return loadBalancerFrontendIpConfigurationIds(List.of(loadBalancerFrontendIpConfigurationIds));
        }

        /**
         * @param location Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param name Specifies the name of this Private Link Service. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Specifies the name of this Private Link Service. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param natIpConfigurations One or more (up to 8) `nat_ip_configuration` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder natIpConfigurations(@Nullable Output<List<LinkServiceNatIpConfigurationArgs>> natIpConfigurations) {
            $.natIpConfigurations = natIpConfigurations;
            return this;
        }

        /**
         * @param natIpConfigurations One or more (up to 8) `nat_ip_configuration` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder natIpConfigurations(List<LinkServiceNatIpConfigurationArgs> natIpConfigurations) {
            return natIpConfigurations(Output.of(natIpConfigurations));
        }

        /**
         * @param natIpConfigurations One or more (up to 8) `nat_ip_configuration` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder natIpConfigurations(LinkServiceNatIpConfigurationArgs... natIpConfigurations) {
            return natIpConfigurations(List.of(natIpConfigurations));
        }

        /**
         * @param resourceGroupName The name of the Resource Group where the Private Link Service should exist. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(@Nullable Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName The name of the Resource Group where the Private Link Service should exist. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        /**
         * @param tags A mapping of tags to assign to the resource. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags A mapping of tags to assign to the resource. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param visibilitySubscriptionIds A list of Subscription UUID/GUID&#39;s that will be able to see this Private Link Service.
         * 
         * @return builder
         * 
         */
        public Builder visibilitySubscriptionIds(@Nullable Output<List<String>> visibilitySubscriptionIds) {
            $.visibilitySubscriptionIds = visibilitySubscriptionIds;
            return this;
        }

        /**
         * @param visibilitySubscriptionIds A list of Subscription UUID/GUID&#39;s that will be able to see this Private Link Service.
         * 
         * @return builder
         * 
         */
        public Builder visibilitySubscriptionIds(List<String> visibilitySubscriptionIds) {
            return visibilitySubscriptionIds(Output.of(visibilitySubscriptionIds));
        }

        /**
         * @param visibilitySubscriptionIds A list of Subscription UUID/GUID&#39;s that will be able to see this Private Link Service.
         * 
         * @return builder
         * 
         */
        public Builder visibilitySubscriptionIds(String... visibilitySubscriptionIds) {
            return visibilitySubscriptionIds(List.of(visibilitySubscriptionIds));
        }

        public LinkServiceState build() {
            return $;
        }
    }

}
