// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.cosmosdb;

import com.pulumi.azure.Utilities;
import com.pulumi.azure.cosmosdb.CassandraClusterArgs;
import com.pulumi.azure.cosmosdb.inputs.CassandraClusterState;
import com.pulumi.azure.cosmosdb.outputs.CassandraClusterIdentity;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Manages a Cassandra Cluster.
 * 
 * &gt; ** NOTE: ** In order for the `Azure Managed Instances for Apache Cassandra` to work properly the product requires the `Azure Cosmos DB` Application ID to be present and working in your tenant. If the `Azure Cosmos DB` Application ID is missing in your environment you will need to have an administrator of your tenant run the following command to add the `Azure Cosmos DB` Application ID to your tenant:
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *     }
 * }
 * ```
 * 
 * ## Example Usage
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.azure.core.ResourceGroup;
 * import com.pulumi.azure.core.ResourceGroupArgs;
 * import com.pulumi.azure.network.VirtualNetwork;
 * import com.pulumi.azure.network.VirtualNetworkArgs;
 * import com.pulumi.azure.network.Subnet;
 * import com.pulumi.azure.network.SubnetArgs;
 * import com.pulumi.azuread.AzureadFunctions;
 * import com.pulumi.azuread.inputs.GetServicePrincipalArgs;
 * import com.pulumi.azure.authorization.Assignment;
 * import com.pulumi.azure.authorization.AssignmentArgs;
 * import com.pulumi.azure.cosmosdb.CassandraCluster;
 * import com.pulumi.azure.cosmosdb.CassandraClusterArgs;
 * import com.pulumi.resources.CustomResourceOptions;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var exampleResourceGroup = new ResourceGroup(&#34;exampleResourceGroup&#34;, ResourceGroupArgs.builder()        
 *             .location(&#34;West Europe&#34;)
 *             .build());
 * 
 *         var exampleVirtualNetwork = new VirtualNetwork(&#34;exampleVirtualNetwork&#34;, VirtualNetworkArgs.builder()        
 *             .location(exampleResourceGroup.location())
 *             .resourceGroupName(exampleResourceGroup.name())
 *             .addressSpaces(&#34;10.0.0.0/16&#34;)
 *             .build());
 * 
 *         var exampleSubnet = new Subnet(&#34;exampleSubnet&#34;, SubnetArgs.builder()        
 *             .resourceGroupName(exampleResourceGroup.name())
 *             .virtualNetworkName(exampleVirtualNetwork.name())
 *             .addressPrefixes(&#34;10.0.1.0/24&#34;)
 *             .build());
 * 
 *         final var exampleServicePrincipal = AzureadFunctions.getServicePrincipal(GetServicePrincipalArgs.builder()
 *             .displayName(&#34;Azure Cosmos DB&#34;)
 *             .build());
 * 
 *         var exampleAssignment = new Assignment(&#34;exampleAssignment&#34;, AssignmentArgs.builder()        
 *             .scope(exampleVirtualNetwork.id())
 *             .roleDefinitionName(&#34;Network Contributor&#34;)
 *             .principalId(exampleServicePrincipal.applyValue(getServicePrincipalResult -&gt; getServicePrincipalResult.objectId()))
 *             .build());
 * 
 *         var exampleCassandraCluster = new CassandraCluster(&#34;exampleCassandraCluster&#34;, CassandraClusterArgs.builder()        
 *             .resourceGroupName(exampleResourceGroup.name())
 *             .location(exampleResourceGroup.location())
 *             .delegatedManagementSubnetId(exampleSubnet.id())
 *             .defaultAdminPassword(&#34;Password1234&#34;)
 *             .build(), CustomResourceOptions.builder()
 *                 .dependsOn(exampleAssignment)
 *                 .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * Cassandra Clusters can be imported using the `resource id`, e.g.
 * 
 * ```sh
 *  $ pulumi import azure:cosmosdb/cassandraCluster:CassandraCluster example /subscriptions/12345678-1234-9876-4563-123456789012/resourceGroups/resGroup1/providers/Microsoft.DocumentDB/cassandraClusters/cluster1
 * ```
 * 
 */
@ResourceType(type="azure:cosmosdb/cassandraCluster:CassandraCluster")
public class CassandraCluster extends com.pulumi.resources.CustomResource {
    /**
     * The authentication method that is used to authenticate clients. Possible values are `None` and `Cassandra`. Defaults to `Cassandra`.
     * 
     */
    @Export(name="authenticationMethod", type=String.class, parameters={})
    private Output</* @Nullable */ String> authenticationMethod;

    /**
     * @return The authentication method that is used to authenticate clients. Possible values are `None` and `Cassandra`. Defaults to `Cassandra`.
     * 
     */
    public Output<Optional<String>> authenticationMethod() {
        return Codegen.optional(this.authenticationMethod);
    }
    /**
     * A list of TLS certificates that is used to authorize client connecting to the Cassandra Cluster.
     * 
     */
    @Export(name="clientCertificatePems", type=List.class, parameters={String.class})
    private Output</* @Nullable */ List<String>> clientCertificatePems;

    /**
     * @return A list of TLS certificates that is used to authorize client connecting to the Cassandra Cluster.
     * 
     */
    public Output<Optional<List<String>>> clientCertificatePems() {
        return Codegen.optional(this.clientCertificatePems);
    }
    /**
     * The initial admin password for this Cassandra Cluster.
     * 
     */
    @Export(name="defaultAdminPassword", type=String.class, parameters={})
    private Output<String> defaultAdminPassword;

    /**
     * @return The initial admin password for this Cassandra Cluster.
     * 
     */
    public Output<String> defaultAdminPassword() {
        return this.defaultAdminPassword;
    }
    /**
     * The ID of the delegated management subnet for this Cassandra Cluster. Changing this forces a new Cassandra Cluster to be created.
     * 
     */
    @Export(name="delegatedManagementSubnetId", type=String.class, parameters={})
    private Output<String> delegatedManagementSubnetId;

    /**
     * @return The ID of the delegated management subnet for this Cassandra Cluster. Changing this forces a new Cassandra Cluster to be created.
     * 
     */
    public Output<String> delegatedManagementSubnetId() {
        return this.delegatedManagementSubnetId;
    }
    /**
     * A list of TLS certificates that is used to authorize gossip from unmanaged Cassandra Data Center.
     * 
     */
    @Export(name="externalGossipCertificatePems", type=List.class, parameters={String.class})
    private Output</* @Nullable */ List<String>> externalGossipCertificatePems;

    /**
     * @return A list of TLS certificates that is used to authorize gossip from unmanaged Cassandra Data Center.
     * 
     */
    public Output<Optional<List<String>>> externalGossipCertificatePems() {
        return Codegen.optional(this.externalGossipCertificatePems);
    }
    /**
     * A list of IP Addresses of the seed nodes in unmanaged the Cassandra Data Center which will be added to the seed node lists of all managed nodes.
     * 
     */
    @Export(name="externalSeedNodeIpAddresses", type=List.class, parameters={String.class})
    private Output</* @Nullable */ List<String>> externalSeedNodeIpAddresses;

    /**
     * @return A list of IP Addresses of the seed nodes in unmanaged the Cassandra Data Center which will be added to the seed node lists of all managed nodes.
     * 
     */
    public Output<Optional<List<String>>> externalSeedNodeIpAddresses() {
        return Codegen.optional(this.externalSeedNodeIpAddresses);
    }
    /**
     * An `identity` block as defined below.
     * 
     */
    @Export(name="identity", type=CassandraClusterIdentity.class, parameters={})
    private Output</* @Nullable */ CassandraClusterIdentity> identity;

    /**
     * @return An `identity` block as defined below.
     * 
     */
    public Output<Optional<CassandraClusterIdentity>> identity() {
        return Codegen.optional(this.identity);
    }
    /**
     * The Azure Region where the Cassandra Cluster should exist. Changing this forces a new Cassandra Cluster to be created.
     * 
     */
    @Export(name="location", type=String.class, parameters={})
    private Output<String> location;

    /**
     * @return The Azure Region where the Cassandra Cluster should exist. Changing this forces a new Cassandra Cluster to be created.
     * 
     */
    public Output<String> location() {
        return this.location;
    }
    /**
     * The name which should be used for this Cassandra Cluster. Changing this forces a new Cassandra Cluster to be created.
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return The name which should be used for this Cassandra Cluster. Changing this forces a new Cassandra Cluster to be created.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Is the automatic repair enabled on the Cassandra Cluster?
     * 
     */
    @Export(name="repairEnabled", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> repairEnabled;

    /**
     * @return Is the automatic repair enabled on the Cassandra Cluster?
     * 
     */
    public Output<Optional<Boolean>> repairEnabled() {
        return Codegen.optional(this.repairEnabled);
    }
    /**
     * The name of the Resource Group where the Cassandra Cluster should exist. Changing this forces a new Cassandra Cluster to be created.
     * 
     */
    @Export(name="resourceGroupName", type=String.class, parameters={})
    private Output<String> resourceGroupName;

    /**
     * @return The name of the Resource Group where the Cassandra Cluster should exist. Changing this forces a new Cassandra Cluster to be created.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }
    /**
     * A mapping of tags assigned to the resource.
     * 
     */
    @Export(name="tags", type=Map.class, parameters={String.class, String.class})
    private Output</* @Nullable */ Map<String,String>> tags;

    /**
     * @return A mapping of tags assigned to the resource.
     * 
     */
    public Output<Optional<Map<String,String>>> tags() {
        return Codegen.optional(this.tags);
    }
    /**
     * The version of Cassandra what the Cluster converges to run. Possible values are `3.11` and `4.0`. Defaults to `3.11`. Changing this forces a new Cassandra Cluster to be created.
     * 
     */
    @Export(name="version", type=String.class, parameters={})
    private Output</* @Nullable */ String> version;

    /**
     * @return The version of Cassandra what the Cluster converges to run. Possible values are `3.11` and `4.0`. Defaults to `3.11`. Changing this forces a new Cassandra Cluster to be created.
     * 
     */
    public Output<Optional<String>> version() {
        return Codegen.optional(this.version);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public CassandraCluster(String name) {
        this(name, CassandraClusterArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public CassandraCluster(String name, CassandraClusterArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public CassandraCluster(String name, CassandraClusterArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:cosmosdb/cassandraCluster:CassandraCluster", name, args == null ? CassandraClusterArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private CassandraCluster(String name, Output<String> id, @Nullable CassandraClusterState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:cosmosdb/cassandraCluster:CassandraCluster", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static CassandraCluster get(String name, Output<String> id, @Nullable CassandraClusterState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new CassandraCluster(name, id, state, options);
    }
}
