// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.apimanagement.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GatewayLocationData {
    /**
     * @return The city or locality where the resource is located.
     * 
     */
    private final @Nullable String city;
    /**
     * @return The district, state, or province where the resource is located.
     * 
     */
    private final @Nullable String district;
    /**
     * @return A canonical name for the geographic or physical location.
     * 
     */
    private final String name;
    /**
     * @return The country or region where the resource is located.
     * 
     */
    private final @Nullable String region;

    @CustomType.Constructor
    private GatewayLocationData(
        @CustomType.Parameter("city") @Nullable String city,
        @CustomType.Parameter("district") @Nullable String district,
        @CustomType.Parameter("name") String name,
        @CustomType.Parameter("region") @Nullable String region) {
        this.city = city;
        this.district = district;
        this.name = name;
        this.region = region;
    }

    /**
     * @return The city or locality where the resource is located.
     * 
     */
    public Optional<String> city() {
        return Optional.ofNullable(this.city);
    }
    /**
     * @return The district, state, or province where the resource is located.
     * 
     */
    public Optional<String> district() {
        return Optional.ofNullable(this.district);
    }
    /**
     * @return A canonical name for the geographic or physical location.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The country or region where the resource is located.
     * 
     */
    public Optional<String> region() {
        return Optional.ofNullable(this.region);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GatewayLocationData defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String city;
        private @Nullable String district;
        private String name;
        private @Nullable String region;

        public Builder() {
    	      // Empty
        }

        public Builder(GatewayLocationData defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.city = defaults.city;
    	      this.district = defaults.district;
    	      this.name = defaults.name;
    	      this.region = defaults.region;
        }

        public Builder city(@Nullable String city) {
            this.city = city;
            return this;
        }
        public Builder district(@Nullable String district) {
            this.district = district;
            return this;
        }
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        public Builder region(@Nullable String region) {
            this.region = region;
            return this;
        }        public GatewayLocationData build() {
            return new GatewayLocationData(city, district, name, region);
        }
    }
}
