// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.batch.outputs;

import com.pulumi.azure.batch.outputs.PoolUserAccountLinuxUserConfiguration;
import com.pulumi.azure.batch.outputs.PoolUserAccountWindowsUserConfiguration;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class PoolUserAccount {
    /**
     * @return The elevation level of the user account. &#34;NonAdmin&#34; - The auto user is a standard user without elevated access. &#34;Admin&#34; - The auto user is a user with elevated access and operates with full Administrator permissions. The default value is nonAdmin.
     * 
     */
    private String elevationLevel;
    /**
     * @return The `linux_user_configuration` block defined below is a linux-specific user configuration for the user account. This property is ignored if specified on a Windows pool. If not specified, the user is created with the default options.
     * 
     */
    private @Nullable List<PoolUserAccountLinuxUserConfiguration> linuxUserConfigurations;
    /**
     * @return The name of the user account.
     * 
     */
    private String name;
    /**
     * @return The password for the user account.
     * 
     */
    private String password;
    /**
     * @return The `windows_user_configuration` block defined below is a windows-specific user configuration for the user account. This property can only be specified if the user is on a Windows pool. If not specified and on a Windows pool, the user is created with the default options.
     * 
     */
    private @Nullable List<PoolUserAccountWindowsUserConfiguration> windowsUserConfigurations;

    private PoolUserAccount() {}
    /**
     * @return The elevation level of the user account. &#34;NonAdmin&#34; - The auto user is a standard user without elevated access. &#34;Admin&#34; - The auto user is a user with elevated access and operates with full Administrator permissions. The default value is nonAdmin.
     * 
     */
    public String elevationLevel() {
        return this.elevationLevel;
    }
    /**
     * @return The `linux_user_configuration` block defined below is a linux-specific user configuration for the user account. This property is ignored if specified on a Windows pool. If not specified, the user is created with the default options.
     * 
     */
    public List<PoolUserAccountLinuxUserConfiguration> linuxUserConfigurations() {
        return this.linuxUserConfigurations == null ? List.of() : this.linuxUserConfigurations;
    }
    /**
     * @return The name of the user account.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The password for the user account.
     * 
     */
    public String password() {
        return this.password;
    }
    /**
     * @return The `windows_user_configuration` block defined below is a windows-specific user configuration for the user account. This property can only be specified if the user is on a Windows pool. If not specified and on a Windows pool, the user is created with the default options.
     * 
     */
    public List<PoolUserAccountWindowsUserConfiguration> windowsUserConfigurations() {
        return this.windowsUserConfigurations == null ? List.of() : this.windowsUserConfigurations;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(PoolUserAccount defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String elevationLevel;
        private @Nullable List<PoolUserAccountLinuxUserConfiguration> linuxUserConfigurations;
        private String name;
        private String password;
        private @Nullable List<PoolUserAccountWindowsUserConfiguration> windowsUserConfigurations;
        public Builder() {}
        public Builder(PoolUserAccount defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.elevationLevel = defaults.elevationLevel;
    	      this.linuxUserConfigurations = defaults.linuxUserConfigurations;
    	      this.name = defaults.name;
    	      this.password = defaults.password;
    	      this.windowsUserConfigurations = defaults.windowsUserConfigurations;
        }

        @CustomType.Setter
        public Builder elevationLevel(String elevationLevel) {
            if (elevationLevel == null) {
              throw new MissingRequiredPropertyException("PoolUserAccount", "elevationLevel");
            }
            this.elevationLevel = elevationLevel;
            return this;
        }
        @CustomType.Setter
        public Builder linuxUserConfigurations(@Nullable List<PoolUserAccountLinuxUserConfiguration> linuxUserConfigurations) {

            this.linuxUserConfigurations = linuxUserConfigurations;
            return this;
        }
        public Builder linuxUserConfigurations(PoolUserAccountLinuxUserConfiguration... linuxUserConfigurations) {
            return linuxUserConfigurations(List.of(linuxUserConfigurations));
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("PoolUserAccount", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder password(String password) {
            if (password == null) {
              throw new MissingRequiredPropertyException("PoolUserAccount", "password");
            }
            this.password = password;
            return this;
        }
        @CustomType.Setter
        public Builder windowsUserConfigurations(@Nullable List<PoolUserAccountWindowsUserConfiguration> windowsUserConfigurations) {

            this.windowsUserConfigurations = windowsUserConfigurations;
            return this;
        }
        public Builder windowsUserConfigurations(PoolUserAccountWindowsUserConfiguration... windowsUserConfigurations) {
            return windowsUserConfigurations(List.of(windowsUserConfigurations));
        }
        public PoolUserAccount build() {
            final var _resultValue = new PoolUserAccount();
            _resultValue.elevationLevel = elevationLevel;
            _resultValue.linuxUserConfigurations = linuxUserConfigurations;
            _resultValue.name = name;
            _resultValue.password = password;
            _resultValue.windowsUserConfigurations = windowsUserConfigurations;
            return _resultValue;
        }
    }
}
