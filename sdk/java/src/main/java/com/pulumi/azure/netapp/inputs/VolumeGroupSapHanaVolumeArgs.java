// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.netapp.inputs;

import com.pulumi.azure.netapp.inputs.VolumeGroupSapHanaVolumeDataProtectionReplicationArgs;
import com.pulumi.azure.netapp.inputs.VolumeGroupSapHanaVolumeDataProtectionSnapshotPolicyArgs;
import com.pulumi.azure.netapp.inputs.VolumeGroupSapHanaVolumeExportPolicyRuleArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class VolumeGroupSapHanaVolumeArgs extends com.pulumi.resources.ResourceArgs {

    public static final VolumeGroupSapHanaVolumeArgs Empty = new VolumeGroupSapHanaVolumeArgs();

    /**
     * The ID of the Capacity Pool. Changing this forces a new Application Volume Group to be created and data will be lost.
     * 
     */
    @Import(name="capacityPoolId", required=true)
    private Output<String> capacityPoolId;

    /**
     * @return The ID of the Capacity Pool. Changing this forces a new Application Volume Group to be created and data will be lost.
     * 
     */
    public Output<String> capacityPoolId() {
        return this.capacityPoolId;
    }

    /**
     * A `data_protection_replication` block as defined below. Changing this forces a new Application Volume Group to be created and data will be lost.
     * 
     */
    @Import(name="dataProtectionReplication")
    private @Nullable Output<VolumeGroupSapHanaVolumeDataProtectionReplicationArgs> dataProtectionReplication;

    /**
     * @return A `data_protection_replication` block as defined below. Changing this forces a new Application Volume Group to be created and data will be lost.
     * 
     */
    public Optional<Output<VolumeGroupSapHanaVolumeDataProtectionReplicationArgs>> dataProtectionReplication() {
        return Optional.ofNullable(this.dataProtectionReplication);
    }

    /**
     * A `data_protection_snapshot_policy` block as defined below.
     * 
     */
    @Import(name="dataProtectionSnapshotPolicy")
    private @Nullable Output<VolumeGroupSapHanaVolumeDataProtectionSnapshotPolicyArgs> dataProtectionSnapshotPolicy;

    /**
     * @return A `data_protection_snapshot_policy` block as defined below.
     * 
     */
    public Optional<Output<VolumeGroupSapHanaVolumeDataProtectionSnapshotPolicyArgs>> dataProtectionSnapshotPolicy() {
        return Optional.ofNullable(this.dataProtectionSnapshotPolicy);
    }

    /**
     * One or more `export_policy_rule` blocks as defined below.
     * 
     */
    @Import(name="exportPolicyRules", required=true)
    private Output<List<VolumeGroupSapHanaVolumeExportPolicyRuleArgs>> exportPolicyRules;

    /**
     * @return One or more `export_policy_rule` blocks as defined below.
     * 
     */
    public Output<List<VolumeGroupSapHanaVolumeExportPolicyRuleArgs>> exportPolicyRules() {
        return this.exportPolicyRules;
    }

    /**
     * The ID of the Application Volume Group.
     * 
     */
    @Import(name="id")
    private @Nullable Output<String> id;

    /**
     * @return The ID of the Application Volume Group.
     * 
     */
    public Optional<Output<String>> id() {
        return Optional.ofNullable(this.id);
    }

    @Import(name="mountIpAddresses")
    private @Nullable Output<List<String>> mountIpAddresses;

    public Optional<Output<List<String>>> mountIpAddresses() {
        return Optional.ofNullable(this.mountIpAddresses);
    }

    /**
     * The name which should be used for this volume. Changing this forces a new Application Volume Group to be created and data will be lost.
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    /**
     * @return The name which should be used for this volume. Changing this forces a new Application Volume Group to be created and data will be lost.
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    /**
     * The target volume protocol expressed as a list. Changing this forces a new Application Volume Group to be created and data will be lost. Supported values for Application Volume Group include `NFSv3` or `NFSv4.1`, multi-protocol is not supported and there are certain rules on which protocol is supporteed per volume spec, please check [Configure application volume groups for the SAP HANA REST API](https://learn.microsoft.com/en-us/azure/azure-netapp-files/configure-application-volume-group-sap-hana-api) document for details.
     * 
     */
    @Import(name="protocols", required=true)
    private Output<String> protocols;

    /**
     * @return The target volume protocol expressed as a list. Changing this forces a new Application Volume Group to be created and data will be lost. Supported values for Application Volume Group include `NFSv3` or `NFSv4.1`, multi-protocol is not supported and there are certain rules on which protocol is supporteed per volume spec, please check [Configure application volume groups for the SAP HANA REST API](https://learn.microsoft.com/en-us/azure/azure-netapp-files/configure-application-volume-group-sap-hana-api) document for details.
     * 
     */
    public Output<String> protocols() {
        return this.protocols;
    }

    /**
     * The ID of the proximity placement group. Changing this forces a new Application Volume Group to be created and data will be lost. For SAP-HANA application, it is required to have PPG enabled so Azure NetApp Files can pin the volumes next to your compute resources, please check [Requirements and considerations for application volume group for SAP HANA](https://learn.microsoft.com/en-us/azure/azure-netapp-files/application-volume-group-considerations) for details and other requirements.
     * 
     */
    @Import(name="proximityPlacementGroupId")
    private @Nullable Output<String> proximityPlacementGroupId;

    /**
     * @return The ID of the proximity placement group. Changing this forces a new Application Volume Group to be created and data will be lost. For SAP-HANA application, it is required to have PPG enabled so Azure NetApp Files can pin the volumes next to your compute resources, please check [Requirements and considerations for application volume group for SAP HANA](https://learn.microsoft.com/en-us/azure/azure-netapp-files/application-volume-group-considerations) for details and other requirements.
     * 
     */
    public Optional<Output<String>> proximityPlacementGroupId() {
        return Optional.ofNullable(this.proximityPlacementGroupId);
    }

    /**
     * Volume security style. Possible values are `ntfs` and `unix`. Changing this forces a new Application Volume Group to be created and data will be lost.
     * 
     */
    @Import(name="securityStyle", required=true)
    private Output<String> securityStyle;

    /**
     * @return Volume security style. Possible values are `ntfs` and `unix`. Changing this forces a new Application Volume Group to be created and data will be lost.
     * 
     */
    public Output<String> securityStyle() {
        return this.securityStyle;
    }

    /**
     * Volume security style. Possible values are `Premium`, `Standard` and `Ultra`. Changing this forces a new Application Volume Group to be created and data will be lost.
     * 
     */
    @Import(name="serviceLevel", required=true)
    private Output<String> serviceLevel;

    /**
     * @return Volume security style. Possible values are `Premium`, `Standard` and `Ultra`. Changing this forces a new Application Volume Group to be created and data will be lost.
     * 
     */
    public Output<String> serviceLevel() {
        return this.serviceLevel;
    }

    /**
     * Specifies whether the .snapshot (NFS clients) path of a volume is visible. Changing this forces a new Application Volume Group to be created and data will be lost.
     * 
     */
    @Import(name="snapshotDirectoryVisible", required=true)
    private Output<Boolean> snapshotDirectoryVisible;

    /**
     * @return Specifies whether the .snapshot (NFS clients) path of a volume is visible. Changing this forces a new Application Volume Group to be created and data will be lost.
     * 
     */
    public Output<Boolean> snapshotDirectoryVisible() {
        return this.snapshotDirectoryVisible;
    }

    /**
     * The maximum Storage Quota allowed for a file system in Gigabytes.
     * 
     */
    @Import(name="storageQuotaInGb", required=true)
    private Output<Integer> storageQuotaInGb;

    /**
     * @return The maximum Storage Quota allowed for a file system in Gigabytes.
     * 
     */
    public Output<Integer> storageQuotaInGb() {
        return this.storageQuotaInGb;
    }

    /**
     * The ID of the Subnet the NetApp Volume resides in, which must have the `Microsoft.NetApp/volumes` delegation. Changing this forces a new Application Volume Group to be created and data will be lost.
     * 
     */
    @Import(name="subnetId", required=true)
    private Output<String> subnetId;

    /**
     * @return The ID of the Subnet the NetApp Volume resides in, which must have the `Microsoft.NetApp/volumes` delegation. Changing this forces a new Application Volume Group to be created and data will be lost.
     * 
     */
    public Output<String> subnetId() {
        return this.subnetId;
    }

    /**
     * A mapping of tags which should be assigned to the Application Volume Group.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return A mapping of tags which should be assigned to the Application Volume Group.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * Throughput of this volume in Mibps.
     * 
     */
    @Import(name="throughputInMibps", required=true)
    private Output<Double> throughputInMibps;

    /**
     * @return Throughput of this volume in Mibps.
     * 
     */
    public Output<Double> throughputInMibps() {
        return this.throughputInMibps;
    }

    /**
     * A unique file path for the volume. Changing this forces a new Application Volume Group to be created and data will be lost.
     * 
     */
    @Import(name="volumePath", required=true)
    private Output<String> volumePath;

    /**
     * @return A unique file path for the volume. Changing this forces a new Application Volume Group to be created and data will be lost.
     * 
     */
    public Output<String> volumePath() {
        return this.volumePath;
    }

    /**
     * Volume specification name. Possible values are `data`, `log`, `shared`, `data-backup` and `log-backup`. Changing this forces a new Application Volume Group to be created and data will be lost.
     * 
     */
    @Import(name="volumeSpecName", required=true)
    private Output<String> volumeSpecName;

    /**
     * @return Volume specification name. Possible values are `data`, `log`, `shared`, `data-backup` and `log-backup`. Changing this forces a new Application Volume Group to be created and data will be lost.
     * 
     */
    public Output<String> volumeSpecName() {
        return this.volumeSpecName;
    }

    private VolumeGroupSapHanaVolumeArgs() {}

    private VolumeGroupSapHanaVolumeArgs(VolumeGroupSapHanaVolumeArgs $) {
        this.capacityPoolId = $.capacityPoolId;
        this.dataProtectionReplication = $.dataProtectionReplication;
        this.dataProtectionSnapshotPolicy = $.dataProtectionSnapshotPolicy;
        this.exportPolicyRules = $.exportPolicyRules;
        this.id = $.id;
        this.mountIpAddresses = $.mountIpAddresses;
        this.name = $.name;
        this.protocols = $.protocols;
        this.proximityPlacementGroupId = $.proximityPlacementGroupId;
        this.securityStyle = $.securityStyle;
        this.serviceLevel = $.serviceLevel;
        this.snapshotDirectoryVisible = $.snapshotDirectoryVisible;
        this.storageQuotaInGb = $.storageQuotaInGb;
        this.subnetId = $.subnetId;
        this.tags = $.tags;
        this.throughputInMibps = $.throughputInMibps;
        this.volumePath = $.volumePath;
        this.volumeSpecName = $.volumeSpecName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VolumeGroupSapHanaVolumeArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VolumeGroupSapHanaVolumeArgs $;

        public Builder() {
            $ = new VolumeGroupSapHanaVolumeArgs();
        }

        public Builder(VolumeGroupSapHanaVolumeArgs defaults) {
            $ = new VolumeGroupSapHanaVolumeArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param capacityPoolId The ID of the Capacity Pool. Changing this forces a new Application Volume Group to be created and data will be lost.
         * 
         * @return builder
         * 
         */
        public Builder capacityPoolId(Output<String> capacityPoolId) {
            $.capacityPoolId = capacityPoolId;
            return this;
        }

        /**
         * @param capacityPoolId The ID of the Capacity Pool. Changing this forces a new Application Volume Group to be created and data will be lost.
         * 
         * @return builder
         * 
         */
        public Builder capacityPoolId(String capacityPoolId) {
            return capacityPoolId(Output.of(capacityPoolId));
        }

        /**
         * @param dataProtectionReplication A `data_protection_replication` block as defined below. Changing this forces a new Application Volume Group to be created and data will be lost.
         * 
         * @return builder
         * 
         */
        public Builder dataProtectionReplication(@Nullable Output<VolumeGroupSapHanaVolumeDataProtectionReplicationArgs> dataProtectionReplication) {
            $.dataProtectionReplication = dataProtectionReplication;
            return this;
        }

        /**
         * @param dataProtectionReplication A `data_protection_replication` block as defined below. Changing this forces a new Application Volume Group to be created and data will be lost.
         * 
         * @return builder
         * 
         */
        public Builder dataProtectionReplication(VolumeGroupSapHanaVolumeDataProtectionReplicationArgs dataProtectionReplication) {
            return dataProtectionReplication(Output.of(dataProtectionReplication));
        }

        /**
         * @param dataProtectionSnapshotPolicy A `data_protection_snapshot_policy` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder dataProtectionSnapshotPolicy(@Nullable Output<VolumeGroupSapHanaVolumeDataProtectionSnapshotPolicyArgs> dataProtectionSnapshotPolicy) {
            $.dataProtectionSnapshotPolicy = dataProtectionSnapshotPolicy;
            return this;
        }

        /**
         * @param dataProtectionSnapshotPolicy A `data_protection_snapshot_policy` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder dataProtectionSnapshotPolicy(VolumeGroupSapHanaVolumeDataProtectionSnapshotPolicyArgs dataProtectionSnapshotPolicy) {
            return dataProtectionSnapshotPolicy(Output.of(dataProtectionSnapshotPolicy));
        }

        /**
         * @param exportPolicyRules One or more `export_policy_rule` blocks as defined below.
         * 
         * @return builder
         * 
         */
        public Builder exportPolicyRules(Output<List<VolumeGroupSapHanaVolumeExportPolicyRuleArgs>> exportPolicyRules) {
            $.exportPolicyRules = exportPolicyRules;
            return this;
        }

        /**
         * @param exportPolicyRules One or more `export_policy_rule` blocks as defined below.
         * 
         * @return builder
         * 
         */
        public Builder exportPolicyRules(List<VolumeGroupSapHanaVolumeExportPolicyRuleArgs> exportPolicyRules) {
            return exportPolicyRules(Output.of(exportPolicyRules));
        }

        /**
         * @param exportPolicyRules One or more `export_policy_rule` blocks as defined below.
         * 
         * @return builder
         * 
         */
        public Builder exportPolicyRules(VolumeGroupSapHanaVolumeExportPolicyRuleArgs... exportPolicyRules) {
            return exportPolicyRules(List.of(exportPolicyRules));
        }

        /**
         * @param id The ID of the Application Volume Group.
         * 
         * @return builder
         * 
         */
        public Builder id(@Nullable Output<String> id) {
            $.id = id;
            return this;
        }

        /**
         * @param id The ID of the Application Volume Group.
         * 
         * @return builder
         * 
         */
        public Builder id(String id) {
            return id(Output.of(id));
        }

        public Builder mountIpAddresses(@Nullable Output<List<String>> mountIpAddresses) {
            $.mountIpAddresses = mountIpAddresses;
            return this;
        }

        public Builder mountIpAddresses(List<String> mountIpAddresses) {
            return mountIpAddresses(Output.of(mountIpAddresses));
        }

        public Builder mountIpAddresses(String... mountIpAddresses) {
            return mountIpAddresses(List.of(mountIpAddresses));
        }

        /**
         * @param name The name which should be used for this volume. Changing this forces a new Application Volume Group to be created and data will be lost.
         * 
         * @return builder
         * 
         */
        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name which should be used for this volume. Changing this forces a new Application Volume Group to be created and data will be lost.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param protocols The target volume protocol expressed as a list. Changing this forces a new Application Volume Group to be created and data will be lost. Supported values for Application Volume Group include `NFSv3` or `NFSv4.1`, multi-protocol is not supported and there are certain rules on which protocol is supporteed per volume spec, please check [Configure application volume groups for the SAP HANA REST API](https://learn.microsoft.com/en-us/azure/azure-netapp-files/configure-application-volume-group-sap-hana-api) document for details.
         * 
         * @return builder
         * 
         */
        public Builder protocols(Output<String> protocols) {
            $.protocols = protocols;
            return this;
        }

        /**
         * @param protocols The target volume protocol expressed as a list. Changing this forces a new Application Volume Group to be created and data will be lost. Supported values for Application Volume Group include `NFSv3` or `NFSv4.1`, multi-protocol is not supported and there are certain rules on which protocol is supporteed per volume spec, please check [Configure application volume groups for the SAP HANA REST API](https://learn.microsoft.com/en-us/azure/azure-netapp-files/configure-application-volume-group-sap-hana-api) document for details.
         * 
         * @return builder
         * 
         */
        public Builder protocols(String protocols) {
            return protocols(Output.of(protocols));
        }

        /**
         * @param proximityPlacementGroupId The ID of the proximity placement group. Changing this forces a new Application Volume Group to be created and data will be lost. For SAP-HANA application, it is required to have PPG enabled so Azure NetApp Files can pin the volumes next to your compute resources, please check [Requirements and considerations for application volume group for SAP HANA](https://learn.microsoft.com/en-us/azure/azure-netapp-files/application-volume-group-considerations) for details and other requirements.
         * 
         * @return builder
         * 
         */
        public Builder proximityPlacementGroupId(@Nullable Output<String> proximityPlacementGroupId) {
            $.proximityPlacementGroupId = proximityPlacementGroupId;
            return this;
        }

        /**
         * @param proximityPlacementGroupId The ID of the proximity placement group. Changing this forces a new Application Volume Group to be created and data will be lost. For SAP-HANA application, it is required to have PPG enabled so Azure NetApp Files can pin the volumes next to your compute resources, please check [Requirements and considerations for application volume group for SAP HANA](https://learn.microsoft.com/en-us/azure/azure-netapp-files/application-volume-group-considerations) for details and other requirements.
         * 
         * @return builder
         * 
         */
        public Builder proximityPlacementGroupId(String proximityPlacementGroupId) {
            return proximityPlacementGroupId(Output.of(proximityPlacementGroupId));
        }

        /**
         * @param securityStyle Volume security style. Possible values are `ntfs` and `unix`. Changing this forces a new Application Volume Group to be created and data will be lost.
         * 
         * @return builder
         * 
         */
        public Builder securityStyle(Output<String> securityStyle) {
            $.securityStyle = securityStyle;
            return this;
        }

        /**
         * @param securityStyle Volume security style. Possible values are `ntfs` and `unix`. Changing this forces a new Application Volume Group to be created and data will be lost.
         * 
         * @return builder
         * 
         */
        public Builder securityStyle(String securityStyle) {
            return securityStyle(Output.of(securityStyle));
        }

        /**
         * @param serviceLevel Volume security style. Possible values are `Premium`, `Standard` and `Ultra`. Changing this forces a new Application Volume Group to be created and data will be lost.
         * 
         * @return builder
         * 
         */
        public Builder serviceLevel(Output<String> serviceLevel) {
            $.serviceLevel = serviceLevel;
            return this;
        }

        /**
         * @param serviceLevel Volume security style. Possible values are `Premium`, `Standard` and `Ultra`. Changing this forces a new Application Volume Group to be created and data will be lost.
         * 
         * @return builder
         * 
         */
        public Builder serviceLevel(String serviceLevel) {
            return serviceLevel(Output.of(serviceLevel));
        }

        /**
         * @param snapshotDirectoryVisible Specifies whether the .snapshot (NFS clients) path of a volume is visible. Changing this forces a new Application Volume Group to be created and data will be lost.
         * 
         * @return builder
         * 
         */
        public Builder snapshotDirectoryVisible(Output<Boolean> snapshotDirectoryVisible) {
            $.snapshotDirectoryVisible = snapshotDirectoryVisible;
            return this;
        }

        /**
         * @param snapshotDirectoryVisible Specifies whether the .snapshot (NFS clients) path of a volume is visible. Changing this forces a new Application Volume Group to be created and data will be lost.
         * 
         * @return builder
         * 
         */
        public Builder snapshotDirectoryVisible(Boolean snapshotDirectoryVisible) {
            return snapshotDirectoryVisible(Output.of(snapshotDirectoryVisible));
        }

        /**
         * @param storageQuotaInGb The maximum Storage Quota allowed for a file system in Gigabytes.
         * 
         * @return builder
         * 
         */
        public Builder storageQuotaInGb(Output<Integer> storageQuotaInGb) {
            $.storageQuotaInGb = storageQuotaInGb;
            return this;
        }

        /**
         * @param storageQuotaInGb The maximum Storage Quota allowed for a file system in Gigabytes.
         * 
         * @return builder
         * 
         */
        public Builder storageQuotaInGb(Integer storageQuotaInGb) {
            return storageQuotaInGb(Output.of(storageQuotaInGb));
        }

        /**
         * @param subnetId The ID of the Subnet the NetApp Volume resides in, which must have the `Microsoft.NetApp/volumes` delegation. Changing this forces a new Application Volume Group to be created and data will be lost.
         * 
         * @return builder
         * 
         */
        public Builder subnetId(Output<String> subnetId) {
            $.subnetId = subnetId;
            return this;
        }

        /**
         * @param subnetId The ID of the Subnet the NetApp Volume resides in, which must have the `Microsoft.NetApp/volumes` delegation. Changing this forces a new Application Volume Group to be created and data will be lost.
         * 
         * @return builder
         * 
         */
        public Builder subnetId(String subnetId) {
            return subnetId(Output.of(subnetId));
        }

        /**
         * @param tags A mapping of tags which should be assigned to the Application Volume Group.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags A mapping of tags which should be assigned to the Application Volume Group.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param throughputInMibps Throughput of this volume in Mibps.
         * 
         * @return builder
         * 
         */
        public Builder throughputInMibps(Output<Double> throughputInMibps) {
            $.throughputInMibps = throughputInMibps;
            return this;
        }

        /**
         * @param throughputInMibps Throughput of this volume in Mibps.
         * 
         * @return builder
         * 
         */
        public Builder throughputInMibps(Double throughputInMibps) {
            return throughputInMibps(Output.of(throughputInMibps));
        }

        /**
         * @param volumePath A unique file path for the volume. Changing this forces a new Application Volume Group to be created and data will be lost.
         * 
         * @return builder
         * 
         */
        public Builder volumePath(Output<String> volumePath) {
            $.volumePath = volumePath;
            return this;
        }

        /**
         * @param volumePath A unique file path for the volume. Changing this forces a new Application Volume Group to be created and data will be lost.
         * 
         * @return builder
         * 
         */
        public Builder volumePath(String volumePath) {
            return volumePath(Output.of(volumePath));
        }

        /**
         * @param volumeSpecName Volume specification name. Possible values are `data`, `log`, `shared`, `data-backup` and `log-backup`. Changing this forces a new Application Volume Group to be created and data will be lost.
         * 
         * @return builder
         * 
         */
        public Builder volumeSpecName(Output<String> volumeSpecName) {
            $.volumeSpecName = volumeSpecName;
            return this;
        }

        /**
         * @param volumeSpecName Volume specification name. Possible values are `data`, `log`, `shared`, `data-backup` and `log-backup`. Changing this forces a new Application Volume Group to be created and data will be lost.
         * 
         * @return builder
         * 
         */
        public Builder volumeSpecName(String volumeSpecName) {
            return volumeSpecName(Output.of(volumeSpecName));
        }

        public VolumeGroupSapHanaVolumeArgs build() {
            $.capacityPoolId = Objects.requireNonNull($.capacityPoolId, "expected parameter 'capacityPoolId' to be non-null");
            $.exportPolicyRules = Objects.requireNonNull($.exportPolicyRules, "expected parameter 'exportPolicyRules' to be non-null");
            $.name = Objects.requireNonNull($.name, "expected parameter 'name' to be non-null");
            $.protocols = Objects.requireNonNull($.protocols, "expected parameter 'protocols' to be non-null");
            $.securityStyle = Objects.requireNonNull($.securityStyle, "expected parameter 'securityStyle' to be non-null");
            $.serviceLevel = Objects.requireNonNull($.serviceLevel, "expected parameter 'serviceLevel' to be non-null");
            $.snapshotDirectoryVisible = Objects.requireNonNull($.snapshotDirectoryVisible, "expected parameter 'snapshotDirectoryVisible' to be non-null");
            $.storageQuotaInGb = Objects.requireNonNull($.storageQuotaInGb, "expected parameter 'storageQuotaInGb' to be non-null");
            $.subnetId = Objects.requireNonNull($.subnetId, "expected parameter 'subnetId' to be non-null");
            $.throughputInMibps = Objects.requireNonNull($.throughputInMibps, "expected parameter 'throughputInMibps' to be non-null");
            $.volumePath = Objects.requireNonNull($.volumePath, "expected parameter 'volumePath' to be non-null");
            $.volumeSpecName = Objects.requireNonNull($.volumeSpecName, "expected parameter 'volumeSpecName' to be non-null");
            return $;
        }
    }

}
