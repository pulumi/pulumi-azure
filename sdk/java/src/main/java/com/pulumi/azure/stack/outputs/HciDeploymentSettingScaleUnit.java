// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.stack.outputs;

import com.pulumi.azure.stack.outputs.HciDeploymentSettingScaleUnitCluster;
import com.pulumi.azure.stack.outputs.HciDeploymentSettingScaleUnitHostNetwork;
import com.pulumi.azure.stack.outputs.HciDeploymentSettingScaleUnitInfrastructureNetwork;
import com.pulumi.azure.stack.outputs.HciDeploymentSettingScaleUnitOptionalService;
import com.pulumi.azure.stack.outputs.HciDeploymentSettingScaleUnitPhysicalNode;
import com.pulumi.azure.stack.outputs.HciDeploymentSettingScaleUnitStorage;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class HciDeploymentSettingScaleUnit {
    /**
     * @return Specify the full name of the Active Directory Organizational Unit container object prepared for the deployment, including the domain components. For example:`OU=HCI01,DC=contoso,DC=com`. Changing this forces a new Stack HCI Deployment Setting to be created.
     * 
     */
    private String activeDirectoryOrganizationalUnitPath;
    /**
     * @return Whether to enable BitLocker for boot volume. Possible values are `true` and `false`. When set to `true`, BitLocker XTS_AES 256-bit encryption is enabled for all data-at-rest on the OS volume of your Azure Stack HCI cluster. This setting is TPM-hardware dependent. Defaults to `true`. Changing this forces a new Stack HCI Deployment Setting to be created.
     * 
     */
    private @Nullable Boolean bitlockerBootVolumeEnabled;
    /**
     * @return Whether to enable BitLocker for data volume. Possible values are `true` and `false`. When set to `true`, BitLocker XTS-AES 256-bit encryption is enabled for all data-at-rest on your Azure Stack HCI cluster shared volumes. Defaults to `true`. Changing this forces a new Stack HCI Deployment Setting to be created.
     * 
     */
    private @Nullable Boolean bitlockerDataVolumeEnabled;
    /**
     * @return A `cluster` block as defined above. Changing this forces a new Stack HCI Deployment Setting to be created.
     * 
     */
    private HciDeploymentSettingScaleUnitCluster cluster;
    /**
     * @return Whether to enable credential guard. Possible values are `true` and `false`. Defaults to `false`. Changing this forces a new Stack HCI Deployment Setting to be created.
     * 
     */
    private @Nullable Boolean credentialGuardEnabled;
    /**
     * @return Specifies the FQDN for deploying cluster. Changing this forces a new Stack HCI Deployment Setting to be created.
     * 
     */
    private String domainFqdn;
    /**
     * @return Whether to enable drift control. Possible values are `true` and `false`. When set to `true`, the security baseline is re-applied regularly. Defaults to `true`. Changing this forces a new Stack HCI Deployment Setting to be created.
     * 
     */
    private @Nullable Boolean driftControlEnabled;
    /**
     * @return Whether to enable DRTM protection. Possible values are `true` and `false`. When set to `true`, Secure Boot is enabled on your Azure HCI cluster. This setting is hardware dependent. Defaults to `true`. Changing this forces a new Stack HCI Deployment Setting to be created.
     * 
     */
    private @Nullable Boolean drtmProtectionEnabled;
    /**
     * @return Whether to collect log data to facilitate quicker issue resolution. Possible values are `true` and `false`. Defaults to `true`. Changing this forces a new Stack HCI Deployment Setting to be created.
     * 
     */
    private @Nullable Boolean episodicDataUploadEnabled;
    /**
     * @return Whether to store data sent to Microsoft in EU. The log and diagnostic data is sent to the appropriate diagnostics servers depending upon where your cluster resides. Setting this to `false` results in all data sent to Microsoft to be stored outside of the EU. Possible values are `true` and `false`. Defaults to `false`. Changing this forces a new Stack HCI Deployment Setting to be created.
     * 
     */
    private @Nullable Boolean euLocationEnabled;
    /**
     * @return A `hostNetwork` block as defined above. Changing this forces a new Stack HCI Deployment Setting to be created.
     * 
     */
    private HciDeploymentSettingScaleUnitHostNetwork hostNetwork;
    /**
     * @return Whether to enable HVCI protection. Possible values are `true` and `false`. When set to `true`, Hypervisor-protected Code Integrity is enabled on your Azure HCI cluster. Defaults to `true`. Changing this forces a new Stack HCI Deployment Setting to be created.
     * 
     */
    private @Nullable Boolean hvciProtectionEnabled;
    /**
     * @return One or more `infrastructureNetwork` blocks as defined above. Changing this forces a new Stack HCI Deployment Setting to be created.
     * 
     */
    private List<HciDeploymentSettingScaleUnitInfrastructureNetwork> infrastructureNetworks;
    /**
     * @return Specifies the name prefix to deploy cluster. It must be 1-8 characters long and contain only letters, numbers and hyphens Changing this forces a new Stack HCI Deployment Setting to be created.
     * 
     */
    private String namePrefix;
    /**
     * @return A `optionalService` block as defined above. Changing this forces a new Stack HCI Deployment Setting to be created.
     * 
     */
    private HciDeploymentSettingScaleUnitOptionalService optionalService;
    /**
     * @return One or more `physicalNode` blocks as defined above. Changing this forces a new Stack HCI Deployment Setting to be created.
     * 
     */
    private List<HciDeploymentSettingScaleUnitPhysicalNode> physicalNodes;
    /**
     * @return The URI to the Key Vault or secret store. Changing this forces a new Stack HCI Deployment Setting to be created.
     * 
     */
    private String secretsLocation;
    /**
     * @return Whether to enable side channel mitigation. Possible values are `true` and `false`. When set to `true`, all side channel mitigations are enabled on your Azure HCI cluster. Defaults to `true`. Changing this forces a new Stack HCI Deployment Setting to be created.
     * 
     */
    private @Nullable Boolean sideChannelMitigationEnabled;
    /**
     * @return Whether to enable SMB cluster encryption. Possible values are `true` and `false`. When set to `true`, cluster east-west traffic is encrypted. Defaults to `false`. Changing this forces a new Stack HCI Deployment Setting to be created.
     * 
     */
    private @Nullable Boolean smbClusterEncryptionEnabled;
    /**
     * @return Whether to enable SMB signing. Possible values are `true` and `false`. When set to `true`, the SMB default instance requires sign in for the client and server services. Defaults to `true`. Changing this forces a new Stack HCI Deployment Setting to be created.
     * 
     */
    private @Nullable Boolean smbSigningEnabled;
    /**
     * @return A `storage` block as defined below. Changing this forces a new Stack HCI Deployment Setting to be created.
     * 
     */
    private HciDeploymentSettingScaleUnitStorage storage;
    /**
     * @return Whether the telemetry data will be sent to Microsoft. Possible values are `true` and `false`. Defaults to `true`. Changing this forces a new Stack HCI Deployment Setting to be created.
     * 
     */
    private @Nullable Boolean streamingDataClientEnabled;
    /**
     * @return Whether to enable WDAC. Possible values are `true` and `false`. When set to `true`, applications and the code that you can run on your Azure Stack HCI cluster are limited. Defaults to `true`. Changing this forces a new Stack HCI Deployment Setting to be created.
     * 
     */
    private @Nullable Boolean wdacEnabled;

    private HciDeploymentSettingScaleUnit() {}
    /**
     * @return Specify the full name of the Active Directory Organizational Unit container object prepared for the deployment, including the domain components. For example:`OU=HCI01,DC=contoso,DC=com`. Changing this forces a new Stack HCI Deployment Setting to be created.
     * 
     */
    public String activeDirectoryOrganizationalUnitPath() {
        return this.activeDirectoryOrganizationalUnitPath;
    }
    /**
     * @return Whether to enable BitLocker for boot volume. Possible values are `true` and `false`. When set to `true`, BitLocker XTS_AES 256-bit encryption is enabled for all data-at-rest on the OS volume of your Azure Stack HCI cluster. This setting is TPM-hardware dependent. Defaults to `true`. Changing this forces a new Stack HCI Deployment Setting to be created.
     * 
     */
    public Optional<Boolean> bitlockerBootVolumeEnabled() {
        return Optional.ofNullable(this.bitlockerBootVolumeEnabled);
    }
    /**
     * @return Whether to enable BitLocker for data volume. Possible values are `true` and `false`. When set to `true`, BitLocker XTS-AES 256-bit encryption is enabled for all data-at-rest on your Azure Stack HCI cluster shared volumes. Defaults to `true`. Changing this forces a new Stack HCI Deployment Setting to be created.
     * 
     */
    public Optional<Boolean> bitlockerDataVolumeEnabled() {
        return Optional.ofNullable(this.bitlockerDataVolumeEnabled);
    }
    /**
     * @return A `cluster` block as defined above. Changing this forces a new Stack HCI Deployment Setting to be created.
     * 
     */
    public HciDeploymentSettingScaleUnitCluster cluster() {
        return this.cluster;
    }
    /**
     * @return Whether to enable credential guard. Possible values are `true` and `false`. Defaults to `false`. Changing this forces a new Stack HCI Deployment Setting to be created.
     * 
     */
    public Optional<Boolean> credentialGuardEnabled() {
        return Optional.ofNullable(this.credentialGuardEnabled);
    }
    /**
     * @return Specifies the FQDN for deploying cluster. Changing this forces a new Stack HCI Deployment Setting to be created.
     * 
     */
    public String domainFqdn() {
        return this.domainFqdn;
    }
    /**
     * @return Whether to enable drift control. Possible values are `true` and `false`. When set to `true`, the security baseline is re-applied regularly. Defaults to `true`. Changing this forces a new Stack HCI Deployment Setting to be created.
     * 
     */
    public Optional<Boolean> driftControlEnabled() {
        return Optional.ofNullable(this.driftControlEnabled);
    }
    /**
     * @return Whether to enable DRTM protection. Possible values are `true` and `false`. When set to `true`, Secure Boot is enabled on your Azure HCI cluster. This setting is hardware dependent. Defaults to `true`. Changing this forces a new Stack HCI Deployment Setting to be created.
     * 
     */
    public Optional<Boolean> drtmProtectionEnabled() {
        return Optional.ofNullable(this.drtmProtectionEnabled);
    }
    /**
     * @return Whether to collect log data to facilitate quicker issue resolution. Possible values are `true` and `false`. Defaults to `true`. Changing this forces a new Stack HCI Deployment Setting to be created.
     * 
     */
    public Optional<Boolean> episodicDataUploadEnabled() {
        return Optional.ofNullable(this.episodicDataUploadEnabled);
    }
    /**
     * @return Whether to store data sent to Microsoft in EU. The log and diagnostic data is sent to the appropriate diagnostics servers depending upon where your cluster resides. Setting this to `false` results in all data sent to Microsoft to be stored outside of the EU. Possible values are `true` and `false`. Defaults to `false`. Changing this forces a new Stack HCI Deployment Setting to be created.
     * 
     */
    public Optional<Boolean> euLocationEnabled() {
        return Optional.ofNullable(this.euLocationEnabled);
    }
    /**
     * @return A `hostNetwork` block as defined above. Changing this forces a new Stack HCI Deployment Setting to be created.
     * 
     */
    public HciDeploymentSettingScaleUnitHostNetwork hostNetwork() {
        return this.hostNetwork;
    }
    /**
     * @return Whether to enable HVCI protection. Possible values are `true` and `false`. When set to `true`, Hypervisor-protected Code Integrity is enabled on your Azure HCI cluster. Defaults to `true`. Changing this forces a new Stack HCI Deployment Setting to be created.
     * 
     */
    public Optional<Boolean> hvciProtectionEnabled() {
        return Optional.ofNullable(this.hvciProtectionEnabled);
    }
    /**
     * @return One or more `infrastructureNetwork` blocks as defined above. Changing this forces a new Stack HCI Deployment Setting to be created.
     * 
     */
    public List<HciDeploymentSettingScaleUnitInfrastructureNetwork> infrastructureNetworks() {
        return this.infrastructureNetworks;
    }
    /**
     * @return Specifies the name prefix to deploy cluster. It must be 1-8 characters long and contain only letters, numbers and hyphens Changing this forces a new Stack HCI Deployment Setting to be created.
     * 
     */
    public String namePrefix() {
        return this.namePrefix;
    }
    /**
     * @return A `optionalService` block as defined above. Changing this forces a new Stack HCI Deployment Setting to be created.
     * 
     */
    public HciDeploymentSettingScaleUnitOptionalService optionalService() {
        return this.optionalService;
    }
    /**
     * @return One or more `physicalNode` blocks as defined above. Changing this forces a new Stack HCI Deployment Setting to be created.
     * 
     */
    public List<HciDeploymentSettingScaleUnitPhysicalNode> physicalNodes() {
        return this.physicalNodes;
    }
    /**
     * @return The URI to the Key Vault or secret store. Changing this forces a new Stack HCI Deployment Setting to be created.
     * 
     */
    public String secretsLocation() {
        return this.secretsLocation;
    }
    /**
     * @return Whether to enable side channel mitigation. Possible values are `true` and `false`. When set to `true`, all side channel mitigations are enabled on your Azure HCI cluster. Defaults to `true`. Changing this forces a new Stack HCI Deployment Setting to be created.
     * 
     */
    public Optional<Boolean> sideChannelMitigationEnabled() {
        return Optional.ofNullable(this.sideChannelMitigationEnabled);
    }
    /**
     * @return Whether to enable SMB cluster encryption. Possible values are `true` and `false`. When set to `true`, cluster east-west traffic is encrypted. Defaults to `false`. Changing this forces a new Stack HCI Deployment Setting to be created.
     * 
     */
    public Optional<Boolean> smbClusterEncryptionEnabled() {
        return Optional.ofNullable(this.smbClusterEncryptionEnabled);
    }
    /**
     * @return Whether to enable SMB signing. Possible values are `true` and `false`. When set to `true`, the SMB default instance requires sign in for the client and server services. Defaults to `true`. Changing this forces a new Stack HCI Deployment Setting to be created.
     * 
     */
    public Optional<Boolean> smbSigningEnabled() {
        return Optional.ofNullable(this.smbSigningEnabled);
    }
    /**
     * @return A `storage` block as defined below. Changing this forces a new Stack HCI Deployment Setting to be created.
     * 
     */
    public HciDeploymentSettingScaleUnitStorage storage() {
        return this.storage;
    }
    /**
     * @return Whether the telemetry data will be sent to Microsoft. Possible values are `true` and `false`. Defaults to `true`. Changing this forces a new Stack HCI Deployment Setting to be created.
     * 
     */
    public Optional<Boolean> streamingDataClientEnabled() {
        return Optional.ofNullable(this.streamingDataClientEnabled);
    }
    /**
     * @return Whether to enable WDAC. Possible values are `true` and `false`. When set to `true`, applications and the code that you can run on your Azure Stack HCI cluster are limited. Defaults to `true`. Changing this forces a new Stack HCI Deployment Setting to be created.
     * 
     */
    public Optional<Boolean> wdacEnabled() {
        return Optional.ofNullable(this.wdacEnabled);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(HciDeploymentSettingScaleUnit defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String activeDirectoryOrganizationalUnitPath;
        private @Nullable Boolean bitlockerBootVolumeEnabled;
        private @Nullable Boolean bitlockerDataVolumeEnabled;
        private HciDeploymentSettingScaleUnitCluster cluster;
        private @Nullable Boolean credentialGuardEnabled;
        private String domainFqdn;
        private @Nullable Boolean driftControlEnabled;
        private @Nullable Boolean drtmProtectionEnabled;
        private @Nullable Boolean episodicDataUploadEnabled;
        private @Nullable Boolean euLocationEnabled;
        private HciDeploymentSettingScaleUnitHostNetwork hostNetwork;
        private @Nullable Boolean hvciProtectionEnabled;
        private List<HciDeploymentSettingScaleUnitInfrastructureNetwork> infrastructureNetworks;
        private String namePrefix;
        private HciDeploymentSettingScaleUnitOptionalService optionalService;
        private List<HciDeploymentSettingScaleUnitPhysicalNode> physicalNodes;
        private String secretsLocation;
        private @Nullable Boolean sideChannelMitigationEnabled;
        private @Nullable Boolean smbClusterEncryptionEnabled;
        private @Nullable Boolean smbSigningEnabled;
        private HciDeploymentSettingScaleUnitStorage storage;
        private @Nullable Boolean streamingDataClientEnabled;
        private @Nullable Boolean wdacEnabled;
        public Builder() {}
        public Builder(HciDeploymentSettingScaleUnit defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.activeDirectoryOrganizationalUnitPath = defaults.activeDirectoryOrganizationalUnitPath;
    	      this.bitlockerBootVolumeEnabled = defaults.bitlockerBootVolumeEnabled;
    	      this.bitlockerDataVolumeEnabled = defaults.bitlockerDataVolumeEnabled;
    	      this.cluster = defaults.cluster;
    	      this.credentialGuardEnabled = defaults.credentialGuardEnabled;
    	      this.domainFqdn = defaults.domainFqdn;
    	      this.driftControlEnabled = defaults.driftControlEnabled;
    	      this.drtmProtectionEnabled = defaults.drtmProtectionEnabled;
    	      this.episodicDataUploadEnabled = defaults.episodicDataUploadEnabled;
    	      this.euLocationEnabled = defaults.euLocationEnabled;
    	      this.hostNetwork = defaults.hostNetwork;
    	      this.hvciProtectionEnabled = defaults.hvciProtectionEnabled;
    	      this.infrastructureNetworks = defaults.infrastructureNetworks;
    	      this.namePrefix = defaults.namePrefix;
    	      this.optionalService = defaults.optionalService;
    	      this.physicalNodes = defaults.physicalNodes;
    	      this.secretsLocation = defaults.secretsLocation;
    	      this.sideChannelMitigationEnabled = defaults.sideChannelMitigationEnabled;
    	      this.smbClusterEncryptionEnabled = defaults.smbClusterEncryptionEnabled;
    	      this.smbSigningEnabled = defaults.smbSigningEnabled;
    	      this.storage = defaults.storage;
    	      this.streamingDataClientEnabled = defaults.streamingDataClientEnabled;
    	      this.wdacEnabled = defaults.wdacEnabled;
        }

        @CustomType.Setter
        public Builder activeDirectoryOrganizationalUnitPath(String activeDirectoryOrganizationalUnitPath) {
            if (activeDirectoryOrganizationalUnitPath == null) {
              throw new MissingRequiredPropertyException("HciDeploymentSettingScaleUnit", "activeDirectoryOrganizationalUnitPath");
            }
            this.activeDirectoryOrganizationalUnitPath = activeDirectoryOrganizationalUnitPath;
            return this;
        }
        @CustomType.Setter
        public Builder bitlockerBootVolumeEnabled(@Nullable Boolean bitlockerBootVolumeEnabled) {

            this.bitlockerBootVolumeEnabled = bitlockerBootVolumeEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder bitlockerDataVolumeEnabled(@Nullable Boolean bitlockerDataVolumeEnabled) {

            this.bitlockerDataVolumeEnabled = bitlockerDataVolumeEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder cluster(HciDeploymentSettingScaleUnitCluster cluster) {
            if (cluster == null) {
              throw new MissingRequiredPropertyException("HciDeploymentSettingScaleUnit", "cluster");
            }
            this.cluster = cluster;
            return this;
        }
        @CustomType.Setter
        public Builder credentialGuardEnabled(@Nullable Boolean credentialGuardEnabled) {

            this.credentialGuardEnabled = credentialGuardEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder domainFqdn(String domainFqdn) {
            if (domainFqdn == null) {
              throw new MissingRequiredPropertyException("HciDeploymentSettingScaleUnit", "domainFqdn");
            }
            this.domainFqdn = domainFqdn;
            return this;
        }
        @CustomType.Setter
        public Builder driftControlEnabled(@Nullable Boolean driftControlEnabled) {

            this.driftControlEnabled = driftControlEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder drtmProtectionEnabled(@Nullable Boolean drtmProtectionEnabled) {

            this.drtmProtectionEnabled = drtmProtectionEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder episodicDataUploadEnabled(@Nullable Boolean episodicDataUploadEnabled) {

            this.episodicDataUploadEnabled = episodicDataUploadEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder euLocationEnabled(@Nullable Boolean euLocationEnabled) {

            this.euLocationEnabled = euLocationEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder hostNetwork(HciDeploymentSettingScaleUnitHostNetwork hostNetwork) {
            if (hostNetwork == null) {
              throw new MissingRequiredPropertyException("HciDeploymentSettingScaleUnit", "hostNetwork");
            }
            this.hostNetwork = hostNetwork;
            return this;
        }
        @CustomType.Setter
        public Builder hvciProtectionEnabled(@Nullable Boolean hvciProtectionEnabled) {

            this.hvciProtectionEnabled = hvciProtectionEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder infrastructureNetworks(List<HciDeploymentSettingScaleUnitInfrastructureNetwork> infrastructureNetworks) {
            if (infrastructureNetworks == null) {
              throw new MissingRequiredPropertyException("HciDeploymentSettingScaleUnit", "infrastructureNetworks");
            }
            this.infrastructureNetworks = infrastructureNetworks;
            return this;
        }
        public Builder infrastructureNetworks(HciDeploymentSettingScaleUnitInfrastructureNetwork... infrastructureNetworks) {
            return infrastructureNetworks(List.of(infrastructureNetworks));
        }
        @CustomType.Setter
        public Builder namePrefix(String namePrefix) {
            if (namePrefix == null) {
              throw new MissingRequiredPropertyException("HciDeploymentSettingScaleUnit", "namePrefix");
            }
            this.namePrefix = namePrefix;
            return this;
        }
        @CustomType.Setter
        public Builder optionalService(HciDeploymentSettingScaleUnitOptionalService optionalService) {
            if (optionalService == null) {
              throw new MissingRequiredPropertyException("HciDeploymentSettingScaleUnit", "optionalService");
            }
            this.optionalService = optionalService;
            return this;
        }
        @CustomType.Setter
        public Builder physicalNodes(List<HciDeploymentSettingScaleUnitPhysicalNode> physicalNodes) {
            if (physicalNodes == null) {
              throw new MissingRequiredPropertyException("HciDeploymentSettingScaleUnit", "physicalNodes");
            }
            this.physicalNodes = physicalNodes;
            return this;
        }
        public Builder physicalNodes(HciDeploymentSettingScaleUnitPhysicalNode... physicalNodes) {
            return physicalNodes(List.of(physicalNodes));
        }
        @CustomType.Setter
        public Builder secretsLocation(String secretsLocation) {
            if (secretsLocation == null) {
              throw new MissingRequiredPropertyException("HciDeploymentSettingScaleUnit", "secretsLocation");
            }
            this.secretsLocation = secretsLocation;
            return this;
        }
        @CustomType.Setter
        public Builder sideChannelMitigationEnabled(@Nullable Boolean sideChannelMitigationEnabled) {

            this.sideChannelMitigationEnabled = sideChannelMitigationEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder smbClusterEncryptionEnabled(@Nullable Boolean smbClusterEncryptionEnabled) {

            this.smbClusterEncryptionEnabled = smbClusterEncryptionEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder smbSigningEnabled(@Nullable Boolean smbSigningEnabled) {

            this.smbSigningEnabled = smbSigningEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder storage(HciDeploymentSettingScaleUnitStorage storage) {
            if (storage == null) {
              throw new MissingRequiredPropertyException("HciDeploymentSettingScaleUnit", "storage");
            }
            this.storage = storage;
            return this;
        }
        @CustomType.Setter
        public Builder streamingDataClientEnabled(@Nullable Boolean streamingDataClientEnabled) {

            this.streamingDataClientEnabled = streamingDataClientEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder wdacEnabled(@Nullable Boolean wdacEnabled) {

            this.wdacEnabled = wdacEnabled;
            return this;
        }
        public HciDeploymentSettingScaleUnit build() {
            final var _resultValue = new HciDeploymentSettingScaleUnit();
            _resultValue.activeDirectoryOrganizationalUnitPath = activeDirectoryOrganizationalUnitPath;
            _resultValue.bitlockerBootVolumeEnabled = bitlockerBootVolumeEnabled;
            _resultValue.bitlockerDataVolumeEnabled = bitlockerDataVolumeEnabled;
            _resultValue.cluster = cluster;
            _resultValue.credentialGuardEnabled = credentialGuardEnabled;
            _resultValue.domainFqdn = domainFqdn;
            _resultValue.driftControlEnabled = driftControlEnabled;
            _resultValue.drtmProtectionEnabled = drtmProtectionEnabled;
            _resultValue.episodicDataUploadEnabled = episodicDataUploadEnabled;
            _resultValue.euLocationEnabled = euLocationEnabled;
            _resultValue.hostNetwork = hostNetwork;
            _resultValue.hvciProtectionEnabled = hvciProtectionEnabled;
            _resultValue.infrastructureNetworks = infrastructureNetworks;
            _resultValue.namePrefix = namePrefix;
            _resultValue.optionalService = optionalService;
            _resultValue.physicalNodes = physicalNodes;
            _resultValue.secretsLocation = secretsLocation;
            _resultValue.sideChannelMitigationEnabled = sideChannelMitigationEnabled;
            _resultValue.smbClusterEncryptionEnabled = smbClusterEncryptionEnabled;
            _resultValue.smbSigningEnabled = smbSigningEnabled;
            _resultValue.storage = storage;
            _resultValue.streamingDataClientEnabled = streamingDataClientEnabled;
            _resultValue.wdacEnabled = wdacEnabled;
            return _resultValue;
        }
    }
}
