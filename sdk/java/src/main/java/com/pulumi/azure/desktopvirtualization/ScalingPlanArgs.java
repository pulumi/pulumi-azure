// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.desktopvirtualization;

import com.pulumi.azure.desktopvirtualization.inputs.ScalingPlanHostPoolArgs;
import com.pulumi.azure.desktopvirtualization.inputs.ScalingPlanScheduleArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ScalingPlanArgs extends com.pulumi.resources.ResourceArgs {

    public static final ScalingPlanArgs Empty = new ScalingPlanArgs();

    /**
     * A description of the Scaling Plan.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return A description of the Scaling Plan.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * The name of the tag associated with the VMs you want to exclude from autoscaling.
     * 
     */
    @Import(name="exclusionTag")
    private @Nullable Output<String> exclusionTag;

    /**
     * @return The name of the tag associated with the VMs you want to exclude from autoscaling.
     * 
     */
    public Optional<Output<String>> exclusionTag() {
        return Optional.ofNullable(this.exclusionTag);
    }

    /**
     * Friendly name of the Scaling Plan.
     * 
     */
    @Import(name="friendlyName")
    private @Nullable Output<String> friendlyName;

    /**
     * @return Friendly name of the Scaling Plan.
     * 
     */
    public Optional<Output<String>> friendlyName() {
        return Optional.ofNullable(this.friendlyName);
    }

    /**
     * One or more `host_pool` blocks as defined below.
     * 
     */
    @Import(name="hostPools")
    private @Nullable Output<List<ScalingPlanHostPoolArgs>> hostPools;

    /**
     * @return One or more `host_pool` blocks as defined below.
     * 
     */
    public Optional<Output<List<ScalingPlanHostPoolArgs>>> hostPools() {
        return Optional.ofNullable(this.hostPools);
    }

    /**
     * The Azure Region where the Virtual Desktop Scaling Plan should exist. Changing this forces a new Virtual Desktop Scaling Plan to be created.
     * 
     */
    @Import(name="location")
    private @Nullable Output<String> location;

    /**
     * @return The Azure Region where the Virtual Desktop Scaling Plan should exist. Changing this forces a new Virtual Desktop Scaling Plan to be created.
     * 
     */
    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * The name which should be used for this Virtual Desktop Scaling Plan . Changing this forces a new Virtual Desktop Scaling Plan to be created.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name which should be used for this Virtual Desktop Scaling Plan . Changing this forces a new Virtual Desktop Scaling Plan to be created.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The name of the Resource Group where the Virtual Desktop Scaling Plan should exist. Changing this forces a new Virtual Desktop Scaling Plan to be created.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    /**
     * @return The name of the Resource Group where the Virtual Desktop Scaling Plan should exist. Changing this forces a new Virtual Desktop Scaling Plan to be created.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * One or more `schedule` blocks as defined below.
     * 
     */
    @Import(name="schedules", required=true)
    private Output<List<ScalingPlanScheduleArgs>> schedules;

    /**
     * @return One or more `schedule` blocks as defined below.
     * 
     */
    public Output<List<ScalingPlanScheduleArgs>> schedules() {
        return this.schedules;
    }

    /**
     * A mapping of tags which should be assigned to the Virtual Desktop Scaling Plan .
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return A mapping of tags which should be assigned to the Virtual Desktop Scaling Plan .
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * Specifies the Time Zone which should be used by the Scaling Plan for time based events, [the possible values are defined here](https://jackstromberg.com/2017/01/list-of-time-zones-consumed-by-azure/).
     * 
     */
    @Import(name="timeZone", required=true)
    private Output<String> timeZone;

    /**
     * @return Specifies the Time Zone which should be used by the Scaling Plan for time based events, [the possible values are defined here](https://jackstromberg.com/2017/01/list-of-time-zones-consumed-by-azure/).
     * 
     */
    public Output<String> timeZone() {
        return this.timeZone;
    }

    private ScalingPlanArgs() {}

    private ScalingPlanArgs(ScalingPlanArgs $) {
        this.description = $.description;
        this.exclusionTag = $.exclusionTag;
        this.friendlyName = $.friendlyName;
        this.hostPools = $.hostPools;
        this.location = $.location;
        this.name = $.name;
        this.resourceGroupName = $.resourceGroupName;
        this.schedules = $.schedules;
        this.tags = $.tags;
        this.timeZone = $.timeZone;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ScalingPlanArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ScalingPlanArgs $;

        public Builder() {
            $ = new ScalingPlanArgs();
        }

        public Builder(ScalingPlanArgs defaults) {
            $ = new ScalingPlanArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param description A description of the Scaling Plan.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description A description of the Scaling Plan.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param exclusionTag The name of the tag associated with the VMs you want to exclude from autoscaling.
         * 
         * @return builder
         * 
         */
        public Builder exclusionTag(@Nullable Output<String> exclusionTag) {
            $.exclusionTag = exclusionTag;
            return this;
        }

        /**
         * @param exclusionTag The name of the tag associated with the VMs you want to exclude from autoscaling.
         * 
         * @return builder
         * 
         */
        public Builder exclusionTag(String exclusionTag) {
            return exclusionTag(Output.of(exclusionTag));
        }

        /**
         * @param friendlyName Friendly name of the Scaling Plan.
         * 
         * @return builder
         * 
         */
        public Builder friendlyName(@Nullable Output<String> friendlyName) {
            $.friendlyName = friendlyName;
            return this;
        }

        /**
         * @param friendlyName Friendly name of the Scaling Plan.
         * 
         * @return builder
         * 
         */
        public Builder friendlyName(String friendlyName) {
            return friendlyName(Output.of(friendlyName));
        }

        /**
         * @param hostPools One or more `host_pool` blocks as defined below.
         * 
         * @return builder
         * 
         */
        public Builder hostPools(@Nullable Output<List<ScalingPlanHostPoolArgs>> hostPools) {
            $.hostPools = hostPools;
            return this;
        }

        /**
         * @param hostPools One or more `host_pool` blocks as defined below.
         * 
         * @return builder
         * 
         */
        public Builder hostPools(List<ScalingPlanHostPoolArgs> hostPools) {
            return hostPools(Output.of(hostPools));
        }

        /**
         * @param hostPools One or more `host_pool` blocks as defined below.
         * 
         * @return builder
         * 
         */
        public Builder hostPools(ScalingPlanHostPoolArgs... hostPools) {
            return hostPools(List.of(hostPools));
        }

        /**
         * @param location The Azure Region where the Virtual Desktop Scaling Plan should exist. Changing this forces a new Virtual Desktop Scaling Plan to be created.
         * 
         * @return builder
         * 
         */
        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location The Azure Region where the Virtual Desktop Scaling Plan should exist. Changing this forces a new Virtual Desktop Scaling Plan to be created.
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param name The name which should be used for this Virtual Desktop Scaling Plan . Changing this forces a new Virtual Desktop Scaling Plan to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name which should be used for this Virtual Desktop Scaling Plan . Changing this forces a new Virtual Desktop Scaling Plan to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param resourceGroupName The name of the Resource Group where the Virtual Desktop Scaling Plan should exist. Changing this forces a new Virtual Desktop Scaling Plan to be created.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName The name of the Resource Group where the Virtual Desktop Scaling Plan should exist. Changing this forces a new Virtual Desktop Scaling Plan to be created.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        /**
         * @param schedules One or more `schedule` blocks as defined below.
         * 
         * @return builder
         * 
         */
        public Builder schedules(Output<List<ScalingPlanScheduleArgs>> schedules) {
            $.schedules = schedules;
            return this;
        }

        /**
         * @param schedules One or more `schedule` blocks as defined below.
         * 
         * @return builder
         * 
         */
        public Builder schedules(List<ScalingPlanScheduleArgs> schedules) {
            return schedules(Output.of(schedules));
        }

        /**
         * @param schedules One or more `schedule` blocks as defined below.
         * 
         * @return builder
         * 
         */
        public Builder schedules(ScalingPlanScheduleArgs... schedules) {
            return schedules(List.of(schedules));
        }

        /**
         * @param tags A mapping of tags which should be assigned to the Virtual Desktop Scaling Plan .
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags A mapping of tags which should be assigned to the Virtual Desktop Scaling Plan .
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param timeZone Specifies the Time Zone which should be used by the Scaling Plan for time based events, [the possible values are defined here](https://jackstromberg.com/2017/01/list-of-time-zones-consumed-by-azure/).
         * 
         * @return builder
         * 
         */
        public Builder timeZone(Output<String> timeZone) {
            $.timeZone = timeZone;
            return this;
        }

        /**
         * @param timeZone Specifies the Time Zone which should be used by the Scaling Plan for time based events, [the possible values are defined here](https://jackstromberg.com/2017/01/list-of-time-zones-consumed-by-azure/).
         * 
         * @return builder
         * 
         */
        public Builder timeZone(String timeZone) {
            return timeZone(Output.of(timeZone));
        }

        public ScalingPlanArgs build() {
            if ($.resourceGroupName == null) {
                throw new MissingRequiredPropertyException("ScalingPlanArgs", "resourceGroupName");
            }
            if ($.schedules == null) {
                throw new MissingRequiredPropertyException("ScalingPlanArgs", "schedules");
            }
            if ($.timeZone == null) {
                throw new MissingRequiredPropertyException("ScalingPlanArgs", "timeZone");
            }
            return $;
        }
    }

}
