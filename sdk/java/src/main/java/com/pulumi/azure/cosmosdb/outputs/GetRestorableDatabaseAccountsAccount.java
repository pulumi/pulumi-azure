// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.cosmosdb.outputs;

import com.pulumi.azure.cosmosdb.outputs.GetRestorableDatabaseAccountsAccountRestorableLocation;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetRestorableDatabaseAccountsAccount {
    /**
     * @return The API type of the Cosmos DB Restorable Database Account.
     * 
     */
    private String apiType;
    /**
     * @return The creation time of the regional Cosmos DB Restorable Database Account.
     * 
     */
    private String creationTime;
    /**
     * @return The deletion time of the regional Cosmos DB Restorable Database Account.
     * 
     */
    private String deletionTime;
    /**
     * @return The ID of the Cosmos DB Restorable Database Account.
     * 
     */
    private String id;
    /**
     * @return One or more `restorable_locations` blocks as defined below.
     * 
     */
    private List<GetRestorableDatabaseAccountsAccountRestorableLocation> restorableLocations;

    private GetRestorableDatabaseAccountsAccount() {}
    /**
     * @return The API type of the Cosmos DB Restorable Database Account.
     * 
     */
    public String apiType() {
        return this.apiType;
    }
    /**
     * @return The creation time of the regional Cosmos DB Restorable Database Account.
     * 
     */
    public String creationTime() {
        return this.creationTime;
    }
    /**
     * @return The deletion time of the regional Cosmos DB Restorable Database Account.
     * 
     */
    public String deletionTime() {
        return this.deletionTime;
    }
    /**
     * @return The ID of the Cosmos DB Restorable Database Account.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return One or more `restorable_locations` blocks as defined below.
     * 
     */
    public List<GetRestorableDatabaseAccountsAccountRestorableLocation> restorableLocations() {
        return this.restorableLocations;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetRestorableDatabaseAccountsAccount defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String apiType;
        private String creationTime;
        private String deletionTime;
        private String id;
        private List<GetRestorableDatabaseAccountsAccountRestorableLocation> restorableLocations;
        public Builder() {}
        public Builder(GetRestorableDatabaseAccountsAccount defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.apiType = defaults.apiType;
    	      this.creationTime = defaults.creationTime;
    	      this.deletionTime = defaults.deletionTime;
    	      this.id = defaults.id;
    	      this.restorableLocations = defaults.restorableLocations;
        }

        @CustomType.Setter
        public Builder apiType(String apiType) {
            if (apiType == null) {
              throw new MissingRequiredPropertyException("GetRestorableDatabaseAccountsAccount", "apiType");
            }
            this.apiType = apiType;
            return this;
        }
        @CustomType.Setter
        public Builder creationTime(String creationTime) {
            if (creationTime == null) {
              throw new MissingRequiredPropertyException("GetRestorableDatabaseAccountsAccount", "creationTime");
            }
            this.creationTime = creationTime;
            return this;
        }
        @CustomType.Setter
        public Builder deletionTime(String deletionTime) {
            if (deletionTime == null) {
              throw new MissingRequiredPropertyException("GetRestorableDatabaseAccountsAccount", "deletionTime");
            }
            this.deletionTime = deletionTime;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetRestorableDatabaseAccountsAccount", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder restorableLocations(List<GetRestorableDatabaseAccountsAccountRestorableLocation> restorableLocations) {
            if (restorableLocations == null) {
              throw new MissingRequiredPropertyException("GetRestorableDatabaseAccountsAccount", "restorableLocations");
            }
            this.restorableLocations = restorableLocations;
            return this;
        }
        public Builder restorableLocations(GetRestorableDatabaseAccountsAccountRestorableLocation... restorableLocations) {
            return restorableLocations(List.of(restorableLocations));
        }
        public GetRestorableDatabaseAccountsAccount build() {
            final var _resultValue = new GetRestorableDatabaseAccountsAccount();
            _resultValue.apiType = apiType;
            _resultValue.creationTime = creationTime;
            _resultValue.deletionTime = deletionTime;
            _resultValue.id = id;
            _resultValue.restorableLocations = restorableLocations;
            return _resultValue;
        }
    }
}
