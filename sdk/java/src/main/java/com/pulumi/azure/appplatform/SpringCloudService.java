// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.appplatform;

import com.pulumi.azure.Utilities;
import com.pulumi.azure.appplatform.SpringCloudServiceArgs;
import com.pulumi.azure.appplatform.inputs.SpringCloudServiceState;
import com.pulumi.azure.appplatform.outputs.SpringCloudServiceConfigServerGitSetting;
import com.pulumi.azure.appplatform.outputs.SpringCloudServiceContainerRegistry;
import com.pulumi.azure.appplatform.outputs.SpringCloudServiceDefaultBuildService;
import com.pulumi.azure.appplatform.outputs.SpringCloudServiceMarketplace;
import com.pulumi.azure.appplatform.outputs.SpringCloudServiceNetwork;
import com.pulumi.azure.appplatform.outputs.SpringCloudServiceRequiredNetworkTrafficRule;
import com.pulumi.azure.appplatform.outputs.SpringCloudServiceTrace;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Manages an Azure Spring Cloud Service.
 * 
 * ## Example Usage
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.azure.core.ResourceGroup;
 * import com.pulumi.azure.core.ResourceGroupArgs;
 * import com.pulumi.azure.appinsights.Insights;
 * import com.pulumi.azure.appinsights.InsightsArgs;
 * import com.pulumi.azure.appplatform.SpringCloudService;
 * import com.pulumi.azure.appplatform.SpringCloudServiceArgs;
 * import com.pulumi.azure.appplatform.inputs.SpringCloudServiceConfigServerGitSettingArgs;
 * import com.pulumi.azure.appplatform.inputs.SpringCloudServiceTraceArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var exampleResourceGroup = new ResourceGroup(&#34;exampleResourceGroup&#34;, ResourceGroupArgs.builder()        
 *             .location(&#34;West Europe&#34;)
 *             .build());
 * 
 *         var exampleInsights = new Insights(&#34;exampleInsights&#34;, InsightsArgs.builder()        
 *             .location(exampleResourceGroup.location())
 *             .resourceGroupName(exampleResourceGroup.name())
 *             .applicationType(&#34;web&#34;)
 *             .build());
 * 
 *         var exampleSpringCloudService = new SpringCloudService(&#34;exampleSpringCloudService&#34;, SpringCloudServiceArgs.builder()        
 *             .resourceGroupName(exampleResourceGroup.name())
 *             .location(exampleResourceGroup.location())
 *             .skuName(&#34;S0&#34;)
 *             .configServerGitSetting(SpringCloudServiceConfigServerGitSettingArgs.builder()
 *                 .uri(&#34;https://github.com/Azure-Samples/piggymetrics&#34;)
 *                 .label(&#34;config&#34;)
 *                 .searchPaths(                
 *                     &#34;dir1&#34;,
 *                     &#34;dir2&#34;)
 *                 .build())
 *             .trace(SpringCloudServiceTraceArgs.builder()
 *                 .connectionString(exampleInsights.connectionString())
 *                 .sampleRate(10)
 *                 .build())
 *             .tags(Map.of(&#34;Env&#34;, &#34;staging&#34;))
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * Spring Cloud services can be imported using the `resource id`, e.g.
 * 
 * ```sh
 *  $ pulumi import azure:appplatform/springCloudService:SpringCloudService example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.AppPlatform/spring/spring1
 * ```
 * 
 */
@ResourceType(type="azure:appplatform/springCloudService:SpringCloudService")
public class SpringCloudService extends com.pulumi.resources.CustomResource {
    /**
     * Specifies the size for this Spring Cloud Service&#39;s default build agent pool. Possible values are `S1`, `S2`, `S3`, `S4` and `S5`. This field is applicable only for Spring Cloud Service with enterprise tier.
     * 
     */
    @Export(name="buildAgentPoolSize", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> buildAgentPoolSize;

    /**
     * @return Specifies the size for this Spring Cloud Service&#39;s default build agent pool. Possible values are `S1`, `S2`, `S3`, `S4` and `S5`. This field is applicable only for Spring Cloud Service with enterprise tier.
     * 
     */
    public Output<Optional<String>> buildAgentPoolSize() {
        return Codegen.optional(this.buildAgentPoolSize);
    }
    /**
     * A `config_server_git_setting` block as defined below. This field is applicable only for Spring Cloud Service with basic and standard tier.
     * 
     */
    @Export(name="configServerGitSetting", refs={SpringCloudServiceConfigServerGitSetting.class}, tree="[0]")
    private Output</* @Nullable */ SpringCloudServiceConfigServerGitSetting> configServerGitSetting;

    /**
     * @return A `config_server_git_setting` block as defined below. This field is applicable only for Spring Cloud Service with basic and standard tier.
     * 
     */
    public Output<Optional<SpringCloudServiceConfigServerGitSetting>> configServerGitSetting() {
        return Codegen.optional(this.configServerGitSetting);
    }
    /**
     * One or more `container_registry` block as defined below. This field is applicable only for Spring Cloud Service with enterprise tier.
     * 
     */
    @Export(name="containerRegistries", refs={List.class,SpringCloudServiceContainerRegistry.class}, tree="[0,1]")
    private Output</* @Nullable */ List<SpringCloudServiceContainerRegistry>> containerRegistries;

    /**
     * @return One or more `container_registry` block as defined below. This field is applicable only for Spring Cloud Service with enterprise tier.
     * 
     */
    public Output<Optional<List<SpringCloudServiceContainerRegistry>>> containerRegistries() {
        return Codegen.optional(this.containerRegistries);
    }
    /**
     * A `default_build_service` block as defined below. This field is applicable only for Spring Cloud Service with enterprise tier.
     * 
     */
    @Export(name="defaultBuildService", refs={SpringCloudServiceDefaultBuildService.class}, tree="[0]")
    private Output</* @Nullable */ SpringCloudServiceDefaultBuildService> defaultBuildService;

    /**
     * @return A `default_build_service` block as defined below. This field is applicable only for Spring Cloud Service with enterprise tier.
     * 
     */
    public Output<Optional<SpringCloudServiceDefaultBuildService>> defaultBuildService() {
        return Codegen.optional(this.defaultBuildService);
    }
    /**
     * Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="location", refs={String.class}, tree="[0]")
    private Output<String> location;

    /**
     * @return Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> location() {
        return this.location;
    }
    /**
     * Should the log stream in vnet injection instance could be accessed from Internet?
     * 
     */
    @Export(name="logStreamPublicEndpointEnabled", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> logStreamPublicEndpointEnabled;

    /**
     * @return Should the log stream in vnet injection instance could be accessed from Internet?
     * 
     */
    public Output<Optional<Boolean>> logStreamPublicEndpointEnabled() {
        return Codegen.optional(this.logStreamPublicEndpointEnabled);
    }
    /**
     * The resource Id of the Managed Environment that the Spring Apps instance builds on. Can only be specified when `sku_tier` is set to `StandardGen2`.
     * 
     */
    @Export(name="managedEnvironmentId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> managedEnvironmentId;

    /**
     * @return The resource Id of the Managed Environment that the Spring Apps instance builds on. Can only be specified when `sku_tier` is set to `StandardGen2`.
     * 
     */
    public Output<Optional<String>> managedEnvironmentId() {
        return Codegen.optional(this.managedEnvironmentId);
    }
    /**
     * A `marketplace` block as defined below. Can only be specified when `sku` is set to `E0`.
     * 
     */
    @Export(name="marketplace", refs={SpringCloudServiceMarketplace.class}, tree="[0]")
    private Output<SpringCloudServiceMarketplace> marketplace;

    /**
     * @return A `marketplace` block as defined below. Can only be specified when `sku` is set to `E0`.
     * 
     */
    public Output<SpringCloudServiceMarketplace> marketplace() {
        return this.marketplace;
    }
    /**
     * Specifies the name of the Spring Cloud Service resource. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return Specifies the name of the Spring Cloud Service resource. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * A `network` block as defined below. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="network", refs={SpringCloudServiceNetwork.class}, tree="[0]")
    private Output</* @Nullable */ SpringCloudServiceNetwork> network;

    /**
     * @return A `network` block as defined below. Changing this forces a new resource to be created.
     * 
     */
    public Output<Optional<SpringCloudServiceNetwork>> network() {
        return Codegen.optional(this.network);
    }
    /**
     * A list of the outbound Public IP Addresses used by this Spring Cloud Service.
     * 
     */
    @Export(name="outboundPublicIpAddresses", refs={List.class,String.class}, tree="[0,1]")
    private Output<List<String>> outboundPublicIpAddresses;

    /**
     * @return A list of the outbound Public IP Addresses used by this Spring Cloud Service.
     * 
     */
    public Output<List<String>> outboundPublicIpAddresses() {
        return this.outboundPublicIpAddresses;
    }
    /**
     * A list of `required_network_traffic_rules` blocks as defined below.
     * 
     */
    @Export(name="requiredNetworkTrafficRules", refs={List.class,SpringCloudServiceRequiredNetworkTrafficRule.class}, tree="[0,1]")
    private Output<List<SpringCloudServiceRequiredNetworkTrafficRule>> requiredNetworkTrafficRules;

    /**
     * @return A list of `required_network_traffic_rules` blocks as defined below.
     * 
     */
    public Output<List<SpringCloudServiceRequiredNetworkTrafficRule>> requiredNetworkTrafficRules() {
        return this.requiredNetworkTrafficRules;
    }
    /**
     * Specifies The name of the resource group in which to create the Spring Cloud Service. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="resourceGroupName", refs={String.class}, tree="[0]")
    private Output<String> resourceGroupName;

    /**
     * @return Specifies The name of the resource group in which to create the Spring Cloud Service. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }
    /**
     * Whether enable the default Service Registry. This field is applicable only for Spring Cloud Service with enterprise tier.
     * 
     */
    @Export(name="serviceRegistryEnabled", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> serviceRegistryEnabled;

    /**
     * @return Whether enable the default Service Registry. This field is applicable only for Spring Cloud Service with enterprise tier.
     * 
     */
    public Output<Optional<Boolean>> serviceRegistryEnabled() {
        return Codegen.optional(this.serviceRegistryEnabled);
    }
    /**
     * The ID of the Spring Cloud Service Registry.
     * 
     */
    @Export(name="serviceRegistryId", refs={String.class}, tree="[0]")
    private Output<String> serviceRegistryId;

    /**
     * @return The ID of the Spring Cloud Service Registry.
     * 
     */
    public Output<String> serviceRegistryId() {
        return this.serviceRegistryId;
    }
    /**
     * Specifies the SKU Name for this Spring Cloud Service. Possible values are `B0`, `S0` and `E0`. Defaults to `S0`. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="skuName", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> skuName;

    /**
     * @return Specifies the SKU Name for this Spring Cloud Service. Possible values are `B0`, `S0` and `E0`. Defaults to `S0`. Changing this forces a new resource to be created.
     * 
     */
    public Output<Optional<String>> skuName() {
        return Codegen.optional(this.skuName);
    }
    /**
     * Specifies the SKU Tier for this Spring Cloud Service. Possible values are `Basic`, `Enterprise`, `Standard` and `StandardGen2`. The attribute is automatically computed from API response except when `managed_environment_id` is defined. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="skuTier", refs={String.class}, tree="[0]")
    private Output<String> skuTier;

    /**
     * @return Specifies the SKU Tier for this Spring Cloud Service. Possible values are `Basic`, `Enterprise`, `Standard` and `StandardGen2`. The attribute is automatically computed from API response except when `managed_environment_id` is defined. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> skuTier() {
        return this.skuTier;
    }
    /**
     * A mapping of tags to assign to the resource.
     * 
     */
    @Export(name="tags", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output</* @Nullable */ Map<String,String>> tags;

    /**
     * @return A mapping of tags to assign to the resource.
     * 
     */
    public Output<Optional<Map<String,String>>> tags() {
        return Codegen.optional(this.tags);
    }
    /**
     * A `trace` block as defined below.
     * 
     */
    @Export(name="trace", refs={SpringCloudServiceTrace.class}, tree="[0]")
    private Output</* @Nullable */ SpringCloudServiceTrace> trace;

    /**
     * @return A `trace` block as defined below.
     * 
     */
    public Output<Optional<SpringCloudServiceTrace>> trace() {
        return Codegen.optional(this.trace);
    }
    /**
     * Whether zone redundancy is enabled for this Spring Cloud Service. Defaults to `false`.
     * 
     */
    @Export(name="zoneRedundant", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> zoneRedundant;

    /**
     * @return Whether zone redundancy is enabled for this Spring Cloud Service. Defaults to `false`.
     * 
     */
    public Output<Optional<Boolean>> zoneRedundant() {
        return Codegen.optional(this.zoneRedundant);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public SpringCloudService(String name) {
        this(name, SpringCloudServiceArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public SpringCloudService(String name, SpringCloudServiceArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public SpringCloudService(String name, SpringCloudServiceArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:appplatform/springCloudService:SpringCloudService", name, args == null ? SpringCloudServiceArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private SpringCloudService(String name, Output<String> id, @Nullable SpringCloudServiceState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:appplatform/springCloudService:SpringCloudService", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static SpringCloudService get(String name, Output<String> id, @Nullable SpringCloudServiceState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new SpringCloudService(name, id, state, options);
    }
}
