// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.cdn.inputs;

import com.pulumi.azure.cdn.inputs.FrontdoorFirewallPolicyManagedRuleOverrideExclusionArgs;
import com.pulumi.azure.cdn.inputs.FrontdoorFirewallPolicyManagedRuleOverrideRuleArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class FrontdoorFirewallPolicyManagedRuleOverrideArgs extends com.pulumi.resources.ResourceArgs {

    public static final FrontdoorFirewallPolicyManagedRuleOverrideArgs Empty = new FrontdoorFirewallPolicyManagedRuleOverrideArgs();

    /**
     * One or more `exclusion` blocks as defined below.
     * 
     */
    @Import(name="exclusions")
    private @Nullable Output<List<FrontdoorFirewallPolicyManagedRuleOverrideExclusionArgs>> exclusions;

    /**
     * @return One or more `exclusion` blocks as defined below.
     * 
     */
    public Optional<Output<List<FrontdoorFirewallPolicyManagedRuleOverrideExclusionArgs>>> exclusions() {
        return Optional.ofNullable(this.exclusions);
    }

    /**
     * The managed rule group to override.
     * 
     */
    @Import(name="ruleGroupName", required=true)
    private Output<String> ruleGroupName;

    /**
     * @return The managed rule group to override.
     * 
     */
    public Output<String> ruleGroupName() {
        return this.ruleGroupName;
    }

    /**
     * One or more `rule` blocks as defined below. If none are specified, all of the rules in the group will be disabled.
     * 
     */
    @Import(name="rules")
    private @Nullable Output<List<FrontdoorFirewallPolicyManagedRuleOverrideRuleArgs>> rules;

    /**
     * @return One or more `rule` blocks as defined below. If none are specified, all of the rules in the group will be disabled.
     * 
     */
    public Optional<Output<List<FrontdoorFirewallPolicyManagedRuleOverrideRuleArgs>>> rules() {
        return Optional.ofNullable(this.rules);
    }

    private FrontdoorFirewallPolicyManagedRuleOverrideArgs() {}

    private FrontdoorFirewallPolicyManagedRuleOverrideArgs(FrontdoorFirewallPolicyManagedRuleOverrideArgs $) {
        this.exclusions = $.exclusions;
        this.ruleGroupName = $.ruleGroupName;
        this.rules = $.rules;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FrontdoorFirewallPolicyManagedRuleOverrideArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FrontdoorFirewallPolicyManagedRuleOverrideArgs $;

        public Builder() {
            $ = new FrontdoorFirewallPolicyManagedRuleOverrideArgs();
        }

        public Builder(FrontdoorFirewallPolicyManagedRuleOverrideArgs defaults) {
            $ = new FrontdoorFirewallPolicyManagedRuleOverrideArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param exclusions One or more `exclusion` blocks as defined below.
         * 
         * @return builder
         * 
         */
        public Builder exclusions(@Nullable Output<List<FrontdoorFirewallPolicyManagedRuleOverrideExclusionArgs>> exclusions) {
            $.exclusions = exclusions;
            return this;
        }

        /**
         * @param exclusions One or more `exclusion` blocks as defined below.
         * 
         * @return builder
         * 
         */
        public Builder exclusions(List<FrontdoorFirewallPolicyManagedRuleOverrideExclusionArgs> exclusions) {
            return exclusions(Output.of(exclusions));
        }

        /**
         * @param exclusions One or more `exclusion` blocks as defined below.
         * 
         * @return builder
         * 
         */
        public Builder exclusions(FrontdoorFirewallPolicyManagedRuleOverrideExclusionArgs... exclusions) {
            return exclusions(List.of(exclusions));
        }

        /**
         * @param ruleGroupName The managed rule group to override.
         * 
         * @return builder
         * 
         */
        public Builder ruleGroupName(Output<String> ruleGroupName) {
            $.ruleGroupName = ruleGroupName;
            return this;
        }

        /**
         * @param ruleGroupName The managed rule group to override.
         * 
         * @return builder
         * 
         */
        public Builder ruleGroupName(String ruleGroupName) {
            return ruleGroupName(Output.of(ruleGroupName));
        }

        /**
         * @param rules One or more `rule` blocks as defined below. If none are specified, all of the rules in the group will be disabled.
         * 
         * @return builder
         * 
         */
        public Builder rules(@Nullable Output<List<FrontdoorFirewallPolicyManagedRuleOverrideRuleArgs>> rules) {
            $.rules = rules;
            return this;
        }

        /**
         * @param rules One or more `rule` blocks as defined below. If none are specified, all of the rules in the group will be disabled.
         * 
         * @return builder
         * 
         */
        public Builder rules(List<FrontdoorFirewallPolicyManagedRuleOverrideRuleArgs> rules) {
            return rules(Output.of(rules));
        }

        /**
         * @param rules One or more `rule` blocks as defined below. If none are specified, all of the rules in the group will be disabled.
         * 
         * @return builder
         * 
         */
        public Builder rules(FrontdoorFirewallPolicyManagedRuleOverrideRuleArgs... rules) {
            return rules(List.of(rules));
        }

        public FrontdoorFirewallPolicyManagedRuleOverrideArgs build() {
            if ($.ruleGroupName == null) {
                throw new MissingRequiredPropertyException("FrontdoorFirewallPolicyManagedRuleOverrideArgs", "ruleGroupName");
            }
            return $;
        }
    }

}
