// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.hdinsight.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class HBaseClusterSecurityProfile {
    /**
     * @return The resource ID of the Azure Active Directory Domain Service. Changing this forces a new resource to be created.
     * 
     */
    private String aaddsResourceId;
    /**
     * @return A list of the distinguished names for the cluster user groups. Changing this forces a new resource to be created.
     * 
     */
    private @Nullable List<String> clusterUsersGroupDns;
    /**
     * @return The name of the Azure Active Directory Domain. Changing this forces a new resource to be created.
     * 
     */
    private String domainName;
    /**
     * @return The user password of the Azure Active Directory Domain. Changing this forces a new resource to be created.
     * 
     */
    private String domainUserPassword;
    /**
     * @return The username of the Azure Active Directory Domain. Changing this forces a new resource to be created.
     * 
     */
    private String domainUsername;
    /**
     * @return A list of the LDAPS URLs to communicate with the Azure Active Directory. Changing this forces a new resource to be created.
     * 
     */
    private List<String> ldapsUrls;
    /**
     * @return The User Assigned Identity for the HDInsight Cluster. Changing this forces a new resource to be created.
     * 
     */
    private String msiResourceId;

    private HBaseClusterSecurityProfile() {}
    /**
     * @return The resource ID of the Azure Active Directory Domain Service. Changing this forces a new resource to be created.
     * 
     */
    public String aaddsResourceId() {
        return this.aaddsResourceId;
    }
    /**
     * @return A list of the distinguished names for the cluster user groups. Changing this forces a new resource to be created.
     * 
     */
    public List<String> clusterUsersGroupDns() {
        return this.clusterUsersGroupDns == null ? List.of() : this.clusterUsersGroupDns;
    }
    /**
     * @return The name of the Azure Active Directory Domain. Changing this forces a new resource to be created.
     * 
     */
    public String domainName() {
        return this.domainName;
    }
    /**
     * @return The user password of the Azure Active Directory Domain. Changing this forces a new resource to be created.
     * 
     */
    public String domainUserPassword() {
        return this.domainUserPassword;
    }
    /**
     * @return The username of the Azure Active Directory Domain. Changing this forces a new resource to be created.
     * 
     */
    public String domainUsername() {
        return this.domainUsername;
    }
    /**
     * @return A list of the LDAPS URLs to communicate with the Azure Active Directory. Changing this forces a new resource to be created.
     * 
     */
    public List<String> ldapsUrls() {
        return this.ldapsUrls;
    }
    /**
     * @return The User Assigned Identity for the HDInsight Cluster. Changing this forces a new resource to be created.
     * 
     */
    public String msiResourceId() {
        return this.msiResourceId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(HBaseClusterSecurityProfile defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String aaddsResourceId;
        private @Nullable List<String> clusterUsersGroupDns;
        private String domainName;
        private String domainUserPassword;
        private String domainUsername;
        private List<String> ldapsUrls;
        private String msiResourceId;
        public Builder() {}
        public Builder(HBaseClusterSecurityProfile defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.aaddsResourceId = defaults.aaddsResourceId;
    	      this.clusterUsersGroupDns = defaults.clusterUsersGroupDns;
    	      this.domainName = defaults.domainName;
    	      this.domainUserPassword = defaults.domainUserPassword;
    	      this.domainUsername = defaults.domainUsername;
    	      this.ldapsUrls = defaults.ldapsUrls;
    	      this.msiResourceId = defaults.msiResourceId;
        }

        @CustomType.Setter
        public Builder aaddsResourceId(String aaddsResourceId) {
            if (aaddsResourceId == null) {
              throw new MissingRequiredPropertyException("HBaseClusterSecurityProfile", "aaddsResourceId");
            }
            this.aaddsResourceId = aaddsResourceId;
            return this;
        }
        @CustomType.Setter
        public Builder clusterUsersGroupDns(@Nullable List<String> clusterUsersGroupDns) {

            this.clusterUsersGroupDns = clusterUsersGroupDns;
            return this;
        }
        public Builder clusterUsersGroupDns(String... clusterUsersGroupDns) {
            return clusterUsersGroupDns(List.of(clusterUsersGroupDns));
        }
        @CustomType.Setter
        public Builder domainName(String domainName) {
            if (domainName == null) {
              throw new MissingRequiredPropertyException("HBaseClusterSecurityProfile", "domainName");
            }
            this.domainName = domainName;
            return this;
        }
        @CustomType.Setter
        public Builder domainUserPassword(String domainUserPassword) {
            if (domainUserPassword == null) {
              throw new MissingRequiredPropertyException("HBaseClusterSecurityProfile", "domainUserPassword");
            }
            this.domainUserPassword = domainUserPassword;
            return this;
        }
        @CustomType.Setter
        public Builder domainUsername(String domainUsername) {
            if (domainUsername == null) {
              throw new MissingRequiredPropertyException("HBaseClusterSecurityProfile", "domainUsername");
            }
            this.domainUsername = domainUsername;
            return this;
        }
        @CustomType.Setter
        public Builder ldapsUrls(List<String> ldapsUrls) {
            if (ldapsUrls == null) {
              throw new MissingRequiredPropertyException("HBaseClusterSecurityProfile", "ldapsUrls");
            }
            this.ldapsUrls = ldapsUrls;
            return this;
        }
        public Builder ldapsUrls(String... ldapsUrls) {
            return ldapsUrls(List.of(ldapsUrls));
        }
        @CustomType.Setter
        public Builder msiResourceId(String msiResourceId) {
            if (msiResourceId == null) {
              throw new MissingRequiredPropertyException("HBaseClusterSecurityProfile", "msiResourceId");
            }
            this.msiResourceId = msiResourceId;
            return this;
        }
        public HBaseClusterSecurityProfile build() {
            final var _resultValue = new HBaseClusterSecurityProfile();
            _resultValue.aaddsResourceId = aaddsResourceId;
            _resultValue.clusterUsersGroupDns = clusterUsersGroupDns;
            _resultValue.domainName = domainName;
            _resultValue.domainUserPassword = domainUserPassword;
            _resultValue.domainUsername = domainUsername;
            _resultValue.ldapsUrls = ldapsUrls;
            _resultValue.msiResourceId = msiResourceId;
            return _resultValue;
        }
    }
}
