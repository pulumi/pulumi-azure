// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.siterecovery.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ProtectionContainerState extends com.pulumi.resources.ResourceArgs {

    public static final ProtectionContainerState Empty = new ProtectionContainerState();

    /**
     * The name of the protection container. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the protection container. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Name of fabric that should contain this protection container. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="recoveryFabricName")
    private @Nullable Output<String> recoveryFabricName;

    /**
     * @return Name of fabric that should contain this protection container. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> recoveryFabricName() {
        return Optional.ofNullable(this.recoveryFabricName);
    }

    /**
     * The name of the vault that should be updated. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="recoveryVaultName")
    private @Nullable Output<String> recoveryVaultName;

    /**
     * @return The name of the vault that should be updated. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> recoveryVaultName() {
        return Optional.ofNullable(this.recoveryVaultName);
    }

    /**
     * Name of the resource group where the vault that should be updated is located. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="resourceGroupName")
    private @Nullable Output<String> resourceGroupName;

    /**
     * @return Name of the resource group where the vault that should be updated is located. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> resourceGroupName() {
        return Optional.ofNullable(this.resourceGroupName);
    }

    private ProtectionContainerState() {}

    private ProtectionContainerState(ProtectionContainerState $) {
        this.name = $.name;
        this.recoveryFabricName = $.recoveryFabricName;
        this.recoveryVaultName = $.recoveryVaultName;
        this.resourceGroupName = $.resourceGroupName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ProtectionContainerState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ProtectionContainerState $;

        public Builder() {
            $ = new ProtectionContainerState();
        }

        public Builder(ProtectionContainerState defaults) {
            $ = new ProtectionContainerState(Objects.requireNonNull(defaults));
        }

        /**
         * @param name The name of the protection container. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the protection container. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param recoveryFabricName Name of fabric that should contain this protection container. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder recoveryFabricName(@Nullable Output<String> recoveryFabricName) {
            $.recoveryFabricName = recoveryFabricName;
            return this;
        }

        /**
         * @param recoveryFabricName Name of fabric that should contain this protection container. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder recoveryFabricName(String recoveryFabricName) {
            return recoveryFabricName(Output.of(recoveryFabricName));
        }

        /**
         * @param recoveryVaultName The name of the vault that should be updated. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder recoveryVaultName(@Nullable Output<String> recoveryVaultName) {
            $.recoveryVaultName = recoveryVaultName;
            return this;
        }

        /**
         * @param recoveryVaultName The name of the vault that should be updated. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder recoveryVaultName(String recoveryVaultName) {
            return recoveryVaultName(Output.of(recoveryVaultName));
        }

        /**
         * @param resourceGroupName Name of the resource group where the vault that should be updated is located. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(@Nullable Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName Name of the resource group where the vault that should be updated is located. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        public ProtectionContainerState build() {
            return $;
        }
    }

}
