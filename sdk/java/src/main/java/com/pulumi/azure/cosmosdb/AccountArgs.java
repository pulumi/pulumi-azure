// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.cosmosdb;

import com.pulumi.azure.cosmosdb.inputs.AccountAnalyticalStorageArgs;
import com.pulumi.azure.cosmosdb.inputs.AccountBackupArgs;
import com.pulumi.azure.cosmosdb.inputs.AccountCapabilityArgs;
import com.pulumi.azure.cosmosdb.inputs.AccountCapacityArgs;
import com.pulumi.azure.cosmosdb.inputs.AccountConsistencyPolicyArgs;
import com.pulumi.azure.cosmosdb.inputs.AccountCorsRuleArgs;
import com.pulumi.azure.cosmosdb.inputs.AccountGeoLocationArgs;
import com.pulumi.azure.cosmosdb.inputs.AccountIdentityArgs;
import com.pulumi.azure.cosmosdb.inputs.AccountRestoreArgs;
import com.pulumi.azure.cosmosdb.inputs.AccountVirtualNetworkRuleArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AccountArgs extends com.pulumi.resources.ResourceArgs {

    public static final AccountArgs Empty = new AccountArgs();

    @Import(name="accessKeyMetadataWritesEnabled")
    private @Nullable Output<Boolean> accessKeyMetadataWritesEnabled;

    public Optional<Output<Boolean>> accessKeyMetadataWritesEnabled() {
        return Optional.ofNullable(this.accessKeyMetadataWritesEnabled);
    }

    /**
     * An `analyticalStorage` block as defined below.
     * 
     */
    @Import(name="analyticalStorage")
    private @Nullable Output<AccountAnalyticalStorageArgs> analyticalStorage;

    /**
     * @return An `analyticalStorage` block as defined below.
     * 
     */
    public Optional<Output<AccountAnalyticalStorageArgs>> analyticalStorage() {
        return Optional.ofNullable(this.analyticalStorage);
    }

    @Import(name="analyticalStorageEnabled")
    private @Nullable Output<Boolean> analyticalStorageEnabled;

    public Optional<Output<Boolean>> analyticalStorageEnabled() {
        return Optional.ofNullable(this.analyticalStorageEnabled);
    }

    @Import(name="automaticFailoverEnabled")
    private @Nullable Output<Boolean> automaticFailoverEnabled;

    public Optional<Output<Boolean>> automaticFailoverEnabled() {
        return Optional.ofNullable(this.automaticFailoverEnabled);
    }

    @Import(name="backup")
    private @Nullable Output<AccountBackupArgs> backup;

    public Optional<Output<AccountBackupArgs>> backup() {
        return Optional.ofNullable(this.backup);
    }

    @Import(name="burstCapacityEnabled")
    private @Nullable Output<Boolean> burstCapacityEnabled;

    public Optional<Output<Boolean>> burstCapacityEnabled() {
        return Optional.ofNullable(this.burstCapacityEnabled);
    }

    @Import(name="capabilities")
    private @Nullable Output<List<AccountCapabilityArgs>> capabilities;

    public Optional<Output<List<AccountCapabilityArgs>>> capabilities() {
        return Optional.ofNullable(this.capabilities);
    }

    /**
     * A `capacity` block as defined below.
     * 
     */
    @Import(name="capacity")
    private @Nullable Output<AccountCapacityArgs> capacity;

    /**
     * @return A `capacity` block as defined below.
     * 
     */
    public Optional<Output<AccountCapacityArgs>> capacity() {
        return Optional.ofNullable(this.capacity);
    }

    @Import(name="consistencyPolicy", required=true)
    private Output<AccountConsistencyPolicyArgs> consistencyPolicy;

    public Output<AccountConsistencyPolicyArgs> consistencyPolicy() {
        return this.consistencyPolicy;
    }

    @Import(name="corsRule")
    private @Nullable Output<AccountCorsRuleArgs> corsRule;

    public Optional<Output<AccountCorsRuleArgs>> corsRule() {
        return Optional.ofNullable(this.corsRule);
    }

    /**
     * The creation mode for the CosmosDB Account. Possible values are `Default` and `Restore`. Changing this forces a new resource to be created.
     * 
     * &gt; **Note:** `createMode` can only be defined when the `backup.type` is set to `Continuous`.
     * 
     */
    @Import(name="createMode")
    private @Nullable Output<String> createMode;

    /**
     * @return The creation mode for the CosmosDB Account. Possible values are `Default` and `Restore`. Changing this forces a new resource to be created.
     * 
     * &gt; **Note:** `createMode` can only be defined when the `backup.type` is set to `Continuous`.
     * 
     */
    public Optional<Output<String>> createMode() {
        return Optional.ofNullable(this.createMode);
    }

    /**
     * The default identity for accessing Key Vault. Possible values are `FirstPartyIdentity`, `SystemAssignedIdentity` or `UserAssignedIdentity`. Defaults to `FirstPartyIdentity`.
     * 
     */
    @Import(name="defaultIdentityType")
    private @Nullable Output<String> defaultIdentityType;

    /**
     * @return The default identity for accessing Key Vault. Possible values are `FirstPartyIdentity`, `SystemAssignedIdentity` or `UserAssignedIdentity`. Defaults to `FirstPartyIdentity`.
     * 
     */
    public Optional<Output<String>> defaultIdentityType() {
        return Optional.ofNullable(this.defaultIdentityType);
    }

    @Import(name="freeTierEnabled")
    private @Nullable Output<Boolean> freeTierEnabled;

    public Optional<Output<Boolean>> freeTierEnabled() {
        return Optional.ofNullable(this.freeTierEnabled);
    }

    @Import(name="geoLocations", required=true)
    private Output<List<AccountGeoLocationArgs>> geoLocations;

    public Output<List<AccountGeoLocationArgs>> geoLocations() {
        return this.geoLocations;
    }

    @Import(name="identity")
    private @Nullable Output<AccountIdentityArgs> identity;

    public Optional<Output<AccountIdentityArgs>> identity() {
        return Optional.ofNullable(this.identity);
    }

    @Import(name="ipRangeFilters")
    private @Nullable Output<List<String>> ipRangeFilters;

    public Optional<Output<List<String>>> ipRangeFilters() {
        return Optional.ofNullable(this.ipRangeFilters);
    }

    @Import(name="isVirtualNetworkFilterEnabled")
    private @Nullable Output<Boolean> isVirtualNetworkFilterEnabled;

    public Optional<Output<Boolean>> isVirtualNetworkFilterEnabled() {
        return Optional.ofNullable(this.isVirtualNetworkFilterEnabled);
    }

    @Import(name="keyVaultKeyId")
    private @Nullable Output<String> keyVaultKeyId;

    public Optional<Output<String>> keyVaultKeyId() {
        return Optional.ofNullable(this.keyVaultKeyId);
    }

    @Import(name="kind")
    private @Nullable Output<String> kind;

    public Optional<Output<String>> kind() {
        return Optional.ofNullable(this.kind);
    }

    @Import(name="localAuthenticationDisabled")
    private @Nullable Output<Boolean> localAuthenticationDisabled;

    public Optional<Output<Boolean>> localAuthenticationDisabled() {
        return Optional.ofNullable(this.localAuthenticationDisabled);
    }

    /**
     * Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="location")
    private @Nullable Output<String> location;

    /**
     * @return Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    @Import(name="managedHsmKeyId")
    private @Nullable Output<String> managedHsmKeyId;

    public Optional<Output<String>> managedHsmKeyId() {
        return Optional.ofNullable(this.managedHsmKeyId);
    }

    /**
     * Specifies the minimal TLS version for the CosmosDB account. Possible values are: `Tls`, `Tls11`, and `Tls12`. Defaults to `Tls12`.
     * 
     * &gt; **Note:** Azure Services will require TLS 1.2+ by August 2025, please see this [announcement](https://azure.microsoft.com/en-us/updates/v2/update-retirement-tls1-0-tls1-1-versions-azure-services/) for more details.
     * 
     */
    @Import(name="minimalTlsVersion")
    private @Nullable Output<String> minimalTlsVersion;

    /**
     * @return Specifies the minimal TLS version for the CosmosDB account. Possible values are: `Tls`, `Tls11`, and `Tls12`. Defaults to `Tls12`.
     * 
     * &gt; **Note:** Azure Services will require TLS 1.2+ by August 2025, please see this [announcement](https://azure.microsoft.com/en-us/updates/v2/update-retirement-tls1-0-tls1-1-versions-azure-services/) for more details.
     * 
     */
    public Optional<Output<String>> minimalTlsVersion() {
        return Optional.ofNullable(this.minimalTlsVersion);
    }

    @Import(name="mongoServerVersion")
    private @Nullable Output<String> mongoServerVersion;

    public Optional<Output<String>> mongoServerVersion() {
        return Optional.ofNullable(this.mongoServerVersion);
    }

    @Import(name="multipleWriteLocationsEnabled")
    private @Nullable Output<Boolean> multipleWriteLocationsEnabled;

    public Optional<Output<Boolean>> multipleWriteLocationsEnabled() {
        return Optional.ofNullable(this.multipleWriteLocationsEnabled);
    }

    /**
     * Specifies the name of the CosmosDB Account. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Specifies the name of the CosmosDB Account. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="networkAclBypassForAzureServices")
    private @Nullable Output<Boolean> networkAclBypassForAzureServices;

    public Optional<Output<Boolean>> networkAclBypassForAzureServices() {
        return Optional.ofNullable(this.networkAclBypassForAzureServices);
    }

    @Import(name="networkAclBypassIds")
    private @Nullable Output<List<String>> networkAclBypassIds;

    public Optional<Output<List<String>>> networkAclBypassIds() {
        return Optional.ofNullable(this.networkAclBypassIds);
    }

    /**
     * Specifies the Offer Type to use for this CosmosDB Account; currently, this can only be set to `Standard`.
     * 
     */
    @Import(name="offerType", required=true)
    private Output<String> offerType;

    /**
     * @return Specifies the Offer Type to use for this CosmosDB Account; currently, this can only be set to `Standard`.
     * 
     */
    public Output<String> offerType() {
        return this.offerType;
    }

    @Import(name="partitionMergeEnabled")
    private @Nullable Output<Boolean> partitionMergeEnabled;

    public Optional<Output<Boolean>> partitionMergeEnabled() {
        return Optional.ofNullable(this.partitionMergeEnabled);
    }

    @Import(name="publicNetworkAccessEnabled")
    private @Nullable Output<Boolean> publicNetworkAccessEnabled;

    public Optional<Output<Boolean>> publicNetworkAccessEnabled() {
        return Optional.ofNullable(this.publicNetworkAccessEnabled);
    }

    /**
     * The name of the resource group in which the CosmosDB Account is created. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    /**
     * @return The name of the resource group in which the CosmosDB Account is created. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    @Import(name="restore")
    private @Nullable Output<AccountRestoreArgs> restore;

    public Optional<Output<AccountRestoreArgs>> restore() {
        return Optional.ofNullable(this.restore);
    }

    /**
     * A mapping of tags to assign to the resource.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return A mapping of tags to assign to the resource.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    @Import(name="virtualNetworkRules")
    private @Nullable Output<List<AccountVirtualNetworkRuleArgs>> virtualNetworkRules;

    public Optional<Output<List<AccountVirtualNetworkRuleArgs>>> virtualNetworkRules() {
        return Optional.ofNullable(this.virtualNetworkRules);
    }

    private AccountArgs() {}

    private AccountArgs(AccountArgs $) {
        this.accessKeyMetadataWritesEnabled = $.accessKeyMetadataWritesEnabled;
        this.analyticalStorage = $.analyticalStorage;
        this.analyticalStorageEnabled = $.analyticalStorageEnabled;
        this.automaticFailoverEnabled = $.automaticFailoverEnabled;
        this.backup = $.backup;
        this.burstCapacityEnabled = $.burstCapacityEnabled;
        this.capabilities = $.capabilities;
        this.capacity = $.capacity;
        this.consistencyPolicy = $.consistencyPolicy;
        this.corsRule = $.corsRule;
        this.createMode = $.createMode;
        this.defaultIdentityType = $.defaultIdentityType;
        this.freeTierEnabled = $.freeTierEnabled;
        this.geoLocations = $.geoLocations;
        this.identity = $.identity;
        this.ipRangeFilters = $.ipRangeFilters;
        this.isVirtualNetworkFilterEnabled = $.isVirtualNetworkFilterEnabled;
        this.keyVaultKeyId = $.keyVaultKeyId;
        this.kind = $.kind;
        this.localAuthenticationDisabled = $.localAuthenticationDisabled;
        this.location = $.location;
        this.managedHsmKeyId = $.managedHsmKeyId;
        this.minimalTlsVersion = $.minimalTlsVersion;
        this.mongoServerVersion = $.mongoServerVersion;
        this.multipleWriteLocationsEnabled = $.multipleWriteLocationsEnabled;
        this.name = $.name;
        this.networkAclBypassForAzureServices = $.networkAclBypassForAzureServices;
        this.networkAclBypassIds = $.networkAclBypassIds;
        this.offerType = $.offerType;
        this.partitionMergeEnabled = $.partitionMergeEnabled;
        this.publicNetworkAccessEnabled = $.publicNetworkAccessEnabled;
        this.resourceGroupName = $.resourceGroupName;
        this.restore = $.restore;
        this.tags = $.tags;
        this.virtualNetworkRules = $.virtualNetworkRules;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AccountArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AccountArgs $;

        public Builder() {
            $ = new AccountArgs();
        }

        public Builder(AccountArgs defaults) {
            $ = new AccountArgs(Objects.requireNonNull(defaults));
        }

        public Builder accessKeyMetadataWritesEnabled(@Nullable Output<Boolean> accessKeyMetadataWritesEnabled) {
            $.accessKeyMetadataWritesEnabled = accessKeyMetadataWritesEnabled;
            return this;
        }

        public Builder accessKeyMetadataWritesEnabled(Boolean accessKeyMetadataWritesEnabled) {
            return accessKeyMetadataWritesEnabled(Output.of(accessKeyMetadataWritesEnabled));
        }

        /**
         * @param analyticalStorage An `analyticalStorage` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder analyticalStorage(@Nullable Output<AccountAnalyticalStorageArgs> analyticalStorage) {
            $.analyticalStorage = analyticalStorage;
            return this;
        }

        /**
         * @param analyticalStorage An `analyticalStorage` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder analyticalStorage(AccountAnalyticalStorageArgs analyticalStorage) {
            return analyticalStorage(Output.of(analyticalStorage));
        }

        public Builder analyticalStorageEnabled(@Nullable Output<Boolean> analyticalStorageEnabled) {
            $.analyticalStorageEnabled = analyticalStorageEnabled;
            return this;
        }

        public Builder analyticalStorageEnabled(Boolean analyticalStorageEnabled) {
            return analyticalStorageEnabled(Output.of(analyticalStorageEnabled));
        }

        public Builder automaticFailoverEnabled(@Nullable Output<Boolean> automaticFailoverEnabled) {
            $.automaticFailoverEnabled = automaticFailoverEnabled;
            return this;
        }

        public Builder automaticFailoverEnabled(Boolean automaticFailoverEnabled) {
            return automaticFailoverEnabled(Output.of(automaticFailoverEnabled));
        }

        public Builder backup(@Nullable Output<AccountBackupArgs> backup) {
            $.backup = backup;
            return this;
        }

        public Builder backup(AccountBackupArgs backup) {
            return backup(Output.of(backup));
        }

        public Builder burstCapacityEnabled(@Nullable Output<Boolean> burstCapacityEnabled) {
            $.burstCapacityEnabled = burstCapacityEnabled;
            return this;
        }

        public Builder burstCapacityEnabled(Boolean burstCapacityEnabled) {
            return burstCapacityEnabled(Output.of(burstCapacityEnabled));
        }

        public Builder capabilities(@Nullable Output<List<AccountCapabilityArgs>> capabilities) {
            $.capabilities = capabilities;
            return this;
        }

        public Builder capabilities(List<AccountCapabilityArgs> capabilities) {
            return capabilities(Output.of(capabilities));
        }

        public Builder capabilities(AccountCapabilityArgs... capabilities) {
            return capabilities(List.of(capabilities));
        }

        /**
         * @param capacity A `capacity` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder capacity(@Nullable Output<AccountCapacityArgs> capacity) {
            $.capacity = capacity;
            return this;
        }

        /**
         * @param capacity A `capacity` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder capacity(AccountCapacityArgs capacity) {
            return capacity(Output.of(capacity));
        }

        public Builder consistencyPolicy(Output<AccountConsistencyPolicyArgs> consistencyPolicy) {
            $.consistencyPolicy = consistencyPolicy;
            return this;
        }

        public Builder consistencyPolicy(AccountConsistencyPolicyArgs consistencyPolicy) {
            return consistencyPolicy(Output.of(consistencyPolicy));
        }

        public Builder corsRule(@Nullable Output<AccountCorsRuleArgs> corsRule) {
            $.corsRule = corsRule;
            return this;
        }

        public Builder corsRule(AccountCorsRuleArgs corsRule) {
            return corsRule(Output.of(corsRule));
        }

        /**
         * @param createMode The creation mode for the CosmosDB Account. Possible values are `Default` and `Restore`. Changing this forces a new resource to be created.
         * 
         * &gt; **Note:** `createMode` can only be defined when the `backup.type` is set to `Continuous`.
         * 
         * @return builder
         * 
         */
        public Builder createMode(@Nullable Output<String> createMode) {
            $.createMode = createMode;
            return this;
        }

        /**
         * @param createMode The creation mode for the CosmosDB Account. Possible values are `Default` and `Restore`. Changing this forces a new resource to be created.
         * 
         * &gt; **Note:** `createMode` can only be defined when the `backup.type` is set to `Continuous`.
         * 
         * @return builder
         * 
         */
        public Builder createMode(String createMode) {
            return createMode(Output.of(createMode));
        }

        /**
         * @param defaultIdentityType The default identity for accessing Key Vault. Possible values are `FirstPartyIdentity`, `SystemAssignedIdentity` or `UserAssignedIdentity`. Defaults to `FirstPartyIdentity`.
         * 
         * @return builder
         * 
         */
        public Builder defaultIdentityType(@Nullable Output<String> defaultIdentityType) {
            $.defaultIdentityType = defaultIdentityType;
            return this;
        }

        /**
         * @param defaultIdentityType The default identity for accessing Key Vault. Possible values are `FirstPartyIdentity`, `SystemAssignedIdentity` or `UserAssignedIdentity`. Defaults to `FirstPartyIdentity`.
         * 
         * @return builder
         * 
         */
        public Builder defaultIdentityType(String defaultIdentityType) {
            return defaultIdentityType(Output.of(defaultIdentityType));
        }

        public Builder freeTierEnabled(@Nullable Output<Boolean> freeTierEnabled) {
            $.freeTierEnabled = freeTierEnabled;
            return this;
        }

        public Builder freeTierEnabled(Boolean freeTierEnabled) {
            return freeTierEnabled(Output.of(freeTierEnabled));
        }

        public Builder geoLocations(Output<List<AccountGeoLocationArgs>> geoLocations) {
            $.geoLocations = geoLocations;
            return this;
        }

        public Builder geoLocations(List<AccountGeoLocationArgs> geoLocations) {
            return geoLocations(Output.of(geoLocations));
        }

        public Builder geoLocations(AccountGeoLocationArgs... geoLocations) {
            return geoLocations(List.of(geoLocations));
        }

        public Builder identity(@Nullable Output<AccountIdentityArgs> identity) {
            $.identity = identity;
            return this;
        }

        public Builder identity(AccountIdentityArgs identity) {
            return identity(Output.of(identity));
        }

        public Builder ipRangeFilters(@Nullable Output<List<String>> ipRangeFilters) {
            $.ipRangeFilters = ipRangeFilters;
            return this;
        }

        public Builder ipRangeFilters(List<String> ipRangeFilters) {
            return ipRangeFilters(Output.of(ipRangeFilters));
        }

        public Builder ipRangeFilters(String... ipRangeFilters) {
            return ipRangeFilters(List.of(ipRangeFilters));
        }

        public Builder isVirtualNetworkFilterEnabled(@Nullable Output<Boolean> isVirtualNetworkFilterEnabled) {
            $.isVirtualNetworkFilterEnabled = isVirtualNetworkFilterEnabled;
            return this;
        }

        public Builder isVirtualNetworkFilterEnabled(Boolean isVirtualNetworkFilterEnabled) {
            return isVirtualNetworkFilterEnabled(Output.of(isVirtualNetworkFilterEnabled));
        }

        public Builder keyVaultKeyId(@Nullable Output<String> keyVaultKeyId) {
            $.keyVaultKeyId = keyVaultKeyId;
            return this;
        }

        public Builder keyVaultKeyId(String keyVaultKeyId) {
            return keyVaultKeyId(Output.of(keyVaultKeyId));
        }

        public Builder kind(@Nullable Output<String> kind) {
            $.kind = kind;
            return this;
        }

        public Builder kind(String kind) {
            return kind(Output.of(kind));
        }

        public Builder localAuthenticationDisabled(@Nullable Output<Boolean> localAuthenticationDisabled) {
            $.localAuthenticationDisabled = localAuthenticationDisabled;
            return this;
        }

        public Builder localAuthenticationDisabled(Boolean localAuthenticationDisabled) {
            return localAuthenticationDisabled(Output.of(localAuthenticationDisabled));
        }

        /**
         * @param location Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        public Builder managedHsmKeyId(@Nullable Output<String> managedHsmKeyId) {
            $.managedHsmKeyId = managedHsmKeyId;
            return this;
        }

        public Builder managedHsmKeyId(String managedHsmKeyId) {
            return managedHsmKeyId(Output.of(managedHsmKeyId));
        }

        /**
         * @param minimalTlsVersion Specifies the minimal TLS version for the CosmosDB account. Possible values are: `Tls`, `Tls11`, and `Tls12`. Defaults to `Tls12`.
         * 
         * &gt; **Note:** Azure Services will require TLS 1.2+ by August 2025, please see this [announcement](https://azure.microsoft.com/en-us/updates/v2/update-retirement-tls1-0-tls1-1-versions-azure-services/) for more details.
         * 
         * @return builder
         * 
         */
        public Builder minimalTlsVersion(@Nullable Output<String> minimalTlsVersion) {
            $.minimalTlsVersion = minimalTlsVersion;
            return this;
        }

        /**
         * @param minimalTlsVersion Specifies the minimal TLS version for the CosmosDB account. Possible values are: `Tls`, `Tls11`, and `Tls12`. Defaults to `Tls12`.
         * 
         * &gt; **Note:** Azure Services will require TLS 1.2+ by August 2025, please see this [announcement](https://azure.microsoft.com/en-us/updates/v2/update-retirement-tls1-0-tls1-1-versions-azure-services/) for more details.
         * 
         * @return builder
         * 
         */
        public Builder minimalTlsVersion(String minimalTlsVersion) {
            return minimalTlsVersion(Output.of(minimalTlsVersion));
        }

        public Builder mongoServerVersion(@Nullable Output<String> mongoServerVersion) {
            $.mongoServerVersion = mongoServerVersion;
            return this;
        }

        public Builder mongoServerVersion(String mongoServerVersion) {
            return mongoServerVersion(Output.of(mongoServerVersion));
        }

        public Builder multipleWriteLocationsEnabled(@Nullable Output<Boolean> multipleWriteLocationsEnabled) {
            $.multipleWriteLocationsEnabled = multipleWriteLocationsEnabled;
            return this;
        }

        public Builder multipleWriteLocationsEnabled(Boolean multipleWriteLocationsEnabled) {
            return multipleWriteLocationsEnabled(Output.of(multipleWriteLocationsEnabled));
        }

        /**
         * @param name Specifies the name of the CosmosDB Account. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Specifies the name of the CosmosDB Account. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder networkAclBypassForAzureServices(@Nullable Output<Boolean> networkAclBypassForAzureServices) {
            $.networkAclBypassForAzureServices = networkAclBypassForAzureServices;
            return this;
        }

        public Builder networkAclBypassForAzureServices(Boolean networkAclBypassForAzureServices) {
            return networkAclBypassForAzureServices(Output.of(networkAclBypassForAzureServices));
        }

        public Builder networkAclBypassIds(@Nullable Output<List<String>> networkAclBypassIds) {
            $.networkAclBypassIds = networkAclBypassIds;
            return this;
        }

        public Builder networkAclBypassIds(List<String> networkAclBypassIds) {
            return networkAclBypassIds(Output.of(networkAclBypassIds));
        }

        public Builder networkAclBypassIds(String... networkAclBypassIds) {
            return networkAclBypassIds(List.of(networkAclBypassIds));
        }

        /**
         * @param offerType Specifies the Offer Type to use for this CosmosDB Account; currently, this can only be set to `Standard`.
         * 
         * @return builder
         * 
         */
        public Builder offerType(Output<String> offerType) {
            $.offerType = offerType;
            return this;
        }

        /**
         * @param offerType Specifies the Offer Type to use for this CosmosDB Account; currently, this can only be set to `Standard`.
         * 
         * @return builder
         * 
         */
        public Builder offerType(String offerType) {
            return offerType(Output.of(offerType));
        }

        public Builder partitionMergeEnabled(@Nullable Output<Boolean> partitionMergeEnabled) {
            $.partitionMergeEnabled = partitionMergeEnabled;
            return this;
        }

        public Builder partitionMergeEnabled(Boolean partitionMergeEnabled) {
            return partitionMergeEnabled(Output.of(partitionMergeEnabled));
        }

        public Builder publicNetworkAccessEnabled(@Nullable Output<Boolean> publicNetworkAccessEnabled) {
            $.publicNetworkAccessEnabled = publicNetworkAccessEnabled;
            return this;
        }

        public Builder publicNetworkAccessEnabled(Boolean publicNetworkAccessEnabled) {
            return publicNetworkAccessEnabled(Output.of(publicNetworkAccessEnabled));
        }

        /**
         * @param resourceGroupName The name of the resource group in which the CosmosDB Account is created. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName The name of the resource group in which the CosmosDB Account is created. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        public Builder restore(@Nullable Output<AccountRestoreArgs> restore) {
            $.restore = restore;
            return this;
        }

        public Builder restore(AccountRestoreArgs restore) {
            return restore(Output.of(restore));
        }

        /**
         * @param tags A mapping of tags to assign to the resource.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags A mapping of tags to assign to the resource.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public Builder virtualNetworkRules(@Nullable Output<List<AccountVirtualNetworkRuleArgs>> virtualNetworkRules) {
            $.virtualNetworkRules = virtualNetworkRules;
            return this;
        }

        public Builder virtualNetworkRules(List<AccountVirtualNetworkRuleArgs> virtualNetworkRules) {
            return virtualNetworkRules(Output.of(virtualNetworkRules));
        }

        public Builder virtualNetworkRules(AccountVirtualNetworkRuleArgs... virtualNetworkRules) {
            return virtualNetworkRules(List.of(virtualNetworkRules));
        }

        public AccountArgs build() {
            if ($.consistencyPolicy == null) {
                throw new MissingRequiredPropertyException("AccountArgs", "consistencyPolicy");
            }
            if ($.geoLocations == null) {
                throw new MissingRequiredPropertyException("AccountArgs", "geoLocations");
            }
            if ($.offerType == null) {
                throw new MissingRequiredPropertyException("AccountArgs", "offerType");
            }
            if ($.resourceGroupName == null) {
                throw new MissingRequiredPropertyException("AccountArgs", "resourceGroupName");
            }
            return $;
        }
    }

}
