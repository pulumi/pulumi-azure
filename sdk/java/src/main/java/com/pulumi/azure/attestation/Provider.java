// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.attestation;

import com.pulumi.azure.Utilities;
import com.pulumi.azure.attestation.ProviderArgs;
import com.pulumi.azure.attestation.inputs.ProviderState;
import com.pulumi.azure.attestation.outputs.ProviderPolicy;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Manages an Attestation Provider.
 * 
 * ## Example Usage
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.azure.core.ResourceGroup;
 * import com.pulumi.azure.core.ResourceGroupArgs;
 * import com.pulumi.azure.attestation.Provider;
 * import com.pulumi.azure.attestation.ProviderArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var exampleResourceGroup = new ResourceGroup(&#34;exampleResourceGroup&#34;, ResourceGroupArgs.builder()        
 *             .location(&#34;West Europe&#34;)
 *             .build());
 * 
 *         var exampleProvider = new Provider(&#34;exampleProvider&#34;, ProviderArgs.builder()        
 *             .resourceGroupName(exampleResourceGroup.name())
 *             .location(exampleResourceGroup.location())
 *             .policySigningCertificateData(Files.readString(Paths.get(&#34;./example/cert.pem&#34;)))
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * Attestation Providers can be imported using the `resource id`, e.g.
 * 
 * ```sh
 *  $ pulumi import azure:attestation/provider:Provider example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.Attestation/attestationProviders/provider1
 * ```
 * 
 */
@ResourceType(type="azure:attestation/provider:Provider")
public class Provider extends com.pulumi.resources.CustomResource {
    /**
     * The URI of the Attestation Service.
     * 
     */
    @Export(name="attestationUri", refs={String.class}, tree="[0]")
    private Output<String> attestationUri;

    /**
     * @return The URI of the Attestation Service.
     * 
     */
    public Output<String> attestationUri() {
        return this.attestationUri;
    }
    /**
     * The Azure Region where the Attestation Provider should exist. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="location", refs={String.class}, tree="[0]")
    private Output<String> location;

    /**
     * @return The Azure Region where the Attestation Provider should exist. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> location() {
        return this.location;
    }
    /**
     * The name which should be used for this Attestation Provider. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The name which should be used for this Attestation Provider. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Specifies the base64 URI Encoded RFC 7519 JWT that should be used for the TPM Policy.
     * 
     */
    @Export(name="openEnclavePolicyBase64", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> openEnclavePolicyBase64;

    /**
     * @return Specifies the base64 URI Encoded RFC 7519 JWT that should be used for the TPM Policy.
     * 
     */
    public Output<Optional<String>> openEnclavePolicyBase64() {
        return Codegen.optional(this.openEnclavePolicyBase64);
    }
    /**
     * @deprecated
     * This field is no longer used and will be removed in v4.0 of the Azure Provider - use `open_enclave_policy_base64`, `sgx_enclave_policy_base64` and `tpm_policy_base64` instead.
     * 
     */
    @Deprecated /* This field is no longer used and will be removed in v4.0 of the Azure Provider - use `open_enclave_policy_base64`, `sgx_enclave_policy_base64` and `tpm_policy_base64` instead. */
    @Export(name="policies", refs={List.class,ProviderPolicy.class}, tree="[0,1]")
    private Output</* @Nullable */ List<ProviderPolicy>> policies;

    public Output<Optional<List<ProviderPolicy>>> policies() {
        return Codegen.optional(this.policies);
    }
    /**
     * A valid X.509 certificate (Section 4 of [RFC4648](https://tools.ietf.org/html/rfc4648)). Changing this forces a new resource to be created.
     * 
     */
    @Export(name="policySigningCertificateData", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> policySigningCertificateData;

    /**
     * @return A valid X.509 certificate (Section 4 of [RFC4648](https://tools.ietf.org/html/rfc4648)). Changing this forces a new resource to be created.
     * 
     */
    public Output<Optional<String>> policySigningCertificateData() {
        return Codegen.optional(this.policySigningCertificateData);
    }
    /**
     * The name of the Resource Group where the attestation provider should exist. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="resourceGroupName", refs={String.class}, tree="[0]")
    private Output<String> resourceGroupName;

    /**
     * @return The name of the Resource Group where the attestation provider should exist. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }
    /**
     * Specifies the base64 URI Encoded RFC 7519 JWT that should be used for the TPM Policy.
     * 
     */
    @Export(name="sgxEnclavePolicyBase64", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> sgxEnclavePolicyBase64;

    /**
     * @return Specifies the base64 URI Encoded RFC 7519 JWT that should be used for the TPM Policy.
     * 
     */
    public Output<Optional<String>> sgxEnclavePolicyBase64() {
        return Codegen.optional(this.sgxEnclavePolicyBase64);
    }
    /**
     * A mapping of tags which should be assigned to the Attestation Provider.
     * 
     */
    @Export(name="tags", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output</* @Nullable */ Map<String,String>> tags;

    /**
     * @return A mapping of tags which should be assigned to the Attestation Provider.
     * 
     */
    public Output<Optional<Map<String,String>>> tags() {
        return Codegen.optional(this.tags);
    }
    /**
     * Specifies the base64 URI Encoded RFC 7519 JWT that should be used for the TPM Policy.
     * 
     */
    @Export(name="tpmPolicyBase64", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> tpmPolicyBase64;

    /**
     * @return Specifies the base64 URI Encoded RFC 7519 JWT that should be used for the TPM Policy.
     * 
     */
    public Output<Optional<String>> tpmPolicyBase64() {
        return Codegen.optional(this.tpmPolicyBase64);
    }
    /**
     * Trust model used for the Attestation Service.
     * 
     */
    @Export(name="trustModel", refs={String.class}, tree="[0]")
    private Output<String> trustModel;

    /**
     * @return Trust model used for the Attestation Service.
     * 
     */
    public Output<String> trustModel() {
        return this.trustModel;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Provider(String name) {
        this(name, ProviderArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Provider(String name, ProviderArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Provider(String name, ProviderArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:attestation/provider:Provider", name, args == null ? ProviderArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private Provider(String name, Output<String> id, @Nullable ProviderState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:attestation/provider:Provider", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Provider get(String name, Output<String> id, @Nullable ProviderState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Provider(name, id, state, options);
    }
}
