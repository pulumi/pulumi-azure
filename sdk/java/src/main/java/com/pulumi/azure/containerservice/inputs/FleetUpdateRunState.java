// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.containerservice.inputs;

import com.pulumi.azure.containerservice.inputs.FleetUpdateRunManagedClusterUpdateArgs;
import com.pulumi.azure.containerservice.inputs.FleetUpdateRunStageArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class FleetUpdateRunState extends com.pulumi.resources.ResourceArgs {

    public static final FleetUpdateRunState Empty = new FleetUpdateRunState();

    /**
     * The ID of the Fleet Update Strategy. Only one of `fleetUpdateStrategyId` or `stage` can be specified.
     * 
     */
    @Import(name="fleetUpdateStrategyId")
    private @Nullable Output<String> fleetUpdateStrategyId;

    /**
     * @return The ID of the Fleet Update Strategy. Only one of `fleetUpdateStrategyId` or `stage` can be specified.
     * 
     */
    public Optional<Output<String>> fleetUpdateStrategyId() {
        return Optional.ofNullable(this.fleetUpdateStrategyId);
    }

    /**
     * The ID of the Fleet Manager. Changing this forces a new Kubernetes Fleet Update Run to be created.
     * 
     */
    @Import(name="kubernetesFleetManagerId")
    private @Nullable Output<String> kubernetesFleetManagerId;

    /**
     * @return The ID of the Fleet Manager. Changing this forces a new Kubernetes Fleet Update Run to be created.
     * 
     */
    public Optional<Output<String>> kubernetesFleetManagerId() {
        return Optional.ofNullable(this.kubernetesFleetManagerId);
    }

    /**
     * A `managedClusterUpdate` block as defined below.
     * 
     */
    @Import(name="managedClusterUpdate")
    private @Nullable Output<FleetUpdateRunManagedClusterUpdateArgs> managedClusterUpdate;

    /**
     * @return A `managedClusterUpdate` block as defined below.
     * 
     */
    public Optional<Output<FleetUpdateRunManagedClusterUpdateArgs>> managedClusterUpdate() {
        return Optional.ofNullable(this.managedClusterUpdate);
    }

    /**
     * The name which should be used for this Kubernetes Fleet Update Run. Changing this forces a new Kubernetes Fleet Update Run to be created.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name which should be used for this Kubernetes Fleet Update Run. Changing this forces a new Kubernetes Fleet Update Run to be created.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * One or more `stage` blocks as defined below. Only one of `stage` or `fleetUpdateStrategyId` can be specified.
     * 
     */
    @Import(name="stages")
    private @Nullable Output<List<FleetUpdateRunStageArgs>> stages;

    /**
     * @return One or more `stage` blocks as defined below. Only one of `stage` or `fleetUpdateStrategyId` can be specified.
     * 
     */
    public Optional<Output<List<FleetUpdateRunStageArgs>>> stages() {
        return Optional.ofNullable(this.stages);
    }

    private FleetUpdateRunState() {}

    private FleetUpdateRunState(FleetUpdateRunState $) {
        this.fleetUpdateStrategyId = $.fleetUpdateStrategyId;
        this.kubernetesFleetManagerId = $.kubernetesFleetManagerId;
        this.managedClusterUpdate = $.managedClusterUpdate;
        this.name = $.name;
        this.stages = $.stages;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FleetUpdateRunState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FleetUpdateRunState $;

        public Builder() {
            $ = new FleetUpdateRunState();
        }

        public Builder(FleetUpdateRunState defaults) {
            $ = new FleetUpdateRunState(Objects.requireNonNull(defaults));
        }

        /**
         * @param fleetUpdateStrategyId The ID of the Fleet Update Strategy. Only one of `fleetUpdateStrategyId` or `stage` can be specified.
         * 
         * @return builder
         * 
         */
        public Builder fleetUpdateStrategyId(@Nullable Output<String> fleetUpdateStrategyId) {
            $.fleetUpdateStrategyId = fleetUpdateStrategyId;
            return this;
        }

        /**
         * @param fleetUpdateStrategyId The ID of the Fleet Update Strategy. Only one of `fleetUpdateStrategyId` or `stage` can be specified.
         * 
         * @return builder
         * 
         */
        public Builder fleetUpdateStrategyId(String fleetUpdateStrategyId) {
            return fleetUpdateStrategyId(Output.of(fleetUpdateStrategyId));
        }

        /**
         * @param kubernetesFleetManagerId The ID of the Fleet Manager. Changing this forces a new Kubernetes Fleet Update Run to be created.
         * 
         * @return builder
         * 
         */
        public Builder kubernetesFleetManagerId(@Nullable Output<String> kubernetesFleetManagerId) {
            $.kubernetesFleetManagerId = kubernetesFleetManagerId;
            return this;
        }

        /**
         * @param kubernetesFleetManagerId The ID of the Fleet Manager. Changing this forces a new Kubernetes Fleet Update Run to be created.
         * 
         * @return builder
         * 
         */
        public Builder kubernetesFleetManagerId(String kubernetesFleetManagerId) {
            return kubernetesFleetManagerId(Output.of(kubernetesFleetManagerId));
        }

        /**
         * @param managedClusterUpdate A `managedClusterUpdate` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder managedClusterUpdate(@Nullable Output<FleetUpdateRunManagedClusterUpdateArgs> managedClusterUpdate) {
            $.managedClusterUpdate = managedClusterUpdate;
            return this;
        }

        /**
         * @param managedClusterUpdate A `managedClusterUpdate` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder managedClusterUpdate(FleetUpdateRunManagedClusterUpdateArgs managedClusterUpdate) {
            return managedClusterUpdate(Output.of(managedClusterUpdate));
        }

        /**
         * @param name The name which should be used for this Kubernetes Fleet Update Run. Changing this forces a new Kubernetes Fleet Update Run to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name which should be used for this Kubernetes Fleet Update Run. Changing this forces a new Kubernetes Fleet Update Run to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param stages One or more `stage` blocks as defined below. Only one of `stage` or `fleetUpdateStrategyId` can be specified.
         * 
         * @return builder
         * 
         */
        public Builder stages(@Nullable Output<List<FleetUpdateRunStageArgs>> stages) {
            $.stages = stages;
            return this;
        }

        /**
         * @param stages One or more `stage` blocks as defined below. Only one of `stage` or `fleetUpdateStrategyId` can be specified.
         * 
         * @return builder
         * 
         */
        public Builder stages(List<FleetUpdateRunStageArgs> stages) {
            return stages(Output.of(stages));
        }

        /**
         * @param stages One or more `stage` blocks as defined below. Only one of `stage` or `fleetUpdateStrategyId` can be specified.
         * 
         * @return builder
         * 
         */
        public Builder stages(FleetUpdateRunStageArgs... stages) {
            return stages(List.of(stages));
        }

        public FleetUpdateRunState build() {
            return $;
        }
    }

}
