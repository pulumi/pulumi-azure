// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.automation.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class ScheduleMonthlyOccurrence {
    /**
     * @return Day of the occurrence. Must be one of `Monday`, `Tuesday`, `Wednesday`, `Thursday`, `Friday`, `Saturday`, `Sunday`.
     * 
     */
    private String day;
    /**
     * @return Occurrence of the week within the month. Must be between `1` and `5`. `-1` for last week within the month.
     * 
     */
    private Integer occurrence;

    private ScheduleMonthlyOccurrence() {}
    /**
     * @return Day of the occurrence. Must be one of `Monday`, `Tuesday`, `Wednesday`, `Thursday`, `Friday`, `Saturday`, `Sunday`.
     * 
     */
    public String day() {
        return this.day;
    }
    /**
     * @return Occurrence of the week within the month. Must be between `1` and `5`. `-1` for last week within the month.
     * 
     */
    public Integer occurrence() {
        return this.occurrence;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ScheduleMonthlyOccurrence defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String day;
        private Integer occurrence;
        public Builder() {}
        public Builder(ScheduleMonthlyOccurrence defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.day = defaults.day;
    	      this.occurrence = defaults.occurrence;
        }

        @CustomType.Setter
        public Builder day(String day) {
            if (day == null) {
              throw new MissingRequiredPropertyException("ScheduleMonthlyOccurrence", "day");
            }
            this.day = day;
            return this;
        }
        @CustomType.Setter
        public Builder occurrence(Integer occurrence) {
            if (occurrence == null) {
              throw new MissingRequiredPropertyException("ScheduleMonthlyOccurrence", "occurrence");
            }
            this.occurrence = occurrence;
            return this;
        }
        public ScheduleMonthlyOccurrence build() {
            final var _resultValue = new ScheduleMonthlyOccurrence();
            _resultValue.day = day;
            _resultValue.occurrence = occurrence;
            return _resultValue;
        }
    }
}
