// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.blueprint.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetDefinitionResult {
    /**
     * @return The description of the Blueprint Definition.
     * 
     */
    private String description;
    /**
     * @return The display name of the Blueprint Definition.
     * 
     */
    private String displayName;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return The timestamp of when this last modification was saved to the Blueprint Definition.
     * 
     */
    private String lastModified;
    private String name;
    private String scopeId;
    /**
     * @return The target scope.
     * 
     */
    private String targetScope;
    /**
     * @return The timestamp of when this Blueprint Definition was created.
     * 
     */
    private String timeCreated;
    /**
     * @return A list of versions published for this Blueprint Definition.
     * 
     */
    private List<String> versions;

    private GetDefinitionResult() {}
    /**
     * @return The description of the Blueprint Definition.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return The display name of the Blueprint Definition.
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The timestamp of when this last modification was saved to the Blueprint Definition.
     * 
     */
    public String lastModified() {
        return this.lastModified;
    }
    public String name() {
        return this.name;
    }
    public String scopeId() {
        return this.scopeId;
    }
    /**
     * @return The target scope.
     * 
     */
    public String targetScope() {
        return this.targetScope;
    }
    /**
     * @return The timestamp of when this Blueprint Definition was created.
     * 
     */
    public String timeCreated() {
        return this.timeCreated;
    }
    /**
     * @return A list of versions published for this Blueprint Definition.
     * 
     */
    public List<String> versions() {
        return this.versions;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDefinitionResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String description;
        private String displayName;
        private String id;
        private String lastModified;
        private String name;
        private String scopeId;
        private String targetScope;
        private String timeCreated;
        private List<String> versions;
        public Builder() {}
        public Builder(GetDefinitionResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.description = defaults.description;
    	      this.displayName = defaults.displayName;
    	      this.id = defaults.id;
    	      this.lastModified = defaults.lastModified;
    	      this.name = defaults.name;
    	      this.scopeId = defaults.scopeId;
    	      this.targetScope = defaults.targetScope;
    	      this.timeCreated = defaults.timeCreated;
    	      this.versions = defaults.versions;
        }

        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetDefinitionResult", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(String displayName) {
            if (displayName == null) {
              throw new MissingRequiredPropertyException("GetDefinitionResult", "displayName");
            }
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetDefinitionResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder lastModified(String lastModified) {
            if (lastModified == null) {
              throw new MissingRequiredPropertyException("GetDefinitionResult", "lastModified");
            }
            this.lastModified = lastModified;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetDefinitionResult", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder scopeId(String scopeId) {
            if (scopeId == null) {
              throw new MissingRequiredPropertyException("GetDefinitionResult", "scopeId");
            }
            this.scopeId = scopeId;
            return this;
        }
        @CustomType.Setter
        public Builder targetScope(String targetScope) {
            if (targetScope == null) {
              throw new MissingRequiredPropertyException("GetDefinitionResult", "targetScope");
            }
            this.targetScope = targetScope;
            return this;
        }
        @CustomType.Setter
        public Builder timeCreated(String timeCreated) {
            if (timeCreated == null) {
              throw new MissingRequiredPropertyException("GetDefinitionResult", "timeCreated");
            }
            this.timeCreated = timeCreated;
            return this;
        }
        @CustomType.Setter
        public Builder versions(List<String> versions) {
            if (versions == null) {
              throw new MissingRequiredPropertyException("GetDefinitionResult", "versions");
            }
            this.versions = versions;
            return this;
        }
        public Builder versions(String... versions) {
            return versions(List.of(versions));
        }
        public GetDefinitionResult build() {
            final var _resultValue = new GetDefinitionResult();
            _resultValue.description = description;
            _resultValue.displayName = displayName;
            _resultValue.id = id;
            _resultValue.lastModified = lastModified;
            _resultValue.name = name;
            _resultValue.scopeId = scopeId;
            _resultValue.targetScope = targetScope;
            _resultValue.timeCreated = timeCreated;
            _resultValue.versions = versions;
            return _resultValue;
        }
    }
}
