// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.sentinel;

import com.pulumi.azure.Utilities;
import com.pulumi.azure.sentinel.MetadataArgs;
import com.pulumi.azure.sentinel.inputs.MetadataState;
import com.pulumi.azure.sentinel.outputs.MetadataAuthor;
import com.pulumi.azure.sentinel.outputs.MetadataCategory;
import com.pulumi.azure.sentinel.outputs.MetadataSource;
import com.pulumi.azure.sentinel.outputs.MetadataSupport;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Manages a Sentinel Metadata.
 * 
 * ## Example Usage
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.azure.core.ResourceGroup;
 * import com.pulumi.azure.core.ResourceGroupArgs;
 * import com.pulumi.azure.operationalinsights.AnalyticsWorkspace;
 * import com.pulumi.azure.operationalinsights.AnalyticsWorkspaceArgs;
 * import com.pulumi.azure.operationalinsights.AnalyticsSolution;
 * import com.pulumi.azure.operationalinsights.AnalyticsSolutionArgs;
 * import com.pulumi.azure.operationalinsights.inputs.AnalyticsSolutionPlanArgs;
 * import com.pulumi.azure.sentinel.AlertRuleNrt;
 * import com.pulumi.azure.sentinel.AlertRuleNrtArgs;
 * import com.pulumi.azure.sentinel.Metadata;
 * import com.pulumi.azure.sentinel.MetadataArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var exampleResourceGroup = new ResourceGroup(&#34;exampleResourceGroup&#34;, ResourceGroupArgs.builder()        
 *             .location(&#34;West Europe&#34;)
 *             .build());
 * 
 *         var exampleAnalyticsWorkspace = new AnalyticsWorkspace(&#34;exampleAnalyticsWorkspace&#34;, AnalyticsWorkspaceArgs.builder()        
 *             .location(exampleResourceGroup.location())
 *             .resourceGroupName(exampleResourceGroup.name())
 *             .sku(&#34;pergb2018&#34;)
 *             .build());
 * 
 *         var exampleAnalyticsSolution = new AnalyticsSolution(&#34;exampleAnalyticsSolution&#34;, AnalyticsSolutionArgs.builder()        
 *             .solutionName(&#34;SecurityInsights&#34;)
 *             .location(exampleResourceGroup.location())
 *             .resourceGroupName(exampleResourceGroup.name())
 *             .workspaceResourceId(exampleAnalyticsWorkspace.id())
 *             .workspaceName(exampleAnalyticsWorkspace.name())
 *             .plan(AnalyticsSolutionPlanArgs.builder()
 *                 .publisher(&#34;Microsoft&#34;)
 *                 .product(&#34;OMSGallery/SecurityInsights&#34;)
 *                 .build())
 *             .build());
 * 
 *         var exampleAlertRuleNrt = new AlertRuleNrt(&#34;exampleAlertRuleNrt&#34;, AlertRuleNrtArgs.builder()        
 *             .logAnalyticsWorkspaceId(exampleAnalyticsSolution.workspaceResourceId())
 *             .displayName(&#34;example&#34;)
 *             .severity(&#34;High&#34;)
 *             .query(&#34;&#34;&#34;
 * AzureActivity |
 *   where OperationName == &#34;Create or Update Virtual Machine&#34; or OperationName ==&#34;Create Deployment&#34; |
 *   where ActivityStatus == &#34;Succeeded&#34; |
 *   make-series dcount(ResourceId) default=0 on EventSubmissionTimestamp in range(ago(7d), now(), 1d) by Caller
 *             &#34;&#34;&#34;)
 *             .build());
 * 
 *         var exampleMetadata = new Metadata(&#34;exampleMetadata&#34;, MetadataArgs.builder()        
 *             .workspaceId(exampleAnalyticsSolution.workspaceResourceId())
 *             .contentId(exampleAlertRuleNrt.name())
 *             .kind(&#34;AnalyticsRule&#34;)
 *             .parentId(exampleAlertRuleNrt.id())
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * Sentinel Metadata can be imported using the `resource id`, e.g.
 * 
 * ```sh
 *  $ pulumi import azure:sentinel/metadata:Metadata example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resourcegroup1/providers/Microsoft.OperationalInsights/workspaces/workspace1/providers/Microsoft.SecurityInsights/metadata/metadata1
 * ```
 * 
 */
@ResourceType(type="azure:sentinel/metadata:Metadata")
public class Metadata extends com.pulumi.resources.CustomResource {
    /**
     * An `author` blocks as defined below.
     * 
     */
    @Export(name="author", refs={MetadataAuthor.class}, tree="[0]")
    private Output</* @Nullable */ MetadataAuthor> author;

    /**
     * @return An `author` blocks as defined below.
     * 
     */
    public Output<Optional<MetadataAuthor>> author() {
        return Codegen.optional(this.author);
    }
    /**
     * A `category` block as defined below.
     * 
     */
    @Export(name="category", refs={MetadataCategory.class}, tree="[0]")
    private Output</* @Nullable */ MetadataCategory> category;

    /**
     * @return A `category` block as defined below.
     * 
     */
    public Output<Optional<MetadataCategory>> category() {
        return Codegen.optional(this.category);
    }
    /**
     * The ID of the content. Used to identify dependencies and content from solutions or community.
     * 
     */
    @Export(name="contentId", refs={String.class}, tree="[0]")
    private Output<String> contentId;

    /**
     * @return The ID of the content. Used to identify dependencies and content from solutions or community.
     * 
     */
    public Output<String> contentId() {
        return this.contentId;
    }
    /**
     * Schema version of the content. Can be used to distinguish between flow based on the schema version.
     * 
     */
    @Export(name="contentSchemaVersion", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> contentSchemaVersion;

    /**
     * @return Schema version of the content. Can be used to distinguish between flow based on the schema version.
     * 
     */
    public Output<Optional<String>> contentSchemaVersion() {
        return Codegen.optional(this.contentSchemaVersion);
    }
    /**
     * The Custom version of the content.
     * 
     */
    @Export(name="customVersion", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> customVersion;

    /**
     * @return The Custom version of the content.
     * 
     */
    public Output<Optional<String>> customVersion() {
        return Codegen.optional(this.customVersion);
    }
    /**
     * A JSON formatted `dependency` block as defined below. Dependency for the content item, what other content items it requires to work.
     * 
     */
    @Export(name="dependency", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> dependency;

    /**
     * @return A JSON formatted `dependency` block as defined below. Dependency for the content item, what other content items it requires to work.
     * 
     */
    public Output<Optional<String>> dependency() {
        return Codegen.optional(this.dependency);
    }
    /**
     * The first publish date of solution content item.
     * 
     */
    @Export(name="firstPublishDate", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> firstPublishDate;

    /**
     * @return The first publish date of solution content item.
     * 
     */
    public Output<Optional<String>> firstPublishDate() {
        return Codegen.optional(this.firstPublishDate);
    }
    /**
     * The ID of the icon, this id can be fetched from the solution template.
     * 
     */
    @Export(name="iconId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> iconId;

    /**
     * @return The ID of the icon, this id can be fetched from the solution template.
     * 
     */
    public Output<Optional<String>> iconId() {
        return Codegen.optional(this.iconId);
    }
    /**
     * The kind of content the metadata is for. Possible values are `AnalyticsRule`, `AnalyticsRuleTemplate`, `AutomationRule`, `AzureFunction`, `DataConnector`, `DataType`, `HuntingQuery`, `InvestigationQuery`, `LogicAppsCustomConnector`, `Parser`, `Playbook`, `PlaybookTemplate`, `Solution`, `Watchlist`, `WatchlistTemplate`, `Workbook` and `WorkbookTemplate`.
     * 
     */
    @Export(name="kind", refs={String.class}, tree="[0]")
    private Output<String> kind;

    /**
     * @return The kind of content the metadata is for. Possible values are `AnalyticsRule`, `AnalyticsRuleTemplate`, `AutomationRule`, `AzureFunction`, `DataConnector`, `DataType`, `HuntingQuery`, `InvestigationQuery`, `LogicAppsCustomConnector`, `Parser`, `Playbook`, `PlaybookTemplate`, `Solution`, `Watchlist`, `WatchlistTemplate`, `Workbook` and `WorkbookTemplate`.
     * 
     */
    public Output<String> kind() {
        return this.kind;
    }
    /**
     * The last publish date of solution content item.
     * 
     */
    @Export(name="lastPublishDate", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> lastPublishDate;

    /**
     * @return The last publish date of solution content item.
     * 
     */
    public Output<Optional<String>> lastPublishDate() {
        return Codegen.optional(this.lastPublishDate);
    }
    /**
     * The name which should be used for this Sentinel Metadata. Changing this forces a new Sentinel Metadata to be created.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The name which should be used for this Sentinel Metadata. Changing this forces a new Sentinel Metadata to be created.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The ID of the parent resource ID of the content item, which the metadata belongs to.
     * 
     */
    @Export(name="parentId", refs={String.class}, tree="[0]")
    private Output<String> parentId;

    /**
     * @return The ID of the parent resource ID of the content item, which the metadata belongs to.
     * 
     */
    public Output<String> parentId() {
        return this.parentId;
    }
    /**
     * Specifies a list of preview image file names. These will be taken from solution artifacts.
     * 
     */
    @Export(name="previewImages", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> previewImages;

    /**
     * @return Specifies a list of preview image file names. These will be taken from solution artifacts.
     * 
     */
    public Output<Optional<List<String>>> previewImages() {
        return Codegen.optional(this.previewImages);
    }
    /**
     * Specifies a list of preview image file names used for dark theme. These will be taken from solution artifacts.
     * 
     */
    @Export(name="previewImagesDarks", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> previewImagesDarks;

    /**
     * @return Specifies a list of preview image file names used for dark theme. These will be taken from solution artifacts.
     * 
     */
    public Output<Optional<List<String>>> previewImagesDarks() {
        return Codegen.optional(this.previewImagesDarks);
    }
    /**
     * Specifies a list of providers for the solution content item.
     * 
     */
    @Export(name="providers", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> providers;

    /**
     * @return Specifies a list of providers for the solution content item.
     * 
     */
    public Output<Optional<List<String>>> providers() {
        return Codegen.optional(this.providers);
    }
    /**
     * A `source` block as defined below.
     * 
     */
    @Export(name="source", refs={MetadataSource.class}, tree="[0]")
    private Output<MetadataSource> source;

    /**
     * @return A `source` block as defined below.
     * 
     */
    public Output<MetadataSource> source() {
        return this.source;
    }
    /**
     * A `support` block as defined below.
     * 
     */
    @Export(name="support", refs={MetadataSupport.class}, tree="[0]")
    private Output</* @Nullable */ MetadataSupport> support;

    /**
     * @return A `support` block as defined below.
     * 
     */
    public Output<Optional<MetadataSupport>> support() {
        return Codegen.optional(this.support);
    }
    /**
     * Specifies a list of tactics the resource covers. Possible values are `Reconnaissance`, `ResourceDevelopment`, `InitialAccess`, `Execution`, `Persistence`, `PrivilegeEscalation`, `DefenseEvasion`, `CredentialAccess`, `Discovery`, `LateralMovement`, `Collection`, `CommandAndControl`, `Exfiltration`, `Impact`, `ImpairProcessControl` and `InhibitResponseFunction`.
     * 
     */
    @Export(name="threatAnalysisTactics", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> threatAnalysisTactics;

    /**
     * @return Specifies a list of tactics the resource covers. Possible values are `Reconnaissance`, `ResourceDevelopment`, `InitialAccess`, `Execution`, `Persistence`, `PrivilegeEscalation`, `DefenseEvasion`, `CredentialAccess`, `Discovery`, `LateralMovement`, `Collection`, `CommandAndControl`, `Exfiltration`, `Impact`, `ImpairProcessControl` and `InhibitResponseFunction`.
     * 
     */
    public Output<Optional<List<String>>> threatAnalysisTactics() {
        return Codegen.optional(this.threatAnalysisTactics);
    }
    /**
     * Specifies a list of techniques the resource covers.
     * 
     */
    @Export(name="threatAnalysisTechniques", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> threatAnalysisTechniques;

    /**
     * @return Specifies a list of techniques the resource covers.
     * 
     */
    public Output<Optional<List<String>>> threatAnalysisTechniques() {
        return Codegen.optional(this.threatAnalysisTechniques);
    }
    /**
     * Version of the content.
     * 
     */
    @Export(name="version", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> version;

    /**
     * @return Version of the content.
     * 
     */
    public Output<Optional<String>> version() {
        return Codegen.optional(this.version);
    }
    /**
     * The ID of the Log Analytics Workspace. Changing this forces a new Sentinel Metadata to be created.
     * 
     */
    @Export(name="workspaceId", refs={String.class}, tree="[0]")
    private Output<String> workspaceId;

    /**
     * @return The ID of the Log Analytics Workspace. Changing this forces a new Sentinel Metadata to be created.
     * 
     */
    public Output<String> workspaceId() {
        return this.workspaceId;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Metadata(String name) {
        this(name, MetadataArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Metadata(String name, MetadataArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Metadata(String name, MetadataArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:sentinel/metadata:Metadata", name, args == null ? MetadataArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private Metadata(String name, Output<String> id, @Nullable MetadataState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:sentinel/metadata:Metadata", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Metadata get(String name, Output<String> id, @Nullable MetadataState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Metadata(name, id, state, options);
    }
}
