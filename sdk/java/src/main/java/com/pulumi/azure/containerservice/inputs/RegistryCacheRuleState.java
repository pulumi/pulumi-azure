// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.containerservice.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class RegistryCacheRuleState extends com.pulumi.resources.ResourceArgs {

    public static final RegistryCacheRuleState Empty = new RegistryCacheRuleState();

    /**
     * The ID of the Container Registry where the Cache Rule should apply. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="containerRegistryId")
    private @Nullable Output<String> containerRegistryId;

    /**
     * @return The ID of the Container Registry where the Cache Rule should apply. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> containerRegistryId() {
        return Optional.ofNullable(this.containerRegistryId);
    }

    /**
     * The ARM resource ID of the Credential Store which is associated with the Cache Rule.
     * 
     */
    @Import(name="credentialSetId")
    private @Nullable Output<String> credentialSetId;

    /**
     * @return The ARM resource ID of the Credential Store which is associated with the Cache Rule.
     * 
     */
    public Optional<Output<String>> credentialSetId() {
        return Optional.ofNullable(this.credentialSetId);
    }

    /**
     * Specifies the name of the Container Registry Cache Rule. Only Alphanumeric characters allowed. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Specifies the name of the Container Registry Cache Rule. Only Alphanumeric characters allowed. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The name of the source repository path. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="sourceRepo")
    private @Nullable Output<String> sourceRepo;

    /**
     * @return The name of the source repository path. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> sourceRepo() {
        return Optional.ofNullable(this.sourceRepo);
    }

    /**
     * The name of the new repository path to store artifacts. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="targetRepo")
    private @Nullable Output<String> targetRepo;

    /**
     * @return The name of the new repository path to store artifacts. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> targetRepo() {
        return Optional.ofNullable(this.targetRepo);
    }

    private RegistryCacheRuleState() {}

    private RegistryCacheRuleState(RegistryCacheRuleState $) {
        this.containerRegistryId = $.containerRegistryId;
        this.credentialSetId = $.credentialSetId;
        this.name = $.name;
        this.sourceRepo = $.sourceRepo;
        this.targetRepo = $.targetRepo;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RegistryCacheRuleState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RegistryCacheRuleState $;

        public Builder() {
            $ = new RegistryCacheRuleState();
        }

        public Builder(RegistryCacheRuleState defaults) {
            $ = new RegistryCacheRuleState(Objects.requireNonNull(defaults));
        }

        /**
         * @param containerRegistryId The ID of the Container Registry where the Cache Rule should apply. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder containerRegistryId(@Nullable Output<String> containerRegistryId) {
            $.containerRegistryId = containerRegistryId;
            return this;
        }

        /**
         * @param containerRegistryId The ID of the Container Registry where the Cache Rule should apply. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder containerRegistryId(String containerRegistryId) {
            return containerRegistryId(Output.of(containerRegistryId));
        }

        /**
         * @param credentialSetId The ARM resource ID of the Credential Store which is associated with the Cache Rule.
         * 
         * @return builder
         * 
         */
        public Builder credentialSetId(@Nullable Output<String> credentialSetId) {
            $.credentialSetId = credentialSetId;
            return this;
        }

        /**
         * @param credentialSetId The ARM resource ID of the Credential Store which is associated with the Cache Rule.
         * 
         * @return builder
         * 
         */
        public Builder credentialSetId(String credentialSetId) {
            return credentialSetId(Output.of(credentialSetId));
        }

        /**
         * @param name Specifies the name of the Container Registry Cache Rule. Only Alphanumeric characters allowed. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Specifies the name of the Container Registry Cache Rule. Only Alphanumeric characters allowed. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param sourceRepo The name of the source repository path. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder sourceRepo(@Nullable Output<String> sourceRepo) {
            $.sourceRepo = sourceRepo;
            return this;
        }

        /**
         * @param sourceRepo The name of the source repository path. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder sourceRepo(String sourceRepo) {
            return sourceRepo(Output.of(sourceRepo));
        }

        /**
         * @param targetRepo The name of the new repository path to store artifacts. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder targetRepo(@Nullable Output<String> targetRepo) {
            $.targetRepo = targetRepo;
            return this;
        }

        /**
         * @param targetRepo The name of the new repository path to store artifacts. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder targetRepo(String targetRepo) {
            return targetRepo(Output.of(targetRepo));
        }

        public RegistryCacheRuleState build() {
            return $;
        }
    }

}
