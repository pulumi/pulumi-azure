// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.containerapp.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AppTemplateVolumeArgs extends com.pulumi.resources.ResourceArgs {

    public static final AppTemplateVolumeArgs Empty = new AppTemplateVolumeArgs();

    /**
     * The name of the volume.
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    /**
     * @return The name of the volume.
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    /**
     * The name of the `AzureFile` storage.
     * 
     */
    @Import(name="storageName")
    private @Nullable Output<String> storageName;

    /**
     * @return The name of the `AzureFile` storage.
     * 
     */
    public Optional<Output<String>> storageName() {
        return Optional.ofNullable(this.storageName);
    }

    /**
     * The type of storage volume. Possible values are `AzureFile`, `EmptyDir` and `Secret`. Defaults to `EmptyDir`.
     * 
     */
    @Import(name="storageType")
    private @Nullable Output<String> storageType;

    /**
     * @return The type of storage volume. Possible values are `AzureFile`, `EmptyDir` and `Secret`. Defaults to `EmptyDir`.
     * 
     */
    public Optional<Output<String>> storageType() {
        return Optional.ofNullable(this.storageType);
    }

    private AppTemplateVolumeArgs() {}

    private AppTemplateVolumeArgs(AppTemplateVolumeArgs $) {
        this.name = $.name;
        this.storageName = $.storageName;
        this.storageType = $.storageType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AppTemplateVolumeArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AppTemplateVolumeArgs $;

        public Builder() {
            $ = new AppTemplateVolumeArgs();
        }

        public Builder(AppTemplateVolumeArgs defaults) {
            $ = new AppTemplateVolumeArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param name The name of the volume.
         * 
         * @return builder
         * 
         */
        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the volume.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param storageName The name of the `AzureFile` storage.
         * 
         * @return builder
         * 
         */
        public Builder storageName(@Nullable Output<String> storageName) {
            $.storageName = storageName;
            return this;
        }

        /**
         * @param storageName The name of the `AzureFile` storage.
         * 
         * @return builder
         * 
         */
        public Builder storageName(String storageName) {
            return storageName(Output.of(storageName));
        }

        /**
         * @param storageType The type of storage volume. Possible values are `AzureFile`, `EmptyDir` and `Secret`. Defaults to `EmptyDir`.
         * 
         * @return builder
         * 
         */
        public Builder storageType(@Nullable Output<String> storageType) {
            $.storageType = storageType;
            return this;
        }

        /**
         * @param storageType The type of storage volume. Possible values are `AzureFile`, `EmptyDir` and `Secret`. Defaults to `EmptyDir`.
         * 
         * @return builder
         * 
         */
        public Builder storageType(String storageType) {
            return storageType(Output.of(storageType));
        }

        public AppTemplateVolumeArgs build() {
            $.name = Objects.requireNonNull($.name, "expected parameter 'name' to be non-null");
            return $;
        }
    }

}
