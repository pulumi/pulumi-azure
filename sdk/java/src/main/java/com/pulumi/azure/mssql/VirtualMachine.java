// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.mssql;

import com.pulumi.azure.Utilities;
import com.pulumi.azure.mssql.VirtualMachineArgs;
import com.pulumi.azure.mssql.inputs.VirtualMachineState;
import com.pulumi.azure.mssql.outputs.VirtualMachineAutoBackup;
import com.pulumi.azure.mssql.outputs.VirtualMachineAutoPatching;
import com.pulumi.azure.mssql.outputs.VirtualMachineKeyVaultCredential;
import com.pulumi.azure.mssql.outputs.VirtualMachineStorageConfiguration;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Manages a Microsoft SQL Virtual Machine
 * 
 * ## Example Usage
 * 
 * This example provisions a brief Managed Microsoft SQL Virtual Machine.
 * ```java
 * package generated_program;
 * 
 * import java.util.*;
 * import java.io.*;
 * import java.nio.*;
 * import com.pulumi.*;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         final var exampleVirtualMachine = Output.of(ComputeFunctions.getVirtualMachine(GetVirtualMachineArgs.builder()
 *             .name(&#34;example-vm&#34;)
 *             .resourceGroupName(&#34;example-resources&#34;)
 *             .build()));
 * 
 *         var exampleMssql_virtualMachineVirtualMachine = new VirtualMachine(&#34;exampleMssql/virtualMachineVirtualMachine&#34;, VirtualMachineArgs.builder()        
 *             .virtualMachineId(exampleVirtualMachine.apply(getVirtualMachineResult -&gt; getVirtualMachineResult.id()))
 *             .sqlLicenseType(&#34;PAYG&#34;)
 *             .rServicesEnabled(true)
 *             .sqlConnectivityPort(1433)
 *             .sqlConnectivityType(&#34;PRIVATE&#34;)
 *             .sqlConnectivityUpdatePassword(&#34;Password1234!&#34;)
 *             .sqlConnectivityUpdateUsername(&#34;sqllogin&#34;)
 *             .autoPatching(VirtualMachineAutoPatchingArgs.builder()
 *                 .dayOfWeek(&#34;Sunday&#34;)
 *                 .maintenanceWindowDurationInMinutes(60)
 *                 .maintenanceWindowStartingHour(2)
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * Microsoft SQL Virtual Machines can be imported using the `resource id`, e.g.
 * 
 * ```sh
 *  $ pulumi import azure:mssql/virtualMachine:VirtualMachine example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.SqlVirtualMachine/sqlVirtualMachines/example1
 * ```
 * 
 */
@ResourceType(type="azure:mssql/virtualMachine:VirtualMachine")
public class VirtualMachine extends com.pulumi.resources.CustomResource {
    /**
     * An `auto_backup` block as defined below. This block can be added to an existing resource, but removing this block forces a new resource to be created.
     * 
     */
    @Export(name="autoBackup", type=VirtualMachineAutoBackup.class, parameters={})
    private Output</* @Nullable */ VirtualMachineAutoBackup> autoBackup;

    /**
     * @return An `auto_backup` block as defined below. This block can be added to an existing resource, but removing this block forces a new resource to be created.
     * 
     */
    public Output<Optional<VirtualMachineAutoBackup>> autoBackup() {
        return Codegen.optional(this.autoBackup);
    }
    /**
     * An `auto_patching` block as defined below.
     * 
     */
    @Export(name="autoPatching", type=VirtualMachineAutoPatching.class, parameters={})
    private Output</* @Nullable */ VirtualMachineAutoPatching> autoPatching;

    /**
     * @return An `auto_patching` block as defined below.
     * 
     */
    public Output<Optional<VirtualMachineAutoPatching>> autoPatching() {
        return Codegen.optional(this.autoPatching);
    }
    /**
     * (Optional) An `key_vault_credential` block as defined below.
     * 
     */
    @Export(name="keyVaultCredential", type=VirtualMachineKeyVaultCredential.class, parameters={})
    private Output</* @Nullable */ VirtualMachineKeyVaultCredential> keyVaultCredential;

    /**
     * @return (Optional) An `key_vault_credential` block as defined below.
     * 
     */
    public Output<Optional<VirtualMachineKeyVaultCredential>> keyVaultCredential() {
        return Codegen.optional(this.keyVaultCredential);
    }
    /**
     * Should R Services be enabled?
     * 
     */
    @Export(name="rServicesEnabled", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> rServicesEnabled;

    /**
     * @return Should R Services be enabled?
     * 
     */
    public Output<Optional<Boolean>> rServicesEnabled() {
        return Codegen.optional(this.rServicesEnabled);
    }
    /**
     * The SQL Server port. Defaults to `1433`.
     * 
     */
    @Export(name="sqlConnectivityPort", type=Integer.class, parameters={})
    private Output</* @Nullable */ Integer> sqlConnectivityPort;

    /**
     * @return The SQL Server port. Defaults to `1433`.
     * 
     */
    public Output<Optional<Integer>> sqlConnectivityPort() {
        return Codegen.optional(this.sqlConnectivityPort);
    }
    /**
     * The connectivity type used for this SQL Server. Defaults to `PRIVATE`.
     * 
     */
    @Export(name="sqlConnectivityType", type=String.class, parameters={})
    private Output</* @Nullable */ String> sqlConnectivityType;

    /**
     * @return The connectivity type used for this SQL Server. Defaults to `PRIVATE`.
     * 
     */
    public Output<Optional<String>> sqlConnectivityType() {
        return Codegen.optional(this.sqlConnectivityType);
    }
    /**
     * The SQL Server sysadmin login password.
     * 
     */
    @Export(name="sqlConnectivityUpdatePassword", type=String.class, parameters={})
    private Output</* @Nullable */ String> sqlConnectivityUpdatePassword;

    /**
     * @return The SQL Server sysadmin login password.
     * 
     */
    public Output<Optional<String>> sqlConnectivityUpdatePassword() {
        return Codegen.optional(this.sqlConnectivityUpdatePassword);
    }
    /**
     * The SQL Server sysadmin login to create.
     * 
     */
    @Export(name="sqlConnectivityUpdateUsername", type=String.class, parameters={})
    private Output</* @Nullable */ String> sqlConnectivityUpdateUsername;

    /**
     * @return The SQL Server sysadmin login to create.
     * 
     */
    public Output<Optional<String>> sqlConnectivityUpdateUsername() {
        return Codegen.optional(this.sqlConnectivityUpdateUsername);
    }
    /**
     * The SQL Server license type. Possible values are `AHUB` (Azure Hybrid Benefit), `DR` (Disaster Recovery), and `PAYG` (Pay-As-You-Go). Changing this forces a new resource to be created.
     * 
     */
    @Export(name="sqlLicenseType", type=String.class, parameters={})
    private Output<String> sqlLicenseType;

    /**
     * @return The SQL Server license type. Possible values are `AHUB` (Azure Hybrid Benefit), `DR` (Disaster Recovery), and `PAYG` (Pay-As-You-Go). Changing this forces a new resource to be created.
     * 
     */
    public Output<String> sqlLicenseType() {
        return this.sqlLicenseType;
    }
    /**
     * An `storage_configuration` block as defined below.
     * 
     */
    @Export(name="storageConfiguration", type=VirtualMachineStorageConfiguration.class, parameters={})
    private Output</* @Nullable */ VirtualMachineStorageConfiguration> storageConfiguration;

    /**
     * @return An `storage_configuration` block as defined below.
     * 
     */
    public Output<Optional<VirtualMachineStorageConfiguration>> storageConfiguration() {
        return Codegen.optional(this.storageConfiguration);
    }
    /**
     * A mapping of tags to assign to the resource.
     * 
     */
    @Export(name="tags", type=Map.class, parameters={String.class, String.class})
    private Output</* @Nullable */ Map<String,String>> tags;

    /**
     * @return A mapping of tags to assign to the resource.
     * 
     */
    public Output<Optional<Map<String,String>>> tags() {
        return Codegen.optional(this.tags);
    }
    /**
     * The ID of the Virtual Machine. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="virtualMachineId", type=String.class, parameters={})
    private Output<String> virtualMachineId;

    /**
     * @return The ID of the Virtual Machine. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> virtualMachineId() {
        return this.virtualMachineId;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public VirtualMachine(String name) {
        this(name, VirtualMachineArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public VirtualMachine(String name, VirtualMachineArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public VirtualMachine(String name, VirtualMachineArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:mssql/virtualMachine:VirtualMachine", name, args == null ? VirtualMachineArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private VirtualMachine(String name, Output<String> id, @Nullable VirtualMachineState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:mssql/virtualMachine:VirtualMachine", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static VirtualMachine get(String name, Output<String> id, @Nullable VirtualMachineState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new VirtualMachine(name, id, state, options);
    }
}
