// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.eventgrid.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SystemTopicEventSubscriptionAzureFunctionEndpointArgs extends com.pulumi.resources.ResourceArgs {

    public static final SystemTopicEventSubscriptionAzureFunctionEndpointArgs Empty = new SystemTopicEventSubscriptionAzureFunctionEndpointArgs();

    /**
     * Specifies the ID of the Function where the Event Subscription will receive events. This must be the functions ID in format {function_app.id}/functions/{name}.
     * 
     */
    @Import(name="functionId", required=true)
    private Output<String> functionId;

    /**
     * @return Specifies the ID of the Function where the Event Subscription will receive events. This must be the functions ID in format {function_app.id}/functions/{name}.
     * 
     */
    public Output<String> functionId() {
        return this.functionId;
    }

    /**
     * Maximum number of events per batch.
     * 
     */
    @Import(name="maxEventsPerBatch")
    private @Nullable Output<Integer> maxEventsPerBatch;

    /**
     * @return Maximum number of events per batch.
     * 
     */
    public Optional<Output<Integer>> maxEventsPerBatch() {
        return Optional.ofNullable(this.maxEventsPerBatch);
    }

    /**
     * Preferred batch size in Kilobytes.
     * 
     */
    @Import(name="preferredBatchSizeInKilobytes")
    private @Nullable Output<Integer> preferredBatchSizeInKilobytes;

    /**
     * @return Preferred batch size in Kilobytes.
     * 
     */
    public Optional<Output<Integer>> preferredBatchSizeInKilobytes() {
        return Optional.ofNullable(this.preferredBatchSizeInKilobytes);
    }

    private SystemTopicEventSubscriptionAzureFunctionEndpointArgs() {}

    private SystemTopicEventSubscriptionAzureFunctionEndpointArgs(SystemTopicEventSubscriptionAzureFunctionEndpointArgs $) {
        this.functionId = $.functionId;
        this.maxEventsPerBatch = $.maxEventsPerBatch;
        this.preferredBatchSizeInKilobytes = $.preferredBatchSizeInKilobytes;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SystemTopicEventSubscriptionAzureFunctionEndpointArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SystemTopicEventSubscriptionAzureFunctionEndpointArgs $;

        public Builder() {
            $ = new SystemTopicEventSubscriptionAzureFunctionEndpointArgs();
        }

        public Builder(SystemTopicEventSubscriptionAzureFunctionEndpointArgs defaults) {
            $ = new SystemTopicEventSubscriptionAzureFunctionEndpointArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param functionId Specifies the ID of the Function where the Event Subscription will receive events. This must be the functions ID in format {function_app.id}/functions/{name}.
         * 
         * @return builder
         * 
         */
        public Builder functionId(Output<String> functionId) {
            $.functionId = functionId;
            return this;
        }

        /**
         * @param functionId Specifies the ID of the Function where the Event Subscription will receive events. This must be the functions ID in format {function_app.id}/functions/{name}.
         * 
         * @return builder
         * 
         */
        public Builder functionId(String functionId) {
            return functionId(Output.of(functionId));
        }

        /**
         * @param maxEventsPerBatch Maximum number of events per batch.
         * 
         * @return builder
         * 
         */
        public Builder maxEventsPerBatch(@Nullable Output<Integer> maxEventsPerBatch) {
            $.maxEventsPerBatch = maxEventsPerBatch;
            return this;
        }

        /**
         * @param maxEventsPerBatch Maximum number of events per batch.
         * 
         * @return builder
         * 
         */
        public Builder maxEventsPerBatch(Integer maxEventsPerBatch) {
            return maxEventsPerBatch(Output.of(maxEventsPerBatch));
        }

        /**
         * @param preferredBatchSizeInKilobytes Preferred batch size in Kilobytes.
         * 
         * @return builder
         * 
         */
        public Builder preferredBatchSizeInKilobytes(@Nullable Output<Integer> preferredBatchSizeInKilobytes) {
            $.preferredBatchSizeInKilobytes = preferredBatchSizeInKilobytes;
            return this;
        }

        /**
         * @param preferredBatchSizeInKilobytes Preferred batch size in Kilobytes.
         * 
         * @return builder
         * 
         */
        public Builder preferredBatchSizeInKilobytes(Integer preferredBatchSizeInKilobytes) {
            return preferredBatchSizeInKilobytes(Output.of(preferredBatchSizeInKilobytes));
        }

        public SystemTopicEventSubscriptionAzureFunctionEndpointArgs build() {
            if ($.functionId == null) {
                throw new MissingRequiredPropertyException("SystemTopicEventSubscriptionAzureFunctionEndpointArgs", "functionId");
            }
            return $;
        }
    }

}
