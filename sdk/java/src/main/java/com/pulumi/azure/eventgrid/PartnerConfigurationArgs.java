// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.eventgrid;

import com.pulumi.azure.eventgrid.inputs.PartnerConfigurationPartnerAuthorizationArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class PartnerConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final PartnerConfigurationArgs Empty = new PartnerConfigurationArgs();

    /**
     * Time used to validate the authorization expiration time for each authorized partner. Defaults to `7`.
     * 
     */
    @Import(name="defaultMaximumExpirationTimeInDays")
    private @Nullable Output<Integer> defaultMaximumExpirationTimeInDays;

    /**
     * @return Time used to validate the authorization expiration time for each authorized partner. Defaults to `7`.
     * 
     */
    public Optional<Output<Integer>> defaultMaximumExpirationTimeInDays() {
        return Optional.ofNullable(this.defaultMaximumExpirationTimeInDays);
    }

    /**
     * One or more `partnerAuthorization` blocks as defined below.
     * 
     */
    @Import(name="partnerAuthorizations")
    private @Nullable Output<List<PartnerConfigurationPartnerAuthorizationArgs>> partnerAuthorizations;

    /**
     * @return One or more `partnerAuthorization` blocks as defined below.
     * 
     */
    public Optional<Output<List<PartnerConfigurationPartnerAuthorizationArgs>>> partnerAuthorizations() {
        return Optional.ofNullable(this.partnerAuthorizations);
    }

    /**
     * The name of the Resource Group where the Event Grid Partner Configuration should exist. Changing this forces a new Event Grid Partner Configuration to be created.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    /**
     * @return The name of the Resource Group where the Event Grid Partner Configuration should exist. Changing this forces a new Event Grid Partner Configuration to be created.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * A mapping of tags which should be assigned to the Event Grid Partner Configuration.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return A mapping of tags which should be assigned to the Event Grid Partner Configuration.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private PartnerConfigurationArgs() {}

    private PartnerConfigurationArgs(PartnerConfigurationArgs $) {
        this.defaultMaximumExpirationTimeInDays = $.defaultMaximumExpirationTimeInDays;
        this.partnerAuthorizations = $.partnerAuthorizations;
        this.resourceGroupName = $.resourceGroupName;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PartnerConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PartnerConfigurationArgs $;

        public Builder() {
            $ = new PartnerConfigurationArgs();
        }

        public Builder(PartnerConfigurationArgs defaults) {
            $ = new PartnerConfigurationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param defaultMaximumExpirationTimeInDays Time used to validate the authorization expiration time for each authorized partner. Defaults to `7`.
         * 
         * @return builder
         * 
         */
        public Builder defaultMaximumExpirationTimeInDays(@Nullable Output<Integer> defaultMaximumExpirationTimeInDays) {
            $.defaultMaximumExpirationTimeInDays = defaultMaximumExpirationTimeInDays;
            return this;
        }

        /**
         * @param defaultMaximumExpirationTimeInDays Time used to validate the authorization expiration time for each authorized partner. Defaults to `7`.
         * 
         * @return builder
         * 
         */
        public Builder defaultMaximumExpirationTimeInDays(Integer defaultMaximumExpirationTimeInDays) {
            return defaultMaximumExpirationTimeInDays(Output.of(defaultMaximumExpirationTimeInDays));
        }

        /**
         * @param partnerAuthorizations One or more `partnerAuthorization` blocks as defined below.
         * 
         * @return builder
         * 
         */
        public Builder partnerAuthorizations(@Nullable Output<List<PartnerConfigurationPartnerAuthorizationArgs>> partnerAuthorizations) {
            $.partnerAuthorizations = partnerAuthorizations;
            return this;
        }

        /**
         * @param partnerAuthorizations One or more `partnerAuthorization` blocks as defined below.
         * 
         * @return builder
         * 
         */
        public Builder partnerAuthorizations(List<PartnerConfigurationPartnerAuthorizationArgs> partnerAuthorizations) {
            return partnerAuthorizations(Output.of(partnerAuthorizations));
        }

        /**
         * @param partnerAuthorizations One or more `partnerAuthorization` blocks as defined below.
         * 
         * @return builder
         * 
         */
        public Builder partnerAuthorizations(PartnerConfigurationPartnerAuthorizationArgs... partnerAuthorizations) {
            return partnerAuthorizations(List.of(partnerAuthorizations));
        }

        /**
         * @param resourceGroupName The name of the Resource Group where the Event Grid Partner Configuration should exist. Changing this forces a new Event Grid Partner Configuration to be created.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName The name of the Resource Group where the Event Grid Partner Configuration should exist. Changing this forces a new Event Grid Partner Configuration to be created.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        /**
         * @param tags A mapping of tags which should be assigned to the Event Grid Partner Configuration.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags A mapping of tags which should be assigned to the Event Grid Partner Configuration.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public PartnerConfigurationArgs build() {
            if ($.resourceGroupName == null) {
                throw new MissingRequiredPropertyException("PartnerConfigurationArgs", "resourceGroupName");
            }
            return $;
        }
    }

}
