// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.frontdoor;

import com.pulumi.azure.frontdoor.inputs.CustomHttpsConfigurationCustomHttpsConfigurationArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CustomHttpsConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final CustomHttpsConfigurationArgs Empty = new CustomHttpsConfigurationArgs();

    /**
     * A `custom_https_configuration` block as defined above.
     * 
     */
    @Import(name="customHttpsConfiguration")
    private @Nullable Output<CustomHttpsConfigurationCustomHttpsConfigurationArgs> customHttpsConfiguration;

    /**
     * @return A `custom_https_configuration` block as defined above.
     * 
     */
    public Optional<Output<CustomHttpsConfigurationCustomHttpsConfigurationArgs>> customHttpsConfiguration() {
        return Optional.ofNullable(this.customHttpsConfiguration);
    }

    /**
     * Should the HTTPS protocol be enabled for this custom domain associated with the Front Door?
     * 
     */
    @Import(name="customHttpsProvisioningEnabled", required=true)
    private Output<Boolean> customHttpsProvisioningEnabled;

    /**
     * @return Should the HTTPS protocol be enabled for this custom domain associated with the Front Door?
     * 
     */
    public Output<Boolean> customHttpsProvisioningEnabled() {
        return this.customHttpsProvisioningEnabled;
    }

    /**
     * The ID of the Front Door Frontend Endpoint which this configuration refers to. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="frontendEndpointId", required=true)
    private Output<String> frontendEndpointId;

    /**
     * @return The ID of the Front Door Frontend Endpoint which this configuration refers to. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> frontendEndpointId() {
        return this.frontendEndpointId;
    }

    private CustomHttpsConfigurationArgs() {}

    private CustomHttpsConfigurationArgs(CustomHttpsConfigurationArgs $) {
        this.customHttpsConfiguration = $.customHttpsConfiguration;
        this.customHttpsProvisioningEnabled = $.customHttpsProvisioningEnabled;
        this.frontendEndpointId = $.frontendEndpointId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CustomHttpsConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CustomHttpsConfigurationArgs $;

        public Builder() {
            $ = new CustomHttpsConfigurationArgs();
        }

        public Builder(CustomHttpsConfigurationArgs defaults) {
            $ = new CustomHttpsConfigurationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param customHttpsConfiguration A `custom_https_configuration` block as defined above.
         * 
         * @return builder
         * 
         */
        public Builder customHttpsConfiguration(@Nullable Output<CustomHttpsConfigurationCustomHttpsConfigurationArgs> customHttpsConfiguration) {
            $.customHttpsConfiguration = customHttpsConfiguration;
            return this;
        }

        /**
         * @param customHttpsConfiguration A `custom_https_configuration` block as defined above.
         * 
         * @return builder
         * 
         */
        public Builder customHttpsConfiguration(CustomHttpsConfigurationCustomHttpsConfigurationArgs customHttpsConfiguration) {
            return customHttpsConfiguration(Output.of(customHttpsConfiguration));
        }

        /**
         * @param customHttpsProvisioningEnabled Should the HTTPS protocol be enabled for this custom domain associated with the Front Door?
         * 
         * @return builder
         * 
         */
        public Builder customHttpsProvisioningEnabled(Output<Boolean> customHttpsProvisioningEnabled) {
            $.customHttpsProvisioningEnabled = customHttpsProvisioningEnabled;
            return this;
        }

        /**
         * @param customHttpsProvisioningEnabled Should the HTTPS protocol be enabled for this custom domain associated with the Front Door?
         * 
         * @return builder
         * 
         */
        public Builder customHttpsProvisioningEnabled(Boolean customHttpsProvisioningEnabled) {
            return customHttpsProvisioningEnabled(Output.of(customHttpsProvisioningEnabled));
        }

        /**
         * @param frontendEndpointId The ID of the Front Door Frontend Endpoint which this configuration refers to. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder frontendEndpointId(Output<String> frontendEndpointId) {
            $.frontendEndpointId = frontendEndpointId;
            return this;
        }

        /**
         * @param frontendEndpointId The ID of the Front Door Frontend Endpoint which this configuration refers to. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder frontendEndpointId(String frontendEndpointId) {
            return frontendEndpointId(Output.of(frontendEndpointId));
        }

        public CustomHttpsConfigurationArgs build() {
            if ($.customHttpsProvisioningEnabled == null) {
                throw new MissingRequiredPropertyException("CustomHttpsConfigurationArgs", "customHttpsProvisioningEnabled");
            }
            if ($.frontendEndpointId == null) {
                throw new MissingRequiredPropertyException("CustomHttpsConfigurationArgs", "frontendEndpointId");
            }
            return $;
        }
    }

}
