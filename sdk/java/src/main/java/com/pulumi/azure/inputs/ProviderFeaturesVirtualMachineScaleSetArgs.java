// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ProviderFeaturesVirtualMachineScaleSetArgs extends com.pulumi.resources.ResourceArgs {

    public static final ProviderFeaturesVirtualMachineScaleSetArgs Empty = new ProviderFeaturesVirtualMachineScaleSetArgs();

    @Import(name="forceDelete")
    private @Nullable Output<Boolean> forceDelete;

    public Optional<Output<Boolean>> forceDelete() {
        return Optional.ofNullable(this.forceDelete);
    }

    @Import(name="rollInstancesWhenRequired", required=true)
    private Output<Boolean> rollInstancesWhenRequired;

    public Output<Boolean> rollInstancesWhenRequired() {
        return this.rollInstancesWhenRequired;
    }

    @Import(name="scaleToZeroBeforeDeletion")
    private @Nullable Output<Boolean> scaleToZeroBeforeDeletion;

    public Optional<Output<Boolean>> scaleToZeroBeforeDeletion() {
        return Optional.ofNullable(this.scaleToZeroBeforeDeletion);
    }

    private ProviderFeaturesVirtualMachineScaleSetArgs() {}

    private ProviderFeaturesVirtualMachineScaleSetArgs(ProviderFeaturesVirtualMachineScaleSetArgs $) {
        this.forceDelete = $.forceDelete;
        this.rollInstancesWhenRequired = $.rollInstancesWhenRequired;
        this.scaleToZeroBeforeDeletion = $.scaleToZeroBeforeDeletion;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ProviderFeaturesVirtualMachineScaleSetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ProviderFeaturesVirtualMachineScaleSetArgs $;

        public Builder() {
            $ = new ProviderFeaturesVirtualMachineScaleSetArgs();
        }

        public Builder(ProviderFeaturesVirtualMachineScaleSetArgs defaults) {
            $ = new ProviderFeaturesVirtualMachineScaleSetArgs(Objects.requireNonNull(defaults));
        }

        public Builder forceDelete(@Nullable Output<Boolean> forceDelete) {
            $.forceDelete = forceDelete;
            return this;
        }

        public Builder forceDelete(Boolean forceDelete) {
            return forceDelete(Output.of(forceDelete));
        }

        public Builder rollInstancesWhenRequired(Output<Boolean> rollInstancesWhenRequired) {
            $.rollInstancesWhenRequired = rollInstancesWhenRequired;
            return this;
        }

        public Builder rollInstancesWhenRequired(Boolean rollInstancesWhenRequired) {
            return rollInstancesWhenRequired(Output.of(rollInstancesWhenRequired));
        }

        public Builder scaleToZeroBeforeDeletion(@Nullable Output<Boolean> scaleToZeroBeforeDeletion) {
            $.scaleToZeroBeforeDeletion = scaleToZeroBeforeDeletion;
            return this;
        }

        public Builder scaleToZeroBeforeDeletion(Boolean scaleToZeroBeforeDeletion) {
            return scaleToZeroBeforeDeletion(Output.of(scaleToZeroBeforeDeletion));
        }

        public ProviderFeaturesVirtualMachineScaleSetArgs build() {
            $.rollInstancesWhenRequired = Objects.requireNonNull($.rollInstancesWhenRequired, "expected parameter 'rollInstancesWhenRequired' to be non-null");
            return $;
        }
    }

}
