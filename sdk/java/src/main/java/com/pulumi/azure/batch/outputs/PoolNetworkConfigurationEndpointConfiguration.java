// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.batch.outputs;

import com.pulumi.azure.batch.outputs.PoolNetworkConfigurationEndpointConfigurationNetworkSecurityGroupRule;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class PoolNetworkConfigurationEndpointConfiguration {
    /**
     * @return The port number on the compute node. Acceptable values are between `1` and `65535` except for `29876`, `29877` as these are reserved. Changing this forces a new resource to be created.
     * 
     */
    private Integer backendPort;
    /**
     * @return The range of external ports that will be used to provide inbound access to the backendPort on individual compute nodes in the format of `1000-1100`. Acceptable values range between `1` and `65534` except ports from `50000` to `55000` which are reserved by the Batch service. All ranges within a pool must be distinct and cannot overlap. Values must be a range of at least `100` nodes. Changing this forces a new resource to be created.
     * 
     */
    private String frontendPortRange;
    /**
     * @return The name of the endpoint. The name must be unique within a Batch pool, can contain letters, numbers, underscores, periods, and hyphens. Names must start with a letter or number, must end with a letter, number, or underscore, and cannot exceed 77 characters. Changing this forces a new resource to be created.
     * 
     */
    private String name;
    /**
     * @return A list of `network_security_group_rules` blocks as defined below that will be applied to the endpoint. The maximum number of rules that can be specified across all the endpoints on a Batch pool is `25`. If no network security group rules are specified, a default rule will be created to allow inbound access to the specified backendPort. Set as documented in the network_security_group_rules block below. Changing this forces a new resource to be created.
     * 
     */
    private @Nullable List<PoolNetworkConfigurationEndpointConfigurationNetworkSecurityGroupRule> networkSecurityGroupRules;
    /**
     * @return The protocol of the endpoint. Acceptable values are `TCP` and `UDP`. Changing this forces a new resource to be created.
     * 
     */
    private String protocol;

    private PoolNetworkConfigurationEndpointConfiguration() {}
    /**
     * @return The port number on the compute node. Acceptable values are between `1` and `65535` except for `29876`, `29877` as these are reserved. Changing this forces a new resource to be created.
     * 
     */
    public Integer backendPort() {
        return this.backendPort;
    }
    /**
     * @return The range of external ports that will be used to provide inbound access to the backendPort on individual compute nodes in the format of `1000-1100`. Acceptable values range between `1` and `65534` except ports from `50000` to `55000` which are reserved by the Batch service. All ranges within a pool must be distinct and cannot overlap. Values must be a range of at least `100` nodes. Changing this forces a new resource to be created.
     * 
     */
    public String frontendPortRange() {
        return this.frontendPortRange;
    }
    /**
     * @return The name of the endpoint. The name must be unique within a Batch pool, can contain letters, numbers, underscores, periods, and hyphens. Names must start with a letter or number, must end with a letter, number, or underscore, and cannot exceed 77 characters. Changing this forces a new resource to be created.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return A list of `network_security_group_rules` blocks as defined below that will be applied to the endpoint. The maximum number of rules that can be specified across all the endpoints on a Batch pool is `25`. If no network security group rules are specified, a default rule will be created to allow inbound access to the specified backendPort. Set as documented in the network_security_group_rules block below. Changing this forces a new resource to be created.
     * 
     */
    public List<PoolNetworkConfigurationEndpointConfigurationNetworkSecurityGroupRule> networkSecurityGroupRules() {
        return this.networkSecurityGroupRules == null ? List.of() : this.networkSecurityGroupRules;
    }
    /**
     * @return The protocol of the endpoint. Acceptable values are `TCP` and `UDP`. Changing this forces a new resource to be created.
     * 
     */
    public String protocol() {
        return this.protocol;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(PoolNetworkConfigurationEndpointConfiguration defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer backendPort;
        private String frontendPortRange;
        private String name;
        private @Nullable List<PoolNetworkConfigurationEndpointConfigurationNetworkSecurityGroupRule> networkSecurityGroupRules;
        private String protocol;
        public Builder() {}
        public Builder(PoolNetworkConfigurationEndpointConfiguration defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.backendPort = defaults.backendPort;
    	      this.frontendPortRange = defaults.frontendPortRange;
    	      this.name = defaults.name;
    	      this.networkSecurityGroupRules = defaults.networkSecurityGroupRules;
    	      this.protocol = defaults.protocol;
        }

        @CustomType.Setter
        public Builder backendPort(Integer backendPort) {
            if (backendPort == null) {
              throw new MissingRequiredPropertyException("PoolNetworkConfigurationEndpointConfiguration", "backendPort");
            }
            this.backendPort = backendPort;
            return this;
        }
        @CustomType.Setter
        public Builder frontendPortRange(String frontendPortRange) {
            if (frontendPortRange == null) {
              throw new MissingRequiredPropertyException("PoolNetworkConfigurationEndpointConfiguration", "frontendPortRange");
            }
            this.frontendPortRange = frontendPortRange;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("PoolNetworkConfigurationEndpointConfiguration", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder networkSecurityGroupRules(@Nullable List<PoolNetworkConfigurationEndpointConfigurationNetworkSecurityGroupRule> networkSecurityGroupRules) {

            this.networkSecurityGroupRules = networkSecurityGroupRules;
            return this;
        }
        public Builder networkSecurityGroupRules(PoolNetworkConfigurationEndpointConfigurationNetworkSecurityGroupRule... networkSecurityGroupRules) {
            return networkSecurityGroupRules(List.of(networkSecurityGroupRules));
        }
        @CustomType.Setter
        public Builder protocol(String protocol) {
            if (protocol == null) {
              throw new MissingRequiredPropertyException("PoolNetworkConfigurationEndpointConfiguration", "protocol");
            }
            this.protocol = protocol;
            return this;
        }
        public PoolNetworkConfigurationEndpointConfiguration build() {
            final var _resultValue = new PoolNetworkConfigurationEndpointConfiguration();
            _resultValue.backendPort = backendPort;
            _resultValue.frontendPortRange = frontendPortRange;
            _resultValue.name = name;
            _resultValue.networkSecurityGroupRules = networkSecurityGroupRules;
            _resultValue.protocol = protocol;
            return _resultValue;
        }
    }
}
