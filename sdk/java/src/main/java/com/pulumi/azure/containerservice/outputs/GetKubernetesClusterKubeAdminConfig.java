// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.containerservice.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetKubernetesClusterKubeAdminConfig {
    /**
     * @return Base64 encoded public certificate used by clients to authenticate to the Kubernetes cluster.
     * 
     */
    private final String clientCertificate;
    /**
     * @return Base64 encoded private key used by clients to authenticate to the Kubernetes cluster.
     * 
     */
    private final String clientKey;
    /**
     * @return Base64 encoded public CA certificate used as the root of trust for the Kubernetes cluster.
     * 
     */
    private final String clusterCaCertificate;
    /**
     * @return The Kubernetes cluster server host.
     * 
     */
    private final String host;
    /**
     * @return A password or token used to authenticate to the Kubernetes cluster.
     * 
     */
    private final String password;
    /**
     * @return A username used to authenticate to the Kubernetes cluster.
     * 
     */
    private final String username;

    @CustomType.Constructor
    private GetKubernetesClusterKubeAdminConfig(
        @CustomType.Parameter("clientCertificate") String clientCertificate,
        @CustomType.Parameter("clientKey") String clientKey,
        @CustomType.Parameter("clusterCaCertificate") String clusterCaCertificate,
        @CustomType.Parameter("host") String host,
        @CustomType.Parameter("password") String password,
        @CustomType.Parameter("username") String username) {
        this.clientCertificate = clientCertificate;
        this.clientKey = clientKey;
        this.clusterCaCertificate = clusterCaCertificate;
        this.host = host;
        this.password = password;
        this.username = username;
    }

    /**
     * @return Base64 encoded public certificate used by clients to authenticate to the Kubernetes cluster.
     * 
     */
    public String clientCertificate() {
        return this.clientCertificate;
    }
    /**
     * @return Base64 encoded private key used by clients to authenticate to the Kubernetes cluster.
     * 
     */
    public String clientKey() {
        return this.clientKey;
    }
    /**
     * @return Base64 encoded public CA certificate used as the root of trust for the Kubernetes cluster.
     * 
     */
    public String clusterCaCertificate() {
        return this.clusterCaCertificate;
    }
    /**
     * @return The Kubernetes cluster server host.
     * 
     */
    public String host() {
        return this.host;
    }
    /**
     * @return A password or token used to authenticate to the Kubernetes cluster.
     * 
     */
    public String password() {
        return this.password;
    }
    /**
     * @return A username used to authenticate to the Kubernetes cluster.
     * 
     */
    public String username() {
        return this.username;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetKubernetesClusterKubeAdminConfig defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String clientCertificate;
        private String clientKey;
        private String clusterCaCertificate;
        private String host;
        private String password;
        private String username;

        public Builder() {
    	      // Empty
        }

        public Builder(GetKubernetesClusterKubeAdminConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.clientCertificate = defaults.clientCertificate;
    	      this.clientKey = defaults.clientKey;
    	      this.clusterCaCertificate = defaults.clusterCaCertificate;
    	      this.host = defaults.host;
    	      this.password = defaults.password;
    	      this.username = defaults.username;
        }

        public Builder clientCertificate(String clientCertificate) {
            this.clientCertificate = Objects.requireNonNull(clientCertificate);
            return this;
        }
        public Builder clientKey(String clientKey) {
            this.clientKey = Objects.requireNonNull(clientKey);
            return this;
        }
        public Builder clusterCaCertificate(String clusterCaCertificate) {
            this.clusterCaCertificate = Objects.requireNonNull(clusterCaCertificate);
            return this;
        }
        public Builder host(String host) {
            this.host = Objects.requireNonNull(host);
            return this;
        }
        public Builder password(String password) {
            this.password = Objects.requireNonNull(password);
            return this;
        }
        public Builder username(String username) {
            this.username = Objects.requireNonNull(username);
            return this;
        }        public GetKubernetesClusterKubeAdminConfig build() {
            return new GetKubernetesClusterKubeAdminConfig(clientCertificate, clientKey, clusterCaCertificate, host, password, username);
        }
    }
}
