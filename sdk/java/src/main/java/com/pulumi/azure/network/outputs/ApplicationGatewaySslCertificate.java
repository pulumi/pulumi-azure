// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.network.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ApplicationGatewaySslCertificate {
    /**
     * @return PFX certificate. Required if `key_vault_secret_id` is not set.
     * 
     */
    private final @Nullable String data;
    /**
     * @return The ID of the Rewrite Rule Set
     * 
     */
    private final @Nullable String id;
    /**
     * @return Secret Id of (base-64 encoded unencrypted pfx) `Secret` or `Certificate` object stored in Azure KeyVault. You need to enable soft delete for keyvault to use this feature. Required if `data` is not set.
     * 
     */
    private final @Nullable String keyVaultSecretId;
    /**
     * @return The Name of the SSL certificate that is unique within this Application Gateway
     * 
     */
    private final String name;
    /**
     * @return Password for the pfx file specified in data.  Required if `data` is set.
     * 
     */
    private final @Nullable String password;
    /**
     * @return The Public Certificate Data associated with the SSL Certificate.
     * 
     */
    private final @Nullable String publicCertData;

    @CustomType.Constructor
    private ApplicationGatewaySslCertificate(
        @CustomType.Parameter("data") @Nullable String data,
        @CustomType.Parameter("id") @Nullable String id,
        @CustomType.Parameter("keyVaultSecretId") @Nullable String keyVaultSecretId,
        @CustomType.Parameter("name") String name,
        @CustomType.Parameter("password") @Nullable String password,
        @CustomType.Parameter("publicCertData") @Nullable String publicCertData) {
        this.data = data;
        this.id = id;
        this.keyVaultSecretId = keyVaultSecretId;
        this.name = name;
        this.password = password;
        this.publicCertData = publicCertData;
    }

    /**
     * @return PFX certificate. Required if `key_vault_secret_id` is not set.
     * 
     */
    public Optional<String> data() {
        return Optional.ofNullable(this.data);
    }
    /**
     * @return The ID of the Rewrite Rule Set
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return Secret Id of (base-64 encoded unencrypted pfx) `Secret` or `Certificate` object stored in Azure KeyVault. You need to enable soft delete for keyvault to use this feature. Required if `data` is not set.
     * 
     */
    public Optional<String> keyVaultSecretId() {
        return Optional.ofNullable(this.keyVaultSecretId);
    }
    /**
     * @return The Name of the SSL certificate that is unique within this Application Gateway
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Password for the pfx file specified in data.  Required if `data` is set.
     * 
     */
    public Optional<String> password() {
        return Optional.ofNullable(this.password);
    }
    /**
     * @return The Public Certificate Data associated with the SSL Certificate.
     * 
     */
    public Optional<String> publicCertData() {
        return Optional.ofNullable(this.publicCertData);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ApplicationGatewaySslCertificate defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String data;
        private @Nullable String id;
        private @Nullable String keyVaultSecretId;
        private String name;
        private @Nullable String password;
        private @Nullable String publicCertData;

        public Builder() {
    	      // Empty
        }

        public Builder(ApplicationGatewaySslCertificate defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.data = defaults.data;
    	      this.id = defaults.id;
    	      this.keyVaultSecretId = defaults.keyVaultSecretId;
    	      this.name = defaults.name;
    	      this.password = defaults.password;
    	      this.publicCertData = defaults.publicCertData;
        }

        public Builder data(@Nullable String data) {
            this.data = data;
            return this;
        }
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        public Builder keyVaultSecretId(@Nullable String keyVaultSecretId) {
            this.keyVaultSecretId = keyVaultSecretId;
            return this;
        }
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        public Builder password(@Nullable String password) {
            this.password = password;
            return this;
        }
        public Builder publicCertData(@Nullable String publicCertData) {
            this.publicCertData = publicCertData;
            return this;
        }        public ApplicationGatewaySslCertificate build() {
            return new ApplicationGatewaySslCertificate(data, id, keyVaultSecretId, name, password, publicCertData);
        }
    }
}
