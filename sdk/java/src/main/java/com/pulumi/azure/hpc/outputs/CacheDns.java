// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.hpc.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class CacheDns {
    /**
     * @return The DNS search domain for the HPC Cache.
     * 
     */
    private @Nullable String searchDomain;
    /**
     * @return A list of DNS servers for the HPC Cache. At most three IP(s) are allowed to set.
     * 
     */
    private List<String> servers;

    private CacheDns() {}
    /**
     * @return The DNS search domain for the HPC Cache.
     * 
     */
    public Optional<String> searchDomain() {
        return Optional.ofNullable(this.searchDomain);
    }
    /**
     * @return A list of DNS servers for the HPC Cache. At most three IP(s) are allowed to set.
     * 
     */
    public List<String> servers() {
        return this.servers;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(CacheDns defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String searchDomain;
        private List<String> servers;
        public Builder() {}
        public Builder(CacheDns defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.searchDomain = defaults.searchDomain;
    	      this.servers = defaults.servers;
        }

        @CustomType.Setter
        public Builder searchDomain(@Nullable String searchDomain) {

            this.searchDomain = searchDomain;
            return this;
        }
        @CustomType.Setter
        public Builder servers(List<String> servers) {
            if (servers == null) {
              throw new MissingRequiredPropertyException("CacheDns", "servers");
            }
            this.servers = servers;
            return this;
        }
        public Builder servers(String... servers) {
            return servers(List.of(servers));
        }
        public CacheDns build() {
            final var _resultValue = new CacheDns();
            _resultValue.searchDomain = searchDomain;
            _resultValue.servers = servers;
            return _resultValue;
        }
    }
}
