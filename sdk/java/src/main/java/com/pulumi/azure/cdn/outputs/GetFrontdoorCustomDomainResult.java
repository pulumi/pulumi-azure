// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.cdn.outputs;

import com.pulumi.azure.cdn.outputs.GetFrontdoorCustomDomainTl;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetFrontdoorCustomDomainResult {
    /**
     * @return The ID of the Front Door Profile which the Front Door Custom Domain is bound to.
     * 
     */
    private String cdnFrontdoorProfileId;
    private String dnsZoneId;
    /**
     * @return The date time that the token expires.
     * 
     */
    private String expirationDate;
    /**
     * @return The host name of the domain.
     * 
     */
    private String hostName;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private String name;
    private String profileName;
    private String resourceGroupName;
    /**
     * @return A `tls` block as defined below.
     * 
     */
    private List<GetFrontdoorCustomDomainTl> tls;
    /**
     * @return The challenge used for DNS TXT record or file based validation.
     * 
     */
    private String validationToken;

    private GetFrontdoorCustomDomainResult() {}
    /**
     * @return The ID of the Front Door Profile which the Front Door Custom Domain is bound to.
     * 
     */
    public String cdnFrontdoorProfileId() {
        return this.cdnFrontdoorProfileId;
    }
    public String dnsZoneId() {
        return this.dnsZoneId;
    }
    /**
     * @return The date time that the token expires.
     * 
     */
    public String expirationDate() {
        return this.expirationDate;
    }
    /**
     * @return The host name of the domain.
     * 
     */
    public String hostName() {
        return this.hostName;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public String name() {
        return this.name;
    }
    public String profileName() {
        return this.profileName;
    }
    public String resourceGroupName() {
        return this.resourceGroupName;
    }
    /**
     * @return A `tls` block as defined below.
     * 
     */
    public List<GetFrontdoorCustomDomainTl> tls() {
        return this.tls;
    }
    /**
     * @return The challenge used for DNS TXT record or file based validation.
     * 
     */
    public String validationToken() {
        return this.validationToken;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetFrontdoorCustomDomainResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String cdnFrontdoorProfileId;
        private String dnsZoneId;
        private String expirationDate;
        private String hostName;
        private String id;
        private String name;
        private String profileName;
        private String resourceGroupName;
        private List<GetFrontdoorCustomDomainTl> tls;
        private String validationToken;
        public Builder() {}
        public Builder(GetFrontdoorCustomDomainResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.cdnFrontdoorProfileId = defaults.cdnFrontdoorProfileId;
    	      this.dnsZoneId = defaults.dnsZoneId;
    	      this.expirationDate = defaults.expirationDate;
    	      this.hostName = defaults.hostName;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.profileName = defaults.profileName;
    	      this.resourceGroupName = defaults.resourceGroupName;
    	      this.tls = defaults.tls;
    	      this.validationToken = defaults.validationToken;
        }

        @CustomType.Setter
        public Builder cdnFrontdoorProfileId(String cdnFrontdoorProfileId) {
            if (cdnFrontdoorProfileId == null) {
              throw new MissingRequiredPropertyException("GetFrontdoorCustomDomainResult", "cdnFrontdoorProfileId");
            }
            this.cdnFrontdoorProfileId = cdnFrontdoorProfileId;
            return this;
        }
        @CustomType.Setter
        public Builder dnsZoneId(String dnsZoneId) {
            if (dnsZoneId == null) {
              throw new MissingRequiredPropertyException("GetFrontdoorCustomDomainResult", "dnsZoneId");
            }
            this.dnsZoneId = dnsZoneId;
            return this;
        }
        @CustomType.Setter
        public Builder expirationDate(String expirationDate) {
            if (expirationDate == null) {
              throw new MissingRequiredPropertyException("GetFrontdoorCustomDomainResult", "expirationDate");
            }
            this.expirationDate = expirationDate;
            return this;
        }
        @CustomType.Setter
        public Builder hostName(String hostName) {
            if (hostName == null) {
              throw new MissingRequiredPropertyException("GetFrontdoorCustomDomainResult", "hostName");
            }
            this.hostName = hostName;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetFrontdoorCustomDomainResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetFrontdoorCustomDomainResult", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder profileName(String profileName) {
            if (profileName == null) {
              throw new MissingRequiredPropertyException("GetFrontdoorCustomDomainResult", "profileName");
            }
            this.profileName = profileName;
            return this;
        }
        @CustomType.Setter
        public Builder resourceGroupName(String resourceGroupName) {
            if (resourceGroupName == null) {
              throw new MissingRequiredPropertyException("GetFrontdoorCustomDomainResult", "resourceGroupName");
            }
            this.resourceGroupName = resourceGroupName;
            return this;
        }
        @CustomType.Setter
        public Builder tls(List<GetFrontdoorCustomDomainTl> tls) {
            if (tls == null) {
              throw new MissingRequiredPropertyException("GetFrontdoorCustomDomainResult", "tls");
            }
            this.tls = tls;
            return this;
        }
        public Builder tls(GetFrontdoorCustomDomainTl... tls) {
            return tls(List.of(tls));
        }
        @CustomType.Setter
        public Builder validationToken(String validationToken) {
            if (validationToken == null) {
              throw new MissingRequiredPropertyException("GetFrontdoorCustomDomainResult", "validationToken");
            }
            this.validationToken = validationToken;
            return this;
        }
        public GetFrontdoorCustomDomainResult build() {
            final var _resultValue = new GetFrontdoorCustomDomainResult();
            _resultValue.cdnFrontdoorProfileId = cdnFrontdoorProfileId;
            _resultValue.dnsZoneId = dnsZoneId;
            _resultValue.expirationDate = expirationDate;
            _resultValue.hostName = hostName;
            _resultValue.id = id;
            _resultValue.name = name;
            _resultValue.profileName = profileName;
            _resultValue.resourceGroupName = resourceGroupName;
            _resultValue.tls = tls;
            _resultValue.validationToken = validationToken;
            return _resultValue;
        }
    }
}
