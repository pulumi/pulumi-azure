// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.cosmosdb.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetRestorableDatabaseAccountsAccountRestorableLocation {
    /**
     * @return The creation time of the regional Cosmos DB Restorable Database Account.
     * 
     */
    private String creationTime;
    /**
     * @return The deletion time of the regional Cosmos DB Restorable Database Account.
     * 
     */
    private String deletionTime;
    /**
     * @return The location where the Cosmos DB Database Account.
     * 
     */
    private String location;
    /**
     * @return The instance ID of the regional Cosmos DB Restorable Database Account.
     * 
     */
    private String regionalDatabaseAccountInstanceId;

    private GetRestorableDatabaseAccountsAccountRestorableLocation() {}
    /**
     * @return The creation time of the regional Cosmos DB Restorable Database Account.
     * 
     */
    public String creationTime() {
        return this.creationTime;
    }
    /**
     * @return The deletion time of the regional Cosmos DB Restorable Database Account.
     * 
     */
    public String deletionTime() {
        return this.deletionTime;
    }
    /**
     * @return The location where the Cosmos DB Database Account.
     * 
     */
    public String location() {
        return this.location;
    }
    /**
     * @return The instance ID of the regional Cosmos DB Restorable Database Account.
     * 
     */
    public String regionalDatabaseAccountInstanceId() {
        return this.regionalDatabaseAccountInstanceId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetRestorableDatabaseAccountsAccountRestorableLocation defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String creationTime;
        private String deletionTime;
        private String location;
        private String regionalDatabaseAccountInstanceId;
        public Builder() {}
        public Builder(GetRestorableDatabaseAccountsAccountRestorableLocation defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.creationTime = defaults.creationTime;
    	      this.deletionTime = defaults.deletionTime;
    	      this.location = defaults.location;
    	      this.regionalDatabaseAccountInstanceId = defaults.regionalDatabaseAccountInstanceId;
        }

        @CustomType.Setter
        public Builder creationTime(String creationTime) {
            if (creationTime == null) {
              throw new MissingRequiredPropertyException("GetRestorableDatabaseAccountsAccountRestorableLocation", "creationTime");
            }
            this.creationTime = creationTime;
            return this;
        }
        @CustomType.Setter
        public Builder deletionTime(String deletionTime) {
            if (deletionTime == null) {
              throw new MissingRequiredPropertyException("GetRestorableDatabaseAccountsAccountRestorableLocation", "deletionTime");
            }
            this.deletionTime = deletionTime;
            return this;
        }
        @CustomType.Setter
        public Builder location(String location) {
            if (location == null) {
              throw new MissingRequiredPropertyException("GetRestorableDatabaseAccountsAccountRestorableLocation", "location");
            }
            this.location = location;
            return this;
        }
        @CustomType.Setter
        public Builder regionalDatabaseAccountInstanceId(String regionalDatabaseAccountInstanceId) {
            if (regionalDatabaseAccountInstanceId == null) {
              throw new MissingRequiredPropertyException("GetRestorableDatabaseAccountsAccountRestorableLocation", "regionalDatabaseAccountInstanceId");
            }
            this.regionalDatabaseAccountInstanceId = regionalDatabaseAccountInstanceId;
            return this;
        }
        public GetRestorableDatabaseAccountsAccountRestorableLocation build() {
            final var _resultValue = new GetRestorableDatabaseAccountsAccountRestorableLocation();
            _resultValue.creationTime = creationTime;
            _resultValue.deletionTime = deletionTime;
            _resultValue.location = location;
            _resultValue.regionalDatabaseAccountInstanceId = regionalDatabaseAccountInstanceId;
            return _resultValue;
        }
    }
}
