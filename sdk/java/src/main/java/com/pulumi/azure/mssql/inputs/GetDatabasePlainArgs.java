// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.mssql.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class GetDatabasePlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetDatabasePlainArgs Empty = new GetDatabasePlainArgs();

    /**
     * The name of the MS SQL Database.
     * 
     */
    @Import(name="name", required=true)
    private String name;

    /**
     * @return The name of the MS SQL Database.
     * 
     */
    public String name() {
        return this.name;
    }

    /**
     * The id of the MS SQL Server on which to create the database.
     * 
     */
    @Import(name="serverId", required=true)
    private String serverId;

    /**
     * @return The id of the MS SQL Server on which to create the database.
     * 
     */
    public String serverId() {
        return this.serverId;
    }

    private GetDatabasePlainArgs() {}

    private GetDatabasePlainArgs(GetDatabasePlainArgs $) {
        this.name = $.name;
        this.serverId = $.serverId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetDatabasePlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetDatabasePlainArgs $;

        public Builder() {
            $ = new GetDatabasePlainArgs();
        }

        public Builder(GetDatabasePlainArgs defaults) {
            $ = new GetDatabasePlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param name The name of the MS SQL Database.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            $.name = name;
            return this;
        }

        /**
         * @param serverId The id of the MS SQL Server on which to create the database.
         * 
         * @return builder
         * 
         */
        public Builder serverId(String serverId) {
            $.serverId = serverId;
            return this;
        }

        public GetDatabasePlainArgs build() {
            $.name = Objects.requireNonNull($.name, "expected parameter 'name' to be non-null");
            $.serverId = Objects.requireNonNull($.serverId, "expected parameter 'serverId' to be non-null");
            return $;
        }
    }

}
