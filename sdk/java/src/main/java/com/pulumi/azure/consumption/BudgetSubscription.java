// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.consumption;

import com.pulumi.azure.Utilities;
import com.pulumi.azure.consumption.BudgetSubscriptionArgs;
import com.pulumi.azure.consumption.inputs.BudgetSubscriptionState;
import com.pulumi.azure.consumption.outputs.BudgetSubscriptionFilter;
import com.pulumi.azure.consumption.outputs.BudgetSubscriptionNotification;
import com.pulumi.azure.consumption.outputs.BudgetSubscriptionTimePeriod;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Double;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Manages a Subscription Consumption Budget.
 * 
 * ## Example Usage
 * 
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.azure.core.CoreFunctions;
 * import com.pulumi.azure.core.inputs.GetSubscriptionArgs;
 * import com.pulumi.azure.core.ResourceGroup;
 * import com.pulumi.azure.core.ResourceGroupArgs;
 * import com.pulumi.azure.monitoring.ActionGroup;
 * import com.pulumi.azure.monitoring.ActionGroupArgs;
 * import com.pulumi.azure.consumption.BudgetSubscription;
 * import com.pulumi.azure.consumption.BudgetSubscriptionArgs;
 * import com.pulumi.azure.consumption.inputs.BudgetSubscriptionTimePeriodArgs;
 * import com.pulumi.azure.consumption.inputs.BudgetSubscriptionFilterArgs;
 * import com.pulumi.azure.consumption.inputs.BudgetSubscriptionNotificationArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App }{{@code
 *     public static void main(String[] args) }{{@code
 *         Pulumi.run(App::stack);
 *     }}{@code
 * 
 *     public static void stack(Context ctx) }{{@code
 *         final var current = CoreFunctions.getSubscription(GetSubscriptionArgs.builder()
 *             .build());
 * 
 *         var example = new ResourceGroup("example", ResourceGroupArgs.builder()
 *             .name("example")
 *             .location("eastus")
 *             .build());
 * 
 *         var exampleActionGroup = new ActionGroup("exampleActionGroup", ActionGroupArgs.builder()
 *             .name("example")
 *             .resourceGroupName(example.name())
 *             .shortName("example")
 *             .build());
 * 
 *         var exampleBudgetSubscription = new BudgetSubscription("exampleBudgetSubscription", BudgetSubscriptionArgs.builder()
 *             .name("example")
 *             .subscriptionId(current.id())
 *             .amount(1000.0)
 *             .timeGrain("Monthly")
 *             .timePeriod(BudgetSubscriptionTimePeriodArgs.builder()
 *                 .startDate("2022-06-01T00:00:00Z")
 *                 .endDate("2022-07-01T00:00:00Z")
 *                 .build())
 *             .filter(BudgetSubscriptionFilterArgs.builder()
 *                 .dimensions(BudgetSubscriptionFilterDimensionArgs.builder()
 *                     .name("ResourceGroupName")
 *                     .values(example.name())
 *                     .build())
 *                 .tags(BudgetSubscriptionFilterTagArgs.builder()
 *                     .name("foo")
 *                     .values(                    
 *                         "bar",
 *                         "baz")
 *                     .build())
 *                 .build())
 *             .notifications(            
 *                 BudgetSubscriptionNotificationArgs.builder()
 *                     .enabled(true)
 *                     .threshold(90)
 *                     .operator("EqualTo")
 *                     .contactEmails(                    
 *                         "foo}{@literal @}{@code example.com",
 *                         "bar}{@literal @}{@code example.com")
 *                     .contactGroups(exampleActionGroup.id())
 *                     .contactRoles("Owner")
 *                     .build(),
 *                 BudgetSubscriptionNotificationArgs.builder()
 *                     .enabled(false)
 *                     .threshold(100)
 *                     .operator("GreaterThan")
 *                     .thresholdType("Forecasted")
 *                     .contactEmails(                    
 *                         "foo}{@literal @}{@code example.com",
 *                         "bar}{@literal @}{@code example.com")
 *                     .build())
 *             .build());
 * 
 *     }}{@code
 * }}{@code
 * }
 * </pre>
 * 
 * ## API Providers
 * 
 * &lt;!-- This section is generated, changes will be overwritten --&gt;
 * This resource uses the following Azure API Providers:
 * 
 * * `Microsoft.Consumption` - 2019-10-01
 * 
 * ## Import
 * 
 * Subscription Consumption Budgets can be imported using the `resource id`, e.g.
 * 
 * ```sh
 * $ pulumi import azure:consumption/budgetSubscription:BudgetSubscription example /subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Consumption/budgets/subscription1
 * ```
 * 
 */
@ResourceType(type="azure:consumption/budgetSubscription:BudgetSubscription")
public class BudgetSubscription extends com.pulumi.resources.CustomResource {
    /**
     * The total amount of cost to track with the budget.
     * 
     */
    @Export(name="amount", refs={Double.class}, tree="[0]")
    private Output<Double> amount;

    /**
     * @return The total amount of cost to track with the budget.
     * 
     */
    public Output<Double> amount() {
        return this.amount;
    }
    /**
     * (Optional) The ETag of the Subscription Consumption Budget.
     * 
     */
    @Export(name="etag", refs={String.class}, tree="[0]")
    private Output<String> etag;

    /**
     * @return (Optional) The ETag of the Subscription Consumption Budget.
     * 
     */
    public Output<String> etag() {
        return this.etag;
    }
    /**
     * A `filter` block as defined below.
     * 
     */
    @Export(name="filter", refs={BudgetSubscriptionFilter.class}, tree="[0]")
    private Output</* @Nullable */ BudgetSubscriptionFilter> filter;

    /**
     * @return A `filter` block as defined below.
     * 
     */
    public Output<Optional<BudgetSubscriptionFilter>> filter() {
        return Codegen.optional(this.filter);
    }
    /**
     * The name which should be used for this Subscription Consumption Budget. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The name which should be used for this Subscription Consumption Budget. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * One or more `notification` blocks as defined below.
     * 
     */
    @Export(name="notifications", refs={List.class,BudgetSubscriptionNotification.class}, tree="[0,1]")
    private Output<List<BudgetSubscriptionNotification>> notifications;

    /**
     * @return One or more `notification` blocks as defined below.
     * 
     */
    public Output<List<BudgetSubscriptionNotification>> notifications() {
        return this.notifications;
    }
    /**
     * The ID of the Subscription for which to create a Consumption Budget. Changing this forces a new resource to be created.
     * 
     * &gt; **Note:** The `subscriptionId` property can accept a subscription ID e.g. `00000000-0000-0000-0000-000000000000` or the subscription resource ID e.g. `/subscriptions/00000000-0000-0000-0000-000000000000`. In version 3.0 this property will only accept the subscription resource ID.
     * 
     */
    @Export(name="subscriptionId", refs={String.class}, tree="[0]")
    private Output<String> subscriptionId;

    /**
     * @return The ID of the Subscription for which to create a Consumption Budget. Changing this forces a new resource to be created.
     * 
     * &gt; **Note:** The `subscriptionId` property can accept a subscription ID e.g. `00000000-0000-0000-0000-000000000000` or the subscription resource ID e.g. `/subscriptions/00000000-0000-0000-0000-000000000000`. In version 3.0 this property will only accept the subscription resource ID.
     * 
     */
    public Output<String> subscriptionId() {
        return this.subscriptionId;
    }
    /**
     * The time covered by a budget. Tracking of the amount will be reset based on the time grain. Must be one of `BillingAnnual`, `BillingMonth`, `BillingQuarter`, `Annually`, `Monthly` and `Quarterly`. Defaults to `Monthly`. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="timeGrain", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> timeGrain;

    /**
     * @return The time covered by a budget. Tracking of the amount will be reset based on the time grain. Must be one of `BillingAnnual`, `BillingMonth`, `BillingQuarter`, `Annually`, `Monthly` and `Quarterly`. Defaults to `Monthly`. Changing this forces a new resource to be created.
     * 
     */
    public Output<Optional<String>> timeGrain() {
        return Codegen.optional(this.timeGrain);
    }
    /**
     * A `timePeriod` block as defined below.
     * 
     */
    @Export(name="timePeriod", refs={BudgetSubscriptionTimePeriod.class}, tree="[0]")
    private Output<BudgetSubscriptionTimePeriod> timePeriod;

    /**
     * @return A `timePeriod` block as defined below.
     * 
     */
    public Output<BudgetSubscriptionTimePeriod> timePeriod() {
        return this.timePeriod;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public BudgetSubscription(java.lang.String name) {
        this(name, BudgetSubscriptionArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public BudgetSubscription(java.lang.String name, BudgetSubscriptionArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public BudgetSubscription(java.lang.String name, BudgetSubscriptionArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:consumption/budgetSubscription:BudgetSubscription", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private BudgetSubscription(java.lang.String name, Output<java.lang.String> id, @Nullable BudgetSubscriptionState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:consumption/budgetSubscription:BudgetSubscription", name, state, makeResourceOptions(options, id), false);
    }

    private static BudgetSubscriptionArgs makeArgs(BudgetSubscriptionArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? BudgetSubscriptionArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static BudgetSubscription get(java.lang.String name, Output<java.lang.String> id, @Nullable BudgetSubscriptionState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new BudgetSubscription(name, id, state, options);
    }
}
