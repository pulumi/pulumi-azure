// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.mssql;

import com.pulumi.azure.mssql.inputs.JobStepOutputTargetArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Double;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class JobStepArgs extends com.pulumi.resources.ResourceArgs {

    public static final JobStepArgs Empty = new JobStepArgs();

    /**
     * The initial retry interval in seconds. Defaults to `1`.
     * 
     */
    @Import(name="initialRetryIntervalSeconds")
    private @Nullable Output<Integer> initialRetryIntervalSeconds;

    /**
     * @return The initial retry interval in seconds. Defaults to `1`.
     * 
     */
    public Optional<Output<Integer>> initialRetryIntervalSeconds() {
        return Optional.ofNullable(this.initialRetryIntervalSeconds);
    }

    /**
     * The ID of the Elastic Job Credential to use when executing this Elastic Job Step. Omit this argument to run the step under the Job Agent&#39;s managed identity (user-assigned).
     * 
     * !&gt; **Note:** Once set, `job_credential_id` cannot be removed. Removing the credential will force a new resource to be created.
     * 
     */
    @Import(name="jobCredentialId")
    private @Nullable Output<String> jobCredentialId;

    /**
     * @return The ID of the Elastic Job Credential to use when executing this Elastic Job Step. Omit this argument to run the step under the Job Agent&#39;s managed identity (user-assigned).
     * 
     * !&gt; **Note:** Once set, `job_credential_id` cannot be removed. Removing the credential will force a new resource to be created.
     * 
     */
    public Optional<Output<String>> jobCredentialId() {
        return Optional.ofNullable(this.jobCredentialId);
    }

    /**
     * The ID of the Elastic Job. Changing this forces a new Elastic Job Step to be created.
     * 
     */
    @Import(name="jobId", required=true)
    private Output<String> jobId;

    /**
     * @return The ID of the Elastic Job. Changing this forces a new Elastic Job Step to be created.
     * 
     */
    public Output<String> jobId() {
        return this.jobId;
    }

    /**
     * The index at which to insert this Elastic Job Step into the Elastic Job.
     * 
     * &gt; **Note:** This value must be greater than or equal to 1 and less than or equal to the number of job steps in the Elastic Job.
     * 
     */
    @Import(name="jobStepIndex", required=true)
    private Output<Integer> jobStepIndex;

    /**
     * @return The index at which to insert this Elastic Job Step into the Elastic Job.
     * 
     * &gt; **Note:** This value must be greater than or equal to 1 and less than or equal to the number of job steps in the Elastic Job.
     * 
     */
    public Output<Integer> jobStepIndex() {
        return this.jobStepIndex;
    }

    /**
     * The ID of the Elastic Job Target Group.
     * 
     */
    @Import(name="jobTargetGroupId", required=true)
    private Output<String> jobTargetGroupId;

    /**
     * @return The ID of the Elastic Job Target Group.
     * 
     */
    public Output<String> jobTargetGroupId() {
        return this.jobTargetGroupId;
    }

    /**
     * The maximum retry interval in seconds. Defaults to `120`.
     * 
     * &gt; **Note:** `maximum_retry_interval_seconds` must be greater than `initial_retry_interval_seconds`.
     * 
     */
    @Import(name="maximumRetryIntervalSeconds")
    private @Nullable Output<Integer> maximumRetryIntervalSeconds;

    /**
     * @return The maximum retry interval in seconds. Defaults to `120`.
     * 
     * &gt; **Note:** `maximum_retry_interval_seconds` must be greater than `initial_retry_interval_seconds`.
     * 
     */
    public Optional<Output<Integer>> maximumRetryIntervalSeconds() {
        return Optional.ofNullable(this.maximumRetryIntervalSeconds);
    }

    /**
     * The name which should be used for this Elastic Job Step. Changing this forces a new Elastic Job Step to be created.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name which should be used for this Elastic Job Step. Changing this forces a new Elastic Job Step to be created.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * An `output_target` block as defined below.
     * 
     */
    @Import(name="outputTarget")
    private @Nullable Output<JobStepOutputTargetArgs> outputTarget;

    /**
     * @return An `output_target` block as defined below.
     * 
     */
    public Optional<Output<JobStepOutputTargetArgs>> outputTarget() {
        return Optional.ofNullable(this.outputTarget);
    }

    /**
     * The number of retry attempts. Defaults to `10`.
     * 
     */
    @Import(name="retryAttempts")
    private @Nullable Output<Integer> retryAttempts;

    /**
     * @return The number of retry attempts. Defaults to `10`.
     * 
     */
    public Optional<Output<Integer>> retryAttempts() {
        return Optional.ofNullable(this.retryAttempts);
    }

    /**
     * The multiplier for time between retries. Defaults to `2.0`.
     * 
     */
    @Import(name="retryIntervalBackoffMultiplier")
    private @Nullable Output<Double> retryIntervalBackoffMultiplier;

    /**
     * @return The multiplier for time between retries. Defaults to `2.0`.
     * 
     */
    public Optional<Output<Double>> retryIntervalBackoffMultiplier() {
        return Optional.ofNullable(this.retryIntervalBackoffMultiplier);
    }

    /**
     * The T-SQL script to be executed by this Elastic Job Step.
     * 
     * &gt; **Note:** While Azure places no restrictions on the script provided here, it is recommended to ensure the script is idempotent.
     * 
     */
    @Import(name="sqlScript", required=true)
    private Output<String> sqlScript;

    /**
     * @return The T-SQL script to be executed by this Elastic Job Step.
     * 
     * &gt; **Note:** While Azure places no restrictions on the script provided here, it is recommended to ensure the script is idempotent.
     * 
     */
    public Output<String> sqlScript() {
        return this.sqlScript;
    }

    /**
     * The execution timeout in seconds for this Elastic Job Step. Defaults to `43200`.
     * 
     */
    @Import(name="timeoutSeconds")
    private @Nullable Output<Integer> timeoutSeconds;

    /**
     * @return The execution timeout in seconds for this Elastic Job Step. Defaults to `43200`.
     * 
     */
    public Optional<Output<Integer>> timeoutSeconds() {
        return Optional.ofNullable(this.timeoutSeconds);
    }

    private JobStepArgs() {}

    private JobStepArgs(JobStepArgs $) {
        this.initialRetryIntervalSeconds = $.initialRetryIntervalSeconds;
        this.jobCredentialId = $.jobCredentialId;
        this.jobId = $.jobId;
        this.jobStepIndex = $.jobStepIndex;
        this.jobTargetGroupId = $.jobTargetGroupId;
        this.maximumRetryIntervalSeconds = $.maximumRetryIntervalSeconds;
        this.name = $.name;
        this.outputTarget = $.outputTarget;
        this.retryAttempts = $.retryAttempts;
        this.retryIntervalBackoffMultiplier = $.retryIntervalBackoffMultiplier;
        this.sqlScript = $.sqlScript;
        this.timeoutSeconds = $.timeoutSeconds;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(JobStepArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private JobStepArgs $;

        public Builder() {
            $ = new JobStepArgs();
        }

        public Builder(JobStepArgs defaults) {
            $ = new JobStepArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param initialRetryIntervalSeconds The initial retry interval in seconds. Defaults to `1`.
         * 
         * @return builder
         * 
         */
        public Builder initialRetryIntervalSeconds(@Nullable Output<Integer> initialRetryIntervalSeconds) {
            $.initialRetryIntervalSeconds = initialRetryIntervalSeconds;
            return this;
        }

        /**
         * @param initialRetryIntervalSeconds The initial retry interval in seconds. Defaults to `1`.
         * 
         * @return builder
         * 
         */
        public Builder initialRetryIntervalSeconds(Integer initialRetryIntervalSeconds) {
            return initialRetryIntervalSeconds(Output.of(initialRetryIntervalSeconds));
        }

        /**
         * @param jobCredentialId The ID of the Elastic Job Credential to use when executing this Elastic Job Step. Omit this argument to run the step under the Job Agent&#39;s managed identity (user-assigned).
         * 
         * !&gt; **Note:** Once set, `job_credential_id` cannot be removed. Removing the credential will force a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder jobCredentialId(@Nullable Output<String> jobCredentialId) {
            $.jobCredentialId = jobCredentialId;
            return this;
        }

        /**
         * @param jobCredentialId The ID of the Elastic Job Credential to use when executing this Elastic Job Step. Omit this argument to run the step under the Job Agent&#39;s managed identity (user-assigned).
         * 
         * !&gt; **Note:** Once set, `job_credential_id` cannot be removed. Removing the credential will force a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder jobCredentialId(String jobCredentialId) {
            return jobCredentialId(Output.of(jobCredentialId));
        }

        /**
         * @param jobId The ID of the Elastic Job. Changing this forces a new Elastic Job Step to be created.
         * 
         * @return builder
         * 
         */
        public Builder jobId(Output<String> jobId) {
            $.jobId = jobId;
            return this;
        }

        /**
         * @param jobId The ID of the Elastic Job. Changing this forces a new Elastic Job Step to be created.
         * 
         * @return builder
         * 
         */
        public Builder jobId(String jobId) {
            return jobId(Output.of(jobId));
        }

        /**
         * @param jobStepIndex The index at which to insert this Elastic Job Step into the Elastic Job.
         * 
         * &gt; **Note:** This value must be greater than or equal to 1 and less than or equal to the number of job steps in the Elastic Job.
         * 
         * @return builder
         * 
         */
        public Builder jobStepIndex(Output<Integer> jobStepIndex) {
            $.jobStepIndex = jobStepIndex;
            return this;
        }

        /**
         * @param jobStepIndex The index at which to insert this Elastic Job Step into the Elastic Job.
         * 
         * &gt; **Note:** This value must be greater than or equal to 1 and less than or equal to the number of job steps in the Elastic Job.
         * 
         * @return builder
         * 
         */
        public Builder jobStepIndex(Integer jobStepIndex) {
            return jobStepIndex(Output.of(jobStepIndex));
        }

        /**
         * @param jobTargetGroupId The ID of the Elastic Job Target Group.
         * 
         * @return builder
         * 
         */
        public Builder jobTargetGroupId(Output<String> jobTargetGroupId) {
            $.jobTargetGroupId = jobTargetGroupId;
            return this;
        }

        /**
         * @param jobTargetGroupId The ID of the Elastic Job Target Group.
         * 
         * @return builder
         * 
         */
        public Builder jobTargetGroupId(String jobTargetGroupId) {
            return jobTargetGroupId(Output.of(jobTargetGroupId));
        }

        /**
         * @param maximumRetryIntervalSeconds The maximum retry interval in seconds. Defaults to `120`.
         * 
         * &gt; **Note:** `maximum_retry_interval_seconds` must be greater than `initial_retry_interval_seconds`.
         * 
         * @return builder
         * 
         */
        public Builder maximumRetryIntervalSeconds(@Nullable Output<Integer> maximumRetryIntervalSeconds) {
            $.maximumRetryIntervalSeconds = maximumRetryIntervalSeconds;
            return this;
        }

        /**
         * @param maximumRetryIntervalSeconds The maximum retry interval in seconds. Defaults to `120`.
         * 
         * &gt; **Note:** `maximum_retry_interval_seconds` must be greater than `initial_retry_interval_seconds`.
         * 
         * @return builder
         * 
         */
        public Builder maximumRetryIntervalSeconds(Integer maximumRetryIntervalSeconds) {
            return maximumRetryIntervalSeconds(Output.of(maximumRetryIntervalSeconds));
        }

        /**
         * @param name The name which should be used for this Elastic Job Step. Changing this forces a new Elastic Job Step to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name which should be used for this Elastic Job Step. Changing this forces a new Elastic Job Step to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param outputTarget An `output_target` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder outputTarget(@Nullable Output<JobStepOutputTargetArgs> outputTarget) {
            $.outputTarget = outputTarget;
            return this;
        }

        /**
         * @param outputTarget An `output_target` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder outputTarget(JobStepOutputTargetArgs outputTarget) {
            return outputTarget(Output.of(outputTarget));
        }

        /**
         * @param retryAttempts The number of retry attempts. Defaults to `10`.
         * 
         * @return builder
         * 
         */
        public Builder retryAttempts(@Nullable Output<Integer> retryAttempts) {
            $.retryAttempts = retryAttempts;
            return this;
        }

        /**
         * @param retryAttempts The number of retry attempts. Defaults to `10`.
         * 
         * @return builder
         * 
         */
        public Builder retryAttempts(Integer retryAttempts) {
            return retryAttempts(Output.of(retryAttempts));
        }

        /**
         * @param retryIntervalBackoffMultiplier The multiplier for time between retries. Defaults to `2.0`.
         * 
         * @return builder
         * 
         */
        public Builder retryIntervalBackoffMultiplier(@Nullable Output<Double> retryIntervalBackoffMultiplier) {
            $.retryIntervalBackoffMultiplier = retryIntervalBackoffMultiplier;
            return this;
        }

        /**
         * @param retryIntervalBackoffMultiplier The multiplier for time between retries. Defaults to `2.0`.
         * 
         * @return builder
         * 
         */
        public Builder retryIntervalBackoffMultiplier(Double retryIntervalBackoffMultiplier) {
            return retryIntervalBackoffMultiplier(Output.of(retryIntervalBackoffMultiplier));
        }

        /**
         * @param sqlScript The T-SQL script to be executed by this Elastic Job Step.
         * 
         * &gt; **Note:** While Azure places no restrictions on the script provided here, it is recommended to ensure the script is idempotent.
         * 
         * @return builder
         * 
         */
        public Builder sqlScript(Output<String> sqlScript) {
            $.sqlScript = sqlScript;
            return this;
        }

        /**
         * @param sqlScript The T-SQL script to be executed by this Elastic Job Step.
         * 
         * &gt; **Note:** While Azure places no restrictions on the script provided here, it is recommended to ensure the script is idempotent.
         * 
         * @return builder
         * 
         */
        public Builder sqlScript(String sqlScript) {
            return sqlScript(Output.of(sqlScript));
        }

        /**
         * @param timeoutSeconds The execution timeout in seconds for this Elastic Job Step. Defaults to `43200`.
         * 
         * @return builder
         * 
         */
        public Builder timeoutSeconds(@Nullable Output<Integer> timeoutSeconds) {
            $.timeoutSeconds = timeoutSeconds;
            return this;
        }

        /**
         * @param timeoutSeconds The execution timeout in seconds for this Elastic Job Step. Defaults to `43200`.
         * 
         * @return builder
         * 
         */
        public Builder timeoutSeconds(Integer timeoutSeconds) {
            return timeoutSeconds(Output.of(timeoutSeconds));
        }

        public JobStepArgs build() {
            if ($.jobId == null) {
                throw new MissingRequiredPropertyException("JobStepArgs", "jobId");
            }
            if ($.jobStepIndex == null) {
                throw new MissingRequiredPropertyException("JobStepArgs", "jobStepIndex");
            }
            if ($.jobTargetGroupId == null) {
                throw new MissingRequiredPropertyException("JobStepArgs", "jobTargetGroupId");
            }
            if ($.sqlScript == null) {
                throw new MissingRequiredPropertyException("JobStepArgs", "sqlScript");
            }
            return $;
        }
    }

}
