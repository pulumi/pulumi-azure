// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.appservice;

import com.pulumi.azure.appservice.inputs.AppFlexConsumptionAlwaysReadyArgs;
import com.pulumi.azure.appservice.inputs.AppFlexConsumptionAuthSettingsArgs;
import com.pulumi.azure.appservice.inputs.AppFlexConsumptionAuthSettingsV2Args;
import com.pulumi.azure.appservice.inputs.AppFlexConsumptionConnectionStringArgs;
import com.pulumi.azure.appservice.inputs.AppFlexConsumptionIdentityArgs;
import com.pulumi.azure.appservice.inputs.AppFlexConsumptionSiteConfigArgs;
import com.pulumi.azure.appservice.inputs.AppFlexConsumptionStickySettingsArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AppFlexConsumptionArgs extends com.pulumi.resources.ResourceArgs {

    public static final AppFlexConsumptionArgs Empty = new AppFlexConsumptionArgs();

    /**
     * One or more `always_ready` blocks as defined below.
     * 
     */
    @Import(name="alwaysReadies")
    private @Nullable Output<List<AppFlexConsumptionAlwaysReadyArgs>> alwaysReadies;

    /**
     * @return One or more `always_ready` blocks as defined below.
     * 
     */
    public Optional<Output<List<AppFlexConsumptionAlwaysReadyArgs>>> alwaysReadies() {
        return Optional.ofNullable(this.alwaysReadies);
    }

    /**
     * A map of key-value pairs for [App Settings](https://docs.microsoft.com/en-us/azure/azure-functions/functions-app-settings) and custom values.
     * 
     */
    @Import(name="appSettings")
    private @Nullable Output<Map<String,String>> appSettings;

    /**
     * @return A map of key-value pairs for [App Settings](https://docs.microsoft.com/en-us/azure/azure-functions/functions-app-settings) and custom values.
     * 
     */
    public Optional<Output<Map<String,String>>> appSettings() {
        return Optional.ofNullable(this.appSettings);
    }

    /**
     * A `auth_settings` block as defined below.
     * 
     */
    @Import(name="authSettings")
    private @Nullable Output<AppFlexConsumptionAuthSettingsArgs> authSettings;

    /**
     * @return A `auth_settings` block as defined below.
     * 
     */
    public Optional<Output<AppFlexConsumptionAuthSettingsArgs>> authSettings() {
        return Optional.ofNullable(this.authSettings);
    }

    /**
     * An `auth_settings_v2` block as defined below.
     * 
     */
    @Import(name="authSettingsV2")
    private @Nullable Output<AppFlexConsumptionAuthSettingsV2Args> authSettingsV2;

    /**
     * @return An `auth_settings_v2` block as defined below.
     * 
     */
    public Optional<Output<AppFlexConsumptionAuthSettingsV2Args>> authSettingsV2() {
        return Optional.ofNullable(this.authSettingsV2);
    }

    /**
     * Should the function app use Client Certificates.
     * 
     */
    @Import(name="clientCertificateEnabled")
    private @Nullable Output<Boolean> clientCertificateEnabled;

    /**
     * @return Should the function app use Client Certificates.
     * 
     */
    public Optional<Output<Boolean>> clientCertificateEnabled() {
        return Optional.ofNullable(this.clientCertificateEnabled);
    }

    /**
     * Paths to exclude when using client certificates, separated by ;
     * 
     */
    @Import(name="clientCertificateExclusionPaths")
    private @Nullable Output<String> clientCertificateExclusionPaths;

    /**
     * @return Paths to exclude when using client certificates, separated by ;
     * 
     */
    public Optional<Output<String>> clientCertificateExclusionPaths() {
        return Optional.ofNullable(this.clientCertificateExclusionPaths);
    }

    /**
     * The mode of the Function App&#39;s client certificates requirement for incoming requests. Possible values are `Required`, `Optional`, and `OptionalInteractiveUser`. Defaults to `Optional`.
     * 
     */
    @Import(name="clientCertificateMode")
    private @Nullable Output<String> clientCertificateMode;

    /**
     * @return The mode of the Function App&#39;s client certificates requirement for incoming requests. Possible values are `Required`, `Optional`, and `OptionalInteractiveUser`. Defaults to `Optional`.
     * 
     */
    public Optional<Output<String>> clientCertificateMode() {
        return Optional.ofNullable(this.clientCertificateMode);
    }

    /**
     * One or more `connection_string` blocks as defined below.
     * 
     */
    @Import(name="connectionStrings")
    private @Nullable Output<List<AppFlexConsumptionConnectionStringArgs>> connectionStrings;

    /**
     * @return One or more `connection_string` blocks as defined below.
     * 
     */
    public Optional<Output<List<AppFlexConsumptionConnectionStringArgs>>> connectionStrings() {
        return Optional.ofNullable(this.connectionStrings);
    }

    /**
     * Is the Function App enabled? Defaults to `true`.
     * 
     */
    @Import(name="enabled")
    private @Nullable Output<Boolean> enabled;

    /**
     * @return Is the Function App enabled? Defaults to `true`.
     * 
     */
    public Optional<Output<Boolean>> enabled() {
        return Optional.ofNullable(this.enabled);
    }

    /**
     * The Http concurrency of the instances on which your app runs. The supported value are from `1` to `1000`.
     * 
     * &gt; **Note:** A value will be assigned by the system if `http_concurrency` is not specified.
     * 
     */
    @Import(name="httpConcurrency")
    private @Nullable Output<Integer> httpConcurrency;

    /**
     * @return The Http concurrency of the instances on which your app runs. The supported value are from `1` to `1000`.
     * 
     * &gt; **Note:** A value will be assigned by the system if `http_concurrency` is not specified.
     * 
     */
    public Optional<Output<Integer>> httpConcurrency() {
        return Optional.ofNullable(this.httpConcurrency);
    }

    /**
     * Is Https Connection enforced to the function app. Defaults to `false`
     * 
     */
    @Import(name="httpsOnly")
    private @Nullable Output<Boolean> httpsOnly;

    /**
     * @return Is Https Connection enforced to the function app. Defaults to `false`
     * 
     */
    public Optional<Output<Boolean>> httpsOnly() {
        return Optional.ofNullable(this.httpsOnly);
    }

    /**
     * A `identity` block as defined below.
     * 
     */
    @Import(name="identity")
    private @Nullable Output<AppFlexConsumptionIdentityArgs> identity;

    /**
     * @return A `identity` block as defined below.
     * 
     */
    public Optional<Output<AppFlexConsumptionIdentityArgs>> identity() {
        return Optional.ofNullable(this.identity);
    }

    /**
     * The memory size of the instances on which your app runs. Reference the Microsoft Documentation for the [currently supported values](https://learn.microsoft.com/en-us/azure/azure-functions/flex-consumption-plan#instance-memory). Defaults to `2048`.
     * 
     */
    @Import(name="instanceMemoryInMb")
    private @Nullable Output<Integer> instanceMemoryInMb;

    /**
     * @return The memory size of the instances on which your app runs. Reference the Microsoft Documentation for the [currently supported values](https://learn.microsoft.com/en-us/azure/azure-functions/flex-consumption-plan#instance-memory). Defaults to `2048`.
     * 
     */
    public Optional<Output<Integer>> instanceMemoryInMb() {
        return Optional.ofNullable(this.instanceMemoryInMb);
    }

    /**
     * The Azure Region where the Function App should exist. Changing this forces a new Function App to be created.
     * 
     */
    @Import(name="location")
    private @Nullable Output<String> location;

    /**
     * @return The Azure Region where the Function App should exist. Changing this forces a new Function App to be created.
     * 
     */
    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * The number of workers this function app can scale out to.
     * 
     */
    @Import(name="maximumInstanceCount")
    private @Nullable Output<Integer> maximumInstanceCount;

    /**
     * @return The number of workers this function app can scale out to.
     * 
     */
    public Optional<Output<Integer>> maximumInstanceCount() {
        return Optional.ofNullable(this.maximumInstanceCount);
    }

    /**
     * The name which should be used for this Function App. Changing this forces a new Function App to be created. Limit the function name to 32 characters to avoid naming collisions. For more information about [Function App naming rule](https://docs.microsoft.com/en-us/azure/azure-resource-manager/management/resource-name-rules#microsoftweb) and [Host ID Collisions](https://github.com/Azure/azure-functions-host/wiki/Host-IDs#host-id-collisions)
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name which should be used for this Function App. Changing this forces a new Function App to be created. Limit the function name to 32 characters to avoid naming collisions. For more information about [Function App naming rule](https://docs.microsoft.com/en-us/azure/azure-resource-manager/management/resource-name-rules#microsoftweb) and [Host ID Collisions](https://github.com/Azure/azure-functions-host/wiki/Host-IDs#host-id-collisions)
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Should public network access be enabled for the Function App. Defaults to `true`.
     * 
     */
    @Import(name="publicNetworkAccessEnabled")
    private @Nullable Output<Boolean> publicNetworkAccessEnabled;

    /**
     * @return Should public network access be enabled for the Function App. Defaults to `true`.
     * 
     */
    public Optional<Output<Boolean>> publicNetworkAccessEnabled() {
        return Optional.ofNullable(this.publicNetworkAccessEnabled);
    }

    /**
     * The name of the Resource Group where the Function App should exist. Changing this forces a new Linux Function App to be created.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    /**
     * @return The name of the Resource Group where the Function App should exist. Changing this forces a new Linux Function App to be created.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * The Runtime of the Linux Function App. Possible values are `node`, `dotnet-isolated`, `powershell`, `python`, `java` and `custom`.
     * 
     */
    @Import(name="runtimeName", required=true)
    private Output<String> runtimeName;

    /**
     * @return The Runtime of the Linux Function App. Possible values are `node`, `dotnet-isolated`, `powershell`, `python`, `java` and `custom`.
     * 
     */
    public Output<String> runtimeName() {
        return this.runtimeName;
    }

    /**
     * The Runtime version of the Linux Function App. The values are diff from different runtime version. The supported values are `8.0`, `9.0` for `dotnet-isolated`, `20` for `node`, `3.10`, `3.11` for `python`, `11`, `17` for `java`, `7.4` for `powershell`.
     * 
     */
    @Import(name="runtimeVersion", required=true)
    private Output<String> runtimeVersion;

    /**
     * @return The Runtime version of the Linux Function App. The values are diff from different runtime version. The supported values are `8.0`, `9.0` for `dotnet-isolated`, `20` for `node`, `3.10`, `3.11` for `python`, `11`, `17` for `java`, `7.4` for `powershell`.
     * 
     */
    public Output<String> runtimeVersion() {
        return this.runtimeVersion;
    }

    /**
     * The ID of the App Service Plan within which to create this Function App. Changing this forces a new Linux Function App to be created.
     * 
     */
    @Import(name="servicePlanId", required=true)
    private Output<String> servicePlanId;

    /**
     * @return The ID of the App Service Plan within which to create this Function App. Changing this forces a new Linux Function App to be created.
     * 
     */
    public Output<String> servicePlanId() {
        return this.servicePlanId;
    }

    /**
     * A `site_config` block as defined below.
     * 
     */
    @Import(name="siteConfig", required=true)
    private Output<AppFlexConsumptionSiteConfigArgs> siteConfig;

    /**
     * @return A `site_config` block as defined below.
     * 
     */
    public Output<AppFlexConsumptionSiteConfigArgs> siteConfig() {
        return this.siteConfig;
    }

    /**
     * A `sticky_settings` block as defined below.
     * 
     */
    @Import(name="stickySettings")
    private @Nullable Output<AppFlexConsumptionStickySettingsArgs> stickySettings;

    /**
     * @return A `sticky_settings` block as defined below.
     * 
     */
    public Optional<Output<AppFlexConsumptionStickySettingsArgs>> stickySettings() {
        return Optional.ofNullable(this.stickySettings);
    }

    /**
     * The access key which will be used to access the backend storage account for the Function App.
     * 
     * &gt; **Note:** The `storage_access_key` must be specified when `storage_authentication_type` is set to `StorageAccountConnectionString`.
     * 
     */
    @Import(name="storageAccessKey")
    private @Nullable Output<String> storageAccessKey;

    /**
     * @return The access key which will be used to access the backend storage account for the Function App.
     * 
     * &gt; **Note:** The `storage_access_key` must be specified when `storage_authentication_type` is set to `StorageAccountConnectionString`.
     * 
     */
    public Optional<Output<String>> storageAccessKey() {
        return Optional.ofNullable(this.storageAccessKey);
    }

    /**
     * The authentication type which will be used to access the backend storage account for the Function App. Possible values are `StorageAccountConnectionString`, `SystemAssignedIdentity`, and `UserAssignedIdentity`.
     * 
     */
    @Import(name="storageAuthenticationType", required=true)
    private Output<String> storageAuthenticationType;

    /**
     * @return The authentication type which will be used to access the backend storage account for the Function App. Possible values are `StorageAccountConnectionString`, `SystemAssignedIdentity`, and `UserAssignedIdentity`.
     * 
     */
    public Output<String> storageAuthenticationType() {
        return this.storageAuthenticationType;
    }

    /**
     * The backend storage container endpoint which will be used by this Function App.
     * 
     */
    @Import(name="storageContainerEndpoint", required=true)
    private Output<String> storageContainerEndpoint;

    /**
     * @return The backend storage container endpoint which will be used by this Function App.
     * 
     */
    public Output<String> storageContainerEndpoint() {
        return this.storageContainerEndpoint;
    }

    /**
     * The storage container type used for the Function App. The current supported type is `blobContainer`.
     * 
     */
    @Import(name="storageContainerType", required=true)
    private Output<String> storageContainerType;

    /**
     * @return The storage container type used for the Function App. The current supported type is `blobContainer`.
     * 
     */
    public Output<String> storageContainerType() {
        return this.storageContainerType;
    }

    /**
     * The user assigned Managed Identity to access the storage account. Conflicts with `storage_access_key`.
     * 
     * &gt; **Note:** The `storage_user_assigned_identity_id` must be specified when `storage_authentication_type` is set to `UserAssignedIdentity`.
     * 
     */
    @Import(name="storageUserAssignedIdentityId")
    private @Nullable Output<String> storageUserAssignedIdentityId;

    /**
     * @return The user assigned Managed Identity to access the storage account. Conflicts with `storage_access_key`.
     * 
     * &gt; **Note:** The `storage_user_assigned_identity_id` must be specified when `storage_authentication_type` is set to `UserAssignedIdentity`.
     * 
     */
    public Optional<Output<String>> storageUserAssignedIdentityId() {
        return Optional.ofNullable(this.storageUserAssignedIdentityId);
    }

    /**
     * A mapping of tags which should be assigned to the Linux Function App.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return A mapping of tags which should be assigned to the Linux Function App.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    @Import(name="virtualNetworkSubnetId")
    private @Nullable Output<String> virtualNetworkSubnetId;

    public Optional<Output<String>> virtualNetworkSubnetId() {
        return Optional.ofNullable(this.virtualNetworkSubnetId);
    }

    /**
     * Should the default WebDeploy Basic Authentication publishing credentials enabled. Defaults to `true`.
     * 
     * &gt; **Note:** Setting this value to true will disable the ability to use `zip_deploy_file` which currently relies on the default publishing profile.
     * 
     */
    @Import(name="webdeployPublishBasicAuthenticationEnabled")
    private @Nullable Output<Boolean> webdeployPublishBasicAuthenticationEnabled;

    /**
     * @return Should the default WebDeploy Basic Authentication publishing credentials enabled. Defaults to `true`.
     * 
     * &gt; **Note:** Setting this value to true will disable the ability to use `zip_deploy_file` which currently relies on the default publishing profile.
     * 
     */
    public Optional<Output<Boolean>> webdeployPublishBasicAuthenticationEnabled() {
        return Optional.ofNullable(this.webdeployPublishBasicAuthenticationEnabled);
    }

    /**
     * The local path and filename of the Zip packaged application to deploy to this Linux Function App.
     * 
     * &gt; **Note:** Using this value requires either `WEBSITE_RUN_FROM_PACKAGE=1` or `SCM_DO_BUILD_DURING_DEPLOYMENT=true` to be set on the App in `app_settings`. Refer to the [Azure docs](https://learn.microsoft.com/en-us/azure/azure-functions/functions-deployment-technologies) for further details.
     * 
     */
    @Import(name="zipDeployFile")
    private @Nullable Output<String> zipDeployFile;

    /**
     * @return The local path and filename of the Zip packaged application to deploy to this Linux Function App.
     * 
     * &gt; **Note:** Using this value requires either `WEBSITE_RUN_FROM_PACKAGE=1` or `SCM_DO_BUILD_DURING_DEPLOYMENT=true` to be set on the App in `app_settings`. Refer to the [Azure docs](https://learn.microsoft.com/en-us/azure/azure-functions/functions-deployment-technologies) for further details.
     * 
     */
    public Optional<Output<String>> zipDeployFile() {
        return Optional.ofNullable(this.zipDeployFile);
    }

    private AppFlexConsumptionArgs() {}

    private AppFlexConsumptionArgs(AppFlexConsumptionArgs $) {
        this.alwaysReadies = $.alwaysReadies;
        this.appSettings = $.appSettings;
        this.authSettings = $.authSettings;
        this.authSettingsV2 = $.authSettingsV2;
        this.clientCertificateEnabled = $.clientCertificateEnabled;
        this.clientCertificateExclusionPaths = $.clientCertificateExclusionPaths;
        this.clientCertificateMode = $.clientCertificateMode;
        this.connectionStrings = $.connectionStrings;
        this.enabled = $.enabled;
        this.httpConcurrency = $.httpConcurrency;
        this.httpsOnly = $.httpsOnly;
        this.identity = $.identity;
        this.instanceMemoryInMb = $.instanceMemoryInMb;
        this.location = $.location;
        this.maximumInstanceCount = $.maximumInstanceCount;
        this.name = $.name;
        this.publicNetworkAccessEnabled = $.publicNetworkAccessEnabled;
        this.resourceGroupName = $.resourceGroupName;
        this.runtimeName = $.runtimeName;
        this.runtimeVersion = $.runtimeVersion;
        this.servicePlanId = $.servicePlanId;
        this.siteConfig = $.siteConfig;
        this.stickySettings = $.stickySettings;
        this.storageAccessKey = $.storageAccessKey;
        this.storageAuthenticationType = $.storageAuthenticationType;
        this.storageContainerEndpoint = $.storageContainerEndpoint;
        this.storageContainerType = $.storageContainerType;
        this.storageUserAssignedIdentityId = $.storageUserAssignedIdentityId;
        this.tags = $.tags;
        this.virtualNetworkSubnetId = $.virtualNetworkSubnetId;
        this.webdeployPublishBasicAuthenticationEnabled = $.webdeployPublishBasicAuthenticationEnabled;
        this.zipDeployFile = $.zipDeployFile;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AppFlexConsumptionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AppFlexConsumptionArgs $;

        public Builder() {
            $ = new AppFlexConsumptionArgs();
        }

        public Builder(AppFlexConsumptionArgs defaults) {
            $ = new AppFlexConsumptionArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param alwaysReadies One or more `always_ready` blocks as defined below.
         * 
         * @return builder
         * 
         */
        public Builder alwaysReadies(@Nullable Output<List<AppFlexConsumptionAlwaysReadyArgs>> alwaysReadies) {
            $.alwaysReadies = alwaysReadies;
            return this;
        }

        /**
         * @param alwaysReadies One or more `always_ready` blocks as defined below.
         * 
         * @return builder
         * 
         */
        public Builder alwaysReadies(List<AppFlexConsumptionAlwaysReadyArgs> alwaysReadies) {
            return alwaysReadies(Output.of(alwaysReadies));
        }

        /**
         * @param alwaysReadies One or more `always_ready` blocks as defined below.
         * 
         * @return builder
         * 
         */
        public Builder alwaysReadies(AppFlexConsumptionAlwaysReadyArgs... alwaysReadies) {
            return alwaysReadies(List.of(alwaysReadies));
        }

        /**
         * @param appSettings A map of key-value pairs for [App Settings](https://docs.microsoft.com/en-us/azure/azure-functions/functions-app-settings) and custom values.
         * 
         * @return builder
         * 
         */
        public Builder appSettings(@Nullable Output<Map<String,String>> appSettings) {
            $.appSettings = appSettings;
            return this;
        }

        /**
         * @param appSettings A map of key-value pairs for [App Settings](https://docs.microsoft.com/en-us/azure/azure-functions/functions-app-settings) and custom values.
         * 
         * @return builder
         * 
         */
        public Builder appSettings(Map<String,String> appSettings) {
            return appSettings(Output.of(appSettings));
        }

        /**
         * @param authSettings A `auth_settings` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder authSettings(@Nullable Output<AppFlexConsumptionAuthSettingsArgs> authSettings) {
            $.authSettings = authSettings;
            return this;
        }

        /**
         * @param authSettings A `auth_settings` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder authSettings(AppFlexConsumptionAuthSettingsArgs authSettings) {
            return authSettings(Output.of(authSettings));
        }

        /**
         * @param authSettingsV2 An `auth_settings_v2` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder authSettingsV2(@Nullable Output<AppFlexConsumptionAuthSettingsV2Args> authSettingsV2) {
            $.authSettingsV2 = authSettingsV2;
            return this;
        }

        /**
         * @param authSettingsV2 An `auth_settings_v2` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder authSettingsV2(AppFlexConsumptionAuthSettingsV2Args authSettingsV2) {
            return authSettingsV2(Output.of(authSettingsV2));
        }

        /**
         * @param clientCertificateEnabled Should the function app use Client Certificates.
         * 
         * @return builder
         * 
         */
        public Builder clientCertificateEnabled(@Nullable Output<Boolean> clientCertificateEnabled) {
            $.clientCertificateEnabled = clientCertificateEnabled;
            return this;
        }

        /**
         * @param clientCertificateEnabled Should the function app use Client Certificates.
         * 
         * @return builder
         * 
         */
        public Builder clientCertificateEnabled(Boolean clientCertificateEnabled) {
            return clientCertificateEnabled(Output.of(clientCertificateEnabled));
        }

        /**
         * @param clientCertificateExclusionPaths Paths to exclude when using client certificates, separated by ;
         * 
         * @return builder
         * 
         */
        public Builder clientCertificateExclusionPaths(@Nullable Output<String> clientCertificateExclusionPaths) {
            $.clientCertificateExclusionPaths = clientCertificateExclusionPaths;
            return this;
        }

        /**
         * @param clientCertificateExclusionPaths Paths to exclude when using client certificates, separated by ;
         * 
         * @return builder
         * 
         */
        public Builder clientCertificateExclusionPaths(String clientCertificateExclusionPaths) {
            return clientCertificateExclusionPaths(Output.of(clientCertificateExclusionPaths));
        }

        /**
         * @param clientCertificateMode The mode of the Function App&#39;s client certificates requirement for incoming requests. Possible values are `Required`, `Optional`, and `OptionalInteractiveUser`. Defaults to `Optional`.
         * 
         * @return builder
         * 
         */
        public Builder clientCertificateMode(@Nullable Output<String> clientCertificateMode) {
            $.clientCertificateMode = clientCertificateMode;
            return this;
        }

        /**
         * @param clientCertificateMode The mode of the Function App&#39;s client certificates requirement for incoming requests. Possible values are `Required`, `Optional`, and `OptionalInteractiveUser`. Defaults to `Optional`.
         * 
         * @return builder
         * 
         */
        public Builder clientCertificateMode(String clientCertificateMode) {
            return clientCertificateMode(Output.of(clientCertificateMode));
        }

        /**
         * @param connectionStrings One or more `connection_string` blocks as defined below.
         * 
         * @return builder
         * 
         */
        public Builder connectionStrings(@Nullable Output<List<AppFlexConsumptionConnectionStringArgs>> connectionStrings) {
            $.connectionStrings = connectionStrings;
            return this;
        }

        /**
         * @param connectionStrings One or more `connection_string` blocks as defined below.
         * 
         * @return builder
         * 
         */
        public Builder connectionStrings(List<AppFlexConsumptionConnectionStringArgs> connectionStrings) {
            return connectionStrings(Output.of(connectionStrings));
        }

        /**
         * @param connectionStrings One or more `connection_string` blocks as defined below.
         * 
         * @return builder
         * 
         */
        public Builder connectionStrings(AppFlexConsumptionConnectionStringArgs... connectionStrings) {
            return connectionStrings(List.of(connectionStrings));
        }

        /**
         * @param enabled Is the Function App enabled? Defaults to `true`.
         * 
         * @return builder
         * 
         */
        public Builder enabled(@Nullable Output<Boolean> enabled) {
            $.enabled = enabled;
            return this;
        }

        /**
         * @param enabled Is the Function App enabled? Defaults to `true`.
         * 
         * @return builder
         * 
         */
        public Builder enabled(Boolean enabled) {
            return enabled(Output.of(enabled));
        }

        /**
         * @param httpConcurrency The Http concurrency of the instances on which your app runs. The supported value are from `1` to `1000`.
         * 
         * &gt; **Note:** A value will be assigned by the system if `http_concurrency` is not specified.
         * 
         * @return builder
         * 
         */
        public Builder httpConcurrency(@Nullable Output<Integer> httpConcurrency) {
            $.httpConcurrency = httpConcurrency;
            return this;
        }

        /**
         * @param httpConcurrency The Http concurrency of the instances on which your app runs. The supported value are from `1` to `1000`.
         * 
         * &gt; **Note:** A value will be assigned by the system if `http_concurrency` is not specified.
         * 
         * @return builder
         * 
         */
        public Builder httpConcurrency(Integer httpConcurrency) {
            return httpConcurrency(Output.of(httpConcurrency));
        }

        /**
         * @param httpsOnly Is Https Connection enforced to the function app. Defaults to `false`
         * 
         * @return builder
         * 
         */
        public Builder httpsOnly(@Nullable Output<Boolean> httpsOnly) {
            $.httpsOnly = httpsOnly;
            return this;
        }

        /**
         * @param httpsOnly Is Https Connection enforced to the function app. Defaults to `false`
         * 
         * @return builder
         * 
         */
        public Builder httpsOnly(Boolean httpsOnly) {
            return httpsOnly(Output.of(httpsOnly));
        }

        /**
         * @param identity A `identity` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder identity(@Nullable Output<AppFlexConsumptionIdentityArgs> identity) {
            $.identity = identity;
            return this;
        }

        /**
         * @param identity A `identity` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder identity(AppFlexConsumptionIdentityArgs identity) {
            return identity(Output.of(identity));
        }

        /**
         * @param instanceMemoryInMb The memory size of the instances on which your app runs. Reference the Microsoft Documentation for the [currently supported values](https://learn.microsoft.com/en-us/azure/azure-functions/flex-consumption-plan#instance-memory). Defaults to `2048`.
         * 
         * @return builder
         * 
         */
        public Builder instanceMemoryInMb(@Nullable Output<Integer> instanceMemoryInMb) {
            $.instanceMemoryInMb = instanceMemoryInMb;
            return this;
        }

        /**
         * @param instanceMemoryInMb The memory size of the instances on which your app runs. Reference the Microsoft Documentation for the [currently supported values](https://learn.microsoft.com/en-us/azure/azure-functions/flex-consumption-plan#instance-memory). Defaults to `2048`.
         * 
         * @return builder
         * 
         */
        public Builder instanceMemoryInMb(Integer instanceMemoryInMb) {
            return instanceMemoryInMb(Output.of(instanceMemoryInMb));
        }

        /**
         * @param location The Azure Region where the Function App should exist. Changing this forces a new Function App to be created.
         * 
         * @return builder
         * 
         */
        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location The Azure Region where the Function App should exist. Changing this forces a new Function App to be created.
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param maximumInstanceCount The number of workers this function app can scale out to.
         * 
         * @return builder
         * 
         */
        public Builder maximumInstanceCount(@Nullable Output<Integer> maximumInstanceCount) {
            $.maximumInstanceCount = maximumInstanceCount;
            return this;
        }

        /**
         * @param maximumInstanceCount The number of workers this function app can scale out to.
         * 
         * @return builder
         * 
         */
        public Builder maximumInstanceCount(Integer maximumInstanceCount) {
            return maximumInstanceCount(Output.of(maximumInstanceCount));
        }

        /**
         * @param name The name which should be used for this Function App. Changing this forces a new Function App to be created. Limit the function name to 32 characters to avoid naming collisions. For more information about [Function App naming rule](https://docs.microsoft.com/en-us/azure/azure-resource-manager/management/resource-name-rules#microsoftweb) and [Host ID Collisions](https://github.com/Azure/azure-functions-host/wiki/Host-IDs#host-id-collisions)
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name which should be used for this Function App. Changing this forces a new Function App to be created. Limit the function name to 32 characters to avoid naming collisions. For more information about [Function App naming rule](https://docs.microsoft.com/en-us/azure/azure-resource-manager/management/resource-name-rules#microsoftweb) and [Host ID Collisions](https://github.com/Azure/azure-functions-host/wiki/Host-IDs#host-id-collisions)
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param publicNetworkAccessEnabled Should public network access be enabled for the Function App. Defaults to `true`.
         * 
         * @return builder
         * 
         */
        public Builder publicNetworkAccessEnabled(@Nullable Output<Boolean> publicNetworkAccessEnabled) {
            $.publicNetworkAccessEnabled = publicNetworkAccessEnabled;
            return this;
        }

        /**
         * @param publicNetworkAccessEnabled Should public network access be enabled for the Function App. Defaults to `true`.
         * 
         * @return builder
         * 
         */
        public Builder publicNetworkAccessEnabled(Boolean publicNetworkAccessEnabled) {
            return publicNetworkAccessEnabled(Output.of(publicNetworkAccessEnabled));
        }

        /**
         * @param resourceGroupName The name of the Resource Group where the Function App should exist. Changing this forces a new Linux Function App to be created.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName The name of the Resource Group where the Function App should exist. Changing this forces a new Linux Function App to be created.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        /**
         * @param runtimeName The Runtime of the Linux Function App. Possible values are `node`, `dotnet-isolated`, `powershell`, `python`, `java` and `custom`.
         * 
         * @return builder
         * 
         */
        public Builder runtimeName(Output<String> runtimeName) {
            $.runtimeName = runtimeName;
            return this;
        }

        /**
         * @param runtimeName The Runtime of the Linux Function App. Possible values are `node`, `dotnet-isolated`, `powershell`, `python`, `java` and `custom`.
         * 
         * @return builder
         * 
         */
        public Builder runtimeName(String runtimeName) {
            return runtimeName(Output.of(runtimeName));
        }

        /**
         * @param runtimeVersion The Runtime version of the Linux Function App. The values are diff from different runtime version. The supported values are `8.0`, `9.0` for `dotnet-isolated`, `20` for `node`, `3.10`, `3.11` for `python`, `11`, `17` for `java`, `7.4` for `powershell`.
         * 
         * @return builder
         * 
         */
        public Builder runtimeVersion(Output<String> runtimeVersion) {
            $.runtimeVersion = runtimeVersion;
            return this;
        }

        /**
         * @param runtimeVersion The Runtime version of the Linux Function App. The values are diff from different runtime version. The supported values are `8.0`, `9.0` for `dotnet-isolated`, `20` for `node`, `3.10`, `3.11` for `python`, `11`, `17` for `java`, `7.4` for `powershell`.
         * 
         * @return builder
         * 
         */
        public Builder runtimeVersion(String runtimeVersion) {
            return runtimeVersion(Output.of(runtimeVersion));
        }

        /**
         * @param servicePlanId The ID of the App Service Plan within which to create this Function App. Changing this forces a new Linux Function App to be created.
         * 
         * @return builder
         * 
         */
        public Builder servicePlanId(Output<String> servicePlanId) {
            $.servicePlanId = servicePlanId;
            return this;
        }

        /**
         * @param servicePlanId The ID of the App Service Plan within which to create this Function App. Changing this forces a new Linux Function App to be created.
         * 
         * @return builder
         * 
         */
        public Builder servicePlanId(String servicePlanId) {
            return servicePlanId(Output.of(servicePlanId));
        }

        /**
         * @param siteConfig A `site_config` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder siteConfig(Output<AppFlexConsumptionSiteConfigArgs> siteConfig) {
            $.siteConfig = siteConfig;
            return this;
        }

        /**
         * @param siteConfig A `site_config` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder siteConfig(AppFlexConsumptionSiteConfigArgs siteConfig) {
            return siteConfig(Output.of(siteConfig));
        }

        /**
         * @param stickySettings A `sticky_settings` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder stickySettings(@Nullable Output<AppFlexConsumptionStickySettingsArgs> stickySettings) {
            $.stickySettings = stickySettings;
            return this;
        }

        /**
         * @param stickySettings A `sticky_settings` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder stickySettings(AppFlexConsumptionStickySettingsArgs stickySettings) {
            return stickySettings(Output.of(stickySettings));
        }

        /**
         * @param storageAccessKey The access key which will be used to access the backend storage account for the Function App.
         * 
         * &gt; **Note:** The `storage_access_key` must be specified when `storage_authentication_type` is set to `StorageAccountConnectionString`.
         * 
         * @return builder
         * 
         */
        public Builder storageAccessKey(@Nullable Output<String> storageAccessKey) {
            $.storageAccessKey = storageAccessKey;
            return this;
        }

        /**
         * @param storageAccessKey The access key which will be used to access the backend storage account for the Function App.
         * 
         * &gt; **Note:** The `storage_access_key` must be specified when `storage_authentication_type` is set to `StorageAccountConnectionString`.
         * 
         * @return builder
         * 
         */
        public Builder storageAccessKey(String storageAccessKey) {
            return storageAccessKey(Output.of(storageAccessKey));
        }

        /**
         * @param storageAuthenticationType The authentication type which will be used to access the backend storage account for the Function App. Possible values are `StorageAccountConnectionString`, `SystemAssignedIdentity`, and `UserAssignedIdentity`.
         * 
         * @return builder
         * 
         */
        public Builder storageAuthenticationType(Output<String> storageAuthenticationType) {
            $.storageAuthenticationType = storageAuthenticationType;
            return this;
        }

        /**
         * @param storageAuthenticationType The authentication type which will be used to access the backend storage account for the Function App. Possible values are `StorageAccountConnectionString`, `SystemAssignedIdentity`, and `UserAssignedIdentity`.
         * 
         * @return builder
         * 
         */
        public Builder storageAuthenticationType(String storageAuthenticationType) {
            return storageAuthenticationType(Output.of(storageAuthenticationType));
        }

        /**
         * @param storageContainerEndpoint The backend storage container endpoint which will be used by this Function App.
         * 
         * @return builder
         * 
         */
        public Builder storageContainerEndpoint(Output<String> storageContainerEndpoint) {
            $.storageContainerEndpoint = storageContainerEndpoint;
            return this;
        }

        /**
         * @param storageContainerEndpoint The backend storage container endpoint which will be used by this Function App.
         * 
         * @return builder
         * 
         */
        public Builder storageContainerEndpoint(String storageContainerEndpoint) {
            return storageContainerEndpoint(Output.of(storageContainerEndpoint));
        }

        /**
         * @param storageContainerType The storage container type used for the Function App. The current supported type is `blobContainer`.
         * 
         * @return builder
         * 
         */
        public Builder storageContainerType(Output<String> storageContainerType) {
            $.storageContainerType = storageContainerType;
            return this;
        }

        /**
         * @param storageContainerType The storage container type used for the Function App. The current supported type is `blobContainer`.
         * 
         * @return builder
         * 
         */
        public Builder storageContainerType(String storageContainerType) {
            return storageContainerType(Output.of(storageContainerType));
        }

        /**
         * @param storageUserAssignedIdentityId The user assigned Managed Identity to access the storage account. Conflicts with `storage_access_key`.
         * 
         * &gt; **Note:** The `storage_user_assigned_identity_id` must be specified when `storage_authentication_type` is set to `UserAssignedIdentity`.
         * 
         * @return builder
         * 
         */
        public Builder storageUserAssignedIdentityId(@Nullable Output<String> storageUserAssignedIdentityId) {
            $.storageUserAssignedIdentityId = storageUserAssignedIdentityId;
            return this;
        }

        /**
         * @param storageUserAssignedIdentityId The user assigned Managed Identity to access the storage account. Conflicts with `storage_access_key`.
         * 
         * &gt; **Note:** The `storage_user_assigned_identity_id` must be specified when `storage_authentication_type` is set to `UserAssignedIdentity`.
         * 
         * @return builder
         * 
         */
        public Builder storageUserAssignedIdentityId(String storageUserAssignedIdentityId) {
            return storageUserAssignedIdentityId(Output.of(storageUserAssignedIdentityId));
        }

        /**
         * @param tags A mapping of tags which should be assigned to the Linux Function App.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags A mapping of tags which should be assigned to the Linux Function App.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public Builder virtualNetworkSubnetId(@Nullable Output<String> virtualNetworkSubnetId) {
            $.virtualNetworkSubnetId = virtualNetworkSubnetId;
            return this;
        }

        public Builder virtualNetworkSubnetId(String virtualNetworkSubnetId) {
            return virtualNetworkSubnetId(Output.of(virtualNetworkSubnetId));
        }

        /**
         * @param webdeployPublishBasicAuthenticationEnabled Should the default WebDeploy Basic Authentication publishing credentials enabled. Defaults to `true`.
         * 
         * &gt; **Note:** Setting this value to true will disable the ability to use `zip_deploy_file` which currently relies on the default publishing profile.
         * 
         * @return builder
         * 
         */
        public Builder webdeployPublishBasicAuthenticationEnabled(@Nullable Output<Boolean> webdeployPublishBasicAuthenticationEnabled) {
            $.webdeployPublishBasicAuthenticationEnabled = webdeployPublishBasicAuthenticationEnabled;
            return this;
        }

        /**
         * @param webdeployPublishBasicAuthenticationEnabled Should the default WebDeploy Basic Authentication publishing credentials enabled. Defaults to `true`.
         * 
         * &gt; **Note:** Setting this value to true will disable the ability to use `zip_deploy_file` which currently relies on the default publishing profile.
         * 
         * @return builder
         * 
         */
        public Builder webdeployPublishBasicAuthenticationEnabled(Boolean webdeployPublishBasicAuthenticationEnabled) {
            return webdeployPublishBasicAuthenticationEnabled(Output.of(webdeployPublishBasicAuthenticationEnabled));
        }

        /**
         * @param zipDeployFile The local path and filename of the Zip packaged application to deploy to this Linux Function App.
         * 
         * &gt; **Note:** Using this value requires either `WEBSITE_RUN_FROM_PACKAGE=1` or `SCM_DO_BUILD_DURING_DEPLOYMENT=true` to be set on the App in `app_settings`. Refer to the [Azure docs](https://learn.microsoft.com/en-us/azure/azure-functions/functions-deployment-technologies) for further details.
         * 
         * @return builder
         * 
         */
        public Builder zipDeployFile(@Nullable Output<String> zipDeployFile) {
            $.zipDeployFile = zipDeployFile;
            return this;
        }

        /**
         * @param zipDeployFile The local path and filename of the Zip packaged application to deploy to this Linux Function App.
         * 
         * &gt; **Note:** Using this value requires either `WEBSITE_RUN_FROM_PACKAGE=1` or `SCM_DO_BUILD_DURING_DEPLOYMENT=true` to be set on the App in `app_settings`. Refer to the [Azure docs](https://learn.microsoft.com/en-us/azure/azure-functions/functions-deployment-technologies) for further details.
         * 
         * @return builder
         * 
         */
        public Builder zipDeployFile(String zipDeployFile) {
            return zipDeployFile(Output.of(zipDeployFile));
        }

        public AppFlexConsumptionArgs build() {
            if ($.resourceGroupName == null) {
                throw new MissingRequiredPropertyException("AppFlexConsumptionArgs", "resourceGroupName");
            }
            if ($.runtimeName == null) {
                throw new MissingRequiredPropertyException("AppFlexConsumptionArgs", "runtimeName");
            }
            if ($.runtimeVersion == null) {
                throw new MissingRequiredPropertyException("AppFlexConsumptionArgs", "runtimeVersion");
            }
            if ($.servicePlanId == null) {
                throw new MissingRequiredPropertyException("AppFlexConsumptionArgs", "servicePlanId");
            }
            if ($.siteConfig == null) {
                throw new MissingRequiredPropertyException("AppFlexConsumptionArgs", "siteConfig");
            }
            if ($.storageAuthenticationType == null) {
                throw new MissingRequiredPropertyException("AppFlexConsumptionArgs", "storageAuthenticationType");
            }
            if ($.storageContainerEndpoint == null) {
                throw new MissingRequiredPropertyException("AppFlexConsumptionArgs", "storageContainerEndpoint");
            }
            if ($.storageContainerType == null) {
                throw new MissingRequiredPropertyException("AppFlexConsumptionArgs", "storageContainerType");
            }
            return $;
        }
    }

}
