// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.media.inputs;

import com.pulumi.azure.media.inputs.ContentKeyPolicyPolicyOptionArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ContentKeyPolicyState extends com.pulumi.resources.ResourceArgs {

    public static final ContentKeyPolicyState Empty = new ContentKeyPolicyState();

    /**
     * A description for the Policy.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return A description for the Policy.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * The Media Services account name. Changing this forces a new Content Key Policy to be created.
     * 
     */
    @Import(name="mediaServicesAccountName")
    private @Nullable Output<String> mediaServicesAccountName;

    /**
     * @return The Media Services account name. Changing this forces a new Content Key Policy to be created.
     * 
     */
    public Optional<Output<String>> mediaServicesAccountName() {
        return Optional.ofNullable(this.mediaServicesAccountName);
    }

    /**
     * The name which should be used for this Content Key Policy. Changing this forces a new Content Key Policy to be created.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name which should be used for this Content Key Policy. Changing this forces a new Content Key Policy to be created.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * One or more `policy_option` blocks as defined below.
     * 
     */
    @Import(name="policyOptions")
    private @Nullable Output<List<ContentKeyPolicyPolicyOptionArgs>> policyOptions;

    /**
     * @return One or more `policy_option` blocks as defined below.
     * 
     */
    public Optional<Output<List<ContentKeyPolicyPolicyOptionArgs>>> policyOptions() {
        return Optional.ofNullable(this.policyOptions);
    }

    /**
     * The name of the Resource Group where the Content Key Policy should exist. Changing this forces a new Content Key Policy to be created.
     * 
     */
    @Import(name="resourceGroupName")
    private @Nullable Output<String> resourceGroupName;

    /**
     * @return The name of the Resource Group where the Content Key Policy should exist. Changing this forces a new Content Key Policy to be created.
     * 
     */
    public Optional<Output<String>> resourceGroupName() {
        return Optional.ofNullable(this.resourceGroupName);
    }

    private ContentKeyPolicyState() {}

    private ContentKeyPolicyState(ContentKeyPolicyState $) {
        this.description = $.description;
        this.mediaServicesAccountName = $.mediaServicesAccountName;
        this.name = $.name;
        this.policyOptions = $.policyOptions;
        this.resourceGroupName = $.resourceGroupName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ContentKeyPolicyState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ContentKeyPolicyState $;

        public Builder() {
            $ = new ContentKeyPolicyState();
        }

        public Builder(ContentKeyPolicyState defaults) {
            $ = new ContentKeyPolicyState(Objects.requireNonNull(defaults));
        }

        /**
         * @param description A description for the Policy.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description A description for the Policy.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param mediaServicesAccountName The Media Services account name. Changing this forces a new Content Key Policy to be created.
         * 
         * @return builder
         * 
         */
        public Builder mediaServicesAccountName(@Nullable Output<String> mediaServicesAccountName) {
            $.mediaServicesAccountName = mediaServicesAccountName;
            return this;
        }

        /**
         * @param mediaServicesAccountName The Media Services account name. Changing this forces a new Content Key Policy to be created.
         * 
         * @return builder
         * 
         */
        public Builder mediaServicesAccountName(String mediaServicesAccountName) {
            return mediaServicesAccountName(Output.of(mediaServicesAccountName));
        }

        /**
         * @param name The name which should be used for this Content Key Policy. Changing this forces a new Content Key Policy to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name which should be used for this Content Key Policy. Changing this forces a new Content Key Policy to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param policyOptions One or more `policy_option` blocks as defined below.
         * 
         * @return builder
         * 
         */
        public Builder policyOptions(@Nullable Output<List<ContentKeyPolicyPolicyOptionArgs>> policyOptions) {
            $.policyOptions = policyOptions;
            return this;
        }

        /**
         * @param policyOptions One or more `policy_option` blocks as defined below.
         * 
         * @return builder
         * 
         */
        public Builder policyOptions(List<ContentKeyPolicyPolicyOptionArgs> policyOptions) {
            return policyOptions(Output.of(policyOptions));
        }

        /**
         * @param policyOptions One or more `policy_option` blocks as defined below.
         * 
         * @return builder
         * 
         */
        public Builder policyOptions(ContentKeyPolicyPolicyOptionArgs... policyOptions) {
            return policyOptions(List.of(policyOptions));
        }

        /**
         * @param resourceGroupName The name of the Resource Group where the Content Key Policy should exist. Changing this forces a new Content Key Policy to be created.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(@Nullable Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName The name of the Resource Group where the Content Key Policy should exist. Changing this forces a new Content Key Policy to be created.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        public ContentKeyPolicyState build() {
            return $;
        }
    }

}
