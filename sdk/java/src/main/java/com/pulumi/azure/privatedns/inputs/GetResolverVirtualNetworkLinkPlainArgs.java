// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.privatedns.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class GetResolverVirtualNetworkLinkPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetResolverVirtualNetworkLinkPlainArgs Empty = new GetResolverVirtualNetworkLinkPlainArgs();

    /**
     * ID of the Private DNS Resolver DNS Forwarding Ruleset.
     * 
     */
    @Import(name="dnsForwardingRulesetId", required=true)
    private String dnsForwardingRulesetId;

    /**
     * @return ID of the Private DNS Resolver DNS Forwarding Ruleset.
     * 
     */
    public String dnsForwardingRulesetId() {
        return this.dnsForwardingRulesetId;
    }

    /**
     * Name of the Private DNS Resolver Virtual Network Link.
     * 
     */
    @Import(name="name", required=true)
    private String name;

    /**
     * @return Name of the Private DNS Resolver Virtual Network Link.
     * 
     */
    public String name() {
        return this.name;
    }

    private GetResolverVirtualNetworkLinkPlainArgs() {}

    private GetResolverVirtualNetworkLinkPlainArgs(GetResolverVirtualNetworkLinkPlainArgs $) {
        this.dnsForwardingRulesetId = $.dnsForwardingRulesetId;
        this.name = $.name;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetResolverVirtualNetworkLinkPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetResolverVirtualNetworkLinkPlainArgs $;

        public Builder() {
            $ = new GetResolverVirtualNetworkLinkPlainArgs();
        }

        public Builder(GetResolverVirtualNetworkLinkPlainArgs defaults) {
            $ = new GetResolverVirtualNetworkLinkPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param dnsForwardingRulesetId ID of the Private DNS Resolver DNS Forwarding Ruleset.
         * 
         * @return builder
         * 
         */
        public Builder dnsForwardingRulesetId(String dnsForwardingRulesetId) {
            $.dnsForwardingRulesetId = dnsForwardingRulesetId;
            return this;
        }

        /**
         * @param name Name of the Private DNS Resolver Virtual Network Link.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            $.name = name;
            return this;
        }

        public GetResolverVirtualNetworkLinkPlainArgs build() {
            if ($.dnsForwardingRulesetId == null) {
                throw new MissingRequiredPropertyException("GetResolverVirtualNetworkLinkPlainArgs", "dnsForwardingRulesetId");
            }
            if ($.name == null) {
                throw new MissingRequiredPropertyException("GetResolverVirtualNetworkLinkPlainArgs", "name");
            }
            return $;
        }
    }

}
