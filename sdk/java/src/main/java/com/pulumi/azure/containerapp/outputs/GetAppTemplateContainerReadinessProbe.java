// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.containerapp.outputs;

import com.pulumi.azure.containerapp.outputs.GetAppTemplateContainerReadinessProbeHeader;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetAppTemplateContainerReadinessProbe {
    /**
     * @return The number of consecutive failures required to consider this probe as failed. Possible values are between `1` and `10`. Defaults to `3`.
     * 
     */
    private Integer failureCountThreshold;
    /**
     * @return A `header` block as detailed below.
     * 
     */
    private List<GetAppTemplateContainerReadinessProbeHeader> headers;
    /**
     * @return The value for the host header which should be sent with this probe. If unspecified, the IP Address of the Pod is used as the host header. Setting a value for `Host` in `headers` can be used to override this for `HTTP` and `HTTPS` type probes.
     * 
     */
    private String host;
    /**
     * @return How often, in seconds, the probe should run. Possible values are between `1` and `240`. Defaults to `10`
     * 
     */
    private Integer intervalSeconds;
    /**
     * @return The path in the container at which to mount this volume.
     * 
     */
    private String path;
    /**
     * @return The port number on which to connect. Possible values are between `1` and `65535`.
     * 
     */
    private Integer port;
    /**
     * @return The number of consecutive successful responses required to consider this probe as successful. Possible values are between `1` and `10`. Defaults to `3`.
     * 
     */
    private Integer successCountThreshold;
    /**
     * @return Time in seconds after which the probe times out. Possible values are in the range `1` - `240`. Defaults to `1`.
     * 
     */
    private Integer timeout;
    /**
     * @return The transport method for the Ingress. Possible values include `auto`, `http`, and `http2`. Defaults to `auto`
     * 
     */
    private String transport;

    private GetAppTemplateContainerReadinessProbe() {}
    /**
     * @return The number of consecutive failures required to consider this probe as failed. Possible values are between `1` and `10`. Defaults to `3`.
     * 
     */
    public Integer failureCountThreshold() {
        return this.failureCountThreshold;
    }
    /**
     * @return A `header` block as detailed below.
     * 
     */
    public List<GetAppTemplateContainerReadinessProbeHeader> headers() {
        return this.headers;
    }
    /**
     * @return The value for the host header which should be sent with this probe. If unspecified, the IP Address of the Pod is used as the host header. Setting a value for `Host` in `headers` can be used to override this for `HTTP` and `HTTPS` type probes.
     * 
     */
    public String host() {
        return this.host;
    }
    /**
     * @return How often, in seconds, the probe should run. Possible values are between `1` and `240`. Defaults to `10`
     * 
     */
    public Integer intervalSeconds() {
        return this.intervalSeconds;
    }
    /**
     * @return The path in the container at which to mount this volume.
     * 
     */
    public String path() {
        return this.path;
    }
    /**
     * @return The port number on which to connect. Possible values are between `1` and `65535`.
     * 
     */
    public Integer port() {
        return this.port;
    }
    /**
     * @return The number of consecutive successful responses required to consider this probe as successful. Possible values are between `1` and `10`. Defaults to `3`.
     * 
     */
    public Integer successCountThreshold() {
        return this.successCountThreshold;
    }
    /**
     * @return Time in seconds after which the probe times out. Possible values are in the range `1` - `240`. Defaults to `1`.
     * 
     */
    public Integer timeout() {
        return this.timeout;
    }
    /**
     * @return The transport method for the Ingress. Possible values include `auto`, `http`, and `http2`. Defaults to `auto`
     * 
     */
    public String transport() {
        return this.transport;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAppTemplateContainerReadinessProbe defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer failureCountThreshold;
        private List<GetAppTemplateContainerReadinessProbeHeader> headers;
        private String host;
        private Integer intervalSeconds;
        private String path;
        private Integer port;
        private Integer successCountThreshold;
        private Integer timeout;
        private String transport;
        public Builder() {}
        public Builder(GetAppTemplateContainerReadinessProbe defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.failureCountThreshold = defaults.failureCountThreshold;
    	      this.headers = defaults.headers;
    	      this.host = defaults.host;
    	      this.intervalSeconds = defaults.intervalSeconds;
    	      this.path = defaults.path;
    	      this.port = defaults.port;
    	      this.successCountThreshold = defaults.successCountThreshold;
    	      this.timeout = defaults.timeout;
    	      this.transport = defaults.transport;
        }

        @CustomType.Setter
        public Builder failureCountThreshold(Integer failureCountThreshold) {
            if (failureCountThreshold == null) {
              throw new MissingRequiredPropertyException("GetAppTemplateContainerReadinessProbe", "failureCountThreshold");
            }
            this.failureCountThreshold = failureCountThreshold;
            return this;
        }
        @CustomType.Setter
        public Builder headers(List<GetAppTemplateContainerReadinessProbeHeader> headers) {
            if (headers == null) {
              throw new MissingRequiredPropertyException("GetAppTemplateContainerReadinessProbe", "headers");
            }
            this.headers = headers;
            return this;
        }
        public Builder headers(GetAppTemplateContainerReadinessProbeHeader... headers) {
            return headers(List.of(headers));
        }
        @CustomType.Setter
        public Builder host(String host) {
            if (host == null) {
              throw new MissingRequiredPropertyException("GetAppTemplateContainerReadinessProbe", "host");
            }
            this.host = host;
            return this;
        }
        @CustomType.Setter
        public Builder intervalSeconds(Integer intervalSeconds) {
            if (intervalSeconds == null) {
              throw new MissingRequiredPropertyException("GetAppTemplateContainerReadinessProbe", "intervalSeconds");
            }
            this.intervalSeconds = intervalSeconds;
            return this;
        }
        @CustomType.Setter
        public Builder path(String path) {
            if (path == null) {
              throw new MissingRequiredPropertyException("GetAppTemplateContainerReadinessProbe", "path");
            }
            this.path = path;
            return this;
        }
        @CustomType.Setter
        public Builder port(Integer port) {
            if (port == null) {
              throw new MissingRequiredPropertyException("GetAppTemplateContainerReadinessProbe", "port");
            }
            this.port = port;
            return this;
        }
        @CustomType.Setter
        public Builder successCountThreshold(Integer successCountThreshold) {
            if (successCountThreshold == null) {
              throw new MissingRequiredPropertyException("GetAppTemplateContainerReadinessProbe", "successCountThreshold");
            }
            this.successCountThreshold = successCountThreshold;
            return this;
        }
        @CustomType.Setter
        public Builder timeout(Integer timeout) {
            if (timeout == null) {
              throw new MissingRequiredPropertyException("GetAppTemplateContainerReadinessProbe", "timeout");
            }
            this.timeout = timeout;
            return this;
        }
        @CustomType.Setter
        public Builder transport(String transport) {
            if (transport == null) {
              throw new MissingRequiredPropertyException("GetAppTemplateContainerReadinessProbe", "transport");
            }
            this.transport = transport;
            return this;
        }
        public GetAppTemplateContainerReadinessProbe build() {
            final var _resultValue = new GetAppTemplateContainerReadinessProbe();
            _resultValue.failureCountThreshold = failureCountThreshold;
            _resultValue.headers = headers;
            _resultValue.host = host;
            _resultValue.intervalSeconds = intervalSeconds;
            _resultValue.path = path;
            _resultValue.port = port;
            _resultValue.successCountThreshold = successCountThreshold;
            _resultValue.timeout = timeout;
            _resultValue.transport = transport;
            return _resultValue;
        }
    }
}
