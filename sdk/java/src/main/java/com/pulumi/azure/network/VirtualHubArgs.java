// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.network;

import com.pulumi.azure.network.inputs.VirtualHubRouteArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class VirtualHubArgs extends com.pulumi.resources.ResourceArgs {

    public static final VirtualHubArgs Empty = new VirtualHubArgs();

    /**
     * The Address Prefix which should be used for this Virtual Hub. Changing this forces a new resource to be created. [The address prefix subnet cannot be smaller than a `/24`. Azure recommends using a `/23`](https://docs.microsoft.com/azure/virtual-wan/virtual-wan-faq#what-is-the-recommended-hub-address-space-during-hub-creation).
     * 
     */
    @Import(name="addressPrefix")
    private @Nullable Output<String> addressPrefix;

    /**
     * @return The Address Prefix which should be used for this Virtual Hub. Changing this forces a new resource to be created. [The address prefix subnet cannot be smaller than a `/24`. Azure recommends using a `/23`](https://docs.microsoft.com/azure/virtual-wan/virtual-wan-faq#what-is-the-recommended-hub-address-space-during-hub-creation).
     * 
     */
    public Optional<Output<String>> addressPrefix() {
        return Optional.ofNullable(this.addressPrefix);
    }

    /**
     * The hub routing preference. Possible values are `ExpressRoute`, `ASPath` and `VpnGateway`. Defaults to `ExpressRoute`.
     * 
     */
    @Import(name="hubRoutingPreference")
    private @Nullable Output<String> hubRoutingPreference;

    /**
     * @return The hub routing preference. Possible values are `ExpressRoute`, `ASPath` and `VpnGateway`. Defaults to `ExpressRoute`.
     * 
     */
    public Optional<Output<String>> hubRoutingPreference() {
        return Optional.ofNullable(this.hubRoutingPreference);
    }

    /**
     * Specifies the supported Azure location where the Virtual Hub should exist. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="location")
    private @Nullable Output<String> location;

    /**
     * @return Specifies the supported Azure location where the Virtual Hub should exist. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * The name of the Virtual Hub. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the Virtual Hub. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Specifies the name of the Resource Group where the Virtual Hub should exist. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    /**
     * @return Specifies the name of the Resource Group where the Virtual Hub should exist. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * One or more `route` blocks as defined below.
     * 
     */
    @Import(name="routes")
    private @Nullable Output<List<VirtualHubRouteArgs>> routes;

    /**
     * @return One or more `route` blocks as defined below.
     * 
     */
    public Optional<Output<List<VirtualHubRouteArgs>>> routes() {
        return Optional.ofNullable(this.routes);
    }

    /**
     * The SKU of the Virtual Hub. Possible values are `Basic` and `Standard`. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="sku")
    private @Nullable Output<String> sku;

    /**
     * @return The SKU of the Virtual Hub. Possible values are `Basic` and `Standard`. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> sku() {
        return Optional.ofNullable(this.sku);
    }

    /**
     * A mapping of tags to assign to the Virtual Hub.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return A mapping of tags to assign to the Virtual Hub.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * Minimum instance capacity for the scaling configuration of the Virtual Hub Router.
     * 
     */
    @Import(name="virtualRouterAutoScaleMinCapacity")
    private @Nullable Output<Integer> virtualRouterAutoScaleMinCapacity;

    /**
     * @return Minimum instance capacity for the scaling configuration of the Virtual Hub Router.
     * 
     */
    public Optional<Output<Integer>> virtualRouterAutoScaleMinCapacity() {
        return Optional.ofNullable(this.virtualRouterAutoScaleMinCapacity);
    }

    /**
     * The ID of a Virtual WAN within which the Virtual Hub should be created. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="virtualWanId")
    private @Nullable Output<String> virtualWanId;

    /**
     * @return The ID of a Virtual WAN within which the Virtual Hub should be created. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> virtualWanId() {
        return Optional.ofNullable(this.virtualWanId);
    }

    private VirtualHubArgs() {}

    private VirtualHubArgs(VirtualHubArgs $) {
        this.addressPrefix = $.addressPrefix;
        this.hubRoutingPreference = $.hubRoutingPreference;
        this.location = $.location;
        this.name = $.name;
        this.resourceGroupName = $.resourceGroupName;
        this.routes = $.routes;
        this.sku = $.sku;
        this.tags = $.tags;
        this.virtualRouterAutoScaleMinCapacity = $.virtualRouterAutoScaleMinCapacity;
        this.virtualWanId = $.virtualWanId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VirtualHubArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VirtualHubArgs $;

        public Builder() {
            $ = new VirtualHubArgs();
        }

        public Builder(VirtualHubArgs defaults) {
            $ = new VirtualHubArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param addressPrefix The Address Prefix which should be used for this Virtual Hub. Changing this forces a new resource to be created. [The address prefix subnet cannot be smaller than a `/24`. Azure recommends using a `/23`](https://docs.microsoft.com/azure/virtual-wan/virtual-wan-faq#what-is-the-recommended-hub-address-space-during-hub-creation).
         * 
         * @return builder
         * 
         */
        public Builder addressPrefix(@Nullable Output<String> addressPrefix) {
            $.addressPrefix = addressPrefix;
            return this;
        }

        /**
         * @param addressPrefix The Address Prefix which should be used for this Virtual Hub. Changing this forces a new resource to be created. [The address prefix subnet cannot be smaller than a `/24`. Azure recommends using a `/23`](https://docs.microsoft.com/azure/virtual-wan/virtual-wan-faq#what-is-the-recommended-hub-address-space-during-hub-creation).
         * 
         * @return builder
         * 
         */
        public Builder addressPrefix(String addressPrefix) {
            return addressPrefix(Output.of(addressPrefix));
        }

        /**
         * @param hubRoutingPreference The hub routing preference. Possible values are `ExpressRoute`, `ASPath` and `VpnGateway`. Defaults to `ExpressRoute`.
         * 
         * @return builder
         * 
         */
        public Builder hubRoutingPreference(@Nullable Output<String> hubRoutingPreference) {
            $.hubRoutingPreference = hubRoutingPreference;
            return this;
        }

        /**
         * @param hubRoutingPreference The hub routing preference. Possible values are `ExpressRoute`, `ASPath` and `VpnGateway`. Defaults to `ExpressRoute`.
         * 
         * @return builder
         * 
         */
        public Builder hubRoutingPreference(String hubRoutingPreference) {
            return hubRoutingPreference(Output.of(hubRoutingPreference));
        }

        /**
         * @param location Specifies the supported Azure location where the Virtual Hub should exist. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location Specifies the supported Azure location where the Virtual Hub should exist. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param name The name of the Virtual Hub. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the Virtual Hub. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param resourceGroupName Specifies the name of the Resource Group where the Virtual Hub should exist. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName Specifies the name of the Resource Group where the Virtual Hub should exist. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        /**
         * @param routes One or more `route` blocks as defined below.
         * 
         * @return builder
         * 
         */
        public Builder routes(@Nullable Output<List<VirtualHubRouteArgs>> routes) {
            $.routes = routes;
            return this;
        }

        /**
         * @param routes One or more `route` blocks as defined below.
         * 
         * @return builder
         * 
         */
        public Builder routes(List<VirtualHubRouteArgs> routes) {
            return routes(Output.of(routes));
        }

        /**
         * @param routes One or more `route` blocks as defined below.
         * 
         * @return builder
         * 
         */
        public Builder routes(VirtualHubRouteArgs... routes) {
            return routes(List.of(routes));
        }

        /**
         * @param sku The SKU of the Virtual Hub. Possible values are `Basic` and `Standard`. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder sku(@Nullable Output<String> sku) {
            $.sku = sku;
            return this;
        }

        /**
         * @param sku The SKU of the Virtual Hub. Possible values are `Basic` and `Standard`. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder sku(String sku) {
            return sku(Output.of(sku));
        }

        /**
         * @param tags A mapping of tags to assign to the Virtual Hub.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags A mapping of tags to assign to the Virtual Hub.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param virtualRouterAutoScaleMinCapacity Minimum instance capacity for the scaling configuration of the Virtual Hub Router.
         * 
         * @return builder
         * 
         */
        public Builder virtualRouterAutoScaleMinCapacity(@Nullable Output<Integer> virtualRouterAutoScaleMinCapacity) {
            $.virtualRouterAutoScaleMinCapacity = virtualRouterAutoScaleMinCapacity;
            return this;
        }

        /**
         * @param virtualRouterAutoScaleMinCapacity Minimum instance capacity for the scaling configuration of the Virtual Hub Router.
         * 
         * @return builder
         * 
         */
        public Builder virtualRouterAutoScaleMinCapacity(Integer virtualRouterAutoScaleMinCapacity) {
            return virtualRouterAutoScaleMinCapacity(Output.of(virtualRouterAutoScaleMinCapacity));
        }

        /**
         * @param virtualWanId The ID of a Virtual WAN within which the Virtual Hub should be created. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder virtualWanId(@Nullable Output<String> virtualWanId) {
            $.virtualWanId = virtualWanId;
            return this;
        }

        /**
         * @param virtualWanId The ID of a Virtual WAN within which the Virtual Hub should be created. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder virtualWanId(String virtualWanId) {
            return virtualWanId(Output.of(virtualWanId));
        }

        public VirtualHubArgs build() {
            if ($.resourceGroupName == null) {
                throw new MissingRequiredPropertyException("VirtualHubArgs", "resourceGroupName");
            }
            return $;
        }
    }

}
