// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.eventgrid.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class PartnerConfigurationPartnerAuthorization {
    /**
     * @return Expiration time of the partner authorization. Value should be in RFC 3339 format in UTC time zone, for example: &#34;2025-02-04T00:00:00Z&#34;.
     * 
     * &gt; **Note:** If the time from `authorization_expiration_time_in_utc` expires, any request from this partner to create, update or delete resources in the subscriber&#39;s context will fail. If not specified, the authorization will expire after `default_maximum_expiration_time_in_days`.
     * 
     */
    private @Nullable String authorizationExpirationTimeInUtc;
    /**
     * @return The partner name.
     * 
     */
    private String partnerName;
    /**
     * @return The immutable id of the corresponding partner registration.
     * 
     */
    private String partnerRegistrationId;

    private PartnerConfigurationPartnerAuthorization() {}
    /**
     * @return Expiration time of the partner authorization. Value should be in RFC 3339 format in UTC time zone, for example: &#34;2025-02-04T00:00:00Z&#34;.
     * 
     * &gt; **Note:** If the time from `authorization_expiration_time_in_utc` expires, any request from this partner to create, update or delete resources in the subscriber&#39;s context will fail. If not specified, the authorization will expire after `default_maximum_expiration_time_in_days`.
     * 
     */
    public Optional<String> authorizationExpirationTimeInUtc() {
        return Optional.ofNullable(this.authorizationExpirationTimeInUtc);
    }
    /**
     * @return The partner name.
     * 
     */
    public String partnerName() {
        return this.partnerName;
    }
    /**
     * @return The immutable id of the corresponding partner registration.
     * 
     */
    public String partnerRegistrationId() {
        return this.partnerRegistrationId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(PartnerConfigurationPartnerAuthorization defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String authorizationExpirationTimeInUtc;
        private String partnerName;
        private String partnerRegistrationId;
        public Builder() {}
        public Builder(PartnerConfigurationPartnerAuthorization defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.authorizationExpirationTimeInUtc = defaults.authorizationExpirationTimeInUtc;
    	      this.partnerName = defaults.partnerName;
    	      this.partnerRegistrationId = defaults.partnerRegistrationId;
        }

        @CustomType.Setter
        public Builder authorizationExpirationTimeInUtc(@Nullable String authorizationExpirationTimeInUtc) {

            this.authorizationExpirationTimeInUtc = authorizationExpirationTimeInUtc;
            return this;
        }
        @CustomType.Setter
        public Builder partnerName(String partnerName) {
            if (partnerName == null) {
              throw new MissingRequiredPropertyException("PartnerConfigurationPartnerAuthorization", "partnerName");
            }
            this.partnerName = partnerName;
            return this;
        }
        @CustomType.Setter
        public Builder partnerRegistrationId(String partnerRegistrationId) {
            if (partnerRegistrationId == null) {
              throw new MissingRequiredPropertyException("PartnerConfigurationPartnerAuthorization", "partnerRegistrationId");
            }
            this.partnerRegistrationId = partnerRegistrationId;
            return this;
        }
        public PartnerConfigurationPartnerAuthorization build() {
            final var _resultValue = new PartnerConfigurationPartnerAuthorization();
            _resultValue.authorizationExpirationTimeInUtc = authorizationExpirationTimeInUtc;
            _resultValue.partnerName = partnerName;
            _resultValue.partnerRegistrationId = partnerRegistrationId;
            return _resultValue;
        }
    }
}
