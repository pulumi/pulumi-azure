// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.storage.inputs;

import com.pulumi.azure.storage.inputs.GetShareAcl;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetSharePlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetSharePlainArgs Empty = new GetSharePlainArgs();

    /**
     * One or more acl blocks as defined below.
     * 
     */
    @Import(name="acls")
    private @Nullable List<GetShareAcl> acls;

    /**
     * @return One or more acl blocks as defined below.
     * 
     */
    public Optional<List<GetShareAcl>> acls() {
        return Optional.ofNullable(this.acls);
    }

    /**
     * A map of custom file share metadata.
     * 
     */
    @Import(name="metadata")
    private @Nullable Map<String,String> metadata;

    /**
     * @return A map of custom file share metadata.
     * 
     */
    public Optional<Map<String,String>> metadata() {
        return Optional.ofNullable(this.metadata);
    }

    /**
     * The name of the share.
     * 
     */
    @Import(name="name", required=true)
    private String name;

    /**
     * @return The name of the share.
     * 
     */
    public String name() {
        return this.name;
    }

    /**
     * The name of the storage account.
     * 
     */
    @Import(name="storageAccountName", required=true)
    private String storageAccountName;

    /**
     * @return The name of the storage account.
     * 
     */
    public String storageAccountName() {
        return this.storageAccountName;
    }

    private GetSharePlainArgs() {}

    private GetSharePlainArgs(GetSharePlainArgs $) {
        this.acls = $.acls;
        this.metadata = $.metadata;
        this.name = $.name;
        this.storageAccountName = $.storageAccountName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetSharePlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetSharePlainArgs $;

        public Builder() {
            $ = new GetSharePlainArgs();
        }

        public Builder(GetSharePlainArgs defaults) {
            $ = new GetSharePlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param acls One or more acl blocks as defined below.
         * 
         * @return builder
         * 
         */
        public Builder acls(@Nullable List<GetShareAcl> acls) {
            $.acls = acls;
            return this;
        }

        /**
         * @param acls One or more acl blocks as defined below.
         * 
         * @return builder
         * 
         */
        public Builder acls(GetShareAcl... acls) {
            return acls(List.of(acls));
        }

        /**
         * @param metadata A map of custom file share metadata.
         * 
         * @return builder
         * 
         */
        public Builder metadata(@Nullable Map<String,String> metadata) {
            $.metadata = metadata;
            return this;
        }

        /**
         * @param name The name of the share.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            $.name = name;
            return this;
        }

        /**
         * @param storageAccountName The name of the storage account.
         * 
         * @return builder
         * 
         */
        public Builder storageAccountName(String storageAccountName) {
            $.storageAccountName = storageAccountName;
            return this;
        }

        public GetSharePlainArgs build() {
            if ($.name == null) {
                throw new MissingRequiredPropertyException("GetSharePlainArgs", "name");
            }
            if ($.storageAccountName == null) {
                throw new MissingRequiredPropertyException("GetSharePlainArgs", "storageAccountName");
            }
            return $;
        }
    }

}
