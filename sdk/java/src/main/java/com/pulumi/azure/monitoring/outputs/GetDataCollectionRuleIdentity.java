// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.monitoring.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetDataCollectionRuleIdentity {
    /**
     * @return A list of User Assigned Managed Identity IDs to be assigned to this Data Collection Rule. Currently, up to 1 identity is supported.
     * 
     */
    private List<String> identityIds;
    /**
     * @return The Principal ID associated with this Managed Service Identity.
     * 
     */
    private String principalId;
    /**
     * @return The Tenant ID associated with this Managed Service Identity.
     * 
     */
    private String tenantId;
    /**
     * @return cSpecifies the type of Managed Service Identity that should be configured on this Data Collection Rule. Possible values are `SystemAssigned` and `UserAssigned`.
     * 
     */
    private String type;

    private GetDataCollectionRuleIdentity() {}
    /**
     * @return A list of User Assigned Managed Identity IDs to be assigned to this Data Collection Rule. Currently, up to 1 identity is supported.
     * 
     */
    public List<String> identityIds() {
        return this.identityIds;
    }
    /**
     * @return The Principal ID associated with this Managed Service Identity.
     * 
     */
    public String principalId() {
        return this.principalId;
    }
    /**
     * @return The Tenant ID associated with this Managed Service Identity.
     * 
     */
    public String tenantId() {
        return this.tenantId;
    }
    /**
     * @return cSpecifies the type of Managed Service Identity that should be configured on this Data Collection Rule. Possible values are `SystemAssigned` and `UserAssigned`.
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDataCollectionRuleIdentity defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<String> identityIds;
        private String principalId;
        private String tenantId;
        private String type;
        public Builder() {}
        public Builder(GetDataCollectionRuleIdentity defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.identityIds = defaults.identityIds;
    	      this.principalId = defaults.principalId;
    	      this.tenantId = defaults.tenantId;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder identityIds(List<String> identityIds) {
            if (identityIds == null) {
              throw new MissingRequiredPropertyException("GetDataCollectionRuleIdentity", "identityIds");
            }
            this.identityIds = identityIds;
            return this;
        }
        public Builder identityIds(String... identityIds) {
            return identityIds(List.of(identityIds));
        }
        @CustomType.Setter
        public Builder principalId(String principalId) {
            if (principalId == null) {
              throw new MissingRequiredPropertyException("GetDataCollectionRuleIdentity", "principalId");
            }
            this.principalId = principalId;
            return this;
        }
        @CustomType.Setter
        public Builder tenantId(String tenantId) {
            if (tenantId == null) {
              throw new MissingRequiredPropertyException("GetDataCollectionRuleIdentity", "tenantId");
            }
            this.tenantId = tenantId;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            if (type == null) {
              throw new MissingRequiredPropertyException("GetDataCollectionRuleIdentity", "type");
            }
            this.type = type;
            return this;
        }
        public GetDataCollectionRuleIdentity build() {
            final var _resultValue = new GetDataCollectionRuleIdentity();
            _resultValue.identityIds = identityIds;
            _resultValue.principalId = principalId;
            _resultValue.tenantId = tenantId;
            _resultValue.type = type;
            return _resultValue;
        }
    }
}
