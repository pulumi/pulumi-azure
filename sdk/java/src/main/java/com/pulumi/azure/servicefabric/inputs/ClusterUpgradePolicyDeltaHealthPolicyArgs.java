// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.servicefabric.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ClusterUpgradePolicyDeltaHealthPolicyArgs extends com.pulumi.resources.ResourceArgs {

    public static final ClusterUpgradePolicyDeltaHealthPolicyArgs Empty = new ClusterUpgradePolicyDeltaHealthPolicyArgs();

    /**
     * Specifies the maximum tolerated percentage of delta unhealthy applications that can have aggregated health states of error. If the current unhealthy applications do not respect the percentage relative to the state at the beginning of the upgrade, the cluster is unhealthy. Defaults to `0`.
     * 
     */
    @Import(name="maxDeltaUnhealthyApplicationsPercent")
    private @Nullable Output<Integer> maxDeltaUnhealthyApplicationsPercent;

    /**
     * @return Specifies the maximum tolerated percentage of delta unhealthy applications that can have aggregated health states of error. If the current unhealthy applications do not respect the percentage relative to the state at the beginning of the upgrade, the cluster is unhealthy. Defaults to `0`.
     * 
     */
    public Optional<Output<Integer>> maxDeltaUnhealthyApplicationsPercent() {
        return Optional.ofNullable(this.maxDeltaUnhealthyApplicationsPercent);
    }

    /**
     * Specifies the maximum tolerated percentage of delta unhealthy nodes that can have aggregated health states of error. If the current unhealthy nodes do not respect the percentage relative to the state at the beginning of the upgrade, the cluster is unhealthy. Defaults to `0`.
     * 
     */
    @Import(name="maxDeltaUnhealthyNodesPercent")
    private @Nullable Output<Integer> maxDeltaUnhealthyNodesPercent;

    /**
     * @return Specifies the maximum tolerated percentage of delta unhealthy nodes that can have aggregated health states of error. If the current unhealthy nodes do not respect the percentage relative to the state at the beginning of the upgrade, the cluster is unhealthy. Defaults to `0`.
     * 
     */
    public Optional<Output<Integer>> maxDeltaUnhealthyNodesPercent() {
        return Optional.ofNullable(this.maxDeltaUnhealthyNodesPercent);
    }

    /**
     * Specifies the maximum tolerated percentage of upgrade domain delta unhealthy nodes that can have aggregated health state of error. If there is any upgrade domain where the current unhealthy nodes do not respect the percentage relative to the state at the beginning of the upgrade, the cluster is unhealthy. Defaults to `0`.
     * 
     */
    @Import(name="maxUpgradeDomainDeltaUnhealthyNodesPercent")
    private @Nullable Output<Integer> maxUpgradeDomainDeltaUnhealthyNodesPercent;

    /**
     * @return Specifies the maximum tolerated percentage of upgrade domain delta unhealthy nodes that can have aggregated health state of error. If there is any upgrade domain where the current unhealthy nodes do not respect the percentage relative to the state at the beginning of the upgrade, the cluster is unhealthy. Defaults to `0`.
     * 
     */
    public Optional<Output<Integer>> maxUpgradeDomainDeltaUnhealthyNodesPercent() {
        return Optional.ofNullable(this.maxUpgradeDomainDeltaUnhealthyNodesPercent);
    }

    private ClusterUpgradePolicyDeltaHealthPolicyArgs() {}

    private ClusterUpgradePolicyDeltaHealthPolicyArgs(ClusterUpgradePolicyDeltaHealthPolicyArgs $) {
        this.maxDeltaUnhealthyApplicationsPercent = $.maxDeltaUnhealthyApplicationsPercent;
        this.maxDeltaUnhealthyNodesPercent = $.maxDeltaUnhealthyNodesPercent;
        this.maxUpgradeDomainDeltaUnhealthyNodesPercent = $.maxUpgradeDomainDeltaUnhealthyNodesPercent;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ClusterUpgradePolicyDeltaHealthPolicyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ClusterUpgradePolicyDeltaHealthPolicyArgs $;

        public Builder() {
            $ = new ClusterUpgradePolicyDeltaHealthPolicyArgs();
        }

        public Builder(ClusterUpgradePolicyDeltaHealthPolicyArgs defaults) {
            $ = new ClusterUpgradePolicyDeltaHealthPolicyArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param maxDeltaUnhealthyApplicationsPercent Specifies the maximum tolerated percentage of delta unhealthy applications that can have aggregated health states of error. If the current unhealthy applications do not respect the percentage relative to the state at the beginning of the upgrade, the cluster is unhealthy. Defaults to `0`.
         * 
         * @return builder
         * 
         */
        public Builder maxDeltaUnhealthyApplicationsPercent(@Nullable Output<Integer> maxDeltaUnhealthyApplicationsPercent) {
            $.maxDeltaUnhealthyApplicationsPercent = maxDeltaUnhealthyApplicationsPercent;
            return this;
        }

        /**
         * @param maxDeltaUnhealthyApplicationsPercent Specifies the maximum tolerated percentage of delta unhealthy applications that can have aggregated health states of error. If the current unhealthy applications do not respect the percentage relative to the state at the beginning of the upgrade, the cluster is unhealthy. Defaults to `0`.
         * 
         * @return builder
         * 
         */
        public Builder maxDeltaUnhealthyApplicationsPercent(Integer maxDeltaUnhealthyApplicationsPercent) {
            return maxDeltaUnhealthyApplicationsPercent(Output.of(maxDeltaUnhealthyApplicationsPercent));
        }

        /**
         * @param maxDeltaUnhealthyNodesPercent Specifies the maximum tolerated percentage of delta unhealthy nodes that can have aggregated health states of error. If the current unhealthy nodes do not respect the percentage relative to the state at the beginning of the upgrade, the cluster is unhealthy. Defaults to `0`.
         * 
         * @return builder
         * 
         */
        public Builder maxDeltaUnhealthyNodesPercent(@Nullable Output<Integer> maxDeltaUnhealthyNodesPercent) {
            $.maxDeltaUnhealthyNodesPercent = maxDeltaUnhealthyNodesPercent;
            return this;
        }

        /**
         * @param maxDeltaUnhealthyNodesPercent Specifies the maximum tolerated percentage of delta unhealthy nodes that can have aggregated health states of error. If the current unhealthy nodes do not respect the percentage relative to the state at the beginning of the upgrade, the cluster is unhealthy. Defaults to `0`.
         * 
         * @return builder
         * 
         */
        public Builder maxDeltaUnhealthyNodesPercent(Integer maxDeltaUnhealthyNodesPercent) {
            return maxDeltaUnhealthyNodesPercent(Output.of(maxDeltaUnhealthyNodesPercent));
        }

        /**
         * @param maxUpgradeDomainDeltaUnhealthyNodesPercent Specifies the maximum tolerated percentage of upgrade domain delta unhealthy nodes that can have aggregated health state of error. If there is any upgrade domain where the current unhealthy nodes do not respect the percentage relative to the state at the beginning of the upgrade, the cluster is unhealthy. Defaults to `0`.
         * 
         * @return builder
         * 
         */
        public Builder maxUpgradeDomainDeltaUnhealthyNodesPercent(@Nullable Output<Integer> maxUpgradeDomainDeltaUnhealthyNodesPercent) {
            $.maxUpgradeDomainDeltaUnhealthyNodesPercent = maxUpgradeDomainDeltaUnhealthyNodesPercent;
            return this;
        }

        /**
         * @param maxUpgradeDomainDeltaUnhealthyNodesPercent Specifies the maximum tolerated percentage of upgrade domain delta unhealthy nodes that can have aggregated health state of error. If there is any upgrade domain where the current unhealthy nodes do not respect the percentage relative to the state at the beginning of the upgrade, the cluster is unhealthy. Defaults to `0`.
         * 
         * @return builder
         * 
         */
        public Builder maxUpgradeDomainDeltaUnhealthyNodesPercent(Integer maxUpgradeDomainDeltaUnhealthyNodesPercent) {
            return maxUpgradeDomainDeltaUnhealthyNodesPercent(Output.of(maxUpgradeDomainDeltaUnhealthyNodesPercent));
        }

        public ClusterUpgradePolicyDeltaHealthPolicyArgs build() {
            return $;
        }
    }

}
