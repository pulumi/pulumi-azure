// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.servicefabric.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ClusterCertificateCommonNamesCommonName {
    /**
     * @return The common or subject name of the certificate.
     * 
     */
    private String certificateCommonName;
    /**
     * @return The Issuer Thumbprint of the Certificate.
     * 
     * &gt; **NOTE:** Certificate Issuer Thumbprint may become required in the future, `https://docs.microsoft.com/azure/service-fabric/service-fabric-create-cluster-using-cert-cn#download-and-update-a-sample-template`.
     * 
     */
    private @Nullable String certificateIssuerThumbprint;

    private ClusterCertificateCommonNamesCommonName() {}
    /**
     * @return The common or subject name of the certificate.
     * 
     */
    public String certificateCommonName() {
        return this.certificateCommonName;
    }
    /**
     * @return The Issuer Thumbprint of the Certificate.
     * 
     * &gt; **NOTE:** Certificate Issuer Thumbprint may become required in the future, `https://docs.microsoft.com/azure/service-fabric/service-fabric-create-cluster-using-cert-cn#download-and-update-a-sample-template`.
     * 
     */
    public Optional<String> certificateIssuerThumbprint() {
        return Optional.ofNullable(this.certificateIssuerThumbprint);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ClusterCertificateCommonNamesCommonName defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String certificateCommonName;
        private @Nullable String certificateIssuerThumbprint;
        public Builder() {}
        public Builder(ClusterCertificateCommonNamesCommonName defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.certificateCommonName = defaults.certificateCommonName;
    	      this.certificateIssuerThumbprint = defaults.certificateIssuerThumbprint;
        }

        @CustomType.Setter
        public Builder certificateCommonName(String certificateCommonName) {
            if (certificateCommonName == null) {
              throw new MissingRequiredPropertyException("ClusterCertificateCommonNamesCommonName", "certificateCommonName");
            }
            this.certificateCommonName = certificateCommonName;
            return this;
        }
        @CustomType.Setter
        public Builder certificateIssuerThumbprint(@Nullable String certificateIssuerThumbprint) {

            this.certificateIssuerThumbprint = certificateIssuerThumbprint;
            return this;
        }
        public ClusterCertificateCommonNamesCommonName build() {
            final var _resultValue = new ClusterCertificateCommonNamesCommonName();
            _resultValue.certificateCommonName = certificateCommonName;
            _resultValue.certificateIssuerThumbprint = certificateIssuerThumbprint;
            return _resultValue;
        }
    }
}
