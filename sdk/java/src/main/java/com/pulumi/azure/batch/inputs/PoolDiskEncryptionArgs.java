// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.batch.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class PoolDiskEncryptionArgs extends com.pulumi.resources.ResourceArgs {

    public static final PoolDiskEncryptionArgs Empty = new PoolDiskEncryptionArgs();

    /**
     * On Linux pool, only \&#34;TemporaryDisk\&#34; is supported; on Windows pool, \&#34;OsDisk\&#34; and \&#34;TemporaryDisk\&#34; must be specified.
     * 
     */
    @Import(name="diskEncryptionTarget", required=true)
    private Output<String> diskEncryptionTarget;

    /**
     * @return On Linux pool, only \&#34;TemporaryDisk\&#34; is supported; on Windows pool, \&#34;OsDisk\&#34; and \&#34;TemporaryDisk\&#34; must be specified.
     * 
     */
    public Output<String> diskEncryptionTarget() {
        return this.diskEncryptionTarget;
    }

    private PoolDiskEncryptionArgs() {}

    private PoolDiskEncryptionArgs(PoolDiskEncryptionArgs $) {
        this.diskEncryptionTarget = $.diskEncryptionTarget;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PoolDiskEncryptionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PoolDiskEncryptionArgs $;

        public Builder() {
            $ = new PoolDiskEncryptionArgs();
        }

        public Builder(PoolDiskEncryptionArgs defaults) {
            $ = new PoolDiskEncryptionArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param diskEncryptionTarget On Linux pool, only \&#34;TemporaryDisk\&#34; is supported; on Windows pool, \&#34;OsDisk\&#34; and \&#34;TemporaryDisk\&#34; must be specified.
         * 
         * @return builder
         * 
         */
        public Builder diskEncryptionTarget(Output<String> diskEncryptionTarget) {
            $.diskEncryptionTarget = diskEncryptionTarget;
            return this;
        }

        /**
         * @param diskEncryptionTarget On Linux pool, only \&#34;TemporaryDisk\&#34; is supported; on Windows pool, \&#34;OsDisk\&#34; and \&#34;TemporaryDisk\&#34; must be specified.
         * 
         * @return builder
         * 
         */
        public Builder diskEncryptionTarget(String diskEncryptionTarget) {
            return diskEncryptionTarget(Output.of(diskEncryptionTarget));
        }

        public PoolDiskEncryptionArgs build() {
            if ($.diskEncryptionTarget == null) {
                throw new MissingRequiredPropertyException("PoolDiskEncryptionArgs", "diskEncryptionTarget");
            }
            return $;
        }
    }

}
