// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.network.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class FirewallManagementIpConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final FirewallManagementIpConfigurationArgs Empty = new FirewallManagementIpConfigurationArgs();

    /**
     * Specifies the name of the IP Configuration.
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    /**
     * @return Specifies the name of the IP Configuration.
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    /**
     * The private IP address associated with the Firewall.
     * 
     */
    @Import(name="privateIpAddress")
    private @Nullable Output<String> privateIpAddress;

    /**
     * @return The private IP address associated with the Firewall.
     * 
     */
    public Optional<Output<String>> privateIpAddress() {
        return Optional.ofNullable(this.privateIpAddress);
    }

    /**
     * The ID of the Public IP Address associated with the firewall.
     * 
     */
    @Import(name="publicIpAddressId", required=true)
    private Output<String> publicIpAddressId;

    /**
     * @return The ID of the Public IP Address associated with the firewall.
     * 
     */
    public Output<String> publicIpAddressId() {
        return this.publicIpAddressId;
    }

    /**
     * Reference to the subnet associated with the IP Configuration. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="subnetId", required=true)
    private Output<String> subnetId;

    /**
     * @return Reference to the subnet associated with the IP Configuration. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> subnetId() {
        return this.subnetId;
    }

    private FirewallManagementIpConfigurationArgs() {}

    private FirewallManagementIpConfigurationArgs(FirewallManagementIpConfigurationArgs $) {
        this.name = $.name;
        this.privateIpAddress = $.privateIpAddress;
        this.publicIpAddressId = $.publicIpAddressId;
        this.subnetId = $.subnetId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FirewallManagementIpConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FirewallManagementIpConfigurationArgs $;

        public Builder() {
            $ = new FirewallManagementIpConfigurationArgs();
        }

        public Builder(FirewallManagementIpConfigurationArgs defaults) {
            $ = new FirewallManagementIpConfigurationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param name Specifies the name of the IP Configuration.
         * 
         * @return builder
         * 
         */
        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Specifies the name of the IP Configuration.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param privateIpAddress The private IP address associated with the Firewall.
         * 
         * @return builder
         * 
         */
        public Builder privateIpAddress(@Nullable Output<String> privateIpAddress) {
            $.privateIpAddress = privateIpAddress;
            return this;
        }

        /**
         * @param privateIpAddress The private IP address associated with the Firewall.
         * 
         * @return builder
         * 
         */
        public Builder privateIpAddress(String privateIpAddress) {
            return privateIpAddress(Output.of(privateIpAddress));
        }

        /**
         * @param publicIpAddressId The ID of the Public IP Address associated with the firewall.
         * 
         * @return builder
         * 
         */
        public Builder publicIpAddressId(Output<String> publicIpAddressId) {
            $.publicIpAddressId = publicIpAddressId;
            return this;
        }

        /**
         * @param publicIpAddressId The ID of the Public IP Address associated with the firewall.
         * 
         * @return builder
         * 
         */
        public Builder publicIpAddressId(String publicIpAddressId) {
            return publicIpAddressId(Output.of(publicIpAddressId));
        }

        /**
         * @param subnetId Reference to the subnet associated with the IP Configuration. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder subnetId(Output<String> subnetId) {
            $.subnetId = subnetId;
            return this;
        }

        /**
         * @param subnetId Reference to the subnet associated with the IP Configuration. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder subnetId(String subnetId) {
            return subnetId(Output.of(subnetId));
        }

        public FirewallManagementIpConfigurationArgs build() {
            $.name = Objects.requireNonNull($.name, "expected parameter 'name' to be non-null");
            $.publicIpAddressId = Objects.requireNonNull($.publicIpAddressId, "expected parameter 'publicIpAddressId' to be non-null");
            $.subnetId = Objects.requireNonNull($.subnetId, "expected parameter 'subnetId' to be non-null");
            return $;
        }
    }

}
