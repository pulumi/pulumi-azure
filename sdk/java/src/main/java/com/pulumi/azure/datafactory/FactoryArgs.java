// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.datafactory;

import com.pulumi.azure.datafactory.inputs.FactoryGithubConfigurationArgs;
import com.pulumi.azure.datafactory.inputs.FactoryGlobalParameterArgs;
import com.pulumi.azure.datafactory.inputs.FactoryIdentityArgs;
import com.pulumi.azure.datafactory.inputs.FactoryVstsConfigurationArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class FactoryArgs extends com.pulumi.resources.ResourceArgs {

    public static final FactoryArgs Empty = new FactoryArgs();

    /**
     * Specifies the Azure Key Vault Key ID to be used as the Customer Managed Key (CMK) for double encryption. Required with user assigned identity.
     * 
     */
    @Import(name="customerManagedKeyId")
    private @Nullable Output<String> customerManagedKeyId;

    /**
     * @return Specifies the Azure Key Vault Key ID to be used as the Customer Managed Key (CMK) for double encryption. Required with user assigned identity.
     * 
     */
    public Optional<Output<String>> customerManagedKeyId() {
        return Optional.ofNullable(this.customerManagedKeyId);
    }

    /**
     * Specifies the ID of the user assigned identity associated with the Customer Managed Key. Must be supplied if `customer_managed_key_id` is set.
     * 
     */
    @Import(name="customerManagedKeyIdentityId")
    private @Nullable Output<String> customerManagedKeyIdentityId;

    /**
     * @return Specifies the ID of the user assigned identity associated with the Customer Managed Key. Must be supplied if `customer_managed_key_id` is set.
     * 
     */
    public Optional<Output<String>> customerManagedKeyIdentityId() {
        return Optional.ofNullable(this.customerManagedKeyIdentityId);
    }

    /**
     * A `github_configuration` block as defined below.
     * 
     */
    @Import(name="githubConfiguration")
    private @Nullable Output<FactoryGithubConfigurationArgs> githubConfiguration;

    /**
     * @return A `github_configuration` block as defined below.
     * 
     */
    public Optional<Output<FactoryGithubConfigurationArgs>> githubConfiguration() {
        return Optional.ofNullable(this.githubConfiguration);
    }

    /**
     * A list of `global_parameter` blocks as defined above.
     * 
     */
    @Import(name="globalParameters")
    private @Nullable Output<List<FactoryGlobalParameterArgs>> globalParameters;

    /**
     * @return A list of `global_parameter` blocks as defined above.
     * 
     */
    public Optional<Output<List<FactoryGlobalParameterArgs>>> globalParameters() {
        return Optional.ofNullable(this.globalParameters);
    }

    /**
     * An `identity` block as defined below.
     * 
     */
    @Import(name="identity")
    private @Nullable Output<FactoryIdentityArgs> identity;

    /**
     * @return An `identity` block as defined below.
     * 
     */
    public Optional<Output<FactoryIdentityArgs>> identity() {
        return Optional.ofNullable(this.identity);
    }

    /**
     * Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="location")
    private @Nullable Output<String> location;

    /**
     * @return Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * Is Managed Virtual Network enabled?
     * 
     */
    @Import(name="managedVirtualNetworkEnabled")
    private @Nullable Output<Boolean> managedVirtualNetworkEnabled;

    /**
     * @return Is Managed Virtual Network enabled?
     * 
     */
    public Optional<Output<Boolean>> managedVirtualNetworkEnabled() {
        return Optional.ofNullable(this.managedVirtualNetworkEnabled);
    }

    /**
     * Specifies the name of the Data Factory. Changing this forces a new resource to be created. Must be globally unique. See the [Microsoft documentation](https://docs.microsoft.com/azure/data-factory/naming-rules) for all restrictions.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Specifies the name of the Data Factory. Changing this forces a new resource to be created. Must be globally unique. See the [Microsoft documentation](https://docs.microsoft.com/azure/data-factory/naming-rules) for all restrictions.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Is the Data Factory visible to the public network? Defaults to `true`.
     * 
     */
    @Import(name="publicNetworkEnabled")
    private @Nullable Output<Boolean> publicNetworkEnabled;

    /**
     * @return Is the Data Factory visible to the public network? Defaults to `true`.
     * 
     */
    public Optional<Output<Boolean>> publicNetworkEnabled() {
        return Optional.ofNullable(this.publicNetworkEnabled);
    }

    /**
     * Specifies the ID of the purview account resource associated with the Data Factory.
     * 
     */
    @Import(name="purviewId")
    private @Nullable Output<String> purviewId;

    /**
     * @return Specifies the ID of the purview account resource associated with the Data Factory.
     * 
     */
    public Optional<Output<String>> purviewId() {
        return Optional.ofNullable(this.purviewId);
    }

    /**
     * The name of the resource group in which to create the Data Factory. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    /**
     * @return The name of the resource group in which to create the Data Factory. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * A mapping of tags to assign to the resource.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return A mapping of tags to assign to the resource.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * A `vsts_configuration` block as defined below.
     * 
     */
    @Import(name="vstsConfiguration")
    private @Nullable Output<FactoryVstsConfigurationArgs> vstsConfiguration;

    /**
     * @return A `vsts_configuration` block as defined below.
     * 
     */
    public Optional<Output<FactoryVstsConfigurationArgs>> vstsConfiguration() {
        return Optional.ofNullable(this.vstsConfiguration);
    }

    private FactoryArgs() {}

    private FactoryArgs(FactoryArgs $) {
        this.customerManagedKeyId = $.customerManagedKeyId;
        this.customerManagedKeyIdentityId = $.customerManagedKeyIdentityId;
        this.githubConfiguration = $.githubConfiguration;
        this.globalParameters = $.globalParameters;
        this.identity = $.identity;
        this.location = $.location;
        this.managedVirtualNetworkEnabled = $.managedVirtualNetworkEnabled;
        this.name = $.name;
        this.publicNetworkEnabled = $.publicNetworkEnabled;
        this.purviewId = $.purviewId;
        this.resourceGroupName = $.resourceGroupName;
        this.tags = $.tags;
        this.vstsConfiguration = $.vstsConfiguration;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FactoryArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FactoryArgs $;

        public Builder() {
            $ = new FactoryArgs();
        }

        public Builder(FactoryArgs defaults) {
            $ = new FactoryArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param customerManagedKeyId Specifies the Azure Key Vault Key ID to be used as the Customer Managed Key (CMK) for double encryption. Required with user assigned identity.
         * 
         * @return builder
         * 
         */
        public Builder customerManagedKeyId(@Nullable Output<String> customerManagedKeyId) {
            $.customerManagedKeyId = customerManagedKeyId;
            return this;
        }

        /**
         * @param customerManagedKeyId Specifies the Azure Key Vault Key ID to be used as the Customer Managed Key (CMK) for double encryption. Required with user assigned identity.
         * 
         * @return builder
         * 
         */
        public Builder customerManagedKeyId(String customerManagedKeyId) {
            return customerManagedKeyId(Output.of(customerManagedKeyId));
        }

        /**
         * @param customerManagedKeyIdentityId Specifies the ID of the user assigned identity associated with the Customer Managed Key. Must be supplied if `customer_managed_key_id` is set.
         * 
         * @return builder
         * 
         */
        public Builder customerManagedKeyIdentityId(@Nullable Output<String> customerManagedKeyIdentityId) {
            $.customerManagedKeyIdentityId = customerManagedKeyIdentityId;
            return this;
        }

        /**
         * @param customerManagedKeyIdentityId Specifies the ID of the user assigned identity associated with the Customer Managed Key. Must be supplied if `customer_managed_key_id` is set.
         * 
         * @return builder
         * 
         */
        public Builder customerManagedKeyIdentityId(String customerManagedKeyIdentityId) {
            return customerManagedKeyIdentityId(Output.of(customerManagedKeyIdentityId));
        }

        /**
         * @param githubConfiguration A `github_configuration` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder githubConfiguration(@Nullable Output<FactoryGithubConfigurationArgs> githubConfiguration) {
            $.githubConfiguration = githubConfiguration;
            return this;
        }

        /**
         * @param githubConfiguration A `github_configuration` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder githubConfiguration(FactoryGithubConfigurationArgs githubConfiguration) {
            return githubConfiguration(Output.of(githubConfiguration));
        }

        /**
         * @param globalParameters A list of `global_parameter` blocks as defined above.
         * 
         * @return builder
         * 
         */
        public Builder globalParameters(@Nullable Output<List<FactoryGlobalParameterArgs>> globalParameters) {
            $.globalParameters = globalParameters;
            return this;
        }

        /**
         * @param globalParameters A list of `global_parameter` blocks as defined above.
         * 
         * @return builder
         * 
         */
        public Builder globalParameters(List<FactoryGlobalParameterArgs> globalParameters) {
            return globalParameters(Output.of(globalParameters));
        }

        /**
         * @param globalParameters A list of `global_parameter` blocks as defined above.
         * 
         * @return builder
         * 
         */
        public Builder globalParameters(FactoryGlobalParameterArgs... globalParameters) {
            return globalParameters(List.of(globalParameters));
        }

        /**
         * @param identity An `identity` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder identity(@Nullable Output<FactoryIdentityArgs> identity) {
            $.identity = identity;
            return this;
        }

        /**
         * @param identity An `identity` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder identity(FactoryIdentityArgs identity) {
            return identity(Output.of(identity));
        }

        /**
         * @param location Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param managedVirtualNetworkEnabled Is Managed Virtual Network enabled?
         * 
         * @return builder
         * 
         */
        public Builder managedVirtualNetworkEnabled(@Nullable Output<Boolean> managedVirtualNetworkEnabled) {
            $.managedVirtualNetworkEnabled = managedVirtualNetworkEnabled;
            return this;
        }

        /**
         * @param managedVirtualNetworkEnabled Is Managed Virtual Network enabled?
         * 
         * @return builder
         * 
         */
        public Builder managedVirtualNetworkEnabled(Boolean managedVirtualNetworkEnabled) {
            return managedVirtualNetworkEnabled(Output.of(managedVirtualNetworkEnabled));
        }

        /**
         * @param name Specifies the name of the Data Factory. Changing this forces a new resource to be created. Must be globally unique. See the [Microsoft documentation](https://docs.microsoft.com/azure/data-factory/naming-rules) for all restrictions.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Specifies the name of the Data Factory. Changing this forces a new resource to be created. Must be globally unique. See the [Microsoft documentation](https://docs.microsoft.com/azure/data-factory/naming-rules) for all restrictions.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param publicNetworkEnabled Is the Data Factory visible to the public network? Defaults to `true`.
         * 
         * @return builder
         * 
         */
        public Builder publicNetworkEnabled(@Nullable Output<Boolean> publicNetworkEnabled) {
            $.publicNetworkEnabled = publicNetworkEnabled;
            return this;
        }

        /**
         * @param publicNetworkEnabled Is the Data Factory visible to the public network? Defaults to `true`.
         * 
         * @return builder
         * 
         */
        public Builder publicNetworkEnabled(Boolean publicNetworkEnabled) {
            return publicNetworkEnabled(Output.of(publicNetworkEnabled));
        }

        /**
         * @param purviewId Specifies the ID of the purview account resource associated with the Data Factory.
         * 
         * @return builder
         * 
         */
        public Builder purviewId(@Nullable Output<String> purviewId) {
            $.purviewId = purviewId;
            return this;
        }

        /**
         * @param purviewId Specifies the ID of the purview account resource associated with the Data Factory.
         * 
         * @return builder
         * 
         */
        public Builder purviewId(String purviewId) {
            return purviewId(Output.of(purviewId));
        }

        /**
         * @param resourceGroupName The name of the resource group in which to create the Data Factory. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName The name of the resource group in which to create the Data Factory. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        /**
         * @param tags A mapping of tags to assign to the resource.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags A mapping of tags to assign to the resource.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param vstsConfiguration A `vsts_configuration` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder vstsConfiguration(@Nullable Output<FactoryVstsConfigurationArgs> vstsConfiguration) {
            $.vstsConfiguration = vstsConfiguration;
            return this;
        }

        /**
         * @param vstsConfiguration A `vsts_configuration` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder vstsConfiguration(FactoryVstsConfigurationArgs vstsConfiguration) {
            return vstsConfiguration(Output.of(vstsConfiguration));
        }

        public FactoryArgs build() {
            if ($.resourceGroupName == null) {
                throw new MissingRequiredPropertyException("FactoryArgs", "resourceGroupName");
            }
            return $;
        }
    }

}
