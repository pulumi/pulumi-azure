// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.apimanagement.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class BackendProxy {
    /**
     * @return The password to connect to the proxy server.
     * 
     */
    private final @Nullable String password;
    /**
     * @return The URL of the proxy server.
     * 
     */
    private final String url;
    /**
     * @return The username to connect to the proxy server.
     * 
     */
    private final String username;

    @CustomType.Constructor
    private BackendProxy(
        @CustomType.Parameter("password") @Nullable String password,
        @CustomType.Parameter("url") String url,
        @CustomType.Parameter("username") String username) {
        this.password = password;
        this.url = url;
        this.username = username;
    }

    /**
     * @return The password to connect to the proxy server.
     * 
     */
    public Optional<String> password() {
        return Optional.ofNullable(this.password);
    }
    /**
     * @return The URL of the proxy server.
     * 
     */
    public String url() {
        return this.url;
    }
    /**
     * @return The username to connect to the proxy server.
     * 
     */
    public String username() {
        return this.username;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(BackendProxy defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String password;
        private String url;
        private String username;

        public Builder() {
    	      // Empty
        }

        public Builder(BackendProxy defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.password = defaults.password;
    	      this.url = defaults.url;
    	      this.username = defaults.username;
        }

        public Builder password(@Nullable String password) {
            this.password = password;
            return this;
        }
        public Builder url(String url) {
            this.url = Objects.requireNonNull(url);
            return this;
        }
        public Builder username(String username) {
            this.username = Objects.requireNonNull(username);
            return this;
        }        public BackendProxy build() {
            return new BackendProxy(password, url, username);
        }
    }
}
