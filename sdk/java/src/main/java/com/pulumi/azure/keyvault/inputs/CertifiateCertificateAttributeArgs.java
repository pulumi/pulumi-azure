// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.keyvault.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CertifiateCertificateAttributeArgs extends com.pulumi.resources.ResourceArgs {

    public static final CertifiateCertificateAttributeArgs Empty = new CertifiateCertificateAttributeArgs();

    /**
     * The create time of the Key Vault Certificate.
     * 
     */
    @Import(name="created")
    private @Nullable Output<String> created;

    /**
     * @return The create time of the Key Vault Certificate.
     * 
     */
    public Optional<Output<String>> created() {
        return Optional.ofNullable(this.created);
    }

    /**
     * whether the Key Vault Certificate is enabled.
     * 
     */
    @Import(name="enabled")
    private @Nullable Output<Boolean> enabled;

    /**
     * @return whether the Key Vault Certificate is enabled.
     * 
     */
    public Optional<Output<Boolean>> enabled() {
        return Optional.ofNullable(this.enabled);
    }

    /**
     * The expires time of the Key Vault Certificate.
     * 
     */
    @Import(name="expires")
    private @Nullable Output<String> expires;

    /**
     * @return The expires time of the Key Vault Certificate.
     * 
     */
    public Optional<Output<String>> expires() {
        return Optional.ofNullable(this.expires);
    }

    /**
     * The not before valid time of the Key Vault Certificate.
     * 
     */
    @Import(name="notBefore")
    private @Nullable Output<String> notBefore;

    /**
     * @return The not before valid time of the Key Vault Certificate.
     * 
     */
    public Optional<Output<String>> notBefore() {
        return Optional.ofNullable(this.notBefore);
    }

    /**
     * The deletion recovery level of the Key Vault Certificate.
     * 
     */
    @Import(name="recoveryLevel")
    private @Nullable Output<String> recoveryLevel;

    /**
     * @return The deletion recovery level of the Key Vault Certificate.
     * 
     */
    public Optional<Output<String>> recoveryLevel() {
        return Optional.ofNullable(this.recoveryLevel);
    }

    /**
     * The recent update time of the Key Vault Certificate.
     * 
     */
    @Import(name="updated")
    private @Nullable Output<String> updated;

    /**
     * @return The recent update time of the Key Vault Certificate.
     * 
     */
    public Optional<Output<String>> updated() {
        return Optional.ofNullable(this.updated);
    }

    private CertifiateCertificateAttributeArgs() {}

    private CertifiateCertificateAttributeArgs(CertifiateCertificateAttributeArgs $) {
        this.created = $.created;
        this.enabled = $.enabled;
        this.expires = $.expires;
        this.notBefore = $.notBefore;
        this.recoveryLevel = $.recoveryLevel;
        this.updated = $.updated;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CertifiateCertificateAttributeArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CertifiateCertificateAttributeArgs $;

        public Builder() {
            $ = new CertifiateCertificateAttributeArgs();
        }

        public Builder(CertifiateCertificateAttributeArgs defaults) {
            $ = new CertifiateCertificateAttributeArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param created The create time of the Key Vault Certificate.
         * 
         * @return builder
         * 
         */
        public Builder created(@Nullable Output<String> created) {
            $.created = created;
            return this;
        }

        /**
         * @param created The create time of the Key Vault Certificate.
         * 
         * @return builder
         * 
         */
        public Builder created(String created) {
            return created(Output.of(created));
        }

        /**
         * @param enabled whether the Key Vault Certificate is enabled.
         * 
         * @return builder
         * 
         */
        public Builder enabled(@Nullable Output<Boolean> enabled) {
            $.enabled = enabled;
            return this;
        }

        /**
         * @param enabled whether the Key Vault Certificate is enabled.
         * 
         * @return builder
         * 
         */
        public Builder enabled(Boolean enabled) {
            return enabled(Output.of(enabled));
        }

        /**
         * @param expires The expires time of the Key Vault Certificate.
         * 
         * @return builder
         * 
         */
        public Builder expires(@Nullable Output<String> expires) {
            $.expires = expires;
            return this;
        }

        /**
         * @param expires The expires time of the Key Vault Certificate.
         * 
         * @return builder
         * 
         */
        public Builder expires(String expires) {
            return expires(Output.of(expires));
        }

        /**
         * @param notBefore The not before valid time of the Key Vault Certificate.
         * 
         * @return builder
         * 
         */
        public Builder notBefore(@Nullable Output<String> notBefore) {
            $.notBefore = notBefore;
            return this;
        }

        /**
         * @param notBefore The not before valid time of the Key Vault Certificate.
         * 
         * @return builder
         * 
         */
        public Builder notBefore(String notBefore) {
            return notBefore(Output.of(notBefore));
        }

        /**
         * @param recoveryLevel The deletion recovery level of the Key Vault Certificate.
         * 
         * @return builder
         * 
         */
        public Builder recoveryLevel(@Nullable Output<String> recoveryLevel) {
            $.recoveryLevel = recoveryLevel;
            return this;
        }

        /**
         * @param recoveryLevel The deletion recovery level of the Key Vault Certificate.
         * 
         * @return builder
         * 
         */
        public Builder recoveryLevel(String recoveryLevel) {
            return recoveryLevel(Output.of(recoveryLevel));
        }

        /**
         * @param updated The recent update time of the Key Vault Certificate.
         * 
         * @return builder
         * 
         */
        public Builder updated(@Nullable Output<String> updated) {
            $.updated = updated;
            return this;
        }

        /**
         * @param updated The recent update time of the Key Vault Certificate.
         * 
         * @return builder
         * 
         */
        public Builder updated(String updated) {
            return updated(Output.of(updated));
        }

        public CertifiateCertificateAttributeArgs build() {
            return $;
        }
    }

}
