// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.network;

import com.pulumi.azure.Utilities;
import com.pulumi.azure.network.ApplicationGatewayArgs;
import com.pulumi.azure.network.inputs.ApplicationGatewayState;
import com.pulumi.azure.network.outputs.ApplicationGatewayAuthenticationCertificate;
import com.pulumi.azure.network.outputs.ApplicationGatewayAutoscaleConfiguration;
import com.pulumi.azure.network.outputs.ApplicationGatewayBackendAddressPool;
import com.pulumi.azure.network.outputs.ApplicationGatewayBackendHttpSetting;
import com.pulumi.azure.network.outputs.ApplicationGatewayCustomErrorConfiguration;
import com.pulumi.azure.network.outputs.ApplicationGatewayFrontendIpConfiguration;
import com.pulumi.azure.network.outputs.ApplicationGatewayFrontendPort;
import com.pulumi.azure.network.outputs.ApplicationGatewayGatewayIpConfiguration;
import com.pulumi.azure.network.outputs.ApplicationGatewayGlobal;
import com.pulumi.azure.network.outputs.ApplicationGatewayHttpListener;
import com.pulumi.azure.network.outputs.ApplicationGatewayIdentity;
import com.pulumi.azure.network.outputs.ApplicationGatewayPrivateEndpointConnection;
import com.pulumi.azure.network.outputs.ApplicationGatewayPrivateLinkConfiguration;
import com.pulumi.azure.network.outputs.ApplicationGatewayProbe;
import com.pulumi.azure.network.outputs.ApplicationGatewayRedirectConfiguration;
import com.pulumi.azure.network.outputs.ApplicationGatewayRequestRoutingRule;
import com.pulumi.azure.network.outputs.ApplicationGatewayRewriteRuleSet;
import com.pulumi.azure.network.outputs.ApplicationGatewaySku;
import com.pulumi.azure.network.outputs.ApplicationGatewaySslCertificate;
import com.pulumi.azure.network.outputs.ApplicationGatewaySslPolicy;
import com.pulumi.azure.network.outputs.ApplicationGatewaySslProfile;
import com.pulumi.azure.network.outputs.ApplicationGatewayTrustedClientCertificate;
import com.pulumi.azure.network.outputs.ApplicationGatewayTrustedRootCertificate;
import com.pulumi.azure.network.outputs.ApplicationGatewayUrlPathMap;
import com.pulumi.azure.network.outputs.ApplicationGatewayWafConfiguration;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * ## Example Usage
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.azure.core.ResourceGroup;
 * import com.pulumi.azure.core.ResourceGroupArgs;
 * import com.pulumi.azure.network.VirtualNetwork;
 * import com.pulumi.azure.network.VirtualNetworkArgs;
 * import com.pulumi.azure.network.Subnet;
 * import com.pulumi.azure.network.SubnetArgs;
 * import com.pulumi.azure.network.PublicIp;
 * import com.pulumi.azure.network.PublicIpArgs;
 * import com.pulumi.azure.network.ApplicationGateway;
 * import com.pulumi.azure.network.ApplicationGatewayArgs;
 * import com.pulumi.azure.network.inputs.ApplicationGatewaySkuArgs;
 * import com.pulumi.azure.network.inputs.ApplicationGatewayGatewayIpConfigurationArgs;
 * import com.pulumi.azure.network.inputs.ApplicationGatewayFrontendPortArgs;
 * import com.pulumi.azure.network.inputs.ApplicationGatewayFrontendIpConfigurationArgs;
 * import com.pulumi.azure.network.inputs.ApplicationGatewayBackendAddressPoolArgs;
 * import com.pulumi.azure.network.inputs.ApplicationGatewayBackendHttpSettingArgs;
 * import com.pulumi.azure.network.inputs.ApplicationGatewayHttpListenerArgs;
 * import com.pulumi.azure.network.inputs.ApplicationGatewayRequestRoutingRuleArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var exampleResourceGroup = new ResourceGroup(&#34;exampleResourceGroup&#34;, ResourceGroupArgs.builder()        
 *             .location(&#34;West Europe&#34;)
 *             .build());
 * 
 *         var exampleVirtualNetwork = new VirtualNetwork(&#34;exampleVirtualNetwork&#34;, VirtualNetworkArgs.builder()        
 *             .resourceGroupName(exampleResourceGroup.name())
 *             .location(exampleResourceGroup.location())
 *             .addressSpaces(&#34;10.254.0.0/16&#34;)
 *             .build());
 * 
 *         var exampleSubnet = new Subnet(&#34;exampleSubnet&#34;, SubnetArgs.builder()        
 *             .resourceGroupName(exampleResourceGroup.name())
 *             .virtualNetworkName(exampleVirtualNetwork.name())
 *             .addressPrefixes(&#34;10.254.0.0/24&#34;)
 *             .build());
 * 
 *         var examplePublicIp = new PublicIp(&#34;examplePublicIp&#34;, PublicIpArgs.builder()        
 *             .resourceGroupName(exampleResourceGroup.name())
 *             .location(exampleResourceGroup.location())
 *             .allocationMethod(&#34;Dynamic&#34;)
 *             .build());
 * 
 *         final var backendAddressPoolName = exampleVirtualNetwork.name().applyValue(name -&gt; String.format(&#34;%s-beap&#34;, name));
 * 
 *         final var frontendPortName = exampleVirtualNetwork.name().applyValue(name -&gt; String.format(&#34;%s-feport&#34;, name));
 * 
 *         final var frontendIpConfigurationName = exampleVirtualNetwork.name().applyValue(name -&gt; String.format(&#34;%s-feip&#34;, name));
 * 
 *         final var httpSettingName = exampleVirtualNetwork.name().applyValue(name -&gt; String.format(&#34;%s-be-htst&#34;, name));
 * 
 *         final var listenerName = exampleVirtualNetwork.name().applyValue(name -&gt; String.format(&#34;%s-httplstn&#34;, name));
 * 
 *         final var requestRoutingRuleName = exampleVirtualNetwork.name().applyValue(name -&gt; String.format(&#34;%s-rqrt&#34;, name));
 * 
 *         final var redirectConfigurationName = exampleVirtualNetwork.name().applyValue(name -&gt; String.format(&#34;%s-rdrcfg&#34;, name));
 * 
 *         var network = new ApplicationGateway(&#34;network&#34;, ApplicationGatewayArgs.builder()        
 *             .resourceGroupName(exampleResourceGroup.name())
 *             .location(exampleResourceGroup.location())
 *             .sku(ApplicationGatewaySkuArgs.builder()
 *                 .name(&#34;Standard_v2&#34;)
 *                 .tier(&#34;Standard_v2&#34;)
 *                 .capacity(2)
 *                 .build())
 *             .gatewayIpConfigurations(ApplicationGatewayGatewayIpConfigurationArgs.builder()
 *                 .name(&#34;my-gateway-ip-configuration&#34;)
 *                 .subnetId(exampleSubnet.id())
 *                 .build())
 *             .frontendPorts(ApplicationGatewayFrontendPortArgs.builder()
 *                 .name(frontendPortName)
 *                 .port(80)
 *                 .build())
 *             .frontendIpConfigurations(ApplicationGatewayFrontendIpConfigurationArgs.builder()
 *                 .name(frontendIpConfigurationName)
 *                 .publicIpAddressId(examplePublicIp.id())
 *                 .build())
 *             .backendAddressPools(ApplicationGatewayBackendAddressPoolArgs.builder()
 *                 .name(backendAddressPoolName)
 *                 .build())
 *             .backendHttpSettings(ApplicationGatewayBackendHttpSettingArgs.builder()
 *                 .name(httpSettingName)
 *                 .cookieBasedAffinity(&#34;Disabled&#34;)
 *                 .path(&#34;/path1/&#34;)
 *                 .port(80)
 *                 .protocol(&#34;Http&#34;)
 *                 .requestTimeout(60)
 *                 .build())
 *             .httpListeners(ApplicationGatewayHttpListenerArgs.builder()
 *                 .name(listenerName)
 *                 .frontendIpConfigurationName(frontendIpConfigurationName)
 *                 .frontendPortName(frontendPortName)
 *                 .protocol(&#34;Http&#34;)
 *                 .build())
 *             .requestRoutingRules(ApplicationGatewayRequestRoutingRuleArgs.builder()
 *                 .name(requestRoutingRuleName)
 *                 .priority(9)
 *                 .ruleType(&#34;Basic&#34;)
 *                 .httpListenerName(listenerName)
 *                 .backendAddressPoolName(backendAddressPoolName)
 *                 .backendHttpSettingsName(httpSettingName)
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * Application Gateway&#39;s can be imported using the `resource id`, e.g.
 * 
 * ```sh
 *  $ pulumi import azure:network/applicationGateway:ApplicationGateway example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/mygroup1/providers/Microsoft.Network/applicationGateways/myGateway1
 * ```
 * 
 */
@ResourceType(type="azure:network/applicationGateway:ApplicationGateway")
public class ApplicationGateway extends com.pulumi.resources.CustomResource {
    /**
     * One or more `authentication_certificate` blocks as defined below.
     * 
     */
    @Export(name="authenticationCertificates", refs={List.class,ApplicationGatewayAuthenticationCertificate.class}, tree="[0,1]")
    private Output</* @Nullable */ List<ApplicationGatewayAuthenticationCertificate>> authenticationCertificates;

    /**
     * @return One or more `authentication_certificate` blocks as defined below.
     * 
     */
    public Output<Optional<List<ApplicationGatewayAuthenticationCertificate>>> authenticationCertificates() {
        return Codegen.optional(this.authenticationCertificates);
    }
    /**
     * An `autoscale_configuration` block as defined below.
     * 
     */
    @Export(name="autoscaleConfiguration", refs={ApplicationGatewayAutoscaleConfiguration.class}, tree="[0]")
    private Output</* @Nullable */ ApplicationGatewayAutoscaleConfiguration> autoscaleConfiguration;

    /**
     * @return An `autoscale_configuration` block as defined below.
     * 
     */
    public Output<Optional<ApplicationGatewayAutoscaleConfiguration>> autoscaleConfiguration() {
        return Codegen.optional(this.autoscaleConfiguration);
    }
    /**
     * One or more `backend_address_pool` blocks as defined below.
     * 
     */
    @Export(name="backendAddressPools", refs={List.class,ApplicationGatewayBackendAddressPool.class}, tree="[0,1]")
    private Output<List<ApplicationGatewayBackendAddressPool>> backendAddressPools;

    /**
     * @return One or more `backend_address_pool` blocks as defined below.
     * 
     */
    public Output<List<ApplicationGatewayBackendAddressPool>> backendAddressPools() {
        return this.backendAddressPools;
    }
    /**
     * One or more `backend_http_settings` blocks as defined below.
     * 
     */
    @Export(name="backendHttpSettings", refs={List.class,ApplicationGatewayBackendHttpSetting.class}, tree="[0,1]")
    private Output<List<ApplicationGatewayBackendHttpSetting>> backendHttpSettings;

    /**
     * @return One or more `backend_http_settings` blocks as defined below.
     * 
     */
    public Output<List<ApplicationGatewayBackendHttpSetting>> backendHttpSettings() {
        return this.backendHttpSettings;
    }
    /**
     * One or more `custom_error_configuration` blocks as defined below.
     * 
     */
    @Export(name="customErrorConfigurations", refs={List.class,ApplicationGatewayCustomErrorConfiguration.class}, tree="[0,1]")
    private Output</* @Nullable */ List<ApplicationGatewayCustomErrorConfiguration>> customErrorConfigurations;

    /**
     * @return One or more `custom_error_configuration` blocks as defined below.
     * 
     */
    public Output<Optional<List<ApplicationGatewayCustomErrorConfiguration>>> customErrorConfigurations() {
        return Codegen.optional(this.customErrorConfigurations);
    }
    /**
     * Is HTTP2 enabled on the application gateway resource? Defaults to `false`.
     * 
     */
    @Export(name="enableHttp2", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> enableHttp2;

    /**
     * @return Is HTTP2 enabled on the application gateway resource? Defaults to `false`.
     * 
     */
    public Output<Optional<Boolean>> enableHttp2() {
        return Codegen.optional(this.enableHttp2);
    }
    /**
     * Is FIPS enabled on the Application Gateway?
     * 
     */
    @Export(name="fipsEnabled", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> fipsEnabled;

    /**
     * @return Is FIPS enabled on the Application Gateway?
     * 
     */
    public Output<Optional<Boolean>> fipsEnabled() {
        return Codegen.optional(this.fipsEnabled);
    }
    /**
     * The ID of the Web Application Firewall Policy.
     * 
     */
    @Export(name="firewallPolicyId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> firewallPolicyId;

    /**
     * @return The ID of the Web Application Firewall Policy.
     * 
     */
    public Output<Optional<String>> firewallPolicyId() {
        return Codegen.optional(this.firewallPolicyId);
    }
    /**
     * Is the Firewall Policy associated with the Application Gateway?
     * 
     */
    @Export(name="forceFirewallPolicyAssociation", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> forceFirewallPolicyAssociation;

    /**
     * @return Is the Firewall Policy associated with the Application Gateway?
     * 
     */
    public Output<Optional<Boolean>> forceFirewallPolicyAssociation() {
        return Codegen.optional(this.forceFirewallPolicyAssociation);
    }
    /**
     * One or more `frontend_ip_configuration` blocks as defined below.
     * 
     */
    @Export(name="frontendIpConfigurations", refs={List.class,ApplicationGatewayFrontendIpConfiguration.class}, tree="[0,1]")
    private Output<List<ApplicationGatewayFrontendIpConfiguration>> frontendIpConfigurations;

    /**
     * @return One or more `frontend_ip_configuration` blocks as defined below.
     * 
     */
    public Output<List<ApplicationGatewayFrontendIpConfiguration>> frontendIpConfigurations() {
        return this.frontendIpConfigurations;
    }
    /**
     * One or more `frontend_port` blocks as defined below.
     * 
     */
    @Export(name="frontendPorts", refs={List.class,ApplicationGatewayFrontendPort.class}, tree="[0,1]")
    private Output<List<ApplicationGatewayFrontendPort>> frontendPorts;

    /**
     * @return One or more `frontend_port` blocks as defined below.
     * 
     */
    public Output<List<ApplicationGatewayFrontendPort>> frontendPorts() {
        return this.frontendPorts;
    }
    /**
     * One or more `gateway_ip_configuration` blocks as defined below.
     * 
     */
    @Export(name="gatewayIpConfigurations", refs={List.class,ApplicationGatewayGatewayIpConfiguration.class}, tree="[0,1]")
    private Output<List<ApplicationGatewayGatewayIpConfiguration>> gatewayIpConfigurations;

    /**
     * @return One or more `gateway_ip_configuration` blocks as defined below.
     * 
     */
    public Output<List<ApplicationGatewayGatewayIpConfiguration>> gatewayIpConfigurations() {
        return this.gatewayIpConfigurations;
    }
    /**
     * A `global` block as defined below.
     * 
     */
    @Export(name="global", refs={ApplicationGatewayGlobal.class}, tree="[0]")
    private Output</* @Nullable */ ApplicationGatewayGlobal> global;

    /**
     * @return A `global` block as defined below.
     * 
     */
    public Output<Optional<ApplicationGatewayGlobal>> global() {
        return Codegen.optional(this.global);
    }
    /**
     * One or more `http_listener` blocks as defined below.
     * 
     */
    @Export(name="httpListeners", refs={List.class,ApplicationGatewayHttpListener.class}, tree="[0,1]")
    private Output<List<ApplicationGatewayHttpListener>> httpListeners;

    /**
     * @return One or more `http_listener` blocks as defined below.
     * 
     */
    public Output<List<ApplicationGatewayHttpListener>> httpListeners() {
        return this.httpListeners;
    }
    /**
     * An `identity` block as defined below.
     * 
     */
    @Export(name="identity", refs={ApplicationGatewayIdentity.class}, tree="[0]")
    private Output</* @Nullable */ ApplicationGatewayIdentity> identity;

    /**
     * @return An `identity` block as defined below.
     * 
     */
    public Output<Optional<ApplicationGatewayIdentity>> identity() {
        return Codegen.optional(this.identity);
    }
    /**
     * The Azure region where the Application Gateway should exist. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="location", refs={String.class}, tree="[0]")
    private Output<String> location;

    /**
     * @return The Azure region where the Application Gateway should exist. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> location() {
        return this.location;
    }
    /**
     * The name of the Application Gateway. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The name of the Application Gateway. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * A list of `private_endpoint_connection` blocks as defined below.
     * 
     */
    @Export(name="privateEndpointConnections", refs={List.class,ApplicationGatewayPrivateEndpointConnection.class}, tree="[0,1]")
    private Output<List<ApplicationGatewayPrivateEndpointConnection>> privateEndpointConnections;

    /**
     * @return A list of `private_endpoint_connection` blocks as defined below.
     * 
     */
    public Output<List<ApplicationGatewayPrivateEndpointConnection>> privateEndpointConnections() {
        return this.privateEndpointConnections;
    }
    /**
     * One or more `private_link_configuration` blocks as defined below.
     * 
     */
    @Export(name="privateLinkConfigurations", refs={List.class,ApplicationGatewayPrivateLinkConfiguration.class}, tree="[0,1]")
    private Output</* @Nullable */ List<ApplicationGatewayPrivateLinkConfiguration>> privateLinkConfigurations;

    /**
     * @return One or more `private_link_configuration` blocks as defined below.
     * 
     */
    public Output<Optional<List<ApplicationGatewayPrivateLinkConfiguration>>> privateLinkConfigurations() {
        return Codegen.optional(this.privateLinkConfigurations);
    }
    /**
     * One or more `probe` blocks as defined below.
     * 
     */
    @Export(name="probes", refs={List.class,ApplicationGatewayProbe.class}, tree="[0,1]")
    private Output</* @Nullable */ List<ApplicationGatewayProbe>> probes;

    /**
     * @return One or more `probe` blocks as defined below.
     * 
     */
    public Output<Optional<List<ApplicationGatewayProbe>>> probes() {
        return Codegen.optional(this.probes);
    }
    /**
     * One or more `redirect_configuration` blocks as defined below.
     * 
     */
    @Export(name="redirectConfigurations", refs={List.class,ApplicationGatewayRedirectConfiguration.class}, tree="[0,1]")
    private Output</* @Nullable */ List<ApplicationGatewayRedirectConfiguration>> redirectConfigurations;

    /**
     * @return One or more `redirect_configuration` blocks as defined below.
     * 
     */
    public Output<Optional<List<ApplicationGatewayRedirectConfiguration>>> redirectConfigurations() {
        return Codegen.optional(this.redirectConfigurations);
    }
    /**
     * One or more `request_routing_rule` blocks as defined below.
     * 
     */
    @Export(name="requestRoutingRules", refs={List.class,ApplicationGatewayRequestRoutingRule.class}, tree="[0,1]")
    private Output<List<ApplicationGatewayRequestRoutingRule>> requestRoutingRules;

    /**
     * @return One or more `request_routing_rule` blocks as defined below.
     * 
     */
    public Output<List<ApplicationGatewayRequestRoutingRule>> requestRoutingRules() {
        return this.requestRoutingRules;
    }
    /**
     * The name of the resource group in which to the Application Gateway should exist. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="resourceGroupName", refs={String.class}, tree="[0]")
    private Output<String> resourceGroupName;

    /**
     * @return The name of the resource group in which to the Application Gateway should exist. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }
    /**
     * One or more `rewrite_rule_set` blocks as defined below. Only valid for v2 SKUs.
     * 
     */
    @Export(name="rewriteRuleSets", refs={List.class,ApplicationGatewayRewriteRuleSet.class}, tree="[0,1]")
    private Output</* @Nullable */ List<ApplicationGatewayRewriteRuleSet>> rewriteRuleSets;

    /**
     * @return One or more `rewrite_rule_set` blocks as defined below. Only valid for v2 SKUs.
     * 
     */
    public Output<Optional<List<ApplicationGatewayRewriteRuleSet>>> rewriteRuleSets() {
        return Codegen.optional(this.rewriteRuleSets);
    }
    /**
     * A `sku` block as defined below.
     * 
     */
    @Export(name="sku", refs={ApplicationGatewaySku.class}, tree="[0]")
    private Output<ApplicationGatewaySku> sku;

    /**
     * @return A `sku` block as defined below.
     * 
     */
    public Output<ApplicationGatewaySku> sku() {
        return this.sku;
    }
    /**
     * One or more `ssl_certificate` blocks as defined below.
     * 
     */
    @Export(name="sslCertificates", refs={List.class,ApplicationGatewaySslCertificate.class}, tree="[0,1]")
    private Output</* @Nullable */ List<ApplicationGatewaySslCertificate>> sslCertificates;

    /**
     * @return One or more `ssl_certificate` blocks as defined below.
     * 
     */
    public Output<Optional<List<ApplicationGatewaySslCertificate>>> sslCertificates() {
        return Codegen.optional(this.sslCertificates);
    }
    /**
     * a `ssl_policy` block as defined below.
     * 
     */
    @Export(name="sslPolicy", refs={ApplicationGatewaySslPolicy.class}, tree="[0]")
    private Output<ApplicationGatewaySslPolicy> sslPolicy;

    /**
     * @return a `ssl_policy` block as defined below.
     * 
     */
    public Output<ApplicationGatewaySslPolicy> sslPolicy() {
        return this.sslPolicy;
    }
    /**
     * One or more `ssl_profile` blocks as defined below.
     * 
     */
    @Export(name="sslProfiles", refs={List.class,ApplicationGatewaySslProfile.class}, tree="[0,1]")
    private Output</* @Nullable */ List<ApplicationGatewaySslProfile>> sslProfiles;

    /**
     * @return One or more `ssl_profile` blocks as defined below.
     * 
     */
    public Output<Optional<List<ApplicationGatewaySslProfile>>> sslProfiles() {
        return Codegen.optional(this.sslProfiles);
    }
    /**
     * A mapping of tags to assign to the resource.
     * 
     */
    @Export(name="tags", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output</* @Nullable */ Map<String,String>> tags;

    /**
     * @return A mapping of tags to assign to the resource.
     * 
     */
    public Output<Optional<Map<String,String>>> tags() {
        return Codegen.optional(this.tags);
    }
    /**
     * One or more `trusted_client_certificate` blocks as defined below.
     * 
     */
    @Export(name="trustedClientCertificates", refs={List.class,ApplicationGatewayTrustedClientCertificate.class}, tree="[0,1]")
    private Output</* @Nullable */ List<ApplicationGatewayTrustedClientCertificate>> trustedClientCertificates;

    /**
     * @return One or more `trusted_client_certificate` blocks as defined below.
     * 
     */
    public Output<Optional<List<ApplicationGatewayTrustedClientCertificate>>> trustedClientCertificates() {
        return Codegen.optional(this.trustedClientCertificates);
    }
    /**
     * One or more `trusted_root_certificate` blocks as defined below.
     * 
     */
    @Export(name="trustedRootCertificates", refs={List.class,ApplicationGatewayTrustedRootCertificate.class}, tree="[0,1]")
    private Output</* @Nullable */ List<ApplicationGatewayTrustedRootCertificate>> trustedRootCertificates;

    /**
     * @return One or more `trusted_root_certificate` blocks as defined below.
     * 
     */
    public Output<Optional<List<ApplicationGatewayTrustedRootCertificate>>> trustedRootCertificates() {
        return Codegen.optional(this.trustedRootCertificates);
    }
    /**
     * One or more `url_path_map` blocks as defined below.
     * 
     */
    @Export(name="urlPathMaps", refs={List.class,ApplicationGatewayUrlPathMap.class}, tree="[0,1]")
    private Output</* @Nullable */ List<ApplicationGatewayUrlPathMap>> urlPathMaps;

    /**
     * @return One or more `url_path_map` blocks as defined below.
     * 
     */
    public Output<Optional<List<ApplicationGatewayUrlPathMap>>> urlPathMaps() {
        return Codegen.optional(this.urlPathMaps);
    }
    /**
     * A `waf_configuration` block as defined below.
     * 
     */
    @Export(name="wafConfiguration", refs={ApplicationGatewayWafConfiguration.class}, tree="[0]")
    private Output</* @Nullable */ ApplicationGatewayWafConfiguration> wafConfiguration;

    /**
     * @return A `waf_configuration` block as defined below.
     * 
     */
    public Output<Optional<ApplicationGatewayWafConfiguration>> wafConfiguration() {
        return Codegen.optional(this.wafConfiguration);
    }
    /**
     * Specifies a list of Availability Zones in which this Application Gateway should be located. Changing this forces a new Application Gateway to be created.
     * 
     * &gt; **Please Note**: Availability Zones are not supported in all regions at this time, please check the [official documentation](https://docs.microsoft.com/azure/availability-zones/az-overview) for more information. They are also only supported for [v2 SKUs](https://docs.microsoft.com/azure/application-gateway/application-gateway-autoscaling-zone-redundant)
     * 
     */
    @Export(name="zones", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> zones;

    /**
     * @return Specifies a list of Availability Zones in which this Application Gateway should be located. Changing this forces a new Application Gateway to be created.
     * 
     * &gt; **Please Note**: Availability Zones are not supported in all regions at this time, please check the [official documentation](https://docs.microsoft.com/azure/availability-zones/az-overview) for more information. They are also only supported for [v2 SKUs](https://docs.microsoft.com/azure/application-gateway/application-gateway-autoscaling-zone-redundant)
     * 
     */
    public Output<Optional<List<String>>> zones() {
        return Codegen.optional(this.zones);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public ApplicationGateway(String name) {
        this(name, ApplicationGatewayArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public ApplicationGateway(String name, ApplicationGatewayArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public ApplicationGateway(String name, ApplicationGatewayArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:network/applicationGateway:ApplicationGateway", name, args == null ? ApplicationGatewayArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private ApplicationGateway(String name, Output<String> id, @Nullable ApplicationGatewayState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:network/applicationGateway:ApplicationGateway", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static ApplicationGateway get(String name, Output<String> id, @Nullable ApplicationGatewayState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new ApplicationGateway(name, id, state, options);
    }
}
