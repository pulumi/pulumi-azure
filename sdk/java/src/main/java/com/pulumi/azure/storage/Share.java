// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.storage;

import com.pulumi.azure.Utilities;
import com.pulumi.azure.storage.ShareArgs;
import com.pulumi.azure.storage.inputs.ShareState;
import com.pulumi.azure.storage.outputs.ShareAcl;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Manages a File Share within Azure Storage.
 * 
 * &gt; **Note:** The storage share supports two storage tiers: premium and standard. Standard file shares are created in general purpose (GPv1 or GPv2) storage accounts and premium file shares are created in FileStorage storage accounts. For further information, refer to the section &#34;What storage tiers are supported in Azure Files?&#34; of [documentation](https://docs.microsoft.com/azure/storage/files/storage-files-faq#general).
 * 
 * &gt; **Note:** Shared Key authentication will always be used for this resource, as AzureAD authentication is not supported by the Storage API for files.
 * 
 * ## Example Usage
 * 
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.azure.core.ResourceGroup;
 * import com.pulumi.azure.core.ResourceGroupArgs;
 * import com.pulumi.azure.storage.Account;
 * import com.pulumi.azure.storage.AccountArgs;
 * import com.pulumi.azure.storage.Share;
 * import com.pulumi.azure.storage.ShareArgs;
 * import com.pulumi.azure.storage.inputs.ShareAclArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new ResourceGroup("example", ResourceGroupArgs.builder()
 *             .name("azuretest")
 *             .location("West Europe")
 *             .build());
 * 
 *         var exampleAccount = new Account("exampleAccount", AccountArgs.builder()
 *             .name("azureteststorage")
 *             .resourceGroupName(example.name())
 *             .location(example.location())
 *             .accountTier("Standard")
 *             .accountReplicationType("LRS")
 *             .build());
 * 
 *         var exampleShare = new Share("exampleShare", ShareArgs.builder()
 *             .name("sharename")
 *             .storageAccountId(exampleAccount.id())
 *             .quota(50)
 *             .acls(ShareAclArgs.builder()
 *                 .id("MTIzNDU2Nzg5MDEyMzQ1Njc4OTAxMjM0NTY3ODkwMTI")
 *                 .accessPolicies(ShareAclAccessPolicyArgs.builder()
 *                     .permissions("rwdl")
 *                     .start("2019-07-02T09:38:21Z")
 *                     .expiry("2019-07-02T10:38:21Z")
 *                     .build())
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * 
 * ## API Providers
 * 
 * &lt;!-- This section is generated, changes will be overwritten --&gt;
 * This resource uses the following Azure API Providers:
 * 
 * * `Microsoft.Storage` - 2023-05-01
 * 
 * ## Import
 * 
 * Storage Shares can be imported using the `id`, e.g.
 * 
 * ```sh
 * $ pulumi import azure:storage/share:Share exampleShare /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/mygroup1/providers/Microsoft.Storage/storageAccounts/myAccount/fileServices/default/shares/exampleShare
 * ```
 * 
 */
@ResourceType(type="azure:storage/share:Share")
public class Share extends com.pulumi.resources.CustomResource {
    /**
     * The access tier of the File Share. Possible values are `Hot`, `Cool` and `TransactionOptimized`, `Premium`.
     * 
     * &gt; **Note:** The `FileStorage` `accountKind` of the `azure.storage.Account` requires `Premium` `accessTier`.
     * 
     */
    @Export(name="accessTier", refs={String.class}, tree="[0]")
    private Output<String> accessTier;

    /**
     * @return The access tier of the File Share. Possible values are `Hot`, `Cool` and `TransactionOptimized`, `Premium`.
     * 
     * &gt; **Note:** The `FileStorage` `accountKind` of the `azure.storage.Account` requires `Premium` `accessTier`.
     * 
     */
    public Output<String> accessTier() {
        return this.accessTier;
    }
    /**
     * One or more `acl` blocks as defined below.
     * 
     */
    @Export(name="acls", refs={List.class,ShareAcl.class}, tree="[0,1]")
    private Output</* @Nullable */ List<ShareAcl>> acls;

    /**
     * @return One or more `acl` blocks as defined below.
     * 
     */
    public Output<Optional<List<ShareAcl>>> acls() {
        return Codegen.optional(this.acls);
    }
    /**
     * The protocol used for the share. Possible values are `SMB` and `NFS`. The `SMB` indicates the share can be accessed by SMBv3.0, SMBv2.1 and REST. The `NFS` indicates the share can be accessed by NFSv4.1. Defaults to `SMB`. Changing this forces a new resource to be created.
     * 
     * &gt; **Note:** The `FileStorage` `accountKind` of the `azure.storage.Account` is required for the `NFS` protocol.
     * 
     */
    @Export(name="enabledProtocol", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> enabledProtocol;

    /**
     * @return The protocol used for the share. Possible values are `SMB` and `NFS`. The `SMB` indicates the share can be accessed by SMBv3.0, SMBv2.1 and REST. The `NFS` indicates the share can be accessed by NFSv4.1. Defaults to `SMB`. Changing this forces a new resource to be created.
     * 
     * &gt; **Note:** The `FileStorage` `accountKind` of the `azure.storage.Account` is required for the `NFS` protocol.
     * 
     */
    public Output<Optional<String>> enabledProtocol() {
        return Codegen.optional(this.enabledProtocol);
    }
    /**
     * A mapping of MetaData for this File Share.
     * 
     */
    @Export(name="metadata", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output<Map<String,String>> metadata;

    /**
     * @return A mapping of MetaData for this File Share.
     * 
     */
    public Output<Map<String,String>> metadata() {
        return this.metadata;
    }
    /**
     * The name of the share. Must be unique within the storage account where the share is located. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The name of the share. Must be unique within the storage account where the share is located. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The maximum size of the share, in gigabytes.
     * 
     * &gt; **Note:** For Standard storage accounts, by default this must be `1` GB (or higher) and at most `5120` GB (`5` TB). This can be set to a value larger than `5120` GB if `largeFileShareEnabled` is set to `true` in the parent `azure.storage.Account`.
     * 
     * &gt; **Note:** For Premium FileStorage storage accounts, this must be greater than `100` GB and at most `102400` GB (`100` TB).
     * 
     */
    @Export(name="quota", refs={Integer.class}, tree="[0]")
    private Output<Integer> quota;

    /**
     * @return The maximum size of the share, in gigabytes.
     * 
     * &gt; **Note:** For Standard storage accounts, by default this must be `1` GB (or higher) and at most `5120` GB (`5` TB). This can be set to a value larger than `5120` GB if `largeFileShareEnabled` is set to `true` in the parent `azure.storage.Account`.
     * 
     * &gt; **Note:** For Premium FileStorage storage accounts, this must be greater than `100` GB and at most `102400` GB (`100` TB).
     * 
     */
    public Output<Integer> quota() {
        return this.quota;
    }
    /**
     * The Resource Manager ID of this File Share.
     * 
     * @deprecated
     * this property is deprecated and will be removed 5.0 and replaced by the `id` property.
     * 
     */
    @Deprecated /* this property is deprecated and will be removed 5.0 and replaced by the `id` property. */
    @Export(name="resourceManagerId", refs={String.class}, tree="[0]")
    private Output<String> resourceManagerId;

    /**
     * @return The Resource Manager ID of this File Share.
     * 
     */
    public Output<String> resourceManagerId() {
        return this.resourceManagerId;
    }
    /**
     * Specifies the storage account in which to create the share. Changing this forces a new resource to be created.
     * 
     * &gt; **Note:** One of `storageAccountName` or `storageAccountId` must be specified. When specifying `storageAccountId` the resource will use the Resource Manager API, rather than the Data Plane API.
     * 
     */
    @Export(name="storageAccountId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> storageAccountId;

    /**
     * @return Specifies the storage account in which to create the share. Changing this forces a new resource to be created.
     * 
     * &gt; **Note:** One of `storageAccountName` or `storageAccountId` must be specified. When specifying `storageAccountId` the resource will use the Resource Manager API, rather than the Data Plane API.
     * 
     */
    public Output<Optional<String>> storageAccountId() {
        return Codegen.optional(this.storageAccountId);
    }
    /**
     * Specifies the storage account in which to create the share. Changing this forces a new resource to be created. This property is deprecated in favour of `storageAccountId`.
     * 
     * &gt; **Note:** Migrating from the deprecated `storageAccountName` to `storageAccountId` is supported without recreation. Any other change to either property will result in the resource being recreated.
     * 
     * @deprecated
     * This property has been deprecated and will be replaced by `storageAccountId` in version 5.0 of the provider.
     * 
     */
    @Deprecated /* This property has been deprecated and will be replaced by `storageAccountId` in version 5.0 of the provider. */
    @Export(name="storageAccountName", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> storageAccountName;

    /**
     * @return Specifies the storage account in which to create the share. Changing this forces a new resource to be created. This property is deprecated in favour of `storageAccountId`.
     * 
     * &gt; **Note:** Migrating from the deprecated `storageAccountName` to `storageAccountId` is supported without recreation. Any other change to either property will result in the resource being recreated.
     * 
     */
    public Output<Optional<String>> storageAccountName() {
        return Codegen.optional(this.storageAccountName);
    }
    /**
     * The URL of the File Share
     * 
     */
    @Export(name="url", refs={String.class}, tree="[0]")
    private Output<String> url;

    /**
     * @return The URL of the File Share
     * 
     */
    public Output<String> url() {
        return this.url;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Share(java.lang.String name) {
        this(name, ShareArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Share(java.lang.String name, ShareArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Share(java.lang.String name, ShareArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:storage/share:Share", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private Share(java.lang.String name, Output<java.lang.String> id, @Nullable ShareState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:storage/share:Share", name, state, makeResourceOptions(options, id), false);
    }

    private static ShareArgs makeArgs(ShareArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? ShareArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Share get(java.lang.String name, Output<java.lang.String> id, @Nullable ShareState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Share(name, id, state, options);
    }
}
