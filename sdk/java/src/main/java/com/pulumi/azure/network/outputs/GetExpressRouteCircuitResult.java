// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.network.outputs;

import com.pulumi.azure.network.outputs.GetExpressRouteCircuitPeering;
import com.pulumi.azure.network.outputs.GetExpressRouteCircuitServiceProviderProperty;
import com.pulumi.azure.network.outputs.GetExpressRouteCircuitSku;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetExpressRouteCircuitResult {
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return The Azure location where the ExpressRoute circuit exists
     * 
     */
    private String location;
    private String name;
    /**
     * @return A `peerings` block for the ExpressRoute circuit as documented below
     * 
     */
    private List<GetExpressRouteCircuitPeering> peerings;
    private String resourceGroupName;
    /**
     * @return The string needed by the service provider to provision the ExpressRoute circuit.
     * 
     */
    private String serviceKey;
    /**
     * @return A `service_provider_properties` block for the ExpressRoute circuit as documented below
     * 
     */
    private List<GetExpressRouteCircuitServiceProviderProperty> serviceProviderProperties;
    /**
     * @return The ExpressRoute circuit provisioning state from your chosen service provider. Possible values are `NotProvisioned`, `Provisioning`, `Provisioned`, and `Deprovisioning`.
     * 
     */
    private String serviceProviderProvisioningState;
    /**
     * @return A `sku` block for the ExpressRoute circuit as documented below.
     * 
     */
    private GetExpressRouteCircuitSku sku;

    private GetExpressRouteCircuitResult() {}
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The Azure location where the ExpressRoute circuit exists
     * 
     */
    public String location() {
        return this.location;
    }
    public String name() {
        return this.name;
    }
    /**
     * @return A `peerings` block for the ExpressRoute circuit as documented below
     * 
     */
    public List<GetExpressRouteCircuitPeering> peerings() {
        return this.peerings;
    }
    public String resourceGroupName() {
        return this.resourceGroupName;
    }
    /**
     * @return The string needed by the service provider to provision the ExpressRoute circuit.
     * 
     */
    public String serviceKey() {
        return this.serviceKey;
    }
    /**
     * @return A `service_provider_properties` block for the ExpressRoute circuit as documented below
     * 
     */
    public List<GetExpressRouteCircuitServiceProviderProperty> serviceProviderProperties() {
        return this.serviceProviderProperties;
    }
    /**
     * @return The ExpressRoute circuit provisioning state from your chosen service provider. Possible values are `NotProvisioned`, `Provisioning`, `Provisioned`, and `Deprovisioning`.
     * 
     */
    public String serviceProviderProvisioningState() {
        return this.serviceProviderProvisioningState;
    }
    /**
     * @return A `sku` block for the ExpressRoute circuit as documented below.
     * 
     */
    public GetExpressRouteCircuitSku sku() {
        return this.sku;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetExpressRouteCircuitResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String id;
        private String location;
        private String name;
        private List<GetExpressRouteCircuitPeering> peerings;
        private String resourceGroupName;
        private String serviceKey;
        private List<GetExpressRouteCircuitServiceProviderProperty> serviceProviderProperties;
        private String serviceProviderProvisioningState;
        private GetExpressRouteCircuitSku sku;
        public Builder() {}
        public Builder(GetExpressRouteCircuitResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.id = defaults.id;
    	      this.location = defaults.location;
    	      this.name = defaults.name;
    	      this.peerings = defaults.peerings;
    	      this.resourceGroupName = defaults.resourceGroupName;
    	      this.serviceKey = defaults.serviceKey;
    	      this.serviceProviderProperties = defaults.serviceProviderProperties;
    	      this.serviceProviderProvisioningState = defaults.serviceProviderProvisioningState;
    	      this.sku = defaults.sku;
        }

        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetExpressRouteCircuitResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder location(String location) {
            if (location == null) {
              throw new MissingRequiredPropertyException("GetExpressRouteCircuitResult", "location");
            }
            this.location = location;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetExpressRouteCircuitResult", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder peerings(List<GetExpressRouteCircuitPeering> peerings) {
            if (peerings == null) {
              throw new MissingRequiredPropertyException("GetExpressRouteCircuitResult", "peerings");
            }
            this.peerings = peerings;
            return this;
        }
        public Builder peerings(GetExpressRouteCircuitPeering... peerings) {
            return peerings(List.of(peerings));
        }
        @CustomType.Setter
        public Builder resourceGroupName(String resourceGroupName) {
            if (resourceGroupName == null) {
              throw new MissingRequiredPropertyException("GetExpressRouteCircuitResult", "resourceGroupName");
            }
            this.resourceGroupName = resourceGroupName;
            return this;
        }
        @CustomType.Setter
        public Builder serviceKey(String serviceKey) {
            if (serviceKey == null) {
              throw new MissingRequiredPropertyException("GetExpressRouteCircuitResult", "serviceKey");
            }
            this.serviceKey = serviceKey;
            return this;
        }
        @CustomType.Setter
        public Builder serviceProviderProperties(List<GetExpressRouteCircuitServiceProviderProperty> serviceProviderProperties) {
            if (serviceProviderProperties == null) {
              throw new MissingRequiredPropertyException("GetExpressRouteCircuitResult", "serviceProviderProperties");
            }
            this.serviceProviderProperties = serviceProviderProperties;
            return this;
        }
        public Builder serviceProviderProperties(GetExpressRouteCircuitServiceProviderProperty... serviceProviderProperties) {
            return serviceProviderProperties(List.of(serviceProviderProperties));
        }
        @CustomType.Setter
        public Builder serviceProviderProvisioningState(String serviceProviderProvisioningState) {
            if (serviceProviderProvisioningState == null) {
              throw new MissingRequiredPropertyException("GetExpressRouteCircuitResult", "serviceProviderProvisioningState");
            }
            this.serviceProviderProvisioningState = serviceProviderProvisioningState;
            return this;
        }
        @CustomType.Setter
        public Builder sku(GetExpressRouteCircuitSku sku) {
            if (sku == null) {
              throw new MissingRequiredPropertyException("GetExpressRouteCircuitResult", "sku");
            }
            this.sku = sku;
            return this;
        }
        public GetExpressRouteCircuitResult build() {
            final var _resultValue = new GetExpressRouteCircuitResult();
            _resultValue.id = id;
            _resultValue.location = location;
            _resultValue.name = name;
            _resultValue.peerings = peerings;
            _resultValue.resourceGroupName = resourceGroupName;
            _resultValue.serviceKey = serviceKey;
            _resultValue.serviceProviderProperties = serviceProviderProperties;
            _resultValue.serviceProviderProvisioningState = serviceProviderProvisioningState;
            _resultValue.sku = sku;
            return _resultValue;
        }
    }
}
