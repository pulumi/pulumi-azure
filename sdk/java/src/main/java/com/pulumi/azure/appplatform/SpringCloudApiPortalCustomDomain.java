// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.appplatform;

import com.pulumi.azure.Utilities;
import com.pulumi.azure.appplatform.SpringCloudApiPortalCustomDomainArgs;
import com.pulumi.azure.appplatform.inputs.SpringCloudApiPortalCustomDomainState;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Manages a Spring Cloud API Portal Domain.
 * 
 * &gt; **NOTE:** This resource is applicable only for Spring Cloud Service with enterprise tier.
 * 
 * ## Example Usage
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.azure.core.ResourceGroup;
 * import com.pulumi.azure.core.ResourceGroupArgs;
 * import com.pulumi.azure.appplatform.SpringCloudService;
 * import com.pulumi.azure.appplatform.SpringCloudServiceArgs;
 * import com.pulumi.azure.appplatform.SpringCloudGateway;
 * import com.pulumi.azure.appplatform.SpringCloudGatewayArgs;
 * import com.pulumi.azure.appplatform.SpringCloudApiPortal;
 * import com.pulumi.azure.appplatform.SpringCloudApiPortalArgs;
 * import com.pulumi.azure.appplatform.SpringCloudApiPortalCustomDomain;
 * import com.pulumi.azure.appplatform.SpringCloudApiPortalCustomDomainArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var exampleResourceGroup = new ResourceGroup(&#34;exampleResourceGroup&#34;, ResourceGroupArgs.builder()        
 *             .location(&#34;West Europe&#34;)
 *             .build());
 * 
 *         var exampleSpringCloudService = new SpringCloudService(&#34;exampleSpringCloudService&#34;, SpringCloudServiceArgs.builder()        
 *             .location(exampleResourceGroup.location())
 *             .resourceGroupName(exampleResourceGroup.name())
 *             .skuName(&#34;E0&#34;)
 *             .build());
 * 
 *         var exampleSpringCloudGateway = new SpringCloudGateway(&#34;exampleSpringCloudGateway&#34;, SpringCloudGatewayArgs.builder()        
 *             .springCloudServiceId(exampleSpringCloudService.id())
 *             .build());
 * 
 *         var exampleSpringCloudApiPortal = new SpringCloudApiPortal(&#34;exampleSpringCloudApiPortal&#34;, SpringCloudApiPortalArgs.builder()        
 *             .springCloudServiceId(exampleSpringCloudService.id())
 *             .gatewayIds(exampleSpringCloudGateway.id())
 *             .build());
 * 
 *         var exampleSpringCloudApiPortalCustomDomain = new SpringCloudApiPortalCustomDomain(&#34;exampleSpringCloudApiPortalCustomDomain&#34;, SpringCloudApiPortalCustomDomainArgs.builder()        
 *             .springCloudApiPortalId(exampleSpringCloudApiPortal.id())
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * Spring Cloud API Portal Domains can be imported using the `resource id`, e.g.
 * 
 * ```sh
 *  $ pulumi import azure:appplatform/springCloudApiPortalCustomDomain:SpringCloudApiPortalCustomDomain example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resourceGroup1/providers/Microsoft.AppPlatform/spring/service1/apiPortals/apiPortal1/domains/domain1
 * ```
 * 
 */
@ResourceType(type="azure:appplatform/springCloudApiPortalCustomDomain:SpringCloudApiPortalCustomDomain")
public class SpringCloudApiPortalCustomDomain extends com.pulumi.resources.CustomResource {
    /**
     * The name which should be used for this Spring Cloud API Portal Domain. Changing this forces a new Spring Cloud API Portal Domain to be created.
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return The name which should be used for this Spring Cloud API Portal Domain. Changing this forces a new Spring Cloud API Portal Domain to be created.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The ID of the Spring Cloud API Portal. Changing this forces a new Spring Cloud API Portal Domain to be created.
     * 
     */
    @Export(name="springCloudApiPortalId", type=String.class, parameters={})
    private Output<String> springCloudApiPortalId;

    /**
     * @return The ID of the Spring Cloud API Portal. Changing this forces a new Spring Cloud API Portal Domain to be created.
     * 
     */
    public Output<String> springCloudApiPortalId() {
        return this.springCloudApiPortalId;
    }
    /**
     * Specifies the thumbprint of the Spring Cloud Certificate that binds to the Spring Cloud API Portal Domain.
     * 
     */
    @Export(name="thumbprint", type=String.class, parameters={})
    private Output</* @Nullable */ String> thumbprint;

    /**
     * @return Specifies the thumbprint of the Spring Cloud Certificate that binds to the Spring Cloud API Portal Domain.
     * 
     */
    public Output<Optional<String>> thumbprint() {
        return Codegen.optional(this.thumbprint);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public SpringCloudApiPortalCustomDomain(String name) {
        this(name, SpringCloudApiPortalCustomDomainArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public SpringCloudApiPortalCustomDomain(String name, SpringCloudApiPortalCustomDomainArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public SpringCloudApiPortalCustomDomain(String name, SpringCloudApiPortalCustomDomainArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:appplatform/springCloudApiPortalCustomDomain:SpringCloudApiPortalCustomDomain", name, args == null ? SpringCloudApiPortalCustomDomainArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private SpringCloudApiPortalCustomDomain(String name, Output<String> id, @Nullable SpringCloudApiPortalCustomDomainState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:appplatform/springCloudApiPortalCustomDomain:SpringCloudApiPortalCustomDomain", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static SpringCloudApiPortalCustomDomain get(String name, Output<String> id, @Nullable SpringCloudApiPortalCustomDomainState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new SpringCloudApiPortalCustomDomain(name, id, state, options);
    }
}
