// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.stack.inputs;

import com.pulumi.azure.stack.inputs.HciLogicalNetworkSubnetArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class HciLogicalNetworkState extends com.pulumi.resources.ResourceArgs {

    public static final HciLogicalNetworkState Empty = new HciLogicalNetworkState();

    /**
     * The ID of Custom Location where the Azure Stack HCI Logical Network should exist. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="customLocationId")
    private @Nullable Output<String> customLocationId;

    /**
     * @return The ID of Custom Location where the Azure Stack HCI Logical Network should exist. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> customLocationId() {
        return Optional.ofNullable(this.customLocationId);
    }

    /**
     * A list of IPv4 addresses of DNS servers available to VMs deployed in the Logical Networks. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="dnsServers")
    private @Nullable Output<List<String>> dnsServers;

    /**
     * @return A list of IPv4 addresses of DNS servers available to VMs deployed in the Logical Networks. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<List<String>>> dnsServers() {
        return Optional.ofNullable(this.dnsServers);
    }

    /**
     * The Azure Region where the Azure Stack HCI Logical Network should exist. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="location")
    private @Nullable Output<String> location;

    /**
     * @return The Azure Region where the Azure Stack HCI Logical Network should exist. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * The name which should be used for this Azure Stack HCI Logical Network. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name which should be used for this Azure Stack HCI Logical Network. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The name of the Resource Group where the Azure Stack HCI Logical Network should exist. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="resourceGroupName")
    private @Nullable Output<String> resourceGroupName;

    /**
     * @return The name of the Resource Group where the Azure Stack HCI Logical Network should exist. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> resourceGroupName() {
        return Optional.ofNullable(this.resourceGroupName);
    }

    /**
     * A `subnet` block as defined below. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="subnet")
    private @Nullable Output<HciLogicalNetworkSubnetArgs> subnet;

    /**
     * @return A `subnet` block as defined below. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<HciLogicalNetworkSubnetArgs>> subnet() {
        return Optional.ofNullable(this.subnet);
    }

    /**
     * A mapping of tags which should be assigned to the Azure Stack HCI Logical Network.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return A mapping of tags which should be assigned to the Azure Stack HCI Logical Network.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * The name of the virtual switch on the cluster used to associate with the Azure Stack HCI Logical Network. Possible switch names can be retrieved by following this [Azure guide](https://learn.microsoft.com/azure-stack/hci/manage/create-logical-networks?tabs=azurecli#prerequisites). Changing this forces a new resource to be created.
     * 
     */
    @Import(name="virtualSwitchName")
    private @Nullable Output<String> virtualSwitchName;

    /**
     * @return The name of the virtual switch on the cluster used to associate with the Azure Stack HCI Logical Network. Possible switch names can be retrieved by following this [Azure guide](https://learn.microsoft.com/azure-stack/hci/manage/create-logical-networks?tabs=azurecli#prerequisites). Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> virtualSwitchName() {
        return Optional.ofNullable(this.virtualSwitchName);
    }

    private HciLogicalNetworkState() {}

    private HciLogicalNetworkState(HciLogicalNetworkState $) {
        this.customLocationId = $.customLocationId;
        this.dnsServers = $.dnsServers;
        this.location = $.location;
        this.name = $.name;
        this.resourceGroupName = $.resourceGroupName;
        this.subnet = $.subnet;
        this.tags = $.tags;
        this.virtualSwitchName = $.virtualSwitchName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(HciLogicalNetworkState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private HciLogicalNetworkState $;

        public Builder() {
            $ = new HciLogicalNetworkState();
        }

        public Builder(HciLogicalNetworkState defaults) {
            $ = new HciLogicalNetworkState(Objects.requireNonNull(defaults));
        }

        /**
         * @param customLocationId The ID of Custom Location where the Azure Stack HCI Logical Network should exist. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder customLocationId(@Nullable Output<String> customLocationId) {
            $.customLocationId = customLocationId;
            return this;
        }

        /**
         * @param customLocationId The ID of Custom Location where the Azure Stack HCI Logical Network should exist. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder customLocationId(String customLocationId) {
            return customLocationId(Output.of(customLocationId));
        }

        /**
         * @param dnsServers A list of IPv4 addresses of DNS servers available to VMs deployed in the Logical Networks. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder dnsServers(@Nullable Output<List<String>> dnsServers) {
            $.dnsServers = dnsServers;
            return this;
        }

        /**
         * @param dnsServers A list of IPv4 addresses of DNS servers available to VMs deployed in the Logical Networks. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder dnsServers(List<String> dnsServers) {
            return dnsServers(Output.of(dnsServers));
        }

        /**
         * @param dnsServers A list of IPv4 addresses of DNS servers available to VMs deployed in the Logical Networks. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder dnsServers(String... dnsServers) {
            return dnsServers(List.of(dnsServers));
        }

        /**
         * @param location The Azure Region where the Azure Stack HCI Logical Network should exist. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location The Azure Region where the Azure Stack HCI Logical Network should exist. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param name The name which should be used for this Azure Stack HCI Logical Network. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name which should be used for this Azure Stack HCI Logical Network. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param resourceGroupName The name of the Resource Group where the Azure Stack HCI Logical Network should exist. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(@Nullable Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName The name of the Resource Group where the Azure Stack HCI Logical Network should exist. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        /**
         * @param subnet A `subnet` block as defined below. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder subnet(@Nullable Output<HciLogicalNetworkSubnetArgs> subnet) {
            $.subnet = subnet;
            return this;
        }

        /**
         * @param subnet A `subnet` block as defined below. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder subnet(HciLogicalNetworkSubnetArgs subnet) {
            return subnet(Output.of(subnet));
        }

        /**
         * @param tags A mapping of tags which should be assigned to the Azure Stack HCI Logical Network.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags A mapping of tags which should be assigned to the Azure Stack HCI Logical Network.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param virtualSwitchName The name of the virtual switch on the cluster used to associate with the Azure Stack HCI Logical Network. Possible switch names can be retrieved by following this [Azure guide](https://learn.microsoft.com/azure-stack/hci/manage/create-logical-networks?tabs=azurecli#prerequisites). Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder virtualSwitchName(@Nullable Output<String> virtualSwitchName) {
            $.virtualSwitchName = virtualSwitchName;
            return this;
        }

        /**
         * @param virtualSwitchName The name of the virtual switch on the cluster used to associate with the Azure Stack HCI Logical Network. Possible switch names can be retrieved by following this [Azure guide](https://learn.microsoft.com/azure-stack/hci/manage/create-logical-networks?tabs=azurecli#prerequisites). Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder virtualSwitchName(String virtualSwitchName) {
            return virtualSwitchName(Output.of(virtualSwitchName));
        }

        public HciLogicalNetworkState build() {
            return $;
        }
    }

}
