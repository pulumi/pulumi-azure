// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.compute;

import com.pulumi.azure.compute.inputs.ScaleSetBootDiagnosticsArgs;
import com.pulumi.azure.compute.inputs.ScaleSetExtensionArgs;
import com.pulumi.azure.compute.inputs.ScaleSetIdentityArgs;
import com.pulumi.azure.compute.inputs.ScaleSetNetworkProfileArgs;
import com.pulumi.azure.compute.inputs.ScaleSetOsProfileArgs;
import com.pulumi.azure.compute.inputs.ScaleSetOsProfileLinuxConfigArgs;
import com.pulumi.azure.compute.inputs.ScaleSetOsProfileSecretArgs;
import com.pulumi.azure.compute.inputs.ScaleSetOsProfileWindowsConfigArgs;
import com.pulumi.azure.compute.inputs.ScaleSetPlanArgs;
import com.pulumi.azure.compute.inputs.ScaleSetRollingUpgradePolicyArgs;
import com.pulumi.azure.compute.inputs.ScaleSetSkuArgs;
import com.pulumi.azure.compute.inputs.ScaleSetStorageProfileDataDiskArgs;
import com.pulumi.azure.compute.inputs.ScaleSetStorageProfileImageReferenceArgs;
import com.pulumi.azure.compute.inputs.ScaleSetStorageProfileOsDiskArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ScaleSetArgs extends com.pulumi.resources.ResourceArgs {

    public static final ScaleSetArgs Empty = new ScaleSetArgs();

    /**
     * Automatic OS patches can be applied by Azure to your scaleset. This is particularly useful when `upgrade_policy_mode` is set to `Rolling`. Defaults to `false`.
     * 
     */
    @Import(name="automaticOsUpgrade")
    private @Nullable Output<Boolean> automaticOsUpgrade;

    /**
     * @return Automatic OS patches can be applied by Azure to your scaleset. This is particularly useful when `upgrade_policy_mode` is set to `Rolling`. Defaults to `false`.
     * 
     */
    public Optional<Output<Boolean>> automaticOsUpgrade() {
        return Optional.ofNullable(this.automaticOsUpgrade);
    }

    /**
     * A `boot_diagnostics` block as referenced below.
     * 
     */
    @Import(name="bootDiagnostics")
    private @Nullable Output<ScaleSetBootDiagnosticsArgs> bootDiagnostics;

    /**
     * @return A `boot_diagnostics` block as referenced below.
     * 
     */
    public Optional<Output<ScaleSetBootDiagnosticsArgs>> bootDiagnostics() {
        return Optional.ofNullable(this.bootDiagnostics);
    }

    /**
     * Specifies the eviction policy for Virtual Machines in this Scale Set. Possible values are `Deallocate` and `Delete`. Changing this forces a new resource to be created.
     * 
     * &gt; **NOTE:** `eviction_policy` can only be set when `priority` is set to `Low`.
     * 
     */
    @Import(name="evictionPolicy")
    private @Nullable Output<String> evictionPolicy;

    /**
     * @return Specifies the eviction policy for Virtual Machines in this Scale Set. Possible values are `Deallocate` and `Delete`. Changing this forces a new resource to be created.
     * 
     * &gt; **NOTE:** `eviction_policy` can only be set when `priority` is set to `Low`.
     * 
     */
    public Optional<Output<String>> evictionPolicy() {
        return Optional.ofNullable(this.evictionPolicy);
    }

    /**
     * Can be specified multiple times to add extension profiles to the scale set. Each `extension` block supports the fields documented below.
     * 
     */
    @Import(name="extensions")
    private @Nullable Output<List<ScaleSetExtensionArgs>> extensions;

    /**
     * @return Can be specified multiple times to add extension profiles to the scale set. Each `extension` block supports the fields documented below.
     * 
     */
    public Optional<Output<List<ScaleSetExtensionArgs>>> extensions() {
        return Optional.ofNullable(this.extensions);
    }

    /**
     * Specifies the identifier for the load balancer health probe. Required when using `Rolling` as your `upgrade_policy_mode`.
     * 
     */
    @Import(name="healthProbeId")
    private @Nullable Output<String> healthProbeId;

    /**
     * @return Specifies the identifier for the load balancer health probe. Required when using `Rolling` as your `upgrade_policy_mode`.
     * 
     */
    public Optional<Output<String>> healthProbeId() {
        return Optional.ofNullable(this.healthProbeId);
    }

    /**
     * An `identity` block as defined below.
     * 
     */
    @Import(name="identity")
    private @Nullable Output<ScaleSetIdentityArgs> identity;

    /**
     * @return An `identity` block as defined below.
     * 
     */
    public Optional<Output<ScaleSetIdentityArgs>> identity() {
        return Optional.ofNullable(this.identity);
    }

    /**
     * (Optional, when a Windows machine) Specifies the Windows OS license type. If supplied, the only allowed values are `Windows_Client` and `Windows_Server`.
     * 
     */
    @Import(name="licenseType")
    private @Nullable Output<String> licenseType;

    /**
     * @return (Optional, when a Windows machine) Specifies the Windows OS license type. If supplied, the only allowed values are `Windows_Client` and `Windows_Server`.
     * 
     */
    public Optional<Output<String>> licenseType() {
        return Optional.ofNullable(this.licenseType);
    }

    /**
     * Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="location")
    private @Nullable Output<String> location;

    /**
     * @return Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * Specifies the name of the virtual machine scale set resource. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Specifies the name of the virtual machine scale set resource. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * A collection of `network_profile` blocks as documented below.
     * 
     */
    @Import(name="networkProfiles", required=true)
    private Output<List<ScaleSetNetworkProfileArgs>> networkProfiles;

    /**
     * @return A collection of `network_profile` blocks as documented below.
     * 
     */
    public Output<List<ScaleSetNetworkProfileArgs>> networkProfiles() {
        return this.networkProfiles;
    }

    /**
     * A `os_profile` block as documented below.
     * 
     */
    @Import(name="osProfile", required=true)
    private Output<ScaleSetOsProfileArgs> osProfile;

    /**
     * @return A `os_profile` block as documented below.
     * 
     */
    public Output<ScaleSetOsProfileArgs> osProfile() {
        return this.osProfile;
    }

    /**
     * A `os_profile_linux_config` block as documented below.
     * 
     */
    @Import(name="osProfileLinuxConfig")
    private @Nullable Output<ScaleSetOsProfileLinuxConfigArgs> osProfileLinuxConfig;

    /**
     * @return A `os_profile_linux_config` block as documented below.
     * 
     */
    public Optional<Output<ScaleSetOsProfileLinuxConfigArgs>> osProfileLinuxConfig() {
        return Optional.ofNullable(this.osProfileLinuxConfig);
    }

    /**
     * A collection of `os_profile_secrets` blocks as documented below.
     * 
     */
    @Import(name="osProfileSecrets")
    private @Nullable Output<List<ScaleSetOsProfileSecretArgs>> osProfileSecrets;

    /**
     * @return A collection of `os_profile_secrets` blocks as documented below.
     * 
     */
    public Optional<Output<List<ScaleSetOsProfileSecretArgs>>> osProfileSecrets() {
        return Optional.ofNullable(this.osProfileSecrets);
    }

    /**
     * A `os_profile_windows_config` block as documented below.
     * 
     */
    @Import(name="osProfileWindowsConfig")
    private @Nullable Output<ScaleSetOsProfileWindowsConfigArgs> osProfileWindowsConfig;

    /**
     * @return A `os_profile_windows_config` block as documented below.
     * 
     */
    public Optional<Output<ScaleSetOsProfileWindowsConfigArgs>> osProfileWindowsConfig() {
        return Optional.ofNullable(this.osProfileWindowsConfig);
    }

    /**
     * Specifies whether the virtual machine scale set should be overprovisioned. Defaults to `true`.
     * 
     */
    @Import(name="overprovision")
    private @Nullable Output<Boolean> overprovision;

    /**
     * @return Specifies whether the virtual machine scale set should be overprovisioned. Defaults to `true`.
     * 
     */
    public Optional<Output<Boolean>> overprovision() {
        return Optional.ofNullable(this.overprovision);
    }

    /**
     * A `plan` block as documented below.
     * 
     */
    @Import(name="plan")
    private @Nullable Output<ScaleSetPlanArgs> plan;

    /**
     * @return A `plan` block as documented below.
     * 
     */
    public Optional<Output<ScaleSetPlanArgs>> plan() {
        return Optional.ofNullable(this.plan);
    }

    /**
     * Specifies the priority for the Virtual Machines in the Scale Set. Possible values are `Low` and `Regular`. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="priority")
    private @Nullable Output<String> priority;

    /**
     * @return Specifies the priority for the Virtual Machines in the Scale Set. Possible values are `Low` and `Regular`. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> priority() {
        return Optional.ofNullable(this.priority);
    }

    /**
     * The ID of the Proximity Placement Group to which this Virtual Machine should be assigned. Changing this forces a new resource to be created
     * 
     */
    @Import(name="proximityPlacementGroupId")
    private @Nullable Output<String> proximityPlacementGroupId;

    /**
     * @return The ID of the Proximity Placement Group to which this Virtual Machine should be assigned. Changing this forces a new resource to be created
     * 
     */
    public Optional<Output<String>> proximityPlacementGroupId() {
        return Optional.ofNullable(this.proximityPlacementGroupId);
    }

    /**
     * The name of the resource group in which to create the virtual machine scale set. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    /**
     * @return The name of the resource group in which to create the virtual machine scale set. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * A `rolling_upgrade_policy` block as defined below. This is only applicable when the `upgrade_policy_mode` is `Rolling`.
     * 
     */
    @Import(name="rollingUpgradePolicy")
    private @Nullable Output<ScaleSetRollingUpgradePolicyArgs> rollingUpgradePolicy;

    /**
     * @return A `rolling_upgrade_policy` block as defined below. This is only applicable when the `upgrade_policy_mode` is `Rolling`.
     * 
     */
    public Optional<Output<ScaleSetRollingUpgradePolicyArgs>> rollingUpgradePolicy() {
        return Optional.ofNullable(this.rollingUpgradePolicy);
    }

    /**
     * Specifies whether the scale set is limited to a single placement group with a maximum size of 100 virtual machines. If set to false, managed disks must be used. Changing this forces a new resource to be created. See [documentation](https://docs.microsoft.com/azure/virtual-machine-scale-sets/virtual-machine-scale-sets-placement-groups) for more information. Defaults to `true`.
     * 
     */
    @Import(name="singlePlacementGroup")
    private @Nullable Output<Boolean> singlePlacementGroup;

    /**
     * @return Specifies whether the scale set is limited to a single placement group with a maximum size of 100 virtual machines. If set to false, managed disks must be used. Changing this forces a new resource to be created. See [documentation](https://docs.microsoft.com/azure/virtual-machine-scale-sets/virtual-machine-scale-sets-placement-groups) for more information. Defaults to `true`.
     * 
     */
    public Optional<Output<Boolean>> singlePlacementGroup() {
        return Optional.ofNullable(this.singlePlacementGroup);
    }

    /**
     * A `sku` block as documented below.
     * 
     */
    @Import(name="sku", required=true)
    private Output<ScaleSetSkuArgs> sku;

    /**
     * @return A `sku` block as documented below.
     * 
     */
    public Output<ScaleSetSkuArgs> sku() {
        return this.sku;
    }

    /**
     * A `storage_profile_data_disk` block as documented below.
     * 
     */
    @Import(name="storageProfileDataDisks")
    private @Nullable Output<List<ScaleSetStorageProfileDataDiskArgs>> storageProfileDataDisks;

    /**
     * @return A `storage_profile_data_disk` block as documented below.
     * 
     */
    public Optional<Output<List<ScaleSetStorageProfileDataDiskArgs>>> storageProfileDataDisks() {
        return Optional.ofNullable(this.storageProfileDataDisks);
    }

    /**
     * A `storage_profile_image_reference` block as documented below.
     * 
     */
    @Import(name="storageProfileImageReference")
    private @Nullable Output<ScaleSetStorageProfileImageReferenceArgs> storageProfileImageReference;

    /**
     * @return A `storage_profile_image_reference` block as documented below.
     * 
     */
    public Optional<Output<ScaleSetStorageProfileImageReferenceArgs>> storageProfileImageReference() {
        return Optional.ofNullable(this.storageProfileImageReference);
    }

    /**
     * A `storage_profile_os_disk` block as documented below.
     * 
     */
    @Import(name="storageProfileOsDisk", required=true)
    private Output<ScaleSetStorageProfileOsDiskArgs> storageProfileOsDisk;

    /**
     * @return A `storage_profile_os_disk` block as documented below.
     * 
     */
    public Output<ScaleSetStorageProfileOsDiskArgs> storageProfileOsDisk() {
        return this.storageProfileOsDisk;
    }

    /**
     * A mapping of tags to assign to the resource.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return A mapping of tags to assign to the resource.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * Specifies the mode of an upgrade to virtual machines in the scale set. Possible values, `Rolling`, `Manual`, or `Automatic`. When choosing `Rolling`, you will need to set a health probe.
     * 
     */
    @Import(name="upgradePolicyMode", required=true)
    private Output<String> upgradePolicyMode;

    /**
     * @return Specifies the mode of an upgrade to virtual machines in the scale set. Possible values, `Rolling`, `Manual`, or `Automatic`. When choosing `Rolling`, you will need to set a health probe.
     * 
     */
    public Output<String> upgradePolicyMode() {
        return this.upgradePolicyMode;
    }

    /**
     * A collection of availability zones to spread the Virtual Machines over. Changing this forces a new resource to be created.
     * 
     * &gt; **NOTE:** Availability Zones are [only supported in several regions at this time](https://docs.microsoft.com/azure/availability-zones/az-overview).
     * 
     */
    @Import(name="zones")
    private @Nullable Output<List<String>> zones;

    /**
     * @return A collection of availability zones to spread the Virtual Machines over. Changing this forces a new resource to be created.
     * 
     * &gt; **NOTE:** Availability Zones are [only supported in several regions at this time](https://docs.microsoft.com/azure/availability-zones/az-overview).
     * 
     */
    public Optional<Output<List<String>>> zones() {
        return Optional.ofNullable(this.zones);
    }

    private ScaleSetArgs() {}

    private ScaleSetArgs(ScaleSetArgs $) {
        this.automaticOsUpgrade = $.automaticOsUpgrade;
        this.bootDiagnostics = $.bootDiagnostics;
        this.evictionPolicy = $.evictionPolicy;
        this.extensions = $.extensions;
        this.healthProbeId = $.healthProbeId;
        this.identity = $.identity;
        this.licenseType = $.licenseType;
        this.location = $.location;
        this.name = $.name;
        this.networkProfiles = $.networkProfiles;
        this.osProfile = $.osProfile;
        this.osProfileLinuxConfig = $.osProfileLinuxConfig;
        this.osProfileSecrets = $.osProfileSecrets;
        this.osProfileWindowsConfig = $.osProfileWindowsConfig;
        this.overprovision = $.overprovision;
        this.plan = $.plan;
        this.priority = $.priority;
        this.proximityPlacementGroupId = $.proximityPlacementGroupId;
        this.resourceGroupName = $.resourceGroupName;
        this.rollingUpgradePolicy = $.rollingUpgradePolicy;
        this.singlePlacementGroup = $.singlePlacementGroup;
        this.sku = $.sku;
        this.storageProfileDataDisks = $.storageProfileDataDisks;
        this.storageProfileImageReference = $.storageProfileImageReference;
        this.storageProfileOsDisk = $.storageProfileOsDisk;
        this.tags = $.tags;
        this.upgradePolicyMode = $.upgradePolicyMode;
        this.zones = $.zones;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ScaleSetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ScaleSetArgs $;

        public Builder() {
            $ = new ScaleSetArgs();
        }

        public Builder(ScaleSetArgs defaults) {
            $ = new ScaleSetArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param automaticOsUpgrade Automatic OS patches can be applied by Azure to your scaleset. This is particularly useful when `upgrade_policy_mode` is set to `Rolling`. Defaults to `false`.
         * 
         * @return builder
         * 
         */
        public Builder automaticOsUpgrade(@Nullable Output<Boolean> automaticOsUpgrade) {
            $.automaticOsUpgrade = automaticOsUpgrade;
            return this;
        }

        /**
         * @param automaticOsUpgrade Automatic OS patches can be applied by Azure to your scaleset. This is particularly useful when `upgrade_policy_mode` is set to `Rolling`. Defaults to `false`.
         * 
         * @return builder
         * 
         */
        public Builder automaticOsUpgrade(Boolean automaticOsUpgrade) {
            return automaticOsUpgrade(Output.of(automaticOsUpgrade));
        }

        /**
         * @param bootDiagnostics A `boot_diagnostics` block as referenced below.
         * 
         * @return builder
         * 
         */
        public Builder bootDiagnostics(@Nullable Output<ScaleSetBootDiagnosticsArgs> bootDiagnostics) {
            $.bootDiagnostics = bootDiagnostics;
            return this;
        }

        /**
         * @param bootDiagnostics A `boot_diagnostics` block as referenced below.
         * 
         * @return builder
         * 
         */
        public Builder bootDiagnostics(ScaleSetBootDiagnosticsArgs bootDiagnostics) {
            return bootDiagnostics(Output.of(bootDiagnostics));
        }

        /**
         * @param evictionPolicy Specifies the eviction policy for Virtual Machines in this Scale Set. Possible values are `Deallocate` and `Delete`. Changing this forces a new resource to be created.
         * 
         * &gt; **NOTE:** `eviction_policy` can only be set when `priority` is set to `Low`.
         * 
         * @return builder
         * 
         */
        public Builder evictionPolicy(@Nullable Output<String> evictionPolicy) {
            $.evictionPolicy = evictionPolicy;
            return this;
        }

        /**
         * @param evictionPolicy Specifies the eviction policy for Virtual Machines in this Scale Set. Possible values are `Deallocate` and `Delete`. Changing this forces a new resource to be created.
         * 
         * &gt; **NOTE:** `eviction_policy` can only be set when `priority` is set to `Low`.
         * 
         * @return builder
         * 
         */
        public Builder evictionPolicy(String evictionPolicy) {
            return evictionPolicy(Output.of(evictionPolicy));
        }

        /**
         * @param extensions Can be specified multiple times to add extension profiles to the scale set. Each `extension` block supports the fields documented below.
         * 
         * @return builder
         * 
         */
        public Builder extensions(@Nullable Output<List<ScaleSetExtensionArgs>> extensions) {
            $.extensions = extensions;
            return this;
        }

        /**
         * @param extensions Can be specified multiple times to add extension profiles to the scale set. Each `extension` block supports the fields documented below.
         * 
         * @return builder
         * 
         */
        public Builder extensions(List<ScaleSetExtensionArgs> extensions) {
            return extensions(Output.of(extensions));
        }

        /**
         * @param extensions Can be specified multiple times to add extension profiles to the scale set. Each `extension` block supports the fields documented below.
         * 
         * @return builder
         * 
         */
        public Builder extensions(ScaleSetExtensionArgs... extensions) {
            return extensions(List.of(extensions));
        }

        /**
         * @param healthProbeId Specifies the identifier for the load balancer health probe. Required when using `Rolling` as your `upgrade_policy_mode`.
         * 
         * @return builder
         * 
         */
        public Builder healthProbeId(@Nullable Output<String> healthProbeId) {
            $.healthProbeId = healthProbeId;
            return this;
        }

        /**
         * @param healthProbeId Specifies the identifier for the load balancer health probe. Required when using `Rolling` as your `upgrade_policy_mode`.
         * 
         * @return builder
         * 
         */
        public Builder healthProbeId(String healthProbeId) {
            return healthProbeId(Output.of(healthProbeId));
        }

        /**
         * @param identity An `identity` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder identity(@Nullable Output<ScaleSetIdentityArgs> identity) {
            $.identity = identity;
            return this;
        }

        /**
         * @param identity An `identity` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder identity(ScaleSetIdentityArgs identity) {
            return identity(Output.of(identity));
        }

        /**
         * @param licenseType (Optional, when a Windows machine) Specifies the Windows OS license type. If supplied, the only allowed values are `Windows_Client` and `Windows_Server`.
         * 
         * @return builder
         * 
         */
        public Builder licenseType(@Nullable Output<String> licenseType) {
            $.licenseType = licenseType;
            return this;
        }

        /**
         * @param licenseType (Optional, when a Windows machine) Specifies the Windows OS license type. If supplied, the only allowed values are `Windows_Client` and `Windows_Server`.
         * 
         * @return builder
         * 
         */
        public Builder licenseType(String licenseType) {
            return licenseType(Output.of(licenseType));
        }

        /**
         * @param location Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param name Specifies the name of the virtual machine scale set resource. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Specifies the name of the virtual machine scale set resource. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param networkProfiles A collection of `network_profile` blocks as documented below.
         * 
         * @return builder
         * 
         */
        public Builder networkProfiles(Output<List<ScaleSetNetworkProfileArgs>> networkProfiles) {
            $.networkProfiles = networkProfiles;
            return this;
        }

        /**
         * @param networkProfiles A collection of `network_profile` blocks as documented below.
         * 
         * @return builder
         * 
         */
        public Builder networkProfiles(List<ScaleSetNetworkProfileArgs> networkProfiles) {
            return networkProfiles(Output.of(networkProfiles));
        }

        /**
         * @param networkProfiles A collection of `network_profile` blocks as documented below.
         * 
         * @return builder
         * 
         */
        public Builder networkProfiles(ScaleSetNetworkProfileArgs... networkProfiles) {
            return networkProfiles(List.of(networkProfiles));
        }

        /**
         * @param osProfile A `os_profile` block as documented below.
         * 
         * @return builder
         * 
         */
        public Builder osProfile(Output<ScaleSetOsProfileArgs> osProfile) {
            $.osProfile = osProfile;
            return this;
        }

        /**
         * @param osProfile A `os_profile` block as documented below.
         * 
         * @return builder
         * 
         */
        public Builder osProfile(ScaleSetOsProfileArgs osProfile) {
            return osProfile(Output.of(osProfile));
        }

        /**
         * @param osProfileLinuxConfig A `os_profile_linux_config` block as documented below.
         * 
         * @return builder
         * 
         */
        public Builder osProfileLinuxConfig(@Nullable Output<ScaleSetOsProfileLinuxConfigArgs> osProfileLinuxConfig) {
            $.osProfileLinuxConfig = osProfileLinuxConfig;
            return this;
        }

        /**
         * @param osProfileLinuxConfig A `os_profile_linux_config` block as documented below.
         * 
         * @return builder
         * 
         */
        public Builder osProfileLinuxConfig(ScaleSetOsProfileLinuxConfigArgs osProfileLinuxConfig) {
            return osProfileLinuxConfig(Output.of(osProfileLinuxConfig));
        }

        /**
         * @param osProfileSecrets A collection of `os_profile_secrets` blocks as documented below.
         * 
         * @return builder
         * 
         */
        public Builder osProfileSecrets(@Nullable Output<List<ScaleSetOsProfileSecretArgs>> osProfileSecrets) {
            $.osProfileSecrets = osProfileSecrets;
            return this;
        }

        /**
         * @param osProfileSecrets A collection of `os_profile_secrets` blocks as documented below.
         * 
         * @return builder
         * 
         */
        public Builder osProfileSecrets(List<ScaleSetOsProfileSecretArgs> osProfileSecrets) {
            return osProfileSecrets(Output.of(osProfileSecrets));
        }

        /**
         * @param osProfileSecrets A collection of `os_profile_secrets` blocks as documented below.
         * 
         * @return builder
         * 
         */
        public Builder osProfileSecrets(ScaleSetOsProfileSecretArgs... osProfileSecrets) {
            return osProfileSecrets(List.of(osProfileSecrets));
        }

        /**
         * @param osProfileWindowsConfig A `os_profile_windows_config` block as documented below.
         * 
         * @return builder
         * 
         */
        public Builder osProfileWindowsConfig(@Nullable Output<ScaleSetOsProfileWindowsConfigArgs> osProfileWindowsConfig) {
            $.osProfileWindowsConfig = osProfileWindowsConfig;
            return this;
        }

        /**
         * @param osProfileWindowsConfig A `os_profile_windows_config` block as documented below.
         * 
         * @return builder
         * 
         */
        public Builder osProfileWindowsConfig(ScaleSetOsProfileWindowsConfigArgs osProfileWindowsConfig) {
            return osProfileWindowsConfig(Output.of(osProfileWindowsConfig));
        }

        /**
         * @param overprovision Specifies whether the virtual machine scale set should be overprovisioned. Defaults to `true`.
         * 
         * @return builder
         * 
         */
        public Builder overprovision(@Nullable Output<Boolean> overprovision) {
            $.overprovision = overprovision;
            return this;
        }

        /**
         * @param overprovision Specifies whether the virtual machine scale set should be overprovisioned. Defaults to `true`.
         * 
         * @return builder
         * 
         */
        public Builder overprovision(Boolean overprovision) {
            return overprovision(Output.of(overprovision));
        }

        /**
         * @param plan A `plan` block as documented below.
         * 
         * @return builder
         * 
         */
        public Builder plan(@Nullable Output<ScaleSetPlanArgs> plan) {
            $.plan = plan;
            return this;
        }

        /**
         * @param plan A `plan` block as documented below.
         * 
         * @return builder
         * 
         */
        public Builder plan(ScaleSetPlanArgs plan) {
            return plan(Output.of(plan));
        }

        /**
         * @param priority Specifies the priority for the Virtual Machines in the Scale Set. Possible values are `Low` and `Regular`. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder priority(@Nullable Output<String> priority) {
            $.priority = priority;
            return this;
        }

        /**
         * @param priority Specifies the priority for the Virtual Machines in the Scale Set. Possible values are `Low` and `Regular`. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder priority(String priority) {
            return priority(Output.of(priority));
        }

        /**
         * @param proximityPlacementGroupId The ID of the Proximity Placement Group to which this Virtual Machine should be assigned. Changing this forces a new resource to be created
         * 
         * @return builder
         * 
         */
        public Builder proximityPlacementGroupId(@Nullable Output<String> proximityPlacementGroupId) {
            $.proximityPlacementGroupId = proximityPlacementGroupId;
            return this;
        }

        /**
         * @param proximityPlacementGroupId The ID of the Proximity Placement Group to which this Virtual Machine should be assigned. Changing this forces a new resource to be created
         * 
         * @return builder
         * 
         */
        public Builder proximityPlacementGroupId(String proximityPlacementGroupId) {
            return proximityPlacementGroupId(Output.of(proximityPlacementGroupId));
        }

        /**
         * @param resourceGroupName The name of the resource group in which to create the virtual machine scale set. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName The name of the resource group in which to create the virtual machine scale set. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        /**
         * @param rollingUpgradePolicy A `rolling_upgrade_policy` block as defined below. This is only applicable when the `upgrade_policy_mode` is `Rolling`.
         * 
         * @return builder
         * 
         */
        public Builder rollingUpgradePolicy(@Nullable Output<ScaleSetRollingUpgradePolicyArgs> rollingUpgradePolicy) {
            $.rollingUpgradePolicy = rollingUpgradePolicy;
            return this;
        }

        /**
         * @param rollingUpgradePolicy A `rolling_upgrade_policy` block as defined below. This is only applicable when the `upgrade_policy_mode` is `Rolling`.
         * 
         * @return builder
         * 
         */
        public Builder rollingUpgradePolicy(ScaleSetRollingUpgradePolicyArgs rollingUpgradePolicy) {
            return rollingUpgradePolicy(Output.of(rollingUpgradePolicy));
        }

        /**
         * @param singlePlacementGroup Specifies whether the scale set is limited to a single placement group with a maximum size of 100 virtual machines. If set to false, managed disks must be used. Changing this forces a new resource to be created. See [documentation](https://docs.microsoft.com/azure/virtual-machine-scale-sets/virtual-machine-scale-sets-placement-groups) for more information. Defaults to `true`.
         * 
         * @return builder
         * 
         */
        public Builder singlePlacementGroup(@Nullable Output<Boolean> singlePlacementGroup) {
            $.singlePlacementGroup = singlePlacementGroup;
            return this;
        }

        /**
         * @param singlePlacementGroup Specifies whether the scale set is limited to a single placement group with a maximum size of 100 virtual machines. If set to false, managed disks must be used. Changing this forces a new resource to be created. See [documentation](https://docs.microsoft.com/azure/virtual-machine-scale-sets/virtual-machine-scale-sets-placement-groups) for more information. Defaults to `true`.
         * 
         * @return builder
         * 
         */
        public Builder singlePlacementGroup(Boolean singlePlacementGroup) {
            return singlePlacementGroup(Output.of(singlePlacementGroup));
        }

        /**
         * @param sku A `sku` block as documented below.
         * 
         * @return builder
         * 
         */
        public Builder sku(Output<ScaleSetSkuArgs> sku) {
            $.sku = sku;
            return this;
        }

        /**
         * @param sku A `sku` block as documented below.
         * 
         * @return builder
         * 
         */
        public Builder sku(ScaleSetSkuArgs sku) {
            return sku(Output.of(sku));
        }

        /**
         * @param storageProfileDataDisks A `storage_profile_data_disk` block as documented below.
         * 
         * @return builder
         * 
         */
        public Builder storageProfileDataDisks(@Nullable Output<List<ScaleSetStorageProfileDataDiskArgs>> storageProfileDataDisks) {
            $.storageProfileDataDisks = storageProfileDataDisks;
            return this;
        }

        /**
         * @param storageProfileDataDisks A `storage_profile_data_disk` block as documented below.
         * 
         * @return builder
         * 
         */
        public Builder storageProfileDataDisks(List<ScaleSetStorageProfileDataDiskArgs> storageProfileDataDisks) {
            return storageProfileDataDisks(Output.of(storageProfileDataDisks));
        }

        /**
         * @param storageProfileDataDisks A `storage_profile_data_disk` block as documented below.
         * 
         * @return builder
         * 
         */
        public Builder storageProfileDataDisks(ScaleSetStorageProfileDataDiskArgs... storageProfileDataDisks) {
            return storageProfileDataDisks(List.of(storageProfileDataDisks));
        }

        /**
         * @param storageProfileImageReference A `storage_profile_image_reference` block as documented below.
         * 
         * @return builder
         * 
         */
        public Builder storageProfileImageReference(@Nullable Output<ScaleSetStorageProfileImageReferenceArgs> storageProfileImageReference) {
            $.storageProfileImageReference = storageProfileImageReference;
            return this;
        }

        /**
         * @param storageProfileImageReference A `storage_profile_image_reference` block as documented below.
         * 
         * @return builder
         * 
         */
        public Builder storageProfileImageReference(ScaleSetStorageProfileImageReferenceArgs storageProfileImageReference) {
            return storageProfileImageReference(Output.of(storageProfileImageReference));
        }

        /**
         * @param storageProfileOsDisk A `storage_profile_os_disk` block as documented below.
         * 
         * @return builder
         * 
         */
        public Builder storageProfileOsDisk(Output<ScaleSetStorageProfileOsDiskArgs> storageProfileOsDisk) {
            $.storageProfileOsDisk = storageProfileOsDisk;
            return this;
        }

        /**
         * @param storageProfileOsDisk A `storage_profile_os_disk` block as documented below.
         * 
         * @return builder
         * 
         */
        public Builder storageProfileOsDisk(ScaleSetStorageProfileOsDiskArgs storageProfileOsDisk) {
            return storageProfileOsDisk(Output.of(storageProfileOsDisk));
        }

        /**
         * @param tags A mapping of tags to assign to the resource.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags A mapping of tags to assign to the resource.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param upgradePolicyMode Specifies the mode of an upgrade to virtual machines in the scale set. Possible values, `Rolling`, `Manual`, or `Automatic`. When choosing `Rolling`, you will need to set a health probe.
         * 
         * @return builder
         * 
         */
        public Builder upgradePolicyMode(Output<String> upgradePolicyMode) {
            $.upgradePolicyMode = upgradePolicyMode;
            return this;
        }

        /**
         * @param upgradePolicyMode Specifies the mode of an upgrade to virtual machines in the scale set. Possible values, `Rolling`, `Manual`, or `Automatic`. When choosing `Rolling`, you will need to set a health probe.
         * 
         * @return builder
         * 
         */
        public Builder upgradePolicyMode(String upgradePolicyMode) {
            return upgradePolicyMode(Output.of(upgradePolicyMode));
        }

        /**
         * @param zones A collection of availability zones to spread the Virtual Machines over. Changing this forces a new resource to be created.
         * 
         * &gt; **NOTE:** Availability Zones are [only supported in several regions at this time](https://docs.microsoft.com/azure/availability-zones/az-overview).
         * 
         * @return builder
         * 
         */
        public Builder zones(@Nullable Output<List<String>> zones) {
            $.zones = zones;
            return this;
        }

        /**
         * @param zones A collection of availability zones to spread the Virtual Machines over. Changing this forces a new resource to be created.
         * 
         * &gt; **NOTE:** Availability Zones are [only supported in several regions at this time](https://docs.microsoft.com/azure/availability-zones/az-overview).
         * 
         * @return builder
         * 
         */
        public Builder zones(List<String> zones) {
            return zones(Output.of(zones));
        }

        /**
         * @param zones A collection of availability zones to spread the Virtual Machines over. Changing this forces a new resource to be created.
         * 
         * &gt; **NOTE:** Availability Zones are [only supported in several regions at this time](https://docs.microsoft.com/azure/availability-zones/az-overview).
         * 
         * @return builder
         * 
         */
        public Builder zones(String... zones) {
            return zones(List.of(zones));
        }

        public ScaleSetArgs build() {
            if ($.networkProfiles == null) {
                throw new MissingRequiredPropertyException("ScaleSetArgs", "networkProfiles");
            }
            if ($.osProfile == null) {
                throw new MissingRequiredPropertyException("ScaleSetArgs", "osProfile");
            }
            if ($.resourceGroupName == null) {
                throw new MissingRequiredPropertyException("ScaleSetArgs", "resourceGroupName");
            }
            if ($.sku == null) {
                throw new MissingRequiredPropertyException("ScaleSetArgs", "sku");
            }
            if ($.storageProfileOsDisk == null) {
                throw new MissingRequiredPropertyException("ScaleSetArgs", "storageProfileOsDisk");
            }
            if ($.upgradePolicyMode == null) {
                throw new MissingRequiredPropertyException("ScaleSetArgs", "upgradePolicyMode");
            }
            return $;
        }
    }

}
