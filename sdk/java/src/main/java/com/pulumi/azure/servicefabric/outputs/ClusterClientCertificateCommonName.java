// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.servicefabric.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ClusterClientCertificateCommonName {
    /**
     * @return The common or subject name of the certificate.
     * 
     */
    private String commonName;
    /**
     * @return Does the Client Certificate have Admin Access to the cluster? Non-admin clients can only perform read only operations on the cluster.
     * 
     */
    private Boolean isAdmin;
    /**
     * @return The Issuer Thumbprint of the Certificate.
     * 
     * &gt; **NOTE:** Certificate Issuer Thumbprint may become required in the future, `https://docs.microsoft.com/azure/service-fabric/service-fabric-create-cluster-using-cert-cn#download-and-update-a-sample-template`.
     * 
     */
    private @Nullable String issuerThumbprint;

    private ClusterClientCertificateCommonName() {}
    /**
     * @return The common or subject name of the certificate.
     * 
     */
    public String commonName() {
        return this.commonName;
    }
    /**
     * @return Does the Client Certificate have Admin Access to the cluster? Non-admin clients can only perform read only operations on the cluster.
     * 
     */
    public Boolean isAdmin() {
        return this.isAdmin;
    }
    /**
     * @return The Issuer Thumbprint of the Certificate.
     * 
     * &gt; **NOTE:** Certificate Issuer Thumbprint may become required in the future, `https://docs.microsoft.com/azure/service-fabric/service-fabric-create-cluster-using-cert-cn#download-and-update-a-sample-template`.
     * 
     */
    public Optional<String> issuerThumbprint() {
        return Optional.ofNullable(this.issuerThumbprint);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ClusterClientCertificateCommonName defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String commonName;
        private Boolean isAdmin;
        private @Nullable String issuerThumbprint;
        public Builder() {}
        public Builder(ClusterClientCertificateCommonName defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.commonName = defaults.commonName;
    	      this.isAdmin = defaults.isAdmin;
    	      this.issuerThumbprint = defaults.issuerThumbprint;
        }

        @CustomType.Setter
        public Builder commonName(String commonName) {
            if (commonName == null) {
              throw new MissingRequiredPropertyException("ClusterClientCertificateCommonName", "commonName");
            }
            this.commonName = commonName;
            return this;
        }
        @CustomType.Setter
        public Builder isAdmin(Boolean isAdmin) {
            if (isAdmin == null) {
              throw new MissingRequiredPropertyException("ClusterClientCertificateCommonName", "isAdmin");
            }
            this.isAdmin = isAdmin;
            return this;
        }
        @CustomType.Setter
        public Builder issuerThumbprint(@Nullable String issuerThumbprint) {

            this.issuerThumbprint = issuerThumbprint;
            return this;
        }
        public ClusterClientCertificateCommonName build() {
            final var _resultValue = new ClusterClientCertificateCommonName();
            _resultValue.commonName = commonName;
            _resultValue.isAdmin = isAdmin;
            _resultValue.issuerThumbprint = issuerThumbprint;
            return _resultValue;
        }
    }
}
