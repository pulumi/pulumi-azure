// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.appservice;

import com.pulumi.azure.Utilities;
import com.pulumi.azure.appservice.WebAppActiveSlotArgs;
import com.pulumi.azure.appservice.inputs.WebAppActiveSlotState;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Manages a Web App Active Slot.
 * 
 * ## Example Usage
 * ### Windows Web App
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.azure.core.ResourceGroup;
 * import com.pulumi.azure.core.ResourceGroupArgs;
 * import com.pulumi.azure.appservice.ServicePlan;
 * import com.pulumi.azure.appservice.ServicePlanArgs;
 * import com.pulumi.azure.appservice.WindowsWebApp;
 * import com.pulumi.azure.appservice.WindowsWebAppArgs;
 * import com.pulumi.azure.appservice.inputs.WindowsWebAppSiteConfigArgs;
 * import com.pulumi.azure.appservice.WindowsWebAppSlot;
 * import com.pulumi.azure.appservice.WindowsWebAppSlotArgs;
 * import com.pulumi.azure.appservice.inputs.WindowsWebAppSlotSiteConfigArgs;
 * import com.pulumi.azure.appservice.WebAppActiveSlot;
 * import com.pulumi.azure.appservice.WebAppActiveSlotArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var exampleResourceGroup = new ResourceGroup(&#34;exampleResourceGroup&#34;, ResourceGroupArgs.builder()        
 *             .location(&#34;West Europe&#34;)
 *             .build());
 * 
 *         var exampleServicePlan = new ServicePlan(&#34;exampleServicePlan&#34;, ServicePlanArgs.builder()        
 *             .resourceGroupName(exampleResourceGroup.name())
 *             .location(exampleResourceGroup.location())
 *             .osType(&#34;Windows&#34;)
 *             .skuName(&#34;P1v2&#34;)
 *             .build());
 * 
 *         var exampleWindowsWebApp = new WindowsWebApp(&#34;exampleWindowsWebApp&#34;, WindowsWebAppArgs.builder()        
 *             .resourceGroupName(exampleResourceGroup.name())
 *             .location(exampleServicePlan.location())
 *             .servicePlanId(exampleServicePlan.id())
 *             .siteConfig()
 *             .build());
 * 
 *         var exampleWindowsWebAppSlot = new WindowsWebAppSlot(&#34;exampleWindowsWebAppSlot&#34;, WindowsWebAppSlotArgs.builder()        
 *             .appServiceId(exampleWindowsWebApp.name())
 *             .siteConfig()
 *             .build());
 * 
 *         var exampleWebAppActiveSlot = new WebAppActiveSlot(&#34;exampleWebAppActiveSlot&#34;, WebAppActiveSlotArgs.builder()        
 *             .slotId(exampleWindowsWebAppSlot.id())
 *             .build());
 * 
 *     }
 * }
 * ```
 * ### Linux Web App
 * 
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.azure.core.ResourceGroup;
 * import com.pulumi.azure.core.ResourceGroupArgs;
 * import com.pulumi.azure.appservice.ServicePlan;
 * import com.pulumi.azure.appservice.ServicePlanArgs;
 * import com.pulumi.azure.appservice.LinuxWebApp;
 * import com.pulumi.azure.appservice.LinuxWebAppArgs;
 * import com.pulumi.azure.appservice.inputs.LinuxWebAppSiteConfigArgs;
 * import com.pulumi.azure.appservice.LinuxWebAppSlot;
 * import com.pulumi.azure.appservice.LinuxWebAppSlotArgs;
 * import com.pulumi.azure.appservice.inputs.LinuxWebAppSlotSiteConfigArgs;
 * import com.pulumi.azure.appservice.WebAppActiveSlot;
 * import com.pulumi.azure.appservice.WebAppActiveSlotArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var exampleResourceGroup = new ResourceGroup(&#34;exampleResourceGroup&#34;, ResourceGroupArgs.builder()        
 *             .location(&#34;West Europe&#34;)
 *             .build());
 * 
 *         var exampleServicePlan = new ServicePlan(&#34;exampleServicePlan&#34;, ServicePlanArgs.builder()        
 *             .resourceGroupName(exampleResourceGroup.name())
 *             .location(exampleResourceGroup.location())
 *             .osType(&#34;Linux&#34;)
 *             .skuName(&#34;P1v2&#34;)
 *             .build());
 * 
 *         var exampleLinuxWebApp = new LinuxWebApp(&#34;exampleLinuxWebApp&#34;, LinuxWebAppArgs.builder()        
 *             .resourceGroupName(exampleResourceGroup.name())
 *             .location(exampleServicePlan.location())
 *             .servicePlanId(exampleServicePlan.id())
 *             .siteConfig()
 *             .build());
 * 
 *         var exampleLinuxWebAppSlot = new LinuxWebAppSlot(&#34;exampleLinuxWebAppSlot&#34;, LinuxWebAppSlotArgs.builder()        
 *             .appServiceName(exampleLinuxWebApp.name())
 *             .location(exampleServicePlan.location())
 *             .servicePlanId(exampleServicePlan.id())
 *             .siteConfig()
 *             .build());
 * 
 *         var exampleWebAppActiveSlot = new WebAppActiveSlot(&#34;exampleWebAppActiveSlot&#34;, WebAppActiveSlotArgs.builder()        
 *             .slotId(exampleLinuxWebAppSlot.id())
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * a Web App Active Slot can be imported using the `resource id`, e.g.
 * 
 * ```sh
 *  $ pulumi import azure:appservice/webAppActiveSlot:WebAppActiveSlot example &#34;/subscriptions/12345678-1234-9876-4563-123456789012/resourceGroups/resGroup1/providers/Microsoft.Web/sites/site1&#34;
 * ```
 * 
 */
@ResourceType(type="azure:appservice/webAppActiveSlot:WebAppActiveSlot")
public class WebAppActiveSlot extends com.pulumi.resources.CustomResource {
    /**
     * The timestamp of the last successful swap with `Production`.
     * 
     */
    @Export(name="lastSuccessfulSwap", type=String.class, parameters={})
    private Output<String> lastSuccessfulSwap;

    /**
     * @return The timestamp of the last successful swap with `Production`.
     * 
     */
    public Output<String> lastSuccessfulSwap() {
        return this.lastSuccessfulSwap;
    }
    /**
     * The swap action should overwrite the Production slot&#39;s network configuration with the configuration from this slot. Defaults to `true`. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="overwriteNetworkConfig", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> overwriteNetworkConfig;

    /**
     * @return The swap action should overwrite the Production slot&#39;s network configuration with the configuration from this slot. Defaults to `true`. Changing this forces a new resource to be created.
     * 
     */
    public Output<Optional<Boolean>> overwriteNetworkConfig() {
        return Codegen.optional(this.overwriteNetworkConfig);
    }
    /**
     * The ID of the Slot to swap with `Production`.
     * 
     */
    @Export(name="slotId", type=String.class, parameters={})
    private Output<String> slotId;

    /**
     * @return The ID of the Slot to swap with `Production`.
     * 
     */
    public Output<String> slotId() {
        return this.slotId;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public WebAppActiveSlot(String name) {
        this(name, WebAppActiveSlotArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public WebAppActiveSlot(String name, WebAppActiveSlotArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public WebAppActiveSlot(String name, WebAppActiveSlotArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:appservice/webAppActiveSlot:WebAppActiveSlot", name, args == null ? WebAppActiveSlotArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private WebAppActiveSlot(String name, Output<String> id, @Nullable WebAppActiveSlotState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:appservice/webAppActiveSlot:WebAppActiveSlot", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static WebAppActiveSlot get(String name, Output<String> id, @Nullable WebAppActiveSlotState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new WebAppActiveSlot(name, id, state, options);
    }
}
