// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.cognitive.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AIServicesCustomerManagedKeyArgs extends com.pulumi.resources.ResourceArgs {

    public static final AIServicesCustomerManagedKeyArgs Empty = new AIServicesCustomerManagedKeyArgs();

    /**
     * The Client ID of the User Assigned Identity that has access to the key. This property only needs to be specified when there are multiple identities attached to the Azure AI Service.
     * 
     */
    @Import(name="identityClientId")
    private @Nullable Output<String> identityClientId;

    /**
     * @return The Client ID of the User Assigned Identity that has access to the key. This property only needs to be specified when there are multiple identities attached to the Azure AI Service.
     * 
     */
    public Optional<Output<String>> identityClientId() {
        return Optional.ofNullable(this.identityClientId);
    }

    /**
     * The ID of the Key Vault Key which should be used to encrypt the data in this AI Services Account. Exactly one of `key_vault_key_id`, `managed_hsm_key_id` must be specified.
     * 
     */
    @Import(name="keyVaultKeyId")
    private @Nullable Output<String> keyVaultKeyId;

    /**
     * @return The ID of the Key Vault Key which should be used to encrypt the data in this AI Services Account. Exactly one of `key_vault_key_id`, `managed_hsm_key_id` must be specified.
     * 
     */
    public Optional<Output<String>> keyVaultKeyId() {
        return Optional.ofNullable(this.keyVaultKeyId);
    }

    /**
     * The ID of the managed HSM Key which should be used to encrypt the data in this AI Services Account. Exactly one of `key_vault_key_id`, `managed_hsm_key_id` must be specified.
     * 
     */
    @Import(name="managedHsmKeyId")
    private @Nullable Output<String> managedHsmKeyId;

    /**
     * @return The ID of the managed HSM Key which should be used to encrypt the data in this AI Services Account. Exactly one of `key_vault_key_id`, `managed_hsm_key_id` must be specified.
     * 
     */
    public Optional<Output<String>> managedHsmKeyId() {
        return Optional.ofNullable(this.managedHsmKeyId);
    }

    private AIServicesCustomerManagedKeyArgs() {}

    private AIServicesCustomerManagedKeyArgs(AIServicesCustomerManagedKeyArgs $) {
        this.identityClientId = $.identityClientId;
        this.keyVaultKeyId = $.keyVaultKeyId;
        this.managedHsmKeyId = $.managedHsmKeyId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AIServicesCustomerManagedKeyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AIServicesCustomerManagedKeyArgs $;

        public Builder() {
            $ = new AIServicesCustomerManagedKeyArgs();
        }

        public Builder(AIServicesCustomerManagedKeyArgs defaults) {
            $ = new AIServicesCustomerManagedKeyArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param identityClientId The Client ID of the User Assigned Identity that has access to the key. This property only needs to be specified when there are multiple identities attached to the Azure AI Service.
         * 
         * @return builder
         * 
         */
        public Builder identityClientId(@Nullable Output<String> identityClientId) {
            $.identityClientId = identityClientId;
            return this;
        }

        /**
         * @param identityClientId The Client ID of the User Assigned Identity that has access to the key. This property only needs to be specified when there are multiple identities attached to the Azure AI Service.
         * 
         * @return builder
         * 
         */
        public Builder identityClientId(String identityClientId) {
            return identityClientId(Output.of(identityClientId));
        }

        /**
         * @param keyVaultKeyId The ID of the Key Vault Key which should be used to encrypt the data in this AI Services Account. Exactly one of `key_vault_key_id`, `managed_hsm_key_id` must be specified.
         * 
         * @return builder
         * 
         */
        public Builder keyVaultKeyId(@Nullable Output<String> keyVaultKeyId) {
            $.keyVaultKeyId = keyVaultKeyId;
            return this;
        }

        /**
         * @param keyVaultKeyId The ID of the Key Vault Key which should be used to encrypt the data in this AI Services Account. Exactly one of `key_vault_key_id`, `managed_hsm_key_id` must be specified.
         * 
         * @return builder
         * 
         */
        public Builder keyVaultKeyId(String keyVaultKeyId) {
            return keyVaultKeyId(Output.of(keyVaultKeyId));
        }

        /**
         * @param managedHsmKeyId The ID of the managed HSM Key which should be used to encrypt the data in this AI Services Account. Exactly one of `key_vault_key_id`, `managed_hsm_key_id` must be specified.
         * 
         * @return builder
         * 
         */
        public Builder managedHsmKeyId(@Nullable Output<String> managedHsmKeyId) {
            $.managedHsmKeyId = managedHsmKeyId;
            return this;
        }

        /**
         * @param managedHsmKeyId The ID of the managed HSM Key which should be used to encrypt the data in this AI Services Account. Exactly one of `key_vault_key_id`, `managed_hsm_key_id` must be specified.
         * 
         * @return builder
         * 
         */
        public Builder managedHsmKeyId(String managedHsmKeyId) {
            return managedHsmKeyId(Output.of(managedHsmKeyId));
        }

        public AIServicesCustomerManagedKeyArgs build() {
            return $;
        }
    }

}
