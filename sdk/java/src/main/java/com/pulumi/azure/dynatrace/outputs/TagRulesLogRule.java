// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.dynatrace.outputs;

import com.pulumi.azure.dynatrace.outputs.TagRulesLogRuleFilteringTag;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class TagRulesLogRule {
    /**
     * @return Filtering tag for the log rule. A `filtering_tag` block as defined below.
     * 
     */
    private List<TagRulesLogRuleFilteringTag> filteringTags;
    /**
     * @return Send Activity logs. The default value is `false`.
     * 
     */
    private @Nullable Boolean sendActivityLogsEnabled;
    /**
     * @return Send Azure Active Directory logs. The default value is `false`.
     * 
     */
    private @Nullable Boolean sendAzureActiveDirectoryLogsEnabled;
    /**
     * @return Send Subscription logs. The default value is `false`.
     * 
     */
    private @Nullable Boolean sendSubscriptionLogsEnabled;

    private TagRulesLogRule() {}
    /**
     * @return Filtering tag for the log rule. A `filtering_tag` block as defined below.
     * 
     */
    public List<TagRulesLogRuleFilteringTag> filteringTags() {
        return this.filteringTags;
    }
    /**
     * @return Send Activity logs. The default value is `false`.
     * 
     */
    public Optional<Boolean> sendActivityLogsEnabled() {
        return Optional.ofNullable(this.sendActivityLogsEnabled);
    }
    /**
     * @return Send Azure Active Directory logs. The default value is `false`.
     * 
     */
    public Optional<Boolean> sendAzureActiveDirectoryLogsEnabled() {
        return Optional.ofNullable(this.sendAzureActiveDirectoryLogsEnabled);
    }
    /**
     * @return Send Subscription logs. The default value is `false`.
     * 
     */
    public Optional<Boolean> sendSubscriptionLogsEnabled() {
        return Optional.ofNullable(this.sendSubscriptionLogsEnabled);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(TagRulesLogRule defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<TagRulesLogRuleFilteringTag> filteringTags;
        private @Nullable Boolean sendActivityLogsEnabled;
        private @Nullable Boolean sendAzureActiveDirectoryLogsEnabled;
        private @Nullable Boolean sendSubscriptionLogsEnabled;
        public Builder() {}
        public Builder(TagRulesLogRule defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.filteringTags = defaults.filteringTags;
    	      this.sendActivityLogsEnabled = defaults.sendActivityLogsEnabled;
    	      this.sendAzureActiveDirectoryLogsEnabled = defaults.sendAzureActiveDirectoryLogsEnabled;
    	      this.sendSubscriptionLogsEnabled = defaults.sendSubscriptionLogsEnabled;
        }

        @CustomType.Setter
        public Builder filteringTags(List<TagRulesLogRuleFilteringTag> filteringTags) {
            if (filteringTags == null) {
              throw new MissingRequiredPropertyException("TagRulesLogRule", "filteringTags");
            }
            this.filteringTags = filteringTags;
            return this;
        }
        public Builder filteringTags(TagRulesLogRuleFilteringTag... filteringTags) {
            return filteringTags(List.of(filteringTags));
        }
        @CustomType.Setter
        public Builder sendActivityLogsEnabled(@Nullable Boolean sendActivityLogsEnabled) {

            this.sendActivityLogsEnabled = sendActivityLogsEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder sendAzureActiveDirectoryLogsEnabled(@Nullable Boolean sendAzureActiveDirectoryLogsEnabled) {

            this.sendAzureActiveDirectoryLogsEnabled = sendAzureActiveDirectoryLogsEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder sendSubscriptionLogsEnabled(@Nullable Boolean sendSubscriptionLogsEnabled) {

            this.sendSubscriptionLogsEnabled = sendSubscriptionLogsEnabled;
            return this;
        }
        public TagRulesLogRule build() {
            final var _resultValue = new TagRulesLogRule();
            _resultValue.filteringTags = filteringTags;
            _resultValue.sendActivityLogsEnabled = sendActivityLogsEnabled;
            _resultValue.sendAzureActiveDirectoryLogsEnabled = sendAzureActiveDirectoryLogsEnabled;
            _resultValue.sendSubscriptionLogsEnabled = sendSubscriptionLogsEnabled;
            return _resultValue;
        }
    }
}
