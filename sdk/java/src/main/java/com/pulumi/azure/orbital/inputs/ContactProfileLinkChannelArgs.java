// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.orbital.inputs;

import com.pulumi.azure.orbital.inputs.ContactProfileLinkChannelEndPointArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Double;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ContactProfileLinkChannelArgs extends com.pulumi.resources.ResourceArgs {

    public static final ContactProfileLinkChannelArgs Empty = new ContactProfileLinkChannelArgs();

    /**
     * Bandwidth in MHz.
     * 
     */
    @Import(name="bandwidthMhz", required=true)
    private Output<Double> bandwidthMhz;

    /**
     * @return Bandwidth in MHz.
     * 
     */
    public Output<Double> bandwidthMhz() {
        return this.bandwidthMhz;
    }

    /**
     * Center frequency in MHz.
     * 
     */
    @Import(name="centerFrequencyMhz", required=true)
    private Output<Double> centerFrequencyMhz;

    /**
     * @return Center frequency in MHz.
     * 
     */
    public Output<Double> centerFrequencyMhz() {
        return this.centerFrequencyMhz;
    }

    /**
     * Copy of the modem configuration file such as Kratos QRadio or Kratos QuantumRx. Only valid for downlink directions. If provided, the modem connects to the customer endpoint and sends demodulated data instead of a VITA.49 stream.
     * 
     */
    @Import(name="demodulationConfiguration")
    private @Nullable Output<String> demodulationConfiguration;

    /**
     * @return Copy of the modem configuration file such as Kratos QRadio or Kratos QuantumRx. Only valid for downlink directions. If provided, the modem connects to the customer endpoint and sends demodulated data instead of a VITA.49 stream.
     * 
     */
    public Optional<Output<String>> demodulationConfiguration() {
        return Optional.ofNullable(this.demodulationConfiguration);
    }

    /**
     * Customer End point to store/retrieve data during a contact. An `end_point` block as defined below.
     * 
     */
    @Import(name="endPoints", required=true)
    private Output<List<ContactProfileLinkChannelEndPointArgs>> endPoints;

    /**
     * @return Customer End point to store/retrieve data during a contact. An `end_point` block as defined below.
     * 
     */
    public Output<List<ContactProfileLinkChannelEndPointArgs>> endPoints() {
        return this.endPoints;
    }

    /**
     * Copy of the modem configuration file such as Kratos QRadio. Only valid for uplink directions. If provided, the modem connects to the customer endpoint and accepts commands from the customer instead of a VITA.49 stream.
     * 
     */
    @Import(name="modulationConfiguration")
    private @Nullable Output<String> modulationConfiguration;

    /**
     * @return Copy of the modem configuration file such as Kratos QRadio. Only valid for uplink directions. If provided, the modem connects to the customer endpoint and accepts commands from the customer instead of a VITA.49 stream.
     * 
     */
    public Optional<Output<String>> modulationConfiguration() {
        return Optional.ofNullable(this.modulationConfiguration);
    }

    /**
     * Name of the channel.
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    /**
     * @return Name of the channel.
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    private ContactProfileLinkChannelArgs() {}

    private ContactProfileLinkChannelArgs(ContactProfileLinkChannelArgs $) {
        this.bandwidthMhz = $.bandwidthMhz;
        this.centerFrequencyMhz = $.centerFrequencyMhz;
        this.demodulationConfiguration = $.demodulationConfiguration;
        this.endPoints = $.endPoints;
        this.modulationConfiguration = $.modulationConfiguration;
        this.name = $.name;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ContactProfileLinkChannelArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ContactProfileLinkChannelArgs $;

        public Builder() {
            $ = new ContactProfileLinkChannelArgs();
        }

        public Builder(ContactProfileLinkChannelArgs defaults) {
            $ = new ContactProfileLinkChannelArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param bandwidthMhz Bandwidth in MHz.
         * 
         * @return builder
         * 
         */
        public Builder bandwidthMhz(Output<Double> bandwidthMhz) {
            $.bandwidthMhz = bandwidthMhz;
            return this;
        }

        /**
         * @param bandwidthMhz Bandwidth in MHz.
         * 
         * @return builder
         * 
         */
        public Builder bandwidthMhz(Double bandwidthMhz) {
            return bandwidthMhz(Output.of(bandwidthMhz));
        }

        /**
         * @param centerFrequencyMhz Center frequency in MHz.
         * 
         * @return builder
         * 
         */
        public Builder centerFrequencyMhz(Output<Double> centerFrequencyMhz) {
            $.centerFrequencyMhz = centerFrequencyMhz;
            return this;
        }

        /**
         * @param centerFrequencyMhz Center frequency in MHz.
         * 
         * @return builder
         * 
         */
        public Builder centerFrequencyMhz(Double centerFrequencyMhz) {
            return centerFrequencyMhz(Output.of(centerFrequencyMhz));
        }

        /**
         * @param demodulationConfiguration Copy of the modem configuration file such as Kratos QRadio or Kratos QuantumRx. Only valid for downlink directions. If provided, the modem connects to the customer endpoint and sends demodulated data instead of a VITA.49 stream.
         * 
         * @return builder
         * 
         */
        public Builder demodulationConfiguration(@Nullable Output<String> demodulationConfiguration) {
            $.demodulationConfiguration = demodulationConfiguration;
            return this;
        }

        /**
         * @param demodulationConfiguration Copy of the modem configuration file such as Kratos QRadio or Kratos QuantumRx. Only valid for downlink directions. If provided, the modem connects to the customer endpoint and sends demodulated data instead of a VITA.49 stream.
         * 
         * @return builder
         * 
         */
        public Builder demodulationConfiguration(String demodulationConfiguration) {
            return demodulationConfiguration(Output.of(demodulationConfiguration));
        }

        /**
         * @param endPoints Customer End point to store/retrieve data during a contact. An `end_point` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder endPoints(Output<List<ContactProfileLinkChannelEndPointArgs>> endPoints) {
            $.endPoints = endPoints;
            return this;
        }

        /**
         * @param endPoints Customer End point to store/retrieve data during a contact. An `end_point` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder endPoints(List<ContactProfileLinkChannelEndPointArgs> endPoints) {
            return endPoints(Output.of(endPoints));
        }

        /**
         * @param endPoints Customer End point to store/retrieve data during a contact. An `end_point` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder endPoints(ContactProfileLinkChannelEndPointArgs... endPoints) {
            return endPoints(List.of(endPoints));
        }

        /**
         * @param modulationConfiguration Copy of the modem configuration file such as Kratos QRadio. Only valid for uplink directions. If provided, the modem connects to the customer endpoint and accepts commands from the customer instead of a VITA.49 stream.
         * 
         * @return builder
         * 
         */
        public Builder modulationConfiguration(@Nullable Output<String> modulationConfiguration) {
            $.modulationConfiguration = modulationConfiguration;
            return this;
        }

        /**
         * @param modulationConfiguration Copy of the modem configuration file such as Kratos QRadio. Only valid for uplink directions. If provided, the modem connects to the customer endpoint and accepts commands from the customer instead of a VITA.49 stream.
         * 
         * @return builder
         * 
         */
        public Builder modulationConfiguration(String modulationConfiguration) {
            return modulationConfiguration(Output.of(modulationConfiguration));
        }

        /**
         * @param name Name of the channel.
         * 
         * @return builder
         * 
         */
        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Name of the channel.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        public ContactProfileLinkChannelArgs build() {
            if ($.bandwidthMhz == null) {
                throw new MissingRequiredPropertyException("ContactProfileLinkChannelArgs", "bandwidthMhz");
            }
            if ($.centerFrequencyMhz == null) {
                throw new MissingRequiredPropertyException("ContactProfileLinkChannelArgs", "centerFrequencyMhz");
            }
            if ($.endPoints == null) {
                throw new MissingRequiredPropertyException("ContactProfileLinkChannelArgs", "endPoints");
            }
            if ($.name == null) {
                throw new MissingRequiredPropertyException("ContactProfileLinkChannelArgs", "name");
            }
            return $;
        }
    }

}
