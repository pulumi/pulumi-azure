// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.cognitive.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class AccountNetworkInjection {
    /**
     * @return Specifies what features network injection applies to. The only possible value is `agent`.
     * 
     */
    private String scenario;
    /**
     * @return The ID of the subnet which the Agent Client is injected into.
     * 
     * &gt; **Note:** The agent subnet must use an address space in the 172.* or 192.* ranges.
     * 
     */
    private String subnetId;

    private AccountNetworkInjection() {}
    /**
     * @return Specifies what features network injection applies to. The only possible value is `agent`.
     * 
     */
    public String scenario() {
        return this.scenario;
    }
    /**
     * @return The ID of the subnet which the Agent Client is injected into.
     * 
     * &gt; **Note:** The agent subnet must use an address space in the 172.* or 192.* ranges.
     * 
     */
    public String subnetId() {
        return this.subnetId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AccountNetworkInjection defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String scenario;
        private String subnetId;
        public Builder() {}
        public Builder(AccountNetworkInjection defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.scenario = defaults.scenario;
    	      this.subnetId = defaults.subnetId;
        }

        @CustomType.Setter
        public Builder scenario(String scenario) {
            if (scenario == null) {
              throw new MissingRequiredPropertyException("AccountNetworkInjection", "scenario");
            }
            this.scenario = scenario;
            return this;
        }
        @CustomType.Setter
        public Builder subnetId(String subnetId) {
            if (subnetId == null) {
              throw new MissingRequiredPropertyException("AccountNetworkInjection", "subnetId");
            }
            this.subnetId = subnetId;
            return this;
        }
        public AccountNetworkInjection build() {
            final var _resultValue = new AccountNetworkInjection();
            _resultValue.scenario = scenario;
            _resultValue.subnetId = subnetId;
            return _resultValue;
        }
    }
}
