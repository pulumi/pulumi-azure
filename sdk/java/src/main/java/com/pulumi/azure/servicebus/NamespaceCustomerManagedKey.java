// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.servicebus;

import com.pulumi.azure.Utilities;
import com.pulumi.azure.servicebus.NamespaceCustomerManagedKeyArgs;
import com.pulumi.azure.servicebus.inputs.NamespaceCustomerManagedKeyState;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Manages a Service Bus Namespace Customer Managed Key.
 * 
 * !&gt; **Note:** It is not possible to remove the Customer Managed Key from the Service Bus Namespace once it&#39;s been added. To remove the Customer Managed Key, the parent Service Bus Namespace must be deleted and recreated.
 * 
 * &gt; **Note:** This resource should only be used to create a Customer Managed Key for Service Bus Namespaces with System Assigned identities. The `customer_managed_key` block in `azure.servicebus.Namespace` should be used to create a Customer Managed Key for a Service Bus Namespace with a User Assigned identity.
 * 
 * ## Example Usage
 * 
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.azure.core.ResourceGroup;
 * import com.pulumi.azure.core.ResourceGroupArgs;
 * import com.pulumi.azure.servicebus.Namespace;
 * import com.pulumi.azure.servicebus.NamespaceArgs;
 * import com.pulumi.azure.servicebus.inputs.NamespaceIdentityArgs;
 * import com.pulumi.azure.core.CoreFunctions;
 * import com.pulumi.azure.keyvault.KeyVault;
 * import com.pulumi.azure.keyvault.KeyVaultArgs;
 * import com.pulumi.azure.keyvault.inputs.KeyVaultAccessPolicyArgs;
 * import com.pulumi.azure.keyvault.Key;
 * import com.pulumi.azure.keyvault.KeyArgs;
 * import com.pulumi.azure.servicebus.NamespaceCustomerManagedKey;
 * import com.pulumi.azure.servicebus.NamespaceCustomerManagedKeyArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new ResourceGroup("example", ResourceGroupArgs.builder()
 *             .name("example-resource-group")
 *             .location("West Europe")
 *             .build());
 * 
 *         var exampleNamespace = new Namespace("exampleNamespace", NamespaceArgs.builder()
 *             .name("example-servicebus-namespace")
 *             .location(example.location())
 *             .resourceGroupName(example.name())
 *             .sku("Premium")
 *             .premiumMessagingPartitions(1)
 *             .capacity(1)
 *             .identity(NamespaceIdentityArgs.builder()
 *                 .type("SystemAssigned")
 *                 .build())
 *             .build());
 * 
 *         final var current = CoreFunctions.getClientConfig(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference);
 * 
 *         var exampleKeyVault = new KeyVault("exampleKeyVault", KeyVaultArgs.builder()
 *             .name("example-key-vault")
 *             .location(example.location())
 *             .resourceGroupName(example.name())
 *             .enabledForDiskEncryption(true)
 *             .tenantId(current.tenantId())
 *             .softDeleteRetentionDays(7)
 *             .purgeProtectionEnabled(true)
 *             .skuName("standard")
 *             .accessPolicies(            
 *                 KeyVaultAccessPolicyArgs.builder()
 *                     .tenantId(current.tenantId())
 *                     .objectId(current.objectId())
 *                     .keyPermissions(                    
 *                         "Create",
 *                         "Decrypt",
 *                         "Encrypt",
 *                         "Delete",
 *                         "Get",
 *                         "List",
 *                         "Purge",
 *                         "UnwrapKey",
 *                         "WrapKey",
 *                         "Verify",
 *                         "GetRotationPolicy")
 *                     .secretPermissions("Set")
 *                     .build(),
 *                 KeyVaultAccessPolicyArgs.builder()
 *                     .tenantId(exampleNamespace.identity().applyValue(_identity -> _identity.tenantId()))
 *                     .objectId(exampleNamespace.identity().applyValue(_identity -> _identity.principalId()))
 *                     .keyPermissions(                    
 *                         "Create",
 *                         "Decrypt",
 *                         "Encrypt",
 *                         "Delete",
 *                         "Get",
 *                         "List",
 *                         "Purge",
 *                         "UnwrapKey",
 *                         "WrapKey",
 *                         "Verify",
 *                         "GetRotationPolicy")
 *                     .secretPermissions("Set")
 *                     .build())
 *             .build());
 * 
 *         var exampleKey = new Key("exampleKey", KeyArgs.builder()
 *             .name("example-key-vault-key")
 *             .keyVaultId(exampleKeyVault.id())
 *             .keyType("RSA")
 *             .keySize(2048)
 *             .keyOpts(            
 *                 "decrypt",
 *                 "encrypt",
 *                 "sign",
 *                 "unwrapKey",
 *                 "verify",
 *                 "wrapKey")
 *             .build());
 * 
 *         var exampleNamespaceCustomerManagedKey = new NamespaceCustomerManagedKey("exampleNamespaceCustomerManagedKey", NamespaceCustomerManagedKeyArgs.builder()
 *             .namespaceId(exampleNamespace.id())
 *             .keyVaultKeyId(exampleKey.id())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * 
 * ## API Providers
 * 
 * &lt;!-- This section is generated, changes will be overwritten --&gt;
 * This resource uses the following Azure API Providers:
 * 
 * * `Microsoft.ServiceBus` - 2024-01-01
 * 
 * ## Import
 * 
 * Service Bus Namespace Customer Managed Key can be imported using the `resource id`, e.g.
 * 
 * ```sh
 * $ pulumi import azure:servicebus/namespaceCustomerManagedKey:NamespaceCustomerManagedKey example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/mygroup1/providers/Microsoft.ServiceBus/namespaces/sbns1
 * ```
 * 
 */
@ResourceType(type="azure:servicebus/namespaceCustomerManagedKey:NamespaceCustomerManagedKey")
public class NamespaceCustomerManagedKey extends com.pulumi.resources.CustomResource {
    /**
     * Used to specify whether enable Infrastructure Encryption. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="infrastructureEncryptionEnabled", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> infrastructureEncryptionEnabled;

    /**
     * @return Used to specify whether enable Infrastructure Encryption. Changing this forces a new resource to be created.
     * 
     */
    public Output<Optional<Boolean>> infrastructureEncryptionEnabled() {
        return Codegen.optional(this.infrastructureEncryptionEnabled);
    }
    /**
     * The ID of the Key Vault Key which should be used to Encrypt the data in this Service Bus Namespace.
     * 
     */
    @Export(name="keyVaultKeyId", refs={String.class}, tree="[0]")
    private Output<String> keyVaultKeyId;

    /**
     * @return The ID of the Key Vault Key which should be used to Encrypt the data in this Service Bus Namespace.
     * 
     */
    public Output<String> keyVaultKeyId() {
        return this.keyVaultKeyId;
    }
    /**
     * The ID of the Service Bus namespace. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="namespaceId", refs={String.class}, tree="[0]")
    private Output<String> namespaceId;

    /**
     * @return The ID of the Service Bus namespace. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> namespaceId() {
        return this.namespaceId;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public NamespaceCustomerManagedKey(java.lang.String name) {
        this(name, NamespaceCustomerManagedKeyArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public NamespaceCustomerManagedKey(java.lang.String name, NamespaceCustomerManagedKeyArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public NamespaceCustomerManagedKey(java.lang.String name, NamespaceCustomerManagedKeyArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:servicebus/namespaceCustomerManagedKey:NamespaceCustomerManagedKey", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private NamespaceCustomerManagedKey(java.lang.String name, Output<java.lang.String> id, @Nullable NamespaceCustomerManagedKeyState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:servicebus/namespaceCustomerManagedKey:NamespaceCustomerManagedKey", name, state, makeResourceOptions(options, id), false);
    }

    private static NamespaceCustomerManagedKeyArgs makeArgs(NamespaceCustomerManagedKeyArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? NamespaceCustomerManagedKeyArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static NamespaceCustomerManagedKey get(java.lang.String name, Output<java.lang.String> id, @Nullable NamespaceCustomerManagedKeyState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new NamespaceCustomerManagedKey(name, id, state, options);
    }
}
