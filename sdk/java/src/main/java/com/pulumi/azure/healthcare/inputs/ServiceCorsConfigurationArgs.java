// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.healthcare.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ServiceCorsConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final ServiceCorsConfigurationArgs Empty = new ServiceCorsConfigurationArgs();

    /**
     * If credentials are allowed via CORS.
     * 
     */
    @Import(name="allowCredentials")
    private @Nullable Output<Boolean> allowCredentials;

    /**
     * @return If credentials are allowed via CORS.
     * 
     */
    public Optional<Output<Boolean>> allowCredentials() {
        return Optional.ofNullable(this.allowCredentials);
    }

    /**
     * A set of headers to be allowed via CORS.
     * 
     */
    @Import(name="allowedHeaders")
    private @Nullable Output<List<String>> allowedHeaders;

    /**
     * @return A set of headers to be allowed via CORS.
     * 
     */
    public Optional<Output<List<String>>> allowedHeaders() {
        return Optional.ofNullable(this.allowedHeaders);
    }

    /**
     * The methods to be allowed via CORS.
     * 
     */
    @Import(name="allowedMethods")
    private @Nullable Output<List<String>> allowedMethods;

    /**
     * @return The methods to be allowed via CORS.
     * 
     */
    public Optional<Output<List<String>>> allowedMethods() {
        return Optional.ofNullable(this.allowedMethods);
    }

    /**
     * A set of origins to be allowed via CORS.
     * 
     */
    @Import(name="allowedOrigins")
    private @Nullable Output<List<String>> allowedOrigins;

    /**
     * @return A set of origins to be allowed via CORS.
     * 
     */
    public Optional<Output<List<String>>> allowedOrigins() {
        return Optional.ofNullable(this.allowedOrigins);
    }

    /**
     * The max age to be allowed via CORS.
     * 
     */
    @Import(name="maxAgeInSeconds")
    private @Nullable Output<Integer> maxAgeInSeconds;

    /**
     * @return The max age to be allowed via CORS.
     * 
     */
    public Optional<Output<Integer>> maxAgeInSeconds() {
        return Optional.ofNullable(this.maxAgeInSeconds);
    }

    private ServiceCorsConfigurationArgs() {}

    private ServiceCorsConfigurationArgs(ServiceCorsConfigurationArgs $) {
        this.allowCredentials = $.allowCredentials;
        this.allowedHeaders = $.allowedHeaders;
        this.allowedMethods = $.allowedMethods;
        this.allowedOrigins = $.allowedOrigins;
        this.maxAgeInSeconds = $.maxAgeInSeconds;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ServiceCorsConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ServiceCorsConfigurationArgs $;

        public Builder() {
            $ = new ServiceCorsConfigurationArgs();
        }

        public Builder(ServiceCorsConfigurationArgs defaults) {
            $ = new ServiceCorsConfigurationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param allowCredentials If credentials are allowed via CORS.
         * 
         * @return builder
         * 
         */
        public Builder allowCredentials(@Nullable Output<Boolean> allowCredentials) {
            $.allowCredentials = allowCredentials;
            return this;
        }

        /**
         * @param allowCredentials If credentials are allowed via CORS.
         * 
         * @return builder
         * 
         */
        public Builder allowCredentials(Boolean allowCredentials) {
            return allowCredentials(Output.of(allowCredentials));
        }

        /**
         * @param allowedHeaders A set of headers to be allowed via CORS.
         * 
         * @return builder
         * 
         */
        public Builder allowedHeaders(@Nullable Output<List<String>> allowedHeaders) {
            $.allowedHeaders = allowedHeaders;
            return this;
        }

        /**
         * @param allowedHeaders A set of headers to be allowed via CORS.
         * 
         * @return builder
         * 
         */
        public Builder allowedHeaders(List<String> allowedHeaders) {
            return allowedHeaders(Output.of(allowedHeaders));
        }

        /**
         * @param allowedHeaders A set of headers to be allowed via CORS.
         * 
         * @return builder
         * 
         */
        public Builder allowedHeaders(String... allowedHeaders) {
            return allowedHeaders(List.of(allowedHeaders));
        }

        /**
         * @param allowedMethods The methods to be allowed via CORS.
         * 
         * @return builder
         * 
         */
        public Builder allowedMethods(@Nullable Output<List<String>> allowedMethods) {
            $.allowedMethods = allowedMethods;
            return this;
        }

        /**
         * @param allowedMethods The methods to be allowed via CORS.
         * 
         * @return builder
         * 
         */
        public Builder allowedMethods(List<String> allowedMethods) {
            return allowedMethods(Output.of(allowedMethods));
        }

        /**
         * @param allowedMethods The methods to be allowed via CORS.
         * 
         * @return builder
         * 
         */
        public Builder allowedMethods(String... allowedMethods) {
            return allowedMethods(List.of(allowedMethods));
        }

        /**
         * @param allowedOrigins A set of origins to be allowed via CORS.
         * 
         * @return builder
         * 
         */
        public Builder allowedOrigins(@Nullable Output<List<String>> allowedOrigins) {
            $.allowedOrigins = allowedOrigins;
            return this;
        }

        /**
         * @param allowedOrigins A set of origins to be allowed via CORS.
         * 
         * @return builder
         * 
         */
        public Builder allowedOrigins(List<String> allowedOrigins) {
            return allowedOrigins(Output.of(allowedOrigins));
        }

        /**
         * @param allowedOrigins A set of origins to be allowed via CORS.
         * 
         * @return builder
         * 
         */
        public Builder allowedOrigins(String... allowedOrigins) {
            return allowedOrigins(List.of(allowedOrigins));
        }

        /**
         * @param maxAgeInSeconds The max age to be allowed via CORS.
         * 
         * @return builder
         * 
         */
        public Builder maxAgeInSeconds(@Nullable Output<Integer> maxAgeInSeconds) {
            $.maxAgeInSeconds = maxAgeInSeconds;
            return this;
        }

        /**
         * @param maxAgeInSeconds The max age to be allowed via CORS.
         * 
         * @return builder
         * 
         */
        public Builder maxAgeInSeconds(Integer maxAgeInSeconds) {
            return maxAgeInSeconds(Output.of(maxAgeInSeconds));
        }

        public ServiceCorsConfigurationArgs build() {
            return $;
        }
    }

}
