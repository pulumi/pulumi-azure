// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.confidentialledger;

import com.pulumi.azure.Utilities;
import com.pulumi.azure.confidentialledger.LedgerArgs;
import com.pulumi.azure.confidentialledger.inputs.LedgerState;
import com.pulumi.azure.confidentialledger.outputs.LedgerAzureadBasedServicePrincipal;
import com.pulumi.azure.confidentialledger.outputs.LedgerCertificateBasedSecurityPrincipal;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Manages a Confidential Ledger.
 * 
 * ## Example Usage
 * 
 * ## Import
 * 
 * Confidential Ledgers can be imported using the `resource id`, e.g.
 * 
 * ```sh
 *  $ pulumi import azure:confidentialledger/ledger:Ledger example /subscriptions/12345678-1234-9876-4563-123456789012/resourceGroups/example-group/providers/Microsoft.ConfidentialLedger/ledgers/example-ledger
 * ```
 * 
 */
@ResourceType(type="azure:confidentialledger/ledger:Ledger")
public class Ledger extends com.pulumi.resources.CustomResource {
    @Export(name="azureadBasedServicePrincipals", type=List.class, parameters={LedgerAzureadBasedServicePrincipal.class})
    private Output<List<LedgerAzureadBasedServicePrincipal>> azureadBasedServicePrincipals;

    public Output<List<LedgerAzureadBasedServicePrincipal>> azureadBasedServicePrincipals() {
        return this.azureadBasedServicePrincipals;
    }
    @Export(name="certificateBasedSecurityPrincipals", type=List.class, parameters={LedgerCertificateBasedSecurityPrincipal.class})
    private Output</* @Nullable */ List<LedgerCertificateBasedSecurityPrincipal>> certificateBasedSecurityPrincipals;

    public Output<Optional<List<LedgerCertificateBasedSecurityPrincipal>>> certificateBasedSecurityPrincipals() {
        return Codegen.optional(this.certificateBasedSecurityPrincipals);
    }
    /**
     * The Identity Service Endpoint for this Confidential Ledger.
     * 
     */
    @Export(name="identityServiceEndpoint", type=String.class, parameters={})
    private Output<String> identityServiceEndpoint;

    /**
     * @return The Identity Service Endpoint for this Confidential Ledger.
     * 
     */
    public Output<String> identityServiceEndpoint() {
        return this.identityServiceEndpoint;
    }
    /**
     * The Endpoint for this Confidential Ledger.
     * 
     */
    @Export(name="ledgerEndpoint", type=String.class, parameters={})
    private Output<String> ledgerEndpoint;

    /**
     * @return The Endpoint for this Confidential Ledger.
     * 
     */
    public Output<String> ledgerEndpoint() {
        return this.ledgerEndpoint;
    }
    /**
     * Specifies the type of Confidential Ledger. Possible values are `Private` and `Public`. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="ledgerType", type=String.class, parameters={})
    private Output<String> ledgerType;

    /**
     * @return Specifies the type of Confidential Ledger. Possible values are `Private` and `Public`. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> ledgerType() {
        return this.ledgerType;
    }
    /**
     * Specifies the supported Azure location where the Confidential Ledger exists. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="location", type=String.class, parameters={})
    private Output<String> location;

    /**
     * @return Specifies the supported Azure location where the Confidential Ledger exists. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> location() {
        return this.location;
    }
    /**
     * Specifies the name of the Confidential Ledger. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return Specifies the name of the Confidential Ledger. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The name of the Resource Group where the Confidential Ledger exists. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="resourceGroupName", type=String.class, parameters={})
    private Output<String> resourceGroupName;

    /**
     * @return The name of the Resource Group where the Confidential Ledger exists. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }
    /**
     * A mapping of tags to assign to the Confidential Ledger.
     * 
     */
    @Export(name="tags", type=Map.class, parameters={String.class, String.class})
    private Output</* @Nullable */ Map<String,String>> tags;

    /**
     * @return A mapping of tags to assign to the Confidential Ledger.
     * 
     */
    public Output<Optional<Map<String,String>>> tags() {
        return Codegen.optional(this.tags);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Ledger(String name) {
        this(name, LedgerArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Ledger(String name, LedgerArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Ledger(String name, LedgerArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:confidentialledger/ledger:Ledger", name, args == null ? LedgerArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private Ledger(String name, Output<String> id, @Nullable LedgerState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:confidentialledger/ledger:Ledger", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Ledger get(String name, Output<String> id, @Nullable LedgerState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Ledger(name, id, state, options);
    }
}
