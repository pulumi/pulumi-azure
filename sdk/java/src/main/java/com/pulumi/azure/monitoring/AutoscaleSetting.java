// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.monitoring;

import com.pulumi.azure.Utilities;
import com.pulumi.azure.monitoring.AutoscaleSettingArgs;
import com.pulumi.azure.monitoring.inputs.AutoscaleSettingState;
import com.pulumi.azure.monitoring.outputs.AutoscaleSettingNotification;
import com.pulumi.azure.monitoring.outputs.AutoscaleSettingPredictive;
import com.pulumi.azure.monitoring.outputs.AutoscaleSettingProfile;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Manages a AutoScale Setting which can be applied to Virtual Machine Scale Sets, App Services and other scalable resources.
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.azure.core.ResourceGroup;
 * import com.pulumi.azure.core.ResourceGroupArgs;
 * import com.pulumi.azure.network.VirtualNetwork;
 * import com.pulumi.azure.network.VirtualNetworkArgs;
 * import com.pulumi.azure.network.Subnet;
 * import com.pulumi.azure.network.SubnetArgs;
 * import com.pulumi.azure.compute.LinuxVirtualMachineScaleSet;
 * import com.pulumi.azure.compute.LinuxVirtualMachineScaleSetArgs;
 * import com.pulumi.azure.compute.inputs.LinuxVirtualMachineScaleSetAdminSshKeyArgs;
 * import com.pulumi.azure.compute.inputs.LinuxVirtualMachineScaleSetNetworkInterfaceArgs;
 * import com.pulumi.azure.compute.inputs.LinuxVirtualMachineScaleSetOsDiskArgs;
 * import com.pulumi.azure.compute.inputs.LinuxVirtualMachineScaleSetSourceImageReferenceArgs;
 * import com.pulumi.azure.monitoring.AutoscaleSetting;
 * import com.pulumi.azure.monitoring.AutoscaleSettingArgs;
 * import com.pulumi.azure.monitoring.inputs.AutoscaleSettingProfileArgs;
 * import com.pulumi.azure.monitoring.inputs.AutoscaleSettingProfileCapacityArgs;
 * import com.pulumi.azure.monitoring.inputs.AutoscaleSettingPredictiveArgs;
 * import com.pulumi.azure.monitoring.inputs.AutoscaleSettingNotificationArgs;
 * import com.pulumi.azure.monitoring.inputs.AutoscaleSettingNotificationEmailArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new ResourceGroup("example", ResourceGroupArgs.builder()        
 *             .name("autoscalingTest")
 *             .location("West Europe")
 *             .build());
 * 
 *         var exampleVirtualNetwork = new VirtualNetwork("exampleVirtualNetwork", VirtualNetworkArgs.builder()        
 *             .name("acctvn")
 *             .addressSpaces("10.0.0.0/16")
 *             .location(example.location())
 *             .resourceGroupName(example.name())
 *             .build());
 * 
 *         var exampleSubnet = new Subnet("exampleSubnet", SubnetArgs.builder()        
 *             .name("acctsub")
 *             .resourceGroupName(example.name())
 *             .virtualNetworkName(exampleVirtualNetwork.name())
 *             .addressPrefixes("10.0.2.0/24")
 *             .build());
 * 
 *         var exampleLinuxVirtualMachineScaleSet = new LinuxVirtualMachineScaleSet("exampleLinuxVirtualMachineScaleSet", LinuxVirtualMachineScaleSetArgs.builder()        
 *             .name("exampleset")
 *             .location(example.location())
 *             .resourceGroupName(example.name())
 *             .upgradeMode("Manual")
 *             .sku("Standard_F2")
 *             .instances(2)
 *             .adminUsername("myadmin")
 *             .adminSshKeys(LinuxVirtualMachineScaleSetAdminSshKeyArgs.builder()
 *                 .username("myadmin")
 *                 .publicKey("ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDCsTcryUl51Q2VSEHqDRNmceUFo55ZtcIwxl2QITbN1RREti5ml/VTytC0yeBOvnZA4x4CFpdw/lCDPk0yrH9Ei5vVkXmOrExdTlT3qI7YaAzj1tUVlBd4S6LX1F7y6VLActvdHuDDuXZXzCDd/97420jrDfWZqJMlUK/EmCE5ParCeHIRIvmBxcEnGfFIsw8xQZl0HphxWOtJil8qsUWSdMyCiJYYQpMoMliO99X40AUc4/AlsyPyT5ddbKk08YrZ+rKDVHF7o29rh4vi5MmHkVgVQHKiKybWlHq+b71gIAUQk9wrJxD+dqt4igrmDSpIjfjwnd+l5UIn5fJSO5DYV4YT/4hwK7OKmuo7OFHD0WyY5YnkYEMtFgzemnRBdE8ulcT60DQpVgRMXFWHvhyCWy0L6sgj1QWDZlLpvsIvNfHsyhKFMG1frLnMt/nP0+YCcfg+v1JYeCKjeoJxB8DWcRBsjzItY0CGmzP8UYZiYKl/2u+2TgFS5r7NWH11bxoUzjKdaa1NLw+ieA8GlBFfCbfWe6YVB9ggUte4VtYFMZGxOjS2bAiYtfgTKFJv+XqORAwExG6+G2eDxIDyo80/OA9IG7Xv/jwQr7D6KDjDuULFcN/iTxuttoKrHeYz1hf5ZQlBdllwJHYx6fK2g8kha6r2JIQKocvsAXiiONqSfw== hello{@literal @}world.com")
 *                 .build())
 *             .networkInterfaces(LinuxVirtualMachineScaleSetNetworkInterfaceArgs.builder()
 *                 .name("TestNetworkProfile")
 *                 .primary(true)
 *                 .ipConfigurations(LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationArgs.builder()
 *                     .name("TestIPConfiguration")
 *                     .primary(true)
 *                     .subnetId(exampleSubnet.id())
 *                     .build())
 *                 .build())
 *             .osDisk(LinuxVirtualMachineScaleSetOsDiskArgs.builder()
 *                 .caching("ReadWrite")
 *                 .storageAccountType("StandardSSD_LRS")
 *                 .build())
 *             .sourceImageReference(LinuxVirtualMachineScaleSetSourceImageReferenceArgs.builder()
 *                 .publisher("Canonical")
 *                 .offer("0001-com-ubuntu-server-jammy")
 *                 .sku("22_04-lts")
 *                 .version("latest")
 *                 .build())
 *             .build());
 * 
 *         var exampleAutoscaleSetting = new AutoscaleSetting("exampleAutoscaleSetting", AutoscaleSettingArgs.builder()        
 *             .name("myAutoscaleSetting")
 *             .resourceGroupName(example.name())
 *             .location(example.location())
 *             .targetResourceId(exampleLinuxVirtualMachineScaleSet.id())
 *             .profiles(AutoscaleSettingProfileArgs.builder()
 *                 .name("defaultProfile")
 *                 .capacity(AutoscaleSettingProfileCapacityArgs.builder()
 *                     .default_(1)
 *                     .minimum(1)
 *                     .maximum(10)
 *                     .build())
 *                 .rules(                
 *                     AutoscaleSettingProfileRuleArgs.builder()
 *                         .metricTrigger(AutoscaleSettingProfileRuleMetricTriggerArgs.builder()
 *                             .metricName("Percentage CPU")
 *                             .metricResourceId(exampleLinuxVirtualMachineScaleSet.id())
 *                             .timeGrain("PT1M")
 *                             .statistic("Average")
 *                             .timeWindow("PT5M")
 *                             .timeAggregation("Average")
 *                             .operator("GreaterThan")
 *                             .threshold(75)
 *                             .metricNamespace("microsoft.compute/virtualmachinescalesets")
 *                             .dimensions(AutoscaleSettingProfileRuleMetricTriggerDimensionArgs.builder()
 *                                 .name("AppName")
 *                                 .operator("Equals")
 *                                 .values("App1")
 *                                 .build())
 *                             .build())
 *                         .scaleAction(AutoscaleSettingProfileRuleScaleActionArgs.builder()
 *                             .direction("Increase")
 *                             .type("ChangeCount")
 *                             .value("1")
 *                             .cooldown("PT1M")
 *                             .build())
 *                         .build(),
 *                     AutoscaleSettingProfileRuleArgs.builder()
 *                         .metricTrigger(AutoscaleSettingProfileRuleMetricTriggerArgs.builder()
 *                             .metricName("Percentage CPU")
 *                             .metricResourceId(exampleLinuxVirtualMachineScaleSet.id())
 *                             .timeGrain("PT1M")
 *                             .statistic("Average")
 *                             .timeWindow("PT5M")
 *                             .timeAggregation("Average")
 *                             .operator("LessThan")
 *                             .threshold(25)
 *                             .build())
 *                         .scaleAction(AutoscaleSettingProfileRuleScaleActionArgs.builder()
 *                             .direction("Decrease")
 *                             .type("ChangeCount")
 *                             .value("1")
 *                             .cooldown("PT1M")
 *                             .build())
 *                         .build())
 *                 .build())
 *             .predictive(AutoscaleSettingPredictiveArgs.builder()
 *                 .scaleMode("Enabled")
 *                 .lookAheadTime("PT5M")
 *                 .build())
 *             .notification(AutoscaleSettingNotificationArgs.builder()
 *                 .email(AutoscaleSettingNotificationEmailArgs.builder()
 *                     .sendToSubscriptionAdministrator(true)
 *                     .sendToSubscriptionCoAdministrator(true)
 *                     .customEmails("admin{@literal @}contoso.com")
 *                     .build())
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ### Repeating On Weekends)
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.azure.core.ResourceGroup;
 * import com.pulumi.azure.core.ResourceGroupArgs;
 * import com.pulumi.azure.network.VirtualNetwork;
 * import com.pulumi.azure.network.VirtualNetworkArgs;
 * import com.pulumi.azure.network.Subnet;
 * import com.pulumi.azure.network.SubnetArgs;
 * import com.pulumi.azure.compute.LinuxVirtualMachineScaleSet;
 * import com.pulumi.azure.compute.LinuxVirtualMachineScaleSetArgs;
 * import com.pulumi.azure.compute.inputs.LinuxVirtualMachineScaleSetAdminSshKeyArgs;
 * import com.pulumi.azure.compute.inputs.LinuxVirtualMachineScaleSetNetworkInterfaceArgs;
 * import com.pulumi.azure.compute.inputs.LinuxVirtualMachineScaleSetOsDiskArgs;
 * import com.pulumi.azure.compute.inputs.LinuxVirtualMachineScaleSetSourceImageReferenceArgs;
 * import com.pulumi.azure.monitoring.AutoscaleSetting;
 * import com.pulumi.azure.monitoring.AutoscaleSettingArgs;
 * import com.pulumi.azure.monitoring.inputs.AutoscaleSettingProfileArgs;
 * import com.pulumi.azure.monitoring.inputs.AutoscaleSettingProfileCapacityArgs;
 * import com.pulumi.azure.monitoring.inputs.AutoscaleSettingProfileRecurrenceArgs;
 * import com.pulumi.azure.monitoring.inputs.AutoscaleSettingNotificationArgs;
 * import com.pulumi.azure.monitoring.inputs.AutoscaleSettingNotificationEmailArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new ResourceGroup("example", ResourceGroupArgs.builder()        
 *             .name("autoscalingTest")
 *             .location("West Europe")
 *             .build());
 * 
 *         var exampleVirtualNetwork = new VirtualNetwork("exampleVirtualNetwork", VirtualNetworkArgs.builder()        
 *             .name("acctvn")
 *             .addressSpaces("10.0.0.0/16")
 *             .location(example.location())
 *             .resourceGroupName(example.name())
 *             .build());
 * 
 *         var exampleSubnet = new Subnet("exampleSubnet", SubnetArgs.builder()        
 *             .name("acctsub")
 *             .resourceGroupName(example.name())
 *             .virtualNetworkName(exampleVirtualNetwork.name())
 *             .addressPrefixes("10.0.2.0/24")
 *             .build());
 * 
 *         var exampleLinuxVirtualMachineScaleSet = new LinuxVirtualMachineScaleSet("exampleLinuxVirtualMachineScaleSet", LinuxVirtualMachineScaleSetArgs.builder()        
 *             .name("exampleset")
 *             .location(example.location())
 *             .resourceGroupName(example.name())
 *             .upgradeMode("Manual")
 *             .sku("Standard_F2")
 *             .instances(2)
 *             .adminUsername("myadmin")
 *             .adminSshKeys(LinuxVirtualMachineScaleSetAdminSshKeyArgs.builder()
 *                 .username("myadmin")
 *                 .publicKey("ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDCsTcryUl51Q2VSEHqDRNmceUFo55ZtcIwxl2QITbN1RREti5ml/VTytC0yeBOvnZA4x4CFpdw/lCDPk0yrH9Ei5vVkXmOrExdTlT3qI7YaAzj1tUVlBd4S6LX1F7y6VLActvdHuDDuXZXzCDd/97420jrDfWZqJMlUK/EmCE5ParCeHIRIvmBxcEnGfFIsw8xQZl0HphxWOtJil8qsUWSdMyCiJYYQpMoMliO99X40AUc4/AlsyPyT5ddbKk08YrZ+rKDVHF7o29rh4vi5MmHkVgVQHKiKybWlHq+b71gIAUQk9wrJxD+dqt4igrmDSpIjfjwnd+l5UIn5fJSO5DYV4YT/4hwK7OKmuo7OFHD0WyY5YnkYEMtFgzemnRBdE8ulcT60DQpVgRMXFWHvhyCWy0L6sgj1QWDZlLpvsIvNfHsyhKFMG1frLnMt/nP0+YCcfg+v1JYeCKjeoJxB8DWcRBsjzItY0CGmzP8UYZiYKl/2u+2TgFS5r7NWH11bxoUzjKdaa1NLw+ieA8GlBFfCbfWe6YVB9ggUte4VtYFMZGxOjS2bAiYtfgTKFJv+XqORAwExG6+G2eDxIDyo80/OA9IG7Xv/jwQr7D6KDjDuULFcN/iTxuttoKrHeYz1hf5ZQlBdllwJHYx6fK2g8kha6r2JIQKocvsAXiiONqSfw== hello{@literal @}world.com")
 *                 .build())
 *             .networkInterfaces(LinuxVirtualMachineScaleSetNetworkInterfaceArgs.builder()
 *                 .name("TestNetworkProfile")
 *                 .primary(true)
 *                 .ipConfigurations(LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationArgs.builder()
 *                     .name("TestIPConfiguration")
 *                     .primary(true)
 *                     .subnetId(exampleSubnet.id())
 *                     .build())
 *                 .build())
 *             .osDisk(LinuxVirtualMachineScaleSetOsDiskArgs.builder()
 *                 .caching("ReadWrite")
 *                 .storageAccountType("StandardSSD_LRS")
 *                 .build())
 *             .sourceImageReference(LinuxVirtualMachineScaleSetSourceImageReferenceArgs.builder()
 *                 .publisher("Canonical")
 *                 .offer("0001-com-ubuntu-server-jammy")
 *                 .sku("22_04-lts")
 *                 .version("latest")
 *                 .build())
 *             .build());
 * 
 *         var exampleAutoscaleSetting = new AutoscaleSetting("exampleAutoscaleSetting", AutoscaleSettingArgs.builder()        
 *             .name("myAutoscaleSetting")
 *             .resourceGroupName(example.name())
 *             .location(example.location())
 *             .targetResourceId(exampleLinuxVirtualMachineScaleSet.id())
 *             .profiles(AutoscaleSettingProfileArgs.builder()
 *                 .name("Weekends")
 *                 .capacity(AutoscaleSettingProfileCapacityArgs.builder()
 *                     .default_(1)
 *                     .minimum(1)
 *                     .maximum(10)
 *                     .build())
 *                 .rules(                
 *                     AutoscaleSettingProfileRuleArgs.builder()
 *                         .metricTrigger(AutoscaleSettingProfileRuleMetricTriggerArgs.builder()
 *                             .metricName("Percentage CPU")
 *                             .metricResourceId(exampleLinuxVirtualMachineScaleSet.id())
 *                             .timeGrain("PT1M")
 *                             .statistic("Average")
 *                             .timeWindow("PT5M")
 *                             .timeAggregation("Average")
 *                             .operator("GreaterThan")
 *                             .threshold(90)
 *                             .build())
 *                         .scaleAction(AutoscaleSettingProfileRuleScaleActionArgs.builder()
 *                             .direction("Increase")
 *                             .type("ChangeCount")
 *                             .value("2")
 *                             .cooldown("PT1M")
 *                             .build())
 *                         .build(),
 *                     AutoscaleSettingProfileRuleArgs.builder()
 *                         .metricTrigger(AutoscaleSettingProfileRuleMetricTriggerArgs.builder()
 *                             .metricName("Percentage CPU")
 *                             .metricResourceId(exampleLinuxVirtualMachineScaleSet.id())
 *                             .timeGrain("PT1M")
 *                             .statistic("Average")
 *                             .timeWindow("PT5M")
 *                             .timeAggregation("Average")
 *                             .operator("LessThan")
 *                             .threshold(10)
 *                             .build())
 *                         .scaleAction(AutoscaleSettingProfileRuleScaleActionArgs.builder()
 *                             .direction("Decrease")
 *                             .type("ChangeCount")
 *                             .value("2")
 *                             .cooldown("PT1M")
 *                             .build())
 *                         .build())
 *                 .recurrence(AutoscaleSettingProfileRecurrenceArgs.builder()
 *                     .timezone("Pacific Standard Time")
 *                     .days(                    
 *                         "Saturday",
 *                         "Sunday")
 *                     .hours(12)
 *                     .minutes(0)
 *                     .build())
 *                 .build())
 *             .notification(AutoscaleSettingNotificationArgs.builder()
 *                 .email(AutoscaleSettingNotificationEmailArgs.builder()
 *                     .sendToSubscriptionAdministrator(true)
 *                     .sendToSubscriptionCoAdministrator(true)
 *                     .customEmails("admin{@literal @}contoso.com")
 *                     .build())
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ### For Fixed Dates)
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.azure.core.ResourceGroup;
 * import com.pulumi.azure.core.ResourceGroupArgs;
 * import com.pulumi.azure.network.VirtualNetwork;
 * import com.pulumi.azure.network.VirtualNetworkArgs;
 * import com.pulumi.azure.network.Subnet;
 * import com.pulumi.azure.network.SubnetArgs;
 * import com.pulumi.azure.compute.LinuxVirtualMachineScaleSet;
 * import com.pulumi.azure.compute.LinuxVirtualMachineScaleSetArgs;
 * import com.pulumi.azure.compute.inputs.LinuxVirtualMachineScaleSetAdminSshKeyArgs;
 * import com.pulumi.azure.compute.inputs.LinuxVirtualMachineScaleSetNetworkInterfaceArgs;
 * import com.pulumi.azure.compute.inputs.LinuxVirtualMachineScaleSetOsDiskArgs;
 * import com.pulumi.azure.compute.inputs.LinuxVirtualMachineScaleSetSourceImageReferenceArgs;
 * import com.pulumi.azure.monitoring.AutoscaleSetting;
 * import com.pulumi.azure.monitoring.AutoscaleSettingArgs;
 * import com.pulumi.azure.monitoring.inputs.AutoscaleSettingProfileArgs;
 * import com.pulumi.azure.monitoring.inputs.AutoscaleSettingProfileCapacityArgs;
 * import com.pulumi.azure.monitoring.inputs.AutoscaleSettingProfileFixedDateArgs;
 * import com.pulumi.azure.monitoring.inputs.AutoscaleSettingNotificationArgs;
 * import com.pulumi.azure.monitoring.inputs.AutoscaleSettingNotificationEmailArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new ResourceGroup("example", ResourceGroupArgs.builder()        
 *             .name("autoscalingTest")
 *             .location("West Europe")
 *             .build());
 * 
 *         var exampleVirtualNetwork = new VirtualNetwork("exampleVirtualNetwork", VirtualNetworkArgs.builder()        
 *             .name("acctvn")
 *             .addressSpaces("10.0.0.0/16")
 *             .location(example.location())
 *             .resourceGroupName(example.name())
 *             .build());
 * 
 *         var exampleSubnet = new Subnet("exampleSubnet", SubnetArgs.builder()        
 *             .name("acctsub")
 *             .resourceGroupName(example.name())
 *             .virtualNetworkName(exampleVirtualNetwork.name())
 *             .addressPrefixes("10.0.2.0/24")
 *             .build());
 * 
 *         var exampleLinuxVirtualMachineScaleSet = new LinuxVirtualMachineScaleSet("exampleLinuxVirtualMachineScaleSet", LinuxVirtualMachineScaleSetArgs.builder()        
 *             .name("exampleset")
 *             .location(example.location())
 *             .resourceGroupName(example.name())
 *             .upgradeMode("Manual")
 *             .sku("Standard_F2")
 *             .instances(2)
 *             .adminUsername("myadmin")
 *             .adminSshKeys(LinuxVirtualMachineScaleSetAdminSshKeyArgs.builder()
 *                 .username("myadmin")
 *                 .publicKey("ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDCsTcryUl51Q2VSEHqDRNmceUFo55ZtcIwxl2QITbN1RREti5ml/VTytC0yeBOvnZA4x4CFpdw/lCDPk0yrH9Ei5vVkXmOrExdTlT3qI7YaAzj1tUVlBd4S6LX1F7y6VLActvdHuDDuXZXzCDd/97420jrDfWZqJMlUK/EmCE5ParCeHIRIvmBxcEnGfFIsw8xQZl0HphxWOtJil8qsUWSdMyCiJYYQpMoMliO99X40AUc4/AlsyPyT5ddbKk08YrZ+rKDVHF7o29rh4vi5MmHkVgVQHKiKybWlHq+b71gIAUQk9wrJxD+dqt4igrmDSpIjfjwnd+l5UIn5fJSO5DYV4YT/4hwK7OKmuo7OFHD0WyY5YnkYEMtFgzemnRBdE8ulcT60DQpVgRMXFWHvhyCWy0L6sgj1QWDZlLpvsIvNfHsyhKFMG1frLnMt/nP0+YCcfg+v1JYeCKjeoJxB8DWcRBsjzItY0CGmzP8UYZiYKl/2u+2TgFS5r7NWH11bxoUzjKdaa1NLw+ieA8GlBFfCbfWe6YVB9ggUte4VtYFMZGxOjS2bAiYtfgTKFJv+XqORAwExG6+G2eDxIDyo80/OA9IG7Xv/jwQr7D6KDjDuULFcN/iTxuttoKrHeYz1hf5ZQlBdllwJHYx6fK2g8kha6r2JIQKocvsAXiiONqSfw== hello{@literal @}world.com")
 *                 .build())
 *             .networkInterfaces(LinuxVirtualMachineScaleSetNetworkInterfaceArgs.builder()
 *                 .name("TestNetworkProfile")
 *                 .primary(true)
 *                 .ipConfigurations(LinuxVirtualMachineScaleSetNetworkInterfaceIpConfigurationArgs.builder()
 *                     .name("TestIPConfiguration")
 *                     .primary(true)
 *                     .subnetId(exampleSubnet.id())
 *                     .build())
 *                 .build())
 *             .osDisk(LinuxVirtualMachineScaleSetOsDiskArgs.builder()
 *                 .caching("ReadWrite")
 *                 .storageAccountType("StandardSSD_LRS")
 *                 .build())
 *             .sourceImageReference(LinuxVirtualMachineScaleSetSourceImageReferenceArgs.builder()
 *                 .publisher("Canonical")
 *                 .offer("0001-com-ubuntu-server-jammy")
 *                 .sku("22_04-lts")
 *                 .version("latest")
 *                 .build())
 *             .build());
 * 
 *         var exampleAutoscaleSetting = new AutoscaleSetting("exampleAutoscaleSetting", AutoscaleSettingArgs.builder()        
 *             .name("myAutoscaleSetting")
 *             .enabled(true)
 *             .resourceGroupName(example.name())
 *             .location(example.location())
 *             .targetResourceId(exampleLinuxVirtualMachineScaleSet.id())
 *             .profiles(AutoscaleSettingProfileArgs.builder()
 *                 .name("forJuly")
 *                 .capacity(AutoscaleSettingProfileCapacityArgs.builder()
 *                     .default_(1)
 *                     .minimum(1)
 *                     .maximum(10)
 *                     .build())
 *                 .rules(                
 *                     AutoscaleSettingProfileRuleArgs.builder()
 *                         .metricTrigger(AutoscaleSettingProfileRuleMetricTriggerArgs.builder()
 *                             .metricName("Percentage CPU")
 *                             .metricResourceId(exampleLinuxVirtualMachineScaleSet.id())
 *                             .timeGrain("PT1M")
 *                             .statistic("Average")
 *                             .timeWindow("PT5M")
 *                             .timeAggregation("Average")
 *                             .operator("GreaterThan")
 *                             .threshold(90)
 *                             .build())
 *                         .scaleAction(AutoscaleSettingProfileRuleScaleActionArgs.builder()
 *                             .direction("Increase")
 *                             .type("ChangeCount")
 *                             .value("2")
 *                             .cooldown("PT1M")
 *                             .build())
 *                         .build(),
 *                     AutoscaleSettingProfileRuleArgs.builder()
 *                         .metricTrigger(AutoscaleSettingProfileRuleMetricTriggerArgs.builder()
 *                             .metricName("Percentage CPU")
 *                             .metricResourceId(exampleLinuxVirtualMachineScaleSet.id())
 *                             .timeGrain("PT1M")
 *                             .statistic("Average")
 *                             .timeWindow("PT5M")
 *                             .timeAggregation("Average")
 *                             .operator("LessThan")
 *                             .threshold(10)
 *                             .build())
 *                         .scaleAction(AutoscaleSettingProfileRuleScaleActionArgs.builder()
 *                             .direction("Decrease")
 *                             .type("ChangeCount")
 *                             .value("2")
 *                             .cooldown("PT1M")
 *                             .build())
 *                         .build())
 *                 .fixedDate(AutoscaleSettingProfileFixedDateArgs.builder()
 *                     .timezone("Pacific Standard Time")
 *                     .start("2020-07-01T00:00:00Z")
 *                     .end("2020-07-31T23:59:59Z")
 *                     .build())
 *                 .build())
 *             .notification(AutoscaleSettingNotificationArgs.builder()
 *                 .email(AutoscaleSettingNotificationEmailArgs.builder()
 *                     .sendToSubscriptionAdministrator(true)
 *                     .sendToSubscriptionCoAdministrator(true)
 *                     .customEmails("admin{@literal @}contoso.com")
 *                     .build())
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * AutoScale Setting can be imported using the `resource id`, e.g.
 * 
 * ```sh
 * $ pulumi import azure:monitoring/autoscaleSetting:AutoscaleSetting example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.Insights/autoScaleSettings/setting1
 * ```
 * 
 */
@ResourceType(type="azure:monitoring/autoscaleSetting:AutoscaleSetting")
public class AutoscaleSetting extends com.pulumi.resources.CustomResource {
    /**
     * Specifies whether automatic scaling is enabled for the target resource. Defaults to `true`.
     * 
     */
    @Export(name="enabled", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> enabled;

    /**
     * @return Specifies whether automatic scaling is enabled for the target resource. Defaults to `true`.
     * 
     */
    public Output<Optional<Boolean>> enabled() {
        return Codegen.optional(this.enabled);
    }
    /**
     * Specifies the supported Azure location where the AutoScale Setting should exist. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="location", refs={String.class}, tree="[0]")
    private Output<String> location;

    /**
     * @return Specifies the supported Azure location where the AutoScale Setting should exist. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> location() {
        return this.location;
    }
    /**
     * The name of the AutoScale Setting. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The name of the AutoScale Setting. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Specifies a `notification` block as defined below.
     * 
     */
    @Export(name="notification", refs={AutoscaleSettingNotification.class}, tree="[0]")
    private Output</* @Nullable */ AutoscaleSettingNotification> notification;

    /**
     * @return Specifies a `notification` block as defined below.
     * 
     */
    public Output<Optional<AutoscaleSettingNotification>> notification() {
        return Codegen.optional(this.notification);
    }
    /**
     * A `predictive` block as defined below.
     * 
     */
    @Export(name="predictive", refs={AutoscaleSettingPredictive.class}, tree="[0]")
    private Output</* @Nullable */ AutoscaleSettingPredictive> predictive;

    /**
     * @return A `predictive` block as defined below.
     * 
     */
    public Output<Optional<AutoscaleSettingPredictive>> predictive() {
        return Codegen.optional(this.predictive);
    }
    /**
     * Specifies one or more (up to 20) `profile` blocks as defined below.
     * 
     */
    @Export(name="profiles", refs={List.class,AutoscaleSettingProfile.class}, tree="[0,1]")
    private Output<List<AutoscaleSettingProfile>> profiles;

    /**
     * @return Specifies one or more (up to 20) `profile` blocks as defined below.
     * 
     */
    public Output<List<AutoscaleSettingProfile>> profiles() {
        return this.profiles;
    }
    /**
     * The name of the Resource Group in the AutoScale Setting should be created. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="resourceGroupName", refs={String.class}, tree="[0]")
    private Output<String> resourceGroupName;

    /**
     * @return The name of the Resource Group in the AutoScale Setting should be created. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }
    /**
     * A mapping of tags to assign to the resource.
     * 
     */
    @Export(name="tags", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output</* @Nullable */ Map<String,String>> tags;

    /**
     * @return A mapping of tags to assign to the resource.
     * 
     */
    public Output<Optional<Map<String,String>>> tags() {
        return Codegen.optional(this.tags);
    }
    /**
     * Specifies the resource ID of the resource that the autoscale setting should be added to. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="targetResourceId", refs={String.class}, tree="[0]")
    private Output<String> targetResourceId;

    /**
     * @return Specifies the resource ID of the resource that the autoscale setting should be added to. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> targetResourceId() {
        return this.targetResourceId;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public AutoscaleSetting(String name) {
        this(name, AutoscaleSettingArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public AutoscaleSetting(String name, AutoscaleSettingArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public AutoscaleSetting(String name, AutoscaleSettingArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:monitoring/autoscaleSetting:AutoscaleSetting", name, args == null ? AutoscaleSettingArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private AutoscaleSetting(String name, Output<String> id, @Nullable AutoscaleSettingState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:monitoring/autoscaleSetting:AutoscaleSetting", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static AutoscaleSetting get(String name, Output<String> id, @Nullable AutoscaleSettingState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new AutoscaleSetting(name, id, state, options);
    }
}
