// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.monitoring;

import com.pulumi.azure.Utilities;
import com.pulumi.azure.monitoring.AutoscaleSettingArgs;
import com.pulumi.azure.monitoring.inputs.AutoscaleSettingState;
import com.pulumi.azure.monitoring.outputs.AutoscaleSettingNotification;
import com.pulumi.azure.monitoring.outputs.AutoscaleSettingPredictive;
import com.pulumi.azure.monitoring.outputs.AutoscaleSettingProfile;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Manages a AutoScale Setting which can be applied to Virtual Machine Scale Sets, App Services and other scalable resources.
 * 
 * ## Example Usage
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.azure.core.ResourceGroup;
 * import com.pulumi.azure.core.ResourceGroupArgs;
 * import com.pulumi.azure.network_virtualNetwork.VirtualNetwork;
 * import com.pulumi.azure.network_virtualNetwork.VirtualNetworkArgs;
 * import com.pulumi.azure.network.Subnet;
 * import com.pulumi.azure.network.SubnetArgs;
 * import com.pulumi.azure.compute.LinuxVirtualMachineScaleSet;
 * import com.pulumi.azure.compute.LinuxVirtualMachineScaleSetArgs;
 * import com.pulumi.azure.monitoring.AutoscaleSetting;
 * import com.pulumi.azure.monitoring.AutoscaleSettingArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new ResourceGroup(&#34;example&#34;, ResourceGroupArgs.builder()        
 *             .name(&#34;autoscalingTest&#34;)
 *             .location(&#34;West Europe&#34;)
 *             .build());
 * 
 *         var exampleVirtualNetwork = new VirtualNetwork(&#34;exampleVirtualNetwork&#34;, VirtualNetworkArgs.builder()        
 *             .name(&#34;acctvn&#34;)
 *             .addressSpaces(&#34;10.0.0.0/16&#34;)
 *             .location(example.location())
 *             .resourceGroupName(example.name())
 *             .build());
 * 
 *         var exampleSubnet = new Subnet(&#34;exampleSubnet&#34;, SubnetArgs.builder()        
 *             .name(&#34;acctsub&#34;)
 *             .resourceGroupName(example.name())
 *             .virtualNetworkName(exampleVirtualNetwork.name())
 *             .addressPrefixes(&#34;10.0.2.0/24&#34;)
 *             .build());
 * 
 *         var exampleLinuxVirtualMachineScaleSet = new LinuxVirtualMachineScaleSet(&#34;exampleLinuxVirtualMachineScaleSet&#34;, LinuxVirtualMachineScaleSetArgs.builder()        
 *             .name(&#34;exampleset&#34;)
 *             .location(example.location())
 *             .resourceGroupName(example.name())
 *             .upgradeMode(&#34;Manual&#34;)
 *             .sku(&#34;Standard_F2&#34;)
 *             .instances(2)
 *             .adminUsername(&#34;myadmin&#34;)
 *             .adminSshKeys(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference))
 *             .networkInterfaces(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference))
 *             .osDisk(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference))
 *             .sourceImageReference(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference))
 *             .build());
 * 
 *         var exampleAutoscaleSetting = new AutoscaleSetting(&#34;exampleAutoscaleSetting&#34;, AutoscaleSettingArgs.builder()        
 *             .name(&#34;myAutoscaleSetting&#34;)
 *             .resourceGroupName(example.name())
 *             .location(example.location())
 *             .targetResourceId(exampleLinuxVirtualMachineScaleSet.id())
 *             .profiles(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference))
 *             .predictive(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference))
 *             .notification(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference))
 *             .build());
 * 
 *     }
 * }
 * ```
 * ### Repeating On Weekends)
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.azure.core.ResourceGroup;
 * import com.pulumi.azure.core.ResourceGroupArgs;
 * import com.pulumi.azure.network_virtualNetwork.VirtualNetwork;
 * import com.pulumi.azure.network_virtualNetwork.VirtualNetworkArgs;
 * import com.pulumi.azure.network.Subnet;
 * import com.pulumi.azure.network.SubnetArgs;
 * import com.pulumi.azure.compute.LinuxVirtualMachineScaleSet;
 * import com.pulumi.azure.compute.LinuxVirtualMachineScaleSetArgs;
 * import com.pulumi.azure.monitoring.AutoscaleSetting;
 * import com.pulumi.azure.monitoring.AutoscaleSettingArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new ResourceGroup(&#34;example&#34;, ResourceGroupArgs.builder()        
 *             .name(&#34;autoscalingTest&#34;)
 *             .location(&#34;West Europe&#34;)
 *             .build());
 * 
 *         var exampleVirtualNetwork = new VirtualNetwork(&#34;exampleVirtualNetwork&#34;, VirtualNetworkArgs.builder()        
 *             .name(&#34;acctvn&#34;)
 *             .addressSpaces(&#34;10.0.0.0/16&#34;)
 *             .location(example.location())
 *             .resourceGroupName(example.name())
 *             .build());
 * 
 *         var exampleSubnet = new Subnet(&#34;exampleSubnet&#34;, SubnetArgs.builder()        
 *             .name(&#34;acctsub&#34;)
 *             .resourceGroupName(example.name())
 *             .virtualNetworkName(exampleVirtualNetwork.name())
 *             .addressPrefixes(&#34;10.0.2.0/24&#34;)
 *             .build());
 * 
 *         var exampleLinuxVirtualMachineScaleSet = new LinuxVirtualMachineScaleSet(&#34;exampleLinuxVirtualMachineScaleSet&#34;, LinuxVirtualMachineScaleSetArgs.builder()        
 *             .name(&#34;exampleset&#34;)
 *             .location(example.location())
 *             .resourceGroupName(example.name())
 *             .upgradeMode(&#34;Manual&#34;)
 *             .sku(&#34;Standard_F2&#34;)
 *             .instances(2)
 *             .adminUsername(&#34;myadmin&#34;)
 *             .adminSshKeys(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference))
 *             .networkInterfaces(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference))
 *             .osDisk(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference))
 *             .sourceImageReference(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference))
 *             .build());
 * 
 *         var exampleAutoscaleSetting = new AutoscaleSetting(&#34;exampleAutoscaleSetting&#34;, AutoscaleSettingArgs.builder()        
 *             .name(&#34;myAutoscaleSetting&#34;)
 *             .resourceGroupName(example.name())
 *             .location(example.location())
 *             .targetResourceId(exampleLinuxVirtualMachineScaleSet.id())
 *             .profiles(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference))
 *             .notification(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference))
 *             .build());
 * 
 *     }
 * }
 * ```
 * ### For Fixed Dates)
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.azure.core.ResourceGroup;
 * import com.pulumi.azure.core.ResourceGroupArgs;
 * import com.pulumi.azure.network_virtualNetwork.VirtualNetwork;
 * import com.pulumi.azure.network_virtualNetwork.VirtualNetworkArgs;
 * import com.pulumi.azure.network.Subnet;
 * import com.pulumi.azure.network.SubnetArgs;
 * import com.pulumi.azure.compute.LinuxVirtualMachineScaleSet;
 * import com.pulumi.azure.compute.LinuxVirtualMachineScaleSetArgs;
 * import com.pulumi.azure.monitoring.AutoscaleSetting;
 * import com.pulumi.azure.monitoring.AutoscaleSettingArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new ResourceGroup(&#34;example&#34;, ResourceGroupArgs.builder()        
 *             .name(&#34;autoscalingTest&#34;)
 *             .location(&#34;West Europe&#34;)
 *             .build());
 * 
 *         var exampleVirtualNetwork = new VirtualNetwork(&#34;exampleVirtualNetwork&#34;, VirtualNetworkArgs.builder()        
 *             .name(&#34;acctvn&#34;)
 *             .addressSpaces(&#34;10.0.0.0/16&#34;)
 *             .location(example.location())
 *             .resourceGroupName(example.name())
 *             .build());
 * 
 *         var exampleSubnet = new Subnet(&#34;exampleSubnet&#34;, SubnetArgs.builder()        
 *             .name(&#34;acctsub&#34;)
 *             .resourceGroupName(example.name())
 *             .virtualNetworkName(exampleVirtualNetwork.name())
 *             .addressPrefixes(&#34;10.0.2.0/24&#34;)
 *             .build());
 * 
 *         var exampleLinuxVirtualMachineScaleSet = new LinuxVirtualMachineScaleSet(&#34;exampleLinuxVirtualMachineScaleSet&#34;, LinuxVirtualMachineScaleSetArgs.builder()        
 *             .name(&#34;exampleset&#34;)
 *             .location(example.location())
 *             .resourceGroupName(example.name())
 *             .upgradeMode(&#34;Manual&#34;)
 *             .sku(&#34;Standard_F2&#34;)
 *             .instances(2)
 *             .adminUsername(&#34;myadmin&#34;)
 *             .adminSshKeys(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference))
 *             .networkInterfaces(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference))
 *             .osDisk(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference))
 *             .sourceImageReference(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference))
 *             .build());
 * 
 *         var exampleAutoscaleSetting = new AutoscaleSetting(&#34;exampleAutoscaleSetting&#34;, AutoscaleSettingArgs.builder()        
 *             .name(&#34;myAutoscaleSetting&#34;)
 *             .enabled(true)
 *             .resourceGroupName(example.name())
 *             .location(example.location())
 *             .targetResourceId(exampleLinuxVirtualMachineScaleSet.id())
 *             .profiles(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference))
 *             .notification(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference))
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * AutoScale Setting can be imported using the `resource id`, e.g.
 * 
 * ```sh
 * $ pulumi import azure:monitoring/autoscaleSetting:AutoscaleSetting example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.Insights/autoScaleSettings/setting1
 * ```
 * 
 */
@ResourceType(type="azure:monitoring/autoscaleSetting:AutoscaleSetting")
public class AutoscaleSetting extends com.pulumi.resources.CustomResource {
    /**
     * Specifies whether automatic scaling is enabled for the target resource. Defaults to `true`.
     * 
     */
    @Export(name="enabled", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> enabled;

    /**
     * @return Specifies whether automatic scaling is enabled for the target resource. Defaults to `true`.
     * 
     */
    public Output<Optional<Boolean>> enabled() {
        return Codegen.optional(this.enabled);
    }
    /**
     * Specifies the supported Azure location where the AutoScale Setting should exist. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="location", refs={String.class}, tree="[0]")
    private Output<String> location;

    /**
     * @return Specifies the supported Azure location where the AutoScale Setting should exist. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> location() {
        return this.location;
    }
    /**
     * The name of the AutoScale Setting. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The name of the AutoScale Setting. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Specifies a `notification` block as defined below.
     * 
     */
    @Export(name="notification", refs={AutoscaleSettingNotification.class}, tree="[0]")
    private Output</* @Nullable */ AutoscaleSettingNotification> notification;

    /**
     * @return Specifies a `notification` block as defined below.
     * 
     */
    public Output<Optional<AutoscaleSettingNotification>> notification() {
        return Codegen.optional(this.notification);
    }
    /**
     * A `predictive` block as defined below.
     * 
     */
    @Export(name="predictive", refs={AutoscaleSettingPredictive.class}, tree="[0]")
    private Output</* @Nullable */ AutoscaleSettingPredictive> predictive;

    /**
     * @return A `predictive` block as defined below.
     * 
     */
    public Output<Optional<AutoscaleSettingPredictive>> predictive() {
        return Codegen.optional(this.predictive);
    }
    /**
     * Specifies one or more (up to 20) `profile` blocks as defined below.
     * 
     */
    @Export(name="profiles", refs={List.class,AutoscaleSettingProfile.class}, tree="[0,1]")
    private Output<List<AutoscaleSettingProfile>> profiles;

    /**
     * @return Specifies one or more (up to 20) `profile` blocks as defined below.
     * 
     */
    public Output<List<AutoscaleSettingProfile>> profiles() {
        return this.profiles;
    }
    /**
     * The name of the Resource Group in the AutoScale Setting should be created. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="resourceGroupName", refs={String.class}, tree="[0]")
    private Output<String> resourceGroupName;

    /**
     * @return The name of the Resource Group in the AutoScale Setting should be created. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }
    /**
     * A mapping of tags to assign to the resource.
     * 
     */
    @Export(name="tags", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output</* @Nullable */ Map<String,String>> tags;

    /**
     * @return A mapping of tags to assign to the resource.
     * 
     */
    public Output<Optional<Map<String,String>>> tags() {
        return Codegen.optional(this.tags);
    }
    /**
     * Specifies the resource ID of the resource that the autoscale setting should be added to. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="targetResourceId", refs={String.class}, tree="[0]")
    private Output<String> targetResourceId;

    /**
     * @return Specifies the resource ID of the resource that the autoscale setting should be added to. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> targetResourceId() {
        return this.targetResourceId;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public AutoscaleSetting(String name) {
        this(name, AutoscaleSettingArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public AutoscaleSetting(String name, AutoscaleSettingArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public AutoscaleSetting(String name, AutoscaleSettingArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:monitoring/autoscaleSetting:AutoscaleSetting", name, args == null ? AutoscaleSettingArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private AutoscaleSetting(String name, Output<String> id, @Nullable AutoscaleSettingState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:monitoring/autoscaleSetting:AutoscaleSetting", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static AutoscaleSetting get(String name, Output<String> id, @Nullable AutoscaleSettingState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new AutoscaleSetting(name, id, state, options);
    }
}
