// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.servicebus.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetNamespaceAuthorizationRuleResult {
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private String name;
    private @Nullable String namespaceId;
    /**
     * @deprecated
     * `namespace_name` will be removed in favour of the property `namespace_id` in version 4.0 of the AzureRM Provider.
     * 
     */
    @Deprecated /* `namespace_name` will be removed in favour of the property `namespace_id` in version 4.0 of the AzureRM Provider. */
    private @Nullable String namespaceName;
    /**
     * @return The primary connection string for the authorization rule.
     * 
     */
    private String primaryConnectionString;
    /**
     * @return The alias Primary Connection String for the ServiceBus Namespace, if the namespace is Geo DR paired.
     * 
     */
    private String primaryConnectionStringAlias;
    /**
     * @return The primary access key for the authorization rule.
     * 
     */
    private String primaryKey;
    /**
     * @deprecated
     * `resource_group_name` will be removed in favour of the property `namespace_id` in version 4.0 of the AzureRM Provider.
     * 
     */
    @Deprecated /* `resource_group_name` will be removed in favour of the property `namespace_id` in version 4.0 of the AzureRM Provider. */
    private @Nullable String resourceGroupName;
    /**
     * @return The secondary connection string for the authorization rule.
     * 
     */
    private String secondaryConnectionString;
    /**
     * @return The alias Secondary Connection String for the ServiceBus Namespace
     * 
     */
    private String secondaryConnectionStringAlias;
    /**
     * @return The secondary access key for the authorization rule.
     * 
     */
    private String secondaryKey;

    private GetNamespaceAuthorizationRuleResult() {}
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public String name() {
        return this.name;
    }
    public Optional<String> namespaceId() {
        return Optional.ofNullable(this.namespaceId);
    }
    /**
     * @deprecated
     * `namespace_name` will be removed in favour of the property `namespace_id` in version 4.0 of the AzureRM Provider.
     * 
     */
    @Deprecated /* `namespace_name` will be removed in favour of the property `namespace_id` in version 4.0 of the AzureRM Provider. */
    public Optional<String> namespaceName() {
        return Optional.ofNullable(this.namespaceName);
    }
    /**
     * @return The primary connection string for the authorization rule.
     * 
     */
    public String primaryConnectionString() {
        return this.primaryConnectionString;
    }
    /**
     * @return The alias Primary Connection String for the ServiceBus Namespace, if the namespace is Geo DR paired.
     * 
     */
    public String primaryConnectionStringAlias() {
        return this.primaryConnectionStringAlias;
    }
    /**
     * @return The primary access key for the authorization rule.
     * 
     */
    public String primaryKey() {
        return this.primaryKey;
    }
    /**
     * @deprecated
     * `resource_group_name` will be removed in favour of the property `namespace_id` in version 4.0 of the AzureRM Provider.
     * 
     */
    @Deprecated /* `resource_group_name` will be removed in favour of the property `namespace_id` in version 4.0 of the AzureRM Provider. */
    public Optional<String> resourceGroupName() {
        return Optional.ofNullable(this.resourceGroupName);
    }
    /**
     * @return The secondary connection string for the authorization rule.
     * 
     */
    public String secondaryConnectionString() {
        return this.secondaryConnectionString;
    }
    /**
     * @return The alias Secondary Connection String for the ServiceBus Namespace
     * 
     */
    public String secondaryConnectionStringAlias() {
        return this.secondaryConnectionStringAlias;
    }
    /**
     * @return The secondary access key for the authorization rule.
     * 
     */
    public String secondaryKey() {
        return this.secondaryKey;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetNamespaceAuthorizationRuleResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String id;
        private String name;
        private @Nullable String namespaceId;
        private @Nullable String namespaceName;
        private String primaryConnectionString;
        private String primaryConnectionStringAlias;
        private String primaryKey;
        private @Nullable String resourceGroupName;
        private String secondaryConnectionString;
        private String secondaryConnectionStringAlias;
        private String secondaryKey;
        public Builder() {}
        public Builder(GetNamespaceAuthorizationRuleResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.namespaceId = defaults.namespaceId;
    	      this.namespaceName = defaults.namespaceName;
    	      this.primaryConnectionString = defaults.primaryConnectionString;
    	      this.primaryConnectionStringAlias = defaults.primaryConnectionStringAlias;
    	      this.primaryKey = defaults.primaryKey;
    	      this.resourceGroupName = defaults.resourceGroupName;
    	      this.secondaryConnectionString = defaults.secondaryConnectionString;
    	      this.secondaryConnectionStringAlias = defaults.secondaryConnectionStringAlias;
    	      this.secondaryKey = defaults.secondaryKey;
        }

        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetNamespaceAuthorizationRuleResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetNamespaceAuthorizationRuleResult", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder namespaceId(@Nullable String namespaceId) {

            this.namespaceId = namespaceId;
            return this;
        }
        @CustomType.Setter
        public Builder namespaceName(@Nullable String namespaceName) {

            this.namespaceName = namespaceName;
            return this;
        }
        @CustomType.Setter
        public Builder primaryConnectionString(String primaryConnectionString) {
            if (primaryConnectionString == null) {
              throw new MissingRequiredPropertyException("GetNamespaceAuthorizationRuleResult", "primaryConnectionString");
            }
            this.primaryConnectionString = primaryConnectionString;
            return this;
        }
        @CustomType.Setter
        public Builder primaryConnectionStringAlias(String primaryConnectionStringAlias) {
            if (primaryConnectionStringAlias == null) {
              throw new MissingRequiredPropertyException("GetNamespaceAuthorizationRuleResult", "primaryConnectionStringAlias");
            }
            this.primaryConnectionStringAlias = primaryConnectionStringAlias;
            return this;
        }
        @CustomType.Setter
        public Builder primaryKey(String primaryKey) {
            if (primaryKey == null) {
              throw new MissingRequiredPropertyException("GetNamespaceAuthorizationRuleResult", "primaryKey");
            }
            this.primaryKey = primaryKey;
            return this;
        }
        @CustomType.Setter
        public Builder resourceGroupName(@Nullable String resourceGroupName) {

            this.resourceGroupName = resourceGroupName;
            return this;
        }
        @CustomType.Setter
        public Builder secondaryConnectionString(String secondaryConnectionString) {
            if (secondaryConnectionString == null) {
              throw new MissingRequiredPropertyException("GetNamespaceAuthorizationRuleResult", "secondaryConnectionString");
            }
            this.secondaryConnectionString = secondaryConnectionString;
            return this;
        }
        @CustomType.Setter
        public Builder secondaryConnectionStringAlias(String secondaryConnectionStringAlias) {
            if (secondaryConnectionStringAlias == null) {
              throw new MissingRequiredPropertyException("GetNamespaceAuthorizationRuleResult", "secondaryConnectionStringAlias");
            }
            this.secondaryConnectionStringAlias = secondaryConnectionStringAlias;
            return this;
        }
        @CustomType.Setter
        public Builder secondaryKey(String secondaryKey) {
            if (secondaryKey == null) {
              throw new MissingRequiredPropertyException("GetNamespaceAuthorizationRuleResult", "secondaryKey");
            }
            this.secondaryKey = secondaryKey;
            return this;
        }
        public GetNamespaceAuthorizationRuleResult build() {
            final var _resultValue = new GetNamespaceAuthorizationRuleResult();
            _resultValue.id = id;
            _resultValue.name = name;
            _resultValue.namespaceId = namespaceId;
            _resultValue.namespaceName = namespaceName;
            _resultValue.primaryConnectionString = primaryConnectionString;
            _resultValue.primaryConnectionStringAlias = primaryConnectionStringAlias;
            _resultValue.primaryKey = primaryKey;
            _resultValue.resourceGroupName = resourceGroupName;
            _resultValue.secondaryConnectionString = secondaryConnectionString;
            _resultValue.secondaryConnectionStringAlias = secondaryConnectionStringAlias;
            _resultValue.secondaryKey = secondaryKey;
            return _resultValue;
        }
    }
}
