// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.trafficmanager.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;


public final class ProfileDnsConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final ProfileDnsConfigArgs Empty = new ProfileDnsConfigArgs();

    /**
     * The relative domain name, this is combined with the domain name used by Traffic Manager to form the FQDN which is exported as documented below. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="relativeName", required=true)
    private Output<String> relativeName;

    /**
     * @return The relative domain name, this is combined with the domain name used by Traffic Manager to form the FQDN which is exported as documented below. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> relativeName() {
        return this.relativeName;
    }

    /**
     * The TTL value of the Profile used by Local DNS resolvers and clients.
     * 
     */
    @Import(name="ttl", required=true)
    private Output<Integer> ttl;

    /**
     * @return The TTL value of the Profile used by Local DNS resolvers and clients.
     * 
     */
    public Output<Integer> ttl() {
        return this.ttl;
    }

    private ProfileDnsConfigArgs() {}

    private ProfileDnsConfigArgs(ProfileDnsConfigArgs $) {
        this.relativeName = $.relativeName;
        this.ttl = $.ttl;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ProfileDnsConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ProfileDnsConfigArgs $;

        public Builder() {
            $ = new ProfileDnsConfigArgs();
        }

        public Builder(ProfileDnsConfigArgs defaults) {
            $ = new ProfileDnsConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param relativeName The relative domain name, this is combined with the domain name used by Traffic Manager to form the FQDN which is exported as documented below. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder relativeName(Output<String> relativeName) {
            $.relativeName = relativeName;
            return this;
        }

        /**
         * @param relativeName The relative domain name, this is combined with the domain name used by Traffic Manager to form the FQDN which is exported as documented below. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder relativeName(String relativeName) {
            return relativeName(Output.of(relativeName));
        }

        /**
         * @param ttl The TTL value of the Profile used by Local DNS resolvers and clients.
         * 
         * @return builder
         * 
         */
        public Builder ttl(Output<Integer> ttl) {
            $.ttl = ttl;
            return this;
        }

        /**
         * @param ttl The TTL value of the Profile used by Local DNS resolvers and clients.
         * 
         * @return builder
         * 
         */
        public Builder ttl(Integer ttl) {
            return ttl(Output.of(ttl));
        }

        public ProfileDnsConfigArgs build() {
            if ($.relativeName == null) {
                throw new MissingRequiredPropertyException("ProfileDnsConfigArgs", "relativeName");
            }
            if ($.ttl == null) {
                throw new MissingRequiredPropertyException("ProfileDnsConfigArgs", "ttl");
            }
            return $;
        }
    }

}
