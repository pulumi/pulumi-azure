// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.keyvault;

import com.pulumi.azure.Utilities;
import com.pulumi.azure.keyvault.CertificateIssuerArgs;
import com.pulumi.azure.keyvault.inputs.CertificateIssuerState;
import com.pulumi.azure.keyvault.outputs.CertificateIssuerAdmin;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Manages a Key Vault Certificate Issuer.
 * 
 * ## Example Usage
 * 
 * ## Import
 * 
 * Key Vault Certificate Issuers can be imported using the `resource id`, e.g.
 * 
 * ```sh
 *  $ pulumi import azure:keyvault/certificateIssuer:CertificateIssuer example &#34;https://key-vault-name.vault.azure.net/certificates/issuers/example&#34;
 * ```
 * 
 */
@ResourceType(type="azure:keyvault/certificateIssuer:CertificateIssuer")
public class CertificateIssuer extends com.pulumi.resources.CustomResource {
    /**
     * The account number with the third-party Certificate Issuer.
     * 
     */
    @Export(name="accountId", type=String.class, parameters={})
    private Output</* @Nullable */ String> accountId;

    /**
     * @return The account number with the third-party Certificate Issuer.
     * 
     */
    public Output<Optional<String>> accountId() {
        return Codegen.optional(this.accountId);
    }
    /**
     * One or more `admin` blocks as defined below.
     * 
     */
    @Export(name="admins", type=List.class, parameters={CertificateIssuerAdmin.class})
    private Output</* @Nullable */ List<CertificateIssuerAdmin>> admins;

    /**
     * @return One or more `admin` blocks as defined below.
     * 
     */
    public Output<Optional<List<CertificateIssuerAdmin>>> admins() {
        return Codegen.optional(this.admins);
    }
    /**
     * The ID of the Key Vault in which to create the Certificate Issuer.
     * 
     */
    @Export(name="keyVaultId", type=String.class, parameters={})
    private Output<String> keyVaultId;

    /**
     * @return The ID of the Key Vault in which to create the Certificate Issuer.
     * 
     */
    public Output<String> keyVaultId() {
        return this.keyVaultId;
    }
    /**
     * The name which should be used for this Key Vault Certificate Issuer. Changing this forces a new Key Vault Certificate Issuer to be created.
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return The name which should be used for this Key Vault Certificate Issuer. Changing this forces a new Key Vault Certificate Issuer to be created.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The ID of the organization as provided to the issuer.
     * 
     */
    @Export(name="orgId", type=String.class, parameters={})
    private Output</* @Nullable */ String> orgId;

    /**
     * @return The ID of the organization as provided to the issuer.
     * 
     */
    public Output<Optional<String>> orgId() {
        return Codegen.optional(this.orgId);
    }
    /**
     * The password associated with the account and organization ID at the third-party Certificate Issuer. If not specified, will not overwrite any previous value.
     * 
     */
    @Export(name="password", type=String.class, parameters={})
    private Output</* @Nullable */ String> password;

    /**
     * @return The password associated with the account and organization ID at the third-party Certificate Issuer. If not specified, will not overwrite any previous value.
     * 
     */
    public Output<Optional<String>> password() {
        return Codegen.optional(this.password);
    }
    /**
     * The name of the third-party Certificate Issuer. Possible values are: `DigiCert`, `GlobalSign`, `OneCertV2-PrivateCA`, `OneCertV2-PublicCA` and `SslAdminV2`.
     * 
     */
    @Export(name="providerName", type=String.class, parameters={})
    private Output<String> providerName;

    /**
     * @return The name of the third-party Certificate Issuer. Possible values are: `DigiCert`, `GlobalSign`, `OneCertV2-PrivateCA`, `OneCertV2-PublicCA` and `SslAdminV2`.
     * 
     */
    public Output<String> providerName() {
        return this.providerName;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public CertificateIssuer(String name) {
        this(name, CertificateIssuerArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public CertificateIssuer(String name, CertificateIssuerArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public CertificateIssuer(String name, CertificateIssuerArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:keyvault/certificateIssuer:CertificateIssuer", name, args == null ? CertificateIssuerArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private CertificateIssuer(String name, Output<String> id, @Nullable CertificateIssuerState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:keyvault/certificateIssuer:CertificateIssuer", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static CertificateIssuer get(String name, Output<String> id, @Nullable CertificateIssuerState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new CertificateIssuer(name, id, state, options);
    }
}
