// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.monitoring.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Double;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class ScheduledQueryRulesAlertTriggerMetricTrigger {
    /**
     * @return Evaluation of metric on a particular column.
     * 
     */
    private String metricColumn;
    /**
     * @return Metric Trigger Type - &#39;Consecutive&#39; or &#39;Total&#39;.
     * 
     */
    private String metricTriggerType;
    /**
     * @return Evaluation operation for rule - &#39;Equal&#39;, &#39;GreaterThan&#39;, GreaterThanOrEqual&#39;, &#39;LessThan&#39;, or &#39;LessThanOrEqual&#39;.
     * 
     */
    private String operator;
    /**
     * @return The threshold of the metric trigger.    Values must be between 0 and 10000 inclusive.
     * 
     */
    private Double threshold;

    private ScheduledQueryRulesAlertTriggerMetricTrigger() {}
    /**
     * @return Evaluation of metric on a particular column.
     * 
     */
    public String metricColumn() {
        return this.metricColumn;
    }
    /**
     * @return Metric Trigger Type - &#39;Consecutive&#39; or &#39;Total&#39;.
     * 
     */
    public String metricTriggerType() {
        return this.metricTriggerType;
    }
    /**
     * @return Evaluation operation for rule - &#39;Equal&#39;, &#39;GreaterThan&#39;, GreaterThanOrEqual&#39;, &#39;LessThan&#39;, or &#39;LessThanOrEqual&#39;.
     * 
     */
    public String operator() {
        return this.operator;
    }
    /**
     * @return The threshold of the metric trigger.    Values must be between 0 and 10000 inclusive.
     * 
     */
    public Double threshold() {
        return this.threshold;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ScheduledQueryRulesAlertTriggerMetricTrigger defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String metricColumn;
        private String metricTriggerType;
        private String operator;
        private Double threshold;
        public Builder() {}
        public Builder(ScheduledQueryRulesAlertTriggerMetricTrigger defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.metricColumn = defaults.metricColumn;
    	      this.metricTriggerType = defaults.metricTriggerType;
    	      this.operator = defaults.operator;
    	      this.threshold = defaults.threshold;
        }

        @CustomType.Setter
        public Builder metricColumn(String metricColumn) {
            this.metricColumn = Objects.requireNonNull(metricColumn);
            return this;
        }
        @CustomType.Setter
        public Builder metricTriggerType(String metricTriggerType) {
            this.metricTriggerType = Objects.requireNonNull(metricTriggerType);
            return this;
        }
        @CustomType.Setter
        public Builder operator(String operator) {
            this.operator = Objects.requireNonNull(operator);
            return this;
        }
        @CustomType.Setter
        public Builder threshold(Double threshold) {
            this.threshold = Objects.requireNonNull(threshold);
            return this;
        }
        public ScheduledQueryRulesAlertTriggerMetricTrigger build() {
            final var o = new ScheduledQueryRulesAlertTriggerMetricTrigger();
            o.metricColumn = metricColumn;
            o.metricTriggerType = metricTriggerType;
            o.operator = operator;
            o.threshold = threshold;
            return o;
        }
    }
}
