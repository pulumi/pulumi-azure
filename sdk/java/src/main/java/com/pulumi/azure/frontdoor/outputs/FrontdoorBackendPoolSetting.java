// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.frontdoor.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class FrontdoorBackendPoolSetting {
    /**
     * @return Specifies the send and receive timeout on forwarding request to the backend. When the timeout is reached, the request fails and returns. Possible values are between `0` - `240`. Defaults to `60`.
     * 
     */
    private @Nullable Integer backendPoolsSendReceiveTimeoutSeconds;
    /**
     * @return Enforce certificate name check on `HTTPS` requests to all backend pools, this setting will have no effect on `HTTP` requests. Permitted values are `true` or `false`.
     * 
     * &gt; **NOTE:** `backend_pools_send_receive_timeout_seconds` and `enforce_backend_pools_certificate_name_check` apply to all backend pools.
     * 
     */
    private Boolean enforceBackendPoolsCertificateNameCheck;

    private FrontdoorBackendPoolSetting() {}
    /**
     * @return Specifies the send and receive timeout on forwarding request to the backend. When the timeout is reached, the request fails and returns. Possible values are between `0` - `240`. Defaults to `60`.
     * 
     */
    public Optional<Integer> backendPoolsSendReceiveTimeoutSeconds() {
        return Optional.ofNullable(this.backendPoolsSendReceiveTimeoutSeconds);
    }
    /**
     * @return Enforce certificate name check on `HTTPS` requests to all backend pools, this setting will have no effect on `HTTP` requests. Permitted values are `true` or `false`.
     * 
     * &gt; **NOTE:** `backend_pools_send_receive_timeout_seconds` and `enforce_backend_pools_certificate_name_check` apply to all backend pools.
     * 
     */
    public Boolean enforceBackendPoolsCertificateNameCheck() {
        return this.enforceBackendPoolsCertificateNameCheck;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(FrontdoorBackendPoolSetting defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Integer backendPoolsSendReceiveTimeoutSeconds;
        private Boolean enforceBackendPoolsCertificateNameCheck;
        public Builder() {}
        public Builder(FrontdoorBackendPoolSetting defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.backendPoolsSendReceiveTimeoutSeconds = defaults.backendPoolsSendReceiveTimeoutSeconds;
    	      this.enforceBackendPoolsCertificateNameCheck = defaults.enforceBackendPoolsCertificateNameCheck;
        }

        @CustomType.Setter
        public Builder backendPoolsSendReceiveTimeoutSeconds(@Nullable Integer backendPoolsSendReceiveTimeoutSeconds) {

            this.backendPoolsSendReceiveTimeoutSeconds = backendPoolsSendReceiveTimeoutSeconds;
            return this;
        }
        @CustomType.Setter
        public Builder enforceBackendPoolsCertificateNameCheck(Boolean enforceBackendPoolsCertificateNameCheck) {
            if (enforceBackendPoolsCertificateNameCheck == null) {
              throw new MissingRequiredPropertyException("FrontdoorBackendPoolSetting", "enforceBackendPoolsCertificateNameCheck");
            }
            this.enforceBackendPoolsCertificateNameCheck = enforceBackendPoolsCertificateNameCheck;
            return this;
        }
        public FrontdoorBackendPoolSetting build() {
            final var _resultValue = new FrontdoorBackendPoolSetting();
            _resultValue.backendPoolsSendReceiveTimeoutSeconds = backendPoolsSendReceiveTimeoutSeconds;
            _resultValue.enforceBackendPoolsCertificateNameCheck = enforceBackendPoolsCertificateNameCheck;
            return _resultValue;
        }
    }
}
