// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.dataprotection.outputs;

import com.pulumi.azure.dataprotection.outputs.BackupPolicyPostgresqlRetentionRuleCriteria;
import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class BackupPolicyPostgresqlRetentionRule {
    /**
     * @return A `criteria` block as defined below. Changing this forces a new Backup Policy PostgreSQL to be created.
     * 
     */
    private BackupPolicyPostgresqlRetentionRuleCriteria criteria;
    /**
     * @return Duration after which the backup is deleted. It should follow `ISO 8601` duration format. Changing this forces a new Backup Policy PostgreSQL to be created.
     * 
     */
    private String duration;
    /**
     * @return The name which should be used for this retention rule. Changing this forces a new Backup Policy PostgreSQL to be created.
     * 
     */
    private String name;
    /**
     * @return Specifies the priority of the rule. The priority number must be unique for each rule. The lower the priority number, the higher the priority of the rule. Changing this forces a new Backup Policy PostgreSQL to be created.
     * 
     */
    private Integer priority;

    private BackupPolicyPostgresqlRetentionRule() {}
    /**
     * @return A `criteria` block as defined below. Changing this forces a new Backup Policy PostgreSQL to be created.
     * 
     */
    public BackupPolicyPostgresqlRetentionRuleCriteria criteria() {
        return this.criteria;
    }
    /**
     * @return Duration after which the backup is deleted. It should follow `ISO 8601` duration format. Changing this forces a new Backup Policy PostgreSQL to be created.
     * 
     */
    public String duration() {
        return this.duration;
    }
    /**
     * @return The name which should be used for this retention rule. Changing this forces a new Backup Policy PostgreSQL to be created.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Specifies the priority of the rule. The priority number must be unique for each rule. The lower the priority number, the higher the priority of the rule. Changing this forces a new Backup Policy PostgreSQL to be created.
     * 
     */
    public Integer priority() {
        return this.priority;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(BackupPolicyPostgresqlRetentionRule defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private BackupPolicyPostgresqlRetentionRuleCriteria criteria;
        private String duration;
        private String name;
        private Integer priority;
        public Builder() {}
        public Builder(BackupPolicyPostgresqlRetentionRule defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.criteria = defaults.criteria;
    	      this.duration = defaults.duration;
    	      this.name = defaults.name;
    	      this.priority = defaults.priority;
        }

        @CustomType.Setter
        public Builder criteria(BackupPolicyPostgresqlRetentionRuleCriteria criteria) {
            this.criteria = Objects.requireNonNull(criteria);
            return this;
        }
        @CustomType.Setter
        public Builder duration(String duration) {
            this.duration = Objects.requireNonNull(duration);
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder priority(Integer priority) {
            this.priority = Objects.requireNonNull(priority);
            return this;
        }
        public BackupPolicyPostgresqlRetentionRule build() {
            final var o = new BackupPolicyPostgresqlRetentionRule();
            o.criteria = criteria;
            o.duration = duration;
            o.name = name;
            o.priority = priority;
            return o;
        }
    }
}
