// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.bot;

import com.pulumi.azure.bot.inputs.ChannelLineLineChannelArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ChannelLineArgs extends com.pulumi.resources.ResourceArgs {

    public static final ChannelLineArgs Empty = new ChannelLineArgs();

    /**
     * The name of the Bot Resource this channel will be associated with. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="botName", required=true)
    private Output<String> botName;

    /**
     * @return The name of the Bot Resource this channel will be associated with. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> botName() {
        return this.botName;
    }

    /**
     * One or more `line_channel` blocks as defined below.
     * 
     */
    @Import(name="lineChannels", required=true)
    private Output<List<ChannelLineLineChannelArgs>> lineChannels;

    /**
     * @return One or more `line_channel` blocks as defined below.
     * 
     */
    public Output<List<ChannelLineLineChannelArgs>> lineChannels() {
        return this.lineChannels;
    }

    /**
     * Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="location")
    private @Nullable Output<String> location;

    /**
     * @return Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * The name of the resource group where the Line Channel should be created. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    /**
     * @return The name of the resource group where the Line Channel should be created. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    private ChannelLineArgs() {}

    private ChannelLineArgs(ChannelLineArgs $) {
        this.botName = $.botName;
        this.lineChannels = $.lineChannels;
        this.location = $.location;
        this.resourceGroupName = $.resourceGroupName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ChannelLineArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ChannelLineArgs $;

        public Builder() {
            $ = new ChannelLineArgs();
        }

        public Builder(ChannelLineArgs defaults) {
            $ = new ChannelLineArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param botName The name of the Bot Resource this channel will be associated with. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder botName(Output<String> botName) {
            $.botName = botName;
            return this;
        }

        /**
         * @param botName The name of the Bot Resource this channel will be associated with. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder botName(String botName) {
            return botName(Output.of(botName));
        }

        /**
         * @param lineChannels One or more `line_channel` blocks as defined below.
         * 
         * @return builder
         * 
         */
        public Builder lineChannels(Output<List<ChannelLineLineChannelArgs>> lineChannels) {
            $.lineChannels = lineChannels;
            return this;
        }

        /**
         * @param lineChannels One or more `line_channel` blocks as defined below.
         * 
         * @return builder
         * 
         */
        public Builder lineChannels(List<ChannelLineLineChannelArgs> lineChannels) {
            return lineChannels(Output.of(lineChannels));
        }

        /**
         * @param lineChannels One or more `line_channel` blocks as defined below.
         * 
         * @return builder
         * 
         */
        public Builder lineChannels(ChannelLineLineChannelArgs... lineChannels) {
            return lineChannels(List.of(lineChannels));
        }

        /**
         * @param location Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param resourceGroupName The name of the resource group where the Line Channel should be created. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName The name of the resource group where the Line Channel should be created. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        public ChannelLineArgs build() {
            if ($.botName == null) {
                throw new MissingRequiredPropertyException("ChannelLineArgs", "botName");
            }
            if ($.lineChannels == null) {
                throw new MissingRequiredPropertyException("ChannelLineArgs", "lineChannels");
            }
            if ($.resourceGroupName == null) {
                throw new MissingRequiredPropertyException("ChannelLineArgs", "resourceGroupName");
            }
            return $;
        }
    }

}
