// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.dashboard;

import com.pulumi.azure.Utilities;
import com.pulumi.azure.dashboard.GrafanaManagedPrivateEndpointArgs;
import com.pulumi.azure.dashboard.inputs.GrafanaManagedPrivateEndpointState;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Manages a Dashboard Grafana Managed Private Endpoint.
 * 
 * &gt; **NOTE:** This resource will _not_ approve the managed private endpoint connection on the linked resource. This will need to be done manually via Azure CLI, PowerShell, or AzAPI resources. See here for an example that uses AzAPI.
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.azure.core.ResourceGroup;
 * import com.pulumi.azure.core.ResourceGroupArgs;
 * import com.pulumi.azure.monitoring.Workspace;
 * import com.pulumi.azure.monitoring.WorkspaceArgs;
 * import com.pulumi.azure.dashboard.Grafana;
 * import com.pulumi.azure.dashboard.GrafanaArgs;
 * import com.pulumi.azure.dashboard.inputs.GrafanaAzureMonitorWorkspaceIntegrationArgs;
 * import com.pulumi.azure.dashboard.GrafanaManagedPrivateEndpoint;
 * import com.pulumi.azure.dashboard.GrafanaManagedPrivateEndpointArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new ResourceGroup("example", ResourceGroupArgs.builder()
 *             .name("example-resources")
 *             .location("Canada Central")
 *             .build());
 * 
 *         var exampleWorkspace = new Workspace("exampleWorkspace", WorkspaceArgs.builder()
 *             .name("example-mamw")
 *             .resourceGroupName(example.name())
 *             .location(example.location())
 *             .publicNetworkAccessEnabled(false)
 *             .build());
 * 
 *         var exampleGrafana = new Grafana("exampleGrafana", GrafanaArgs.builder()
 *             .name("example-dg")
 *             .resourceGroupName(example.name())
 *             .location(example.location())
 *             .grafanaMajorVersion(10)
 *             .publicNetworkAccessEnabled(false)
 *             .azureMonitorWorkspaceIntegrations(GrafanaAzureMonitorWorkspaceIntegrationArgs.builder()
 *                 .resourceId(exampleWorkspace.id())
 *                 .build())
 *             .build());
 * 
 *         var exampleGrafanaManagedPrivateEndpoint = new GrafanaManagedPrivateEndpoint("exampleGrafanaManagedPrivateEndpoint", GrafanaManagedPrivateEndpointArgs.builder()
 *             .grafanaId(exampleGrafana.id())
 *             .name("example-mpe")
 *             .location(exampleGrafana.location())
 *             .privateLinkResourceId(exampleWorkspace.id())
 *             .groupIds("prometheusMetrics")
 *             .privateLinkResourceRegion(exampleGrafana.location())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * Dashboard Grafana Managed Private Endpoint Examples can be imported using the `resource id`, e.g.
 * 
 * ```sh
 * $ pulumi import azure:dashboard/grafanaManagedPrivateEndpoint:GrafanaManagedPrivateEndpoint example /subscriptions/12345678-1234-9876-4563-123456789012/resourceGroups/resGroup1/providers/Microsoft.Dashboard/grafana/workspace1/managedPrivateEndpoints/endpoint1
 * ```
 * 
 */
@ResourceType(type="azure:dashboard/grafanaManagedPrivateEndpoint:GrafanaManagedPrivateEndpoint")
public class GrafanaManagedPrivateEndpoint extends com.pulumi.resources.CustomResource {
    /**
     * The id of the associated managed Grafana. Changing this forces a new Dashboard Grafana Managed Private Endpoint to be created.
     * 
     */
    @Export(name="grafanaId", refs={String.class}, tree="[0]")
    private Output<String> grafanaId;

    /**
     * @return The id of the associated managed Grafana. Changing this forces a new Dashboard Grafana Managed Private Endpoint to be created.
     * 
     */
    public Output<String> grafanaId() {
        return this.grafanaId;
    }
    /**
     * Specifies a list of private link group IDs. The value of this will depend on the private link resource to which you are connecting. Changing this forces a new Dashboard Grafana Managed Private Endpoint to be created.
     * 
     */
    @Export(name="groupIds", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> groupIds;

    /**
     * @return Specifies a list of private link group IDs. The value of this will depend on the private link resource to which you are connecting. Changing this forces a new Dashboard Grafana Managed Private Endpoint to be created.
     * 
     */
    public Output<Optional<List<String>>> groupIds() {
        return Codegen.optional(this.groupIds);
    }
    /**
     * The Azure Region where the Dashboard Grafana Managed Private Endpoint should exist. Changing this forces a new Dashboard Grafana Managed Private Endpoint to be created.
     * 
     */
    @Export(name="location", refs={String.class}, tree="[0]")
    private Output<String> location;

    /**
     * @return The Azure Region where the Dashboard Grafana Managed Private Endpoint should exist. Changing this forces a new Dashboard Grafana Managed Private Endpoint to be created.
     * 
     */
    public Output<String> location() {
        return this.location;
    }
    /**
     * The name which should be used for this Dashboard Grafana Managed Private Endpoint. Must be between 2 and 20 alphanumeric characters or dashes, must begin with letter and end with a letter or number. Changing this forces a new Dashboard Grafana Managed Private Endpoint to be created.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The name which should be used for this Dashboard Grafana Managed Private Endpoint. Must be between 2 and 20 alphanumeric characters or dashes, must begin with letter and end with a letter or number. Changing this forces a new Dashboard Grafana Managed Private Endpoint to be created.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The ID of the resource to which this Dashboard Grafana Managed Private Endpoint will connect. Changing this forces a new Dashboard Grafana Managed Private Endpoint to be created.
     * 
     */
    @Export(name="privateLinkResourceId", refs={String.class}, tree="[0]")
    private Output<String> privateLinkResourceId;

    /**
     * @return The ID of the resource to which this Dashboard Grafana Managed Private Endpoint will connect. Changing this forces a new Dashboard Grafana Managed Private Endpoint to be created.
     * 
     */
    public Output<String> privateLinkResourceId() {
        return this.privateLinkResourceId;
    }
    /**
     * The region in which to create the private link. Changing this forces a new Dashboard Grafana Managed Private Endpoint to be created.
     * 
     */
    @Export(name="privateLinkResourceRegion", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> privateLinkResourceRegion;

    /**
     * @return The region in which to create the private link. Changing this forces a new Dashboard Grafana Managed Private Endpoint to be created.
     * 
     */
    public Output<Optional<String>> privateLinkResourceRegion() {
        return Codegen.optional(this.privateLinkResourceRegion);
    }
    /**
     * A message to provide in the request which will be seen by approvers.
     * 
     */
    @Export(name="requestMessage", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> requestMessage;

    /**
     * @return A message to provide in the request which will be seen by approvers.
     * 
     */
    public Output<Optional<String>> requestMessage() {
        return Codegen.optional(this.requestMessage);
    }
    /**
     * A mapping of tags which should be assigned to the Dashboard Grafana Managed Private Endpoint.
     * 
     */
    @Export(name="tags", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output</* @Nullable */ Map<String,String>> tags;

    /**
     * @return A mapping of tags which should be assigned to the Dashboard Grafana Managed Private Endpoint.
     * 
     */
    public Output<Optional<Map<String,String>>> tags() {
        return Codegen.optional(this.tags);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public GrafanaManagedPrivateEndpoint(java.lang.String name) {
        this(name, GrafanaManagedPrivateEndpointArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public GrafanaManagedPrivateEndpoint(java.lang.String name, GrafanaManagedPrivateEndpointArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public GrafanaManagedPrivateEndpoint(java.lang.String name, GrafanaManagedPrivateEndpointArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:dashboard/grafanaManagedPrivateEndpoint:GrafanaManagedPrivateEndpoint", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private GrafanaManagedPrivateEndpoint(java.lang.String name, Output<java.lang.String> id, @Nullable GrafanaManagedPrivateEndpointState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:dashboard/grafanaManagedPrivateEndpoint:GrafanaManagedPrivateEndpoint", name, state, makeResourceOptions(options, id), false);
    }

    private static GrafanaManagedPrivateEndpointArgs makeArgs(GrafanaManagedPrivateEndpointArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? GrafanaManagedPrivateEndpointArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static GrafanaManagedPrivateEndpoint get(java.lang.String name, Output<java.lang.String> id, @Nullable GrafanaManagedPrivateEndpointState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new GrafanaManagedPrivateEndpoint(name, id, state, options);
    }
}
