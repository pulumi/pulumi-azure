// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.network.inputs;

import com.pulumi.azure.network.inputs.VirtualHubConnectionRoutingArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class VirtualHubConnectionState extends com.pulumi.resources.ResourceArgs {

    public static final VirtualHubConnectionState Empty = new VirtualHubConnectionState();

    /**
     * Should Internet Security be enabled to secure internet traffic? Defaults to `false`.
     * 
     */
    @Import(name="internetSecurityEnabled")
    private @Nullable Output<Boolean> internetSecurityEnabled;

    /**
     * @return Should Internet Security be enabled to secure internet traffic? Defaults to `false`.
     * 
     */
    public Optional<Output<Boolean>> internetSecurityEnabled() {
        return Optional.ofNullable(this.internetSecurityEnabled);
    }

    /**
     * The Name which should be used for this Connection, which must be unique within the Virtual Hub. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The Name which should be used for this Connection, which must be unique within the Virtual Hub. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The ID of the Virtual Network which the Virtual Hub should be connected to. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="remoteVirtualNetworkId")
    private @Nullable Output<String> remoteVirtualNetworkId;

    /**
     * @return The ID of the Virtual Network which the Virtual Hub should be connected to. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> remoteVirtualNetworkId() {
        return Optional.ofNullable(this.remoteVirtualNetworkId);
    }

    /**
     * A `routing` block as defined below.
     * 
     */
    @Import(name="routing")
    private @Nullable Output<VirtualHubConnectionRoutingArgs> routing;

    /**
     * @return A `routing` block as defined below.
     * 
     */
    public Optional<Output<VirtualHubConnectionRoutingArgs>> routing() {
        return Optional.ofNullable(this.routing);
    }

    /**
     * The ID of the Virtual Hub within which this connection should be created. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="virtualHubId")
    private @Nullable Output<String> virtualHubId;

    /**
     * @return The ID of the Virtual Hub within which this connection should be created. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> virtualHubId() {
        return Optional.ofNullable(this.virtualHubId);
    }

    private VirtualHubConnectionState() {}

    private VirtualHubConnectionState(VirtualHubConnectionState $) {
        this.internetSecurityEnabled = $.internetSecurityEnabled;
        this.name = $.name;
        this.remoteVirtualNetworkId = $.remoteVirtualNetworkId;
        this.routing = $.routing;
        this.virtualHubId = $.virtualHubId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VirtualHubConnectionState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VirtualHubConnectionState $;

        public Builder() {
            $ = new VirtualHubConnectionState();
        }

        public Builder(VirtualHubConnectionState defaults) {
            $ = new VirtualHubConnectionState(Objects.requireNonNull(defaults));
        }

        /**
         * @param internetSecurityEnabled Should Internet Security be enabled to secure internet traffic? Defaults to `false`.
         * 
         * @return builder
         * 
         */
        public Builder internetSecurityEnabled(@Nullable Output<Boolean> internetSecurityEnabled) {
            $.internetSecurityEnabled = internetSecurityEnabled;
            return this;
        }

        /**
         * @param internetSecurityEnabled Should Internet Security be enabled to secure internet traffic? Defaults to `false`.
         * 
         * @return builder
         * 
         */
        public Builder internetSecurityEnabled(Boolean internetSecurityEnabled) {
            return internetSecurityEnabled(Output.of(internetSecurityEnabled));
        }

        /**
         * @param name The Name which should be used for this Connection, which must be unique within the Virtual Hub. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The Name which should be used for this Connection, which must be unique within the Virtual Hub. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param remoteVirtualNetworkId The ID of the Virtual Network which the Virtual Hub should be connected to. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder remoteVirtualNetworkId(@Nullable Output<String> remoteVirtualNetworkId) {
            $.remoteVirtualNetworkId = remoteVirtualNetworkId;
            return this;
        }

        /**
         * @param remoteVirtualNetworkId The ID of the Virtual Network which the Virtual Hub should be connected to. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder remoteVirtualNetworkId(String remoteVirtualNetworkId) {
            return remoteVirtualNetworkId(Output.of(remoteVirtualNetworkId));
        }

        /**
         * @param routing A `routing` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder routing(@Nullable Output<VirtualHubConnectionRoutingArgs> routing) {
            $.routing = routing;
            return this;
        }

        /**
         * @param routing A `routing` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder routing(VirtualHubConnectionRoutingArgs routing) {
            return routing(Output.of(routing));
        }

        /**
         * @param virtualHubId The ID of the Virtual Hub within which this connection should be created. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder virtualHubId(@Nullable Output<String> virtualHubId) {
            $.virtualHubId = virtualHubId;
            return this;
        }

        /**
         * @param virtualHubId The ID of the Virtual Hub within which this connection should be created. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder virtualHubId(String virtualHubId) {
            return virtualHubId(Output.of(virtualHubId));
        }

        public VirtualHubConnectionState build() {
            return $;
        }
    }

}
