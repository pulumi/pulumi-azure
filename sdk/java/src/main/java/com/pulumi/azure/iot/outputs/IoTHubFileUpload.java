// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.iot.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class IoTHubFileUpload {
    /**
     * @return The type used to authenticate against the storage account. Possible values are `keyBased` and `identityBased`. Defaults to `keyBased`.
     * 
     */
    private @Nullable String authenticationType;
    /**
     * @return The connection string for the Azure Storage account to which files are uploaded.
     * 
     */
    private String connectionString;
    /**
     * @return The name of the root container where the files should be uploaded to. The container need not exist but should be creatable using the connection_string specified.
     * 
     */
    private String containerName;
    /**
     * @return The period of time for which a file upload notification message is available to consume before it expires, specified as an [ISO 8601 timespan duration](https://en.wikipedia.org/wiki/ISO_8601#Durations). This value must be between 1 minute and 48 hours. Defaults to `PT1H`.
     * 
     */
    private @Nullable String defaultTtl;
    /**
     * @return The ID of the User Managed Identity used to authenticate against the storage account.
     * 
     * &gt; **NOTE:** `identity_id` can only be specified when `authentication_type` is `identityBased`. It must be one of the `identity_ids` of the IoT Hub. If `identity_id` is omitted when `authentication_type` is `identityBased`, then the System-Assigned Managed Identity of the IoT Hub will be used.
     * 
     * &gt; **NOTE:** An IoT Hub can only be updated to use the System-Assigned Managed Identity for `file_upload` since it is not possible to grant access to the endpoint until after creation.
     * 
     */
    private @Nullable String identityId;
    /**
     * @return The lock duration for the file upload notifications queue, specified as an [ISO 8601 timespan duration](https://en.wikipedia.org/wiki/ISO_8601#Durations). This value must be between 5 and 300 seconds. Defaults to `PT1M`.
     * 
     */
    private @Nullable String lockDuration;
    /**
     * @return The number of times the IoT Hub attempts to deliver a file upload notification message. Defaults to `10`.
     * 
     */
    private @Nullable Integer maxDeliveryCount;
    /**
     * @return Used to specify whether file notifications are sent to IoT Hub on upload. Defaults to `false`.
     * 
     */
    private @Nullable Boolean notifications;
    /**
     * @return The period of time for which the SAS URI generated by IoT Hub for file upload is valid, specified as an [ISO 8601 timespan duration](https://en.wikipedia.org/wiki/ISO_8601#Durations). This value must be between 1 minute and 24 hours. Defaults to `PT1H`.
     * 
     */
    private @Nullable String sasTtl;

    private IoTHubFileUpload() {}
    /**
     * @return The type used to authenticate against the storage account. Possible values are `keyBased` and `identityBased`. Defaults to `keyBased`.
     * 
     */
    public Optional<String> authenticationType() {
        return Optional.ofNullable(this.authenticationType);
    }
    /**
     * @return The connection string for the Azure Storage account to which files are uploaded.
     * 
     */
    public String connectionString() {
        return this.connectionString;
    }
    /**
     * @return The name of the root container where the files should be uploaded to. The container need not exist but should be creatable using the connection_string specified.
     * 
     */
    public String containerName() {
        return this.containerName;
    }
    /**
     * @return The period of time for which a file upload notification message is available to consume before it expires, specified as an [ISO 8601 timespan duration](https://en.wikipedia.org/wiki/ISO_8601#Durations). This value must be between 1 minute and 48 hours. Defaults to `PT1H`.
     * 
     */
    public Optional<String> defaultTtl() {
        return Optional.ofNullable(this.defaultTtl);
    }
    /**
     * @return The ID of the User Managed Identity used to authenticate against the storage account.
     * 
     * &gt; **NOTE:** `identity_id` can only be specified when `authentication_type` is `identityBased`. It must be one of the `identity_ids` of the IoT Hub. If `identity_id` is omitted when `authentication_type` is `identityBased`, then the System-Assigned Managed Identity of the IoT Hub will be used.
     * 
     * &gt; **NOTE:** An IoT Hub can only be updated to use the System-Assigned Managed Identity for `file_upload` since it is not possible to grant access to the endpoint until after creation.
     * 
     */
    public Optional<String> identityId() {
        return Optional.ofNullable(this.identityId);
    }
    /**
     * @return The lock duration for the file upload notifications queue, specified as an [ISO 8601 timespan duration](https://en.wikipedia.org/wiki/ISO_8601#Durations). This value must be between 5 and 300 seconds. Defaults to `PT1M`.
     * 
     */
    public Optional<String> lockDuration() {
        return Optional.ofNullable(this.lockDuration);
    }
    /**
     * @return The number of times the IoT Hub attempts to deliver a file upload notification message. Defaults to `10`.
     * 
     */
    public Optional<Integer> maxDeliveryCount() {
        return Optional.ofNullable(this.maxDeliveryCount);
    }
    /**
     * @return Used to specify whether file notifications are sent to IoT Hub on upload. Defaults to `false`.
     * 
     */
    public Optional<Boolean> notifications() {
        return Optional.ofNullable(this.notifications);
    }
    /**
     * @return The period of time for which the SAS URI generated by IoT Hub for file upload is valid, specified as an [ISO 8601 timespan duration](https://en.wikipedia.org/wiki/ISO_8601#Durations). This value must be between 1 minute and 24 hours. Defaults to `PT1H`.
     * 
     */
    public Optional<String> sasTtl() {
        return Optional.ofNullable(this.sasTtl);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(IoTHubFileUpload defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String authenticationType;
        private String connectionString;
        private String containerName;
        private @Nullable String defaultTtl;
        private @Nullable String identityId;
        private @Nullable String lockDuration;
        private @Nullable Integer maxDeliveryCount;
        private @Nullable Boolean notifications;
        private @Nullable String sasTtl;
        public Builder() {}
        public Builder(IoTHubFileUpload defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.authenticationType = defaults.authenticationType;
    	      this.connectionString = defaults.connectionString;
    	      this.containerName = defaults.containerName;
    	      this.defaultTtl = defaults.defaultTtl;
    	      this.identityId = defaults.identityId;
    	      this.lockDuration = defaults.lockDuration;
    	      this.maxDeliveryCount = defaults.maxDeliveryCount;
    	      this.notifications = defaults.notifications;
    	      this.sasTtl = defaults.sasTtl;
        }

        @CustomType.Setter
        public Builder authenticationType(@Nullable String authenticationType) {

            this.authenticationType = authenticationType;
            return this;
        }
        @CustomType.Setter
        public Builder connectionString(String connectionString) {
            if (connectionString == null) {
              throw new MissingRequiredPropertyException("IoTHubFileUpload", "connectionString");
            }
            this.connectionString = connectionString;
            return this;
        }
        @CustomType.Setter
        public Builder containerName(String containerName) {
            if (containerName == null) {
              throw new MissingRequiredPropertyException("IoTHubFileUpload", "containerName");
            }
            this.containerName = containerName;
            return this;
        }
        @CustomType.Setter
        public Builder defaultTtl(@Nullable String defaultTtl) {

            this.defaultTtl = defaultTtl;
            return this;
        }
        @CustomType.Setter
        public Builder identityId(@Nullable String identityId) {

            this.identityId = identityId;
            return this;
        }
        @CustomType.Setter
        public Builder lockDuration(@Nullable String lockDuration) {

            this.lockDuration = lockDuration;
            return this;
        }
        @CustomType.Setter
        public Builder maxDeliveryCount(@Nullable Integer maxDeliveryCount) {

            this.maxDeliveryCount = maxDeliveryCount;
            return this;
        }
        @CustomType.Setter
        public Builder notifications(@Nullable Boolean notifications) {

            this.notifications = notifications;
            return this;
        }
        @CustomType.Setter
        public Builder sasTtl(@Nullable String sasTtl) {

            this.sasTtl = sasTtl;
            return this;
        }
        public IoTHubFileUpload build() {
            final var _resultValue = new IoTHubFileUpload();
            _resultValue.authenticationType = authenticationType;
            _resultValue.connectionString = connectionString;
            _resultValue.containerName = containerName;
            _resultValue.defaultTtl = defaultTtl;
            _resultValue.identityId = identityId;
            _resultValue.lockDuration = lockDuration;
            _resultValue.maxDeliveryCount = maxDeliveryCount;
            _resultValue.notifications = notifications;
            _resultValue.sasTtl = sasTtl;
            return _resultValue;
        }
    }
}
