// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.devcenter.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class GetProjectPoolArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetProjectPoolArgs Empty = new GetProjectPoolArgs();

    /**
     * The ID of the associated Dev Center Project.
     * 
     */
    @Import(name="devCenterProjectId", required=true)
    private Output<String> devCenterProjectId;

    /**
     * @return The ID of the associated Dev Center Project.
     * 
     */
    public Output<String> devCenterProjectId() {
        return this.devCenterProjectId;
    }

    /**
     * The name of this Dev Center Project Pool.
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    /**
     * @return The name of this Dev Center Project Pool.
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    private GetProjectPoolArgs() {}

    private GetProjectPoolArgs(GetProjectPoolArgs $) {
        this.devCenterProjectId = $.devCenterProjectId;
        this.name = $.name;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetProjectPoolArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetProjectPoolArgs $;

        public Builder() {
            $ = new GetProjectPoolArgs();
        }

        public Builder(GetProjectPoolArgs defaults) {
            $ = new GetProjectPoolArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param devCenterProjectId The ID of the associated Dev Center Project.
         * 
         * @return builder
         * 
         */
        public Builder devCenterProjectId(Output<String> devCenterProjectId) {
            $.devCenterProjectId = devCenterProjectId;
            return this;
        }

        /**
         * @param devCenterProjectId The ID of the associated Dev Center Project.
         * 
         * @return builder
         * 
         */
        public Builder devCenterProjectId(String devCenterProjectId) {
            return devCenterProjectId(Output.of(devCenterProjectId));
        }

        /**
         * @param name The name of this Dev Center Project Pool.
         * 
         * @return builder
         * 
         */
        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of this Dev Center Project Pool.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        public GetProjectPoolArgs build() {
            if ($.devCenterProjectId == null) {
                throw new MissingRequiredPropertyException("GetProjectPoolArgs", "devCenterProjectId");
            }
            if ($.name == null) {
                throw new MissingRequiredPropertyException("GetProjectPoolArgs", "name");
            }
            return $;
        }
    }

}
