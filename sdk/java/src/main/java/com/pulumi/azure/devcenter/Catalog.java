// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.devcenter;

import com.pulumi.azure.Utilities;
import com.pulumi.azure.devcenter.CatalogArgs;
import com.pulumi.azure.devcenter.inputs.CatalogState;
import com.pulumi.azure.devcenter.outputs.CatalogCatalogAdogit;
import com.pulumi.azure.devcenter.outputs.CatalogCatalogGithub;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Manages a Dev Center Catalog.
 * 
 * ## Example Usage
 * 
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.azure.core.ResourceGroup;
 * import com.pulumi.azure.core.ResourceGroupArgs;
 * import com.pulumi.azure.devcenter.DevCenter;
 * import com.pulumi.azure.devcenter.DevCenterArgs;
 * import com.pulumi.azure.devcenter.inputs.DevCenterIdentityArgs;
 * import com.pulumi.azure.devcenter.Catalog;
 * import com.pulumi.azure.devcenter.CatalogArgs;
 * import com.pulumi.azure.devcenter.inputs.CatalogCatalogGithubArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new ResourceGroup("example", ResourceGroupArgs.builder()
 *             .name("example-resources")
 *             .location("West Europe")
 *             .build());
 * 
 *         var exampleDevCenter = new DevCenter("exampleDevCenter", DevCenterArgs.builder()
 *             .location(example.location())
 *             .name("example")
 *             .resourceGroupName(example.name())
 *             .identity(DevCenterIdentityArgs.builder()
 *                 .type("SystemAssigned")
 *                 .build())
 *             .build());
 * 
 *         var exampleCatalog = new Catalog("exampleCatalog", CatalogArgs.builder()
 *             .name("example")
 *             .resourceGroupName(testAzurermResourceGroup.name())
 *             .devCenterId(test.id())
 *             .catalogGithub(CatalogCatalogGithubArgs.builder()
 *                 .branch("foo")
 *                 .path("")
 *                 .uri("example URI")
 *                 .keyVaultKeyUrl("secret")
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * 
 * ## API Providers
 * 
 * &lt;!-- This section is generated, changes will be overwritten --&gt;
 * This resource uses the following Azure API Providers:
 * 
 * * `Microsoft.DevCenter` - 2025-02-01
 * 
 * ## Import
 * 
 * An existing Dev Center Catalog can be imported into Pulumi using the `resource id`, e.g.
 * 
 * ```sh
 * $ pulumi import azure:devcenter/catalog:Catalog example /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DevCenter/devCenters/{devCenterName}/catalogs/{catalogName}
 * ```
 * 
 * * Where `{subscriptionId}` is the ID of the Azure Subscription where the Dev Center exists. For example `12345678-1234-9876-4563-123456789012`.
 * 
 * * Where `{resourceGroupName}` is the name of Resource Group where this Dev Center exists. For example `example-resource-group`.
 * 
 * * Where `{devCenterName}` is the name of the Dev Center. For example `devCenterValue`.
 * 
 * * Where `{catalogName}` is the name of the Dev Center Catalog. For example `catalogValue`.
 * 
 */
@ResourceType(type="azure:devcenter/catalog:Catalog")
public class Catalog extends com.pulumi.resources.CustomResource {
    /**
     * A `catalog_adogit` block as defined below.
     * 
     */
    @Export(name="catalogAdogit", refs={CatalogCatalogAdogit.class}, tree="[0]")
    private Output</* @Nullable */ CatalogCatalogAdogit> catalogAdogit;

    /**
     * @return A `catalog_adogit` block as defined below.
     * 
     */
    public Output<Optional<CatalogCatalogAdogit>> catalogAdogit() {
        return Codegen.optional(this.catalogAdogit);
    }
    /**
     * A `catalog_github` block as defined below.
     * 
     */
    @Export(name="catalogGithub", refs={CatalogCatalogGithub.class}, tree="[0]")
    private Output</* @Nullable */ CatalogCatalogGithub> catalogGithub;

    /**
     * @return A `catalog_github` block as defined below.
     * 
     */
    public Output<Optional<CatalogCatalogGithub>> catalogGithub() {
        return Codegen.optional(this.catalogGithub);
    }
    /**
     * Specifies the Dev Center Id within which this Dev Center Catalog should exist. Changing this forces a new Dev Center Catalog to be created.
     * 
     */
    @Export(name="devCenterId", refs={String.class}, tree="[0]")
    private Output<String> devCenterId;

    /**
     * @return Specifies the Dev Center Id within which this Dev Center Catalog should exist. Changing this forces a new Dev Center Catalog to be created.
     * 
     */
    public Output<String> devCenterId() {
        return this.devCenterId;
    }
    /**
     * Specifies the name of this Dev Center Catalog. Changing this forces a new Dev Center to be created.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return Specifies the name of this Dev Center Catalog. Changing this forces a new Dev Center to be created.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Specifies the name of the Resource Group within which this Dev Center Catalog should exist. Changing this forces a new Dev Center to be created.
     * 
     */
    @Export(name="resourceGroupName", refs={String.class}, tree="[0]")
    private Output<String> resourceGroupName;

    /**
     * @return Specifies the name of the Resource Group within which this Dev Center Catalog should exist. Changing this forces a new Dev Center to be created.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Catalog(java.lang.String name) {
        this(name, CatalogArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Catalog(java.lang.String name, CatalogArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Catalog(java.lang.String name, CatalogArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:devcenter/catalog:Catalog", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private Catalog(java.lang.String name, Output<java.lang.String> id, @Nullable CatalogState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:devcenter/catalog:Catalog", name, state, makeResourceOptions(options, id), false);
    }

    private static CatalogArgs makeArgs(CatalogArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? CatalogArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Catalog get(java.lang.String name, Output<java.lang.String> id, @Nullable CatalogState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Catalog(name, id, state, options);
    }
}
