// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.apimanagement.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetServiceHostnameConfigurationProxy {
    /**
     * @return Is this the default SSL Binding?
     * 
     */
    private final Boolean defaultSslBinding;
    /**
     * @return The Hostname used for the SCM URL.
     * 
     */
    private final String hostName;
    /**
     * @return The ID of the Key Vault Secret which contains the SSL Certificate.
     * 
     */
    private final String keyVaultId;
    /**
     * @return Is Client Certificate Negotiation enabled?
     * 
     */
    private final Boolean negotiateClientCertificate;

    @CustomType.Constructor
    private GetServiceHostnameConfigurationProxy(
        @CustomType.Parameter("defaultSslBinding") Boolean defaultSslBinding,
        @CustomType.Parameter("hostName") String hostName,
        @CustomType.Parameter("keyVaultId") String keyVaultId,
        @CustomType.Parameter("negotiateClientCertificate") Boolean negotiateClientCertificate) {
        this.defaultSslBinding = defaultSslBinding;
        this.hostName = hostName;
        this.keyVaultId = keyVaultId;
        this.negotiateClientCertificate = negotiateClientCertificate;
    }

    /**
     * @return Is this the default SSL Binding?
     * 
     */
    public Boolean defaultSslBinding() {
        return this.defaultSslBinding;
    }
    /**
     * @return The Hostname used for the SCM URL.
     * 
     */
    public String hostName() {
        return this.hostName;
    }
    /**
     * @return The ID of the Key Vault Secret which contains the SSL Certificate.
     * 
     */
    public String keyVaultId() {
        return this.keyVaultId;
    }
    /**
     * @return Is Client Certificate Negotiation enabled?
     * 
     */
    public Boolean negotiateClientCertificate() {
        return this.negotiateClientCertificate;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetServiceHostnameConfigurationProxy defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Boolean defaultSslBinding;
        private String hostName;
        private String keyVaultId;
        private Boolean negotiateClientCertificate;

        public Builder() {
    	      // Empty
        }

        public Builder(GetServiceHostnameConfigurationProxy defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.defaultSslBinding = defaults.defaultSslBinding;
    	      this.hostName = defaults.hostName;
    	      this.keyVaultId = defaults.keyVaultId;
    	      this.negotiateClientCertificate = defaults.negotiateClientCertificate;
        }

        public Builder defaultSslBinding(Boolean defaultSslBinding) {
            this.defaultSslBinding = Objects.requireNonNull(defaultSslBinding);
            return this;
        }
        public Builder hostName(String hostName) {
            this.hostName = Objects.requireNonNull(hostName);
            return this;
        }
        public Builder keyVaultId(String keyVaultId) {
            this.keyVaultId = Objects.requireNonNull(keyVaultId);
            return this;
        }
        public Builder negotiateClientCertificate(Boolean negotiateClientCertificate) {
            this.negotiateClientCertificate = Objects.requireNonNull(negotiateClientCertificate);
            return this;
        }        public GetServiceHostnameConfigurationProxy build() {
            return new GetServiceHostnameConfigurationProxy(defaultSslBinding, hostName, keyVaultId, negotiateClientCertificate);
        }
    }
}
