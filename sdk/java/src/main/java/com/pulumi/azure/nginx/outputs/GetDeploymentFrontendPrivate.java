// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.nginx.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetDeploymentFrontendPrivate {
    /**
     * @return The method of allocating the private IP to the Nginx Deployment.
     * 
     */
    private String allocationMethod;
    /**
     * @return List of public IPs of the Ngix Deployment.
     * 
     */
    private String ipAddress;
    /**
     * @return The subnet resource ID of the Nginx Deployment.
     * 
     */
    private String subnetId;

    private GetDeploymentFrontendPrivate() {}
    /**
     * @return The method of allocating the private IP to the Nginx Deployment.
     * 
     */
    public String allocationMethod() {
        return this.allocationMethod;
    }
    /**
     * @return List of public IPs of the Ngix Deployment.
     * 
     */
    public String ipAddress() {
        return this.ipAddress;
    }
    /**
     * @return The subnet resource ID of the Nginx Deployment.
     * 
     */
    public String subnetId() {
        return this.subnetId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDeploymentFrontendPrivate defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String allocationMethod;
        private String ipAddress;
        private String subnetId;
        public Builder() {}
        public Builder(GetDeploymentFrontendPrivate defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.allocationMethod = defaults.allocationMethod;
    	      this.ipAddress = defaults.ipAddress;
    	      this.subnetId = defaults.subnetId;
        }

        @CustomType.Setter
        public Builder allocationMethod(String allocationMethod) {
            if (allocationMethod == null) {
              throw new MissingRequiredPropertyException("GetDeploymentFrontendPrivate", "allocationMethod");
            }
            this.allocationMethod = allocationMethod;
            return this;
        }
        @CustomType.Setter
        public Builder ipAddress(String ipAddress) {
            if (ipAddress == null) {
              throw new MissingRequiredPropertyException("GetDeploymentFrontendPrivate", "ipAddress");
            }
            this.ipAddress = ipAddress;
            return this;
        }
        @CustomType.Setter
        public Builder subnetId(String subnetId) {
            if (subnetId == null) {
              throw new MissingRequiredPropertyException("GetDeploymentFrontendPrivate", "subnetId");
            }
            this.subnetId = subnetId;
            return this;
        }
        public GetDeploymentFrontendPrivate build() {
            final var _resultValue = new GetDeploymentFrontendPrivate();
            _resultValue.allocationMethod = allocationMethod;
            _resultValue.ipAddress = ipAddress;
            _resultValue.subnetId = subnetId;
            return _resultValue;
        }
    }
}
