// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.siterecovery;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class NetworkMappingArgs extends com.pulumi.resources.ResourceArgs {

    public static final NetworkMappingArgs Empty = new NetworkMappingArgs();

    /**
     * The name of the network mapping. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the network mapping. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The name of the vault that should be updated. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="recoveryVaultName", required=true)
    private Output<String> recoveryVaultName;

    /**
     * @return The name of the vault that should be updated. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> recoveryVaultName() {
        return this.recoveryVaultName;
    }

    /**
     * Name of the resource group where the vault that should be updated is located. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    /**
     * @return Name of the resource group where the vault that should be updated is located. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * The id of the primary network. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="sourceNetworkId", required=true)
    private Output<String> sourceNetworkId;

    /**
     * @return The id of the primary network. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> sourceNetworkId() {
        return this.sourceNetworkId;
    }

    /**
     * Specifies the ASR fabric where mapping should be created. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="sourceRecoveryFabricName", required=true)
    private Output<String> sourceRecoveryFabricName;

    /**
     * @return Specifies the ASR fabric where mapping should be created. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> sourceRecoveryFabricName() {
        return this.sourceRecoveryFabricName;
    }

    /**
     * The id of the recovery network. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="targetNetworkId", required=true)
    private Output<String> targetNetworkId;

    /**
     * @return The id of the recovery network. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> targetNetworkId() {
        return this.targetNetworkId;
    }

    /**
     * The Azure Site Recovery fabric object corresponding to the recovery Azure region. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="targetRecoveryFabricName", required=true)
    private Output<String> targetRecoveryFabricName;

    /**
     * @return The Azure Site Recovery fabric object corresponding to the recovery Azure region. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> targetRecoveryFabricName() {
        return this.targetRecoveryFabricName;
    }

    private NetworkMappingArgs() {}

    private NetworkMappingArgs(NetworkMappingArgs $) {
        this.name = $.name;
        this.recoveryVaultName = $.recoveryVaultName;
        this.resourceGroupName = $.resourceGroupName;
        this.sourceNetworkId = $.sourceNetworkId;
        this.sourceRecoveryFabricName = $.sourceRecoveryFabricName;
        this.targetNetworkId = $.targetNetworkId;
        this.targetRecoveryFabricName = $.targetRecoveryFabricName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(NetworkMappingArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private NetworkMappingArgs $;

        public Builder() {
            $ = new NetworkMappingArgs();
        }

        public Builder(NetworkMappingArgs defaults) {
            $ = new NetworkMappingArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param name The name of the network mapping. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the network mapping. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param recoveryVaultName The name of the vault that should be updated. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder recoveryVaultName(Output<String> recoveryVaultName) {
            $.recoveryVaultName = recoveryVaultName;
            return this;
        }

        /**
         * @param recoveryVaultName The name of the vault that should be updated. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder recoveryVaultName(String recoveryVaultName) {
            return recoveryVaultName(Output.of(recoveryVaultName));
        }

        /**
         * @param resourceGroupName Name of the resource group where the vault that should be updated is located. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName Name of the resource group where the vault that should be updated is located. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        /**
         * @param sourceNetworkId The id of the primary network. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder sourceNetworkId(Output<String> sourceNetworkId) {
            $.sourceNetworkId = sourceNetworkId;
            return this;
        }

        /**
         * @param sourceNetworkId The id of the primary network. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder sourceNetworkId(String sourceNetworkId) {
            return sourceNetworkId(Output.of(sourceNetworkId));
        }

        /**
         * @param sourceRecoveryFabricName Specifies the ASR fabric where mapping should be created. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder sourceRecoveryFabricName(Output<String> sourceRecoveryFabricName) {
            $.sourceRecoveryFabricName = sourceRecoveryFabricName;
            return this;
        }

        /**
         * @param sourceRecoveryFabricName Specifies the ASR fabric where mapping should be created. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder sourceRecoveryFabricName(String sourceRecoveryFabricName) {
            return sourceRecoveryFabricName(Output.of(sourceRecoveryFabricName));
        }

        /**
         * @param targetNetworkId The id of the recovery network. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder targetNetworkId(Output<String> targetNetworkId) {
            $.targetNetworkId = targetNetworkId;
            return this;
        }

        /**
         * @param targetNetworkId The id of the recovery network. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder targetNetworkId(String targetNetworkId) {
            return targetNetworkId(Output.of(targetNetworkId));
        }

        /**
         * @param targetRecoveryFabricName The Azure Site Recovery fabric object corresponding to the recovery Azure region. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder targetRecoveryFabricName(Output<String> targetRecoveryFabricName) {
            $.targetRecoveryFabricName = targetRecoveryFabricName;
            return this;
        }

        /**
         * @param targetRecoveryFabricName The Azure Site Recovery fabric object corresponding to the recovery Azure region. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder targetRecoveryFabricName(String targetRecoveryFabricName) {
            return targetRecoveryFabricName(Output.of(targetRecoveryFabricName));
        }

        public NetworkMappingArgs build() {
            if ($.recoveryVaultName == null) {
                throw new MissingRequiredPropertyException("NetworkMappingArgs", "recoveryVaultName");
            }
            if ($.resourceGroupName == null) {
                throw new MissingRequiredPropertyException("NetworkMappingArgs", "resourceGroupName");
            }
            if ($.sourceNetworkId == null) {
                throw new MissingRequiredPropertyException("NetworkMappingArgs", "sourceNetworkId");
            }
            if ($.sourceRecoveryFabricName == null) {
                throw new MissingRequiredPropertyException("NetworkMappingArgs", "sourceRecoveryFabricName");
            }
            if ($.targetNetworkId == null) {
                throw new MissingRequiredPropertyException("NetworkMappingArgs", "targetNetworkId");
            }
            if ($.targetRecoveryFabricName == null) {
                throw new MissingRequiredPropertyException("NetworkMappingArgs", "targetRecoveryFabricName");
            }
            return $;
        }
    }

}
