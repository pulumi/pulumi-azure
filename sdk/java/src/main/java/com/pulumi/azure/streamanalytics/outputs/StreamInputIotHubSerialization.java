// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.streamanalytics.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class StreamInputIotHubSerialization {
    /**
     * @return The encoding of the incoming data in the case of input and the encoding of outgoing data in the case of output. It currently can only be set to `UTF8`.
     * 
     * &gt; **NOTE:** This is required when `type` is set to `Csv` or `Json`.
     * 
     */
    private @Nullable String encoding;
    /**
     * @return The delimiter that will be used to separate comma-separated value (CSV) records. Possible values are ` ` (space), `,` (comma), `	` (tab), `|` (pipe) and `;`.
     * 
     * &gt; **NOTE:** This is required when `type` is set to `Csv`.
     * 
     */
    private @Nullable String fieldDelimiter;
    /**
     * @return The serialization format used for incoming data streams. Possible values are `Avro`, `Csv` and `Json`.
     * 
     */
    private String type;

    private StreamInputIotHubSerialization() {}
    /**
     * @return The encoding of the incoming data in the case of input and the encoding of outgoing data in the case of output. It currently can only be set to `UTF8`.
     * 
     * &gt; **NOTE:** This is required when `type` is set to `Csv` or `Json`.
     * 
     */
    public Optional<String> encoding() {
        return Optional.ofNullable(this.encoding);
    }
    /**
     * @return The delimiter that will be used to separate comma-separated value (CSV) records. Possible values are ` ` (space), `,` (comma), `	` (tab), `|` (pipe) and `;`.
     * 
     * &gt; **NOTE:** This is required when `type` is set to `Csv`.
     * 
     */
    public Optional<String> fieldDelimiter() {
        return Optional.ofNullable(this.fieldDelimiter);
    }
    /**
     * @return The serialization format used for incoming data streams. Possible values are `Avro`, `Csv` and `Json`.
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(StreamInputIotHubSerialization defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String encoding;
        private @Nullable String fieldDelimiter;
        private String type;
        public Builder() {}
        public Builder(StreamInputIotHubSerialization defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.encoding = defaults.encoding;
    	      this.fieldDelimiter = defaults.fieldDelimiter;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder encoding(@Nullable String encoding) {

            this.encoding = encoding;
            return this;
        }
        @CustomType.Setter
        public Builder fieldDelimiter(@Nullable String fieldDelimiter) {

            this.fieldDelimiter = fieldDelimiter;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            if (type == null) {
              throw new MissingRequiredPropertyException("StreamInputIotHubSerialization", "type");
            }
            this.type = type;
            return this;
        }
        public StreamInputIotHubSerialization build() {
            final var _resultValue = new StreamInputIotHubSerialization();
            _resultValue.encoding = encoding;
            _resultValue.fieldDelimiter = fieldDelimiter;
            _resultValue.type = type;
            return _resultValue;
        }
    }
}
