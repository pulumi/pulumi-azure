// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.securitycenter;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ServerVulnerabilityAssessmentArgs extends com.pulumi.resources.ResourceArgs {

    public static final ServerVulnerabilityAssessmentArgs Empty = new ServerVulnerabilityAssessmentArgs();

    /**
     * The ID of the Azure ARC server to be monitored by vulnerability assessment. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="hybridMachineId")
    private @Nullable Output<String> hybridMachineId;

    /**
     * @return The ID of the Azure ARC server to be monitored by vulnerability assessment. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> hybridMachineId() {
        return Optional.ofNullable(this.hybridMachineId);
    }

    /**
     * The ID of the virtual machine to be monitored by vulnerability assessment. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="virtualMachineId")
    private @Nullable Output<String> virtualMachineId;

    /**
     * @return The ID of the virtual machine to be monitored by vulnerability assessment. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> virtualMachineId() {
        return Optional.ofNullable(this.virtualMachineId);
    }

    private ServerVulnerabilityAssessmentArgs() {}

    private ServerVulnerabilityAssessmentArgs(ServerVulnerabilityAssessmentArgs $) {
        this.hybridMachineId = $.hybridMachineId;
        this.virtualMachineId = $.virtualMachineId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ServerVulnerabilityAssessmentArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ServerVulnerabilityAssessmentArgs $;

        public Builder() {
            $ = new ServerVulnerabilityAssessmentArgs();
        }

        public Builder(ServerVulnerabilityAssessmentArgs defaults) {
            $ = new ServerVulnerabilityAssessmentArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param hybridMachineId The ID of the Azure ARC server to be monitored by vulnerability assessment. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder hybridMachineId(@Nullable Output<String> hybridMachineId) {
            $.hybridMachineId = hybridMachineId;
            return this;
        }

        /**
         * @param hybridMachineId The ID of the Azure ARC server to be monitored by vulnerability assessment. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder hybridMachineId(String hybridMachineId) {
            return hybridMachineId(Output.of(hybridMachineId));
        }

        /**
         * @param virtualMachineId The ID of the virtual machine to be monitored by vulnerability assessment. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder virtualMachineId(@Nullable Output<String> virtualMachineId) {
            $.virtualMachineId = virtualMachineId;
            return this;
        }

        /**
         * @param virtualMachineId The ID of the virtual machine to be monitored by vulnerability assessment. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder virtualMachineId(String virtualMachineId) {
            return virtualMachineId(Output.of(virtualMachineId));
        }

        public ServerVulnerabilityAssessmentArgs build() {
            return $;
        }
    }

}
