// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.storage;

import com.pulumi.azure.Utilities;
import com.pulumi.azure.storage.ContainerImmutabilityPolicyArgs;
import com.pulumi.azure.storage.inputs.ContainerImmutabilityPolicyState;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Manages an Immutability Policy for a Container within an Azure Storage Account.
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.azure.core.ResourceGroup;
 * import com.pulumi.azure.core.ResourceGroupArgs;
 * import com.pulumi.azure.storage.Account;
 * import com.pulumi.azure.storage.AccountArgs;
 * import com.pulumi.azure.storage.Container;
 * import com.pulumi.azure.storage.ContainerArgs;
 * import com.pulumi.azure.storage.ContainerImmutabilityPolicy;
 * import com.pulumi.azure.storage.ContainerImmutabilityPolicyArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new ResourceGroup("example", ResourceGroupArgs.builder()
 *             .name("example-resources")
 *             .location("West Europe")
 *             .build());
 * 
 *         var exampleAccount = new Account("exampleAccount", AccountArgs.builder()
 *             .name("examplestoraccount")
 *             .resourceGroupName(example.name())
 *             .location(example.location())
 *             .accountTier("Standard")
 *             .accountReplicationType("LRS")
 *             .tags(Map.of("environment", "staging"))
 *             .build());
 * 
 *         var exampleContainer = new Container("exampleContainer", ContainerArgs.builder()
 *             .name("example")
 *             .storageAccountName(exampleAccount.name())
 *             .containerAccessType("private")
 *             .build());
 * 
 *         var exampleContainerImmutabilityPolicy = new ContainerImmutabilityPolicy("exampleContainerImmutabilityPolicy", ContainerImmutabilityPolicyArgs.builder()
 *             .storageContainerResourceManagerId(exampleContainer.resourceManagerId())
 *             .immutabilityPeriodInDays(14)
 *             .protectedAppendWritesAllEnabled(false)
 *             .protectedAppendWritesEnabled(true)
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * Storage Container Immutability Policies can be imported using the `resource id`, e.g.
 * 
 * ```sh
 * $ pulumi import azure:storage/containerImmutabilityPolicy:ContainerImmutabilityPolicy example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myresourcegroup/providers/Microsoft.Storage/storageAccounts/myaccount/blobServices/default/containers/mycontainer/immutabilityPolicies/default
 * ```
 * 
 */
@ResourceType(type="azure:storage/containerImmutabilityPolicy:ContainerImmutabilityPolicy")
public class ContainerImmutabilityPolicy extends com.pulumi.resources.CustomResource {
    /**
     * The time interval in days that the data needs to be kept in a non-erasable and non-modifiable state.
     * 
     */
    @Export(name="immutabilityPeriodInDays", refs={Integer.class}, tree="[0]")
    private Output<Integer> immutabilityPeriodInDays;

    /**
     * @return The time interval in days that the data needs to be kept in a non-erasable and non-modifiable state.
     * 
     */
    public Output<Integer> immutabilityPeriodInDays() {
        return this.immutabilityPeriodInDays;
    }
    /**
     * Whether to lock this immutability policy. Cannot be set to `false` once the policy has been locked.
     * 
     * !&gt; **Locking an Immutability Policy** Once an Immutability Policy has been locked, it cannot be unlocked. After locking, it will only be possible to increase the value for `retention_period_in_days` up to 5 times for the lifetime of the policy. No other properties will be updateable. Furthermore, the Storage Container and the Storage Account in which it resides will become protected by the policy. It will no longer be possible to delete the Storage Container or the Storage Account. Please refer to [official documentation](https://learn.microsoft.com/en-us/azure/storage/blobs/immutable-policy-configure-container-scope?tabs=azure-portal#lock-a-time-based-retention-policy) for more information.
     * 
     */
    @Export(name="locked", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> locked;

    /**
     * @return Whether to lock this immutability policy. Cannot be set to `false` once the policy has been locked.
     * 
     * !&gt; **Locking an Immutability Policy** Once an Immutability Policy has been locked, it cannot be unlocked. After locking, it will only be possible to increase the value for `retention_period_in_days` up to 5 times for the lifetime of the policy. No other properties will be updateable. Furthermore, the Storage Container and the Storage Account in which it resides will become protected by the policy. It will no longer be possible to delete the Storage Container or the Storage Account. Please refer to [official documentation](https://learn.microsoft.com/en-us/azure/storage/blobs/immutable-policy-configure-container-scope?tabs=azure-portal#lock-a-time-based-retention-policy) for more information.
     * 
     */
    public Output<Optional<Boolean>> locked() {
        return Codegen.optional(this.locked);
    }
    /**
     * Whether to allow protected append writes to block and append blobs to the container. Defaults to `false`. Cannot be set with `protected_append_writes_enabled`.
     * 
     */
    @Export(name="protectedAppendWritesAllEnabled", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> protectedAppendWritesAllEnabled;

    /**
     * @return Whether to allow protected append writes to block and append blobs to the container. Defaults to `false`. Cannot be set with `protected_append_writes_enabled`.
     * 
     */
    public Output<Optional<Boolean>> protectedAppendWritesAllEnabled() {
        return Codegen.optional(this.protectedAppendWritesAllEnabled);
    }
    /**
     * Whether to allow protected append writes to append blobs to the container. Defaults to `false`. Cannot be set with `protected_append_writes_all_enabled`.
     * 
     */
    @Export(name="protectedAppendWritesEnabled", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> protectedAppendWritesEnabled;

    /**
     * @return Whether to allow protected append writes to append blobs to the container. Defaults to `false`. Cannot be set with `protected_append_writes_all_enabled`.
     * 
     */
    public Output<Optional<Boolean>> protectedAppendWritesEnabled() {
        return Codegen.optional(this.protectedAppendWritesEnabled);
    }
    /**
     * The Resource Manager ID of the Storage Container where this Immutability Policy should be applied. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="storageContainerResourceManagerId", refs={String.class}, tree="[0]")
    private Output<String> storageContainerResourceManagerId;

    /**
     * @return The Resource Manager ID of the Storage Container where this Immutability Policy should be applied. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> storageContainerResourceManagerId() {
        return this.storageContainerResourceManagerId;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public ContainerImmutabilityPolicy(String name) {
        this(name, ContainerImmutabilityPolicyArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public ContainerImmutabilityPolicy(String name, ContainerImmutabilityPolicyArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public ContainerImmutabilityPolicy(String name, ContainerImmutabilityPolicyArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:storage/containerImmutabilityPolicy:ContainerImmutabilityPolicy", name, args == null ? ContainerImmutabilityPolicyArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private ContainerImmutabilityPolicy(String name, Output<String> id, @Nullable ContainerImmutabilityPolicyState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:storage/containerImmutabilityPolicy:ContainerImmutabilityPolicy", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static ContainerImmutabilityPolicy get(String name, Output<String> id, @Nullable ContainerImmutabilityPolicyState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new ContainerImmutabilityPolicy(name, id, state, options);
    }
}
