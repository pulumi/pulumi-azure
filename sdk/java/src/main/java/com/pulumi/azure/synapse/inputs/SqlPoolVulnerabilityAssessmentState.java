// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.synapse.inputs;

import com.pulumi.azure.synapse.inputs.SqlPoolVulnerabilityAssessmentRecurringScansArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SqlPoolVulnerabilityAssessmentState extends com.pulumi.resources.ResourceArgs {

    public static final SqlPoolVulnerabilityAssessmentState Empty = new SqlPoolVulnerabilityAssessmentState();

    /**
     * The recurring scans settings. The `recurring_scans` block supports fields documented below.
     * 
     */
    @Import(name="recurringScans")
    private @Nullable Output<SqlPoolVulnerabilityAssessmentRecurringScansArgs> recurringScans;

    /**
     * @return The recurring scans settings. The `recurring_scans` block supports fields documented below.
     * 
     */
    public Optional<Output<SqlPoolVulnerabilityAssessmentRecurringScansArgs>> recurringScans() {
        return Optional.ofNullable(this.recurringScans);
    }

    /**
     * The ID of the security alert policy of the Synapse SQL Pool. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="sqlPoolSecurityAlertPolicyId")
    private @Nullable Output<String> sqlPoolSecurityAlertPolicyId;

    /**
     * @return The ID of the security alert policy of the Synapse SQL Pool. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> sqlPoolSecurityAlertPolicyId() {
        return Optional.ofNullable(this.sqlPoolSecurityAlertPolicyId);
    }

    /**
     * Specifies the identifier key of the storage account for vulnerability assessment scan results. If `storage_container_sas_key` isn&#39;t specified, `storage_account_access_key` is required.
     * 
     */
    @Import(name="storageAccountAccessKey")
    private @Nullable Output<String> storageAccountAccessKey;

    /**
     * @return Specifies the identifier key of the storage account for vulnerability assessment scan results. If `storage_container_sas_key` isn&#39;t specified, `storage_account_access_key` is required.
     * 
     */
    public Optional<Output<String>> storageAccountAccessKey() {
        return Optional.ofNullable(this.storageAccountAccessKey);
    }

    /**
     * A blob storage container path to hold the scan results (e.g. https://example.blob.core.windows.net/VaScans/).
     * 
     */
    @Import(name="storageContainerPath")
    private @Nullable Output<String> storageContainerPath;

    /**
     * @return A blob storage container path to hold the scan results (e.g. https://example.blob.core.windows.net/VaScans/).
     * 
     */
    public Optional<Output<String>> storageContainerPath() {
        return Optional.ofNullable(this.storageContainerPath);
    }

    /**
     * A shared access signature (SAS Key) that has write access to the blob container specified in `storage_container_path` parameter. If `storage_account_access_key` isn&#39;t specified, `storage_container_sas_key` is required.
     * 
     */
    @Import(name="storageContainerSasKey")
    private @Nullable Output<String> storageContainerSasKey;

    /**
     * @return A shared access signature (SAS Key) that has write access to the blob container specified in `storage_container_path` parameter. If `storage_account_access_key` isn&#39;t specified, `storage_container_sas_key` is required.
     * 
     */
    public Optional<Output<String>> storageContainerSasKey() {
        return Optional.ofNullable(this.storageContainerSasKey);
    }

    private SqlPoolVulnerabilityAssessmentState() {}

    private SqlPoolVulnerabilityAssessmentState(SqlPoolVulnerabilityAssessmentState $) {
        this.recurringScans = $.recurringScans;
        this.sqlPoolSecurityAlertPolicyId = $.sqlPoolSecurityAlertPolicyId;
        this.storageAccountAccessKey = $.storageAccountAccessKey;
        this.storageContainerPath = $.storageContainerPath;
        this.storageContainerSasKey = $.storageContainerSasKey;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SqlPoolVulnerabilityAssessmentState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SqlPoolVulnerabilityAssessmentState $;

        public Builder() {
            $ = new SqlPoolVulnerabilityAssessmentState();
        }

        public Builder(SqlPoolVulnerabilityAssessmentState defaults) {
            $ = new SqlPoolVulnerabilityAssessmentState(Objects.requireNonNull(defaults));
        }

        /**
         * @param recurringScans The recurring scans settings. The `recurring_scans` block supports fields documented below.
         * 
         * @return builder
         * 
         */
        public Builder recurringScans(@Nullable Output<SqlPoolVulnerabilityAssessmentRecurringScansArgs> recurringScans) {
            $.recurringScans = recurringScans;
            return this;
        }

        /**
         * @param recurringScans The recurring scans settings. The `recurring_scans` block supports fields documented below.
         * 
         * @return builder
         * 
         */
        public Builder recurringScans(SqlPoolVulnerabilityAssessmentRecurringScansArgs recurringScans) {
            return recurringScans(Output.of(recurringScans));
        }

        /**
         * @param sqlPoolSecurityAlertPolicyId The ID of the security alert policy of the Synapse SQL Pool. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder sqlPoolSecurityAlertPolicyId(@Nullable Output<String> sqlPoolSecurityAlertPolicyId) {
            $.sqlPoolSecurityAlertPolicyId = sqlPoolSecurityAlertPolicyId;
            return this;
        }

        /**
         * @param sqlPoolSecurityAlertPolicyId The ID of the security alert policy of the Synapse SQL Pool. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder sqlPoolSecurityAlertPolicyId(String sqlPoolSecurityAlertPolicyId) {
            return sqlPoolSecurityAlertPolicyId(Output.of(sqlPoolSecurityAlertPolicyId));
        }

        /**
         * @param storageAccountAccessKey Specifies the identifier key of the storage account for vulnerability assessment scan results. If `storage_container_sas_key` isn&#39;t specified, `storage_account_access_key` is required.
         * 
         * @return builder
         * 
         */
        public Builder storageAccountAccessKey(@Nullable Output<String> storageAccountAccessKey) {
            $.storageAccountAccessKey = storageAccountAccessKey;
            return this;
        }

        /**
         * @param storageAccountAccessKey Specifies the identifier key of the storage account for vulnerability assessment scan results. If `storage_container_sas_key` isn&#39;t specified, `storage_account_access_key` is required.
         * 
         * @return builder
         * 
         */
        public Builder storageAccountAccessKey(String storageAccountAccessKey) {
            return storageAccountAccessKey(Output.of(storageAccountAccessKey));
        }

        /**
         * @param storageContainerPath A blob storage container path to hold the scan results (e.g. https://example.blob.core.windows.net/VaScans/).
         * 
         * @return builder
         * 
         */
        public Builder storageContainerPath(@Nullable Output<String> storageContainerPath) {
            $.storageContainerPath = storageContainerPath;
            return this;
        }

        /**
         * @param storageContainerPath A blob storage container path to hold the scan results (e.g. https://example.blob.core.windows.net/VaScans/).
         * 
         * @return builder
         * 
         */
        public Builder storageContainerPath(String storageContainerPath) {
            return storageContainerPath(Output.of(storageContainerPath));
        }

        /**
         * @param storageContainerSasKey A shared access signature (SAS Key) that has write access to the blob container specified in `storage_container_path` parameter. If `storage_account_access_key` isn&#39;t specified, `storage_container_sas_key` is required.
         * 
         * @return builder
         * 
         */
        public Builder storageContainerSasKey(@Nullable Output<String> storageContainerSasKey) {
            $.storageContainerSasKey = storageContainerSasKey;
            return this;
        }

        /**
         * @param storageContainerSasKey A shared access signature (SAS Key) that has write access to the blob container specified in `storage_container_path` parameter. If `storage_account_access_key` isn&#39;t specified, `storage_container_sas_key` is required.
         * 
         * @return builder
         * 
         */
        public Builder storageContainerSasKey(String storageContainerSasKey) {
            return storageContainerSasKey(Output.of(storageContainerSasKey));
        }

        public SqlPoolVulnerabilityAssessmentState build() {
            return $;
        }
    }

}
