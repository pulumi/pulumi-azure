// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.healthcare.outputs;

import com.pulumi.azure.healthcare.outputs.GetDicomServiceAuthentication;
import com.pulumi.azure.healthcare.outputs.GetDicomServiceIdentity;
import com.pulumi.azure.healthcare.outputs.GetDicomServicePrivateEndpoint;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetDicomServiceResult {
    /**
     * @return The `authentication` block as defined below.
     * 
     */
    private final List<GetDicomServiceAuthentication> authentications;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private final String id;
    private final List<GetDicomServiceIdentity> identities;
    /**
     * @return The Azure Region where the Healthcare DICOM Service is located.
     * 
     */
    private final String location;
    private final String name;
    private final List<GetDicomServicePrivateEndpoint> privateEndpoints;
    /**
     * @return The url of the Healthcare DICOM Services.
     * 
     */
    private final String serviceUrl;
    /**
     * @return A map of tags assigned to the Healthcare DICOM Service.
     * 
     */
    private final Map<String,String> tags;
    private final String workspaceId;

    @CustomType.Constructor
    private GetDicomServiceResult(
        @CustomType.Parameter("authentications") List<GetDicomServiceAuthentication> authentications,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("identities") List<GetDicomServiceIdentity> identities,
        @CustomType.Parameter("location") String location,
        @CustomType.Parameter("name") String name,
        @CustomType.Parameter("privateEndpoints") List<GetDicomServicePrivateEndpoint> privateEndpoints,
        @CustomType.Parameter("serviceUrl") String serviceUrl,
        @CustomType.Parameter("tags") Map<String,String> tags,
        @CustomType.Parameter("workspaceId") String workspaceId) {
        this.authentications = authentications;
        this.id = id;
        this.identities = identities;
        this.location = location;
        this.name = name;
        this.privateEndpoints = privateEndpoints;
        this.serviceUrl = serviceUrl;
        this.tags = tags;
        this.workspaceId = workspaceId;
    }

    /**
     * @return The `authentication` block as defined below.
     * 
     */
    public List<GetDicomServiceAuthentication> authentications() {
        return this.authentications;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public List<GetDicomServiceIdentity> identities() {
        return this.identities;
    }
    /**
     * @return The Azure Region where the Healthcare DICOM Service is located.
     * 
     */
    public String location() {
        return this.location;
    }
    public String name() {
        return this.name;
    }
    public List<GetDicomServicePrivateEndpoint> privateEndpoints() {
        return this.privateEndpoints;
    }
    /**
     * @return The url of the Healthcare DICOM Services.
     * 
     */
    public String serviceUrl() {
        return this.serviceUrl;
    }
    /**
     * @return A map of tags assigned to the Healthcare DICOM Service.
     * 
     */
    public Map<String,String> tags() {
        return this.tags;
    }
    public String workspaceId() {
        return this.workspaceId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDicomServiceResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private List<GetDicomServiceAuthentication> authentications;
        private String id;
        private List<GetDicomServiceIdentity> identities;
        private String location;
        private String name;
        private List<GetDicomServicePrivateEndpoint> privateEndpoints;
        private String serviceUrl;
        private Map<String,String> tags;
        private String workspaceId;

        public Builder() {
    	      // Empty
        }

        public Builder(GetDicomServiceResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.authentications = defaults.authentications;
    	      this.id = defaults.id;
    	      this.identities = defaults.identities;
    	      this.location = defaults.location;
    	      this.name = defaults.name;
    	      this.privateEndpoints = defaults.privateEndpoints;
    	      this.serviceUrl = defaults.serviceUrl;
    	      this.tags = defaults.tags;
    	      this.workspaceId = defaults.workspaceId;
        }

        public Builder authentications(List<GetDicomServiceAuthentication> authentications) {
            this.authentications = Objects.requireNonNull(authentications);
            return this;
        }
        public Builder authentications(GetDicomServiceAuthentication... authentications) {
            return authentications(List.of(authentications));
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder identities(List<GetDicomServiceIdentity> identities) {
            this.identities = Objects.requireNonNull(identities);
            return this;
        }
        public Builder identities(GetDicomServiceIdentity... identities) {
            return identities(List.of(identities));
        }
        public Builder location(String location) {
            this.location = Objects.requireNonNull(location);
            return this;
        }
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        public Builder privateEndpoints(List<GetDicomServicePrivateEndpoint> privateEndpoints) {
            this.privateEndpoints = Objects.requireNonNull(privateEndpoints);
            return this;
        }
        public Builder privateEndpoints(GetDicomServicePrivateEndpoint... privateEndpoints) {
            return privateEndpoints(List.of(privateEndpoints));
        }
        public Builder serviceUrl(String serviceUrl) {
            this.serviceUrl = Objects.requireNonNull(serviceUrl);
            return this;
        }
        public Builder tags(Map<String,String> tags) {
            this.tags = Objects.requireNonNull(tags);
            return this;
        }
        public Builder workspaceId(String workspaceId) {
            this.workspaceId = Objects.requireNonNull(workspaceId);
            return this;
        }        public GetDicomServiceResult build() {
            return new GetDicomServiceResult(authentications, id, identities, location, name, privateEndpoints, serviceUrl, tags, workspaceId);
        }
    }
}
