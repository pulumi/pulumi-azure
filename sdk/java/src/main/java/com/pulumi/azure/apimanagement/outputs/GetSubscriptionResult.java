// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.apimanagement.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetSubscriptionResult {
    /**
     * @return Indicates whether tracing is enabled.
     * 
     */
    private Boolean allowTracing;
    /**
     * @return The ID of the API assigned to this Subscription.
     * 
     */
    private String apiId;
    private String apiManagementId;
    /**
     * @return The display name of this Subscription.
     * 
     */
    private String displayName;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return The primary key for this subscription.
     * 
     */
    private String primaryKey;
    /**
     * @return The ID of the Product assigned to this Subscription.
     * 
     */
    private String productId;
    /**
     * @return The secondary key for this subscription.
     * 
     */
    private String secondaryKey;
    /**
     * @return The state of this Subscription.
     * 
     */
    private String state;
    private String subscriptionId;
    /**
     * @return The ID of the User assigned to this Subscription.
     * 
     */
    private String userId;

    private GetSubscriptionResult() {}
    /**
     * @return Indicates whether tracing is enabled.
     * 
     */
    public Boolean allowTracing() {
        return this.allowTracing;
    }
    /**
     * @return The ID of the API assigned to this Subscription.
     * 
     */
    public String apiId() {
        return this.apiId;
    }
    public String apiManagementId() {
        return this.apiManagementId;
    }
    /**
     * @return The display name of this Subscription.
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The primary key for this subscription.
     * 
     */
    public String primaryKey() {
        return this.primaryKey;
    }
    /**
     * @return The ID of the Product assigned to this Subscription.
     * 
     */
    public String productId() {
        return this.productId;
    }
    /**
     * @return The secondary key for this subscription.
     * 
     */
    public String secondaryKey() {
        return this.secondaryKey;
    }
    /**
     * @return The state of this Subscription.
     * 
     */
    public String state() {
        return this.state;
    }
    public String subscriptionId() {
        return this.subscriptionId;
    }
    /**
     * @return The ID of the User assigned to this Subscription.
     * 
     */
    public String userId() {
        return this.userId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSubscriptionResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Boolean allowTracing;
        private String apiId;
        private String apiManagementId;
        private String displayName;
        private String id;
        private String primaryKey;
        private String productId;
        private String secondaryKey;
        private String state;
        private String subscriptionId;
        private String userId;
        public Builder() {}
        public Builder(GetSubscriptionResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.allowTracing = defaults.allowTracing;
    	      this.apiId = defaults.apiId;
    	      this.apiManagementId = defaults.apiManagementId;
    	      this.displayName = defaults.displayName;
    	      this.id = defaults.id;
    	      this.primaryKey = defaults.primaryKey;
    	      this.productId = defaults.productId;
    	      this.secondaryKey = defaults.secondaryKey;
    	      this.state = defaults.state;
    	      this.subscriptionId = defaults.subscriptionId;
    	      this.userId = defaults.userId;
        }

        @CustomType.Setter
        public Builder allowTracing(Boolean allowTracing) {
            if (allowTracing == null) {
              throw new MissingRequiredPropertyException("GetSubscriptionResult", "allowTracing");
            }
            this.allowTracing = allowTracing;
            return this;
        }
        @CustomType.Setter
        public Builder apiId(String apiId) {
            if (apiId == null) {
              throw new MissingRequiredPropertyException("GetSubscriptionResult", "apiId");
            }
            this.apiId = apiId;
            return this;
        }
        @CustomType.Setter
        public Builder apiManagementId(String apiManagementId) {
            if (apiManagementId == null) {
              throw new MissingRequiredPropertyException("GetSubscriptionResult", "apiManagementId");
            }
            this.apiManagementId = apiManagementId;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(String displayName) {
            if (displayName == null) {
              throw new MissingRequiredPropertyException("GetSubscriptionResult", "displayName");
            }
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetSubscriptionResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder primaryKey(String primaryKey) {
            if (primaryKey == null) {
              throw new MissingRequiredPropertyException("GetSubscriptionResult", "primaryKey");
            }
            this.primaryKey = primaryKey;
            return this;
        }
        @CustomType.Setter
        public Builder productId(String productId) {
            if (productId == null) {
              throw new MissingRequiredPropertyException("GetSubscriptionResult", "productId");
            }
            this.productId = productId;
            return this;
        }
        @CustomType.Setter
        public Builder secondaryKey(String secondaryKey) {
            if (secondaryKey == null) {
              throw new MissingRequiredPropertyException("GetSubscriptionResult", "secondaryKey");
            }
            this.secondaryKey = secondaryKey;
            return this;
        }
        @CustomType.Setter
        public Builder state(String state) {
            if (state == null) {
              throw new MissingRequiredPropertyException("GetSubscriptionResult", "state");
            }
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder subscriptionId(String subscriptionId) {
            if (subscriptionId == null) {
              throw new MissingRequiredPropertyException("GetSubscriptionResult", "subscriptionId");
            }
            this.subscriptionId = subscriptionId;
            return this;
        }
        @CustomType.Setter
        public Builder userId(String userId) {
            if (userId == null) {
              throw new MissingRequiredPropertyException("GetSubscriptionResult", "userId");
            }
            this.userId = userId;
            return this;
        }
        public GetSubscriptionResult build() {
            final var _resultValue = new GetSubscriptionResult();
            _resultValue.allowTracing = allowTracing;
            _resultValue.apiId = apiId;
            _resultValue.apiManagementId = apiManagementId;
            _resultValue.displayName = displayName;
            _resultValue.id = id;
            _resultValue.primaryKey = primaryKey;
            _resultValue.productId = productId;
            _resultValue.secondaryKey = secondaryKey;
            _resultValue.state = state;
            _resultValue.subscriptionId = subscriptionId;
            _resultValue.userId = userId;
            return _resultValue;
        }
    }
}
