// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.communication.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetServiceResult {
    /**
     * @return The location where the Communication service stores its data at rest.
     * 
     */
    private String dataLocation;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private String name;
    /**
     * @return The primary connection string of the Communication Service.
     * 
     */
    private String primaryConnectionString;
    /**
     * @return The primary key of the Communication Service.
     * 
     */
    private String primaryKey;
    private String resourceGroupName;
    /**
     * @return The secondary connection string of the Communication Service.
     * 
     */
    private String secondaryConnectionString;
    /**
     * @return The secondary key of the Communication Service.
     * 
     */
    private String secondaryKey;
    /**
     * @return A mapping of tags assigned to the Communication Service.
     * 
     */
    private Map<String,String> tags;

    private GetServiceResult() {}
    /**
     * @return The location where the Communication service stores its data at rest.
     * 
     */
    public String dataLocation() {
        return this.dataLocation;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public String name() {
        return this.name;
    }
    /**
     * @return The primary connection string of the Communication Service.
     * 
     */
    public String primaryConnectionString() {
        return this.primaryConnectionString;
    }
    /**
     * @return The primary key of the Communication Service.
     * 
     */
    public String primaryKey() {
        return this.primaryKey;
    }
    public String resourceGroupName() {
        return this.resourceGroupName;
    }
    /**
     * @return The secondary connection string of the Communication Service.
     * 
     */
    public String secondaryConnectionString() {
        return this.secondaryConnectionString;
    }
    /**
     * @return The secondary key of the Communication Service.
     * 
     */
    public String secondaryKey() {
        return this.secondaryKey;
    }
    /**
     * @return A mapping of tags assigned to the Communication Service.
     * 
     */
    public Map<String,String> tags() {
        return this.tags;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetServiceResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String dataLocation;
        private String id;
        private String name;
        private String primaryConnectionString;
        private String primaryKey;
        private String resourceGroupName;
        private String secondaryConnectionString;
        private String secondaryKey;
        private Map<String,String> tags;
        public Builder() {}
        public Builder(GetServiceResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.dataLocation = defaults.dataLocation;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.primaryConnectionString = defaults.primaryConnectionString;
    	      this.primaryKey = defaults.primaryKey;
    	      this.resourceGroupName = defaults.resourceGroupName;
    	      this.secondaryConnectionString = defaults.secondaryConnectionString;
    	      this.secondaryKey = defaults.secondaryKey;
    	      this.tags = defaults.tags;
        }

        @CustomType.Setter
        public Builder dataLocation(String dataLocation) {
            this.dataLocation = Objects.requireNonNull(dataLocation);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder primaryConnectionString(String primaryConnectionString) {
            this.primaryConnectionString = Objects.requireNonNull(primaryConnectionString);
            return this;
        }
        @CustomType.Setter
        public Builder primaryKey(String primaryKey) {
            this.primaryKey = Objects.requireNonNull(primaryKey);
            return this;
        }
        @CustomType.Setter
        public Builder resourceGroupName(String resourceGroupName) {
            this.resourceGroupName = Objects.requireNonNull(resourceGroupName);
            return this;
        }
        @CustomType.Setter
        public Builder secondaryConnectionString(String secondaryConnectionString) {
            this.secondaryConnectionString = Objects.requireNonNull(secondaryConnectionString);
            return this;
        }
        @CustomType.Setter
        public Builder secondaryKey(String secondaryKey) {
            this.secondaryKey = Objects.requireNonNull(secondaryKey);
            return this;
        }
        @CustomType.Setter
        public Builder tags(Map<String,String> tags) {
            this.tags = Objects.requireNonNull(tags);
            return this;
        }
        public GetServiceResult build() {
            final var o = new GetServiceResult();
            o.dataLocation = dataLocation;
            o.id = id;
            o.name = name;
            o.primaryConnectionString = primaryConnectionString;
            o.primaryKey = primaryKey;
            o.resourceGroupName = resourceGroupName;
            o.secondaryConnectionString = secondaryConnectionString;
            o.secondaryKey = secondaryKey;
            o.tags = tags;
            return o;
        }
    }
}
