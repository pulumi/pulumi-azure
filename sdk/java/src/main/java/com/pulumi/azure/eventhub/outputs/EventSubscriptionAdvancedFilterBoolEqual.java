// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.eventhub.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class EventSubscriptionAdvancedFilterBoolEqual {
    /**
     * @return Specifies the field within the event data that you want to use for filtering. Type of the field can be a number, boolean, or string.
     * 
     */
    private String key;
    /**
     * @return Specifies a single value to compare to when using a single value operator.
     * 
     * OR
     * 
     */
    private Boolean value;

    private EventSubscriptionAdvancedFilterBoolEqual() {}
    /**
     * @return Specifies the field within the event data that you want to use for filtering. Type of the field can be a number, boolean, or string.
     * 
     */
    public String key() {
        return this.key;
    }
    /**
     * @return Specifies a single value to compare to when using a single value operator.
     * 
     * OR
     * 
     */
    public Boolean value() {
        return this.value;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(EventSubscriptionAdvancedFilterBoolEqual defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String key;
        private Boolean value;
        public Builder() {}
        public Builder(EventSubscriptionAdvancedFilterBoolEqual defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.key = defaults.key;
    	      this.value = defaults.value;
        }

        @CustomType.Setter
        public Builder key(String key) {
            if (key == null) {
              throw new MissingRequiredPropertyException("EventSubscriptionAdvancedFilterBoolEqual", "key");
            }
            this.key = key;
            return this;
        }
        @CustomType.Setter
        public Builder value(Boolean value) {
            if (value == null) {
              throw new MissingRequiredPropertyException("EventSubscriptionAdvancedFilterBoolEqual", "value");
            }
            this.value = value;
            return this;
        }
        public EventSubscriptionAdvancedFilterBoolEqual build() {
            final var _resultValue = new EventSubscriptionAdvancedFilterBoolEqual();
            _resultValue.key = key;
            _resultValue.value = value;
            return _resultValue;
        }
    }
}
