// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.frontdoor;

import com.pulumi.azure.Utilities;
import com.pulumi.azure.frontdoor.FrontdoorArgs;
import com.pulumi.azure.frontdoor.inputs.FrontdoorState;
import com.pulumi.azure.frontdoor.outputs.FrontdoorBackendPool;
import com.pulumi.azure.frontdoor.outputs.FrontdoorBackendPoolHealthProbe;
import com.pulumi.azure.frontdoor.outputs.FrontdoorBackendPoolLoadBalancing;
import com.pulumi.azure.frontdoor.outputs.FrontdoorBackendPoolSetting;
import com.pulumi.azure.frontdoor.outputs.FrontdoorExplicitResourceOrder;
import com.pulumi.azure.frontdoor.outputs.FrontdoorFrontendEndpoint;
import com.pulumi.azure.frontdoor.outputs.FrontdoorRoutingRule;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * !&gt; **IMPORTANT** This deploys an Azure Front Door (classic) resource which has been deprecated and will receive security updates only. Please migrate your existing Azure Front Door (classic) deployments to the new Azure Front Door (standard/premium) resources. For your convenience, the service team has exposed a `Front Door Classic` to `Front Door Standard/Premium` [migration tool](https://learn.microsoft.com/azure/frontdoor/tier-migration) to allow you to migrate your existing `Front Door Classic` instances to the new `Front Door Standard/Premium` product tiers.
 * 
 * Manages an Azure Front Door (classic) instance.
 * 
 * Azure Front Door Service is Microsoft&#39;s highly available and scalable web application acceleration platform and global HTTP(S) load balancer. It provides built-in DDoS protection and application layer security and caching. Front Door enables you to build applications that maximize and automate high-availability and performance for your end-users. Use Front Door with Azure services including Web/Mobile Apps, Cloud Services and Virtual Machines â€“ or combine it with on-premises services for hybrid deployments and smooth cloud migration.
 * 
 * Below are some of the key scenarios that Azure Front Door Service addresses:
 * 
 * * Use Front Door to improve application scale and availability with instant multi-region failover
 * * Use Front Door to improve application performance with SSL offload and routing requests to the fastest available application backend.
 * * Use Front Door for application layer security and DDoS protection for your application.
 * 
 * ## Example Usage
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.azure.core.ResourceGroup;
 * import com.pulumi.azure.core.ResourceGroupArgs;
 * import com.pulumi.azure.frontdoor.Frontdoor;
 * import com.pulumi.azure.frontdoor.FrontdoorArgs;
 * import com.pulumi.azure.frontdoor.inputs.FrontdoorRoutingRuleArgs;
 * import com.pulumi.azure.frontdoor.inputs.FrontdoorRoutingRuleForwardingConfigurationArgs;
 * import com.pulumi.azure.frontdoor.inputs.FrontdoorBackendPoolLoadBalancingArgs;
 * import com.pulumi.azure.frontdoor.inputs.FrontdoorBackendPoolHealthProbeArgs;
 * import com.pulumi.azure.frontdoor.inputs.FrontdoorBackendPoolArgs;
 * import com.pulumi.azure.frontdoor.inputs.FrontdoorFrontendEndpointArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var exampleResourceGroup = new ResourceGroup(&#34;exampleResourceGroup&#34;, ResourceGroupArgs.builder()        
 *             .location(&#34;West Europe&#34;)
 *             .build());
 * 
 *         var exampleFrontdoor = new Frontdoor(&#34;exampleFrontdoor&#34;, FrontdoorArgs.builder()        
 *             .resourceGroupName(exampleResourceGroup.name())
 *             .routingRules(FrontdoorRoutingRuleArgs.builder()
 *                 .name(&#34;exampleRoutingRule1&#34;)
 *                 .acceptedProtocols(                
 *                     &#34;Http&#34;,
 *                     &#34;Https&#34;)
 *                 .patternsToMatches(&#34;/*&#34;)
 *                 .frontendEndpoints(&#34;exampleFrontendEndpoint1&#34;)
 *                 .forwardingConfiguration(FrontdoorRoutingRuleForwardingConfigurationArgs.builder()
 *                     .forwardingProtocol(&#34;MatchRequest&#34;)
 *                     .backendPoolName(&#34;exampleBackendBing&#34;)
 *                     .build())
 *                 .build())
 *             .backendPoolLoadBalancings(FrontdoorBackendPoolLoadBalancingArgs.builder()
 *                 .name(&#34;exampleLoadBalancingSettings1&#34;)
 *                 .build())
 *             .backendPoolHealthProbes(FrontdoorBackendPoolHealthProbeArgs.builder()
 *                 .name(&#34;exampleHealthProbeSetting1&#34;)
 *                 .build())
 *             .backendPools(FrontdoorBackendPoolArgs.builder()
 *                 .name(&#34;exampleBackendBing&#34;)
 *                 .backends(FrontdoorBackendPoolBackendArgs.builder()
 *                     .hostHeader(&#34;www.bing.com&#34;)
 *                     .address(&#34;www.bing.com&#34;)
 *                     .httpPort(80)
 *                     .httpsPort(443)
 *                     .build())
 *                 .loadBalancingName(&#34;exampleLoadBalancingSettings1&#34;)
 *                 .healthProbeName(&#34;exampleHealthProbeSetting1&#34;)
 *                 .build())
 *             .frontendEndpoints(FrontdoorFrontendEndpointArgs.builder()
 *                 .name(&#34;exampleFrontendEndpoint1&#34;)
 *                 .hostName(&#34;example-FrontDoor.azurefd.net&#34;)
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * Front Doors can be imported using the `resource id`, e.g.
 * 
 * ```sh
 *  $ pulumi import azure:frontdoor/frontdoor:Frontdoor example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/mygroup1/providers/Microsoft.Network/frontDoors/frontdoor1
 * ```
 * 
 */
@ResourceType(type="azure:frontdoor/frontdoor:Frontdoor")
public class Frontdoor extends com.pulumi.resources.CustomResource {
    /**
     * A `backend_pool_health_probe` block as defined below.
     * 
     */
    @Export(name="backendPoolHealthProbes", refs={List.class,FrontdoorBackendPoolHealthProbe.class}, tree="[0,1]")
    private Output<List<FrontdoorBackendPoolHealthProbe>> backendPoolHealthProbes;

    /**
     * @return A `backend_pool_health_probe` block as defined below.
     * 
     */
    public Output<List<FrontdoorBackendPoolHealthProbe>> backendPoolHealthProbes() {
        return this.backendPoolHealthProbes;
    }
    /**
     * A map/dictionary of Backend Pool Health Probe Names (key) to the Backend Pool Health Probe ID (value)
     * 
     */
    @Export(name="backendPoolHealthProbesMap", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output<Map<String,String>> backendPoolHealthProbesMap;

    /**
     * @return A map/dictionary of Backend Pool Health Probe Names (key) to the Backend Pool Health Probe ID (value)
     * 
     */
    public Output<Map<String,String>> backendPoolHealthProbesMap() {
        return this.backendPoolHealthProbesMap;
    }
    /**
     * A map/dictionary of Backend Pool Load Balancing Setting Names (key) to the Backend Pool Load Balancing Setting ID (value)
     * 
     */
    @Export(name="backendPoolLoadBalancingSettingsMap", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output<Map<String,String>> backendPoolLoadBalancingSettingsMap;

    /**
     * @return A map/dictionary of Backend Pool Load Balancing Setting Names (key) to the Backend Pool Load Balancing Setting ID (value)
     * 
     */
    public Output<Map<String,String>> backendPoolLoadBalancingSettingsMap() {
        return this.backendPoolLoadBalancingSettingsMap;
    }
    /**
     * A `backend_pool_load_balancing` block as defined below.
     * 
     */
    @Export(name="backendPoolLoadBalancings", refs={List.class,FrontdoorBackendPoolLoadBalancing.class}, tree="[0,1]")
    private Output<List<FrontdoorBackendPoolLoadBalancing>> backendPoolLoadBalancings;

    /**
     * @return A `backend_pool_load_balancing` block as defined below.
     * 
     */
    public Output<List<FrontdoorBackendPoolLoadBalancing>> backendPoolLoadBalancings() {
        return this.backendPoolLoadBalancings;
    }
    /**
     * A `backend_pool_settings` block as defined below.
     * 
     */
    @Export(name="backendPoolSettings", refs={List.class,FrontdoorBackendPoolSetting.class}, tree="[0,1]")
    private Output</* @Nullable */ List<FrontdoorBackendPoolSetting>> backendPoolSettings;

    /**
     * @return A `backend_pool_settings` block as defined below.
     * 
     */
    public Output<Optional<List<FrontdoorBackendPoolSetting>>> backendPoolSettings() {
        return Codegen.optional(this.backendPoolSettings);
    }
    /**
     * A `backend_pool` block as defined below.
     * 
     * &gt; Azure by default allows specifying up to 50 Backend Pools - but this quota can be increased via Microsoft Support.
     * 
     */
    @Export(name="backendPools", refs={List.class,FrontdoorBackendPool.class}, tree="[0,1]")
    private Output<List<FrontdoorBackendPool>> backendPools;

    /**
     * @return A `backend_pool` block as defined below.
     * 
     * &gt; Azure by default allows specifying up to 50 Backend Pools - but this quota can be increased via Microsoft Support.
     * 
     */
    public Output<List<FrontdoorBackendPool>> backendPools() {
        return this.backendPools;
    }
    /**
     * A map/dictionary of Backend Pool Names (key) to the Backend Pool ID (value)
     * 
     */
    @Export(name="backendPoolsMap", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output<Map<String,String>> backendPoolsMap;

    /**
     * @return A map/dictionary of Backend Pool Names (key) to the Backend Pool ID (value)
     * 
     */
    public Output<Map<String,String>> backendPoolsMap() {
        return this.backendPoolsMap;
    }
    /**
     * The host that each frontendEndpoint must CNAME to.
     * 
     */
    @Export(name="cname", refs={String.class}, tree="[0]")
    private Output<String> cname;

    /**
     * @return The host that each frontendEndpoint must CNAME to.
     * 
     */
    public Output<String> cname() {
        return this.cname;
    }
    @Export(name="explicitResourceOrders", refs={List.class,FrontdoorExplicitResourceOrder.class}, tree="[0,1]")
    private Output<List<FrontdoorExplicitResourceOrder>> explicitResourceOrders;

    public Output<List<FrontdoorExplicitResourceOrder>> explicitResourceOrders() {
        return this.explicitResourceOrders;
    }
    /**
     * A friendly name for the Front Door service.
     * 
     */
    @Export(name="friendlyName", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> friendlyName;

    /**
     * @return A friendly name for the Front Door service.
     * 
     */
    public Output<Optional<String>> friendlyName() {
        return Codegen.optional(this.friendlyName);
    }
    /**
     * A `frontend_endpoint` block as defined below.
     * 
     */
    @Export(name="frontendEndpoints", refs={List.class,FrontdoorFrontendEndpoint.class}, tree="[0,1]")
    private Output<List<FrontdoorFrontendEndpoint>> frontendEndpoints;

    /**
     * @return A `frontend_endpoint` block as defined below.
     * 
     */
    public Output<List<FrontdoorFrontendEndpoint>> frontendEndpoints() {
        return this.frontendEndpoints;
    }
    /**
     * The names of the `frontend_endpoint` blocks within this resource to associate with this `routing_rule`.
     * 
     */
    @Export(name="frontendEndpointsMap", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output<Map<String,String>> frontendEndpointsMap;

    /**
     * @return The names of the `frontend_endpoint` blocks within this resource to associate with this `routing_rule`.
     * 
     */
    public Output<Map<String,String>> frontendEndpointsMap() {
        return this.frontendEndpointsMap;
    }
    /**
     * The unique ID of the Front Door which is embedded into the incoming headers `X-Azure-FDID` attribute and maybe used to filter traffic sent by the Front Door to your backend.
     * 
     */
    @Export(name="headerFrontdoorId", refs={String.class}, tree="[0]")
    private Output<String> headerFrontdoorId;

    /**
     * @return The unique ID of the Front Door which is embedded into the incoming headers `X-Azure-FDID` attribute and maybe used to filter traffic sent by the Front Door to your backend.
     * 
     */
    public Output<String> headerFrontdoorId() {
        return this.headerFrontdoorId;
    }
    /**
     * Should the Front Door Load Balancer be Enabled? Defaults to `true`.
     * 
     */
    @Export(name="loadBalancerEnabled", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> loadBalancerEnabled;

    /**
     * @return Should the Front Door Load Balancer be Enabled? Defaults to `true`.
     * 
     */
    public Output<Optional<Boolean>> loadBalancerEnabled() {
        return Codegen.optional(this.loadBalancerEnabled);
    }
    /**
     * Specifies the name of the Front Door service. Must be globally unique. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return Specifies the name of the Front Door service. Must be globally unique. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Specifies the name of the Resource Group in which the Front Door service should exist. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="resourceGroupName", refs={String.class}, tree="[0]")
    private Output<String> resourceGroupName;

    /**
     * @return Specifies the name of the Resource Group in which the Front Door service should exist. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }
    /**
     * A `routing_rule` block as defined below.
     * 
     */
    @Export(name="routingRules", refs={List.class,FrontdoorRoutingRule.class}, tree="[0,1]")
    private Output<List<FrontdoorRoutingRule>> routingRules;

    /**
     * @return A `routing_rule` block as defined below.
     * 
     */
    public Output<List<FrontdoorRoutingRule>> routingRules() {
        return this.routingRules;
    }
    /**
     * A map/dictionary of Routing Rule Names (key) to the Routing Rule ID (value)
     * 
     */
    @Export(name="routingRulesMap", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output<Map<String,String>> routingRulesMap;

    /**
     * @return A map/dictionary of Routing Rule Names (key) to the Routing Rule ID (value)
     * 
     */
    public Output<Map<String,String>> routingRulesMap() {
        return this.routingRulesMap;
    }
    /**
     * A mapping of tags to assign to the resource.
     * 
     */
    @Export(name="tags", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output</* @Nullable */ Map<String,String>> tags;

    /**
     * @return A mapping of tags to assign to the resource.
     * 
     */
    public Output<Optional<Map<String,String>>> tags() {
        return Codegen.optional(this.tags);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Frontdoor(String name) {
        this(name, FrontdoorArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Frontdoor(String name, FrontdoorArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Frontdoor(String name, FrontdoorArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:frontdoor/frontdoor:Frontdoor", name, args == null ? FrontdoorArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private Frontdoor(String name, Output<String> id, @Nullable FrontdoorState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:frontdoor/frontdoor:Frontdoor", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Frontdoor get(String name, Output<String> id, @Nullable FrontdoorState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Frontdoor(name, id, state, options);
    }
}
