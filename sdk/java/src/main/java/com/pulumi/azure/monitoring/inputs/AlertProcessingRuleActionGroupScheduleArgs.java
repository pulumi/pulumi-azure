// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.monitoring.inputs;

import com.pulumi.azure.monitoring.inputs.AlertProcessingRuleActionGroupScheduleRecurrenceArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AlertProcessingRuleActionGroupScheduleArgs extends com.pulumi.resources.ResourceArgs {

    public static final AlertProcessingRuleActionGroupScheduleArgs Empty = new AlertProcessingRuleActionGroupScheduleArgs();

    /**
     * Specifies the Alert Processing Rule effective start time (Y-m-d&#39;T&#39;H:M:S).
     * 
     */
    @Import(name="effectiveFrom")
    private @Nullable Output<String> effectiveFrom;

    /**
     * @return Specifies the Alert Processing Rule effective start time (Y-m-d&#39;T&#39;H:M:S).
     * 
     */
    public Optional<Output<String>> effectiveFrom() {
        return Optional.ofNullable(this.effectiveFrom);
    }

    /**
     * Specifies the Alert Processing Rule effective end time (Y-m-d&#39;T&#39;H:M:S).
     * 
     */
    @Import(name="effectiveUntil")
    private @Nullable Output<String> effectiveUntil;

    /**
     * @return Specifies the Alert Processing Rule effective end time (Y-m-d&#39;T&#39;H:M:S).
     * 
     */
    public Optional<Output<String>> effectiveUntil() {
        return Optional.ofNullable(this.effectiveUntil);
    }

    /**
     * A `recurrence` block as defined above.
     * 
     */
    @Import(name="recurrence")
    private @Nullable Output<AlertProcessingRuleActionGroupScheduleRecurrenceArgs> recurrence;

    /**
     * @return A `recurrence` block as defined above.
     * 
     */
    public Optional<Output<AlertProcessingRuleActionGroupScheduleRecurrenceArgs>> recurrence() {
        return Optional.ofNullable(this.recurrence);
    }

    /**
     * The time zone (e.g. Pacific Standard time, Eastern Standard Time). Defaults to `UTC`. [possible values are defined here](&lt;https://docs.microsoft.com/en-us/previous-versions/windows/embedded/ms912391(v=winembedded.11)&gt;).
     * 
     */
    @Import(name="timeZone")
    private @Nullable Output<String> timeZone;

    /**
     * @return The time zone (e.g. Pacific Standard time, Eastern Standard Time). Defaults to `UTC`. [possible values are defined here](&lt;https://docs.microsoft.com/en-us/previous-versions/windows/embedded/ms912391(v=winembedded.11)&gt;).
     * 
     */
    public Optional<Output<String>> timeZone() {
        return Optional.ofNullable(this.timeZone);
    }

    private AlertProcessingRuleActionGroupScheduleArgs() {}

    private AlertProcessingRuleActionGroupScheduleArgs(AlertProcessingRuleActionGroupScheduleArgs $) {
        this.effectiveFrom = $.effectiveFrom;
        this.effectiveUntil = $.effectiveUntil;
        this.recurrence = $.recurrence;
        this.timeZone = $.timeZone;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AlertProcessingRuleActionGroupScheduleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AlertProcessingRuleActionGroupScheduleArgs $;

        public Builder() {
            $ = new AlertProcessingRuleActionGroupScheduleArgs();
        }

        public Builder(AlertProcessingRuleActionGroupScheduleArgs defaults) {
            $ = new AlertProcessingRuleActionGroupScheduleArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param effectiveFrom Specifies the Alert Processing Rule effective start time (Y-m-d&#39;T&#39;H:M:S).
         * 
         * @return builder
         * 
         */
        public Builder effectiveFrom(@Nullable Output<String> effectiveFrom) {
            $.effectiveFrom = effectiveFrom;
            return this;
        }

        /**
         * @param effectiveFrom Specifies the Alert Processing Rule effective start time (Y-m-d&#39;T&#39;H:M:S).
         * 
         * @return builder
         * 
         */
        public Builder effectiveFrom(String effectiveFrom) {
            return effectiveFrom(Output.of(effectiveFrom));
        }

        /**
         * @param effectiveUntil Specifies the Alert Processing Rule effective end time (Y-m-d&#39;T&#39;H:M:S).
         * 
         * @return builder
         * 
         */
        public Builder effectiveUntil(@Nullable Output<String> effectiveUntil) {
            $.effectiveUntil = effectiveUntil;
            return this;
        }

        /**
         * @param effectiveUntil Specifies the Alert Processing Rule effective end time (Y-m-d&#39;T&#39;H:M:S).
         * 
         * @return builder
         * 
         */
        public Builder effectiveUntil(String effectiveUntil) {
            return effectiveUntil(Output.of(effectiveUntil));
        }

        /**
         * @param recurrence A `recurrence` block as defined above.
         * 
         * @return builder
         * 
         */
        public Builder recurrence(@Nullable Output<AlertProcessingRuleActionGroupScheduleRecurrenceArgs> recurrence) {
            $.recurrence = recurrence;
            return this;
        }

        /**
         * @param recurrence A `recurrence` block as defined above.
         * 
         * @return builder
         * 
         */
        public Builder recurrence(AlertProcessingRuleActionGroupScheduleRecurrenceArgs recurrence) {
            return recurrence(Output.of(recurrence));
        }

        /**
         * @param timeZone The time zone (e.g. Pacific Standard time, Eastern Standard Time). Defaults to `UTC`. [possible values are defined here](&lt;https://docs.microsoft.com/en-us/previous-versions/windows/embedded/ms912391(v=winembedded.11)&gt;).
         * 
         * @return builder
         * 
         */
        public Builder timeZone(@Nullable Output<String> timeZone) {
            $.timeZone = timeZone;
            return this;
        }

        /**
         * @param timeZone The time zone (e.g. Pacific Standard time, Eastern Standard Time). Defaults to `UTC`. [possible values are defined here](&lt;https://docs.microsoft.com/en-us/previous-versions/windows/embedded/ms912391(v=winembedded.11)&gt;).
         * 
         * @return builder
         * 
         */
        public Builder timeZone(String timeZone) {
            return timeZone(Output.of(timeZone));
        }

        public AlertProcessingRuleActionGroupScheduleArgs build() {
            return $;
        }
    }

}
