// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.media.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ContentKeyPolicyPolicyOptionFairplayConfigurationOfflineRentalConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final ContentKeyPolicyPolicyOptionFairplayConfigurationOfflineRentalConfigurationArgs Empty = new ContentKeyPolicyPolicyOptionFairplayConfigurationOfflineRentalConfigurationArgs();

    /**
     * Playback duration.
     * 
     */
    @Import(name="playbackDurationSeconds")
    private @Nullable Output<Integer> playbackDurationSeconds;

    /**
     * @return Playback duration.
     * 
     */
    public Optional<Output<Integer>> playbackDurationSeconds() {
        return Optional.ofNullable(this.playbackDurationSeconds);
    }

    /**
     * Storage duration.
     * 
     */
    @Import(name="storageDurationSeconds")
    private @Nullable Output<Integer> storageDurationSeconds;

    /**
     * @return Storage duration.
     * 
     */
    public Optional<Output<Integer>> storageDurationSeconds() {
        return Optional.ofNullable(this.storageDurationSeconds);
    }

    private ContentKeyPolicyPolicyOptionFairplayConfigurationOfflineRentalConfigurationArgs() {}

    private ContentKeyPolicyPolicyOptionFairplayConfigurationOfflineRentalConfigurationArgs(ContentKeyPolicyPolicyOptionFairplayConfigurationOfflineRentalConfigurationArgs $) {
        this.playbackDurationSeconds = $.playbackDurationSeconds;
        this.storageDurationSeconds = $.storageDurationSeconds;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ContentKeyPolicyPolicyOptionFairplayConfigurationOfflineRentalConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ContentKeyPolicyPolicyOptionFairplayConfigurationOfflineRentalConfigurationArgs $;

        public Builder() {
            $ = new ContentKeyPolicyPolicyOptionFairplayConfigurationOfflineRentalConfigurationArgs();
        }

        public Builder(ContentKeyPolicyPolicyOptionFairplayConfigurationOfflineRentalConfigurationArgs defaults) {
            $ = new ContentKeyPolicyPolicyOptionFairplayConfigurationOfflineRentalConfigurationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param playbackDurationSeconds Playback duration.
         * 
         * @return builder
         * 
         */
        public Builder playbackDurationSeconds(@Nullable Output<Integer> playbackDurationSeconds) {
            $.playbackDurationSeconds = playbackDurationSeconds;
            return this;
        }

        /**
         * @param playbackDurationSeconds Playback duration.
         * 
         * @return builder
         * 
         */
        public Builder playbackDurationSeconds(Integer playbackDurationSeconds) {
            return playbackDurationSeconds(Output.of(playbackDurationSeconds));
        }

        /**
         * @param storageDurationSeconds Storage duration.
         * 
         * @return builder
         * 
         */
        public Builder storageDurationSeconds(@Nullable Output<Integer> storageDurationSeconds) {
            $.storageDurationSeconds = storageDurationSeconds;
            return this;
        }

        /**
         * @param storageDurationSeconds Storage duration.
         * 
         * @return builder
         * 
         */
        public Builder storageDurationSeconds(Integer storageDurationSeconds) {
            return storageDurationSeconds(Output.of(storageDurationSeconds));
        }

        public ContentKeyPolicyPolicyOptionFairplayConfigurationOfflineRentalConfigurationArgs build() {
            return $;
        }
    }

}
