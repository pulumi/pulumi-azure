// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.network.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class NetworkWatcherFlowLogTrafficAnalytics {
    /**
     * @return Boolean flag to enable/disable traffic analytics.
     * 
     */
    private final Boolean enabled;
    /**
     * @return How frequently service should do flow analytics in minutes.
     * 
     */
    private final @Nullable Integer intervalInMinutes;
    /**
     * @return The resource GUID of the attached workspace.
     * 
     */
    private final String workspaceId;
    /**
     * @return The location of the attached workspace.
     * 
     */
    private final String workspaceRegion;
    /**
     * @return The resource ID of the attached workspace.
     * 
     */
    private final String workspaceResourceId;

    @CustomType.Constructor
    private NetworkWatcherFlowLogTrafficAnalytics(
        @CustomType.Parameter("enabled") Boolean enabled,
        @CustomType.Parameter("intervalInMinutes") @Nullable Integer intervalInMinutes,
        @CustomType.Parameter("workspaceId") String workspaceId,
        @CustomType.Parameter("workspaceRegion") String workspaceRegion,
        @CustomType.Parameter("workspaceResourceId") String workspaceResourceId) {
        this.enabled = enabled;
        this.intervalInMinutes = intervalInMinutes;
        this.workspaceId = workspaceId;
        this.workspaceRegion = workspaceRegion;
        this.workspaceResourceId = workspaceResourceId;
    }

    /**
     * @return Boolean flag to enable/disable traffic analytics.
     * 
     */
    public Boolean enabled() {
        return this.enabled;
    }
    /**
     * @return How frequently service should do flow analytics in minutes.
     * 
     */
    public Optional<Integer> intervalInMinutes() {
        return Optional.ofNullable(this.intervalInMinutes);
    }
    /**
     * @return The resource GUID of the attached workspace.
     * 
     */
    public String workspaceId() {
        return this.workspaceId;
    }
    /**
     * @return The location of the attached workspace.
     * 
     */
    public String workspaceRegion() {
        return this.workspaceRegion;
    }
    /**
     * @return The resource ID of the attached workspace.
     * 
     */
    public String workspaceResourceId() {
        return this.workspaceResourceId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(NetworkWatcherFlowLogTrafficAnalytics defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Boolean enabled;
        private @Nullable Integer intervalInMinutes;
        private String workspaceId;
        private String workspaceRegion;
        private String workspaceResourceId;

        public Builder() {
    	      // Empty
        }

        public Builder(NetworkWatcherFlowLogTrafficAnalytics defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.enabled = defaults.enabled;
    	      this.intervalInMinutes = defaults.intervalInMinutes;
    	      this.workspaceId = defaults.workspaceId;
    	      this.workspaceRegion = defaults.workspaceRegion;
    	      this.workspaceResourceId = defaults.workspaceResourceId;
        }

        public Builder enabled(Boolean enabled) {
            this.enabled = Objects.requireNonNull(enabled);
            return this;
        }
        public Builder intervalInMinutes(@Nullable Integer intervalInMinutes) {
            this.intervalInMinutes = intervalInMinutes;
            return this;
        }
        public Builder workspaceId(String workspaceId) {
            this.workspaceId = Objects.requireNonNull(workspaceId);
            return this;
        }
        public Builder workspaceRegion(String workspaceRegion) {
            this.workspaceRegion = Objects.requireNonNull(workspaceRegion);
            return this;
        }
        public Builder workspaceResourceId(String workspaceResourceId) {
            this.workspaceResourceId = Objects.requireNonNull(workspaceResourceId);
            return this;
        }        public NetworkWatcherFlowLogTrafficAnalytics build() {
            return new NetworkWatcherFlowLogTrafficAnalytics(enabled, intervalInMinutes, workspaceId, workspaceRegion, workspaceResourceId);
        }
    }
}
