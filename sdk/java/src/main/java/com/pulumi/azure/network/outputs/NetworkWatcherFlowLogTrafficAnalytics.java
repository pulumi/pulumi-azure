// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.network.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class NetworkWatcherFlowLogTrafficAnalytics {
    /**
     * @return Boolean flag to enable/disable traffic analytics.
     * 
     */
    private Boolean enabled;
    /**
     * @return How frequently service should do flow analytics in minutes. Defaults to `60`.
     * 
     */
    private @Nullable Integer intervalInMinutes;
    /**
     * @return The resource GUID of the attached workspace.
     * 
     */
    private String workspaceId;
    /**
     * @return The location of the attached workspace.
     * 
     */
    private String workspaceRegion;
    /**
     * @return The resource ID of the attached workspace.
     * 
     */
    private String workspaceResourceId;

    private NetworkWatcherFlowLogTrafficAnalytics() {}
    /**
     * @return Boolean flag to enable/disable traffic analytics.
     * 
     */
    public Boolean enabled() {
        return this.enabled;
    }
    /**
     * @return How frequently service should do flow analytics in minutes. Defaults to `60`.
     * 
     */
    public Optional<Integer> intervalInMinutes() {
        return Optional.ofNullable(this.intervalInMinutes);
    }
    /**
     * @return The resource GUID of the attached workspace.
     * 
     */
    public String workspaceId() {
        return this.workspaceId;
    }
    /**
     * @return The location of the attached workspace.
     * 
     */
    public String workspaceRegion() {
        return this.workspaceRegion;
    }
    /**
     * @return The resource ID of the attached workspace.
     * 
     */
    public String workspaceResourceId() {
        return this.workspaceResourceId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(NetworkWatcherFlowLogTrafficAnalytics defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Boolean enabled;
        private @Nullable Integer intervalInMinutes;
        private String workspaceId;
        private String workspaceRegion;
        private String workspaceResourceId;
        public Builder() {}
        public Builder(NetworkWatcherFlowLogTrafficAnalytics defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.enabled = defaults.enabled;
    	      this.intervalInMinutes = defaults.intervalInMinutes;
    	      this.workspaceId = defaults.workspaceId;
    	      this.workspaceRegion = defaults.workspaceRegion;
    	      this.workspaceResourceId = defaults.workspaceResourceId;
        }

        @CustomType.Setter
        public Builder enabled(Boolean enabled) {
            if (enabled == null) {
              throw new MissingRequiredPropertyException("NetworkWatcherFlowLogTrafficAnalytics", "enabled");
            }
            this.enabled = enabled;
            return this;
        }
        @CustomType.Setter
        public Builder intervalInMinutes(@Nullable Integer intervalInMinutes) {

            this.intervalInMinutes = intervalInMinutes;
            return this;
        }
        @CustomType.Setter
        public Builder workspaceId(String workspaceId) {
            if (workspaceId == null) {
              throw new MissingRequiredPropertyException("NetworkWatcherFlowLogTrafficAnalytics", "workspaceId");
            }
            this.workspaceId = workspaceId;
            return this;
        }
        @CustomType.Setter
        public Builder workspaceRegion(String workspaceRegion) {
            if (workspaceRegion == null) {
              throw new MissingRequiredPropertyException("NetworkWatcherFlowLogTrafficAnalytics", "workspaceRegion");
            }
            this.workspaceRegion = workspaceRegion;
            return this;
        }
        @CustomType.Setter
        public Builder workspaceResourceId(String workspaceResourceId) {
            if (workspaceResourceId == null) {
              throw new MissingRequiredPropertyException("NetworkWatcherFlowLogTrafficAnalytics", "workspaceResourceId");
            }
            this.workspaceResourceId = workspaceResourceId;
            return this;
        }
        public NetworkWatcherFlowLogTrafficAnalytics build() {
            final var _resultValue = new NetworkWatcherFlowLogTrafficAnalytics();
            _resultValue.enabled = enabled;
            _resultValue.intervalInMinutes = intervalInMinutes;
            _resultValue.workspaceId = workspaceId;
            _resultValue.workspaceRegion = workspaceRegion;
            _resultValue.workspaceResourceId = workspaceResourceId;
            return _resultValue;
        }
    }
}
