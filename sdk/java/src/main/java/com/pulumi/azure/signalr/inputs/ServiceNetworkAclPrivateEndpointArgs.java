// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.signalr.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ServiceNetworkAclPrivateEndpointArgs extends com.pulumi.resources.ResourceArgs {

    public static final ServiceNetworkAclPrivateEndpointArgs Empty = new ServiceNetworkAclPrivateEndpointArgs();

    /**
     * The allowed request types for the Private Endpoint Connection. Possible values are `ClientConnection`, `ServerConnection`, `RESTAPI` and `Trace`.
     * 
     * &gt; **Note:** When `default_action` is `Allow`, `allowed_request_types`cannot be set.
     * 
     */
    @Import(name="allowedRequestTypes")
    private @Nullable Output<List<String>> allowedRequestTypes;

    /**
     * @return The allowed request types for the Private Endpoint Connection. Possible values are `ClientConnection`, `ServerConnection`, `RESTAPI` and `Trace`.
     * 
     * &gt; **Note:** When `default_action` is `Allow`, `allowed_request_types`cannot be set.
     * 
     */
    public Optional<Output<List<String>>> allowedRequestTypes() {
        return Optional.ofNullable(this.allowedRequestTypes);
    }

    /**
     * The denied request types for the Private Endpoint Connection. Possible values are `ClientConnection`, `ServerConnection`, `RESTAPI` and `Trace`.
     * 
     * &gt; **Note:** When `default_action` is `Deny`, `denied_request_types`cannot be set.
     * 
     * &gt; **Note:** `allowed_request_types` - (Optional) and `denied_request_types` cannot be set together.
     * 
     */
    @Import(name="deniedRequestTypes")
    private @Nullable Output<List<String>> deniedRequestTypes;

    /**
     * @return The denied request types for the Private Endpoint Connection. Possible values are `ClientConnection`, `ServerConnection`, `RESTAPI` and `Trace`.
     * 
     * &gt; **Note:** When `default_action` is `Deny`, `denied_request_types`cannot be set.
     * 
     * &gt; **Note:** `allowed_request_types` - (Optional) and `denied_request_types` cannot be set together.
     * 
     */
    public Optional<Output<List<String>>> deniedRequestTypes() {
        return Optional.ofNullable(this.deniedRequestTypes);
    }

    /**
     * The ID of the Private Endpoint which is based on the SignalR service.
     * 
     */
    @Import(name="id", required=true)
    private Output<String> id;

    /**
     * @return The ID of the Private Endpoint which is based on the SignalR service.
     * 
     */
    public Output<String> id() {
        return this.id;
    }

    private ServiceNetworkAclPrivateEndpointArgs() {}

    private ServiceNetworkAclPrivateEndpointArgs(ServiceNetworkAclPrivateEndpointArgs $) {
        this.allowedRequestTypes = $.allowedRequestTypes;
        this.deniedRequestTypes = $.deniedRequestTypes;
        this.id = $.id;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ServiceNetworkAclPrivateEndpointArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ServiceNetworkAclPrivateEndpointArgs $;

        public Builder() {
            $ = new ServiceNetworkAclPrivateEndpointArgs();
        }

        public Builder(ServiceNetworkAclPrivateEndpointArgs defaults) {
            $ = new ServiceNetworkAclPrivateEndpointArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param allowedRequestTypes The allowed request types for the Private Endpoint Connection. Possible values are `ClientConnection`, `ServerConnection`, `RESTAPI` and `Trace`.
         * 
         * &gt; **Note:** When `default_action` is `Allow`, `allowed_request_types`cannot be set.
         * 
         * @return builder
         * 
         */
        public Builder allowedRequestTypes(@Nullable Output<List<String>> allowedRequestTypes) {
            $.allowedRequestTypes = allowedRequestTypes;
            return this;
        }

        /**
         * @param allowedRequestTypes The allowed request types for the Private Endpoint Connection. Possible values are `ClientConnection`, `ServerConnection`, `RESTAPI` and `Trace`.
         * 
         * &gt; **Note:** When `default_action` is `Allow`, `allowed_request_types`cannot be set.
         * 
         * @return builder
         * 
         */
        public Builder allowedRequestTypes(List<String> allowedRequestTypes) {
            return allowedRequestTypes(Output.of(allowedRequestTypes));
        }

        /**
         * @param allowedRequestTypes The allowed request types for the Private Endpoint Connection. Possible values are `ClientConnection`, `ServerConnection`, `RESTAPI` and `Trace`.
         * 
         * &gt; **Note:** When `default_action` is `Allow`, `allowed_request_types`cannot be set.
         * 
         * @return builder
         * 
         */
        public Builder allowedRequestTypes(String... allowedRequestTypes) {
            return allowedRequestTypes(List.of(allowedRequestTypes));
        }

        /**
         * @param deniedRequestTypes The denied request types for the Private Endpoint Connection. Possible values are `ClientConnection`, `ServerConnection`, `RESTAPI` and `Trace`.
         * 
         * &gt; **Note:** When `default_action` is `Deny`, `denied_request_types`cannot be set.
         * 
         * &gt; **Note:** `allowed_request_types` - (Optional) and `denied_request_types` cannot be set together.
         * 
         * @return builder
         * 
         */
        public Builder deniedRequestTypes(@Nullable Output<List<String>> deniedRequestTypes) {
            $.deniedRequestTypes = deniedRequestTypes;
            return this;
        }

        /**
         * @param deniedRequestTypes The denied request types for the Private Endpoint Connection. Possible values are `ClientConnection`, `ServerConnection`, `RESTAPI` and `Trace`.
         * 
         * &gt; **Note:** When `default_action` is `Deny`, `denied_request_types`cannot be set.
         * 
         * &gt; **Note:** `allowed_request_types` - (Optional) and `denied_request_types` cannot be set together.
         * 
         * @return builder
         * 
         */
        public Builder deniedRequestTypes(List<String> deniedRequestTypes) {
            return deniedRequestTypes(Output.of(deniedRequestTypes));
        }

        /**
         * @param deniedRequestTypes The denied request types for the Private Endpoint Connection. Possible values are `ClientConnection`, `ServerConnection`, `RESTAPI` and `Trace`.
         * 
         * &gt; **Note:** When `default_action` is `Deny`, `denied_request_types`cannot be set.
         * 
         * &gt; **Note:** `allowed_request_types` - (Optional) and `denied_request_types` cannot be set together.
         * 
         * @return builder
         * 
         */
        public Builder deniedRequestTypes(String... deniedRequestTypes) {
            return deniedRequestTypes(List.of(deniedRequestTypes));
        }

        /**
         * @param id The ID of the Private Endpoint which is based on the SignalR service.
         * 
         * @return builder
         * 
         */
        public Builder id(Output<String> id) {
            $.id = id;
            return this;
        }

        /**
         * @param id The ID of the Private Endpoint which is based on the SignalR service.
         * 
         * @return builder
         * 
         */
        public Builder id(String id) {
            return id(Output.of(id));
        }

        public ServiceNetworkAclPrivateEndpointArgs build() {
            if ($.id == null) {
                throw new MissingRequiredPropertyException("ServiceNetworkAclPrivateEndpointArgs", "id");
            }
            return $;
        }
    }

}
