// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.postgresql;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class FlexibleServerActiveDirectoryAdministratorArgs extends com.pulumi.resources.ResourceArgs {

    public static final FlexibleServerActiveDirectoryAdministratorArgs Empty = new FlexibleServerActiveDirectoryAdministratorArgs();

    /**
     * The object ID of a user, service principal or security group in the Azure Active Directory tenant set as the Flexible Server Admin. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="objectId", required=true)
    private Output<String> objectId;

    /**
     * @return The object ID of a user, service principal or security group in the Azure Active Directory tenant set as the Flexible Server Admin. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> objectId() {
        return this.objectId;
    }

    /**
     * The name of Azure Active Directory principal. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="principalName", required=true)
    private Output<String> principalName;

    /**
     * @return The name of Azure Active Directory principal. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> principalName() {
        return this.principalName;
    }

    /**
     * The type of Azure Active Directory principal. Possible values are `Group`, `ServicePrincipal` and `User`. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="principalType", required=true)
    private Output<String> principalType;

    /**
     * @return The type of Azure Active Directory principal. Possible values are `Group`, `ServicePrincipal` and `User`. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> principalType() {
        return this.principalType;
    }

    /**
     * The name of the resource group for the PostgreSQL Server. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    /**
     * @return The name of the resource group for the PostgreSQL Server. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * The name of the PostgreSQL Flexible Server on which to set the administrator. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="serverName", required=true)
    private Output<String> serverName;

    /**
     * @return The name of the PostgreSQL Flexible Server on which to set the administrator. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> serverName() {
        return this.serverName;
    }

    /**
     * The Azure Tenant ID. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="tenantId", required=true)
    private Output<String> tenantId;

    /**
     * @return The Azure Tenant ID. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> tenantId() {
        return this.tenantId;
    }

    private FlexibleServerActiveDirectoryAdministratorArgs() {}

    private FlexibleServerActiveDirectoryAdministratorArgs(FlexibleServerActiveDirectoryAdministratorArgs $) {
        this.objectId = $.objectId;
        this.principalName = $.principalName;
        this.principalType = $.principalType;
        this.resourceGroupName = $.resourceGroupName;
        this.serverName = $.serverName;
        this.tenantId = $.tenantId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FlexibleServerActiveDirectoryAdministratorArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FlexibleServerActiveDirectoryAdministratorArgs $;

        public Builder() {
            $ = new FlexibleServerActiveDirectoryAdministratorArgs();
        }

        public Builder(FlexibleServerActiveDirectoryAdministratorArgs defaults) {
            $ = new FlexibleServerActiveDirectoryAdministratorArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param objectId The object ID of a user, service principal or security group in the Azure Active Directory tenant set as the Flexible Server Admin. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder objectId(Output<String> objectId) {
            $.objectId = objectId;
            return this;
        }

        /**
         * @param objectId The object ID of a user, service principal or security group in the Azure Active Directory tenant set as the Flexible Server Admin. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder objectId(String objectId) {
            return objectId(Output.of(objectId));
        }

        /**
         * @param principalName The name of Azure Active Directory principal. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder principalName(Output<String> principalName) {
            $.principalName = principalName;
            return this;
        }

        /**
         * @param principalName The name of Azure Active Directory principal. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder principalName(String principalName) {
            return principalName(Output.of(principalName));
        }

        /**
         * @param principalType The type of Azure Active Directory principal. Possible values are `Group`, `ServicePrincipal` and `User`. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder principalType(Output<String> principalType) {
            $.principalType = principalType;
            return this;
        }

        /**
         * @param principalType The type of Azure Active Directory principal. Possible values are `Group`, `ServicePrincipal` and `User`. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder principalType(String principalType) {
            return principalType(Output.of(principalType));
        }

        /**
         * @param resourceGroupName The name of the resource group for the PostgreSQL Server. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName The name of the resource group for the PostgreSQL Server. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        /**
         * @param serverName The name of the PostgreSQL Flexible Server on which to set the administrator. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder serverName(Output<String> serverName) {
            $.serverName = serverName;
            return this;
        }

        /**
         * @param serverName The name of the PostgreSQL Flexible Server on which to set the administrator. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder serverName(String serverName) {
            return serverName(Output.of(serverName));
        }

        /**
         * @param tenantId The Azure Tenant ID. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder tenantId(Output<String> tenantId) {
            $.tenantId = tenantId;
            return this;
        }

        /**
         * @param tenantId The Azure Tenant ID. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder tenantId(String tenantId) {
            return tenantId(Output.of(tenantId));
        }

        public FlexibleServerActiveDirectoryAdministratorArgs build() {
            if ($.objectId == null) {
                throw new MissingRequiredPropertyException("FlexibleServerActiveDirectoryAdministratorArgs", "objectId");
            }
            if ($.principalName == null) {
                throw new MissingRequiredPropertyException("FlexibleServerActiveDirectoryAdministratorArgs", "principalName");
            }
            if ($.principalType == null) {
                throw new MissingRequiredPropertyException("FlexibleServerActiveDirectoryAdministratorArgs", "principalType");
            }
            if ($.resourceGroupName == null) {
                throw new MissingRequiredPropertyException("FlexibleServerActiveDirectoryAdministratorArgs", "resourceGroupName");
            }
            if ($.serverName == null) {
                throw new MissingRequiredPropertyException("FlexibleServerActiveDirectoryAdministratorArgs", "serverName");
            }
            if ($.tenantId == null) {
                throw new MissingRequiredPropertyException("FlexibleServerActiveDirectoryAdministratorArgs", "tenantId");
            }
            return $;
        }
    }

}
