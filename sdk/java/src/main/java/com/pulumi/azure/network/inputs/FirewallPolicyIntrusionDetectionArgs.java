// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.network.inputs;

import com.pulumi.azure.network.inputs.FirewallPolicyIntrusionDetectionSignatureOverrideArgs;
import com.pulumi.azure.network.inputs.FirewallPolicyIntrusionDetectionTrafficBypassArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class FirewallPolicyIntrusionDetectionArgs extends com.pulumi.resources.ResourceArgs {

    public static final FirewallPolicyIntrusionDetectionArgs Empty = new FirewallPolicyIntrusionDetectionArgs();

    /**
     * In which mode you want to run intrusion detection: `Off`, `Alert` or `Deny`.
     * 
     */
    @Import(name="mode")
    private @Nullable Output<String> mode;

    /**
     * @return In which mode you want to run intrusion detection: `Off`, `Alert` or `Deny`.
     * 
     */
    public Optional<Output<String>> mode() {
        return Optional.ofNullable(this.mode);
    }

    /**
     * One or more `signature_overrides` blocks as defined below.
     * 
     */
    @Import(name="signatureOverrides")
    private @Nullable Output<List<FirewallPolicyIntrusionDetectionSignatureOverrideArgs>> signatureOverrides;

    /**
     * @return One or more `signature_overrides` blocks as defined below.
     * 
     */
    public Optional<Output<List<FirewallPolicyIntrusionDetectionSignatureOverrideArgs>>> signatureOverrides() {
        return Optional.ofNullable(this.signatureOverrides);
    }

    /**
     * One or more `traffic_bypass` blocks as defined below.
     * 
     */
    @Import(name="trafficBypasses")
    private @Nullable Output<List<FirewallPolicyIntrusionDetectionTrafficBypassArgs>> trafficBypasses;

    /**
     * @return One or more `traffic_bypass` blocks as defined below.
     * 
     */
    public Optional<Output<List<FirewallPolicyIntrusionDetectionTrafficBypassArgs>>> trafficBypasses() {
        return Optional.ofNullable(this.trafficBypasses);
    }

    private FirewallPolicyIntrusionDetectionArgs() {}

    private FirewallPolicyIntrusionDetectionArgs(FirewallPolicyIntrusionDetectionArgs $) {
        this.mode = $.mode;
        this.signatureOverrides = $.signatureOverrides;
        this.trafficBypasses = $.trafficBypasses;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FirewallPolicyIntrusionDetectionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FirewallPolicyIntrusionDetectionArgs $;

        public Builder() {
            $ = new FirewallPolicyIntrusionDetectionArgs();
        }

        public Builder(FirewallPolicyIntrusionDetectionArgs defaults) {
            $ = new FirewallPolicyIntrusionDetectionArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param mode In which mode you want to run intrusion detection: `Off`, `Alert` or `Deny`.
         * 
         * @return builder
         * 
         */
        public Builder mode(@Nullable Output<String> mode) {
            $.mode = mode;
            return this;
        }

        /**
         * @param mode In which mode you want to run intrusion detection: `Off`, `Alert` or `Deny`.
         * 
         * @return builder
         * 
         */
        public Builder mode(String mode) {
            return mode(Output.of(mode));
        }

        /**
         * @param signatureOverrides One or more `signature_overrides` blocks as defined below.
         * 
         * @return builder
         * 
         */
        public Builder signatureOverrides(@Nullable Output<List<FirewallPolicyIntrusionDetectionSignatureOverrideArgs>> signatureOverrides) {
            $.signatureOverrides = signatureOverrides;
            return this;
        }

        /**
         * @param signatureOverrides One or more `signature_overrides` blocks as defined below.
         * 
         * @return builder
         * 
         */
        public Builder signatureOverrides(List<FirewallPolicyIntrusionDetectionSignatureOverrideArgs> signatureOverrides) {
            return signatureOverrides(Output.of(signatureOverrides));
        }

        /**
         * @param signatureOverrides One or more `signature_overrides` blocks as defined below.
         * 
         * @return builder
         * 
         */
        public Builder signatureOverrides(FirewallPolicyIntrusionDetectionSignatureOverrideArgs... signatureOverrides) {
            return signatureOverrides(List.of(signatureOverrides));
        }

        /**
         * @param trafficBypasses One or more `traffic_bypass` blocks as defined below.
         * 
         * @return builder
         * 
         */
        public Builder trafficBypasses(@Nullable Output<List<FirewallPolicyIntrusionDetectionTrafficBypassArgs>> trafficBypasses) {
            $.trafficBypasses = trafficBypasses;
            return this;
        }

        /**
         * @param trafficBypasses One or more `traffic_bypass` blocks as defined below.
         * 
         * @return builder
         * 
         */
        public Builder trafficBypasses(List<FirewallPolicyIntrusionDetectionTrafficBypassArgs> trafficBypasses) {
            return trafficBypasses(Output.of(trafficBypasses));
        }

        /**
         * @param trafficBypasses One or more `traffic_bypass` blocks as defined below.
         * 
         * @return builder
         * 
         */
        public Builder trafficBypasses(FirewallPolicyIntrusionDetectionTrafficBypassArgs... trafficBypasses) {
            return trafficBypasses(List.of(trafficBypasses));
        }

        public FirewallPolicyIntrusionDetectionArgs build() {
            return $;
        }
    }

}
