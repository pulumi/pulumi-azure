// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.core;

import com.pulumi.azure.Utilities;
import com.pulumi.azure.core.SubscriptionCostManagementExportArgs;
import com.pulumi.azure.core.inputs.SubscriptionCostManagementExportState;
import com.pulumi.azure.core.outputs.SubscriptionCostManagementExportExportDataOptions;
import com.pulumi.azure.core.outputs.SubscriptionCostManagementExportExportDataStorageLocation;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Manages a Cost Management Export for a Subscription.
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.azure.core.CoreFunctions;
 * import com.pulumi.azure.core.inputs.GetSubscriptionArgs;
 * import com.pulumi.azure.core.ResourceGroup;
 * import com.pulumi.azure.core.ResourceGroupArgs;
 * import com.pulumi.azure.storage.Account;
 * import com.pulumi.azure.storage.AccountArgs;
 * import com.pulumi.azure.storage.Container;
 * import com.pulumi.azure.storage.ContainerArgs;
 * import com.pulumi.azure.core.SubscriptionCostManagementExport;
 * import com.pulumi.azure.core.SubscriptionCostManagementExportArgs;
 * import com.pulumi.azure.core.inputs.SubscriptionCostManagementExportExportDataStorageLocationArgs;
 * import com.pulumi.azure.core.inputs.SubscriptionCostManagementExportExportDataOptionsArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         final var example = CoreFunctions.getSubscription();
 * 
 *         var exampleResourceGroup = new ResourceGroup("exampleResourceGroup", ResourceGroupArgs.builder()        
 *             .name("example-resources")
 *             .location("West Europe")
 *             .build());
 * 
 *         var exampleAccount = new Account("exampleAccount", AccountArgs.builder()        
 *             .name("example")
 *             .resourceGroupName(exampleResourceGroup.name())
 *             .location(exampleResourceGroup.location())
 *             .accountTier("Standard")
 *             .accountReplicationType("LRS")
 *             .build());
 * 
 *         var exampleContainer = new Container("exampleContainer", ContainerArgs.builder()        
 *             .name("examplecontainer")
 *             .storageAccountName(exampleAccount.name())
 *             .build());
 * 
 *         var exampleSubscriptionCostManagementExport = new SubscriptionCostManagementExport("exampleSubscriptionCostManagementExport", SubscriptionCostManagementExportArgs.builder()        
 *             .name("example")
 *             .subscriptionId(example.applyValue(getSubscriptionResult -> getSubscriptionResult.id()))
 *             .recurrenceType("Monthly")
 *             .recurrencePeriodStartDate("2020-08-18T00:00:00Z")
 *             .recurrencePeriodEndDate("2020-09-18T00:00:00Z")
 *             .exportDataStorageLocation(SubscriptionCostManagementExportExportDataStorageLocationArgs.builder()
 *                 .containerId(exampleContainer.resourceManagerId())
 *                 .rootFolderPath("/root/updated")
 *                 .build())
 *             .exportDataOptions(SubscriptionCostManagementExportExportDataOptionsArgs.builder()
 *                 .type("Usage")
 *                 .timeFrame("WeekToDate")
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * Subscription Cost Management Exports can be imported using the `resource id`, e.g.
 * 
 * ```sh
 * $ pulumi import azure:core/subscriptionCostManagementExport:SubscriptionCostManagementExport example /subscriptions/12345678-1234-9876-4563-123456789012/providers/Microsoft.CostManagement/exports/export1
 * ```
 * 
 */
@ResourceType(type="azure:core/subscriptionCostManagementExport:SubscriptionCostManagementExport")
public class SubscriptionCostManagementExport extends com.pulumi.resources.CustomResource {
    /**
     * Is the cost management export active? Default is `true`.
     * 
     */
    @Export(name="active", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> active;

    /**
     * @return Is the cost management export active? Default is `true`.
     * 
     */
    public Output<Optional<Boolean>> active() {
        return Codegen.optional(this.active);
    }
    /**
     * A `export_data_options` block as defined below.
     * 
     */
    @Export(name="exportDataOptions", refs={SubscriptionCostManagementExportExportDataOptions.class}, tree="[0]")
    private Output<SubscriptionCostManagementExportExportDataOptions> exportDataOptions;

    /**
     * @return A `export_data_options` block as defined below.
     * 
     */
    public Output<SubscriptionCostManagementExportExportDataOptions> exportDataOptions() {
        return this.exportDataOptions;
    }
    /**
     * A `export_data_storage_location` block as defined below.
     * 
     */
    @Export(name="exportDataStorageLocation", refs={SubscriptionCostManagementExportExportDataStorageLocation.class}, tree="[0]")
    private Output<SubscriptionCostManagementExportExportDataStorageLocation> exportDataStorageLocation;

    /**
     * @return A `export_data_storage_location` block as defined below.
     * 
     */
    public Output<SubscriptionCostManagementExportExportDataStorageLocation> exportDataStorageLocation() {
        return this.exportDataStorageLocation;
    }
    /**
     * Specifies the name of the Cost Management Export. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return Specifies the name of the Cost Management Export. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The date the export will stop capturing information.
     * 
     */
    @Export(name="recurrencePeriodEndDate", refs={String.class}, tree="[0]")
    private Output<String> recurrencePeriodEndDate;

    /**
     * @return The date the export will stop capturing information.
     * 
     */
    public Output<String> recurrencePeriodEndDate() {
        return this.recurrencePeriodEndDate;
    }
    /**
     * The date the export will start capturing information.
     * 
     */
    @Export(name="recurrencePeriodStartDate", refs={String.class}, tree="[0]")
    private Output<String> recurrencePeriodStartDate;

    /**
     * @return The date the export will start capturing information.
     * 
     */
    public Output<String> recurrencePeriodStartDate() {
        return this.recurrencePeriodStartDate;
    }
    /**
     * How often the requested information will be exported. Valid values include `Annually`, `Daily`, `Monthly`, `Weekly`.
     * 
     */
    @Export(name="recurrenceType", refs={String.class}, tree="[0]")
    private Output<String> recurrenceType;

    /**
     * @return How often the requested information will be exported. Valid values include `Annually`, `Daily`, `Monthly`, `Weekly`.
     * 
     */
    public Output<String> recurrenceType() {
        return this.recurrenceType;
    }
    /**
     * The id of the subscription on which to create an export. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="subscriptionId", refs={String.class}, tree="[0]")
    private Output<String> subscriptionId;

    /**
     * @return The id of the subscription on which to create an export. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> subscriptionId() {
        return this.subscriptionId;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public SubscriptionCostManagementExport(String name) {
        this(name, SubscriptionCostManagementExportArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public SubscriptionCostManagementExport(String name, SubscriptionCostManagementExportArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public SubscriptionCostManagementExport(String name, SubscriptionCostManagementExportArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:core/subscriptionCostManagementExport:SubscriptionCostManagementExport", name, args == null ? SubscriptionCostManagementExportArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private SubscriptionCostManagementExport(String name, Output<String> id, @Nullable SubscriptionCostManagementExportState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:core/subscriptionCostManagementExport:SubscriptionCostManagementExport", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static SubscriptionCostManagementExport get(String name, Output<String> id, @Nullable SubscriptionCostManagementExportState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new SubscriptionCostManagementExport(name, id, state, options);
    }
}
