// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.apimanagement.inputs;

import com.pulumi.azure.apimanagement.inputs.ApiOperationRequestArgs;
import com.pulumi.azure.apimanagement.inputs.ApiOperationResponseArgs;
import com.pulumi.azure.apimanagement.inputs.ApiOperationTemplateParameterArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ApiOperationState extends com.pulumi.resources.ResourceArgs {

    public static final ApiOperationState Empty = new ApiOperationState();

    /**
     * The Name of the API Management Service where the API exists. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="apiManagementName")
    private @Nullable Output<String> apiManagementName;

    /**
     * @return The Name of the API Management Service where the API exists. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> apiManagementName() {
        return Optional.ofNullable(this.apiManagementName);
    }

    /**
     * The name of the API within the API Management Service where this API Operation should be created. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="apiName")
    private @Nullable Output<String> apiName;

    /**
     * @return The name of the API within the API Management Service where this API Operation should be created. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> apiName() {
        return Optional.ofNullable(this.apiName);
    }

    /**
     * A description for this API Operation, which may include HTML formatting tags.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return A description for this API Operation, which may include HTML formatting tags.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * The Display Name for this API Management Operation.
     * 
     */
    @Import(name="displayName")
    private @Nullable Output<String> displayName;

    /**
     * @return The Display Name for this API Management Operation.
     * 
     */
    public Optional<Output<String>> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    /**
     * The HTTP Method used for this API Management Operation, like `GET`, `DELETE`, `PUT` or `POST` - but not limited to these values.
     * 
     */
    @Import(name="method")
    private @Nullable Output<String> method;

    /**
     * @return The HTTP Method used for this API Management Operation, like `GET`, `DELETE`, `PUT` or `POST` - but not limited to these values.
     * 
     */
    public Optional<Output<String>> method() {
        return Optional.ofNullable(this.method);
    }

    /**
     * A unique identifier for this API Operation. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="operationId")
    private @Nullable Output<String> operationId;

    /**
     * @return A unique identifier for this API Operation. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> operationId() {
        return Optional.ofNullable(this.operationId);
    }

    /**
     * A `request` block as defined below.
     * 
     */
    @Import(name="request")
    private @Nullable Output<ApiOperationRequestArgs> request;

    /**
     * @return A `request` block as defined below.
     * 
     */
    public Optional<Output<ApiOperationRequestArgs>> request() {
        return Optional.ofNullable(this.request);
    }

    /**
     * The Name of the Resource Group in which the API Management Service exists. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="resourceGroupName")
    private @Nullable Output<String> resourceGroupName;

    /**
     * @return The Name of the Resource Group in which the API Management Service exists. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> resourceGroupName() {
        return Optional.ofNullable(this.resourceGroupName);
    }

    /**
     * One or more `response` blocks as defined below.
     * 
     */
    @Import(name="responses")
    private @Nullable Output<List<ApiOperationResponseArgs>> responses;

    /**
     * @return One or more `response` blocks as defined below.
     * 
     */
    public Optional<Output<List<ApiOperationResponseArgs>>> responses() {
        return Optional.ofNullable(this.responses);
    }

    /**
     * One or more `template_parameter` blocks as defined below. Required if `url_template` contains one or more parameters.
     * 
     */
    @Import(name="templateParameters")
    private @Nullable Output<List<ApiOperationTemplateParameterArgs>> templateParameters;

    /**
     * @return One or more `template_parameter` blocks as defined below. Required if `url_template` contains one or more parameters.
     * 
     */
    public Optional<Output<List<ApiOperationTemplateParameterArgs>>> templateParameters() {
        return Optional.ofNullable(this.templateParameters);
    }

    /**
     * The relative URL Template identifying the target resource for this operation, which may include parameters.
     * 
     */
    @Import(name="urlTemplate")
    private @Nullable Output<String> urlTemplate;

    /**
     * @return The relative URL Template identifying the target resource for this operation, which may include parameters.
     * 
     */
    public Optional<Output<String>> urlTemplate() {
        return Optional.ofNullable(this.urlTemplate);
    }

    private ApiOperationState() {}

    private ApiOperationState(ApiOperationState $) {
        this.apiManagementName = $.apiManagementName;
        this.apiName = $.apiName;
        this.description = $.description;
        this.displayName = $.displayName;
        this.method = $.method;
        this.operationId = $.operationId;
        this.request = $.request;
        this.resourceGroupName = $.resourceGroupName;
        this.responses = $.responses;
        this.templateParameters = $.templateParameters;
        this.urlTemplate = $.urlTemplate;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ApiOperationState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ApiOperationState $;

        public Builder() {
            $ = new ApiOperationState();
        }

        public Builder(ApiOperationState defaults) {
            $ = new ApiOperationState(Objects.requireNonNull(defaults));
        }

        /**
         * @param apiManagementName The Name of the API Management Service where the API exists. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder apiManagementName(@Nullable Output<String> apiManagementName) {
            $.apiManagementName = apiManagementName;
            return this;
        }

        /**
         * @param apiManagementName The Name of the API Management Service where the API exists. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder apiManagementName(String apiManagementName) {
            return apiManagementName(Output.of(apiManagementName));
        }

        /**
         * @param apiName The name of the API within the API Management Service where this API Operation should be created. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder apiName(@Nullable Output<String> apiName) {
            $.apiName = apiName;
            return this;
        }

        /**
         * @param apiName The name of the API within the API Management Service where this API Operation should be created. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder apiName(String apiName) {
            return apiName(Output.of(apiName));
        }

        /**
         * @param description A description for this API Operation, which may include HTML formatting tags.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description A description for this API Operation, which may include HTML formatting tags.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param displayName The Display Name for this API Management Operation.
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName The Display Name for this API Management Operation.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param method The HTTP Method used for this API Management Operation, like `GET`, `DELETE`, `PUT` or `POST` - but not limited to these values.
         * 
         * @return builder
         * 
         */
        public Builder method(@Nullable Output<String> method) {
            $.method = method;
            return this;
        }

        /**
         * @param method The HTTP Method used for this API Management Operation, like `GET`, `DELETE`, `PUT` or `POST` - but not limited to these values.
         * 
         * @return builder
         * 
         */
        public Builder method(String method) {
            return method(Output.of(method));
        }

        /**
         * @param operationId A unique identifier for this API Operation. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder operationId(@Nullable Output<String> operationId) {
            $.operationId = operationId;
            return this;
        }

        /**
         * @param operationId A unique identifier for this API Operation. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder operationId(String operationId) {
            return operationId(Output.of(operationId));
        }

        /**
         * @param request A `request` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder request(@Nullable Output<ApiOperationRequestArgs> request) {
            $.request = request;
            return this;
        }

        /**
         * @param request A `request` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder request(ApiOperationRequestArgs request) {
            return request(Output.of(request));
        }

        /**
         * @param resourceGroupName The Name of the Resource Group in which the API Management Service exists. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(@Nullable Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName The Name of the Resource Group in which the API Management Service exists. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        /**
         * @param responses One or more `response` blocks as defined below.
         * 
         * @return builder
         * 
         */
        public Builder responses(@Nullable Output<List<ApiOperationResponseArgs>> responses) {
            $.responses = responses;
            return this;
        }

        /**
         * @param responses One or more `response` blocks as defined below.
         * 
         * @return builder
         * 
         */
        public Builder responses(List<ApiOperationResponseArgs> responses) {
            return responses(Output.of(responses));
        }

        /**
         * @param responses One or more `response` blocks as defined below.
         * 
         * @return builder
         * 
         */
        public Builder responses(ApiOperationResponseArgs... responses) {
            return responses(List.of(responses));
        }

        /**
         * @param templateParameters One or more `template_parameter` blocks as defined below. Required if `url_template` contains one or more parameters.
         * 
         * @return builder
         * 
         */
        public Builder templateParameters(@Nullable Output<List<ApiOperationTemplateParameterArgs>> templateParameters) {
            $.templateParameters = templateParameters;
            return this;
        }

        /**
         * @param templateParameters One or more `template_parameter` blocks as defined below. Required if `url_template` contains one or more parameters.
         * 
         * @return builder
         * 
         */
        public Builder templateParameters(List<ApiOperationTemplateParameterArgs> templateParameters) {
            return templateParameters(Output.of(templateParameters));
        }

        /**
         * @param templateParameters One or more `template_parameter` blocks as defined below. Required if `url_template` contains one or more parameters.
         * 
         * @return builder
         * 
         */
        public Builder templateParameters(ApiOperationTemplateParameterArgs... templateParameters) {
            return templateParameters(List.of(templateParameters));
        }

        /**
         * @param urlTemplate The relative URL Template identifying the target resource for this operation, which may include parameters.
         * 
         * @return builder
         * 
         */
        public Builder urlTemplate(@Nullable Output<String> urlTemplate) {
            $.urlTemplate = urlTemplate;
            return this;
        }

        /**
         * @param urlTemplate The relative URL Template identifying the target resource for this operation, which may include parameters.
         * 
         * @return builder
         * 
         */
        public Builder urlTemplate(String urlTemplate) {
            return urlTemplate(Output.of(urlTemplate));
        }

        public ApiOperationState build() {
            return $;
        }
    }

}
