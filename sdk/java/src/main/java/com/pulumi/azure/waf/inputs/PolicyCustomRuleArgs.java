// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.waf.inputs;

import com.pulumi.azure.waf.inputs.PolicyCustomRuleMatchConditionArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class PolicyCustomRuleArgs extends com.pulumi.resources.ResourceArgs {

    public static final PolicyCustomRuleArgs Empty = new PolicyCustomRuleArgs();

    /**
     * Type of action.
     * 
     */
    @Import(name="action", required=true)
    private Output<String> action;

    /**
     * @return Type of action.
     * 
     */
    public Output<String> action() {
        return this.action;
    }

    /**
     * One or more `match_conditions` blocks as defined below.
     * 
     */
    @Import(name="matchConditions", required=true)
    private Output<List<PolicyCustomRuleMatchConditionArgs>> matchConditions;

    /**
     * @return One or more `match_conditions` blocks as defined below.
     * 
     */
    public Output<List<PolicyCustomRuleMatchConditionArgs>> matchConditions() {
        return this.matchConditions;
    }

    /**
     * Gets name of the resource that is unique within a policy. This name can be used to access the resource.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Gets name of the resource that is unique within a policy. This name can be used to access the resource.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Describes priority of the rule. Rules with a lower value will be evaluated before rules with a higher value.
     * 
     */
    @Import(name="priority", required=true)
    private Output<Integer> priority;

    /**
     * @return Describes priority of the rule. Rules with a lower value will be evaluated before rules with a higher value.
     * 
     */
    public Output<Integer> priority() {
        return this.priority;
    }

    /**
     * Describes the type of rule.
     * 
     */
    @Import(name="ruleType", required=true)
    private Output<String> ruleType;

    /**
     * @return Describes the type of rule.
     * 
     */
    public Output<String> ruleType() {
        return this.ruleType;
    }

    private PolicyCustomRuleArgs() {}

    private PolicyCustomRuleArgs(PolicyCustomRuleArgs $) {
        this.action = $.action;
        this.matchConditions = $.matchConditions;
        this.name = $.name;
        this.priority = $.priority;
        this.ruleType = $.ruleType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PolicyCustomRuleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PolicyCustomRuleArgs $;

        public Builder() {
            $ = new PolicyCustomRuleArgs();
        }

        public Builder(PolicyCustomRuleArgs defaults) {
            $ = new PolicyCustomRuleArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param action Type of action.
         * 
         * @return builder
         * 
         */
        public Builder action(Output<String> action) {
            $.action = action;
            return this;
        }

        /**
         * @param action Type of action.
         * 
         * @return builder
         * 
         */
        public Builder action(String action) {
            return action(Output.of(action));
        }

        /**
         * @param matchConditions One or more `match_conditions` blocks as defined below.
         * 
         * @return builder
         * 
         */
        public Builder matchConditions(Output<List<PolicyCustomRuleMatchConditionArgs>> matchConditions) {
            $.matchConditions = matchConditions;
            return this;
        }

        /**
         * @param matchConditions One or more `match_conditions` blocks as defined below.
         * 
         * @return builder
         * 
         */
        public Builder matchConditions(List<PolicyCustomRuleMatchConditionArgs> matchConditions) {
            return matchConditions(Output.of(matchConditions));
        }

        /**
         * @param matchConditions One or more `match_conditions` blocks as defined below.
         * 
         * @return builder
         * 
         */
        public Builder matchConditions(PolicyCustomRuleMatchConditionArgs... matchConditions) {
            return matchConditions(List.of(matchConditions));
        }

        /**
         * @param name Gets name of the resource that is unique within a policy. This name can be used to access the resource.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Gets name of the resource that is unique within a policy. This name can be used to access the resource.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param priority Describes priority of the rule. Rules with a lower value will be evaluated before rules with a higher value.
         * 
         * @return builder
         * 
         */
        public Builder priority(Output<Integer> priority) {
            $.priority = priority;
            return this;
        }

        /**
         * @param priority Describes priority of the rule. Rules with a lower value will be evaluated before rules with a higher value.
         * 
         * @return builder
         * 
         */
        public Builder priority(Integer priority) {
            return priority(Output.of(priority));
        }

        /**
         * @param ruleType Describes the type of rule.
         * 
         * @return builder
         * 
         */
        public Builder ruleType(Output<String> ruleType) {
            $.ruleType = ruleType;
            return this;
        }

        /**
         * @param ruleType Describes the type of rule.
         * 
         * @return builder
         * 
         */
        public Builder ruleType(String ruleType) {
            return ruleType(Output.of(ruleType));
        }

        public PolicyCustomRuleArgs build() {
            $.action = Objects.requireNonNull($.action, "expected parameter 'action' to be non-null");
            $.matchConditions = Objects.requireNonNull($.matchConditions, "expected parameter 'matchConditions' to be non-null");
            $.priority = Objects.requireNonNull($.priority, "expected parameter 'priority' to be non-null");
            $.ruleType = Objects.requireNonNull($.ruleType, "expected parameter 'ruleType' to be non-null");
            return $;
        }
    }

}
