// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.network.inputs;

import com.pulumi.azure.network.inputs.ProfileContainerNetworkInterfaceArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ProfileState extends com.pulumi.resources.ResourceArgs {

    public static final ProfileState Empty = new ProfileState();

    /**
     * A `container_network_interface` block as documented below.
     * 
     */
    @Import(name="containerNetworkInterface")
    private @Nullable Output<ProfileContainerNetworkInterfaceArgs> containerNetworkInterface;

    /**
     * @return A `container_network_interface` block as documented below.
     * 
     */
    public Optional<Output<ProfileContainerNetworkInterfaceArgs>> containerNetworkInterface() {
        return Optional.ofNullable(this.containerNetworkInterface);
    }

    /**
     * A list of Container Network Interface IDs.
     * 
     */
    @Import(name="containerNetworkInterfaceIds")
    private @Nullable Output<List<String>> containerNetworkInterfaceIds;

    /**
     * @return A list of Container Network Interface IDs.
     * 
     */
    public Optional<Output<List<String>>> containerNetworkInterfaceIds() {
        return Optional.ofNullable(this.containerNetworkInterfaceIds);
    }

    /**
     * Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="location")
    private @Nullable Output<String> location;

    /**
     * @return Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * Specifies the name of the Network Profile. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Specifies the name of the Network Profile. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The name of the resource group in which to create the resource. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="resourceGroupName")
    private @Nullable Output<String> resourceGroupName;

    /**
     * @return The name of the resource group in which to create the resource. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> resourceGroupName() {
        return Optional.ofNullable(this.resourceGroupName);
    }

    /**
     * A mapping of tags to assign to the resource.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return A mapping of tags to assign to the resource.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private ProfileState() {}

    private ProfileState(ProfileState $) {
        this.containerNetworkInterface = $.containerNetworkInterface;
        this.containerNetworkInterfaceIds = $.containerNetworkInterfaceIds;
        this.location = $.location;
        this.name = $.name;
        this.resourceGroupName = $.resourceGroupName;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ProfileState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ProfileState $;

        public Builder() {
            $ = new ProfileState();
        }

        public Builder(ProfileState defaults) {
            $ = new ProfileState(Objects.requireNonNull(defaults));
        }

        /**
         * @param containerNetworkInterface A `container_network_interface` block as documented below.
         * 
         * @return builder
         * 
         */
        public Builder containerNetworkInterface(@Nullable Output<ProfileContainerNetworkInterfaceArgs> containerNetworkInterface) {
            $.containerNetworkInterface = containerNetworkInterface;
            return this;
        }

        /**
         * @param containerNetworkInterface A `container_network_interface` block as documented below.
         * 
         * @return builder
         * 
         */
        public Builder containerNetworkInterface(ProfileContainerNetworkInterfaceArgs containerNetworkInterface) {
            return containerNetworkInterface(Output.of(containerNetworkInterface));
        }

        /**
         * @param containerNetworkInterfaceIds A list of Container Network Interface IDs.
         * 
         * @return builder
         * 
         */
        public Builder containerNetworkInterfaceIds(@Nullable Output<List<String>> containerNetworkInterfaceIds) {
            $.containerNetworkInterfaceIds = containerNetworkInterfaceIds;
            return this;
        }

        /**
         * @param containerNetworkInterfaceIds A list of Container Network Interface IDs.
         * 
         * @return builder
         * 
         */
        public Builder containerNetworkInterfaceIds(List<String> containerNetworkInterfaceIds) {
            return containerNetworkInterfaceIds(Output.of(containerNetworkInterfaceIds));
        }

        /**
         * @param containerNetworkInterfaceIds A list of Container Network Interface IDs.
         * 
         * @return builder
         * 
         */
        public Builder containerNetworkInterfaceIds(String... containerNetworkInterfaceIds) {
            return containerNetworkInterfaceIds(List.of(containerNetworkInterfaceIds));
        }

        /**
         * @param location Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param name Specifies the name of the Network Profile. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Specifies the name of the Network Profile. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param resourceGroupName The name of the resource group in which to create the resource. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(@Nullable Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName The name of the resource group in which to create the resource. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        /**
         * @param tags A mapping of tags to assign to the resource.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags A mapping of tags to assign to the resource.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public ProfileState build() {
            return $;
        }
    }

}
