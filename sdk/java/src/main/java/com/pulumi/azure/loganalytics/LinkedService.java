// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.loganalytics;

import com.pulumi.azure.Utilities;
import com.pulumi.azure.loganalytics.LinkedServiceArgs;
import com.pulumi.azure.loganalytics.inputs.LinkedServiceState;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Manages a Log Analytics Linked Service.
 * 
 * ## Example Usage
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.azure.core.ResourceGroup;
 * import com.pulumi.azure.core.ResourceGroupArgs;
 * import com.pulumi.azure.automation.Account;
 * import com.pulumi.azure.automation.AccountArgs;
 * import com.pulumi.azure.operationalinsights.AnalyticsWorkspace;
 * import com.pulumi.azure.operationalinsights.AnalyticsWorkspaceArgs;
 * import com.pulumi.azure.loganalytics.LinkedService;
 * import com.pulumi.azure.loganalytics.LinkedServiceArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var exampleResourceGroup = new ResourceGroup(&#34;exampleResourceGroup&#34;, ResourceGroupArgs.builder()        
 *             .location(&#34;West Europe&#34;)
 *             .build());
 * 
 *         var exampleAccount = new Account(&#34;exampleAccount&#34;, AccountArgs.builder()        
 *             .location(exampleResourceGroup.location())
 *             .resourceGroupName(exampleResourceGroup.name())
 *             .skuName(&#34;Basic&#34;)
 *             .tags(Map.of(&#34;environment&#34;, &#34;development&#34;))
 *             .build());
 * 
 *         var exampleAnalyticsWorkspace = new AnalyticsWorkspace(&#34;exampleAnalyticsWorkspace&#34;, AnalyticsWorkspaceArgs.builder()        
 *             .location(exampleResourceGroup.location())
 *             .resourceGroupName(exampleResourceGroup.name())
 *             .sku(&#34;PerGB2018&#34;)
 *             .retentionInDays(30)
 *             .build());
 * 
 *         var exampleLinkedService = new LinkedService(&#34;exampleLinkedService&#34;, LinkedServiceArgs.builder()        
 *             .resourceGroupName(exampleResourceGroup.name())
 *             .workspaceId(exampleAnalyticsWorkspace.id())
 *             .readAccessId(exampleAccount.id())
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * Log Analytics Workspaces can be imported using the `resource id`, e.g.
 * 
 * ```sh
 *  $ pulumi import azure:loganalytics/linkedService:LinkedService example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/mygroup1/providers/Microsoft.OperationalInsights/workspaces/workspace1/linkedServices/Automation
 * ```
 * 
 */
@ResourceType(type="azure:loganalytics/linkedService:LinkedService")
public class LinkedService extends com.pulumi.resources.CustomResource {
    /**
     * The generated name of the Linked Service. The format for this attribute is always `&lt;workspace name&gt;/&lt;linked service type&gt;`(e.g. `workspace1/Automation` or `workspace1/Cluster`)
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The generated name of the Linked Service. The format for this attribute is always `&lt;workspace name&gt;/&lt;linked service type&gt;`(e.g. `workspace1/Automation` or `workspace1/Cluster`)
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The ID of the readable Resource that will be linked to the workspace. This should be used for linking to an Automation Account resource.
     * 
     */
    @Export(name="readAccessId", refs={String.class}, tree="[0]")
    private Output<String> readAccessId;

    /**
     * @return The ID of the readable Resource that will be linked to the workspace. This should be used for linking to an Automation Account resource.
     * 
     */
    public Output<String> readAccessId() {
        return this.readAccessId;
    }
    /**
     * The name of the resource group in which the Log Analytics Linked Service is created. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="resourceGroupName", refs={String.class}, tree="[0]")
    private Output<String> resourceGroupName;

    /**
     * @return The name of the resource group in which the Log Analytics Linked Service is created. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }
    /**
     * The ID of the Log Analytics Workspace that will contain the Log Analytics Linked Service resource.
     * 
     */
    @Export(name="workspaceId", refs={String.class}, tree="[0]")
    private Output<String> workspaceId;

    /**
     * @return The ID of the Log Analytics Workspace that will contain the Log Analytics Linked Service resource.
     * 
     */
    public Output<String> workspaceId() {
        return this.workspaceId;
    }
    /**
     * The ID of the writable Resource that will be linked to the workspace. This should be used for linking to a Log Analytics Cluster resource.
     * 
     */
    @Export(name="writeAccessId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> writeAccessId;

    /**
     * @return The ID of the writable Resource that will be linked to the workspace. This should be used for linking to a Log Analytics Cluster resource.
     * 
     */
    public Output<Optional<String>> writeAccessId() {
        return Codegen.optional(this.writeAccessId);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public LinkedService(String name) {
        this(name, LinkedServiceArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public LinkedService(String name, LinkedServiceArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public LinkedService(String name, LinkedServiceArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:loganalytics/linkedService:LinkedService", name, args == null ? LinkedServiceArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private LinkedService(String name, Output<String> id, @Nullable LinkedServiceState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:loganalytics/linkedService:LinkedService", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static LinkedService get(String name, Output<String> id, @Nullable LinkedServiceState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new LinkedService(name, id, state, options);
    }
}
