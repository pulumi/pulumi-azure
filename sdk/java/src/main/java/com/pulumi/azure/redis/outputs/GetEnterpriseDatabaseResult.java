// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.redis.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetEnterpriseDatabaseResult {
    /**
     * @return The Redis Enterprise Cluster ID that is hosting the Redis Enterprise Database.
     * 
     */
    private String clusterId;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return The Linked Database Group Nickname for the Redis Enterprise Database instance.
     * 
     */
    private String linkedDatabaseGroupNickname;
    /**
     * @return The Linked Database list for the Redis Enterprise Database instance.
     * 
     */
    private List<String> linkedDatabaseIds;
    /**
     * @return The Redis Enterprise Database name.
     * 
     */
    private String name;
    /**
     * @return The Primary Access Key for the Redis Enterprise Database instance.
     * 
     */
    private String primaryAccessKey;
    /**
     * @deprecated
     * This field is no longer used and will be removed in the next major version of the Azure Provider
     * 
     */
    @Deprecated /* This field is no longer used and will be removed in the next major version of the Azure Provider */
    private String resourceGroupName;
    /**
     * @return The Secondary Access Key for the Redis Enterprise Database instance.
     * 
     */
    private String secondaryAccessKey;

    private GetEnterpriseDatabaseResult() {}
    /**
     * @return The Redis Enterprise Cluster ID that is hosting the Redis Enterprise Database.
     * 
     */
    public String clusterId() {
        return this.clusterId;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The Linked Database Group Nickname for the Redis Enterprise Database instance.
     * 
     */
    public String linkedDatabaseGroupNickname() {
        return this.linkedDatabaseGroupNickname;
    }
    /**
     * @return The Linked Database list for the Redis Enterprise Database instance.
     * 
     */
    public List<String> linkedDatabaseIds() {
        return this.linkedDatabaseIds;
    }
    /**
     * @return The Redis Enterprise Database name.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The Primary Access Key for the Redis Enterprise Database instance.
     * 
     */
    public String primaryAccessKey() {
        return this.primaryAccessKey;
    }
    /**
     * @deprecated
     * This field is no longer used and will be removed in the next major version of the Azure Provider
     * 
     */
    @Deprecated /* This field is no longer used and will be removed in the next major version of the Azure Provider */
    public String resourceGroupName() {
        return this.resourceGroupName;
    }
    /**
     * @return The Secondary Access Key for the Redis Enterprise Database instance.
     * 
     */
    public String secondaryAccessKey() {
        return this.secondaryAccessKey;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetEnterpriseDatabaseResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String clusterId;
        private String id;
        private String linkedDatabaseGroupNickname;
        private List<String> linkedDatabaseIds;
        private String name;
        private String primaryAccessKey;
        private String resourceGroupName;
        private String secondaryAccessKey;
        public Builder() {}
        public Builder(GetEnterpriseDatabaseResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.clusterId = defaults.clusterId;
    	      this.id = defaults.id;
    	      this.linkedDatabaseGroupNickname = defaults.linkedDatabaseGroupNickname;
    	      this.linkedDatabaseIds = defaults.linkedDatabaseIds;
    	      this.name = defaults.name;
    	      this.primaryAccessKey = defaults.primaryAccessKey;
    	      this.resourceGroupName = defaults.resourceGroupName;
    	      this.secondaryAccessKey = defaults.secondaryAccessKey;
        }

        @CustomType.Setter
        public Builder clusterId(String clusterId) {
            this.clusterId = Objects.requireNonNull(clusterId);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder linkedDatabaseGroupNickname(String linkedDatabaseGroupNickname) {
            this.linkedDatabaseGroupNickname = Objects.requireNonNull(linkedDatabaseGroupNickname);
            return this;
        }
        @CustomType.Setter
        public Builder linkedDatabaseIds(List<String> linkedDatabaseIds) {
            this.linkedDatabaseIds = Objects.requireNonNull(linkedDatabaseIds);
            return this;
        }
        public Builder linkedDatabaseIds(String... linkedDatabaseIds) {
            return linkedDatabaseIds(List.of(linkedDatabaseIds));
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder primaryAccessKey(String primaryAccessKey) {
            this.primaryAccessKey = Objects.requireNonNull(primaryAccessKey);
            return this;
        }
        @CustomType.Setter
        public Builder resourceGroupName(String resourceGroupName) {
            this.resourceGroupName = Objects.requireNonNull(resourceGroupName);
            return this;
        }
        @CustomType.Setter
        public Builder secondaryAccessKey(String secondaryAccessKey) {
            this.secondaryAccessKey = Objects.requireNonNull(secondaryAccessKey);
            return this;
        }
        public GetEnterpriseDatabaseResult build() {
            final var o = new GetEnterpriseDatabaseResult();
            o.clusterId = clusterId;
            o.id = id;
            o.linkedDatabaseGroupNickname = linkedDatabaseGroupNickname;
            o.linkedDatabaseIds = linkedDatabaseIds;
            o.name = name;
            o.primaryAccessKey = primaryAccessKey;
            o.resourceGroupName = resourceGroupName;
            o.secondaryAccessKey = secondaryAccessKey;
            return o;
        }
    }
}
