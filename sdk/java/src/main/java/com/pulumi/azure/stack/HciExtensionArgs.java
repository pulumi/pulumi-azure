// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.stack;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class HciExtensionArgs extends com.pulumi.resources.ResourceArgs {

    public static final HciExtensionArgs Empty = new HciExtensionArgs();

    /**
     * The ID of the Azure Stack HCI Cluster Arc Setting. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="arcSettingId", required=true)
    private Output<String> arcSettingId;

    /**
     * @return The ID of the Azure Stack HCI Cluster Arc Setting. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> arcSettingId() {
        return this.arcSettingId;
    }

    /**
     * Indicates whether the extension should use a newer minor version if one is available at deployment time. Once deployed, however, the extension will not upgrade minor versions unless redeployed, even with this property set to true. Changing this forces a new resource to be created. Possible values are `true` and `false`. Defaults to `true`.
     * 
     */
    @Import(name="autoUpgradeMinorVersionEnabled")
    private @Nullable Output<Boolean> autoUpgradeMinorVersionEnabled;

    /**
     * @return Indicates whether the extension should use a newer minor version if one is available at deployment time. Once deployed, however, the extension will not upgrade minor versions unless redeployed, even with this property set to true. Changing this forces a new resource to be created. Possible values are `true` and `false`. Defaults to `true`.
     * 
     */
    public Optional<Output<Boolean>> autoUpgradeMinorVersionEnabled() {
        return Optional.ofNullable(this.autoUpgradeMinorVersionEnabled);
    }

    /**
     * Indicates whether the extension should be automatically upgraded by the platform if there is a newer version available. Possible values are `true` and `false`. Defaults to `true`.
     * 
     */
    @Import(name="automaticUpgradeEnabled")
    private @Nullable Output<Boolean> automaticUpgradeEnabled;

    /**
     * @return Indicates whether the extension should be automatically upgraded by the platform if there is a newer version available. Possible values are `true` and `false`. Defaults to `true`.
     * 
     */
    public Optional<Output<Boolean>> automaticUpgradeEnabled() {
        return Optional.ofNullable(this.automaticUpgradeEnabled);
    }

    /**
     * The name which should be used for this Azure Stack HCI Extension. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name which should be used for this Azure Stack HCI Extension. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The json formatted protected settings for the extension.
     * 
     */
    @Import(name="protectedSettings")
    private @Nullable Output<String> protectedSettings;

    /**
     * @return The json formatted protected settings for the extension.
     * 
     */
    public Optional<Output<String>> protectedSettings() {
        return Optional.ofNullable(this.protectedSettings);
    }

    /**
     * The name of the extension handler publisher, such as `Microsoft.Azure.Monitor`. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="publisher", required=true)
    private Output<String> publisher;

    /**
     * @return The name of the extension handler publisher, such as `Microsoft.Azure.Monitor`. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> publisher() {
        return this.publisher;
    }

    /**
     * The json formatted public settings for the extension.
     * 
     */
    @Import(name="settings")
    private @Nullable Output<String> settings;

    /**
     * @return The json formatted public settings for the extension.
     * 
     */
    public Optional<Output<String>> settings() {
        return Optional.ofNullable(this.settings);
    }

    /**
     * Specifies the type of the extension. For example `CustomScriptExtension` or `AzureMonitorLinuxAgent`. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="type", required=true)
    private Output<String> type;

    /**
     * @return Specifies the type of the extension. For example `CustomScriptExtension` or `AzureMonitorLinuxAgent`. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> type() {
        return this.type;
    }

    /**
     * Specifies the version of the script handler.
     * 
     * &gt; **Note:** `type_handler_version` cannot be set when `automatic_upgrade_enabled` is set to `true`.
     * 
     */
    @Import(name="typeHandlerVersion")
    private @Nullable Output<String> typeHandlerVersion;

    /**
     * @return Specifies the version of the script handler.
     * 
     * &gt; **Note:** `type_handler_version` cannot be set when `automatic_upgrade_enabled` is set to `true`.
     * 
     */
    public Optional<Output<String>> typeHandlerVersion() {
        return Optional.ofNullable(this.typeHandlerVersion);
    }

    private HciExtensionArgs() {}

    private HciExtensionArgs(HciExtensionArgs $) {
        this.arcSettingId = $.arcSettingId;
        this.autoUpgradeMinorVersionEnabled = $.autoUpgradeMinorVersionEnabled;
        this.automaticUpgradeEnabled = $.automaticUpgradeEnabled;
        this.name = $.name;
        this.protectedSettings = $.protectedSettings;
        this.publisher = $.publisher;
        this.settings = $.settings;
        this.type = $.type;
        this.typeHandlerVersion = $.typeHandlerVersion;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(HciExtensionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private HciExtensionArgs $;

        public Builder() {
            $ = new HciExtensionArgs();
        }

        public Builder(HciExtensionArgs defaults) {
            $ = new HciExtensionArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param arcSettingId The ID of the Azure Stack HCI Cluster Arc Setting. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder arcSettingId(Output<String> arcSettingId) {
            $.arcSettingId = arcSettingId;
            return this;
        }

        /**
         * @param arcSettingId The ID of the Azure Stack HCI Cluster Arc Setting. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder arcSettingId(String arcSettingId) {
            return arcSettingId(Output.of(arcSettingId));
        }

        /**
         * @param autoUpgradeMinorVersionEnabled Indicates whether the extension should use a newer minor version if one is available at deployment time. Once deployed, however, the extension will not upgrade minor versions unless redeployed, even with this property set to true. Changing this forces a new resource to be created. Possible values are `true` and `false`. Defaults to `true`.
         * 
         * @return builder
         * 
         */
        public Builder autoUpgradeMinorVersionEnabled(@Nullable Output<Boolean> autoUpgradeMinorVersionEnabled) {
            $.autoUpgradeMinorVersionEnabled = autoUpgradeMinorVersionEnabled;
            return this;
        }

        /**
         * @param autoUpgradeMinorVersionEnabled Indicates whether the extension should use a newer minor version if one is available at deployment time. Once deployed, however, the extension will not upgrade minor versions unless redeployed, even with this property set to true. Changing this forces a new resource to be created. Possible values are `true` and `false`. Defaults to `true`.
         * 
         * @return builder
         * 
         */
        public Builder autoUpgradeMinorVersionEnabled(Boolean autoUpgradeMinorVersionEnabled) {
            return autoUpgradeMinorVersionEnabled(Output.of(autoUpgradeMinorVersionEnabled));
        }

        /**
         * @param automaticUpgradeEnabled Indicates whether the extension should be automatically upgraded by the platform if there is a newer version available. Possible values are `true` and `false`. Defaults to `true`.
         * 
         * @return builder
         * 
         */
        public Builder automaticUpgradeEnabled(@Nullable Output<Boolean> automaticUpgradeEnabled) {
            $.automaticUpgradeEnabled = automaticUpgradeEnabled;
            return this;
        }

        /**
         * @param automaticUpgradeEnabled Indicates whether the extension should be automatically upgraded by the platform if there is a newer version available. Possible values are `true` and `false`. Defaults to `true`.
         * 
         * @return builder
         * 
         */
        public Builder automaticUpgradeEnabled(Boolean automaticUpgradeEnabled) {
            return automaticUpgradeEnabled(Output.of(automaticUpgradeEnabled));
        }

        /**
         * @param name The name which should be used for this Azure Stack HCI Extension. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name which should be used for this Azure Stack HCI Extension. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param protectedSettings The json formatted protected settings for the extension.
         * 
         * @return builder
         * 
         */
        public Builder protectedSettings(@Nullable Output<String> protectedSettings) {
            $.protectedSettings = protectedSettings;
            return this;
        }

        /**
         * @param protectedSettings The json formatted protected settings for the extension.
         * 
         * @return builder
         * 
         */
        public Builder protectedSettings(String protectedSettings) {
            return protectedSettings(Output.of(protectedSettings));
        }

        /**
         * @param publisher The name of the extension handler publisher, such as `Microsoft.Azure.Monitor`. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder publisher(Output<String> publisher) {
            $.publisher = publisher;
            return this;
        }

        /**
         * @param publisher The name of the extension handler publisher, such as `Microsoft.Azure.Monitor`. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder publisher(String publisher) {
            return publisher(Output.of(publisher));
        }

        /**
         * @param settings The json formatted public settings for the extension.
         * 
         * @return builder
         * 
         */
        public Builder settings(@Nullable Output<String> settings) {
            $.settings = settings;
            return this;
        }

        /**
         * @param settings The json formatted public settings for the extension.
         * 
         * @return builder
         * 
         */
        public Builder settings(String settings) {
            return settings(Output.of(settings));
        }

        /**
         * @param type Specifies the type of the extension. For example `CustomScriptExtension` or `AzureMonitorLinuxAgent`. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder type(Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type Specifies the type of the extension. For example `CustomScriptExtension` or `AzureMonitorLinuxAgent`. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        /**
         * @param typeHandlerVersion Specifies the version of the script handler.
         * 
         * &gt; **Note:** `type_handler_version` cannot be set when `automatic_upgrade_enabled` is set to `true`.
         * 
         * @return builder
         * 
         */
        public Builder typeHandlerVersion(@Nullable Output<String> typeHandlerVersion) {
            $.typeHandlerVersion = typeHandlerVersion;
            return this;
        }

        /**
         * @param typeHandlerVersion Specifies the version of the script handler.
         * 
         * &gt; **Note:** `type_handler_version` cannot be set when `automatic_upgrade_enabled` is set to `true`.
         * 
         * @return builder
         * 
         */
        public Builder typeHandlerVersion(String typeHandlerVersion) {
            return typeHandlerVersion(Output.of(typeHandlerVersion));
        }

        public HciExtensionArgs build() {
            if ($.arcSettingId == null) {
                throw new MissingRequiredPropertyException("HciExtensionArgs", "arcSettingId");
            }
            if ($.publisher == null) {
                throw new MissingRequiredPropertyException("HciExtensionArgs", "publisher");
            }
            if ($.type == null) {
                throw new MissingRequiredPropertyException("HciExtensionArgs", "type");
            }
            return $;
        }
    }

}
