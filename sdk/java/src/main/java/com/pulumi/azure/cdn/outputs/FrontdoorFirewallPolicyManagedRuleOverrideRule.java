// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.cdn.outputs;

import com.pulumi.azure.cdn.outputs.FrontdoorFirewallPolicyManagedRuleOverrideRuleExclusion;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class FrontdoorFirewallPolicyManagedRuleOverrideRule {
    /**
     * @return The action to be applied when the managed rule matches or when the anomaly score is 5 or greater. Possible values for DRS `1.1` and below are `Allow`, `Log`, `Block`, and `Redirect`. For DRS `2.0` and above the possible values are `Log` or `AnomalyScoring`.
     * 
     * -&gt;**NOTE:** Please see the DRS [product documentation](https://learn.microsoft.com/azure/web-application-firewall/afds/waf-front-door-drs?tabs=drs20#anomaly-scoring-mode) for more information.
     * 
     */
    private String action;
    /**
     * @return Is the managed rule override enabled or disabled. Defaults to `false`
     * 
     */
    private @Nullable Boolean enabled;
    /**
     * @return One or more `exclusion` blocks as defined below.
     * 
     */
    private @Nullable List<FrontdoorFirewallPolicyManagedRuleOverrideRuleExclusion> exclusions;
    /**
     * @return Identifier for the managed rule.
     * 
     */
    private String ruleId;

    private FrontdoorFirewallPolicyManagedRuleOverrideRule() {}
    /**
     * @return The action to be applied when the managed rule matches or when the anomaly score is 5 or greater. Possible values for DRS `1.1` and below are `Allow`, `Log`, `Block`, and `Redirect`. For DRS `2.0` and above the possible values are `Log` or `AnomalyScoring`.
     * 
     * -&gt;**NOTE:** Please see the DRS [product documentation](https://learn.microsoft.com/azure/web-application-firewall/afds/waf-front-door-drs?tabs=drs20#anomaly-scoring-mode) for more information.
     * 
     */
    public String action() {
        return this.action;
    }
    /**
     * @return Is the managed rule override enabled or disabled. Defaults to `false`
     * 
     */
    public Optional<Boolean> enabled() {
        return Optional.ofNullable(this.enabled);
    }
    /**
     * @return One or more `exclusion` blocks as defined below.
     * 
     */
    public List<FrontdoorFirewallPolicyManagedRuleOverrideRuleExclusion> exclusions() {
        return this.exclusions == null ? List.of() : this.exclusions;
    }
    /**
     * @return Identifier for the managed rule.
     * 
     */
    public String ruleId() {
        return this.ruleId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(FrontdoorFirewallPolicyManagedRuleOverrideRule defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String action;
        private @Nullable Boolean enabled;
        private @Nullable List<FrontdoorFirewallPolicyManagedRuleOverrideRuleExclusion> exclusions;
        private String ruleId;
        public Builder() {}
        public Builder(FrontdoorFirewallPolicyManagedRuleOverrideRule defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.action = defaults.action;
    	      this.enabled = defaults.enabled;
    	      this.exclusions = defaults.exclusions;
    	      this.ruleId = defaults.ruleId;
        }

        @CustomType.Setter
        public Builder action(String action) {
            if (action == null) {
              throw new MissingRequiredPropertyException("FrontdoorFirewallPolicyManagedRuleOverrideRule", "action");
            }
            this.action = action;
            return this;
        }
        @CustomType.Setter
        public Builder enabled(@Nullable Boolean enabled) {

            this.enabled = enabled;
            return this;
        }
        @CustomType.Setter
        public Builder exclusions(@Nullable List<FrontdoorFirewallPolicyManagedRuleOverrideRuleExclusion> exclusions) {

            this.exclusions = exclusions;
            return this;
        }
        public Builder exclusions(FrontdoorFirewallPolicyManagedRuleOverrideRuleExclusion... exclusions) {
            return exclusions(List.of(exclusions));
        }
        @CustomType.Setter
        public Builder ruleId(String ruleId) {
            if (ruleId == null) {
              throw new MissingRequiredPropertyException("FrontdoorFirewallPolicyManagedRuleOverrideRule", "ruleId");
            }
            this.ruleId = ruleId;
            return this;
        }
        public FrontdoorFirewallPolicyManagedRuleOverrideRule build() {
            final var _resultValue = new FrontdoorFirewallPolicyManagedRuleOverrideRule();
            _resultValue.action = action;
            _resultValue.enabled = enabled;
            _resultValue.exclusions = exclusions;
            _resultValue.ruleId = ruleId;
            return _resultValue;
        }
    }
}
