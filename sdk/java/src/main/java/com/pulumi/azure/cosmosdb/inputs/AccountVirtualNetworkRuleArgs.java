// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.cosmosdb.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AccountVirtualNetworkRuleArgs extends com.pulumi.resources.ResourceArgs {

    public static final AccountVirtualNetworkRuleArgs Empty = new AccountVirtualNetworkRuleArgs();

    /**
     * The ID of the virtual network subnet.
     * 
     */
    @Import(name="id", required=true)
    private Output<String> id;

    /**
     * @return The ID of the virtual network subnet.
     * 
     */
    public Output<String> id() {
        return this.id;
    }

    /**
     * If set to true, the specified subnet will be added as a virtual network rule even if its CosmosDB service endpoint is not active. Defaults to `false`.
     * 
     */
    @Import(name="ignoreMissingVnetServiceEndpoint")
    private @Nullable Output<Boolean> ignoreMissingVnetServiceEndpoint;

    /**
     * @return If set to true, the specified subnet will be added as a virtual network rule even if its CosmosDB service endpoint is not active. Defaults to `false`.
     * 
     */
    public Optional<Output<Boolean>> ignoreMissingVnetServiceEndpoint() {
        return Optional.ofNullable(this.ignoreMissingVnetServiceEndpoint);
    }

    private AccountVirtualNetworkRuleArgs() {}

    private AccountVirtualNetworkRuleArgs(AccountVirtualNetworkRuleArgs $) {
        this.id = $.id;
        this.ignoreMissingVnetServiceEndpoint = $.ignoreMissingVnetServiceEndpoint;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AccountVirtualNetworkRuleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AccountVirtualNetworkRuleArgs $;

        public Builder() {
            $ = new AccountVirtualNetworkRuleArgs();
        }

        public Builder(AccountVirtualNetworkRuleArgs defaults) {
            $ = new AccountVirtualNetworkRuleArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param id The ID of the virtual network subnet.
         * 
         * @return builder
         * 
         */
        public Builder id(Output<String> id) {
            $.id = id;
            return this;
        }

        /**
         * @param id The ID of the virtual network subnet.
         * 
         * @return builder
         * 
         */
        public Builder id(String id) {
            return id(Output.of(id));
        }

        /**
         * @param ignoreMissingVnetServiceEndpoint If set to true, the specified subnet will be added as a virtual network rule even if its CosmosDB service endpoint is not active. Defaults to `false`.
         * 
         * @return builder
         * 
         */
        public Builder ignoreMissingVnetServiceEndpoint(@Nullable Output<Boolean> ignoreMissingVnetServiceEndpoint) {
            $.ignoreMissingVnetServiceEndpoint = ignoreMissingVnetServiceEndpoint;
            return this;
        }

        /**
         * @param ignoreMissingVnetServiceEndpoint If set to true, the specified subnet will be added as a virtual network rule even if its CosmosDB service endpoint is not active. Defaults to `false`.
         * 
         * @return builder
         * 
         */
        public Builder ignoreMissingVnetServiceEndpoint(Boolean ignoreMissingVnetServiceEndpoint) {
            return ignoreMissingVnetServiceEndpoint(Output.of(ignoreMissingVnetServiceEndpoint));
        }

        public AccountVirtualNetworkRuleArgs build() {
            if ($.id == null) {
                throw new MissingRequiredPropertyException("AccountVirtualNetworkRuleArgs", "id");
            }
            return $;
        }
    }

}
