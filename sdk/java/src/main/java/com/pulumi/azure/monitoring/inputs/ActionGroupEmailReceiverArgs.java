// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.monitoring.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ActionGroupEmailReceiverArgs extends com.pulumi.resources.ResourceArgs {

    public static final ActionGroupEmailReceiverArgs Empty = new ActionGroupEmailReceiverArgs();

    /**
     * The email address of this receiver.
     * 
     */
    @Import(name="emailAddress", required=true)
    private Output<String> emailAddress;

    /**
     * @return The email address of this receiver.
     * 
     */
    public Output<String> emailAddress() {
        return this.emailAddress;
    }

    /**
     * The name of the email receiver. Names must be unique (case-insensitive) across all receivers within an action group.
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    /**
     * @return The name of the email receiver. Names must be unique (case-insensitive) across all receivers within an action group.
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    /**
     * Enables or disables the common alert schema.
     * 
     */
    @Import(name="useCommonAlertSchema")
    private @Nullable Output<Boolean> useCommonAlertSchema;

    /**
     * @return Enables or disables the common alert schema.
     * 
     */
    public Optional<Output<Boolean>> useCommonAlertSchema() {
        return Optional.ofNullable(this.useCommonAlertSchema);
    }

    private ActionGroupEmailReceiverArgs() {}

    private ActionGroupEmailReceiverArgs(ActionGroupEmailReceiverArgs $) {
        this.emailAddress = $.emailAddress;
        this.name = $.name;
        this.useCommonAlertSchema = $.useCommonAlertSchema;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ActionGroupEmailReceiverArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ActionGroupEmailReceiverArgs $;

        public Builder() {
            $ = new ActionGroupEmailReceiverArgs();
        }

        public Builder(ActionGroupEmailReceiverArgs defaults) {
            $ = new ActionGroupEmailReceiverArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param emailAddress The email address of this receiver.
         * 
         * @return builder
         * 
         */
        public Builder emailAddress(Output<String> emailAddress) {
            $.emailAddress = emailAddress;
            return this;
        }

        /**
         * @param emailAddress The email address of this receiver.
         * 
         * @return builder
         * 
         */
        public Builder emailAddress(String emailAddress) {
            return emailAddress(Output.of(emailAddress));
        }

        /**
         * @param name The name of the email receiver. Names must be unique (case-insensitive) across all receivers within an action group.
         * 
         * @return builder
         * 
         */
        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the email receiver. Names must be unique (case-insensitive) across all receivers within an action group.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param useCommonAlertSchema Enables or disables the common alert schema.
         * 
         * @return builder
         * 
         */
        public Builder useCommonAlertSchema(@Nullable Output<Boolean> useCommonAlertSchema) {
            $.useCommonAlertSchema = useCommonAlertSchema;
            return this;
        }

        /**
         * @param useCommonAlertSchema Enables or disables the common alert schema.
         * 
         * @return builder
         * 
         */
        public Builder useCommonAlertSchema(Boolean useCommonAlertSchema) {
            return useCommonAlertSchema(Output.of(useCommonAlertSchema));
        }

        public ActionGroupEmailReceiverArgs build() {
            if ($.emailAddress == null) {
                throw new MissingRequiredPropertyException("ActionGroupEmailReceiverArgs", "emailAddress");
            }
            if ($.name == null) {
                throw new MissingRequiredPropertyException("ActionGroupEmailReceiverArgs", "name");
            }
            return $;
        }
    }

}
