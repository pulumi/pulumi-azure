// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.media.outputs;

import com.pulumi.azure.media.outputs.StreamingPolicyCommonEncryptionCencClearKeyEncryption;
import com.pulumi.azure.media.outputs.StreamingPolicyCommonEncryptionCencClearTrack;
import com.pulumi.azure.media.outputs.StreamingPolicyCommonEncryptionCencContentKeyToTrackMapping;
import com.pulumi.azure.media.outputs.StreamingPolicyCommonEncryptionCencDefaultContentKey;
import com.pulumi.azure.media.outputs.StreamingPolicyCommonEncryptionCencDrmPlayready;
import com.pulumi.azure.media.outputs.StreamingPolicyCommonEncryptionCencEnabledProtocols;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class StreamingPolicyCommonEncryptionCenc {
    /**
     * @return A `clear_key_encryption` block as defined below. Changing this forces a new Streaming Policy to be created.
     * 
     */
    private @Nullable StreamingPolicyCommonEncryptionCencClearKeyEncryption clearKeyEncryption;
    /**
     * @return One or more `clear_track` blocks as defined below. Changing this forces a new Streaming Policy to be created.
     * 
     */
    private @Nullable List<StreamingPolicyCommonEncryptionCencClearTrack> clearTracks;
    /**
     * @return One or more `content_key_to_track_mapping` blocks as defined below. Changing this forces a new Streaming Policy to be created.
     * 
     */
    private @Nullable List<StreamingPolicyCommonEncryptionCencContentKeyToTrackMapping> contentKeyToTrackMappings;
    /**
     * @return A `default_content_key` block as defined below. Changing this forces a new Streaming Policy to be created.
     * 
     */
    private @Nullable StreamingPolicyCommonEncryptionCencDefaultContentKey defaultContentKey;
    /**
     * @return A `drm_playready` block as defined below. Changing this forces a new Streaming Policy to be created.
     * 
     */
    private @Nullable StreamingPolicyCommonEncryptionCencDrmPlayready drmPlayready;
    /**
     * @return The URL template for the custom service that delivers licenses to the end user. This is not required when using Azure Media Services for issuing licenses. Changing this forces a new Streaming Policy to be created.
     * 
     */
    private @Nullable String drmWidevineCustomLicenseAcquisitionUrlTemplate;
    /**
     * @return A `enabled_protocols` block as defined below. Changing this forces a new Streaming Policy to be created.
     * 
     */
    private @Nullable StreamingPolicyCommonEncryptionCencEnabledProtocols enabledProtocols;

    private StreamingPolicyCommonEncryptionCenc() {}
    /**
     * @return A `clear_key_encryption` block as defined below. Changing this forces a new Streaming Policy to be created.
     * 
     */
    public Optional<StreamingPolicyCommonEncryptionCencClearKeyEncryption> clearKeyEncryption() {
        return Optional.ofNullable(this.clearKeyEncryption);
    }
    /**
     * @return One or more `clear_track` blocks as defined below. Changing this forces a new Streaming Policy to be created.
     * 
     */
    public List<StreamingPolicyCommonEncryptionCencClearTrack> clearTracks() {
        return this.clearTracks == null ? List.of() : this.clearTracks;
    }
    /**
     * @return One or more `content_key_to_track_mapping` blocks as defined below. Changing this forces a new Streaming Policy to be created.
     * 
     */
    public List<StreamingPolicyCommonEncryptionCencContentKeyToTrackMapping> contentKeyToTrackMappings() {
        return this.contentKeyToTrackMappings == null ? List.of() : this.contentKeyToTrackMappings;
    }
    /**
     * @return A `default_content_key` block as defined below. Changing this forces a new Streaming Policy to be created.
     * 
     */
    public Optional<StreamingPolicyCommonEncryptionCencDefaultContentKey> defaultContentKey() {
        return Optional.ofNullable(this.defaultContentKey);
    }
    /**
     * @return A `drm_playready` block as defined below. Changing this forces a new Streaming Policy to be created.
     * 
     */
    public Optional<StreamingPolicyCommonEncryptionCencDrmPlayready> drmPlayready() {
        return Optional.ofNullable(this.drmPlayready);
    }
    /**
     * @return The URL template for the custom service that delivers licenses to the end user. This is not required when using Azure Media Services for issuing licenses. Changing this forces a new Streaming Policy to be created.
     * 
     */
    public Optional<String> drmWidevineCustomLicenseAcquisitionUrlTemplate() {
        return Optional.ofNullable(this.drmWidevineCustomLicenseAcquisitionUrlTemplate);
    }
    /**
     * @return A `enabled_protocols` block as defined below. Changing this forces a new Streaming Policy to be created.
     * 
     */
    public Optional<StreamingPolicyCommonEncryptionCencEnabledProtocols> enabledProtocols() {
        return Optional.ofNullable(this.enabledProtocols);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(StreamingPolicyCommonEncryptionCenc defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable StreamingPolicyCommonEncryptionCencClearKeyEncryption clearKeyEncryption;
        private @Nullable List<StreamingPolicyCommonEncryptionCencClearTrack> clearTracks;
        private @Nullable List<StreamingPolicyCommonEncryptionCencContentKeyToTrackMapping> contentKeyToTrackMappings;
        private @Nullable StreamingPolicyCommonEncryptionCencDefaultContentKey defaultContentKey;
        private @Nullable StreamingPolicyCommonEncryptionCencDrmPlayready drmPlayready;
        private @Nullable String drmWidevineCustomLicenseAcquisitionUrlTemplate;
        private @Nullable StreamingPolicyCommonEncryptionCencEnabledProtocols enabledProtocols;
        public Builder() {}
        public Builder(StreamingPolicyCommonEncryptionCenc defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.clearKeyEncryption = defaults.clearKeyEncryption;
    	      this.clearTracks = defaults.clearTracks;
    	      this.contentKeyToTrackMappings = defaults.contentKeyToTrackMappings;
    	      this.defaultContentKey = defaults.defaultContentKey;
    	      this.drmPlayready = defaults.drmPlayready;
    	      this.drmWidevineCustomLicenseAcquisitionUrlTemplate = defaults.drmWidevineCustomLicenseAcquisitionUrlTemplate;
    	      this.enabledProtocols = defaults.enabledProtocols;
        }

        @CustomType.Setter
        public Builder clearKeyEncryption(@Nullable StreamingPolicyCommonEncryptionCencClearKeyEncryption clearKeyEncryption) {

            this.clearKeyEncryption = clearKeyEncryption;
            return this;
        }
        @CustomType.Setter
        public Builder clearTracks(@Nullable List<StreamingPolicyCommonEncryptionCencClearTrack> clearTracks) {

            this.clearTracks = clearTracks;
            return this;
        }
        public Builder clearTracks(StreamingPolicyCommonEncryptionCencClearTrack... clearTracks) {
            return clearTracks(List.of(clearTracks));
        }
        @CustomType.Setter
        public Builder contentKeyToTrackMappings(@Nullable List<StreamingPolicyCommonEncryptionCencContentKeyToTrackMapping> contentKeyToTrackMappings) {

            this.contentKeyToTrackMappings = contentKeyToTrackMappings;
            return this;
        }
        public Builder contentKeyToTrackMappings(StreamingPolicyCommonEncryptionCencContentKeyToTrackMapping... contentKeyToTrackMappings) {
            return contentKeyToTrackMappings(List.of(contentKeyToTrackMappings));
        }
        @CustomType.Setter
        public Builder defaultContentKey(@Nullable StreamingPolicyCommonEncryptionCencDefaultContentKey defaultContentKey) {

            this.defaultContentKey = defaultContentKey;
            return this;
        }
        @CustomType.Setter
        public Builder drmPlayready(@Nullable StreamingPolicyCommonEncryptionCencDrmPlayready drmPlayready) {

            this.drmPlayready = drmPlayready;
            return this;
        }
        @CustomType.Setter
        public Builder drmWidevineCustomLicenseAcquisitionUrlTemplate(@Nullable String drmWidevineCustomLicenseAcquisitionUrlTemplate) {

            this.drmWidevineCustomLicenseAcquisitionUrlTemplate = drmWidevineCustomLicenseAcquisitionUrlTemplate;
            return this;
        }
        @CustomType.Setter
        public Builder enabledProtocols(@Nullable StreamingPolicyCommonEncryptionCencEnabledProtocols enabledProtocols) {

            this.enabledProtocols = enabledProtocols;
            return this;
        }
        public StreamingPolicyCommonEncryptionCenc build() {
            final var _resultValue = new StreamingPolicyCommonEncryptionCenc();
            _resultValue.clearKeyEncryption = clearKeyEncryption;
            _resultValue.clearTracks = clearTracks;
            _resultValue.contentKeyToTrackMappings = contentKeyToTrackMappings;
            _resultValue.defaultContentKey = defaultContentKey;
            _resultValue.drmPlayready = drmPlayready;
            _resultValue.drmWidevineCustomLicenseAcquisitionUrlTemplate = drmWidevineCustomLicenseAcquisitionUrlTemplate;
            _resultValue.enabledProtocols = enabledProtocols;
            return _resultValue;
        }
    }
}
