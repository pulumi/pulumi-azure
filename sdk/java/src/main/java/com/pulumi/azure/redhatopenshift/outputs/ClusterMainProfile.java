// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.redhatopenshift.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ClusterMainProfile {
    /**
     * @return The resource ID of an associated disk encryption set. Changing this forces a new resource to be created.
     * 
     */
    private @Nullable String diskEncryptionSetId;
    /**
     * @return Whether main virtual machines are encrypted at host. Defaults to `false`. Changing this forces a new resource to be created.
     * 
     * **NOTE:** `encryption_at_host_enabled` is only available for certain VM sizes and the `EncryptionAtHost` feature must be enabled for your subscription. Please see the [Azure documentation](https://learn.microsoft.com/azure/virtual-machines/disks-enable-host-based-encryption-portal?tabs=azure-powershell) for more information.
     * 
     */
    private @Nullable Boolean encryptionAtHostEnabled;
    /**
     * @return The ID of the subnet where main nodes will be hosted. Changing this forces a new resource to be created.
     * 
     */
    private String subnetId;
    /**
     * @return The size of the Virtual Machines for the main nodes. Changing this forces a new resource to be created.
     * 
     */
    private String vmSize;

    private ClusterMainProfile() {}
    /**
     * @return The resource ID of an associated disk encryption set. Changing this forces a new resource to be created.
     * 
     */
    public Optional<String> diskEncryptionSetId() {
        return Optional.ofNullable(this.diskEncryptionSetId);
    }
    /**
     * @return Whether main virtual machines are encrypted at host. Defaults to `false`. Changing this forces a new resource to be created.
     * 
     * **NOTE:** `encryption_at_host_enabled` is only available for certain VM sizes and the `EncryptionAtHost` feature must be enabled for your subscription. Please see the [Azure documentation](https://learn.microsoft.com/azure/virtual-machines/disks-enable-host-based-encryption-portal?tabs=azure-powershell) for more information.
     * 
     */
    public Optional<Boolean> encryptionAtHostEnabled() {
        return Optional.ofNullable(this.encryptionAtHostEnabled);
    }
    /**
     * @return The ID of the subnet where main nodes will be hosted. Changing this forces a new resource to be created.
     * 
     */
    public String subnetId() {
        return this.subnetId;
    }
    /**
     * @return The size of the Virtual Machines for the main nodes. Changing this forces a new resource to be created.
     * 
     */
    public String vmSize() {
        return this.vmSize;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ClusterMainProfile defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String diskEncryptionSetId;
        private @Nullable Boolean encryptionAtHostEnabled;
        private String subnetId;
        private String vmSize;
        public Builder() {}
        public Builder(ClusterMainProfile defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.diskEncryptionSetId = defaults.diskEncryptionSetId;
    	      this.encryptionAtHostEnabled = defaults.encryptionAtHostEnabled;
    	      this.subnetId = defaults.subnetId;
    	      this.vmSize = defaults.vmSize;
        }

        @CustomType.Setter
        public Builder diskEncryptionSetId(@Nullable String diskEncryptionSetId) {

            this.diskEncryptionSetId = diskEncryptionSetId;
            return this;
        }
        @CustomType.Setter
        public Builder encryptionAtHostEnabled(@Nullable Boolean encryptionAtHostEnabled) {

            this.encryptionAtHostEnabled = encryptionAtHostEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder subnetId(String subnetId) {
            if (subnetId == null) {
              throw new MissingRequiredPropertyException("ClusterMainProfile", "subnetId");
            }
            this.subnetId = subnetId;
            return this;
        }
        @CustomType.Setter
        public Builder vmSize(String vmSize) {
            if (vmSize == null) {
              throw new MissingRequiredPropertyException("ClusterMainProfile", "vmSize");
            }
            this.vmSize = vmSize;
            return this;
        }
        public ClusterMainProfile build() {
            final var _resultValue = new ClusterMainProfile();
            _resultValue.diskEncryptionSetId = diskEncryptionSetId;
            _resultValue.encryptionAtHostEnabled = encryptionAtHostEnabled;
            _resultValue.subnetId = subnetId;
            _resultValue.vmSize = vmSize;
            return _resultValue;
        }
    }
}
