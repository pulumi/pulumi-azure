// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.appservice;

import com.pulumi.azure.appservice.inputs.EnvironmentClusterSettingArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class EnvironmentArgs extends com.pulumi.resources.ResourceArgs {

    public static final EnvironmentArgs Empty = new EnvironmentArgs();

    /**
     * Allowed user added IP ranges on the ASE database. Use the addresses you want to set as the explicit egress address ranges.
     * 
     * &gt; **NOTE:** `allowed_user_ip_cidrs` The addresses that will be used for all outbound traffic from your App Service Environment to the internet to avoid asymmetric routing challenge. If you&#39;re routing the traffic on premises, these addresses are your NATs or gateway IPs. If you want to route the App Service Environment outbound traffic through an NVA, the egress address is the public IP of the NVA. Please visit [Create your ASE with the egress addresses](https://docs.microsoft.com/azure/app-service/environment/forced-tunnel-support#add-your-own-ips-to-the-ase-azure-sql-firewall)
     * 
     */
    @Import(name="allowedUserIpCidrs")
    private @Nullable Output<List<String>> allowedUserIpCidrs;

    /**
     * @return Allowed user added IP ranges on the ASE database. Use the addresses you want to set as the explicit egress address ranges.
     * 
     * &gt; **NOTE:** `allowed_user_ip_cidrs` The addresses that will be used for all outbound traffic from your App Service Environment to the internet to avoid asymmetric routing challenge. If you&#39;re routing the traffic on premises, these addresses are your NATs or gateway IPs. If you want to route the App Service Environment outbound traffic through an NVA, the egress address is the public IP of the NVA. Please visit [Create your ASE with the egress addresses](https://docs.microsoft.com/azure/app-service/environment/forced-tunnel-support#add-your-own-ips-to-the-ase-azure-sql-firewall)
     * 
     */
    public Optional<Output<List<String>>> allowedUserIpCidrs() {
        return Optional.ofNullable(this.allowedUserIpCidrs);
    }

    /**
     * Zero or more `cluster_setting` blocks as defined below.
     * 
     */
    @Import(name="clusterSettings")
    private @Nullable Output<List<EnvironmentClusterSettingArgs>> clusterSettings;

    /**
     * @return Zero or more `cluster_setting` blocks as defined below.
     * 
     */
    public Optional<Output<List<EnvironmentClusterSettingArgs>>> clusterSettings() {
        return Optional.ofNullable(this.clusterSettings);
    }

    /**
     * Scale factor for front end instances. Possible values are between `5` and `15`. Defaults to `15`.
     * 
     */
    @Import(name="frontEndScaleFactor")
    private @Nullable Output<Integer> frontEndScaleFactor;

    /**
     * @return Scale factor for front end instances. Possible values are between `5` and `15`. Defaults to `15`.
     * 
     */
    public Optional<Output<Integer>> frontEndScaleFactor() {
        return Optional.ofNullable(this.frontEndScaleFactor);
    }

    /**
     * Specifies which endpoints to serve internally in the Virtual Network for the App Service Environment. Possible values are `None`, `Web`, `Publishing` and combined value `&#34;Web, Publishing&#34;`. Defaults to `None`. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="internalLoadBalancingMode")
    private @Nullable Output<String> internalLoadBalancingMode;

    /**
     * @return Specifies which endpoints to serve internally in the Virtual Network for the App Service Environment. Possible values are `None`, `Web`, `Publishing` and combined value `&#34;Web, Publishing&#34;`. Defaults to `None`. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> internalLoadBalancingMode() {
        return Optional.ofNullable(this.internalLoadBalancingMode);
    }

    /**
     * The name of the App Service Environment. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the App Service Environment. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Pricing tier for the front end instances. Possible values are `I1`, `I2` and `I3`. Defaults to `I1`.
     * 
     */
    @Import(name="pricingTier")
    private @Nullable Output<String> pricingTier;

    /**
     * @return Pricing tier for the front end instances. Possible values are `I1`, `I2` and `I3`. Defaults to `I1`.
     * 
     */
    public Optional<Output<String>> pricingTier() {
        return Optional.ofNullable(this.pricingTier);
    }

    /**
     * The name of the Resource Group where the App Service Environment exists. Defaults to the Resource Group of the Subnet (specified by `subnet_id`).
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    /**
     * @return The name of the Resource Group where the App Service Environment exists. Defaults to the Resource Group of the Subnet (specified by `subnet_id`).
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * The ID of the Subnet which the App Service Environment should be connected to. Changing this forces a new resource to be created.
     * 
     * &gt; **NOTE** a /24 or larger CIDR is required. Once associated with an ASE this size cannot be changed.
     * 
     */
    @Import(name="subnetId", required=true)
    private Output<String> subnetId;

    /**
     * @return The ID of the Subnet which the App Service Environment should be connected to. Changing this forces a new resource to be created.
     * 
     * &gt; **NOTE** a /24 or larger CIDR is required. Once associated with an ASE this size cannot be changed.
     * 
     */
    public Output<String> subnetId() {
        return this.subnetId;
    }

    /**
     * A mapping of tags to assign to the resource. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return A mapping of tags to assign to the resource. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private EnvironmentArgs() {}

    private EnvironmentArgs(EnvironmentArgs $) {
        this.allowedUserIpCidrs = $.allowedUserIpCidrs;
        this.clusterSettings = $.clusterSettings;
        this.frontEndScaleFactor = $.frontEndScaleFactor;
        this.internalLoadBalancingMode = $.internalLoadBalancingMode;
        this.name = $.name;
        this.pricingTier = $.pricingTier;
        this.resourceGroupName = $.resourceGroupName;
        this.subnetId = $.subnetId;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(EnvironmentArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private EnvironmentArgs $;

        public Builder() {
            $ = new EnvironmentArgs();
        }

        public Builder(EnvironmentArgs defaults) {
            $ = new EnvironmentArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param allowedUserIpCidrs Allowed user added IP ranges on the ASE database. Use the addresses you want to set as the explicit egress address ranges.
         * 
         * &gt; **NOTE:** `allowed_user_ip_cidrs` The addresses that will be used for all outbound traffic from your App Service Environment to the internet to avoid asymmetric routing challenge. If you&#39;re routing the traffic on premises, these addresses are your NATs or gateway IPs. If you want to route the App Service Environment outbound traffic through an NVA, the egress address is the public IP of the NVA. Please visit [Create your ASE with the egress addresses](https://docs.microsoft.com/azure/app-service/environment/forced-tunnel-support#add-your-own-ips-to-the-ase-azure-sql-firewall)
         * 
         * @return builder
         * 
         */
        public Builder allowedUserIpCidrs(@Nullable Output<List<String>> allowedUserIpCidrs) {
            $.allowedUserIpCidrs = allowedUserIpCidrs;
            return this;
        }

        /**
         * @param allowedUserIpCidrs Allowed user added IP ranges on the ASE database. Use the addresses you want to set as the explicit egress address ranges.
         * 
         * &gt; **NOTE:** `allowed_user_ip_cidrs` The addresses that will be used for all outbound traffic from your App Service Environment to the internet to avoid asymmetric routing challenge. If you&#39;re routing the traffic on premises, these addresses are your NATs or gateway IPs. If you want to route the App Service Environment outbound traffic through an NVA, the egress address is the public IP of the NVA. Please visit [Create your ASE with the egress addresses](https://docs.microsoft.com/azure/app-service/environment/forced-tunnel-support#add-your-own-ips-to-the-ase-azure-sql-firewall)
         * 
         * @return builder
         * 
         */
        public Builder allowedUserIpCidrs(List<String> allowedUserIpCidrs) {
            return allowedUserIpCidrs(Output.of(allowedUserIpCidrs));
        }

        /**
         * @param allowedUserIpCidrs Allowed user added IP ranges on the ASE database. Use the addresses you want to set as the explicit egress address ranges.
         * 
         * &gt; **NOTE:** `allowed_user_ip_cidrs` The addresses that will be used for all outbound traffic from your App Service Environment to the internet to avoid asymmetric routing challenge. If you&#39;re routing the traffic on premises, these addresses are your NATs or gateway IPs. If you want to route the App Service Environment outbound traffic through an NVA, the egress address is the public IP of the NVA. Please visit [Create your ASE with the egress addresses](https://docs.microsoft.com/azure/app-service/environment/forced-tunnel-support#add-your-own-ips-to-the-ase-azure-sql-firewall)
         * 
         * @return builder
         * 
         */
        public Builder allowedUserIpCidrs(String... allowedUserIpCidrs) {
            return allowedUserIpCidrs(List.of(allowedUserIpCidrs));
        }

        /**
         * @param clusterSettings Zero or more `cluster_setting` blocks as defined below.
         * 
         * @return builder
         * 
         */
        public Builder clusterSettings(@Nullable Output<List<EnvironmentClusterSettingArgs>> clusterSettings) {
            $.clusterSettings = clusterSettings;
            return this;
        }

        /**
         * @param clusterSettings Zero or more `cluster_setting` blocks as defined below.
         * 
         * @return builder
         * 
         */
        public Builder clusterSettings(List<EnvironmentClusterSettingArgs> clusterSettings) {
            return clusterSettings(Output.of(clusterSettings));
        }

        /**
         * @param clusterSettings Zero or more `cluster_setting` blocks as defined below.
         * 
         * @return builder
         * 
         */
        public Builder clusterSettings(EnvironmentClusterSettingArgs... clusterSettings) {
            return clusterSettings(List.of(clusterSettings));
        }

        /**
         * @param frontEndScaleFactor Scale factor for front end instances. Possible values are between `5` and `15`. Defaults to `15`.
         * 
         * @return builder
         * 
         */
        public Builder frontEndScaleFactor(@Nullable Output<Integer> frontEndScaleFactor) {
            $.frontEndScaleFactor = frontEndScaleFactor;
            return this;
        }

        /**
         * @param frontEndScaleFactor Scale factor for front end instances. Possible values are between `5` and `15`. Defaults to `15`.
         * 
         * @return builder
         * 
         */
        public Builder frontEndScaleFactor(Integer frontEndScaleFactor) {
            return frontEndScaleFactor(Output.of(frontEndScaleFactor));
        }

        /**
         * @param internalLoadBalancingMode Specifies which endpoints to serve internally in the Virtual Network for the App Service Environment. Possible values are `None`, `Web`, `Publishing` and combined value `&#34;Web, Publishing&#34;`. Defaults to `None`. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder internalLoadBalancingMode(@Nullable Output<String> internalLoadBalancingMode) {
            $.internalLoadBalancingMode = internalLoadBalancingMode;
            return this;
        }

        /**
         * @param internalLoadBalancingMode Specifies which endpoints to serve internally in the Virtual Network for the App Service Environment. Possible values are `None`, `Web`, `Publishing` and combined value `&#34;Web, Publishing&#34;`. Defaults to `None`. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder internalLoadBalancingMode(String internalLoadBalancingMode) {
            return internalLoadBalancingMode(Output.of(internalLoadBalancingMode));
        }

        /**
         * @param name The name of the App Service Environment. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the App Service Environment. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param pricingTier Pricing tier for the front end instances. Possible values are `I1`, `I2` and `I3`. Defaults to `I1`.
         * 
         * @return builder
         * 
         */
        public Builder pricingTier(@Nullable Output<String> pricingTier) {
            $.pricingTier = pricingTier;
            return this;
        }

        /**
         * @param pricingTier Pricing tier for the front end instances. Possible values are `I1`, `I2` and `I3`. Defaults to `I1`.
         * 
         * @return builder
         * 
         */
        public Builder pricingTier(String pricingTier) {
            return pricingTier(Output.of(pricingTier));
        }

        /**
         * @param resourceGroupName The name of the Resource Group where the App Service Environment exists. Defaults to the Resource Group of the Subnet (specified by `subnet_id`).
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName The name of the Resource Group where the App Service Environment exists. Defaults to the Resource Group of the Subnet (specified by `subnet_id`).
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        /**
         * @param subnetId The ID of the Subnet which the App Service Environment should be connected to. Changing this forces a new resource to be created.
         * 
         * &gt; **NOTE** a /24 or larger CIDR is required. Once associated with an ASE this size cannot be changed.
         * 
         * @return builder
         * 
         */
        public Builder subnetId(Output<String> subnetId) {
            $.subnetId = subnetId;
            return this;
        }

        /**
         * @param subnetId The ID of the Subnet which the App Service Environment should be connected to. Changing this forces a new resource to be created.
         * 
         * &gt; **NOTE** a /24 or larger CIDR is required. Once associated with an ASE this size cannot be changed.
         * 
         * @return builder
         * 
         */
        public Builder subnetId(String subnetId) {
            return subnetId(Output.of(subnetId));
        }

        /**
         * @param tags A mapping of tags to assign to the resource. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags A mapping of tags to assign to the resource. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public EnvironmentArgs build() {
            if ($.resourceGroupName == null) {
                throw new MissingRequiredPropertyException("EnvironmentArgs", "resourceGroupName");
            }
            if ($.subnetId == null) {
                throw new MissingRequiredPropertyException("EnvironmentArgs", "subnetId");
            }
            return $;
        }
    }

}
