// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.containerapp.outputs;

import com.pulumi.azure.containerapp.outputs.GetAppIngressCustomDomain;
import com.pulumi.azure.containerapp.outputs.GetAppIngressTrafficWeight;
import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetAppIngress {
    /**
     * @return Should this ingress allow insecure connections?
     * 
     */
    private Boolean allowInsecureConnections;
    /**
     * @return One or more `custom_domain` block as detailed below.
     * 
     */
    private List<GetAppIngressCustomDomain> customDomains;
    /**
     * @return Is this an external Ingress.
     * 
     */
    private Boolean externalEnabled;
    /**
     * @return The FQDN of the ingress.
     * 
     */
    private String fqdn;
    /**
     * @return The target port on the container for the Ingress traffic.
     * 
     */
    private Integer targetPort;
    /**
     * @return A `traffic_weight` block as detailed below.
     * 
     */
    private List<GetAppIngressTrafficWeight> trafficWeights;
    /**
     * @return The transport method for the Ingress. Possible values include `auto`, `http`, and `http2`. Defaults to `auto`
     * 
     */
    private String transport;

    private GetAppIngress() {}
    /**
     * @return Should this ingress allow insecure connections?
     * 
     */
    public Boolean allowInsecureConnections() {
        return this.allowInsecureConnections;
    }
    /**
     * @return One or more `custom_domain` block as detailed below.
     * 
     */
    public List<GetAppIngressCustomDomain> customDomains() {
        return this.customDomains;
    }
    /**
     * @return Is this an external Ingress.
     * 
     */
    public Boolean externalEnabled() {
        return this.externalEnabled;
    }
    /**
     * @return The FQDN of the ingress.
     * 
     */
    public String fqdn() {
        return this.fqdn;
    }
    /**
     * @return The target port on the container for the Ingress traffic.
     * 
     */
    public Integer targetPort() {
        return this.targetPort;
    }
    /**
     * @return A `traffic_weight` block as detailed below.
     * 
     */
    public List<GetAppIngressTrafficWeight> trafficWeights() {
        return this.trafficWeights;
    }
    /**
     * @return The transport method for the Ingress. Possible values include `auto`, `http`, and `http2`. Defaults to `auto`
     * 
     */
    public String transport() {
        return this.transport;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAppIngress defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Boolean allowInsecureConnections;
        private List<GetAppIngressCustomDomain> customDomains;
        private Boolean externalEnabled;
        private String fqdn;
        private Integer targetPort;
        private List<GetAppIngressTrafficWeight> trafficWeights;
        private String transport;
        public Builder() {}
        public Builder(GetAppIngress defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.allowInsecureConnections = defaults.allowInsecureConnections;
    	      this.customDomains = defaults.customDomains;
    	      this.externalEnabled = defaults.externalEnabled;
    	      this.fqdn = defaults.fqdn;
    	      this.targetPort = defaults.targetPort;
    	      this.trafficWeights = defaults.trafficWeights;
    	      this.transport = defaults.transport;
        }

        @CustomType.Setter
        public Builder allowInsecureConnections(Boolean allowInsecureConnections) {
            this.allowInsecureConnections = Objects.requireNonNull(allowInsecureConnections);
            return this;
        }
        @CustomType.Setter
        public Builder customDomains(List<GetAppIngressCustomDomain> customDomains) {
            this.customDomains = Objects.requireNonNull(customDomains);
            return this;
        }
        public Builder customDomains(GetAppIngressCustomDomain... customDomains) {
            return customDomains(List.of(customDomains));
        }
        @CustomType.Setter
        public Builder externalEnabled(Boolean externalEnabled) {
            this.externalEnabled = Objects.requireNonNull(externalEnabled);
            return this;
        }
        @CustomType.Setter
        public Builder fqdn(String fqdn) {
            this.fqdn = Objects.requireNonNull(fqdn);
            return this;
        }
        @CustomType.Setter
        public Builder targetPort(Integer targetPort) {
            this.targetPort = Objects.requireNonNull(targetPort);
            return this;
        }
        @CustomType.Setter
        public Builder trafficWeights(List<GetAppIngressTrafficWeight> trafficWeights) {
            this.trafficWeights = Objects.requireNonNull(trafficWeights);
            return this;
        }
        public Builder trafficWeights(GetAppIngressTrafficWeight... trafficWeights) {
            return trafficWeights(List.of(trafficWeights));
        }
        @CustomType.Setter
        public Builder transport(String transport) {
            this.transport = Objects.requireNonNull(transport);
            return this;
        }
        public GetAppIngress build() {
            final var _resultValue = new GetAppIngress();
            _resultValue.allowInsecureConnections = allowInsecureConnections;
            _resultValue.customDomains = customDomains;
            _resultValue.externalEnabled = externalEnabled;
            _resultValue.fqdn = fqdn;
            _resultValue.targetPort = targetPort;
            _resultValue.trafficWeights = trafficWeights;
            _resultValue.transport = transport;
            return _resultValue;
        }
    }
}
