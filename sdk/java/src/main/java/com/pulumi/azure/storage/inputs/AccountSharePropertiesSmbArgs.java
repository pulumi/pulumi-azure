// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.storage.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AccountSharePropertiesSmbArgs extends com.pulumi.resources.ResourceArgs {

    public static final AccountSharePropertiesSmbArgs Empty = new AccountSharePropertiesSmbArgs();

    /**
     * A set of SMB authentication methods. Possible values are `NTLMv2`, and `Kerberos`.
     * 
     */
    @Import(name="authenticationTypes")
    private @Nullable Output<List<String>> authenticationTypes;

    /**
     * @return A set of SMB authentication methods. Possible values are `NTLMv2`, and `Kerberos`.
     * 
     */
    public Optional<Output<List<String>>> authenticationTypes() {
        return Optional.ofNullable(this.authenticationTypes);
    }

    /**
     * A set of SMB channel encryption. Possible values are `AES-128-CCM`, `AES-128-GCM`, and `AES-256-GCM`.
     * 
     */
    @Import(name="channelEncryptionTypes")
    private @Nullable Output<List<String>> channelEncryptionTypes;

    /**
     * @return A set of SMB channel encryption. Possible values are `AES-128-CCM`, `AES-128-GCM`, and `AES-256-GCM`.
     * 
     */
    public Optional<Output<List<String>>> channelEncryptionTypes() {
        return Optional.ofNullable(this.channelEncryptionTypes);
    }

    /**
     * A set of Kerberos ticket encryption. Possible values are `RC4-HMAC`, and `AES-256`.
     * 
     */
    @Import(name="kerberosTicketEncryptionTypes")
    private @Nullable Output<List<String>> kerberosTicketEncryptionTypes;

    /**
     * @return A set of Kerberos ticket encryption. Possible values are `RC4-HMAC`, and `AES-256`.
     * 
     */
    public Optional<Output<List<String>>> kerberosTicketEncryptionTypes() {
        return Optional.ofNullable(this.kerberosTicketEncryptionTypes);
    }

    /**
     * A set of SMB protocol versions. Possible values are `SMB2.1`, `SMB3.0`, and `SMB3.1.1`.
     * 
     */
    @Import(name="versions")
    private @Nullable Output<List<String>> versions;

    /**
     * @return A set of SMB protocol versions. Possible values are `SMB2.1`, `SMB3.0`, and `SMB3.1.1`.
     * 
     */
    public Optional<Output<List<String>>> versions() {
        return Optional.ofNullable(this.versions);
    }

    private AccountSharePropertiesSmbArgs() {}

    private AccountSharePropertiesSmbArgs(AccountSharePropertiesSmbArgs $) {
        this.authenticationTypes = $.authenticationTypes;
        this.channelEncryptionTypes = $.channelEncryptionTypes;
        this.kerberosTicketEncryptionTypes = $.kerberosTicketEncryptionTypes;
        this.versions = $.versions;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AccountSharePropertiesSmbArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AccountSharePropertiesSmbArgs $;

        public Builder() {
            $ = new AccountSharePropertiesSmbArgs();
        }

        public Builder(AccountSharePropertiesSmbArgs defaults) {
            $ = new AccountSharePropertiesSmbArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param authenticationTypes A set of SMB authentication methods. Possible values are `NTLMv2`, and `Kerberos`.
         * 
         * @return builder
         * 
         */
        public Builder authenticationTypes(@Nullable Output<List<String>> authenticationTypes) {
            $.authenticationTypes = authenticationTypes;
            return this;
        }

        /**
         * @param authenticationTypes A set of SMB authentication methods. Possible values are `NTLMv2`, and `Kerberos`.
         * 
         * @return builder
         * 
         */
        public Builder authenticationTypes(List<String> authenticationTypes) {
            return authenticationTypes(Output.of(authenticationTypes));
        }

        /**
         * @param authenticationTypes A set of SMB authentication methods. Possible values are `NTLMv2`, and `Kerberos`.
         * 
         * @return builder
         * 
         */
        public Builder authenticationTypes(String... authenticationTypes) {
            return authenticationTypes(List.of(authenticationTypes));
        }

        /**
         * @param channelEncryptionTypes A set of SMB channel encryption. Possible values are `AES-128-CCM`, `AES-128-GCM`, and `AES-256-GCM`.
         * 
         * @return builder
         * 
         */
        public Builder channelEncryptionTypes(@Nullable Output<List<String>> channelEncryptionTypes) {
            $.channelEncryptionTypes = channelEncryptionTypes;
            return this;
        }

        /**
         * @param channelEncryptionTypes A set of SMB channel encryption. Possible values are `AES-128-CCM`, `AES-128-GCM`, and `AES-256-GCM`.
         * 
         * @return builder
         * 
         */
        public Builder channelEncryptionTypes(List<String> channelEncryptionTypes) {
            return channelEncryptionTypes(Output.of(channelEncryptionTypes));
        }

        /**
         * @param channelEncryptionTypes A set of SMB channel encryption. Possible values are `AES-128-CCM`, `AES-128-GCM`, and `AES-256-GCM`.
         * 
         * @return builder
         * 
         */
        public Builder channelEncryptionTypes(String... channelEncryptionTypes) {
            return channelEncryptionTypes(List.of(channelEncryptionTypes));
        }

        /**
         * @param kerberosTicketEncryptionTypes A set of Kerberos ticket encryption. Possible values are `RC4-HMAC`, and `AES-256`.
         * 
         * @return builder
         * 
         */
        public Builder kerberosTicketEncryptionTypes(@Nullable Output<List<String>> kerberosTicketEncryptionTypes) {
            $.kerberosTicketEncryptionTypes = kerberosTicketEncryptionTypes;
            return this;
        }

        /**
         * @param kerberosTicketEncryptionTypes A set of Kerberos ticket encryption. Possible values are `RC4-HMAC`, and `AES-256`.
         * 
         * @return builder
         * 
         */
        public Builder kerberosTicketEncryptionTypes(List<String> kerberosTicketEncryptionTypes) {
            return kerberosTicketEncryptionTypes(Output.of(kerberosTicketEncryptionTypes));
        }

        /**
         * @param kerberosTicketEncryptionTypes A set of Kerberos ticket encryption. Possible values are `RC4-HMAC`, and `AES-256`.
         * 
         * @return builder
         * 
         */
        public Builder kerberosTicketEncryptionTypes(String... kerberosTicketEncryptionTypes) {
            return kerberosTicketEncryptionTypes(List.of(kerberosTicketEncryptionTypes));
        }

        /**
         * @param versions A set of SMB protocol versions. Possible values are `SMB2.1`, `SMB3.0`, and `SMB3.1.1`.
         * 
         * @return builder
         * 
         */
        public Builder versions(@Nullable Output<List<String>> versions) {
            $.versions = versions;
            return this;
        }

        /**
         * @param versions A set of SMB protocol versions. Possible values are `SMB2.1`, `SMB3.0`, and `SMB3.1.1`.
         * 
         * @return builder
         * 
         */
        public Builder versions(List<String> versions) {
            return versions(Output.of(versions));
        }

        /**
         * @param versions A set of SMB protocol versions. Possible values are `SMB2.1`, `SMB3.0`, and `SMB3.1.1`.
         * 
         * @return builder
         * 
         */
        public Builder versions(String... versions) {
            return versions(List.of(versions));
        }

        public AccountSharePropertiesSmbArgs build() {
            return $;
        }
    }

}
