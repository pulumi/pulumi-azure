// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.healthcare;

import com.pulumi.azure.healthcare.inputs.ServiceAuthenticationConfigurationArgs;
import com.pulumi.azure.healthcare.inputs.ServiceCorsConfigurationArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ServiceArgs extends com.pulumi.resources.ResourceArgs {

    public static final ServiceArgs Empty = new ServiceArgs();

    @Import(name="accessPolicyObjectIds")
    private @Nullable Output<List<String>> accessPolicyObjectIds;

    public Optional<Output<List<String>>> accessPolicyObjectIds() {
        return Optional.ofNullable(this.accessPolicyObjectIds);
    }

    /**
     * An `authentication_configuration` block as defined below.
     * 
     */
    @Import(name="authenticationConfiguration")
    private @Nullable Output<ServiceAuthenticationConfigurationArgs> authenticationConfiguration;

    /**
     * @return An `authentication_configuration` block as defined below.
     * 
     */
    public Optional<Output<ServiceAuthenticationConfigurationArgs>> authenticationConfiguration() {
        return Optional.ofNullable(this.authenticationConfiguration);
    }

    /**
     * A `cors_configuration` block as defined below.
     * 
     */
    @Import(name="corsConfiguration")
    private @Nullable Output<ServiceCorsConfigurationArgs> corsConfiguration;

    /**
     * @return A `cors_configuration` block as defined below.
     * 
     */
    public Optional<Output<ServiceCorsConfigurationArgs>> corsConfiguration() {
        return Optional.ofNullable(this.corsConfiguration);
    }

    /**
     * A versionless Key Vault Key ID for CMK encryption of the backing database. Changing this forces a new resource to be created.
     * 
     * &gt; **Please Note** In order to use a `Custom Key` from Key Vault for encryption you must grant Azure Cosmos DB Service access to your key vault. For instructions on how to configure your Key Vault correctly please refer to the [product documentation](https://docs.microsoft.com/azure/cosmos-db/how-to-setup-cmk#add-an-access-policy-to-your-azure-key-vault-instance)
     * 
     */
    @Import(name="cosmosdbKeyVaultKeyVersionlessId")
    private @Nullable Output<String> cosmosdbKeyVaultKeyVersionlessId;

    /**
     * @return A versionless Key Vault Key ID for CMK encryption of the backing database. Changing this forces a new resource to be created.
     * 
     * &gt; **Please Note** In order to use a `Custom Key` from Key Vault for encryption you must grant Azure Cosmos DB Service access to your key vault. For instructions on how to configure your Key Vault correctly please refer to the [product documentation](https://docs.microsoft.com/azure/cosmos-db/how-to-setup-cmk#add-an-access-policy-to-your-azure-key-vault-instance)
     * 
     */
    public Optional<Output<String>> cosmosdbKeyVaultKeyVersionlessId() {
        return Optional.ofNullable(this.cosmosdbKeyVaultKeyVersionlessId);
    }

    /**
     * The provisioned throughput for the backing database. Range of `400`-`100000`. Defaults to `1000`.
     * 
     */
    @Import(name="cosmosdbThroughput")
    private @Nullable Output<Integer> cosmosdbThroughput;

    /**
     * @return The provisioned throughput for the backing database. Range of `400`-`100000`. Defaults to `1000`.
     * 
     */
    public Optional<Output<Integer>> cosmosdbThroughput() {
        return Optional.ofNullable(this.cosmosdbThroughput);
    }

    /**
     * The type of the service. Values at time of publication are: `fhir`, `fhir-Stu3` and `fhir-R4`. Default value is `fhir`.
     * 
     */
    @Import(name="kind")
    private @Nullable Output<String> kind;

    /**
     * @return The type of the service. Values at time of publication are: `fhir`, `fhir-Stu3` and `fhir-R4`. Default value is `fhir`.
     * 
     */
    public Optional<Output<String>> kind() {
        return Optional.ofNullable(this.kind);
    }

    /**
     * Specifies the supported Azure Region where the Service should be created. Changing this forces a new resource to be created.
     * 
     * &gt; **Please Note**: Not all locations support this resource. Some are `West US 2`, `North Central US`, and `UK West`.
     * 
     */
    @Import(name="location")
    private @Nullable Output<String> location;

    /**
     * @return Specifies the supported Azure Region where the Service should be created. Changing this forces a new resource to be created.
     * 
     * &gt; **Please Note**: Not all locations support this resource. Some are `West US 2`, `North Central US`, and `UK West`.
     * 
     */
    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * The name of the service instance. Used for service endpoint, must be unique within the audience. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the service instance. Used for service endpoint, must be unique within the audience. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Whether public network access is enabled or disabled for this service instance. Defaults to `true`.
     * 
     */
    @Import(name="publicNetworkAccessEnabled")
    private @Nullable Output<Boolean> publicNetworkAccessEnabled;

    /**
     * @return Whether public network access is enabled or disabled for this service instance. Defaults to `true`.
     * 
     */
    public Optional<Output<Boolean>> publicNetworkAccessEnabled() {
        return Optional.ofNullable(this.publicNetworkAccessEnabled);
    }

    /**
     * The name of the Resource Group in which to create the Service. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    /**
     * @return The name of the Resource Group in which to create the Service. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * A mapping of tags to assign to the resource.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return A mapping of tags to assign to the resource.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private ServiceArgs() {}

    private ServiceArgs(ServiceArgs $) {
        this.accessPolicyObjectIds = $.accessPolicyObjectIds;
        this.authenticationConfiguration = $.authenticationConfiguration;
        this.corsConfiguration = $.corsConfiguration;
        this.cosmosdbKeyVaultKeyVersionlessId = $.cosmosdbKeyVaultKeyVersionlessId;
        this.cosmosdbThroughput = $.cosmosdbThroughput;
        this.kind = $.kind;
        this.location = $.location;
        this.name = $.name;
        this.publicNetworkAccessEnabled = $.publicNetworkAccessEnabled;
        this.resourceGroupName = $.resourceGroupName;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ServiceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ServiceArgs $;

        public Builder() {
            $ = new ServiceArgs();
        }

        public Builder(ServiceArgs defaults) {
            $ = new ServiceArgs(Objects.requireNonNull(defaults));
        }

        public Builder accessPolicyObjectIds(@Nullable Output<List<String>> accessPolicyObjectIds) {
            $.accessPolicyObjectIds = accessPolicyObjectIds;
            return this;
        }

        public Builder accessPolicyObjectIds(List<String> accessPolicyObjectIds) {
            return accessPolicyObjectIds(Output.of(accessPolicyObjectIds));
        }

        public Builder accessPolicyObjectIds(String... accessPolicyObjectIds) {
            return accessPolicyObjectIds(List.of(accessPolicyObjectIds));
        }

        /**
         * @param authenticationConfiguration An `authentication_configuration` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder authenticationConfiguration(@Nullable Output<ServiceAuthenticationConfigurationArgs> authenticationConfiguration) {
            $.authenticationConfiguration = authenticationConfiguration;
            return this;
        }

        /**
         * @param authenticationConfiguration An `authentication_configuration` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder authenticationConfiguration(ServiceAuthenticationConfigurationArgs authenticationConfiguration) {
            return authenticationConfiguration(Output.of(authenticationConfiguration));
        }

        /**
         * @param corsConfiguration A `cors_configuration` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder corsConfiguration(@Nullable Output<ServiceCorsConfigurationArgs> corsConfiguration) {
            $.corsConfiguration = corsConfiguration;
            return this;
        }

        /**
         * @param corsConfiguration A `cors_configuration` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder corsConfiguration(ServiceCorsConfigurationArgs corsConfiguration) {
            return corsConfiguration(Output.of(corsConfiguration));
        }

        /**
         * @param cosmosdbKeyVaultKeyVersionlessId A versionless Key Vault Key ID for CMK encryption of the backing database. Changing this forces a new resource to be created.
         * 
         * &gt; **Please Note** In order to use a `Custom Key` from Key Vault for encryption you must grant Azure Cosmos DB Service access to your key vault. For instructions on how to configure your Key Vault correctly please refer to the [product documentation](https://docs.microsoft.com/azure/cosmos-db/how-to-setup-cmk#add-an-access-policy-to-your-azure-key-vault-instance)
         * 
         * @return builder
         * 
         */
        public Builder cosmosdbKeyVaultKeyVersionlessId(@Nullable Output<String> cosmosdbKeyVaultKeyVersionlessId) {
            $.cosmosdbKeyVaultKeyVersionlessId = cosmosdbKeyVaultKeyVersionlessId;
            return this;
        }

        /**
         * @param cosmosdbKeyVaultKeyVersionlessId A versionless Key Vault Key ID for CMK encryption of the backing database. Changing this forces a new resource to be created.
         * 
         * &gt; **Please Note** In order to use a `Custom Key` from Key Vault for encryption you must grant Azure Cosmos DB Service access to your key vault. For instructions on how to configure your Key Vault correctly please refer to the [product documentation](https://docs.microsoft.com/azure/cosmos-db/how-to-setup-cmk#add-an-access-policy-to-your-azure-key-vault-instance)
         * 
         * @return builder
         * 
         */
        public Builder cosmosdbKeyVaultKeyVersionlessId(String cosmosdbKeyVaultKeyVersionlessId) {
            return cosmosdbKeyVaultKeyVersionlessId(Output.of(cosmosdbKeyVaultKeyVersionlessId));
        }

        /**
         * @param cosmosdbThroughput The provisioned throughput for the backing database. Range of `400`-`100000`. Defaults to `1000`.
         * 
         * @return builder
         * 
         */
        public Builder cosmosdbThroughput(@Nullable Output<Integer> cosmosdbThroughput) {
            $.cosmosdbThroughput = cosmosdbThroughput;
            return this;
        }

        /**
         * @param cosmosdbThroughput The provisioned throughput for the backing database. Range of `400`-`100000`. Defaults to `1000`.
         * 
         * @return builder
         * 
         */
        public Builder cosmosdbThroughput(Integer cosmosdbThroughput) {
            return cosmosdbThroughput(Output.of(cosmosdbThroughput));
        }

        /**
         * @param kind The type of the service. Values at time of publication are: `fhir`, `fhir-Stu3` and `fhir-R4`. Default value is `fhir`.
         * 
         * @return builder
         * 
         */
        public Builder kind(@Nullable Output<String> kind) {
            $.kind = kind;
            return this;
        }

        /**
         * @param kind The type of the service. Values at time of publication are: `fhir`, `fhir-Stu3` and `fhir-R4`. Default value is `fhir`.
         * 
         * @return builder
         * 
         */
        public Builder kind(String kind) {
            return kind(Output.of(kind));
        }

        /**
         * @param location Specifies the supported Azure Region where the Service should be created. Changing this forces a new resource to be created.
         * 
         * &gt; **Please Note**: Not all locations support this resource. Some are `West US 2`, `North Central US`, and `UK West`.
         * 
         * @return builder
         * 
         */
        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location Specifies the supported Azure Region where the Service should be created. Changing this forces a new resource to be created.
         * 
         * &gt; **Please Note**: Not all locations support this resource. Some are `West US 2`, `North Central US`, and `UK West`.
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param name The name of the service instance. Used for service endpoint, must be unique within the audience. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the service instance. Used for service endpoint, must be unique within the audience. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param publicNetworkAccessEnabled Whether public network access is enabled or disabled for this service instance. Defaults to `true`.
         * 
         * @return builder
         * 
         */
        public Builder publicNetworkAccessEnabled(@Nullable Output<Boolean> publicNetworkAccessEnabled) {
            $.publicNetworkAccessEnabled = publicNetworkAccessEnabled;
            return this;
        }

        /**
         * @param publicNetworkAccessEnabled Whether public network access is enabled or disabled for this service instance. Defaults to `true`.
         * 
         * @return builder
         * 
         */
        public Builder publicNetworkAccessEnabled(Boolean publicNetworkAccessEnabled) {
            return publicNetworkAccessEnabled(Output.of(publicNetworkAccessEnabled));
        }

        /**
         * @param resourceGroupName The name of the Resource Group in which to create the Service. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName The name of the Resource Group in which to create the Service. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        /**
         * @param tags A mapping of tags to assign to the resource.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags A mapping of tags to assign to the resource.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public ServiceArgs build() {
            if ($.resourceGroupName == null) {
                throw new MissingRequiredPropertyException("ServiceArgs", "resourceGroupName");
            }
            return $;
        }
    }

}
