// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.keyvault.inputs;

import com.pulumi.azure.keyvault.inputs.CertificateCertificatePolicyLifetimeActionActionArgs;
import com.pulumi.azure.keyvault.inputs.CertificateCertificatePolicyLifetimeActionTriggerArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.util.Objects;


public final class CertificateCertificatePolicyLifetimeActionArgs extends com.pulumi.resources.ResourceArgs {

    public static final CertificateCertificatePolicyLifetimeActionArgs Empty = new CertificateCertificatePolicyLifetimeActionArgs();

    /**
     * A `action` block as defined below.
     * 
     */
    @Import(name="action", required=true)
    private Output<CertificateCertificatePolicyLifetimeActionActionArgs> action;

    /**
     * @return A `action` block as defined below.
     * 
     */
    public Output<CertificateCertificatePolicyLifetimeActionActionArgs> action() {
        return this.action;
    }

    /**
     * A `trigger` block as defined below.
     * 
     */
    @Import(name="trigger", required=true)
    private Output<CertificateCertificatePolicyLifetimeActionTriggerArgs> trigger;

    /**
     * @return A `trigger` block as defined below.
     * 
     */
    public Output<CertificateCertificatePolicyLifetimeActionTriggerArgs> trigger() {
        return this.trigger;
    }

    private CertificateCertificatePolicyLifetimeActionArgs() {}

    private CertificateCertificatePolicyLifetimeActionArgs(CertificateCertificatePolicyLifetimeActionArgs $) {
        this.action = $.action;
        this.trigger = $.trigger;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CertificateCertificatePolicyLifetimeActionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CertificateCertificatePolicyLifetimeActionArgs $;

        public Builder() {
            $ = new CertificateCertificatePolicyLifetimeActionArgs();
        }

        public Builder(CertificateCertificatePolicyLifetimeActionArgs defaults) {
            $ = new CertificateCertificatePolicyLifetimeActionArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param action A `action` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder action(Output<CertificateCertificatePolicyLifetimeActionActionArgs> action) {
            $.action = action;
            return this;
        }

        /**
         * @param action A `action` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder action(CertificateCertificatePolicyLifetimeActionActionArgs action) {
            return action(Output.of(action));
        }

        /**
         * @param trigger A `trigger` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder trigger(Output<CertificateCertificatePolicyLifetimeActionTriggerArgs> trigger) {
            $.trigger = trigger;
            return this;
        }

        /**
         * @param trigger A `trigger` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder trigger(CertificateCertificatePolicyLifetimeActionTriggerArgs trigger) {
            return trigger(Output.of(trigger));
        }

        public CertificateCertificatePolicyLifetimeActionArgs build() {
            if ($.action == null) {
                throw new MissingRequiredPropertyException("CertificateCertificatePolicyLifetimeActionArgs", "action");
            }
            if ($.trigger == null) {
                throw new MissingRequiredPropertyException("CertificateCertificatePolicyLifetimeActionArgs", "trigger");
            }
            return $;
        }
    }

}
