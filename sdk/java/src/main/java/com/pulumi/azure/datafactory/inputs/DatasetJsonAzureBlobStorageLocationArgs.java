// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.datafactory.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DatasetJsonAzureBlobStorageLocationArgs extends com.pulumi.resources.ResourceArgs {

    public static final DatasetJsonAzureBlobStorageLocationArgs Empty = new DatasetJsonAzureBlobStorageLocationArgs();

    /**
     * The container on the Azure Blob Storage Account hosting the file.
     * 
     */
    @Import(name="container", required=true)
    private Output<String> container;

    /**
     * @return The container on the Azure Blob Storage Account hosting the file.
     * 
     */
    public Output<String> container() {
        return this.container;
    }

    /**
     * Is the `container` using dynamic expression, function or system variables? Defaults to `false`.
     * 
     */
    @Import(name="dynamicContainerEnabled")
    private @Nullable Output<Boolean> dynamicContainerEnabled;

    /**
     * @return Is the `container` using dynamic expression, function or system variables? Defaults to `false`.
     * 
     */
    public Optional<Output<Boolean>> dynamicContainerEnabled() {
        return Optional.ofNullable(this.dynamicContainerEnabled);
    }

    /**
     * Is the `filename` using dynamic expression, function or system variables? Defaults to `false`.
     * 
     */
    @Import(name="dynamicFilenameEnabled")
    private @Nullable Output<Boolean> dynamicFilenameEnabled;

    /**
     * @return Is the `filename` using dynamic expression, function or system variables? Defaults to `false`.
     * 
     */
    public Optional<Output<Boolean>> dynamicFilenameEnabled() {
        return Optional.ofNullable(this.dynamicFilenameEnabled);
    }

    /**
     * Is the `path` using dynamic expression, function or system variables? Defaults to `false`.
     * 
     */
    @Import(name="dynamicPathEnabled")
    private @Nullable Output<Boolean> dynamicPathEnabled;

    /**
     * @return Is the `path` using dynamic expression, function or system variables? Defaults to `false`.
     * 
     */
    public Optional<Output<Boolean>> dynamicPathEnabled() {
        return Optional.ofNullable(this.dynamicPathEnabled);
    }

    /**
     * The filename of the file on the web server.
     * 
     */
    @Import(name="filename", required=true)
    private Output<String> filename;

    /**
     * @return The filename of the file on the web server.
     * 
     */
    public Output<String> filename() {
        return this.filename;
    }

    /**
     * The folder path to the file on the web server.
     * 
     */
    @Import(name="path", required=true)
    private Output<String> path;

    /**
     * @return The folder path to the file on the web server.
     * 
     */
    public Output<String> path() {
        return this.path;
    }

    private DatasetJsonAzureBlobStorageLocationArgs() {}

    private DatasetJsonAzureBlobStorageLocationArgs(DatasetJsonAzureBlobStorageLocationArgs $) {
        this.container = $.container;
        this.dynamicContainerEnabled = $.dynamicContainerEnabled;
        this.dynamicFilenameEnabled = $.dynamicFilenameEnabled;
        this.dynamicPathEnabled = $.dynamicPathEnabled;
        this.filename = $.filename;
        this.path = $.path;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DatasetJsonAzureBlobStorageLocationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DatasetJsonAzureBlobStorageLocationArgs $;

        public Builder() {
            $ = new DatasetJsonAzureBlobStorageLocationArgs();
        }

        public Builder(DatasetJsonAzureBlobStorageLocationArgs defaults) {
            $ = new DatasetJsonAzureBlobStorageLocationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param container The container on the Azure Blob Storage Account hosting the file.
         * 
         * @return builder
         * 
         */
        public Builder container(Output<String> container) {
            $.container = container;
            return this;
        }

        /**
         * @param container The container on the Azure Blob Storage Account hosting the file.
         * 
         * @return builder
         * 
         */
        public Builder container(String container) {
            return container(Output.of(container));
        }

        /**
         * @param dynamicContainerEnabled Is the `container` using dynamic expression, function or system variables? Defaults to `false`.
         * 
         * @return builder
         * 
         */
        public Builder dynamicContainerEnabled(@Nullable Output<Boolean> dynamicContainerEnabled) {
            $.dynamicContainerEnabled = dynamicContainerEnabled;
            return this;
        }

        /**
         * @param dynamicContainerEnabled Is the `container` using dynamic expression, function or system variables? Defaults to `false`.
         * 
         * @return builder
         * 
         */
        public Builder dynamicContainerEnabled(Boolean dynamicContainerEnabled) {
            return dynamicContainerEnabled(Output.of(dynamicContainerEnabled));
        }

        /**
         * @param dynamicFilenameEnabled Is the `filename` using dynamic expression, function or system variables? Defaults to `false`.
         * 
         * @return builder
         * 
         */
        public Builder dynamicFilenameEnabled(@Nullable Output<Boolean> dynamicFilenameEnabled) {
            $.dynamicFilenameEnabled = dynamicFilenameEnabled;
            return this;
        }

        /**
         * @param dynamicFilenameEnabled Is the `filename` using dynamic expression, function or system variables? Defaults to `false`.
         * 
         * @return builder
         * 
         */
        public Builder dynamicFilenameEnabled(Boolean dynamicFilenameEnabled) {
            return dynamicFilenameEnabled(Output.of(dynamicFilenameEnabled));
        }

        /**
         * @param dynamicPathEnabled Is the `path` using dynamic expression, function or system variables? Defaults to `false`.
         * 
         * @return builder
         * 
         */
        public Builder dynamicPathEnabled(@Nullable Output<Boolean> dynamicPathEnabled) {
            $.dynamicPathEnabled = dynamicPathEnabled;
            return this;
        }

        /**
         * @param dynamicPathEnabled Is the `path` using dynamic expression, function or system variables? Defaults to `false`.
         * 
         * @return builder
         * 
         */
        public Builder dynamicPathEnabled(Boolean dynamicPathEnabled) {
            return dynamicPathEnabled(Output.of(dynamicPathEnabled));
        }

        /**
         * @param filename The filename of the file on the web server.
         * 
         * @return builder
         * 
         */
        public Builder filename(Output<String> filename) {
            $.filename = filename;
            return this;
        }

        /**
         * @param filename The filename of the file on the web server.
         * 
         * @return builder
         * 
         */
        public Builder filename(String filename) {
            return filename(Output.of(filename));
        }

        /**
         * @param path The folder path to the file on the web server.
         * 
         * @return builder
         * 
         */
        public Builder path(Output<String> path) {
            $.path = path;
            return this;
        }

        /**
         * @param path The folder path to the file on the web server.
         * 
         * @return builder
         * 
         */
        public Builder path(String path) {
            return path(Output.of(path));
        }

        public DatasetJsonAzureBlobStorageLocationArgs build() {
            if ($.container == null) {
                throw new MissingRequiredPropertyException("DatasetJsonAzureBlobStorageLocationArgs", "container");
            }
            if ($.filename == null) {
                throw new MissingRequiredPropertyException("DatasetJsonAzureBlobStorageLocationArgs", "filename");
            }
            if ($.path == null) {
                throw new MissingRequiredPropertyException("DatasetJsonAzureBlobStorageLocationArgs", "path");
            }
            return $;
        }
    }

}
