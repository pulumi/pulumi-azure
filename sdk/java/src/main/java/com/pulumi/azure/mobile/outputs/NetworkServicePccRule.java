// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.mobile.outputs;

import com.pulumi.azure.mobile.outputs.NetworkServicePccRuleQosPolicy;
import com.pulumi.azure.mobile.outputs.NetworkServicePccRuleServiceDataFlowTemplate;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class NetworkServicePccRule {
    /**
     * @return Specifies the name of the rule. This must be unique within the parent service. You must not use any of the following reserved strings - `default`, `requested` or `service`.
     * 
     */
    private String name;
    /**
     * @return A precedence value that is used to decide between data flow policy rules when identifying the QoS values to use for a particular SIM. A lower value means a higher priority. This value should be unique among all data flow policy rules configured in the mobile network. Must be between `0` and `255`.
     * 
     */
    private Integer precedence;
    /**
     * @return A `qos_policy` block as defined below. The QoS policy to use for packets matching this rule. If this field is not specified then the Service will define the QoS settings.
     * 
     */
    private @Nullable NetworkServicePccRuleQosPolicy qosPolicy;
    /**
     * @return A `service_data_flow_template` block as defined below. The set of service data flow templates to use for this PCC rule.
     * 
     */
    private List<NetworkServicePccRuleServiceDataFlowTemplate> serviceDataFlowTemplates;
    /**
     * @return Determines whether flows that match this data flow policy rule are permitted. Defaults to `true`.
     * 
     */
    private @Nullable Boolean trafficControlEnabled;

    private NetworkServicePccRule() {}
    /**
     * @return Specifies the name of the rule. This must be unique within the parent service. You must not use any of the following reserved strings - `default`, `requested` or `service`.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return A precedence value that is used to decide between data flow policy rules when identifying the QoS values to use for a particular SIM. A lower value means a higher priority. This value should be unique among all data flow policy rules configured in the mobile network. Must be between `0` and `255`.
     * 
     */
    public Integer precedence() {
        return this.precedence;
    }
    /**
     * @return A `qos_policy` block as defined below. The QoS policy to use for packets matching this rule. If this field is not specified then the Service will define the QoS settings.
     * 
     */
    public Optional<NetworkServicePccRuleQosPolicy> qosPolicy() {
        return Optional.ofNullable(this.qosPolicy);
    }
    /**
     * @return A `service_data_flow_template` block as defined below. The set of service data flow templates to use for this PCC rule.
     * 
     */
    public List<NetworkServicePccRuleServiceDataFlowTemplate> serviceDataFlowTemplates() {
        return this.serviceDataFlowTemplates;
    }
    /**
     * @return Determines whether flows that match this data flow policy rule are permitted. Defaults to `true`.
     * 
     */
    public Optional<Boolean> trafficControlEnabled() {
        return Optional.ofNullable(this.trafficControlEnabled);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(NetworkServicePccRule defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String name;
        private Integer precedence;
        private @Nullable NetworkServicePccRuleQosPolicy qosPolicy;
        private List<NetworkServicePccRuleServiceDataFlowTemplate> serviceDataFlowTemplates;
        private @Nullable Boolean trafficControlEnabled;
        public Builder() {}
        public Builder(NetworkServicePccRule defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.name = defaults.name;
    	      this.precedence = defaults.precedence;
    	      this.qosPolicy = defaults.qosPolicy;
    	      this.serviceDataFlowTemplates = defaults.serviceDataFlowTemplates;
    	      this.trafficControlEnabled = defaults.trafficControlEnabled;
        }

        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("NetworkServicePccRule", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder precedence(Integer precedence) {
            if (precedence == null) {
              throw new MissingRequiredPropertyException("NetworkServicePccRule", "precedence");
            }
            this.precedence = precedence;
            return this;
        }
        @CustomType.Setter
        public Builder qosPolicy(@Nullable NetworkServicePccRuleQosPolicy qosPolicy) {

            this.qosPolicy = qosPolicy;
            return this;
        }
        @CustomType.Setter
        public Builder serviceDataFlowTemplates(List<NetworkServicePccRuleServiceDataFlowTemplate> serviceDataFlowTemplates) {
            if (serviceDataFlowTemplates == null) {
              throw new MissingRequiredPropertyException("NetworkServicePccRule", "serviceDataFlowTemplates");
            }
            this.serviceDataFlowTemplates = serviceDataFlowTemplates;
            return this;
        }
        public Builder serviceDataFlowTemplates(NetworkServicePccRuleServiceDataFlowTemplate... serviceDataFlowTemplates) {
            return serviceDataFlowTemplates(List.of(serviceDataFlowTemplates));
        }
        @CustomType.Setter
        public Builder trafficControlEnabled(@Nullable Boolean trafficControlEnabled) {

            this.trafficControlEnabled = trafficControlEnabled;
            return this;
        }
        public NetworkServicePccRule build() {
            final var _resultValue = new NetworkServicePccRule();
            _resultValue.name = name;
            _resultValue.precedence = precedence;
            _resultValue.qosPolicy = qosPolicy;
            _resultValue.serviceDataFlowTemplates = serviceDataFlowTemplates;
            _resultValue.trafficControlEnabled = trafficControlEnabled;
            return _resultValue;
        }
    }
}
