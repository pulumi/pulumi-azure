// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.sql.outputs;

import com.pulumi.azure.sql.outputs.GetServerIdentity;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetServerResult {
    /**
     * @return The administrator username of the SQL Server.
     * 
     */
    private String administratorLogin;
    /**
     * @return The fully qualified domain name of the SQL Server.
     * 
     */
    private String fqdn;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return An `identity` block as defined below.
     * 
     */
    private List<GetServerIdentity> identities;
    /**
     * @return The location of the Resource Group in which the SQL Server exists.
     * 
     */
    private String location;
    private String name;
    private String resourceGroupName;
    /**
     * @return A mapping of tags assigned to the resource.
     * 
     */
    private Map<String,String> tags;
    /**
     * @return The version of the SQL Server.
     * 
     */
    private String version;

    private GetServerResult() {}
    /**
     * @return The administrator username of the SQL Server.
     * 
     */
    public String administratorLogin() {
        return this.administratorLogin;
    }
    /**
     * @return The fully qualified domain name of the SQL Server.
     * 
     */
    public String fqdn() {
        return this.fqdn;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return An `identity` block as defined below.
     * 
     */
    public List<GetServerIdentity> identities() {
        return this.identities;
    }
    /**
     * @return The location of the Resource Group in which the SQL Server exists.
     * 
     */
    public String location() {
        return this.location;
    }
    public String name() {
        return this.name;
    }
    public String resourceGroupName() {
        return this.resourceGroupName;
    }
    /**
     * @return A mapping of tags assigned to the resource.
     * 
     */
    public Map<String,String> tags() {
        return this.tags;
    }
    /**
     * @return The version of the SQL Server.
     * 
     */
    public String version() {
        return this.version;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetServerResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String administratorLogin;
        private String fqdn;
        private String id;
        private List<GetServerIdentity> identities;
        private String location;
        private String name;
        private String resourceGroupName;
        private Map<String,String> tags;
        private String version;
        public Builder() {}
        public Builder(GetServerResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.administratorLogin = defaults.administratorLogin;
    	      this.fqdn = defaults.fqdn;
    	      this.id = defaults.id;
    	      this.identities = defaults.identities;
    	      this.location = defaults.location;
    	      this.name = defaults.name;
    	      this.resourceGroupName = defaults.resourceGroupName;
    	      this.tags = defaults.tags;
    	      this.version = defaults.version;
        }

        @CustomType.Setter
        public Builder administratorLogin(String administratorLogin) {
            if (administratorLogin == null) {
              throw new MissingRequiredPropertyException("GetServerResult", "administratorLogin");
            }
            this.administratorLogin = administratorLogin;
            return this;
        }
        @CustomType.Setter
        public Builder fqdn(String fqdn) {
            if (fqdn == null) {
              throw new MissingRequiredPropertyException("GetServerResult", "fqdn");
            }
            this.fqdn = fqdn;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetServerResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder identities(List<GetServerIdentity> identities) {
            if (identities == null) {
              throw new MissingRequiredPropertyException("GetServerResult", "identities");
            }
            this.identities = identities;
            return this;
        }
        public Builder identities(GetServerIdentity... identities) {
            return identities(List.of(identities));
        }
        @CustomType.Setter
        public Builder location(String location) {
            if (location == null) {
              throw new MissingRequiredPropertyException("GetServerResult", "location");
            }
            this.location = location;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetServerResult", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder resourceGroupName(String resourceGroupName) {
            if (resourceGroupName == null) {
              throw new MissingRequiredPropertyException("GetServerResult", "resourceGroupName");
            }
            this.resourceGroupName = resourceGroupName;
            return this;
        }
        @CustomType.Setter
        public Builder tags(Map<String,String> tags) {
            if (tags == null) {
              throw new MissingRequiredPropertyException("GetServerResult", "tags");
            }
            this.tags = tags;
            return this;
        }
        @CustomType.Setter
        public Builder version(String version) {
            if (version == null) {
              throw new MissingRequiredPropertyException("GetServerResult", "version");
            }
            this.version = version;
            return this;
        }
        public GetServerResult build() {
            final var _resultValue = new GetServerResult();
            _resultValue.administratorLogin = administratorLogin;
            _resultValue.fqdn = fqdn;
            _resultValue.id = id;
            _resultValue.identities = identities;
            _resultValue.location = location;
            _resultValue.name = name;
            _resultValue.resourceGroupName = resourceGroupName;
            _resultValue.tags = tags;
            _resultValue.version = version;
            return _resultValue;
        }
    }
}
