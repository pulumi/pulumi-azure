// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.datafactory.outputs;

import com.pulumi.azure.datafactory.outputs.GetTriggerScheduleScheduleMonthly;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetTriggerScheduleSchedule {
    /**
     * @return Day(s) of the month on which the trigger is scheduled.
     * 
     */
    private List<Integer> daysOfMonths;
    /**
     * @return Day(s) of the week on which the trigger is scheduled.
     * 
     */
    private List<String> daysOfWeeks;
    /**
     * @return Hours of the day on which the trigger is scheduled.
     * 
     */
    private List<Integer> hours;
    /**
     * @return Minutes of the hour on which the trigger is scheduled.
     * 
     */
    private List<Integer> minutes;
    /**
     * @return A `monthly` block as documented below, which specifies the days of the month on which the trigger is scheduled.
     * 
     */
    private List<GetTriggerScheduleScheduleMonthly> monthlies;

    private GetTriggerScheduleSchedule() {}
    /**
     * @return Day(s) of the month on which the trigger is scheduled.
     * 
     */
    public List<Integer> daysOfMonths() {
        return this.daysOfMonths;
    }
    /**
     * @return Day(s) of the week on which the trigger is scheduled.
     * 
     */
    public List<String> daysOfWeeks() {
        return this.daysOfWeeks;
    }
    /**
     * @return Hours of the day on which the trigger is scheduled.
     * 
     */
    public List<Integer> hours() {
        return this.hours;
    }
    /**
     * @return Minutes of the hour on which the trigger is scheduled.
     * 
     */
    public List<Integer> minutes() {
        return this.minutes;
    }
    /**
     * @return A `monthly` block as documented below, which specifies the days of the month on which the trigger is scheduled.
     * 
     */
    public List<GetTriggerScheduleScheduleMonthly> monthlies() {
        return this.monthlies;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetTriggerScheduleSchedule defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<Integer> daysOfMonths;
        private List<String> daysOfWeeks;
        private List<Integer> hours;
        private List<Integer> minutes;
        private List<GetTriggerScheduleScheduleMonthly> monthlies;
        public Builder() {}
        public Builder(GetTriggerScheduleSchedule defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.daysOfMonths = defaults.daysOfMonths;
    	      this.daysOfWeeks = defaults.daysOfWeeks;
    	      this.hours = defaults.hours;
    	      this.minutes = defaults.minutes;
    	      this.monthlies = defaults.monthlies;
        }

        @CustomType.Setter
        public Builder daysOfMonths(List<Integer> daysOfMonths) {
            if (daysOfMonths == null) {
              throw new MissingRequiredPropertyException("GetTriggerScheduleSchedule", "daysOfMonths");
            }
            this.daysOfMonths = daysOfMonths;
            return this;
        }
        public Builder daysOfMonths(Integer... daysOfMonths) {
            return daysOfMonths(List.of(daysOfMonths));
        }
        @CustomType.Setter
        public Builder daysOfWeeks(List<String> daysOfWeeks) {
            if (daysOfWeeks == null) {
              throw new MissingRequiredPropertyException("GetTriggerScheduleSchedule", "daysOfWeeks");
            }
            this.daysOfWeeks = daysOfWeeks;
            return this;
        }
        public Builder daysOfWeeks(String... daysOfWeeks) {
            return daysOfWeeks(List.of(daysOfWeeks));
        }
        @CustomType.Setter
        public Builder hours(List<Integer> hours) {
            if (hours == null) {
              throw new MissingRequiredPropertyException("GetTriggerScheduleSchedule", "hours");
            }
            this.hours = hours;
            return this;
        }
        public Builder hours(Integer... hours) {
            return hours(List.of(hours));
        }
        @CustomType.Setter
        public Builder minutes(List<Integer> minutes) {
            if (minutes == null) {
              throw new MissingRequiredPropertyException("GetTriggerScheduleSchedule", "minutes");
            }
            this.minutes = minutes;
            return this;
        }
        public Builder minutes(Integer... minutes) {
            return minutes(List.of(minutes));
        }
        @CustomType.Setter
        public Builder monthlies(List<GetTriggerScheduleScheduleMonthly> monthlies) {
            if (monthlies == null) {
              throw new MissingRequiredPropertyException("GetTriggerScheduleSchedule", "monthlies");
            }
            this.monthlies = monthlies;
            return this;
        }
        public Builder monthlies(GetTriggerScheduleScheduleMonthly... monthlies) {
            return monthlies(List.of(monthlies));
        }
        public GetTriggerScheduleSchedule build() {
            final var _resultValue = new GetTriggerScheduleSchedule();
            _resultValue.daysOfMonths = daysOfMonths;
            _resultValue.daysOfWeeks = daysOfWeeks;
            _resultValue.hours = hours;
            _resultValue.minutes = minutes;
            _resultValue.monthlies = monthlies;
            return _resultValue;
        }
    }
}
