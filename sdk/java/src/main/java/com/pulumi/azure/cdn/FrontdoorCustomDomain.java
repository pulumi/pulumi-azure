// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.cdn;

import com.pulumi.azure.Utilities;
import com.pulumi.azure.cdn.FrontdoorCustomDomainArgs;
import com.pulumi.azure.cdn.inputs.FrontdoorCustomDomainState;
import com.pulumi.azure.cdn.outputs.FrontdoorCustomDomainTls;
import com.pulumi.core.Alias;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.azure.core.ResourceGroup;
 * import com.pulumi.azure.core.ResourceGroupArgs;
 * import com.pulumi.azure.dns.Zone;
 * import com.pulumi.azure.dns.ZoneArgs;
 * import com.pulumi.azure.cdn.FrontdoorProfile;
 * import com.pulumi.azure.cdn.FrontdoorProfileArgs;
 * import com.pulumi.azure.cdn.FrontdoorCustomDomain;
 * import com.pulumi.azure.cdn.FrontdoorCustomDomainArgs;
 * import com.pulumi.azure.cdn.inputs.FrontdoorCustomDomainTlsArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new ResourceGroup("example", ResourceGroupArgs.builder()
 *             .name("example-cdn-frontdoor")
 *             .location("West Europe")
 *             .build());
 * 
 *         var exampleZone = new Zone("exampleZone", ZoneArgs.builder()
 *             .name("sub-domain.domain.com")
 *             .resourceGroupName(example.name())
 *             .build());
 * 
 *         var exampleFrontdoorProfile = new FrontdoorProfile("exampleFrontdoorProfile", FrontdoorProfileArgs.builder()
 *             .name("example-profile")
 *             .resourceGroupName(example.name())
 *             .skuName("Standard_AzureFrontDoor")
 *             .build());
 * 
 *         var exampleFrontdoorCustomDomain = new FrontdoorCustomDomain("exampleFrontdoorCustomDomain", FrontdoorCustomDomainArgs.builder()
 *             .name("example-customDomain")
 *             .cdnFrontdoorProfileId(exampleFrontdoorProfile.id())
 *             .dnsZoneId(exampleZone.id())
 *             .hostName("contoso.fabrikam.com")
 *             .tls(FrontdoorCustomDomainTlsArgs.builder()
 *                 .certificateType("ManagedCertificate")
 *                 .minimumTlsVersion("TLS12")
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Example DNS Auth TXT Record Usage
 * 
 * The name of your DNS TXT record should be in the format of `_dnsauth.&lt;your_subdomain&gt;`. So, for example, if we use the `host_name` in the example usage above you would create a DNS TXT record with the name of `_dnsauth.contoso` which contains the value of the Front Door Custom Domains `validation_token` field. See the [product documentation](https://learn.microsoft.com/azure/frontdoor/standard-premium/how-to-add-custom-domain) for more information.
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.azure.dns.TxtRecord;
 * import com.pulumi.azure.dns.TxtRecordArgs;
 * import com.pulumi.azure.dns.inputs.TxtRecordRecordArgs;
 * import com.pulumi.std.StdFunctions;
 * import com.pulumi.std.inputs.JoinArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new TxtRecord("example", TxtRecordArgs.builder()
 *             .name(StdFunctions.join(JoinArgs.builder()
 *                 .separator(".")
 *                 .input(                
 *                     "_dnsauth",
 *                     "contoso")
 *                 .build()).result())
 *             .zoneName(exampleAzurermDnsZone.name())
 *             .resourceGroupName(exampleAzurermResourceGroup.name())
 *             .ttl(3600)
 *             .records(TxtRecordRecordArgs.builder()
 *                 .value(exampleAzurermCdnFrontdoorCustomDomain.validationToken())
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Example CNAME Record Usage
 * 
 * !&gt;**IMPORTANT:** You **must** include the `depends_on` meta-argument which references both the `azure.cdn.FrontdoorRoute` and the `azure.cdn.FrontdoorSecurityPolicy` that are associated with your Custom Domain. The reason for these `depends_on` meta-arguments is because all of the resources for the Custom Domain need to be associated within Front Door before the CNAME record can be written to the domains DNS, else the CNAME validation will fail and Front Door will not enable traffic to the Domain.
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.azure.dns.CNameRecord;
 * import com.pulumi.azure.dns.CNameRecordArgs;
 * import com.pulumi.resources.CustomResourceOptions;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new CNameRecord("example", CNameRecordArgs.builder()
 *             .name("contoso")
 *             .zoneName(exampleAzurermDnsZone.name())
 *             .resourceGroupName(exampleAzurermResourceGroup.name())
 *             .ttl(3600)
 *             .record(exampleAzurermCdnFrontdoorEndpoint.hostName())
 *             .build(), CustomResourceOptions.builder()
 *                 .dependsOn(                
 *                     exampleAzurermCdnFrontdoorRoute,
 *                     exampleAzurermCdnFrontdoorSecurityPolicy)
 *                 .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * Front Door Custom Domains can be imported using the `resource id`, e.g.
 * 
 * ```sh
 * $ pulumi import azure:cdn/frontdoorCustomDomain:FrontdoorCustomDomain example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resourceGroup1/providers/Microsoft.Cdn/profiles/profile1/customDomains/customDomain1
 * ```
 * 
 */
@ResourceType(type="azure:cdn/frontdoorCustomDomain:FrontdoorCustomDomain")
public class FrontdoorCustomDomain extends com.pulumi.resources.CustomResource {
    /**
     * The ID of the Front Door Profile. Changing this forces a new Front Door Custom Domain to be created.
     * 
     */
    @Export(name="cdnFrontdoorProfileId", refs={String.class}, tree="[0]")
    private Output<String> cdnFrontdoorProfileId;

    /**
     * @return The ID of the Front Door Profile. Changing this forces a new Front Door Custom Domain to be created.
     * 
     */
    public Output<String> cdnFrontdoorProfileId() {
        return this.cdnFrontdoorProfileId;
    }
    /**
     * The ID of the Azure DNS Zone which should be used for this Front Door Custom Domain. If you are using Azure to host your [DNS domains](https://learn.microsoft.com/azure/dns/dns-overview), you must delegate the domain provider&#39;s domain name system (DNS) to an Azure DNS Zone. For more information, see [Delegate a domain to Azure DNS](https://learn.microsoft.com/azure/dns/dns-delegate-domain-azure-dns). Otherwise, if you&#39;re using your own domain provider to handle your DNS, you must validate the Front Door Custom Domain by creating the DNS TXT records manually.
     * 
     * &lt;!-- * `pre_validated_cdn_frontdoor_custom_domain_id` - (Optional) The resource ID of the pre-validated Front Door Custom Domain. This domain type is used when you wish to onboard a validated Azure service domain, and then configure the Azure service behind an Azure Front Door.
     * 
     * -&gt;**Note:** Currently `pre_validated_cdn_frontdoor_custom_domain_id` only supports domains validated by Static Web App. --&gt;
     * 
     */
    @Export(name="dnsZoneId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> dnsZoneId;

    /**
     * @return The ID of the Azure DNS Zone which should be used for this Front Door Custom Domain. If you are using Azure to host your [DNS domains](https://learn.microsoft.com/azure/dns/dns-overview), you must delegate the domain provider&#39;s domain name system (DNS) to an Azure DNS Zone. For more information, see [Delegate a domain to Azure DNS](https://learn.microsoft.com/azure/dns/dns-delegate-domain-azure-dns). Otherwise, if you&#39;re using your own domain provider to handle your DNS, you must validate the Front Door Custom Domain by creating the DNS TXT records manually.
     * 
     * &lt;!-- * `pre_validated_cdn_frontdoor_custom_domain_id` - (Optional) The resource ID of the pre-validated Front Door Custom Domain. This domain type is used when you wish to onboard a validated Azure service domain, and then configure the Azure service behind an Azure Front Door.
     * 
     * -&gt;**Note:** Currently `pre_validated_cdn_frontdoor_custom_domain_id` only supports domains validated by Static Web App. --&gt;
     * 
     */
    public Output<Optional<String>> dnsZoneId() {
        return Codegen.optional(this.dnsZoneId);
    }
    /**
     * The date time that the token expires.
     * 
     */
    @Export(name="expirationDate", refs={String.class}, tree="[0]")
    private Output<String> expirationDate;

    /**
     * @return The date time that the token expires.
     * 
     */
    public Output<String> expirationDate() {
        return this.expirationDate;
    }
    /**
     * The host name of the domain. The `host_name` field must be the FQDN of your domain(e.g. `contoso.fabrikam.com`). Changing this forces a new Front Door Custom Domain to be created.
     * 
     */
    @Export(name="hostName", refs={String.class}, tree="[0]")
    private Output<String> hostName;

    /**
     * @return The host name of the domain. The `host_name` field must be the FQDN of your domain(e.g. `contoso.fabrikam.com`). Changing this forces a new Front Door Custom Domain to be created.
     * 
     */
    public Output<String> hostName() {
        return this.hostName;
    }
    /**
     * The name which should be used for this Front Door Custom Domain. Possible values must be between 2 and 260 characters in length, must begin with a letter or number, end with a letter or number and contain only letters, numbers and hyphens. Changing this forces a new Front Door Custom Domain to be created.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The name which should be used for this Front Door Custom Domain. Possible values must be between 2 and 260 characters in length, must begin with a letter or number, end with a letter or number and contain only letters, numbers and hyphens. Changing this forces a new Front Door Custom Domain to be created.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * A `tls` block as defined below.
     * 
     */
    @Export(name="tls", refs={FrontdoorCustomDomainTls.class}, tree="[0]")
    private Output<FrontdoorCustomDomainTls> tls;

    /**
     * @return A `tls` block as defined below.
     * 
     */
    public Output<FrontdoorCustomDomainTls> tls() {
        return this.tls;
    }
    /**
     * Challenge used for DNS TXT record or file based validation.
     * 
     */
    @Export(name="validationToken", refs={String.class}, tree="[0]")
    private Output<String> validationToken;

    /**
     * @return Challenge used for DNS TXT record or file based validation.
     * 
     */
    public Output<String> validationToken() {
        return this.validationToken;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public FrontdoorCustomDomain(java.lang.String name) {
        this(name, FrontdoorCustomDomainArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public FrontdoorCustomDomain(java.lang.String name, FrontdoorCustomDomainArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public FrontdoorCustomDomain(java.lang.String name, FrontdoorCustomDomainArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:cdn/frontdoorCustomDomain:FrontdoorCustomDomain", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private FrontdoorCustomDomain(java.lang.String name, Output<java.lang.String> id, @Nullable FrontdoorCustomDomainState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:cdn/frontdoorCustomDomain:FrontdoorCustomDomain", name, state, makeResourceOptions(options, id), false);
    }

    private static FrontdoorCustomDomainArgs makeArgs(FrontdoorCustomDomainArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? FrontdoorCustomDomainArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .aliases(List.of(
                Output.of(Alias.builder().type("azure:cdn/frontdoorCustomEndpoint:FrontdoorCustomEndpoint").build())
            ))
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static FrontdoorCustomDomain get(java.lang.String name, Output<java.lang.String> id, @Nullable FrontdoorCustomDomainState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new FrontdoorCustomDomain(name, id, state, options);
    }
}
