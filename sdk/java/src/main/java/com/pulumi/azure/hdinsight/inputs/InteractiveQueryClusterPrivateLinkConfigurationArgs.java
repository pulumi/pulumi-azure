// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.hdinsight.inputs;

import com.pulumi.azure.hdinsight.inputs.InteractiveQueryClusterPrivateLinkConfigurationIpConfigurationArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class InteractiveQueryClusterPrivateLinkConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final InteractiveQueryClusterPrivateLinkConfigurationArgs Empty = new InteractiveQueryClusterPrivateLinkConfigurationArgs();

    /**
     * The ID of the private link service group.
     * 
     */
    @Import(name="groupId", required=true)
    private Output<String> groupId;

    /**
     * @return The ID of the private link service group.
     * 
     */
    public Output<String> groupId() {
        return this.groupId;
    }

    @Import(name="ipConfiguration", required=true)
    private Output<InteractiveQueryClusterPrivateLinkConfigurationIpConfigurationArgs> ipConfiguration;

    public Output<InteractiveQueryClusterPrivateLinkConfigurationIpConfigurationArgs> ipConfiguration() {
        return this.ipConfiguration;
    }

    /**
     * The name of the private link configuration.
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    /**
     * @return The name of the private link configuration.
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    private InteractiveQueryClusterPrivateLinkConfigurationArgs() {}

    private InteractiveQueryClusterPrivateLinkConfigurationArgs(InteractiveQueryClusterPrivateLinkConfigurationArgs $) {
        this.groupId = $.groupId;
        this.ipConfiguration = $.ipConfiguration;
        this.name = $.name;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(InteractiveQueryClusterPrivateLinkConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private InteractiveQueryClusterPrivateLinkConfigurationArgs $;

        public Builder() {
            $ = new InteractiveQueryClusterPrivateLinkConfigurationArgs();
        }

        public Builder(InteractiveQueryClusterPrivateLinkConfigurationArgs defaults) {
            $ = new InteractiveQueryClusterPrivateLinkConfigurationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param groupId The ID of the private link service group.
         * 
         * @return builder
         * 
         */
        public Builder groupId(Output<String> groupId) {
            $.groupId = groupId;
            return this;
        }

        /**
         * @param groupId The ID of the private link service group.
         * 
         * @return builder
         * 
         */
        public Builder groupId(String groupId) {
            return groupId(Output.of(groupId));
        }

        public Builder ipConfiguration(Output<InteractiveQueryClusterPrivateLinkConfigurationIpConfigurationArgs> ipConfiguration) {
            $.ipConfiguration = ipConfiguration;
            return this;
        }

        public Builder ipConfiguration(InteractiveQueryClusterPrivateLinkConfigurationIpConfigurationArgs ipConfiguration) {
            return ipConfiguration(Output.of(ipConfiguration));
        }

        /**
         * @param name The name of the private link configuration.
         * 
         * @return builder
         * 
         */
        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the private link configuration.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        public InteractiveQueryClusterPrivateLinkConfigurationArgs build() {
            if ($.groupId == null) {
                throw new MissingRequiredPropertyException("InteractiveQueryClusterPrivateLinkConfigurationArgs", "groupId");
            }
            if ($.ipConfiguration == null) {
                throw new MissingRequiredPropertyException("InteractiveQueryClusterPrivateLinkConfigurationArgs", "ipConfiguration");
            }
            if ($.name == null) {
                throw new MissingRequiredPropertyException("InteractiveQueryClusterPrivateLinkConfigurationArgs", "name");
            }
            return $;
        }
    }

}
