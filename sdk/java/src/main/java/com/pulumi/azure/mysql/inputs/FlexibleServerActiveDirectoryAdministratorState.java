// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.mysql.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class FlexibleServerActiveDirectoryAdministratorState extends com.pulumi.resources.ResourceArgs {

    public static final FlexibleServerActiveDirectoryAdministratorState Empty = new FlexibleServerActiveDirectoryAdministratorState();

    @Import(name="identityId")
    private @Nullable Output<String> identityId;

    public Optional<Output<String>> identityId() {
        return Optional.ofNullable(this.identityId);
    }

    @Import(name="login")
    private @Nullable Output<String> login;

    public Optional<Output<String>> login() {
        return Optional.ofNullable(this.login);
    }

    @Import(name="objectId")
    private @Nullable Output<String> objectId;

    public Optional<Output<String>> objectId() {
        return Optional.ofNullable(this.objectId);
    }

    @Import(name="serverId")
    private @Nullable Output<String> serverId;

    public Optional<Output<String>> serverId() {
        return Optional.ofNullable(this.serverId);
    }

    @Import(name="tenantId")
    private @Nullable Output<String> tenantId;

    public Optional<Output<String>> tenantId() {
        return Optional.ofNullable(this.tenantId);
    }

    private FlexibleServerActiveDirectoryAdministratorState() {}

    private FlexibleServerActiveDirectoryAdministratorState(FlexibleServerActiveDirectoryAdministratorState $) {
        this.identityId = $.identityId;
        this.login = $.login;
        this.objectId = $.objectId;
        this.serverId = $.serverId;
        this.tenantId = $.tenantId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FlexibleServerActiveDirectoryAdministratorState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FlexibleServerActiveDirectoryAdministratorState $;

        public Builder() {
            $ = new FlexibleServerActiveDirectoryAdministratorState();
        }

        public Builder(FlexibleServerActiveDirectoryAdministratorState defaults) {
            $ = new FlexibleServerActiveDirectoryAdministratorState(Objects.requireNonNull(defaults));
        }

        public Builder identityId(@Nullable Output<String> identityId) {
            $.identityId = identityId;
            return this;
        }

        public Builder identityId(String identityId) {
            return identityId(Output.of(identityId));
        }

        public Builder login(@Nullable Output<String> login) {
            $.login = login;
            return this;
        }

        public Builder login(String login) {
            return login(Output.of(login));
        }

        public Builder objectId(@Nullable Output<String> objectId) {
            $.objectId = objectId;
            return this;
        }

        public Builder objectId(String objectId) {
            return objectId(Output.of(objectId));
        }

        public Builder serverId(@Nullable Output<String> serverId) {
            $.serverId = serverId;
            return this;
        }

        public Builder serverId(String serverId) {
            return serverId(Output.of(serverId));
        }

        public Builder tenantId(@Nullable Output<String> tenantId) {
            $.tenantId = tenantId;
            return this;
        }

        public Builder tenantId(String tenantId) {
            return tenantId(Output.of(tenantId));
        }

        public FlexibleServerActiveDirectoryAdministratorState build() {
            return $;
        }
    }

}
