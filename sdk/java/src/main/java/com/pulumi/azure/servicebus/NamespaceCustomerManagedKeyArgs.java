// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.servicebus;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class NamespaceCustomerManagedKeyArgs extends com.pulumi.resources.ResourceArgs {

    public static final NamespaceCustomerManagedKeyArgs Empty = new NamespaceCustomerManagedKeyArgs();

    /**
     * Used to specify whether enable Infrastructure Encryption. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="infrastructureEncryptionEnabled")
    private @Nullable Output<Boolean> infrastructureEncryptionEnabled;

    /**
     * @return Used to specify whether enable Infrastructure Encryption. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<Boolean>> infrastructureEncryptionEnabled() {
        return Optional.ofNullable(this.infrastructureEncryptionEnabled);
    }

    /**
     * The ID of the Key Vault Key which should be used to Encrypt the data in this Service Bus Namespace.
     * 
     */
    @Import(name="keyVaultKeyId", required=true)
    private Output<String> keyVaultKeyId;

    /**
     * @return The ID of the Key Vault Key which should be used to Encrypt the data in this Service Bus Namespace.
     * 
     */
    public Output<String> keyVaultKeyId() {
        return this.keyVaultKeyId;
    }

    /**
     * The ID of the Service Bus namespace. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="namespaceId", required=true)
    private Output<String> namespaceId;

    /**
     * @return The ID of the Service Bus namespace. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> namespaceId() {
        return this.namespaceId;
    }

    private NamespaceCustomerManagedKeyArgs() {}

    private NamespaceCustomerManagedKeyArgs(NamespaceCustomerManagedKeyArgs $) {
        this.infrastructureEncryptionEnabled = $.infrastructureEncryptionEnabled;
        this.keyVaultKeyId = $.keyVaultKeyId;
        this.namespaceId = $.namespaceId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(NamespaceCustomerManagedKeyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private NamespaceCustomerManagedKeyArgs $;

        public Builder() {
            $ = new NamespaceCustomerManagedKeyArgs();
        }

        public Builder(NamespaceCustomerManagedKeyArgs defaults) {
            $ = new NamespaceCustomerManagedKeyArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param infrastructureEncryptionEnabled Used to specify whether enable Infrastructure Encryption. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder infrastructureEncryptionEnabled(@Nullable Output<Boolean> infrastructureEncryptionEnabled) {
            $.infrastructureEncryptionEnabled = infrastructureEncryptionEnabled;
            return this;
        }

        /**
         * @param infrastructureEncryptionEnabled Used to specify whether enable Infrastructure Encryption. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder infrastructureEncryptionEnabled(Boolean infrastructureEncryptionEnabled) {
            return infrastructureEncryptionEnabled(Output.of(infrastructureEncryptionEnabled));
        }

        /**
         * @param keyVaultKeyId The ID of the Key Vault Key which should be used to Encrypt the data in this Service Bus Namespace.
         * 
         * @return builder
         * 
         */
        public Builder keyVaultKeyId(Output<String> keyVaultKeyId) {
            $.keyVaultKeyId = keyVaultKeyId;
            return this;
        }

        /**
         * @param keyVaultKeyId The ID of the Key Vault Key which should be used to Encrypt the data in this Service Bus Namespace.
         * 
         * @return builder
         * 
         */
        public Builder keyVaultKeyId(String keyVaultKeyId) {
            return keyVaultKeyId(Output.of(keyVaultKeyId));
        }

        /**
         * @param namespaceId The ID of the Service Bus namespace. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder namespaceId(Output<String> namespaceId) {
            $.namespaceId = namespaceId;
            return this;
        }

        /**
         * @param namespaceId The ID of the Service Bus namespace. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder namespaceId(String namespaceId) {
            return namespaceId(Output.of(namespaceId));
        }

        public NamespaceCustomerManagedKeyArgs build() {
            if ($.keyVaultKeyId == null) {
                throw new MissingRequiredPropertyException("NamespaceCustomerManagedKeyArgs", "keyVaultKeyId");
            }
            if ($.namespaceId == null) {
                throw new MissingRequiredPropertyException("NamespaceCustomerManagedKeyArgs", "namespaceId");
            }
            return $;
        }
    }

}
