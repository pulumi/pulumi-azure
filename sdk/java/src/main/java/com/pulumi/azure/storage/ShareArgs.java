// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.storage;

import com.pulumi.azure.storage.inputs.ShareAclArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ShareArgs extends com.pulumi.resources.ResourceArgs {

    public static final ShareArgs Empty = new ShareArgs();

    /**
     * The access tier of the File Share. Possible values are `Hot`, `Cool` and `TransactionOptimized`, `Premium`.
     * 
     * &gt; **Note:** The `FileStorage` `account_kind` of the `azure.storage.Account` requires `Premium` `access_tier`.
     * 
     */
    @Import(name="accessTier")
    private @Nullable Output<String> accessTier;

    /**
     * @return The access tier of the File Share. Possible values are `Hot`, `Cool` and `TransactionOptimized`, `Premium`.
     * 
     * &gt; **Note:** The `FileStorage` `account_kind` of the `azure.storage.Account` requires `Premium` `access_tier`.
     * 
     */
    public Optional<Output<String>> accessTier() {
        return Optional.ofNullable(this.accessTier);
    }

    /**
     * One or more `acl` blocks as defined below.
     * 
     */
    @Import(name="acls")
    private @Nullable Output<List<ShareAclArgs>> acls;

    /**
     * @return One or more `acl` blocks as defined below.
     * 
     */
    public Optional<Output<List<ShareAclArgs>>> acls() {
        return Optional.ofNullable(this.acls);
    }

    /**
     * The protocol used for the share. Possible values are `SMB` and `NFS`. The `SMB` indicates the share can be accessed by SMBv3.0, SMBv2.1 and REST. The `NFS` indicates the share can be accessed by NFSv4.1. Defaults to `SMB`. Changing this forces a new resource to be created.
     * 
     * &gt; **Note:** The `FileStorage` `account_kind` of the `azure.storage.Account` is required for the `NFS` protocol.
     * 
     */
    @Import(name="enabledProtocol")
    private @Nullable Output<String> enabledProtocol;

    /**
     * @return The protocol used for the share. Possible values are `SMB` and `NFS`. The `SMB` indicates the share can be accessed by SMBv3.0, SMBv2.1 and REST. The `NFS` indicates the share can be accessed by NFSv4.1. Defaults to `SMB`. Changing this forces a new resource to be created.
     * 
     * &gt; **Note:** The `FileStorage` `account_kind` of the `azure.storage.Account` is required for the `NFS` protocol.
     * 
     */
    public Optional<Output<String>> enabledProtocol() {
        return Optional.ofNullable(this.enabledProtocol);
    }

    /**
     * A mapping of MetaData for this File Share.
     * 
     */
    @Import(name="metadata")
    private @Nullable Output<Map<String,String>> metadata;

    /**
     * @return A mapping of MetaData for this File Share.
     * 
     */
    public Optional<Output<Map<String,String>>> metadata() {
        return Optional.ofNullable(this.metadata);
    }

    /**
     * The name of the share. Must be unique within the storage account where the share is located. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the share. Must be unique within the storage account where the share is located. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The maximum size of the share, in gigabytes.
     * 
     * &gt; **Note:** For Standard storage accounts, by default this must be `1` GB (or higher) and at most `5120` GB (`5` TB). This can be set to a value larger than `5120` GB if `large_file_share_enabled` is set to `true` in the parent `azure.storage.Account`.
     * 
     * &gt; **Note:** For Premium FileStorage storage accounts, this must be greater than `100` GB and at most `102400` GB (`100` TB).
     * 
     */
    @Import(name="quota", required=true)
    private Output<Integer> quota;

    /**
     * @return The maximum size of the share, in gigabytes.
     * 
     * &gt; **Note:** For Standard storage accounts, by default this must be `1` GB (or higher) and at most `5120` GB (`5` TB). This can be set to a value larger than `5120` GB if `large_file_share_enabled` is set to `true` in the parent `azure.storage.Account`.
     * 
     * &gt; **Note:** For Premium FileStorage storage accounts, this must be greater than `100` GB and at most `102400` GB (`100` TB).
     * 
     */
    public Output<Integer> quota() {
        return this.quota;
    }

    /**
     * Specifies the storage account in which to create the share. Changing this forces a new resource to be created.
     * 
     * &gt; **Note:** One of `storage_account_name` or `storage_account_id` must be specified. When specifying `storage_account_id` the resource will use the Resource Manager API, rather than the Data Plane API.
     * 
     */
    @Import(name="storageAccountId")
    private @Nullable Output<String> storageAccountId;

    /**
     * @return Specifies the storage account in which to create the share. Changing this forces a new resource to be created.
     * 
     * &gt; **Note:** One of `storage_account_name` or `storage_account_id` must be specified. When specifying `storage_account_id` the resource will use the Resource Manager API, rather than the Data Plane API.
     * 
     */
    public Optional<Output<String>> storageAccountId() {
        return Optional.ofNullable(this.storageAccountId);
    }

    /**
     * Specifies the storage account in which to create the share. Changing this forces a new resource to be created. This property is deprecated in favour of `storage_account_id`.
     * 
     * &gt; **Note:** Migrating from the deprecated `storage_account_name` to `storage_account_id` is supported without recreation. Any other change to either property will result in the resource being recreated.
     * 
     * @deprecated
     * This property has been deprecated and will be replaced by `storage_account_id` in version 5.0 of the provider.
     * 
     */
    @Deprecated /* This property has been deprecated and will be replaced by `storage_account_id` in version 5.0 of the provider. */
    @Import(name="storageAccountName")
    private @Nullable Output<String> storageAccountName;

    /**
     * @return Specifies the storage account in which to create the share. Changing this forces a new resource to be created. This property is deprecated in favour of `storage_account_id`.
     * 
     * &gt; **Note:** Migrating from the deprecated `storage_account_name` to `storage_account_id` is supported without recreation. Any other change to either property will result in the resource being recreated.
     * 
     * @deprecated
     * This property has been deprecated and will be replaced by `storage_account_id` in version 5.0 of the provider.
     * 
     */
    @Deprecated /* This property has been deprecated and will be replaced by `storage_account_id` in version 5.0 of the provider. */
    public Optional<Output<String>> storageAccountName() {
        return Optional.ofNullable(this.storageAccountName);
    }

    private ShareArgs() {}

    private ShareArgs(ShareArgs $) {
        this.accessTier = $.accessTier;
        this.acls = $.acls;
        this.enabledProtocol = $.enabledProtocol;
        this.metadata = $.metadata;
        this.name = $.name;
        this.quota = $.quota;
        this.storageAccountId = $.storageAccountId;
        this.storageAccountName = $.storageAccountName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ShareArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ShareArgs $;

        public Builder() {
            $ = new ShareArgs();
        }

        public Builder(ShareArgs defaults) {
            $ = new ShareArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param accessTier The access tier of the File Share. Possible values are `Hot`, `Cool` and `TransactionOptimized`, `Premium`.
         * 
         * &gt; **Note:** The `FileStorage` `account_kind` of the `azure.storage.Account` requires `Premium` `access_tier`.
         * 
         * @return builder
         * 
         */
        public Builder accessTier(@Nullable Output<String> accessTier) {
            $.accessTier = accessTier;
            return this;
        }

        /**
         * @param accessTier The access tier of the File Share. Possible values are `Hot`, `Cool` and `TransactionOptimized`, `Premium`.
         * 
         * &gt; **Note:** The `FileStorage` `account_kind` of the `azure.storage.Account` requires `Premium` `access_tier`.
         * 
         * @return builder
         * 
         */
        public Builder accessTier(String accessTier) {
            return accessTier(Output.of(accessTier));
        }

        /**
         * @param acls One or more `acl` blocks as defined below.
         * 
         * @return builder
         * 
         */
        public Builder acls(@Nullable Output<List<ShareAclArgs>> acls) {
            $.acls = acls;
            return this;
        }

        /**
         * @param acls One or more `acl` blocks as defined below.
         * 
         * @return builder
         * 
         */
        public Builder acls(List<ShareAclArgs> acls) {
            return acls(Output.of(acls));
        }

        /**
         * @param acls One or more `acl` blocks as defined below.
         * 
         * @return builder
         * 
         */
        public Builder acls(ShareAclArgs... acls) {
            return acls(List.of(acls));
        }

        /**
         * @param enabledProtocol The protocol used for the share. Possible values are `SMB` and `NFS`. The `SMB` indicates the share can be accessed by SMBv3.0, SMBv2.1 and REST. The `NFS` indicates the share can be accessed by NFSv4.1. Defaults to `SMB`. Changing this forces a new resource to be created.
         * 
         * &gt; **Note:** The `FileStorage` `account_kind` of the `azure.storage.Account` is required for the `NFS` protocol.
         * 
         * @return builder
         * 
         */
        public Builder enabledProtocol(@Nullable Output<String> enabledProtocol) {
            $.enabledProtocol = enabledProtocol;
            return this;
        }

        /**
         * @param enabledProtocol The protocol used for the share. Possible values are `SMB` and `NFS`. The `SMB` indicates the share can be accessed by SMBv3.0, SMBv2.1 and REST. The `NFS` indicates the share can be accessed by NFSv4.1. Defaults to `SMB`. Changing this forces a new resource to be created.
         * 
         * &gt; **Note:** The `FileStorage` `account_kind` of the `azure.storage.Account` is required for the `NFS` protocol.
         * 
         * @return builder
         * 
         */
        public Builder enabledProtocol(String enabledProtocol) {
            return enabledProtocol(Output.of(enabledProtocol));
        }

        /**
         * @param metadata A mapping of MetaData for this File Share.
         * 
         * @return builder
         * 
         */
        public Builder metadata(@Nullable Output<Map<String,String>> metadata) {
            $.metadata = metadata;
            return this;
        }

        /**
         * @param metadata A mapping of MetaData for this File Share.
         * 
         * @return builder
         * 
         */
        public Builder metadata(Map<String,String> metadata) {
            return metadata(Output.of(metadata));
        }

        /**
         * @param name The name of the share. Must be unique within the storage account where the share is located. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the share. Must be unique within the storage account where the share is located. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param quota The maximum size of the share, in gigabytes.
         * 
         * &gt; **Note:** For Standard storage accounts, by default this must be `1` GB (or higher) and at most `5120` GB (`5` TB). This can be set to a value larger than `5120` GB if `large_file_share_enabled` is set to `true` in the parent `azure.storage.Account`.
         * 
         * &gt; **Note:** For Premium FileStorage storage accounts, this must be greater than `100` GB and at most `102400` GB (`100` TB).
         * 
         * @return builder
         * 
         */
        public Builder quota(Output<Integer> quota) {
            $.quota = quota;
            return this;
        }

        /**
         * @param quota The maximum size of the share, in gigabytes.
         * 
         * &gt; **Note:** For Standard storage accounts, by default this must be `1` GB (or higher) and at most `5120` GB (`5` TB). This can be set to a value larger than `5120` GB if `large_file_share_enabled` is set to `true` in the parent `azure.storage.Account`.
         * 
         * &gt; **Note:** For Premium FileStorage storage accounts, this must be greater than `100` GB and at most `102400` GB (`100` TB).
         * 
         * @return builder
         * 
         */
        public Builder quota(Integer quota) {
            return quota(Output.of(quota));
        }

        /**
         * @param storageAccountId Specifies the storage account in which to create the share. Changing this forces a new resource to be created.
         * 
         * &gt; **Note:** One of `storage_account_name` or `storage_account_id` must be specified. When specifying `storage_account_id` the resource will use the Resource Manager API, rather than the Data Plane API.
         * 
         * @return builder
         * 
         */
        public Builder storageAccountId(@Nullable Output<String> storageAccountId) {
            $.storageAccountId = storageAccountId;
            return this;
        }

        /**
         * @param storageAccountId Specifies the storage account in which to create the share. Changing this forces a new resource to be created.
         * 
         * &gt; **Note:** One of `storage_account_name` or `storage_account_id` must be specified. When specifying `storage_account_id` the resource will use the Resource Manager API, rather than the Data Plane API.
         * 
         * @return builder
         * 
         */
        public Builder storageAccountId(String storageAccountId) {
            return storageAccountId(Output.of(storageAccountId));
        }

        /**
         * @param storageAccountName Specifies the storage account in which to create the share. Changing this forces a new resource to be created. This property is deprecated in favour of `storage_account_id`.
         * 
         * &gt; **Note:** Migrating from the deprecated `storage_account_name` to `storage_account_id` is supported without recreation. Any other change to either property will result in the resource being recreated.
         * 
         * @return builder
         * 
         * @deprecated
         * This property has been deprecated and will be replaced by `storage_account_id` in version 5.0 of the provider.
         * 
         */
        @Deprecated /* This property has been deprecated and will be replaced by `storage_account_id` in version 5.0 of the provider. */
        public Builder storageAccountName(@Nullable Output<String> storageAccountName) {
            $.storageAccountName = storageAccountName;
            return this;
        }

        /**
         * @param storageAccountName Specifies the storage account in which to create the share. Changing this forces a new resource to be created. This property is deprecated in favour of `storage_account_id`.
         * 
         * &gt; **Note:** Migrating from the deprecated `storage_account_name` to `storage_account_id` is supported without recreation. Any other change to either property will result in the resource being recreated.
         * 
         * @return builder
         * 
         * @deprecated
         * This property has been deprecated and will be replaced by `storage_account_id` in version 5.0 of the provider.
         * 
         */
        @Deprecated /* This property has been deprecated and will be replaced by `storage_account_id` in version 5.0 of the provider. */
        public Builder storageAccountName(String storageAccountName) {
            return storageAccountName(Output.of(storageAccountName));
        }

        public ShareArgs build() {
            if ($.quota == null) {
                throw new MissingRequiredPropertyException("ShareArgs", "quota");
            }
            return $;
        }
    }

}
