// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.datafactory.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class IntegrationRuntimeSsisPackageStoreArgs extends com.pulumi.resources.ResourceArgs {

    public static final IntegrationRuntimeSsisPackageStoreArgs Empty = new IntegrationRuntimeSsisPackageStoreArgs();

    /**
     * Name of the Linked Service to associate with the packages.
     * 
     */
    @Import(name="linkedServiceName", required=true)
    private Output<String> linkedServiceName;

    /**
     * @return Name of the Linked Service to associate with the packages.
     * 
     */
    public Output<String> linkedServiceName() {
        return this.linkedServiceName;
    }

    /**
     * Name of the package store.
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    /**
     * @return Name of the package store.
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    private IntegrationRuntimeSsisPackageStoreArgs() {}

    private IntegrationRuntimeSsisPackageStoreArgs(IntegrationRuntimeSsisPackageStoreArgs $) {
        this.linkedServiceName = $.linkedServiceName;
        this.name = $.name;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(IntegrationRuntimeSsisPackageStoreArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private IntegrationRuntimeSsisPackageStoreArgs $;

        public Builder() {
            $ = new IntegrationRuntimeSsisPackageStoreArgs();
        }

        public Builder(IntegrationRuntimeSsisPackageStoreArgs defaults) {
            $ = new IntegrationRuntimeSsisPackageStoreArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param linkedServiceName Name of the Linked Service to associate with the packages.
         * 
         * @return builder
         * 
         */
        public Builder linkedServiceName(Output<String> linkedServiceName) {
            $.linkedServiceName = linkedServiceName;
            return this;
        }

        /**
         * @param linkedServiceName Name of the Linked Service to associate with the packages.
         * 
         * @return builder
         * 
         */
        public Builder linkedServiceName(String linkedServiceName) {
            return linkedServiceName(Output.of(linkedServiceName));
        }

        /**
         * @param name Name of the package store.
         * 
         * @return builder
         * 
         */
        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Name of the package store.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        public IntegrationRuntimeSsisPackageStoreArgs build() {
            if ($.linkedServiceName == null) {
                throw new MissingRequiredPropertyException("IntegrationRuntimeSsisPackageStoreArgs", "linkedServiceName");
            }
            if ($.name == null) {
                throw new MissingRequiredPropertyException("IntegrationRuntimeSsisPackageStoreArgs", "name");
            }
            return $;
        }
    }

}
