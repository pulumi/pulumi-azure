// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.nginx.outputs;

import com.pulumi.azure.nginx.outputs.DeploymentConfigurationConfigFile;
import com.pulumi.azure.nginx.outputs.DeploymentConfigurationProtectedFile;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class DeploymentConfiguration {
    private @Nullable List<DeploymentConfigurationConfigFile> configFiles;
    private @Nullable String packageData;
    private @Nullable List<DeploymentConfigurationProtectedFile> protectedFiles;
    private String rootFile;

    private DeploymentConfiguration() {}
    public List<DeploymentConfigurationConfigFile> configFiles() {
        return this.configFiles == null ? List.of() : this.configFiles;
    }
    public Optional<String> packageData() {
        return Optional.ofNullable(this.packageData);
    }
    public List<DeploymentConfigurationProtectedFile> protectedFiles() {
        return this.protectedFiles == null ? List.of() : this.protectedFiles;
    }
    public String rootFile() {
        return this.rootFile;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DeploymentConfiguration defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<DeploymentConfigurationConfigFile> configFiles;
        private @Nullable String packageData;
        private @Nullable List<DeploymentConfigurationProtectedFile> protectedFiles;
        private String rootFile;
        public Builder() {}
        public Builder(DeploymentConfiguration defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.configFiles = defaults.configFiles;
    	      this.packageData = defaults.packageData;
    	      this.protectedFiles = defaults.protectedFiles;
    	      this.rootFile = defaults.rootFile;
        }

        @CustomType.Setter
        public Builder configFiles(@Nullable List<DeploymentConfigurationConfigFile> configFiles) {

            this.configFiles = configFiles;
            return this;
        }
        public Builder configFiles(DeploymentConfigurationConfigFile... configFiles) {
            return configFiles(List.of(configFiles));
        }
        @CustomType.Setter
        public Builder packageData(@Nullable String packageData) {

            this.packageData = packageData;
            return this;
        }
        @CustomType.Setter
        public Builder protectedFiles(@Nullable List<DeploymentConfigurationProtectedFile> protectedFiles) {

            this.protectedFiles = protectedFiles;
            return this;
        }
        public Builder protectedFiles(DeploymentConfigurationProtectedFile... protectedFiles) {
            return protectedFiles(List.of(protectedFiles));
        }
        @CustomType.Setter
        public Builder rootFile(String rootFile) {
            if (rootFile == null) {
              throw new MissingRequiredPropertyException("DeploymentConfiguration", "rootFile");
            }
            this.rootFile = rootFile;
            return this;
        }
        public DeploymentConfiguration build() {
            final var _resultValue = new DeploymentConfiguration();
            _resultValue.configFiles = configFiles;
            _resultValue.packageData = packageData;
            _resultValue.protectedFiles = protectedFiles;
            _resultValue.rootFile = rootFile;
            return _resultValue;
        }
    }
}
