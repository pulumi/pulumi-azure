// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.media.inputs;

import com.pulumi.azure.media.inputs.StreamingPolicyCommonEncryptionCbcsDefaultContentKeyArgs;
import com.pulumi.azure.media.inputs.StreamingPolicyCommonEncryptionCbcsDrmFairplayArgs;
import com.pulumi.azure.media.inputs.StreamingPolicyCommonEncryptionCbcsEnabledProtocolsArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class StreamingPolicyCommonEncryptionCbcsArgs extends com.pulumi.resources.ResourceArgs {

    public static final StreamingPolicyCommonEncryptionCbcsArgs Empty = new StreamingPolicyCommonEncryptionCbcsArgs();

    /**
     * A `default_content_key` block as defined below. Changing this forces a new Streaming Policy to be created.
     * 
     */
    @Import(name="defaultContentKey")
    private @Nullable Output<StreamingPolicyCommonEncryptionCbcsDefaultContentKeyArgs> defaultContentKey;

    /**
     * @return A `default_content_key` block as defined below. Changing this forces a new Streaming Policy to be created.
     * 
     */
    public Optional<Output<StreamingPolicyCommonEncryptionCbcsDefaultContentKeyArgs>> defaultContentKey() {
        return Optional.ofNullable(this.defaultContentKey);
    }

    /**
     * A `drm_fairplay` block as defined below. Changing this forces a new Streaming Policy to be created.
     * 
     */
    @Import(name="drmFairplay")
    private @Nullable Output<StreamingPolicyCommonEncryptionCbcsDrmFairplayArgs> drmFairplay;

    /**
     * @return A `drm_fairplay` block as defined below. Changing this forces a new Streaming Policy to be created.
     * 
     */
    public Optional<Output<StreamingPolicyCommonEncryptionCbcsDrmFairplayArgs>> drmFairplay() {
        return Optional.ofNullable(this.drmFairplay);
    }

    /**
     * A `enabled_protocols` block as defined below. Changing this forces a new Streaming Policy to be created.
     * 
     */
    @Import(name="enabledProtocols")
    private @Nullable Output<StreamingPolicyCommonEncryptionCbcsEnabledProtocolsArgs> enabledProtocols;

    /**
     * @return A `enabled_protocols` block as defined below. Changing this forces a new Streaming Policy to be created.
     * 
     */
    public Optional<Output<StreamingPolicyCommonEncryptionCbcsEnabledProtocolsArgs>> enabledProtocols() {
        return Optional.ofNullable(this.enabledProtocols);
    }

    private StreamingPolicyCommonEncryptionCbcsArgs() {}

    private StreamingPolicyCommonEncryptionCbcsArgs(StreamingPolicyCommonEncryptionCbcsArgs $) {
        this.defaultContentKey = $.defaultContentKey;
        this.drmFairplay = $.drmFairplay;
        this.enabledProtocols = $.enabledProtocols;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(StreamingPolicyCommonEncryptionCbcsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private StreamingPolicyCommonEncryptionCbcsArgs $;

        public Builder() {
            $ = new StreamingPolicyCommonEncryptionCbcsArgs();
        }

        public Builder(StreamingPolicyCommonEncryptionCbcsArgs defaults) {
            $ = new StreamingPolicyCommonEncryptionCbcsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param defaultContentKey A `default_content_key` block as defined below. Changing this forces a new Streaming Policy to be created.
         * 
         * @return builder
         * 
         */
        public Builder defaultContentKey(@Nullable Output<StreamingPolicyCommonEncryptionCbcsDefaultContentKeyArgs> defaultContentKey) {
            $.defaultContentKey = defaultContentKey;
            return this;
        }

        /**
         * @param defaultContentKey A `default_content_key` block as defined below. Changing this forces a new Streaming Policy to be created.
         * 
         * @return builder
         * 
         */
        public Builder defaultContentKey(StreamingPolicyCommonEncryptionCbcsDefaultContentKeyArgs defaultContentKey) {
            return defaultContentKey(Output.of(defaultContentKey));
        }

        /**
         * @param drmFairplay A `drm_fairplay` block as defined below. Changing this forces a new Streaming Policy to be created.
         * 
         * @return builder
         * 
         */
        public Builder drmFairplay(@Nullable Output<StreamingPolicyCommonEncryptionCbcsDrmFairplayArgs> drmFairplay) {
            $.drmFairplay = drmFairplay;
            return this;
        }

        /**
         * @param drmFairplay A `drm_fairplay` block as defined below. Changing this forces a new Streaming Policy to be created.
         * 
         * @return builder
         * 
         */
        public Builder drmFairplay(StreamingPolicyCommonEncryptionCbcsDrmFairplayArgs drmFairplay) {
            return drmFairplay(Output.of(drmFairplay));
        }

        /**
         * @param enabledProtocols A `enabled_protocols` block as defined below. Changing this forces a new Streaming Policy to be created.
         * 
         * @return builder
         * 
         */
        public Builder enabledProtocols(@Nullable Output<StreamingPolicyCommonEncryptionCbcsEnabledProtocolsArgs> enabledProtocols) {
            $.enabledProtocols = enabledProtocols;
            return this;
        }

        /**
         * @param enabledProtocols A `enabled_protocols` block as defined below. Changing this forces a new Streaming Policy to be created.
         * 
         * @return builder
         * 
         */
        public Builder enabledProtocols(StreamingPolicyCommonEncryptionCbcsEnabledProtocolsArgs enabledProtocols) {
            return enabledProtocols(Output.of(enabledProtocols));
        }

        public StreamingPolicyCommonEncryptionCbcsArgs build() {
            return $;
        }
    }

}
