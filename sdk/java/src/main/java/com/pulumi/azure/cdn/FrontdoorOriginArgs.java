// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.cdn;

import com.pulumi.azure.cdn.inputs.FrontdoorOriginPrivateLinkArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class FrontdoorOriginArgs extends com.pulumi.resources.ResourceArgs {

    public static final FrontdoorOriginArgs Empty = new FrontdoorOriginArgs();

    /**
     * The ID of the Front Door Origin Group within which this Front Door Origin should exist. Changing this forces a new Front Door Origin to be created.
     * 
     */
    @Import(name="cdnFrontdoorOriginGroupId", required=true)
    private Output<String> cdnFrontdoorOriginGroupId;

    /**
     * @return The ID of the Front Door Origin Group within which this Front Door Origin should exist. Changing this forces a new Front Door Origin to be created.
     * 
     */
    public Output<String> cdnFrontdoorOriginGroupId() {
        return this.cdnFrontdoorOriginGroupId;
    }

    /**
     * Specifies whether certificate name checks are enabled for this origin.
     * 
     */
    @Import(name="certificateNameCheckEnabled", required=true)
    private Output<Boolean> certificateNameCheckEnabled;

    /**
     * @return Specifies whether certificate name checks are enabled for this origin.
     * 
     */
    public Output<Boolean> certificateNameCheckEnabled() {
        return this.certificateNameCheckEnabled;
    }

    /**
     * Should the origin be enabled? Possible values are `true` or `false`. Defaults to `true`.
     * 
     * &gt; **NOTE:** The `enabled` field will need to be explicitly set until the 4.0 provider is released due to the deprecation of the `health_probes_enabled` property in version 3.x of the AzureRM Provider.
     * 
     */
    @Import(name="enabled")
    private @Nullable Output<Boolean> enabled;

    /**
     * @return Should the origin be enabled? Possible values are `true` or `false`. Defaults to `true`.
     * 
     * &gt; **NOTE:** The `enabled` field will need to be explicitly set until the 4.0 provider is released due to the deprecation of the `health_probes_enabled` property in version 3.x of the AzureRM Provider.
     * 
     */
    public Optional<Output<Boolean>> enabled() {
        return Optional.ofNullable(this.enabled);
    }

    /**
     * @deprecated
     * `health_probes_enabled` will be removed in favour of the `enabled` property in version 4.0 of the AzureRM Provider.
     * 
     */
    @Deprecated /* `health_probes_enabled` will be removed in favour of the `enabled` property in version 4.0 of the AzureRM Provider. */
    @Import(name="healthProbesEnabled")
    private @Nullable Output<Boolean> healthProbesEnabled;

    /**
     * @deprecated
     * `health_probes_enabled` will be removed in favour of the `enabled` property in version 4.0 of the AzureRM Provider.
     * 
     */
    @Deprecated /* `health_probes_enabled` will be removed in favour of the `enabled` property in version 4.0 of the AzureRM Provider. */
    public Optional<Output<Boolean>> healthProbesEnabled() {
        return Optional.ofNullable(this.healthProbesEnabled);
    }

    /**
     * The IPv4 address, IPv6 address or Domain name of the Origin.
     * 
     * !&gt; **IMPORTANT:** This must be unique across all Front Door Origins within a Front Door Endpoint.
     * 
     */
    @Import(name="hostName", required=true)
    private Output<String> hostName;

    /**
     * @return The IPv4 address, IPv6 address or Domain name of the Origin.
     * 
     * !&gt; **IMPORTANT:** This must be unique across all Front Door Origins within a Front Door Endpoint.
     * 
     */
    public Output<String> hostName() {
        return this.hostName;
    }

    /**
     * The value of the HTTP port. Must be between `1` and `65535`. Defaults to `80`.
     * 
     */
    @Import(name="httpPort")
    private @Nullable Output<Integer> httpPort;

    /**
     * @return The value of the HTTP port. Must be between `1` and `65535`. Defaults to `80`.
     * 
     */
    public Optional<Output<Integer>> httpPort() {
        return Optional.ofNullable(this.httpPort);
    }

    /**
     * The value of the HTTPS port. Must be between `1` and `65535`. Defaults to `443`.
     * 
     */
    @Import(name="httpsPort")
    private @Nullable Output<Integer> httpsPort;

    /**
     * @return The value of the HTTPS port. Must be between `1` and `65535`. Defaults to `443`.
     * 
     */
    public Optional<Output<Integer>> httpsPort() {
        return Optional.ofNullable(this.httpsPort);
    }

    /**
     * The name which should be used for this Front Door Origin. Changing this forces a new Front Door Origin to be created.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name which should be used for this Front Door Origin. Changing this forces a new Front Door Origin to be created.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The host header value (an IPv4 address, IPv6 address or Domain name) which is sent to the origin with each request. If unspecified the hostname from the request will be used.
     * 
     * &gt; Azure Front Door Origins, such as Web Apps, Blob Storage, and Cloud Services require this host header value to match the origin&#39;s hostname. This field&#39;s value overrides the host header defined in the Front Door Endpoint. For more information on how to properly set the origin host header value please see the [product documentation](https://docs.microsoft.com/azure/frontdoor/origin?pivots=front-door-standard-premium#origin-host-header).
     * 
     */
    @Import(name="originHostHeader")
    private @Nullable Output<String> originHostHeader;

    /**
     * @return The host header value (an IPv4 address, IPv6 address or Domain name) which is sent to the origin with each request. If unspecified the hostname from the request will be used.
     * 
     * &gt; Azure Front Door Origins, such as Web Apps, Blob Storage, and Cloud Services require this host header value to match the origin&#39;s hostname. This field&#39;s value overrides the host header defined in the Front Door Endpoint. For more information on how to properly set the origin host header value please see the [product documentation](https://docs.microsoft.com/azure/frontdoor/origin?pivots=front-door-standard-premium#origin-host-header).
     * 
     */
    public Optional<Output<String>> originHostHeader() {
        return Optional.ofNullable(this.originHostHeader);
    }

    /**
     * Priority of origin in given origin group for load balancing. Higher priorities will not be used for load balancing if any lower priority origin is healthy. Must be between `1` and `5` (inclusive). Defaults to `1`.
     * 
     */
    @Import(name="priority")
    private @Nullable Output<Integer> priority;

    /**
     * @return Priority of origin in given origin group for load balancing. Higher priorities will not be used for load balancing if any lower priority origin is healthy. Must be between `1` and `5` (inclusive). Defaults to `1`.
     * 
     */
    public Optional<Output<Integer>> priority() {
        return Optional.ofNullable(this.priority);
    }

    /**
     * A `private_link` block as defined below.
     * 
     * &gt; **NOTE:** Private Link requires that the Front Door Profile this Origin is hosted within is using the SKU `Premium_AzureFrontDoor` and that the `certificate_name_check_enabled` field is set to `true`.
     * 
     */
    @Import(name="privateLink")
    private @Nullable Output<FrontdoorOriginPrivateLinkArgs> privateLink;

    /**
     * @return A `private_link` block as defined below.
     * 
     * &gt; **NOTE:** Private Link requires that the Front Door Profile this Origin is hosted within is using the SKU `Premium_AzureFrontDoor` and that the `certificate_name_check_enabled` field is set to `true`.
     * 
     */
    public Optional<Output<FrontdoorOriginPrivateLinkArgs>> privateLink() {
        return Optional.ofNullable(this.privateLink);
    }

    /**
     * The weight of the origin in a given origin group for load balancing. Must be between `1` and `1000`. Defaults to `500`.
     * 
     */
    @Import(name="weight")
    private @Nullable Output<Integer> weight;

    /**
     * @return The weight of the origin in a given origin group for load balancing. Must be between `1` and `1000`. Defaults to `500`.
     * 
     */
    public Optional<Output<Integer>> weight() {
        return Optional.ofNullable(this.weight);
    }

    private FrontdoorOriginArgs() {}

    private FrontdoorOriginArgs(FrontdoorOriginArgs $) {
        this.cdnFrontdoorOriginGroupId = $.cdnFrontdoorOriginGroupId;
        this.certificateNameCheckEnabled = $.certificateNameCheckEnabled;
        this.enabled = $.enabled;
        this.healthProbesEnabled = $.healthProbesEnabled;
        this.hostName = $.hostName;
        this.httpPort = $.httpPort;
        this.httpsPort = $.httpsPort;
        this.name = $.name;
        this.originHostHeader = $.originHostHeader;
        this.priority = $.priority;
        this.privateLink = $.privateLink;
        this.weight = $.weight;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FrontdoorOriginArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FrontdoorOriginArgs $;

        public Builder() {
            $ = new FrontdoorOriginArgs();
        }

        public Builder(FrontdoorOriginArgs defaults) {
            $ = new FrontdoorOriginArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param cdnFrontdoorOriginGroupId The ID of the Front Door Origin Group within which this Front Door Origin should exist. Changing this forces a new Front Door Origin to be created.
         * 
         * @return builder
         * 
         */
        public Builder cdnFrontdoorOriginGroupId(Output<String> cdnFrontdoorOriginGroupId) {
            $.cdnFrontdoorOriginGroupId = cdnFrontdoorOriginGroupId;
            return this;
        }

        /**
         * @param cdnFrontdoorOriginGroupId The ID of the Front Door Origin Group within which this Front Door Origin should exist. Changing this forces a new Front Door Origin to be created.
         * 
         * @return builder
         * 
         */
        public Builder cdnFrontdoorOriginGroupId(String cdnFrontdoorOriginGroupId) {
            return cdnFrontdoorOriginGroupId(Output.of(cdnFrontdoorOriginGroupId));
        }

        /**
         * @param certificateNameCheckEnabled Specifies whether certificate name checks are enabled for this origin.
         * 
         * @return builder
         * 
         */
        public Builder certificateNameCheckEnabled(Output<Boolean> certificateNameCheckEnabled) {
            $.certificateNameCheckEnabled = certificateNameCheckEnabled;
            return this;
        }

        /**
         * @param certificateNameCheckEnabled Specifies whether certificate name checks are enabled for this origin.
         * 
         * @return builder
         * 
         */
        public Builder certificateNameCheckEnabled(Boolean certificateNameCheckEnabled) {
            return certificateNameCheckEnabled(Output.of(certificateNameCheckEnabled));
        }

        /**
         * @param enabled Should the origin be enabled? Possible values are `true` or `false`. Defaults to `true`.
         * 
         * &gt; **NOTE:** The `enabled` field will need to be explicitly set until the 4.0 provider is released due to the deprecation of the `health_probes_enabled` property in version 3.x of the AzureRM Provider.
         * 
         * @return builder
         * 
         */
        public Builder enabled(@Nullable Output<Boolean> enabled) {
            $.enabled = enabled;
            return this;
        }

        /**
         * @param enabled Should the origin be enabled? Possible values are `true` or `false`. Defaults to `true`.
         * 
         * &gt; **NOTE:** The `enabled` field will need to be explicitly set until the 4.0 provider is released due to the deprecation of the `health_probes_enabled` property in version 3.x of the AzureRM Provider.
         * 
         * @return builder
         * 
         */
        public Builder enabled(Boolean enabled) {
            return enabled(Output.of(enabled));
        }

        /**
         * @return builder
         * 
         * @deprecated
         * `health_probes_enabled` will be removed in favour of the `enabled` property in version 4.0 of the AzureRM Provider.
         * 
         */
        @Deprecated /* `health_probes_enabled` will be removed in favour of the `enabled` property in version 4.0 of the AzureRM Provider. */
        public Builder healthProbesEnabled(@Nullable Output<Boolean> healthProbesEnabled) {
            $.healthProbesEnabled = healthProbesEnabled;
            return this;
        }

        /**
         * @return builder
         * 
         * @deprecated
         * `health_probes_enabled` will be removed in favour of the `enabled` property in version 4.0 of the AzureRM Provider.
         * 
         */
        @Deprecated /* `health_probes_enabled` will be removed in favour of the `enabled` property in version 4.0 of the AzureRM Provider. */
        public Builder healthProbesEnabled(Boolean healthProbesEnabled) {
            return healthProbesEnabled(Output.of(healthProbesEnabled));
        }

        /**
         * @param hostName The IPv4 address, IPv6 address or Domain name of the Origin.
         * 
         * !&gt; **IMPORTANT:** This must be unique across all Front Door Origins within a Front Door Endpoint.
         * 
         * @return builder
         * 
         */
        public Builder hostName(Output<String> hostName) {
            $.hostName = hostName;
            return this;
        }

        /**
         * @param hostName The IPv4 address, IPv6 address or Domain name of the Origin.
         * 
         * !&gt; **IMPORTANT:** This must be unique across all Front Door Origins within a Front Door Endpoint.
         * 
         * @return builder
         * 
         */
        public Builder hostName(String hostName) {
            return hostName(Output.of(hostName));
        }

        /**
         * @param httpPort The value of the HTTP port. Must be between `1` and `65535`. Defaults to `80`.
         * 
         * @return builder
         * 
         */
        public Builder httpPort(@Nullable Output<Integer> httpPort) {
            $.httpPort = httpPort;
            return this;
        }

        /**
         * @param httpPort The value of the HTTP port. Must be between `1` and `65535`. Defaults to `80`.
         * 
         * @return builder
         * 
         */
        public Builder httpPort(Integer httpPort) {
            return httpPort(Output.of(httpPort));
        }

        /**
         * @param httpsPort The value of the HTTPS port. Must be between `1` and `65535`. Defaults to `443`.
         * 
         * @return builder
         * 
         */
        public Builder httpsPort(@Nullable Output<Integer> httpsPort) {
            $.httpsPort = httpsPort;
            return this;
        }

        /**
         * @param httpsPort The value of the HTTPS port. Must be between `1` and `65535`. Defaults to `443`.
         * 
         * @return builder
         * 
         */
        public Builder httpsPort(Integer httpsPort) {
            return httpsPort(Output.of(httpsPort));
        }

        /**
         * @param name The name which should be used for this Front Door Origin. Changing this forces a new Front Door Origin to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name which should be used for this Front Door Origin. Changing this forces a new Front Door Origin to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param originHostHeader The host header value (an IPv4 address, IPv6 address or Domain name) which is sent to the origin with each request. If unspecified the hostname from the request will be used.
         * 
         * &gt; Azure Front Door Origins, such as Web Apps, Blob Storage, and Cloud Services require this host header value to match the origin&#39;s hostname. This field&#39;s value overrides the host header defined in the Front Door Endpoint. For more information on how to properly set the origin host header value please see the [product documentation](https://docs.microsoft.com/azure/frontdoor/origin?pivots=front-door-standard-premium#origin-host-header).
         * 
         * @return builder
         * 
         */
        public Builder originHostHeader(@Nullable Output<String> originHostHeader) {
            $.originHostHeader = originHostHeader;
            return this;
        }

        /**
         * @param originHostHeader The host header value (an IPv4 address, IPv6 address or Domain name) which is sent to the origin with each request. If unspecified the hostname from the request will be used.
         * 
         * &gt; Azure Front Door Origins, such as Web Apps, Blob Storage, and Cloud Services require this host header value to match the origin&#39;s hostname. This field&#39;s value overrides the host header defined in the Front Door Endpoint. For more information on how to properly set the origin host header value please see the [product documentation](https://docs.microsoft.com/azure/frontdoor/origin?pivots=front-door-standard-premium#origin-host-header).
         * 
         * @return builder
         * 
         */
        public Builder originHostHeader(String originHostHeader) {
            return originHostHeader(Output.of(originHostHeader));
        }

        /**
         * @param priority Priority of origin in given origin group for load balancing. Higher priorities will not be used for load balancing if any lower priority origin is healthy. Must be between `1` and `5` (inclusive). Defaults to `1`.
         * 
         * @return builder
         * 
         */
        public Builder priority(@Nullable Output<Integer> priority) {
            $.priority = priority;
            return this;
        }

        /**
         * @param priority Priority of origin in given origin group for load balancing. Higher priorities will not be used for load balancing if any lower priority origin is healthy. Must be between `1` and `5` (inclusive). Defaults to `1`.
         * 
         * @return builder
         * 
         */
        public Builder priority(Integer priority) {
            return priority(Output.of(priority));
        }

        /**
         * @param privateLink A `private_link` block as defined below.
         * 
         * &gt; **NOTE:** Private Link requires that the Front Door Profile this Origin is hosted within is using the SKU `Premium_AzureFrontDoor` and that the `certificate_name_check_enabled` field is set to `true`.
         * 
         * @return builder
         * 
         */
        public Builder privateLink(@Nullable Output<FrontdoorOriginPrivateLinkArgs> privateLink) {
            $.privateLink = privateLink;
            return this;
        }

        /**
         * @param privateLink A `private_link` block as defined below.
         * 
         * &gt; **NOTE:** Private Link requires that the Front Door Profile this Origin is hosted within is using the SKU `Premium_AzureFrontDoor` and that the `certificate_name_check_enabled` field is set to `true`.
         * 
         * @return builder
         * 
         */
        public Builder privateLink(FrontdoorOriginPrivateLinkArgs privateLink) {
            return privateLink(Output.of(privateLink));
        }

        /**
         * @param weight The weight of the origin in a given origin group for load balancing. Must be between `1` and `1000`. Defaults to `500`.
         * 
         * @return builder
         * 
         */
        public Builder weight(@Nullable Output<Integer> weight) {
            $.weight = weight;
            return this;
        }

        /**
         * @param weight The weight of the origin in a given origin group for load balancing. Must be between `1` and `1000`. Defaults to `500`.
         * 
         * @return builder
         * 
         */
        public Builder weight(Integer weight) {
            return weight(Output.of(weight));
        }

        public FrontdoorOriginArgs build() {
            if ($.cdnFrontdoorOriginGroupId == null) {
                throw new MissingRequiredPropertyException("FrontdoorOriginArgs", "cdnFrontdoorOriginGroupId");
            }
            if ($.certificateNameCheckEnabled == null) {
                throw new MissingRequiredPropertyException("FrontdoorOriginArgs", "certificateNameCheckEnabled");
            }
            if ($.hostName == null) {
                throw new MissingRequiredPropertyException("FrontdoorOriginArgs", "hostName");
            }
            return $;
        }
    }

}
