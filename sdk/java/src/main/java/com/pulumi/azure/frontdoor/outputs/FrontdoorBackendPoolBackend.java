// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.frontdoor.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class FrontdoorBackendPoolBackend {
    /**
     * @return Location of the backend (IP address or FQDN)
     * 
     */
    private final String address;
    /**
     * @return Specifies if the backend is enabled or not. Valid options are `true` or `false`. Defaults to `true`.
     * 
     */
    private final @Nullable Boolean enabled;
    /**
     * @return The value to use as the host header sent to the backend.
     * 
     */
    private final String hostHeader;
    /**
     * @return The HTTP TCP port number. Possible values are between `1` - `65535`.
     * 
     */
    private final Integer httpPort;
    /**
     * @return The HTTPS TCP port number. Possible values are between `1` - `65535`.
     * 
     */
    private final Integer httpsPort;
    /**
     * @return Priority to use for load balancing. Higher priorities will not be used for load balancing if any lower priority backend is healthy. Defaults to `1`.
     * 
     */
    private final @Nullable Integer priority;
    /**
     * @return Weight of this endpoint for load balancing purposes. Defaults to `50`.
     * 
     */
    private final @Nullable Integer weight;

    @CustomType.Constructor
    private FrontdoorBackendPoolBackend(
        @CustomType.Parameter("address") String address,
        @CustomType.Parameter("enabled") @Nullable Boolean enabled,
        @CustomType.Parameter("hostHeader") String hostHeader,
        @CustomType.Parameter("httpPort") Integer httpPort,
        @CustomType.Parameter("httpsPort") Integer httpsPort,
        @CustomType.Parameter("priority") @Nullable Integer priority,
        @CustomType.Parameter("weight") @Nullable Integer weight) {
        this.address = address;
        this.enabled = enabled;
        this.hostHeader = hostHeader;
        this.httpPort = httpPort;
        this.httpsPort = httpsPort;
        this.priority = priority;
        this.weight = weight;
    }

    /**
     * @return Location of the backend (IP address or FQDN)
     * 
     */
    public String address() {
        return this.address;
    }
    /**
     * @return Specifies if the backend is enabled or not. Valid options are `true` or `false`. Defaults to `true`.
     * 
     */
    public Optional<Boolean> enabled() {
        return Optional.ofNullable(this.enabled);
    }
    /**
     * @return The value to use as the host header sent to the backend.
     * 
     */
    public String hostHeader() {
        return this.hostHeader;
    }
    /**
     * @return The HTTP TCP port number. Possible values are between `1` - `65535`.
     * 
     */
    public Integer httpPort() {
        return this.httpPort;
    }
    /**
     * @return The HTTPS TCP port number. Possible values are between `1` - `65535`.
     * 
     */
    public Integer httpsPort() {
        return this.httpsPort;
    }
    /**
     * @return Priority to use for load balancing. Higher priorities will not be used for load balancing if any lower priority backend is healthy. Defaults to `1`.
     * 
     */
    public Optional<Integer> priority() {
        return Optional.ofNullable(this.priority);
    }
    /**
     * @return Weight of this endpoint for load balancing purposes. Defaults to `50`.
     * 
     */
    public Optional<Integer> weight() {
        return Optional.ofNullable(this.weight);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(FrontdoorBackendPoolBackend defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String address;
        private @Nullable Boolean enabled;
        private String hostHeader;
        private Integer httpPort;
        private Integer httpsPort;
        private @Nullable Integer priority;
        private @Nullable Integer weight;

        public Builder() {
    	      // Empty
        }

        public Builder(FrontdoorBackendPoolBackend defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.address = defaults.address;
    	      this.enabled = defaults.enabled;
    	      this.hostHeader = defaults.hostHeader;
    	      this.httpPort = defaults.httpPort;
    	      this.httpsPort = defaults.httpsPort;
    	      this.priority = defaults.priority;
    	      this.weight = defaults.weight;
        }

        public Builder address(String address) {
            this.address = Objects.requireNonNull(address);
            return this;
        }
        public Builder enabled(@Nullable Boolean enabled) {
            this.enabled = enabled;
            return this;
        }
        public Builder hostHeader(String hostHeader) {
            this.hostHeader = Objects.requireNonNull(hostHeader);
            return this;
        }
        public Builder httpPort(Integer httpPort) {
            this.httpPort = Objects.requireNonNull(httpPort);
            return this;
        }
        public Builder httpsPort(Integer httpsPort) {
            this.httpsPort = Objects.requireNonNull(httpsPort);
            return this;
        }
        public Builder priority(@Nullable Integer priority) {
            this.priority = priority;
            return this;
        }
        public Builder weight(@Nullable Integer weight) {
            this.weight = weight;
            return this;
        }        public FrontdoorBackendPoolBackend build() {
            return new FrontdoorBackendPoolBackend(address, enabled, hostHeader, httpPort, httpsPort, priority, weight);
        }
    }
}
