// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.compute.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class SnapshotEncryptionSettingsKeyEncryptionKeyArgs extends com.pulumi.resources.ResourceArgs {

    public static final SnapshotEncryptionSettingsKeyEncryptionKeyArgs Empty = new SnapshotEncryptionSettingsKeyEncryptionKeyArgs();

    /**
     * The URL to the Key Vault Key used as the Key Encryption Key. This can be found as `id` on the `azure.keyvault.Key` resource.
     * 
     */
    @Import(name="keyUrl", required=true)
    private Output<String> keyUrl;

    /**
     * @return The URL to the Key Vault Key used as the Key Encryption Key. This can be found as `id` on the `azure.keyvault.Key` resource.
     * 
     */
    public Output<String> keyUrl() {
        return this.keyUrl;
    }

    /**
     * The ID of the source Key Vault. This can be found as `id` on the `azure.keyvault.KeyVault` resource.
     * 
     */
    @Import(name="sourceVaultId", required=true)
    private Output<String> sourceVaultId;

    /**
     * @return The ID of the source Key Vault. This can be found as `id` on the `azure.keyvault.KeyVault` resource.
     * 
     */
    public Output<String> sourceVaultId() {
        return this.sourceVaultId;
    }

    private SnapshotEncryptionSettingsKeyEncryptionKeyArgs() {}

    private SnapshotEncryptionSettingsKeyEncryptionKeyArgs(SnapshotEncryptionSettingsKeyEncryptionKeyArgs $) {
        this.keyUrl = $.keyUrl;
        this.sourceVaultId = $.sourceVaultId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SnapshotEncryptionSettingsKeyEncryptionKeyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SnapshotEncryptionSettingsKeyEncryptionKeyArgs $;

        public Builder() {
            $ = new SnapshotEncryptionSettingsKeyEncryptionKeyArgs();
        }

        public Builder(SnapshotEncryptionSettingsKeyEncryptionKeyArgs defaults) {
            $ = new SnapshotEncryptionSettingsKeyEncryptionKeyArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param keyUrl The URL to the Key Vault Key used as the Key Encryption Key. This can be found as `id` on the `azure.keyvault.Key` resource.
         * 
         * @return builder
         * 
         */
        public Builder keyUrl(Output<String> keyUrl) {
            $.keyUrl = keyUrl;
            return this;
        }

        /**
         * @param keyUrl The URL to the Key Vault Key used as the Key Encryption Key. This can be found as `id` on the `azure.keyvault.Key` resource.
         * 
         * @return builder
         * 
         */
        public Builder keyUrl(String keyUrl) {
            return keyUrl(Output.of(keyUrl));
        }

        /**
         * @param sourceVaultId The ID of the source Key Vault. This can be found as `id` on the `azure.keyvault.KeyVault` resource.
         * 
         * @return builder
         * 
         */
        public Builder sourceVaultId(Output<String> sourceVaultId) {
            $.sourceVaultId = sourceVaultId;
            return this;
        }

        /**
         * @param sourceVaultId The ID of the source Key Vault. This can be found as `id` on the `azure.keyvault.KeyVault` resource.
         * 
         * @return builder
         * 
         */
        public Builder sourceVaultId(String sourceVaultId) {
            return sourceVaultId(Output.of(sourceVaultId));
        }

        public SnapshotEncryptionSettingsKeyEncryptionKeyArgs build() {
            if ($.keyUrl == null) {
                throw new MissingRequiredPropertyException("SnapshotEncryptionSettingsKeyEncryptionKeyArgs", "keyUrl");
            }
            if ($.sourceVaultId == null) {
                throw new MissingRequiredPropertyException("SnapshotEncryptionSettingsKeyEncryptionKeyArgs", "sourceVaultId");
            }
            return $;
        }
    }

}
