// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.core;

import com.pulumi.azure.Utilities;
import com.pulumi.azure.core.PortalTenantConfigurationArgs;
import com.pulumi.azure.core.inputs.PortalTenantConfigurationState;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import javax.annotation.Nullable;

/**
 * Manages Portal Tenant Configuration.
 * 
 * &gt; **Note:** User has to be `Contributor` or `Owner` at scope `/` for managing this resource.
 * 
 * &gt; **Note:** The Service Principal with Tenant Admin can be created by `az ad sp create-for-rbac --name &#34;&lt;sp name&gt;&#34; --role=&#34;Contributor&#34; --scopes=&#34;/&#34;`.
 * 
 * &gt; **Note:** The Service Principal can be granted Tenant Admin permission by `az role assignment create --assignee &#34;&lt;app id&gt;&#34; --role &#34;Contributor&#34; --scope &#34;/&#34;`.
 * 
 * &gt; **Note:** While assigning the role to the existing/new Service Principal at the Tenant Scope, the user assigning role must already have the `Owner` role assigned at the Tenant Scope.
 * 
 * ## Example Usage
 * ```java
 * package generated_program;
 * 
 * import java.util.*;
 * import java.io.*;
 * import java.nio.*;
 * import com.pulumi.*;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new PortalTenantConfiguration(&#34;example&#34;, PortalTenantConfigurationArgs.builder()        
 *             .privateMarkdownStorageEnforced(true)
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * Portal Tenant Configurations can be imported using the `resource id`, e.g.
 * 
 * ```sh
 *  $ pulumi import azure:core/portalTenantConfiguration:PortalTenantConfiguration example /providers/Microsoft.Portal/tenantConfigurations/default
 * ```
 * 
 */
@ResourceType(type="azure:core/portalTenantConfiguration:PortalTenantConfiguration")
public class PortalTenantConfiguration extends com.pulumi.resources.CustomResource {
    /**
     * Is the private tile markdown storage which used to display custom dynamic and static content enabled?
     * 
     */
    @Export(name="privateMarkdownStorageEnforced", type=Boolean.class, parameters={})
    private Output<Boolean> privateMarkdownStorageEnforced;

    /**
     * @return Is the private tile markdown storage which used to display custom dynamic and static content enabled?
     * 
     */
    public Output<Boolean> privateMarkdownStorageEnforced() {
        return this.privateMarkdownStorageEnforced;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public PortalTenantConfiguration(String name) {
        this(name, PortalTenantConfigurationArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public PortalTenantConfiguration(String name, PortalTenantConfigurationArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public PortalTenantConfiguration(String name, PortalTenantConfigurationArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:core/portalTenantConfiguration:PortalTenantConfiguration", name, args == null ? PortalTenantConfigurationArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private PortalTenantConfiguration(String name, Output<String> id, @Nullable PortalTenantConfigurationState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:core/portalTenantConfiguration:PortalTenantConfiguration", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static PortalTenantConfiguration get(String name, Output<String> id, @Nullable PortalTenantConfigurationState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new PortalTenantConfiguration(name, id, state, options);
    }
}
