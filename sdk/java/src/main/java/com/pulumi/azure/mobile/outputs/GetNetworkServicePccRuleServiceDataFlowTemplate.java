// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.mobile.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetNetworkServicePccRuleServiceDataFlowTemplate {
    /**
     * @return The direction of this flow. Possible values are `Uplink`, `Downlink` and `Bidirectional`.
     * 
     */
    private String direction;
    /**
     * @return Specifies the name which should be used for this Mobile Network Service.
     * 
     */
    private String name;
    /**
     * @return The port(s) to which UEs will connect for this flow. You can specify zero or more ports or port ranges.
     * 
     */
    private List<String> ports;
    /**
     * @return A list of the allowed protocol(s) for this flow.
     * 
     */
    private List<String> protocols;
    /**
     * @return The remote IP address(es) to which UEs will connect for this flow.
     * 
     */
    private List<String> remoteIpLists;

    private GetNetworkServicePccRuleServiceDataFlowTemplate() {}
    /**
     * @return The direction of this flow. Possible values are `Uplink`, `Downlink` and `Bidirectional`.
     * 
     */
    public String direction() {
        return this.direction;
    }
    /**
     * @return Specifies the name which should be used for this Mobile Network Service.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The port(s) to which UEs will connect for this flow. You can specify zero or more ports or port ranges.
     * 
     */
    public List<String> ports() {
        return this.ports;
    }
    /**
     * @return A list of the allowed protocol(s) for this flow.
     * 
     */
    public List<String> protocols() {
        return this.protocols;
    }
    /**
     * @return The remote IP address(es) to which UEs will connect for this flow.
     * 
     */
    public List<String> remoteIpLists() {
        return this.remoteIpLists;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetNetworkServicePccRuleServiceDataFlowTemplate defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String direction;
        private String name;
        private List<String> ports;
        private List<String> protocols;
        private List<String> remoteIpLists;
        public Builder() {}
        public Builder(GetNetworkServicePccRuleServiceDataFlowTemplate defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.direction = defaults.direction;
    	      this.name = defaults.name;
    	      this.ports = defaults.ports;
    	      this.protocols = defaults.protocols;
    	      this.remoteIpLists = defaults.remoteIpLists;
        }

        @CustomType.Setter
        public Builder direction(String direction) {
            if (direction == null) {
              throw new MissingRequiredPropertyException("GetNetworkServicePccRuleServiceDataFlowTemplate", "direction");
            }
            this.direction = direction;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetNetworkServicePccRuleServiceDataFlowTemplate", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder ports(List<String> ports) {
            if (ports == null) {
              throw new MissingRequiredPropertyException("GetNetworkServicePccRuleServiceDataFlowTemplate", "ports");
            }
            this.ports = ports;
            return this;
        }
        public Builder ports(String... ports) {
            return ports(List.of(ports));
        }
        @CustomType.Setter
        public Builder protocols(List<String> protocols) {
            if (protocols == null) {
              throw new MissingRequiredPropertyException("GetNetworkServicePccRuleServiceDataFlowTemplate", "protocols");
            }
            this.protocols = protocols;
            return this;
        }
        public Builder protocols(String... protocols) {
            return protocols(List.of(protocols));
        }
        @CustomType.Setter
        public Builder remoteIpLists(List<String> remoteIpLists) {
            if (remoteIpLists == null) {
              throw new MissingRequiredPropertyException("GetNetworkServicePccRuleServiceDataFlowTemplate", "remoteIpLists");
            }
            this.remoteIpLists = remoteIpLists;
            return this;
        }
        public Builder remoteIpLists(String... remoteIpLists) {
            return remoteIpLists(List.of(remoteIpLists));
        }
        public GetNetworkServicePccRuleServiceDataFlowTemplate build() {
            final var _resultValue = new GetNetworkServicePccRuleServiceDataFlowTemplate();
            _resultValue.direction = direction;
            _resultValue.name = name;
            _resultValue.ports = ports;
            _resultValue.protocols = protocols;
            _resultValue.remoteIpLists = remoteIpLists;
            return _resultValue;
        }
    }
}
