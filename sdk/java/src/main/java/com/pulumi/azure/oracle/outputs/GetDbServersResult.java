// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.oracle.outputs;

import com.pulumi.azure.oracle.outputs.GetDbServersDbServer;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetDbServersResult {
    private String cloudExadataInfrastructureName;
    /**
     * @return A `dbServers` block as defined below.
     * 
     */
    private List<GetDbServersDbServer> dbServers;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private String resourceGroupName;

    private GetDbServersResult() {}
    public String cloudExadataInfrastructureName() {
        return this.cloudExadataInfrastructureName;
    }
    /**
     * @return A `dbServers` block as defined below.
     * 
     */
    public List<GetDbServersDbServer> dbServers() {
        return this.dbServers;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public String resourceGroupName() {
        return this.resourceGroupName;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDbServersResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String cloudExadataInfrastructureName;
        private List<GetDbServersDbServer> dbServers;
        private String id;
        private String resourceGroupName;
        public Builder() {}
        public Builder(GetDbServersResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.cloudExadataInfrastructureName = defaults.cloudExadataInfrastructureName;
    	      this.dbServers = defaults.dbServers;
    	      this.id = defaults.id;
    	      this.resourceGroupName = defaults.resourceGroupName;
        }

        @CustomType.Setter
        public Builder cloudExadataInfrastructureName(String cloudExadataInfrastructureName) {
            if (cloudExadataInfrastructureName == null) {
              throw new MissingRequiredPropertyException("GetDbServersResult", "cloudExadataInfrastructureName");
            }
            this.cloudExadataInfrastructureName = cloudExadataInfrastructureName;
            return this;
        }
        @CustomType.Setter
        public Builder dbServers(List<GetDbServersDbServer> dbServers) {
            if (dbServers == null) {
              throw new MissingRequiredPropertyException("GetDbServersResult", "dbServers");
            }
            this.dbServers = dbServers;
            return this;
        }
        public Builder dbServers(GetDbServersDbServer... dbServers) {
            return dbServers(List.of(dbServers));
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetDbServersResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder resourceGroupName(String resourceGroupName) {
            if (resourceGroupName == null) {
              throw new MissingRequiredPropertyException("GetDbServersResult", "resourceGroupName");
            }
            this.resourceGroupName = resourceGroupName;
            return this;
        }
        public GetDbServersResult build() {
            final var _resultValue = new GetDbServersResult();
            _resultValue.cloudExadataInfrastructureName = cloudExadataInfrastructureName;
            _resultValue.dbServers = dbServers;
            _resultValue.id = id;
            _resultValue.resourceGroupName = resourceGroupName;
            return _resultValue;
        }
    }
}
