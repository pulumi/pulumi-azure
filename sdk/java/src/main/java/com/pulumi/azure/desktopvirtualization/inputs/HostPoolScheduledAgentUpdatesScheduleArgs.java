// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.desktopvirtualization.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;


public final class HostPoolScheduledAgentUpdatesScheduleArgs extends com.pulumi.resources.ResourceArgs {

    public static final HostPoolScheduledAgentUpdatesScheduleArgs Empty = new HostPoolScheduledAgentUpdatesScheduleArgs();

    /**
     * The day of the week on which agent updates should be performed. Possible values are `Monday`, `Tuesday`, `Wednesday`, `Thursday`, `Friday`, `Saturday`, and `Sunday`
     * 
     */
    @Import(name="dayOfWeek", required=true)
    private Output<String> dayOfWeek;

    /**
     * @return The day of the week on which agent updates should be performed. Possible values are `Monday`, `Tuesday`, `Wednesday`, `Thursday`, `Friday`, `Saturday`, and `Sunday`
     * 
     */
    public Output<String> dayOfWeek() {
        return this.dayOfWeek;
    }

    /**
     * The hour of day the update window should start. The update is a 2 hour period following the hour provided. The value should be provided as a number between 0 and 23, with 0 being midnight and 23 being 11pm. A leading zero should not be used.
     * 
     */
    @Import(name="hourOfDay", required=true)
    private Output<Integer> hourOfDay;

    /**
     * @return The hour of day the update window should start. The update is a 2 hour period following the hour provided. The value should be provided as a number between 0 and 23, with 0 being midnight and 23 being 11pm. A leading zero should not be used.
     * 
     */
    public Output<Integer> hourOfDay() {
        return this.hourOfDay;
    }

    private HostPoolScheduledAgentUpdatesScheduleArgs() {}

    private HostPoolScheduledAgentUpdatesScheduleArgs(HostPoolScheduledAgentUpdatesScheduleArgs $) {
        this.dayOfWeek = $.dayOfWeek;
        this.hourOfDay = $.hourOfDay;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(HostPoolScheduledAgentUpdatesScheduleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private HostPoolScheduledAgentUpdatesScheduleArgs $;

        public Builder() {
            $ = new HostPoolScheduledAgentUpdatesScheduleArgs();
        }

        public Builder(HostPoolScheduledAgentUpdatesScheduleArgs defaults) {
            $ = new HostPoolScheduledAgentUpdatesScheduleArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param dayOfWeek The day of the week on which agent updates should be performed. Possible values are `Monday`, `Tuesday`, `Wednesday`, `Thursday`, `Friday`, `Saturday`, and `Sunday`
         * 
         * @return builder
         * 
         */
        public Builder dayOfWeek(Output<String> dayOfWeek) {
            $.dayOfWeek = dayOfWeek;
            return this;
        }

        /**
         * @param dayOfWeek The day of the week on which agent updates should be performed. Possible values are `Monday`, `Tuesday`, `Wednesday`, `Thursday`, `Friday`, `Saturday`, and `Sunday`
         * 
         * @return builder
         * 
         */
        public Builder dayOfWeek(String dayOfWeek) {
            return dayOfWeek(Output.of(dayOfWeek));
        }

        /**
         * @param hourOfDay The hour of day the update window should start. The update is a 2 hour period following the hour provided. The value should be provided as a number between 0 and 23, with 0 being midnight and 23 being 11pm. A leading zero should not be used.
         * 
         * @return builder
         * 
         */
        public Builder hourOfDay(Output<Integer> hourOfDay) {
            $.hourOfDay = hourOfDay;
            return this;
        }

        /**
         * @param hourOfDay The hour of day the update window should start. The update is a 2 hour period following the hour provided. The value should be provided as a number between 0 and 23, with 0 being midnight and 23 being 11pm. A leading zero should not be used.
         * 
         * @return builder
         * 
         */
        public Builder hourOfDay(Integer hourOfDay) {
            return hourOfDay(Output.of(hourOfDay));
        }

        public HostPoolScheduledAgentUpdatesScheduleArgs build() {
            if ($.dayOfWeek == null) {
                throw new MissingRequiredPropertyException("HostPoolScheduledAgentUpdatesScheduleArgs", "dayOfWeek");
            }
            if ($.hourOfDay == null) {
                throw new MissingRequiredPropertyException("HostPoolScheduledAgentUpdatesScheduleArgs", "hourOfDay");
            }
            return $;
        }
    }

}
