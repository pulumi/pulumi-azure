// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.cognitive.inputs;

import com.pulumi.azure.cognitive.inputs.AIServicesNetworkAclsVirtualNetworkRuleArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AIServicesNetworkAclsArgs extends com.pulumi.resources.ResourceArgs {

    public static final AIServicesNetworkAclsArgs Empty = new AIServicesNetworkAclsArgs();

    /**
     * The Default Action to use when no rules match from `ip_rules` / `virtual_network_rules`. Possible values are `Allow` and `Deny`.
     * 
     */
    @Import(name="defaultAction", required=true)
    private Output<String> defaultAction;

    /**
     * @return The Default Action to use when no rules match from `ip_rules` / `virtual_network_rules`. Possible values are `Allow` and `Deny`.
     * 
     */
    public Output<String> defaultAction() {
        return this.defaultAction;
    }

    /**
     * One or more IP Addresses, or CIDR Blocks which should be able to access the AI Services Account.
     * 
     */
    @Import(name="ipRules")
    private @Nullable Output<List<String>> ipRules;

    /**
     * @return One or more IP Addresses, or CIDR Blocks which should be able to access the AI Services Account.
     * 
     */
    public Optional<Output<List<String>>> ipRules() {
        return Optional.ofNullable(this.ipRules);
    }

    /**
     * A `virtual_network_rules` block as defined below.
     * 
     */
    @Import(name="virtualNetworkRules")
    private @Nullable Output<List<AIServicesNetworkAclsVirtualNetworkRuleArgs>> virtualNetworkRules;

    /**
     * @return A `virtual_network_rules` block as defined below.
     * 
     */
    public Optional<Output<List<AIServicesNetworkAclsVirtualNetworkRuleArgs>>> virtualNetworkRules() {
        return Optional.ofNullable(this.virtualNetworkRules);
    }

    private AIServicesNetworkAclsArgs() {}

    private AIServicesNetworkAclsArgs(AIServicesNetworkAclsArgs $) {
        this.defaultAction = $.defaultAction;
        this.ipRules = $.ipRules;
        this.virtualNetworkRules = $.virtualNetworkRules;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AIServicesNetworkAclsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AIServicesNetworkAclsArgs $;

        public Builder() {
            $ = new AIServicesNetworkAclsArgs();
        }

        public Builder(AIServicesNetworkAclsArgs defaults) {
            $ = new AIServicesNetworkAclsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param defaultAction The Default Action to use when no rules match from `ip_rules` / `virtual_network_rules`. Possible values are `Allow` and `Deny`.
         * 
         * @return builder
         * 
         */
        public Builder defaultAction(Output<String> defaultAction) {
            $.defaultAction = defaultAction;
            return this;
        }

        /**
         * @param defaultAction The Default Action to use when no rules match from `ip_rules` / `virtual_network_rules`. Possible values are `Allow` and `Deny`.
         * 
         * @return builder
         * 
         */
        public Builder defaultAction(String defaultAction) {
            return defaultAction(Output.of(defaultAction));
        }

        /**
         * @param ipRules One or more IP Addresses, or CIDR Blocks which should be able to access the AI Services Account.
         * 
         * @return builder
         * 
         */
        public Builder ipRules(@Nullable Output<List<String>> ipRules) {
            $.ipRules = ipRules;
            return this;
        }

        /**
         * @param ipRules One or more IP Addresses, or CIDR Blocks which should be able to access the AI Services Account.
         * 
         * @return builder
         * 
         */
        public Builder ipRules(List<String> ipRules) {
            return ipRules(Output.of(ipRules));
        }

        /**
         * @param ipRules One or more IP Addresses, or CIDR Blocks which should be able to access the AI Services Account.
         * 
         * @return builder
         * 
         */
        public Builder ipRules(String... ipRules) {
            return ipRules(List.of(ipRules));
        }

        /**
         * @param virtualNetworkRules A `virtual_network_rules` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder virtualNetworkRules(@Nullable Output<List<AIServicesNetworkAclsVirtualNetworkRuleArgs>> virtualNetworkRules) {
            $.virtualNetworkRules = virtualNetworkRules;
            return this;
        }

        /**
         * @param virtualNetworkRules A `virtual_network_rules` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder virtualNetworkRules(List<AIServicesNetworkAclsVirtualNetworkRuleArgs> virtualNetworkRules) {
            return virtualNetworkRules(Output.of(virtualNetworkRules));
        }

        /**
         * @param virtualNetworkRules A `virtual_network_rules` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder virtualNetworkRules(AIServicesNetworkAclsVirtualNetworkRuleArgs... virtualNetworkRules) {
            return virtualNetworkRules(List.of(virtualNetworkRules));
        }

        public AIServicesNetworkAclsArgs build() {
            if ($.defaultAction == null) {
                throw new MissingRequiredPropertyException("AIServicesNetworkAclsArgs", "defaultAction");
            }
            return $;
        }
    }

}
