// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.policy;

import com.pulumi.azure.Utilities;
import com.pulumi.azure.policy.PolicySetDefinitionArgs;
import com.pulumi.azure.policy.inputs.PolicySetDefinitionState;
import com.pulumi.azure.policy.outputs.PolicySetDefinitionPolicyDefinitionGroup;
import com.pulumi.azure.policy.outputs.PolicySetDefinitionPolicyDefinitionReference;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Manages a policy set definition.
 * 
 * &gt; **NOTE:**  Policy set definitions (also known as policy initiatives) do not take effect until they are assigned to a scope using a Policy Set Assignment.
 * 
 * ## Example Usage
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.azure.policy.PolicySetDefinition;
 * import com.pulumi.azure.policy.PolicySetDefinitionArgs;
 * import com.pulumi.azure.policy.inputs.PolicySetDefinitionPolicyDefinitionReferenceArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new PolicySetDefinition(&#34;example&#34;, PolicySetDefinitionArgs.builder()        
 *             .displayName(&#34;Test Policy Set&#34;)
 *             .parameters(&#34;&#34;&#34;
 *     {
 *         &#34;allowedLocations&#34;: {
 *             &#34;type&#34;: &#34;Array&#34;,
 *             &#34;metadata&#34;: {
 *                 &#34;description&#34;: &#34;The list of allowed locations for resources.&#34;,
 *                 &#34;displayName&#34;: &#34;Allowed locations&#34;,
 *                 &#34;strongType&#34;: &#34;location&#34;
 *             }
 *         }
 *     }
 * 
 *             &#34;&#34;&#34;)
 *             .policyDefinitionReferences(PolicySetDefinitionPolicyDefinitionReferenceArgs.builder()
 *                 .parameterValues(&#34;&#34;&#34;
 *     {
 *       &#34;listOfAllowedLocations&#34;: {&#34;value&#34;: &#34;[parameters(&#39;allowedLocations&#39;)]&#34;}
 *     }
 *     
 *                 &#34;&#34;&#34;)
 *                 .policyDefinitionId(&#34;/providers/Microsoft.Authorization/policyDefinitions/e765b5de-1225-4ba3-bd56-1ac6695af988&#34;)
 *                 .build())
 *             .policyType(&#34;Custom&#34;)
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * Policy Set Definitions can be imported using the `resource id`, e.g.
 * 
 * ```sh
 *  $ pulumi import azure:policy/policySetDefinition:PolicySetDefinition example /subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Authorization/policySetDefinitions/testPolicySet
 * ```
 * 
 *  or
 * 
 * ```sh
 *  $ pulumi import azure:policy/policySetDefinition:PolicySetDefinition example /providers/Microsoft.Management/managementGroups/my-mgmt-group-id/providers/Microsoft.Authorization/policySetDefinitions/testPolicySet
 * ```
 * 
 */
@ResourceType(type="azure:policy/policySetDefinition:PolicySetDefinition")
public class PolicySetDefinition extends com.pulumi.resources.CustomResource {
    /**
     * The description of the policy set definition.
     * 
     */
    @Export(name="description", type=String.class, parameters={})
    private Output</* @Nullable */ String> description;

    /**
     * @return The description of the policy set definition.
     * 
     */
    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    /**
     * The display name of the policy set definition.
     * 
     */
    @Export(name="displayName", type=String.class, parameters={})
    private Output<String> displayName;

    /**
     * @return The display name of the policy set definition.
     * 
     */
    public Output<String> displayName() {
        return this.displayName;
    }
    /**
     * The id of the Management Group where this policy set definition should be defined. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="managementGroupId", type=String.class, parameters={})
    private Output</* @Nullable */ String> managementGroupId;

    /**
     * @return The id of the Management Group where this policy set definition should be defined. Changing this forces a new resource to be created.
     * 
     */
    public Output<Optional<String>> managementGroupId() {
        return Codegen.optional(this.managementGroupId);
    }
    /**
     * The metadata for the policy set definition. This is a JSON object representing additional metadata that should be stored with the policy definition.
     * 
     */
    @Export(name="metadata", type=String.class, parameters={})
    private Output<String> metadata;

    /**
     * @return The metadata for the policy set definition. This is a JSON object representing additional metadata that should be stored with the policy definition.
     * 
     */
    public Output<String> metadata() {
        return this.metadata;
    }
    /**
     * The name of the policy set definition. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return The name of the policy set definition. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Parameters for the policy set definition. This field is a JSON object that allows you to parameterize your policy definition.
     * 
     */
    @Export(name="parameters", type=String.class, parameters={})
    private Output</* @Nullable */ String> parameters;

    /**
     * @return Parameters for the policy set definition. This field is a JSON object that allows you to parameterize your policy definition.
     * 
     */
    public Output<Optional<String>> parameters() {
        return Codegen.optional(this.parameters);
    }
    /**
     * One or more `policy_definition_group` blocks as defined below.
     * 
     */
    @Export(name="policyDefinitionGroups", type=List.class, parameters={PolicySetDefinitionPolicyDefinitionGroup.class})
    private Output</* @Nullable */ List<PolicySetDefinitionPolicyDefinitionGroup>> policyDefinitionGroups;

    /**
     * @return One or more `policy_definition_group` blocks as defined below.
     * 
     */
    public Output<Optional<List<PolicySetDefinitionPolicyDefinitionGroup>>> policyDefinitionGroups() {
        return Codegen.optional(this.policyDefinitionGroups);
    }
    /**
     * One or more `policy_definition_reference` blocks as defined below.
     * 
     */
    @Export(name="policyDefinitionReferences", type=List.class, parameters={PolicySetDefinitionPolicyDefinitionReference.class})
    private Output<List<PolicySetDefinitionPolicyDefinitionReference>> policyDefinitionReferences;

    /**
     * @return One or more `policy_definition_reference` blocks as defined below.
     * 
     */
    public Output<List<PolicySetDefinitionPolicyDefinitionReference>> policyDefinitionReferences() {
        return this.policyDefinitionReferences;
    }
    /**
     * The policy set type. Possible values are `BuiltIn`, `Custom`, `NotSpecified` and `Static`. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="policyType", type=String.class, parameters={})
    private Output<String> policyType;

    /**
     * @return The policy set type. Possible values are `BuiltIn`, `Custom`, `NotSpecified` and `Static`. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> policyType() {
        return this.policyType;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public PolicySetDefinition(String name) {
        this(name, PolicySetDefinitionArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public PolicySetDefinition(String name, PolicySetDefinitionArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public PolicySetDefinition(String name, PolicySetDefinitionArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:policy/policySetDefinition:PolicySetDefinition", name, args == null ? PolicySetDefinitionArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private PolicySetDefinition(String name, Output<String> id, @Nullable PolicySetDefinitionState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:policy/policySetDefinition:PolicySetDefinition", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static PolicySetDefinition get(String name, Output<String> id, @Nullable PolicySetDefinitionState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new PolicySetDefinition(name, id, state, options);
    }
}
