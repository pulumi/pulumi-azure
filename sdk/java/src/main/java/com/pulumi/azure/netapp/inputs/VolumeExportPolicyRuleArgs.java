// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.netapp.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class VolumeExportPolicyRuleArgs extends com.pulumi.resources.ResourceArgs {

    public static final VolumeExportPolicyRuleArgs Empty = new VolumeExportPolicyRuleArgs();

    /**
     * A list of allowed clients IPv4 addresses.
     * 
     */
    @Import(name="allowedClients", required=true)
    private Output<List<String>> allowedClients;

    /**
     * @return A list of allowed clients IPv4 addresses.
     * 
     */
    public Output<List<String>> allowedClients() {
        return this.allowedClients;
    }

    /**
     * Is Kerberos 5 read-only access permitted to this volume?
     * 
     */
    @Import(name="kerberos5ReadOnlyEnabled")
    private @Nullable Output<Boolean> kerberos5ReadOnlyEnabled;

    /**
     * @return Is Kerberos 5 read-only access permitted to this volume?
     * 
     */
    public Optional<Output<Boolean>> kerberos5ReadOnlyEnabled() {
        return Optional.ofNullable(this.kerberos5ReadOnlyEnabled);
    }

    /**
     * Is Kerberos 5 read/write permitted to this volume?
     * 
     */
    @Import(name="kerberos5ReadWriteEnabled")
    private @Nullable Output<Boolean> kerberos5ReadWriteEnabled;

    /**
     * @return Is Kerberos 5 read/write permitted to this volume?
     * 
     */
    public Optional<Output<Boolean>> kerberos5ReadWriteEnabled() {
        return Optional.ofNullable(this.kerberos5ReadWriteEnabled);
    }

    /**
     * Is Kerberos 5i read-only permitted to this volume?
     * 
     */
    @Import(name="kerberos5iReadOnlyEnabled")
    private @Nullable Output<Boolean> kerberos5iReadOnlyEnabled;

    /**
     * @return Is Kerberos 5i read-only permitted to this volume?
     * 
     */
    public Optional<Output<Boolean>> kerberos5iReadOnlyEnabled() {
        return Optional.ofNullable(this.kerberos5iReadOnlyEnabled);
    }

    /**
     * Is Kerberos 5i read/write permitted to this volume?
     * 
     */
    @Import(name="kerberos5iReadWriteEnabled")
    private @Nullable Output<Boolean> kerberos5iReadWriteEnabled;

    /**
     * @return Is Kerberos 5i read/write permitted to this volume?
     * 
     */
    public Optional<Output<Boolean>> kerberos5iReadWriteEnabled() {
        return Optional.ofNullable(this.kerberos5iReadWriteEnabled);
    }

    /**
     * Is Kerberos 5p read-only permitted to this volume?
     * 
     */
    @Import(name="kerberos5pReadOnlyEnabled")
    private @Nullable Output<Boolean> kerberos5pReadOnlyEnabled;

    /**
     * @return Is Kerberos 5p read-only permitted to this volume?
     * 
     */
    public Optional<Output<Boolean>> kerberos5pReadOnlyEnabled() {
        return Optional.ofNullable(this.kerberos5pReadOnlyEnabled);
    }

    /**
     * Is Kerberos 5p read/write permitted to this volume?
     * 
     */
    @Import(name="kerberos5pReadWriteEnabled")
    private @Nullable Output<Boolean> kerberos5pReadWriteEnabled;

    /**
     * @return Is Kerberos 5p read/write permitted to this volume?
     * 
     */
    public Optional<Output<Boolean>> kerberos5pReadWriteEnabled() {
        return Optional.ofNullable(this.kerberos5pReadWriteEnabled);
    }

    /**
     * A list of allowed protocols. Valid values include `CIFS`, `NFSv3`, or `NFSv4.1`. Only a single element is supported at this time. This replaces the previous arguments: `cifs_enabled`, `nfsv3_enabled` and `nfsv4_enabled`.
     * 
     */
    @Import(name="protocol")
    private @Nullable Output<String> protocol;

    /**
     * @return A list of allowed protocols. Valid values include `CIFS`, `NFSv3`, or `NFSv4.1`. Only a single element is supported at this time. This replaces the previous arguments: `cifs_enabled`, `nfsv3_enabled` and `nfsv4_enabled`.
     * 
     */
    public Optional<Output<String>> protocol() {
        return Optional.ofNullable(this.protocol);
    }

    /**
     * @deprecated
     * this property has been deprecated in favour of `export_policy_rule.protocol` and will be removed in version 5.0 of the Provider.
     * 
     */
    @Deprecated /* this property has been deprecated in favour of `export_policy_rule.protocol` and will be removed in version 5.0 of the Provider. */
    @Import(name="protocolsEnabled")
    private @Nullable Output<String> protocolsEnabled;

    /**
     * @deprecated
     * this property has been deprecated in favour of `export_policy_rule.protocol` and will be removed in version 5.0 of the Provider.
     * 
     */
    @Deprecated /* this property has been deprecated in favour of `export_policy_rule.protocol` and will be removed in version 5.0 of the Provider. */
    public Optional<Output<String>> protocolsEnabled() {
        return Optional.ofNullable(this.protocolsEnabled);
    }

    /**
     * Is root access permitted to this volume?
     * 
     */
    @Import(name="rootAccessEnabled")
    private @Nullable Output<Boolean> rootAccessEnabled;

    /**
     * @return Is root access permitted to this volume?
     * 
     */
    public Optional<Output<Boolean>> rootAccessEnabled() {
        return Optional.ofNullable(this.rootAccessEnabled);
    }

    /**
     * The index number of the rule.
     * 
     */
    @Import(name="ruleIndex", required=true)
    private Output<Integer> ruleIndex;

    /**
     * @return The index number of the rule.
     * 
     */
    public Output<Integer> ruleIndex() {
        return this.ruleIndex;
    }

    /**
     * Is the file system on unix read only?
     * 
     */
    @Import(name="unixReadOnly")
    private @Nullable Output<Boolean> unixReadOnly;

    /**
     * @return Is the file system on unix read only?
     * 
     */
    public Optional<Output<Boolean>> unixReadOnly() {
        return Optional.ofNullable(this.unixReadOnly);
    }

    /**
     * Is the file system on unix read and write?
     * 
     */
    @Import(name="unixReadWrite")
    private @Nullable Output<Boolean> unixReadWrite;

    /**
     * @return Is the file system on unix read and write?
     * 
     */
    public Optional<Output<Boolean>> unixReadWrite() {
        return Optional.ofNullable(this.unixReadWrite);
    }

    private VolumeExportPolicyRuleArgs() {}

    private VolumeExportPolicyRuleArgs(VolumeExportPolicyRuleArgs $) {
        this.allowedClients = $.allowedClients;
        this.kerberos5ReadOnlyEnabled = $.kerberos5ReadOnlyEnabled;
        this.kerberos5ReadWriteEnabled = $.kerberos5ReadWriteEnabled;
        this.kerberos5iReadOnlyEnabled = $.kerberos5iReadOnlyEnabled;
        this.kerberos5iReadWriteEnabled = $.kerberos5iReadWriteEnabled;
        this.kerberos5pReadOnlyEnabled = $.kerberos5pReadOnlyEnabled;
        this.kerberos5pReadWriteEnabled = $.kerberos5pReadWriteEnabled;
        this.protocol = $.protocol;
        this.protocolsEnabled = $.protocolsEnabled;
        this.rootAccessEnabled = $.rootAccessEnabled;
        this.ruleIndex = $.ruleIndex;
        this.unixReadOnly = $.unixReadOnly;
        this.unixReadWrite = $.unixReadWrite;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VolumeExportPolicyRuleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VolumeExportPolicyRuleArgs $;

        public Builder() {
            $ = new VolumeExportPolicyRuleArgs();
        }

        public Builder(VolumeExportPolicyRuleArgs defaults) {
            $ = new VolumeExportPolicyRuleArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param allowedClients A list of allowed clients IPv4 addresses.
         * 
         * @return builder
         * 
         */
        public Builder allowedClients(Output<List<String>> allowedClients) {
            $.allowedClients = allowedClients;
            return this;
        }

        /**
         * @param allowedClients A list of allowed clients IPv4 addresses.
         * 
         * @return builder
         * 
         */
        public Builder allowedClients(List<String> allowedClients) {
            return allowedClients(Output.of(allowedClients));
        }

        /**
         * @param allowedClients A list of allowed clients IPv4 addresses.
         * 
         * @return builder
         * 
         */
        public Builder allowedClients(String... allowedClients) {
            return allowedClients(List.of(allowedClients));
        }

        /**
         * @param kerberos5ReadOnlyEnabled Is Kerberos 5 read-only access permitted to this volume?
         * 
         * @return builder
         * 
         */
        public Builder kerberos5ReadOnlyEnabled(@Nullable Output<Boolean> kerberos5ReadOnlyEnabled) {
            $.kerberos5ReadOnlyEnabled = kerberos5ReadOnlyEnabled;
            return this;
        }

        /**
         * @param kerberos5ReadOnlyEnabled Is Kerberos 5 read-only access permitted to this volume?
         * 
         * @return builder
         * 
         */
        public Builder kerberos5ReadOnlyEnabled(Boolean kerberos5ReadOnlyEnabled) {
            return kerberos5ReadOnlyEnabled(Output.of(kerberos5ReadOnlyEnabled));
        }

        /**
         * @param kerberos5ReadWriteEnabled Is Kerberos 5 read/write permitted to this volume?
         * 
         * @return builder
         * 
         */
        public Builder kerberos5ReadWriteEnabled(@Nullable Output<Boolean> kerberos5ReadWriteEnabled) {
            $.kerberos5ReadWriteEnabled = kerberos5ReadWriteEnabled;
            return this;
        }

        /**
         * @param kerberos5ReadWriteEnabled Is Kerberos 5 read/write permitted to this volume?
         * 
         * @return builder
         * 
         */
        public Builder kerberos5ReadWriteEnabled(Boolean kerberos5ReadWriteEnabled) {
            return kerberos5ReadWriteEnabled(Output.of(kerberos5ReadWriteEnabled));
        }

        /**
         * @param kerberos5iReadOnlyEnabled Is Kerberos 5i read-only permitted to this volume?
         * 
         * @return builder
         * 
         */
        public Builder kerberos5iReadOnlyEnabled(@Nullable Output<Boolean> kerberos5iReadOnlyEnabled) {
            $.kerberos5iReadOnlyEnabled = kerberos5iReadOnlyEnabled;
            return this;
        }

        /**
         * @param kerberos5iReadOnlyEnabled Is Kerberos 5i read-only permitted to this volume?
         * 
         * @return builder
         * 
         */
        public Builder kerberos5iReadOnlyEnabled(Boolean kerberos5iReadOnlyEnabled) {
            return kerberos5iReadOnlyEnabled(Output.of(kerberos5iReadOnlyEnabled));
        }

        /**
         * @param kerberos5iReadWriteEnabled Is Kerberos 5i read/write permitted to this volume?
         * 
         * @return builder
         * 
         */
        public Builder kerberos5iReadWriteEnabled(@Nullable Output<Boolean> kerberos5iReadWriteEnabled) {
            $.kerberos5iReadWriteEnabled = kerberos5iReadWriteEnabled;
            return this;
        }

        /**
         * @param kerberos5iReadWriteEnabled Is Kerberos 5i read/write permitted to this volume?
         * 
         * @return builder
         * 
         */
        public Builder kerberos5iReadWriteEnabled(Boolean kerberos5iReadWriteEnabled) {
            return kerberos5iReadWriteEnabled(Output.of(kerberos5iReadWriteEnabled));
        }

        /**
         * @param kerberos5pReadOnlyEnabled Is Kerberos 5p read-only permitted to this volume?
         * 
         * @return builder
         * 
         */
        public Builder kerberos5pReadOnlyEnabled(@Nullable Output<Boolean> kerberos5pReadOnlyEnabled) {
            $.kerberos5pReadOnlyEnabled = kerberos5pReadOnlyEnabled;
            return this;
        }

        /**
         * @param kerberos5pReadOnlyEnabled Is Kerberos 5p read-only permitted to this volume?
         * 
         * @return builder
         * 
         */
        public Builder kerberos5pReadOnlyEnabled(Boolean kerberos5pReadOnlyEnabled) {
            return kerberos5pReadOnlyEnabled(Output.of(kerberos5pReadOnlyEnabled));
        }

        /**
         * @param kerberos5pReadWriteEnabled Is Kerberos 5p read/write permitted to this volume?
         * 
         * @return builder
         * 
         */
        public Builder kerberos5pReadWriteEnabled(@Nullable Output<Boolean> kerberos5pReadWriteEnabled) {
            $.kerberos5pReadWriteEnabled = kerberos5pReadWriteEnabled;
            return this;
        }

        /**
         * @param kerberos5pReadWriteEnabled Is Kerberos 5p read/write permitted to this volume?
         * 
         * @return builder
         * 
         */
        public Builder kerberos5pReadWriteEnabled(Boolean kerberos5pReadWriteEnabled) {
            return kerberos5pReadWriteEnabled(Output.of(kerberos5pReadWriteEnabled));
        }

        /**
         * @param protocol A list of allowed protocols. Valid values include `CIFS`, `NFSv3`, or `NFSv4.1`. Only a single element is supported at this time. This replaces the previous arguments: `cifs_enabled`, `nfsv3_enabled` and `nfsv4_enabled`.
         * 
         * @return builder
         * 
         */
        public Builder protocol(@Nullable Output<String> protocol) {
            $.protocol = protocol;
            return this;
        }

        /**
         * @param protocol A list of allowed protocols. Valid values include `CIFS`, `NFSv3`, or `NFSv4.1`. Only a single element is supported at this time. This replaces the previous arguments: `cifs_enabled`, `nfsv3_enabled` and `nfsv4_enabled`.
         * 
         * @return builder
         * 
         */
        public Builder protocol(String protocol) {
            return protocol(Output.of(protocol));
        }

        /**
         * @return builder
         * 
         * @deprecated
         * this property has been deprecated in favour of `export_policy_rule.protocol` and will be removed in version 5.0 of the Provider.
         * 
         */
        @Deprecated /* this property has been deprecated in favour of `export_policy_rule.protocol` and will be removed in version 5.0 of the Provider. */
        public Builder protocolsEnabled(@Nullable Output<String> protocolsEnabled) {
            $.protocolsEnabled = protocolsEnabled;
            return this;
        }

        /**
         * @return builder
         * 
         * @deprecated
         * this property has been deprecated in favour of `export_policy_rule.protocol` and will be removed in version 5.0 of the Provider.
         * 
         */
        @Deprecated /* this property has been deprecated in favour of `export_policy_rule.protocol` and will be removed in version 5.0 of the Provider. */
        public Builder protocolsEnabled(String protocolsEnabled) {
            return protocolsEnabled(Output.of(protocolsEnabled));
        }

        /**
         * @param rootAccessEnabled Is root access permitted to this volume?
         * 
         * @return builder
         * 
         */
        public Builder rootAccessEnabled(@Nullable Output<Boolean> rootAccessEnabled) {
            $.rootAccessEnabled = rootAccessEnabled;
            return this;
        }

        /**
         * @param rootAccessEnabled Is root access permitted to this volume?
         * 
         * @return builder
         * 
         */
        public Builder rootAccessEnabled(Boolean rootAccessEnabled) {
            return rootAccessEnabled(Output.of(rootAccessEnabled));
        }

        /**
         * @param ruleIndex The index number of the rule.
         * 
         * @return builder
         * 
         */
        public Builder ruleIndex(Output<Integer> ruleIndex) {
            $.ruleIndex = ruleIndex;
            return this;
        }

        /**
         * @param ruleIndex The index number of the rule.
         * 
         * @return builder
         * 
         */
        public Builder ruleIndex(Integer ruleIndex) {
            return ruleIndex(Output.of(ruleIndex));
        }

        /**
         * @param unixReadOnly Is the file system on unix read only?
         * 
         * @return builder
         * 
         */
        public Builder unixReadOnly(@Nullable Output<Boolean> unixReadOnly) {
            $.unixReadOnly = unixReadOnly;
            return this;
        }

        /**
         * @param unixReadOnly Is the file system on unix read only?
         * 
         * @return builder
         * 
         */
        public Builder unixReadOnly(Boolean unixReadOnly) {
            return unixReadOnly(Output.of(unixReadOnly));
        }

        /**
         * @param unixReadWrite Is the file system on unix read and write?
         * 
         * @return builder
         * 
         */
        public Builder unixReadWrite(@Nullable Output<Boolean> unixReadWrite) {
            $.unixReadWrite = unixReadWrite;
            return this;
        }

        /**
         * @param unixReadWrite Is the file system on unix read and write?
         * 
         * @return builder
         * 
         */
        public Builder unixReadWrite(Boolean unixReadWrite) {
            return unixReadWrite(Output.of(unixReadWrite));
        }

        public VolumeExportPolicyRuleArgs build() {
            if ($.allowedClients == null) {
                throw new MissingRequiredPropertyException("VolumeExportPolicyRuleArgs", "allowedClients");
            }
            if ($.ruleIndex == null) {
                throw new MissingRequiredPropertyException("VolumeExportPolicyRuleArgs", "ruleIndex");
            }
            return $;
        }
    }

}
