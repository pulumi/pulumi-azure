// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.network.outputs;

import com.pulumi.azure.network.outputs.TrafficManagerProfileMonitorConfigCustomHeader;
import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class TrafficManagerProfileMonitorConfig {
    /**
     * @return One or more `custom_header` blocks as defined below.
     * 
     */
    private final @Nullable List<TrafficManagerProfileMonitorConfigCustomHeader> customHeaders;
    /**
     * @return A list of status code ranges in the format of `100-101`.
     * 
     */
    private final @Nullable List<String> expectedStatusCodeRanges;
    /**
     * @return The interval used to check the endpoint health from a Traffic Manager probing agent. You can specify two values here: `30` (normal probing) and `10` (fast probing). The default value is `30`.
     * 
     */
    private final @Nullable Integer intervalInSeconds;
    /**
     * @return The path used by the monitoring checks. Required when `protocol` is set to `HTTP` or `HTTPS` - cannot be set when `protocol` is set to `TCP`.
     * 
     */
    private final @Nullable String path;
    /**
     * @return The port number used by the monitoring checks.
     * 
     */
    private final Integer port;
    /**
     * @return The protocol used by the monitoring checks, supported values are `HTTP`, `HTTPS` and `TCP`.
     * 
     */
    private final String protocol;
    /**
     * @return The amount of time the Traffic Manager probing agent should wait before considering that check a failure when a health check probe is sent to the endpoint. If `interval_in_seconds` is set to `30`, then `timeout_in_seconds` can be between `5` and `10`. The default value is `10`. If `interval_in_seconds` is set to `10`, then valid values are between `5` and `9` and `timeout_in_seconds` is required.
     * 
     */
    private final @Nullable Integer timeoutInSeconds;
    /**
     * @return The number of failures a Traffic Manager probing agent tolerates before marking that endpoint as unhealthy. Valid values are between `0` and `9`. The default value is `3`
     * 
     */
    private final @Nullable Integer toleratedNumberOfFailures;

    @CustomType.Constructor
    private TrafficManagerProfileMonitorConfig(
        @CustomType.Parameter("customHeaders") @Nullable List<TrafficManagerProfileMonitorConfigCustomHeader> customHeaders,
        @CustomType.Parameter("expectedStatusCodeRanges") @Nullable List<String> expectedStatusCodeRanges,
        @CustomType.Parameter("intervalInSeconds") @Nullable Integer intervalInSeconds,
        @CustomType.Parameter("path") @Nullable String path,
        @CustomType.Parameter("port") Integer port,
        @CustomType.Parameter("protocol") String protocol,
        @CustomType.Parameter("timeoutInSeconds") @Nullable Integer timeoutInSeconds,
        @CustomType.Parameter("toleratedNumberOfFailures") @Nullable Integer toleratedNumberOfFailures) {
        this.customHeaders = customHeaders;
        this.expectedStatusCodeRanges = expectedStatusCodeRanges;
        this.intervalInSeconds = intervalInSeconds;
        this.path = path;
        this.port = port;
        this.protocol = protocol;
        this.timeoutInSeconds = timeoutInSeconds;
        this.toleratedNumberOfFailures = toleratedNumberOfFailures;
    }

    /**
     * @return One or more `custom_header` blocks as defined below.
     * 
     */
    public List<TrafficManagerProfileMonitorConfigCustomHeader> customHeaders() {
        return this.customHeaders == null ? List.of() : this.customHeaders;
    }
    /**
     * @return A list of status code ranges in the format of `100-101`.
     * 
     */
    public List<String> expectedStatusCodeRanges() {
        return this.expectedStatusCodeRanges == null ? List.of() : this.expectedStatusCodeRanges;
    }
    /**
     * @return The interval used to check the endpoint health from a Traffic Manager probing agent. You can specify two values here: `30` (normal probing) and `10` (fast probing). The default value is `30`.
     * 
     */
    public Optional<Integer> intervalInSeconds() {
        return Optional.ofNullable(this.intervalInSeconds);
    }
    /**
     * @return The path used by the monitoring checks. Required when `protocol` is set to `HTTP` or `HTTPS` - cannot be set when `protocol` is set to `TCP`.
     * 
     */
    public Optional<String> path() {
        return Optional.ofNullable(this.path);
    }
    /**
     * @return The port number used by the monitoring checks.
     * 
     */
    public Integer port() {
        return this.port;
    }
    /**
     * @return The protocol used by the monitoring checks, supported values are `HTTP`, `HTTPS` and `TCP`.
     * 
     */
    public String protocol() {
        return this.protocol;
    }
    /**
     * @return The amount of time the Traffic Manager probing agent should wait before considering that check a failure when a health check probe is sent to the endpoint. If `interval_in_seconds` is set to `30`, then `timeout_in_seconds` can be between `5` and `10`. The default value is `10`. If `interval_in_seconds` is set to `10`, then valid values are between `5` and `9` and `timeout_in_seconds` is required.
     * 
     */
    public Optional<Integer> timeoutInSeconds() {
        return Optional.ofNullable(this.timeoutInSeconds);
    }
    /**
     * @return The number of failures a Traffic Manager probing agent tolerates before marking that endpoint as unhealthy. Valid values are between `0` and `9`. The default value is `3`
     * 
     */
    public Optional<Integer> toleratedNumberOfFailures() {
        return Optional.ofNullable(this.toleratedNumberOfFailures);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(TrafficManagerProfileMonitorConfig defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable List<TrafficManagerProfileMonitorConfigCustomHeader> customHeaders;
        private @Nullable List<String> expectedStatusCodeRanges;
        private @Nullable Integer intervalInSeconds;
        private @Nullable String path;
        private Integer port;
        private String protocol;
        private @Nullable Integer timeoutInSeconds;
        private @Nullable Integer toleratedNumberOfFailures;

        public Builder() {
    	      // Empty
        }

        public Builder(TrafficManagerProfileMonitorConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.customHeaders = defaults.customHeaders;
    	      this.expectedStatusCodeRanges = defaults.expectedStatusCodeRanges;
    	      this.intervalInSeconds = defaults.intervalInSeconds;
    	      this.path = defaults.path;
    	      this.port = defaults.port;
    	      this.protocol = defaults.protocol;
    	      this.timeoutInSeconds = defaults.timeoutInSeconds;
    	      this.toleratedNumberOfFailures = defaults.toleratedNumberOfFailures;
        }

        public Builder customHeaders(@Nullable List<TrafficManagerProfileMonitorConfigCustomHeader> customHeaders) {
            this.customHeaders = customHeaders;
            return this;
        }
        public Builder customHeaders(TrafficManagerProfileMonitorConfigCustomHeader... customHeaders) {
            return customHeaders(List.of(customHeaders));
        }
        public Builder expectedStatusCodeRanges(@Nullable List<String> expectedStatusCodeRanges) {
            this.expectedStatusCodeRanges = expectedStatusCodeRanges;
            return this;
        }
        public Builder expectedStatusCodeRanges(String... expectedStatusCodeRanges) {
            return expectedStatusCodeRanges(List.of(expectedStatusCodeRanges));
        }
        public Builder intervalInSeconds(@Nullable Integer intervalInSeconds) {
            this.intervalInSeconds = intervalInSeconds;
            return this;
        }
        public Builder path(@Nullable String path) {
            this.path = path;
            return this;
        }
        public Builder port(Integer port) {
            this.port = Objects.requireNonNull(port);
            return this;
        }
        public Builder protocol(String protocol) {
            this.protocol = Objects.requireNonNull(protocol);
            return this;
        }
        public Builder timeoutInSeconds(@Nullable Integer timeoutInSeconds) {
            this.timeoutInSeconds = timeoutInSeconds;
            return this;
        }
        public Builder toleratedNumberOfFailures(@Nullable Integer toleratedNumberOfFailures) {
            this.toleratedNumberOfFailures = toleratedNumberOfFailures;
            return this;
        }        public TrafficManagerProfileMonitorConfig build() {
            return new TrafficManagerProfileMonitorConfig(customHeaders, expectedStatusCodeRanges, intervalInSeconds, path, port, protocol, timeoutInSeconds, toleratedNumberOfFailures);
        }
    }
}
