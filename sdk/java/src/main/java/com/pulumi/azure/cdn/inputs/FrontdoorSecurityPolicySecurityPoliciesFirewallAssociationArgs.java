// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.cdn.inputs;

import com.pulumi.azure.cdn.inputs.FrontdoorSecurityPolicySecurityPoliciesFirewallAssociationDomainArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class FrontdoorSecurityPolicySecurityPoliciesFirewallAssociationArgs extends com.pulumi.resources.ResourceArgs {

    public static final FrontdoorSecurityPolicySecurityPoliciesFirewallAssociationArgs Empty = new FrontdoorSecurityPolicySecurityPoliciesFirewallAssociationArgs();

    /**
     * One or more `domain` blocks as defined below. Changing this forces a new Front Door Security Policy to be created.
     * 
     */
    @Import(name="domains", required=true)
    private Output<List<FrontdoorSecurityPolicySecurityPoliciesFirewallAssociationDomainArgs>> domains;

    /**
     * @return One or more `domain` blocks as defined below. Changing this forces a new Front Door Security Policy to be created.
     * 
     */
    public Output<List<FrontdoorSecurityPolicySecurityPoliciesFirewallAssociationDomainArgs>> domains() {
        return this.domains;
    }

    /**
     * The list of paths to match for this firewall policy. Possible value includes `/*`. Changing this forces a new Front Door Security Policy to be created.
     * 
     */
    @Import(name="patternsToMatch", required=true)
    private Output<String> patternsToMatch;

    /**
     * @return The list of paths to match for this firewall policy. Possible value includes `/*`. Changing this forces a new Front Door Security Policy to be created.
     * 
     */
    public Output<String> patternsToMatch() {
        return this.patternsToMatch;
    }

    private FrontdoorSecurityPolicySecurityPoliciesFirewallAssociationArgs() {}

    private FrontdoorSecurityPolicySecurityPoliciesFirewallAssociationArgs(FrontdoorSecurityPolicySecurityPoliciesFirewallAssociationArgs $) {
        this.domains = $.domains;
        this.patternsToMatch = $.patternsToMatch;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FrontdoorSecurityPolicySecurityPoliciesFirewallAssociationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FrontdoorSecurityPolicySecurityPoliciesFirewallAssociationArgs $;

        public Builder() {
            $ = new FrontdoorSecurityPolicySecurityPoliciesFirewallAssociationArgs();
        }

        public Builder(FrontdoorSecurityPolicySecurityPoliciesFirewallAssociationArgs defaults) {
            $ = new FrontdoorSecurityPolicySecurityPoliciesFirewallAssociationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param domains One or more `domain` blocks as defined below. Changing this forces a new Front Door Security Policy to be created.
         * 
         * @return builder
         * 
         */
        public Builder domains(Output<List<FrontdoorSecurityPolicySecurityPoliciesFirewallAssociationDomainArgs>> domains) {
            $.domains = domains;
            return this;
        }

        /**
         * @param domains One or more `domain` blocks as defined below. Changing this forces a new Front Door Security Policy to be created.
         * 
         * @return builder
         * 
         */
        public Builder domains(List<FrontdoorSecurityPolicySecurityPoliciesFirewallAssociationDomainArgs> domains) {
            return domains(Output.of(domains));
        }

        /**
         * @param domains One or more `domain` blocks as defined below. Changing this forces a new Front Door Security Policy to be created.
         * 
         * @return builder
         * 
         */
        public Builder domains(FrontdoorSecurityPolicySecurityPoliciesFirewallAssociationDomainArgs... domains) {
            return domains(List.of(domains));
        }

        /**
         * @param patternsToMatch The list of paths to match for this firewall policy. Possible value includes `/*`. Changing this forces a new Front Door Security Policy to be created.
         * 
         * @return builder
         * 
         */
        public Builder patternsToMatch(Output<String> patternsToMatch) {
            $.patternsToMatch = patternsToMatch;
            return this;
        }

        /**
         * @param patternsToMatch The list of paths to match for this firewall policy. Possible value includes `/*`. Changing this forces a new Front Door Security Policy to be created.
         * 
         * @return builder
         * 
         */
        public Builder patternsToMatch(String patternsToMatch) {
            return patternsToMatch(Output.of(patternsToMatch));
        }

        public FrontdoorSecurityPolicySecurityPoliciesFirewallAssociationArgs build() {
            if ($.domains == null) {
                throw new MissingRequiredPropertyException("FrontdoorSecurityPolicySecurityPoliciesFirewallAssociationArgs", "domains");
            }
            if ($.patternsToMatch == null) {
                throw new MissingRequiredPropertyException("FrontdoorSecurityPolicySecurityPoliciesFirewallAssociationArgs", "patternsToMatch");
            }
            return $;
        }
    }

}
