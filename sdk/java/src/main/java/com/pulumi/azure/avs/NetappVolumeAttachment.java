// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.avs;

import com.pulumi.azure.Utilities;
import com.pulumi.azure.avs.NetappVolumeAttachmentArgs;
import com.pulumi.azure.avs.inputs.NetappVolumeAttachmentState;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import javax.annotation.Nullable;

/**
 * Manages an Azure VMware Solution Private Cloud Netapp File Attachment.
 * 
 * ## Example Usage
 * 
 * &gt; **Note:** For Azure Azure VMware Solution Private Cloud, normal `pulumi up` could ignore this note. Please disable correlation request id for continuous operations in one build (like acctest). The continuous operations like `update` or `delete` could not be triggered when it shares the same `correlation-id` with its previous operation.
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.azure.core.ResourceGroup;
 * import com.pulumi.azure.core.ResourceGroupArgs;
 * import com.pulumi.azure.network.PublicIp;
 * import com.pulumi.azure.network.PublicIpArgs;
 * import com.pulumi.azure.network.VirtualNetwork;
 * import com.pulumi.azure.network.VirtualNetworkArgs;
 * import com.pulumi.azure.network.Subnet;
 * import com.pulumi.azure.network.SubnetArgs;
 * import com.pulumi.azure.network.inputs.SubnetDelegationArgs;
 * import com.pulumi.azure.network.inputs.SubnetDelegationServiceDelegationArgs;
 * import com.pulumi.azure.network.VirtualNetworkGateway;
 * import com.pulumi.azure.network.VirtualNetworkGatewayArgs;
 * import com.pulumi.azure.network.inputs.VirtualNetworkGatewayIpConfigurationArgs;
 * import com.pulumi.azure.netapp.Account;
 * import com.pulumi.azure.netapp.AccountArgs;
 * import com.pulumi.azure.netapp.Pool;
 * import com.pulumi.azure.netapp.PoolArgs;
 * import com.pulumi.azure.netapp.Volume;
 * import com.pulumi.azure.netapp.VolumeArgs;
 * import com.pulumi.azure.netapp.inputs.VolumeExportPolicyRuleArgs;
 * import com.pulumi.azure.avs.PrivateCloud;
 * import com.pulumi.azure.avs.PrivateCloudArgs;
 * import com.pulumi.azure.avs.inputs.PrivateCloudManagementClusterArgs;
 * import com.pulumi.azure.avs.Cluster;
 * import com.pulumi.azure.avs.ClusterArgs;
 * import com.pulumi.azure.avs.ExpressRouteAuthorization;
 * import com.pulumi.azure.avs.ExpressRouteAuthorizationArgs;
 * import com.pulumi.azure.network.VirtualNetworkGatewayConnection;
 * import com.pulumi.azure.network.VirtualNetworkGatewayConnectionArgs;
 * import com.pulumi.azure.avs.NetappVolumeAttachment;
 * import com.pulumi.azure.avs.NetappVolumeAttachmentArgs;
 * import com.pulumi.resources.CustomResourceOptions;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new ResourceGroup("example", ResourceGroupArgs.builder()
 *             .name("example-resources")
 *             .location("West Europe")
 *             .build());
 * 
 *         var test = new PublicIp("test", PublicIpArgs.builder()
 *             .name("example-public-ip")
 *             .location(testAzurermResourceGroup.location())
 *             .resourceGroupName(testAzurermResourceGroup.name())
 *             .allocationMethod("Static")
 *             .sku("Standard")
 *             .build());
 * 
 *         var testVirtualNetwork = new VirtualNetwork("testVirtualNetwork", VirtualNetworkArgs.builder()
 *             .name("example-VirtualNetwork")
 *             .location(testAzurermResourceGroup.location())
 *             .resourceGroupName(testAzurermResourceGroup.name())
 *             .addressSpaces("10.88.0.0/16")
 *             .build());
 * 
 *         var netappSubnet = new Subnet("netappSubnet", SubnetArgs.builder()
 *             .name("example-Subnet")
 *             .resourceGroupName(testAzurermResourceGroup.name())
 *             .virtualNetworkName(testVirtualNetwork.name())
 *             .addressPrefixes("10.88.2.0/24")
 *             .delegations(SubnetDelegationArgs.builder()
 *                 .name("testdelegation")
 *                 .serviceDelegation(SubnetDelegationServiceDelegationArgs.builder()
 *                     .name("Microsoft.Netapp/volumes")
 *                     .actions(                    
 *                         "Microsoft.Network/networkinterfaces/*",
 *                         "Microsoft.Network/virtualNetworks/subnets/join/action")
 *                     .build())
 *                 .build())
 *             .build());
 * 
 *         var gatewaySubnet = new Subnet("gatewaySubnet", SubnetArgs.builder()
 *             .name("GatewaySubnet")
 *             .resourceGroupName(testAzurermResourceGroup.name())
 *             .virtualNetworkName(testVirtualNetwork.name())
 *             .addressPrefixes("10.88.1.0/24")
 *             .build());
 * 
 *         var testVirtualNetworkGateway = new VirtualNetworkGateway("testVirtualNetworkGateway", VirtualNetworkGatewayArgs.builder()
 *             .name("example-vnet-gateway")
 *             .location(testAzurermResourceGroup.location())
 *             .resourceGroupName(testAzurermResourceGroup.name())
 *             .type("ExpressRoute")
 *             .sku("Standard")
 *             .ipConfigurations(VirtualNetworkGatewayIpConfigurationArgs.builder()
 *                 .name("vnetGatewayConfig")
 *                 .publicIpAddressId(test.id())
 *                 .subnetId(gatewaySubnet.id())
 *                 .build())
 *             .build());
 * 
 *         var testAccount = new Account("testAccount", AccountArgs.builder()
 *             .name("example-NetAppAccount")
 *             .location(testAzurermResourceGroup.location())
 *             .resourceGroupName(testAzurermResourceGroup.name())
 *             .build());
 * 
 *         var testPool = new Pool("testPool", PoolArgs.builder()
 *             .name("example-NetAppPool")
 *             .location(testAzurermResourceGroup.location())
 *             .resourceGroupName(testAzurermResourceGroup.name())
 *             .accountName(testAccount.name())
 *             .serviceLevel("Standard")
 *             .sizeInTb(4)
 *             .build());
 * 
 *         var testVolume = new Volume("testVolume", VolumeArgs.builder()
 *             .name("example-NetAppVolume")
 *             .location(testAzurermResourceGroup.location())
 *             .resourceGroupName(testAzurermResourceGroup.name())
 *             .accountName(testAccount.name())
 *             .poolName(testPool.name())
 *             .volumePath("my-unique-file-path-%d")
 *             .serviceLevel("Standard")
 *             .subnetId(netappSubnet.id())
 *             .protocols("NFSv3")
 *             .storageQuotaInGb(100)
 *             .azureVmwareDataStoreEnabled(true)
 *             .exportPolicyRules(VolumeExportPolicyRuleArgs.builder()
 *                 .ruleIndex(1)
 *                 .allowedClients("0.0.0.0/0")
 *                 .protocolsEnabled("NFSv3")
 *                 .unixReadOnly(false)
 *                 .unixReadWrite(true)
 *                 .rootAccessEnabled(true)
 *                 .build())
 *             .build());
 * 
 *         var testPrivateCloud = new PrivateCloud("testPrivateCloud", PrivateCloudArgs.builder()
 *             .name("example-PC")
 *             .resourceGroupName(testAzurermResourceGroup.name())
 *             .location(testAzurermResourceGroup.location())
 *             .skuName("av36")
 *             .managementCluster(PrivateCloudManagementClusterArgs.builder()
 *                 .size(3)
 *                 .build())
 *             .networkSubnetCidr("192.168.48.0/22")
 *             .build());
 * 
 *         var testCluster = new Cluster("testCluster", ClusterArgs.builder()
 *             .name("example-vm-cluster")
 *             .vmwareCloudId(testPrivateCloud.id())
 *             .clusterNodeCount(3)
 *             .skuName("av36")
 *             .build());
 * 
 *         var testExpressRouteAuthorization = new ExpressRouteAuthorization("testExpressRouteAuthorization", ExpressRouteAuthorizationArgs.builder()
 *             .name("example-VmwareAuthorization")
 *             .privateCloudId(testPrivateCloud.id())
 *             .build());
 * 
 *         var testVirtualNetworkGatewayConnection = new VirtualNetworkGatewayConnection("testVirtualNetworkGatewayConnection", VirtualNetworkGatewayConnectionArgs.builder()
 *             .name("example-vnetgwconn")
 *             .location(testAzurermResourceGroup.location())
 *             .resourceGroupName(testAzurermResourceGroup.name())
 *             .type("ExpressRoute")
 *             .virtualNetworkGatewayId(testVirtualNetworkGateway.id())
 *             .expressRouteCircuitId(testPrivateCloud.circuits().applyValue(_circuits -> _circuits[0].expressRouteId()))
 *             .authorizationKey(testExpressRouteAuthorization.expressRouteAuthorizationKey())
 *             .build());
 * 
 *         var testNetappVolumeAttachment = new NetappVolumeAttachment("testNetappVolumeAttachment", NetappVolumeAttachmentArgs.builder()
 *             .name("example-vmwareattachment")
 *             .netappVolumeId(testVolume.id())
 *             .vmwareClusterId(testCluster.id())
 *             .build(), CustomResourceOptions.builder()
 *                 .dependsOn(testVirtualNetworkGatewayConnection)
 *                 .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## API Providers
 * 
 * &lt;!-- This section is generated, changes will be overwritten --&gt;
 * This resource uses the following Azure API Providers:
 * 
 * * `Microsoft.AVS`: 2022-05-01
 * 
 * ## Import
 * 
 * Azure VMware Solution Private Cloud Netapp File Volume Attachments can be imported using the `resource id`, e.g.
 * 
 * ```sh
 * $ pulumi import azure:avs/netappVolumeAttachment:NetappVolumeAttachment example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.AVS/privateClouds/privateCloud1/clusters/Cluster1/dataStores/datastore1
 * ```
 * 
 */
@ResourceType(type="azure:avs/netappVolumeAttachment:NetappVolumeAttachment")
public class NetappVolumeAttachment extends com.pulumi.resources.CustomResource {
    /**
     * The name which should be used for this Azure VMware Solution Private Cloud Netapp File Volume Attachment. Changing this forces a new Azure VMware Solution Private Cloud Netapp File Volume Attachment to be created.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The name which should be used for this Azure VMware Solution Private Cloud Netapp File Volume Attachment. Changing this forces a new Azure VMware Solution Private Cloud Netapp File Volume Attachment to be created.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The netapp file volume for this Azure VMware Solution Private Cloud Netapp File Volume Attachment to connect to. Changing this forces a new Azure VMware Solution Private Cloud Netapp File Volume Attachment to be created.
     * 
     */
    @Export(name="netappVolumeId", refs={String.class}, tree="[0]")
    private Output<String> netappVolumeId;

    /**
     * @return The netapp file volume for this Azure VMware Solution Private Cloud Netapp File Volume Attachment to connect to. Changing this forces a new Azure VMware Solution Private Cloud Netapp File Volume Attachment to be created.
     * 
     */
    public Output<String> netappVolumeId() {
        return this.netappVolumeId;
    }
    /**
     * The vmware cluster for this Azure VMware Solution Private Cloud Netapp File Volume Attachment to associated to. Changing this forces a new Azure VMware Solution Private Cloud Netapp File Volume Attachment to be created.
     * 
     * &gt; **Note:** please follow the prerequisites mentioned in this [article](https://learn.microsoft.com/en-us/azure/azure-vmware/attach-azure-netapp-files-to-azure-vmware-solution-hosts?tabs=azure-portal#prerequisites) before associating the netapp file volume to the Azure VMware Solution hosts.
     * 
     */
    @Export(name="vmwareClusterId", refs={String.class}, tree="[0]")
    private Output<String> vmwareClusterId;

    /**
     * @return The vmware cluster for this Azure VMware Solution Private Cloud Netapp File Volume Attachment to associated to. Changing this forces a new Azure VMware Solution Private Cloud Netapp File Volume Attachment to be created.
     * 
     * &gt; **Note:** please follow the prerequisites mentioned in this [article](https://learn.microsoft.com/en-us/azure/azure-vmware/attach-azure-netapp-files-to-azure-vmware-solution-hosts?tabs=azure-portal#prerequisites) before associating the netapp file volume to the Azure VMware Solution hosts.
     * 
     */
    public Output<String> vmwareClusterId() {
        return this.vmwareClusterId;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public NetappVolumeAttachment(java.lang.String name) {
        this(name, NetappVolumeAttachmentArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public NetappVolumeAttachment(java.lang.String name, NetappVolumeAttachmentArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public NetappVolumeAttachment(java.lang.String name, NetappVolumeAttachmentArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:avs/netappVolumeAttachment:NetappVolumeAttachment", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private NetappVolumeAttachment(java.lang.String name, Output<java.lang.String> id, @Nullable NetappVolumeAttachmentState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:avs/netappVolumeAttachment:NetappVolumeAttachment", name, state, makeResourceOptions(options, id), false);
    }

    private static NetappVolumeAttachmentArgs makeArgs(NetappVolumeAttachmentArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? NetappVolumeAttachmentArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static NetappVolumeAttachment get(java.lang.String name, Output<java.lang.String> id, @Nullable NetappVolumeAttachmentState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new NetappVolumeAttachment(name, id, state, options);
    }
}
