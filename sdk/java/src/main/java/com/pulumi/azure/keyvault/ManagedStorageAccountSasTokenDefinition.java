// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.keyvault;

import com.pulumi.azure.Utilities;
import com.pulumi.azure.keyvault.ManagedStorageAccountSasTokenDefinitionArgs;
import com.pulumi.azure.keyvault.inputs.ManagedStorageAccountSasTokenDefinitionState;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Manages a Key Vault Managed Storage Account SAS Definition.
 * 
 * ## Example Usage
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.azure.core.CoreFunctions;
 * import com.pulumi.azure.core.ResourceGroup;
 * import com.pulumi.azure.core.ResourceGroupArgs;
 * import com.pulumi.azure.storage.Account;
 * import com.pulumi.azure.storage.AccountArgs;
 * import com.pulumi.azure.storage.StorageFunctions;
 * import com.pulumi.azure.storage.inputs.GetAccountSASArgs;
 * import com.pulumi.azure.storage.inputs.GetAccountSASResourceTypesArgs;
 * import com.pulumi.azure.storage.inputs.GetAccountSASServicesArgs;
 * import com.pulumi.azure.storage.inputs.GetAccountSASPermissionsArgs;
 * import com.pulumi.azure.keyvault.KeyVault;
 * import com.pulumi.azure.keyvault.KeyVaultArgs;
 * import com.pulumi.azure.keyvault.inputs.KeyVaultAccessPolicyArgs;
 * import com.pulumi.azure.keyvault.ManagedStorageAccount;
 * import com.pulumi.azure.keyvault.ManagedStorageAccountArgs;
 * import com.pulumi.azure.keyvault.ManagedStorageAccountSasTokenDefinition;
 * import com.pulumi.azure.keyvault.ManagedStorageAccountSasTokenDefinitionArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         final var exampleClientConfig = CoreFunctions.getClientConfig();
 * 
 *         var exampleResourceGroup = new ResourceGroup(&#34;exampleResourceGroup&#34;, ResourceGroupArgs.builder()        
 *             .location(&#34;West Europe&#34;)
 *             .build());
 * 
 *         var exampleAccount = new Account(&#34;exampleAccount&#34;, AccountArgs.builder()        
 *             .resourceGroupName(exampleResourceGroup.name())
 *             .location(exampleResourceGroup.location())
 *             .accountTier(&#34;Standard&#34;)
 *             .accountReplicationType(&#34;LRS&#34;)
 *             .build());
 * 
 *         final var exampleAccountSAS = StorageFunctions.getAccountSAS(GetAccountSASArgs.builder()
 *             .connectionString(exampleAccount.primaryConnectionString())
 *             .httpsOnly(true)
 *             .resourceTypes(GetAccountSASResourceTypesArgs.builder()
 *                 .service(true)
 *                 .container(false)
 *                 .object(false)
 *                 .build())
 *             .services(GetAccountSASServicesArgs.builder()
 *                 .blob(true)
 *                 .queue(false)
 *                 .table(false)
 *                 .file(false)
 *                 .build())
 *             .start(&#34;2021-04-30T00:00:00Z&#34;)
 *             .expiry(&#34;2023-04-30T00:00:00Z&#34;)
 *             .permissions(GetAccountSASPermissionsArgs.builder()
 *                 .read(true)
 *                 .write(true)
 *                 .delete(false)
 *                 .list(false)
 *                 .add(true)
 *                 .create(true)
 *                 .update(false)
 *                 .process(false)
 *                 .tag(false)
 *                 .filter(false)
 *                 .build())
 *             .build());
 * 
 *         var exampleKeyVault = new KeyVault(&#34;exampleKeyVault&#34;, KeyVaultArgs.builder()        
 *             .location(exampleResourceGroup.location())
 *             .resourceGroupName(exampleResourceGroup.name())
 *             .tenantId(data.azurerm_client_config().current().tenant_id())
 *             .skuName(&#34;standard&#34;)
 *             .accessPolicies(KeyVaultAccessPolicyArgs.builder()
 *                 .tenantId(data.azurerm_client_config().current().tenant_id())
 *                 .objectId(data.azurerm_client_config().current().object_id())
 *                 .secretPermissions(                
 *                     &#34;Get&#34;,
 *                     &#34;Delete&#34;)
 *                 .storagePermissions(                
 *                     &#34;Get&#34;,
 *                     &#34;List&#34;,
 *                     &#34;Set&#34;,
 *                     &#34;SetSAS&#34;,
 *                     &#34;GetSAS&#34;,
 *                     &#34;DeleteSAS&#34;,
 *                     &#34;Update&#34;,
 *                     &#34;RegenerateKey&#34;)
 *                 .build())
 *             .build());
 * 
 *         var test = new ManagedStorageAccount(&#34;test&#34;, ManagedStorageAccountArgs.builder()        
 *             .keyVaultId(exampleKeyVault.id())
 *             .storageAccountId(exampleAccount.id())
 *             .storageAccountKey(&#34;key1&#34;)
 *             .regenerateKeyAutomatically(false)
 *             .regenerationPeriod(&#34;P1D&#34;)
 *             .build());
 * 
 *         var exampleManagedStorageAccountSasTokenDefinition = new ManagedStorageAccountSasTokenDefinition(&#34;exampleManagedStorageAccountSasTokenDefinition&#34;, ManagedStorageAccountSasTokenDefinitionArgs.builder()        
 *             .validityPeriod(&#34;P1D&#34;)
 *             .managedStorageAccountId(azurerm_key_vault_managed_storage_account.example().id())
 *             .sasTemplateUri(exampleAccountSAS.applyValue(getAccountSASResult -&gt; getAccountSASResult).applyValue(exampleAccountSAS -&gt; exampleAccountSAS.applyValue(getAccountSASResult -&gt; getAccountSASResult.sas())))
 *             .sasType(&#34;account&#34;)
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * Key Vaults can be imported using the `resource id`, e.g.
 * 
 * ```sh
 *  $ pulumi import azure:keyvault/managedStorageAccountSasTokenDefinition:ManagedStorageAccountSasTokenDefinition example https://example-keyvault.vault.azure.net/storage/exampleStorageAcc01/sas/exampleSasDefinition01
 * ```
 * 
 */
@ResourceType(type="azure:keyvault/managedStorageAccountSasTokenDefinition:ManagedStorageAccountSasTokenDefinition")
public class ManagedStorageAccountSasTokenDefinition extends com.pulumi.resources.CustomResource {
    /**
     * The ID of the Managed Storage Account.
     * 
     */
    @Export(name="managedStorageAccountId", refs={String.class}, tree="[0]")
    private Output<String> managedStorageAccountId;

    /**
     * @return The ID of the Managed Storage Account.
     * 
     */
    public Output<String> managedStorageAccountId() {
        return this.managedStorageAccountId;
    }
    /**
     * The name which should be used for this SAS Definition.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The name which should be used for this SAS Definition.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The SAS definition token template signed with an arbitrary key. Tokens created according to the SAS definition will have the same properties as the template, but regenerated with a new validity period.
     * 
     */
    @Export(name="sasTemplateUri", refs={String.class}, tree="[0]")
    private Output<String> sasTemplateUri;

    /**
     * @return The SAS definition token template signed with an arbitrary key. Tokens created according to the SAS definition will have the same properties as the template, but regenerated with a new validity period.
     * 
     */
    public Output<String> sasTemplateUri() {
        return this.sasTemplateUri;
    }
    /**
     * The type of SAS token the SAS definition will create. Possible values are `account` and `service`.
     * 
     */
    @Export(name="sasType", refs={String.class}, tree="[0]")
    private Output<String> sasType;

    /**
     * @return The type of SAS token the SAS definition will create. Possible values are `account` and `service`.
     * 
     */
    public Output<String> sasType() {
        return this.sasType;
    }
    /**
     * The ID of the Secret that is created by Managed Storage Account SAS Definition.
     * 
     */
    @Export(name="secretId", refs={String.class}, tree="[0]")
    private Output<String> secretId;

    /**
     * @return The ID of the Secret that is created by Managed Storage Account SAS Definition.
     * 
     */
    public Output<String> secretId() {
        return this.secretId;
    }
    /**
     * A mapping of tags which should be assigned to the SAS Definition. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="tags", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output</* @Nullable */ Map<String,String>> tags;

    /**
     * @return A mapping of tags which should be assigned to the SAS Definition. Changing this forces a new resource to be created.
     * 
     */
    public Output<Optional<Map<String,String>>> tags() {
        return Codegen.optional(this.tags);
    }
    /**
     * Validity period of SAS token. Value needs to be in [ISO 8601 duration format](https://en.wikipedia.org/wiki/ISO_8601#Durations).
     * 
     */
    @Export(name="validityPeriod", refs={String.class}, tree="[0]")
    private Output<String> validityPeriod;

    /**
     * @return Validity period of SAS token. Value needs to be in [ISO 8601 duration format](https://en.wikipedia.org/wiki/ISO_8601#Durations).
     * 
     */
    public Output<String> validityPeriod() {
        return this.validityPeriod;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public ManagedStorageAccountSasTokenDefinition(String name) {
        this(name, ManagedStorageAccountSasTokenDefinitionArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public ManagedStorageAccountSasTokenDefinition(String name, ManagedStorageAccountSasTokenDefinitionArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public ManagedStorageAccountSasTokenDefinition(String name, ManagedStorageAccountSasTokenDefinitionArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:keyvault/managedStorageAccountSasTokenDefinition:ManagedStorageAccountSasTokenDefinition", name, args == null ? ManagedStorageAccountSasTokenDefinitionArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private ManagedStorageAccountSasTokenDefinition(String name, Output<String> id, @Nullable ManagedStorageAccountSasTokenDefinitionState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:keyvault/managedStorageAccountSasTokenDefinition:ManagedStorageAccountSasTokenDefinition", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static ManagedStorageAccountSasTokenDefinition get(String name, Output<String> id, @Nullable ManagedStorageAccountSasTokenDefinitionState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new ManagedStorageAccountSasTokenDefinition(name, id, state, options);
    }
}
