// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.privatelink;

import com.pulumi.azure.Utilities;
import com.pulumi.azure.privatelink.EndpointArgs;
import com.pulumi.azure.privatelink.inputs.EndpointState;
import com.pulumi.azure.privatelink.outputs.EndpointCustomDnsConfig;
import com.pulumi.azure.privatelink.outputs.EndpointIpConfiguration;
import com.pulumi.azure.privatelink.outputs.EndpointNetworkInterface;
import com.pulumi.azure.privatelink.outputs.EndpointPrivateDnsZoneConfig;
import com.pulumi.azure.privatelink.outputs.EndpointPrivateDnsZoneGroup;
import com.pulumi.azure.privatelink.outputs.EndpointPrivateServiceConnection;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Manages a Private Endpoint.
 * 
 * Azure Private Endpoint is a network interface that connects you privately and securely to a service powered by Azure Private Link. Private Endpoint uses a private IP address from your VNet, effectively bringing the service into your VNet. The service could be an Azure service such as Azure Storage, SQL, etc. or your own Private Link Service.
 * 
 * ## Example Usage
 * 
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.azure.core.ResourceGroup;
 * import com.pulumi.azure.core.ResourceGroupArgs;
 * import com.pulumi.azure.network.VirtualNetwork;
 * import com.pulumi.azure.network.VirtualNetworkArgs;
 * import com.pulumi.azure.network.Subnet;
 * import com.pulumi.azure.network.SubnetArgs;
 * import com.pulumi.azure.network.PublicIp;
 * import com.pulumi.azure.network.PublicIpArgs;
 * import com.pulumi.azure.lb.LoadBalancer;
 * import com.pulumi.azure.lb.LoadBalancerArgs;
 * import com.pulumi.azure.lb.inputs.LoadBalancerFrontendIpConfigurationArgs;
 * import com.pulumi.azure.privatedns.LinkService;
 * import com.pulumi.azure.privatedns.LinkServiceArgs;
 * import com.pulumi.azure.privatedns.inputs.LinkServiceNatIpConfigurationArgs;
 * import com.pulumi.azure.privatelink.Endpoint;
 * import com.pulumi.azure.privatelink.EndpointArgs;
 * import com.pulumi.azure.privatelink.inputs.EndpointPrivateServiceConnectionArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new ResourceGroup("example", ResourceGroupArgs.builder()
 *             .name("example-resources")
 *             .location("West Europe")
 *             .build());
 * 
 *         var exampleVirtualNetwork = new VirtualNetwork("exampleVirtualNetwork", VirtualNetworkArgs.builder()
 *             .name("example-network")
 *             .addressSpaces("10.0.0.0/16")
 *             .location(example.location())
 *             .resourceGroupName(example.name())
 *             .build());
 * 
 *         var service = new Subnet("service", SubnetArgs.builder()
 *             .name("service")
 *             .resourceGroupName(example.name())
 *             .virtualNetworkName(exampleVirtualNetwork.name())
 *             .addressPrefixes("10.0.1.0/24")
 *             .enforcePrivateLinkServiceNetworkPolicies(true)
 *             .build());
 * 
 *         var endpoint = new Subnet("endpoint", SubnetArgs.builder()
 *             .name("endpoint")
 *             .resourceGroupName(example.name())
 *             .virtualNetworkName(exampleVirtualNetwork.name())
 *             .addressPrefixes("10.0.2.0/24")
 *             .enforcePrivateLinkEndpointNetworkPolicies(true)
 *             .build());
 * 
 *         var examplePublicIp = new PublicIp("examplePublicIp", PublicIpArgs.builder()
 *             .name("example-pip")
 *             .sku("Standard")
 *             .location(example.location())
 *             .resourceGroupName(example.name())
 *             .allocationMethod("Static")
 *             .build());
 * 
 *         var exampleLoadBalancer = new LoadBalancer("exampleLoadBalancer", LoadBalancerArgs.builder()
 *             .name("example-lb")
 *             .sku("Standard")
 *             .location(example.location())
 *             .resourceGroupName(example.name())
 *             .frontendIpConfigurations(LoadBalancerFrontendIpConfigurationArgs.builder()
 *                 .name(examplePublicIp.name())
 *                 .publicIpAddressId(examplePublicIp.id())
 *                 .build())
 *             .build());
 * 
 *         var exampleLinkService = new LinkService("exampleLinkService", LinkServiceArgs.builder()
 *             .name("example-privatelink")
 *             .location(example.location())
 *             .resourceGroupName(example.name())
 *             .natIpConfigurations(LinkServiceNatIpConfigurationArgs.builder()
 *                 .name(examplePublicIp.name())
 *                 .primary(true)
 *                 .subnetId(service.id())
 *                 .build())
 *             .loadBalancerFrontendIpConfigurationIds(exampleLoadBalancer.frontendIpConfigurations().applyValue(_frontendIpConfigurations -> _frontendIpConfigurations[0].id()))
 *             .build());
 * 
 *         var exampleEndpoint = new Endpoint("exampleEndpoint", EndpointArgs.builder()
 *             .name("example-endpoint")
 *             .location(example.location())
 *             .resourceGroupName(example.name())
 *             .subnetId(endpoint.id())
 *             .privateServiceConnection(EndpointPrivateServiceConnectionArgs.builder()
 *                 .name("example-privateserviceconnection")
 *                 .privateConnectionResourceId(exampleLinkService.id())
 *                 .isManualConnection(false)
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * 
 * Using a Private Link Service Alias with existing resources:
 * 
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.azure.core.CoreFunctions;
 * import com.pulumi.azure.core.inputs.GetResourceGroupArgs;
 * import com.pulumi.azure.network.NetworkFunctions;
 * import com.pulumi.azure.network.inputs.GetVirtualNetworkArgs;
 * import com.pulumi.azure.network.inputs.GetSubnetArgs;
 * import com.pulumi.azure.privatelink.Endpoint;
 * import com.pulumi.azure.privatelink.EndpointArgs;
 * import com.pulumi.azure.privatelink.inputs.EndpointPrivateServiceConnectionArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         final var example = CoreFunctions.getResourceGroup(GetResourceGroupArgs.builder()
 *             .name("example-resources")
 *             .build());
 * 
 *         final var vnet = NetworkFunctions.getVirtualNetwork(GetVirtualNetworkArgs.builder()
 *             .name("example-network")
 *             .resourceGroupName(example.name())
 *             .build());
 * 
 *         final var subnet = NetworkFunctions.getSubnet(GetSubnetArgs.builder()
 *             .name("default")
 *             .virtualNetworkName(vnet.name())
 *             .resourceGroupName(example.name())
 *             .build());
 * 
 *         var exampleEndpoint = new Endpoint("exampleEndpoint", EndpointArgs.builder()
 *             .name("example-endpoint")
 *             .location(example.location())
 *             .resourceGroupName(example.name())
 *             .subnetId(subnet.id())
 *             .privateServiceConnection(EndpointPrivateServiceConnectionArgs.builder()
 *                 .name("example-privateserviceconnection")
 *                 .privateConnectionResourceAlias("example-privatelinkservice.d20286c8-4ea5-11eb-9584-8f53157226c6.centralus.azure.privatelinkservice")
 *                 .isManualConnection(true)
 *                 .requestMessage("PL")
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * 
 * Using a Private Endpoint pointing to an *owned* Azure service, with proper DNS configuration:
 * 
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.azure.core.ResourceGroup;
 * import com.pulumi.azure.core.ResourceGroupArgs;
 * import com.pulumi.azure.storage.Account;
 * import com.pulumi.azure.storage.AccountArgs;
 * import com.pulumi.azure.network.VirtualNetwork;
 * import com.pulumi.azure.network.VirtualNetworkArgs;
 * import com.pulumi.azure.network.Subnet;
 * import com.pulumi.azure.network.SubnetArgs;
 * import com.pulumi.azure.privatedns.Zone;
 * import com.pulumi.azure.privatedns.ZoneArgs;
 * import com.pulumi.azure.privatelink.Endpoint;
 * import com.pulumi.azure.privatelink.EndpointArgs;
 * import com.pulumi.azure.privatelink.inputs.EndpointPrivateServiceConnectionArgs;
 * import com.pulumi.azure.privatelink.inputs.EndpointPrivateDnsZoneGroupArgs;
 * import com.pulumi.azure.privatedns.ZoneVirtualNetworkLink;
 * import com.pulumi.azure.privatedns.ZoneVirtualNetworkLinkArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new ResourceGroup("example", ResourceGroupArgs.builder()
 *             .name("example-rg")
 *             .location("West Europe")
 *             .build());
 * 
 *         var exampleAccount = new Account("exampleAccount", AccountArgs.builder()
 *             .name("exampleaccount")
 *             .resourceGroupName(example.name())
 *             .location(example.location())
 *             .accountTier("Standard")
 *             .accountReplicationType("LRS")
 *             .build());
 * 
 *         var exampleVirtualNetwork = new VirtualNetwork("exampleVirtualNetwork", VirtualNetworkArgs.builder()
 *             .name("virtnetname")
 *             .addressSpaces("10.0.0.0/16")
 *             .location(example.location())
 *             .resourceGroupName(example.name())
 *             .build());
 * 
 *         var exampleSubnet = new Subnet("exampleSubnet", SubnetArgs.builder()
 *             .name("subnetname")
 *             .resourceGroupName(example.name())
 *             .virtualNetworkName(exampleVirtualNetwork.name())
 *             .addressPrefixes("10.0.2.0/24")
 *             .build());
 * 
 *         var exampleZone = new Zone("exampleZone", ZoneArgs.builder()
 *             .name("privatelink.blob.core.windows.net")
 *             .resourceGroupName(example.name())
 *             .build());
 * 
 *         var exampleEndpoint = new Endpoint("exampleEndpoint", EndpointArgs.builder()
 *             .name("example-endpoint")
 *             .location(example.location())
 *             .resourceGroupName(example.name())
 *             .subnetId(exampleSubnet.id())
 *             .privateServiceConnection(EndpointPrivateServiceConnectionArgs.builder()
 *                 .name("example-privateserviceconnection")
 *                 .privateConnectionResourceId(exampleAccount.id())
 *                 .subresourceNames("blob")
 *                 .isManualConnection(false)
 *                 .build())
 *             .privateDnsZoneGroup(EndpointPrivateDnsZoneGroupArgs.builder()
 *                 .name("example-dns-zone-group")
 *                 .privateDnsZoneIds(exampleZone.id())
 *                 .build())
 *             .build());
 * 
 *         var exampleZoneVirtualNetworkLink = new ZoneVirtualNetworkLink("exampleZoneVirtualNetworkLink", ZoneVirtualNetworkLinkArgs.builder()
 *             .name("example-link")
 *             .resourceGroupName(example.name())
 *             .privateDnsZoneName(exampleZone.name())
 *             .virtualNetworkId(exampleVirtualNetwork.id())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * 
 * ## Example HCL Configurations
 * 
 * * How to conneca `Private Endpoint` to a Application Gateway
 * * How to connect a `Private Endpoint` to a Cosmos MongoDB
 * * How to connect a `Private Endpoint` to a Cosmos PostgreSQL
 * * How to connect a `Private Endpoint` to a PostgreSQL Server
 * * How to connect a `Private Endpoint` to a Private Link Service
 * * How to connect a `Private Endpoint` to a Private DNS Group
 * * How to connect a `Private Endpoint` to a Databricks Workspace
 * 
 * ## API Providers
 * 
 * &lt;!-- This section is generated, changes will be overwritten --&gt;
 * This resource uses the following Azure API Providers:
 * 
 * * `Microsoft.Network` - 2024-05-01
 * 
 * ## Import
 * 
 * Private Endpoints can be imported using the `resource id`, e.g.
 * 
 * ```sh
 * $ pulumi import azure:privatelink/endpoint:Endpoint example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.Network/privateEndpoints/endpoint1
 * ```
 * 
 */
@ResourceType(type="azure:privatelink/endpoint:Endpoint")
public class Endpoint extends com.pulumi.resources.CustomResource {
    /**
     * A `customDnsConfigs` block as defined below.
     * 
     */
    @Export(name="customDnsConfigs", refs={List.class,EndpointCustomDnsConfig.class}, tree="[0,1]")
    private Output<List<EndpointCustomDnsConfig>> customDnsConfigs;

    /**
     * @return A `customDnsConfigs` block as defined below.
     * 
     */
    public Output<List<EndpointCustomDnsConfig>> customDnsConfigs() {
        return this.customDnsConfigs;
    }
    /**
     * The custom name of the network interface attached to the private endpoint. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="customNetworkInterfaceName", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> customNetworkInterfaceName;

    /**
     * @return The custom name of the network interface attached to the private endpoint. Changing this forces a new resource to be created.
     * 
     */
    public Output<Optional<String>> customNetworkInterfaceName() {
        return Codegen.optional(this.customNetworkInterfaceName);
    }
    /**
     * One or more `ipConfiguration` blocks as defined below. This allows a static IP address to be set for this Private Endpoint, otherwise an address is dynamically allocated from the Subnet.
     * 
     */
    @Export(name="ipConfigurations", refs={List.class,EndpointIpConfiguration.class}, tree="[0,1]")
    private Output</* @Nullable */ List<EndpointIpConfiguration>> ipConfigurations;

    /**
     * @return One or more `ipConfiguration` blocks as defined below. This allows a static IP address to be set for this Private Endpoint, otherwise an address is dynamically allocated from the Subnet.
     * 
     */
    public Output<Optional<List<EndpointIpConfiguration>>> ipConfigurations() {
        return Codegen.optional(this.ipConfigurations);
    }
    /**
     * The supported Azure location where the resource exists. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="location", refs={String.class}, tree="[0]")
    private Output<String> location;

    /**
     * @return The supported Azure location where the resource exists. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> location() {
        return this.location;
    }
    /**
     * Specifies the Name of the Private Endpoint. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return Specifies the Name of the Private Endpoint. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * A `networkInterface` block as defined below.
     * 
     */
    @Export(name="networkInterfaces", refs={List.class,EndpointNetworkInterface.class}, tree="[0,1]")
    private Output<List<EndpointNetworkInterface>> networkInterfaces;

    /**
     * @return A `networkInterface` block as defined below.
     * 
     */
    public Output<List<EndpointNetworkInterface>> networkInterfaces() {
        return this.networkInterfaces;
    }
    /**
     * A `privateDnsZoneConfigs` block as defined below.
     * 
     */
    @Export(name="privateDnsZoneConfigs", refs={List.class,EndpointPrivateDnsZoneConfig.class}, tree="[0,1]")
    private Output<List<EndpointPrivateDnsZoneConfig>> privateDnsZoneConfigs;

    /**
     * @return A `privateDnsZoneConfigs` block as defined below.
     * 
     */
    public Output<List<EndpointPrivateDnsZoneConfig>> privateDnsZoneConfigs() {
        return this.privateDnsZoneConfigs;
    }
    /**
     * A `privateDnsZoneGroup` block as defined below.
     * 
     */
    @Export(name="privateDnsZoneGroup", refs={EndpointPrivateDnsZoneGroup.class}, tree="[0]")
    private Output</* @Nullable */ EndpointPrivateDnsZoneGroup> privateDnsZoneGroup;

    /**
     * @return A `privateDnsZoneGroup` block as defined below.
     * 
     */
    public Output<Optional<EndpointPrivateDnsZoneGroup>> privateDnsZoneGroup() {
        return Codegen.optional(this.privateDnsZoneGroup);
    }
    /**
     * A `privateServiceConnection` block as defined below.
     * 
     */
    @Export(name="privateServiceConnection", refs={EndpointPrivateServiceConnection.class}, tree="[0]")
    private Output<EndpointPrivateServiceConnection> privateServiceConnection;

    /**
     * @return A `privateServiceConnection` block as defined below.
     * 
     */
    public Output<EndpointPrivateServiceConnection> privateServiceConnection() {
        return this.privateServiceConnection;
    }
    /**
     * Specifies the Name of the Resource Group within which the Private Endpoint should exist. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="resourceGroupName", refs={String.class}, tree="[0]")
    private Output<String> resourceGroupName;

    /**
     * @return Specifies the Name of the Resource Group within which the Private Endpoint should exist. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }
    /**
     * The ID of the Subnet from which Private IP Addresses will be allocated for this Private Endpoint. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="subnetId", refs={String.class}, tree="[0]")
    private Output<String> subnetId;

    /**
     * @return The ID of the Subnet from which Private IP Addresses will be allocated for this Private Endpoint. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> subnetId() {
        return this.subnetId;
    }
    /**
     * A mapping of tags to assign to the resource.
     * 
     */
    @Export(name="tags", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output</* @Nullable */ Map<String,String>> tags;

    /**
     * @return A mapping of tags to assign to the resource.
     * 
     */
    public Output<Optional<Map<String,String>>> tags() {
        return Codegen.optional(this.tags);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Endpoint(java.lang.String name) {
        this(name, EndpointArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Endpoint(java.lang.String name, EndpointArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Endpoint(java.lang.String name, EndpointArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:privatelink/endpoint:Endpoint", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private Endpoint(java.lang.String name, Output<java.lang.String> id, @Nullable EndpointState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:privatelink/endpoint:Endpoint", name, state, makeResourceOptions(options, id), false);
    }

    private static EndpointArgs makeArgs(EndpointArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? EndpointArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Endpoint get(java.lang.String name, Output<java.lang.String> id, @Nullable EndpointState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Endpoint(name, id, state, options);
    }
}
