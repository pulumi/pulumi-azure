// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.cdn.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class FrontdoorProfileLogScrubbingRuleArgs extends com.pulumi.resources.ResourceArgs {

    public static final FrontdoorProfileLogScrubbingRuleArgs Empty = new FrontdoorProfileLogScrubbingRuleArgs();

    /**
     * The variable to be scrubbed from the logs. Possible values are `QueryStringArgNames`, `RequestIPAddress`, and `RequestUri`.
     * 
     * &gt; **Note:** The `operator` field is implicitly set to `EqualsAny`, as it is the sole supported value, and is therefore not exposed as a configurable option in the provider schema.
     * 
     */
    @Import(name="matchVariable", required=true)
    private Output<String> matchVariable;

    /**
     * @return The variable to be scrubbed from the logs. Possible values are `QueryStringArgNames`, `RequestIPAddress`, and `RequestUri`.
     * 
     * &gt; **Note:** The `operator` field is implicitly set to `EqualsAny`, as it is the sole supported value, and is therefore not exposed as a configurable option in the provider schema.
     * 
     */
    public Output<String> matchVariable() {
        return this.matchVariable;
    }

    private FrontdoorProfileLogScrubbingRuleArgs() {}

    private FrontdoorProfileLogScrubbingRuleArgs(FrontdoorProfileLogScrubbingRuleArgs $) {
        this.matchVariable = $.matchVariable;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FrontdoorProfileLogScrubbingRuleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FrontdoorProfileLogScrubbingRuleArgs $;

        public Builder() {
            $ = new FrontdoorProfileLogScrubbingRuleArgs();
        }

        public Builder(FrontdoorProfileLogScrubbingRuleArgs defaults) {
            $ = new FrontdoorProfileLogScrubbingRuleArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param matchVariable The variable to be scrubbed from the logs. Possible values are `QueryStringArgNames`, `RequestIPAddress`, and `RequestUri`.
         * 
         * &gt; **Note:** The `operator` field is implicitly set to `EqualsAny`, as it is the sole supported value, and is therefore not exposed as a configurable option in the provider schema.
         * 
         * @return builder
         * 
         */
        public Builder matchVariable(Output<String> matchVariable) {
            $.matchVariable = matchVariable;
            return this;
        }

        /**
         * @param matchVariable The variable to be scrubbed from the logs. Possible values are `QueryStringArgNames`, `RequestIPAddress`, and `RequestUri`.
         * 
         * &gt; **Note:** The `operator` field is implicitly set to `EqualsAny`, as it is the sole supported value, and is therefore not exposed as a configurable option in the provider schema.
         * 
         * @return builder
         * 
         */
        public Builder matchVariable(String matchVariable) {
            return matchVariable(Output.of(matchVariable));
        }

        public FrontdoorProfileLogScrubbingRuleArgs build() {
            if ($.matchVariable == null) {
                throw new MissingRequiredPropertyException("FrontdoorProfileLogScrubbingRuleArgs", "matchVariable");
            }
            return $;
        }
    }

}
