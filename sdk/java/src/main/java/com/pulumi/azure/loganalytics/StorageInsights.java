// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.loganalytics;

import com.pulumi.azure.Utilities;
import com.pulumi.azure.loganalytics.StorageInsightsArgs;
import com.pulumi.azure.loganalytics.inputs.StorageInsightsState;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Manages a Log Analytics Storage Insights resource.
 * 
 * ## Example Usage
 * ```java
 * package generated_program;
 * 
 * import java.util.*;
 * import java.io.*;
 * import java.nio.*;
 * import com.pulumi.*;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var exampleResourceGroup = new ResourceGroup(&#34;exampleResourceGroup&#34;, ResourceGroupArgs.builder()        
 *             .location(&#34;West Europe&#34;)
 *             .build());
 * 
 *         var exampleAnalyticsWorkspace = new AnalyticsWorkspace(&#34;exampleAnalyticsWorkspace&#34;, AnalyticsWorkspaceArgs.builder()        
 *             .location(exampleResourceGroup.location())
 *             .resourceGroupName(exampleResourceGroup.name())
 *             .sku(&#34;PerGB2018&#34;)
 *             .retentionInDays(30)
 *             .build());
 * 
 *         var exampleAccount = new Account(&#34;exampleAccount&#34;, AccountArgs.builder()        
 *             .resourceGroupName(exampleResourceGroup.name())
 *             .location(exampleResourceGroup.location())
 *             .accountTier(&#34;Standard&#34;)
 *             .accountReplicationType(&#34;LRS&#34;)
 *             .build());
 * 
 *         var exampleStorageInsights = new StorageInsights(&#34;exampleStorageInsights&#34;, StorageInsightsArgs.builder()        
 *             .resourceGroupName(exampleResourceGroup.name())
 *             .workspaceId(exampleAnalyticsWorkspace.id())
 *             .storageAccountId(exampleAccount.id())
 *             .storageAccountKey(exampleAccount.primaryAccessKey())
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * Log Analytics Storage Insight Configs can be imported using the `resource id`, e.g.
 * 
 * ```sh
 *  $ pulumi import azure:loganalytics/storageInsights:StorageInsights example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.OperationalInsights/workspaces/workspace1/storageInsightConfigs/storageInsight1
 * ```
 * 
 */
@ResourceType(type="azure:loganalytics/storageInsights:StorageInsights")
public class StorageInsights extends com.pulumi.resources.CustomResource {
    /**
     * The names of the blob containers that the workspace should read.
     * 
     */
    @Export(name="blobContainerNames", type=List.class, parameters={String.class})
    private Output</* @Nullable */ List<String>> blobContainerNames;

    /**
     * @return The names of the blob containers that the workspace should read.
     * 
     */
    public Output<Optional<List<String>>> blobContainerNames() {
        return Codegen.optional(this.blobContainerNames);
    }
    /**
     * The name which should be used for this Log Analytics Storage Insights. Changing this forces a new Log Analytics Storage Insights to be created.
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return The name which should be used for this Log Analytics Storage Insights. Changing this forces a new Log Analytics Storage Insights to be created.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The name of the Resource Group where the Log Analytics Storage Insights should exist. Changing this forces a new Log Analytics Storage Insights to be created.
     * 
     */
    @Export(name="resourceGroupName", type=String.class, parameters={})
    private Output<String> resourceGroupName;

    /**
     * @return The name of the Resource Group where the Log Analytics Storage Insights should exist. Changing this forces a new Log Analytics Storage Insights to be created.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }
    /**
     * The ID of the Storage Account used by this Log Analytics Storage Insights.
     * 
     */
    @Export(name="storageAccountId", type=String.class, parameters={})
    private Output<String> storageAccountId;

    /**
     * @return The ID of the Storage Account used by this Log Analytics Storage Insights.
     * 
     */
    public Output<String> storageAccountId() {
        return this.storageAccountId;
    }
    /**
     * The storage access key to be used to connect to the storage account.
     * 
     */
    @Export(name="storageAccountKey", type=String.class, parameters={})
    private Output<String> storageAccountKey;

    /**
     * @return The storage access key to be used to connect to the storage account.
     * 
     */
    public Output<String> storageAccountKey() {
        return this.storageAccountKey;
    }
    /**
     * The names of the Azure tables that the workspace should read.
     * 
     */
    @Export(name="tableNames", type=List.class, parameters={String.class})
    private Output</* @Nullable */ List<String>> tableNames;

    /**
     * @return The names of the Azure tables that the workspace should read.
     * 
     */
    public Output<Optional<List<String>>> tableNames() {
        return Codegen.optional(this.tableNames);
    }
    /**
     * The ID of the Log Analytics Workspace within which the Storage Insights should exist. Changing this forces a new Log Analytics Storage Insights to be created.
     * 
     */
    @Export(name="workspaceId", type=String.class, parameters={})
    private Output<String> workspaceId;

    /**
     * @return The ID of the Log Analytics Workspace within which the Storage Insights should exist. Changing this forces a new Log Analytics Storage Insights to be created.
     * 
     */
    public Output<String> workspaceId() {
        return this.workspaceId;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public StorageInsights(String name) {
        this(name, StorageInsightsArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public StorageInsights(String name, StorageInsightsArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public StorageInsights(String name, StorageInsightsArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:loganalytics/storageInsights:StorageInsights", name, args == null ? StorageInsightsArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private StorageInsights(String name, Output<String> id, @Nullable StorageInsightsState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:loganalytics/storageInsights:StorageInsights", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static StorageInsights get(String name, Output<String> id, @Nullable StorageInsightsState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new StorageInsights(name, id, state, options);
    }
}
