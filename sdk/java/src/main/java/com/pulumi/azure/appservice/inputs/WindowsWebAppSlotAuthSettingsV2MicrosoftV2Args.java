// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.appservice.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class WindowsWebAppSlotAuthSettingsV2MicrosoftV2Args extends com.pulumi.resources.ResourceArgs {

    public static final WindowsWebAppSlotAuthSettingsV2MicrosoftV2Args Empty = new WindowsWebAppSlotAuthSettingsV2MicrosoftV2Args();

    /**
     * Specifies a list of Allowed audience values to consider when validating JWTs issued by Azure Active Directory.
     * 
     * &gt; **NOTE:** This is configured on the Authentication Provider side and is Read Only here.
     * 
     * `allowed_audiences` - (Optional) Specifies a list of Allowed Audiences that should be requested as part of Google Sign-In authentication.`allowed_audiences` - (Optional) Specifies a list of Allowed Audiences that will be requested as part of Microsoft Sign-In authentication.
     * 
     */
    @Import(name="allowedAudiences")
    private @Nullable Output<List<String>> allowedAudiences;

    /**
     * @return Specifies a list of Allowed audience values to consider when validating JWTs issued by Azure Active Directory.
     * 
     * &gt; **NOTE:** This is configured on the Authentication Provider side and is Read Only here.
     * 
     * `allowed_audiences` - (Optional) Specifies a list of Allowed Audiences that should be requested as part of Google Sign-In authentication.`allowed_audiences` - (Optional) Specifies a list of Allowed Audiences that will be requested as part of Microsoft Sign-In authentication.
     * 
     */
    public Optional<Output<List<String>>> allowedAudiences() {
        return Optional.ofNullable(this.allowedAudiences);
    }

    /**
     * The ID of the Client to use to authenticate with the Custom OIDC.
     * 
     */
    @Import(name="clientId", required=true)
    private Output<String> clientId;

    /**
     * @return The ID of the Client to use to authenticate with the Custom OIDC.
     * 
     */
    public Output<String> clientId() {
        return this.clientId;
    }

    /**
     * The App Setting name that contains the client secret of the Client. Cannot be used with `client_secret`.
     * 
     * `client_secret_setting_name` - The App Setting name that contains the secret for this Custom OIDC Client. This is generated from `name` above and suffixed with `_PROVIDER_AUTHENTICATION_SECRET`.
     * 
     */
    @Import(name="clientSecretSettingName", required=true)
    private Output<String> clientSecretSettingName;

    /**
     * @return The App Setting name that contains the client secret of the Client. Cannot be used with `client_secret`.
     * 
     * `client_secret_setting_name` - The App Setting name that contains the secret for this Custom OIDC Client. This is generated from `name` above and suffixed with `_PROVIDER_AUTHENTICATION_SECRET`.
     * 
     */
    public Output<String> clientSecretSettingName() {
        return this.clientSecretSettingName;
    }

    /**
     * A list of Login Scopes provided by this Authentication Provider.
     * 
     * &gt; **NOTE:** This is configured on the Authentication Provider side and is Read Only here.
     * 
     * `login_scopes` - (Optional) The list of scopes that should be requested as part of Facebook Login authentication.
     * 
     * `login_scopes` - (Optional) The list of OAuth 2.0 scopes that should be requested as part of GitHub Login authentication.
     * 
     * `login_scopes` - (Optional) The list of OAuth 2.0 scopes that should be requested as part of Google Sign-In authentication.
     * 
     * `login_scopes` - (Optional) The list of Login scopes that should be requested as part of Microsoft Account authentication.
     * 
     */
    @Import(name="loginScopes")
    private @Nullable Output<List<String>> loginScopes;

    /**
     * @return A list of Login Scopes provided by this Authentication Provider.
     * 
     * &gt; **NOTE:** This is configured on the Authentication Provider side and is Read Only here.
     * 
     * `login_scopes` - (Optional) The list of scopes that should be requested as part of Facebook Login authentication.
     * 
     * `login_scopes` - (Optional) The list of OAuth 2.0 scopes that should be requested as part of GitHub Login authentication.
     * 
     * `login_scopes` - (Optional) The list of OAuth 2.0 scopes that should be requested as part of Google Sign-In authentication.
     * 
     * `login_scopes` - (Optional) The list of Login scopes that should be requested as part of Microsoft Account authentication.
     * 
     */
    public Optional<Output<List<String>>> loginScopes() {
        return Optional.ofNullable(this.loginScopes);
    }

    private WindowsWebAppSlotAuthSettingsV2MicrosoftV2Args() {}

    private WindowsWebAppSlotAuthSettingsV2MicrosoftV2Args(WindowsWebAppSlotAuthSettingsV2MicrosoftV2Args $) {
        this.allowedAudiences = $.allowedAudiences;
        this.clientId = $.clientId;
        this.clientSecretSettingName = $.clientSecretSettingName;
        this.loginScopes = $.loginScopes;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(WindowsWebAppSlotAuthSettingsV2MicrosoftV2Args defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private WindowsWebAppSlotAuthSettingsV2MicrosoftV2Args $;

        public Builder() {
            $ = new WindowsWebAppSlotAuthSettingsV2MicrosoftV2Args();
        }

        public Builder(WindowsWebAppSlotAuthSettingsV2MicrosoftV2Args defaults) {
            $ = new WindowsWebAppSlotAuthSettingsV2MicrosoftV2Args(Objects.requireNonNull(defaults));
        }

        /**
         * @param allowedAudiences Specifies a list of Allowed audience values to consider when validating JWTs issued by Azure Active Directory.
         * 
         * &gt; **NOTE:** This is configured on the Authentication Provider side and is Read Only here.
         * 
         * `allowed_audiences` - (Optional) Specifies a list of Allowed Audiences that should be requested as part of Google Sign-In authentication.`allowed_audiences` - (Optional) Specifies a list of Allowed Audiences that will be requested as part of Microsoft Sign-In authentication.
         * 
         * @return builder
         * 
         */
        public Builder allowedAudiences(@Nullable Output<List<String>> allowedAudiences) {
            $.allowedAudiences = allowedAudiences;
            return this;
        }

        /**
         * @param allowedAudiences Specifies a list of Allowed audience values to consider when validating JWTs issued by Azure Active Directory.
         * 
         * &gt; **NOTE:** This is configured on the Authentication Provider side and is Read Only here.
         * 
         * `allowed_audiences` - (Optional) Specifies a list of Allowed Audiences that should be requested as part of Google Sign-In authentication.`allowed_audiences` - (Optional) Specifies a list of Allowed Audiences that will be requested as part of Microsoft Sign-In authentication.
         * 
         * @return builder
         * 
         */
        public Builder allowedAudiences(List<String> allowedAudiences) {
            return allowedAudiences(Output.of(allowedAudiences));
        }

        /**
         * @param allowedAudiences Specifies a list of Allowed audience values to consider when validating JWTs issued by Azure Active Directory.
         * 
         * &gt; **NOTE:** This is configured on the Authentication Provider side and is Read Only here.
         * 
         * `allowed_audiences` - (Optional) Specifies a list of Allowed Audiences that should be requested as part of Google Sign-In authentication.`allowed_audiences` - (Optional) Specifies a list of Allowed Audiences that will be requested as part of Microsoft Sign-In authentication.
         * 
         * @return builder
         * 
         */
        public Builder allowedAudiences(String... allowedAudiences) {
            return allowedAudiences(List.of(allowedAudiences));
        }

        /**
         * @param clientId The ID of the Client to use to authenticate with the Custom OIDC.
         * 
         * @return builder
         * 
         */
        public Builder clientId(Output<String> clientId) {
            $.clientId = clientId;
            return this;
        }

        /**
         * @param clientId The ID of the Client to use to authenticate with the Custom OIDC.
         * 
         * @return builder
         * 
         */
        public Builder clientId(String clientId) {
            return clientId(Output.of(clientId));
        }

        /**
         * @param clientSecretSettingName The App Setting name that contains the client secret of the Client. Cannot be used with `client_secret`.
         * 
         * `client_secret_setting_name` - The App Setting name that contains the secret for this Custom OIDC Client. This is generated from `name` above and suffixed with `_PROVIDER_AUTHENTICATION_SECRET`.
         * 
         * @return builder
         * 
         */
        public Builder clientSecretSettingName(Output<String> clientSecretSettingName) {
            $.clientSecretSettingName = clientSecretSettingName;
            return this;
        }

        /**
         * @param clientSecretSettingName The App Setting name that contains the client secret of the Client. Cannot be used with `client_secret`.
         * 
         * `client_secret_setting_name` - The App Setting name that contains the secret for this Custom OIDC Client. This is generated from `name` above and suffixed with `_PROVIDER_AUTHENTICATION_SECRET`.
         * 
         * @return builder
         * 
         */
        public Builder clientSecretSettingName(String clientSecretSettingName) {
            return clientSecretSettingName(Output.of(clientSecretSettingName));
        }

        /**
         * @param loginScopes A list of Login Scopes provided by this Authentication Provider.
         * 
         * &gt; **NOTE:** This is configured on the Authentication Provider side and is Read Only here.
         * 
         * `login_scopes` - (Optional) The list of scopes that should be requested as part of Facebook Login authentication.
         * 
         * `login_scopes` - (Optional) The list of OAuth 2.0 scopes that should be requested as part of GitHub Login authentication.
         * 
         * `login_scopes` - (Optional) The list of OAuth 2.0 scopes that should be requested as part of Google Sign-In authentication.
         * 
         * `login_scopes` - (Optional) The list of Login scopes that should be requested as part of Microsoft Account authentication.
         * 
         * @return builder
         * 
         */
        public Builder loginScopes(@Nullable Output<List<String>> loginScopes) {
            $.loginScopes = loginScopes;
            return this;
        }

        /**
         * @param loginScopes A list of Login Scopes provided by this Authentication Provider.
         * 
         * &gt; **NOTE:** This is configured on the Authentication Provider side and is Read Only here.
         * 
         * `login_scopes` - (Optional) The list of scopes that should be requested as part of Facebook Login authentication.
         * 
         * `login_scopes` - (Optional) The list of OAuth 2.0 scopes that should be requested as part of GitHub Login authentication.
         * 
         * `login_scopes` - (Optional) The list of OAuth 2.0 scopes that should be requested as part of Google Sign-In authentication.
         * 
         * `login_scopes` - (Optional) The list of Login scopes that should be requested as part of Microsoft Account authentication.
         * 
         * @return builder
         * 
         */
        public Builder loginScopes(List<String> loginScopes) {
            return loginScopes(Output.of(loginScopes));
        }

        /**
         * @param loginScopes A list of Login Scopes provided by this Authentication Provider.
         * 
         * &gt; **NOTE:** This is configured on the Authentication Provider side and is Read Only here.
         * 
         * `login_scopes` - (Optional) The list of scopes that should be requested as part of Facebook Login authentication.
         * 
         * `login_scopes` - (Optional) The list of OAuth 2.0 scopes that should be requested as part of GitHub Login authentication.
         * 
         * `login_scopes` - (Optional) The list of OAuth 2.0 scopes that should be requested as part of Google Sign-In authentication.
         * 
         * `login_scopes` - (Optional) The list of Login scopes that should be requested as part of Microsoft Account authentication.
         * 
         * @return builder
         * 
         */
        public Builder loginScopes(String... loginScopes) {
            return loginScopes(List.of(loginScopes));
        }

        public WindowsWebAppSlotAuthSettingsV2MicrosoftV2Args build() {
            $.clientId = Objects.requireNonNull($.clientId, "expected parameter 'clientId' to be non-null");
            $.clientSecretSettingName = Objects.requireNonNull($.clientSecretSettingName, "expected parameter 'clientSecretSettingName' to be non-null");
            return $;
        }
    }

}
