// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.devcenter;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ProjectPoolArgs extends com.pulumi.resources.ResourceArgs {

    public static final ProjectPoolArgs Empty = new ProjectPoolArgs();

    /**
     * The name of the Dev Center Dev Box Definition.
     * 
     */
    @Import(name="devBoxDefinitionName", required=true)
    private Output<String> devBoxDefinitionName;

    /**
     * @return The name of the Dev Center Dev Box Definition.
     * 
     */
    public Output<String> devBoxDefinitionName() {
        return this.devBoxDefinitionName;
    }

    /**
     * The name of the Dev Center Attached Network in parent Project of the Dev Center Project Pool.
     * 
     */
    @Import(name="devCenterAttachedNetworkName", required=true)
    private Output<String> devCenterAttachedNetworkName;

    /**
     * @return The name of the Dev Center Attached Network in parent Project of the Dev Center Project Pool.
     * 
     */
    public Output<String> devCenterAttachedNetworkName() {
        return this.devCenterAttachedNetworkName;
    }

    /**
     * The ID of the associated Dev Center Project. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="devCenterProjectId", required=true)
    private Output<String> devCenterProjectId;

    /**
     * @return The ID of the associated Dev Center Project. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> devCenterProjectId() {
        return this.devCenterProjectId;
    }

    /**
     * Specifies whether owners of Dev Boxes in the Dev Center Project Pool are added as local administrators on the Dev Box.
     * 
     */
    @Import(name="localAdministratorEnabled", required=true)
    private Output<Boolean> localAdministratorEnabled;

    /**
     * @return Specifies whether owners of Dev Boxes in the Dev Center Project Pool are added as local administrators on the Dev Box.
     * 
     */
    public Output<Boolean> localAdministratorEnabled() {
        return this.localAdministratorEnabled;
    }

    /**
     * The Azure Region where the Dev Center Project Pool should exist. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="location")
    private @Nullable Output<String> location;

    /**
     * @return The Azure Region where the Dev Center Project Pool should exist. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * A list of the regions of the managed Virtual Network. When specified, the Dev Center Project Pool will use a Microsoft managed network.
     * 
     * &gt; **Note:** Currently only one region can be specified for `managedVirtualNetworkRegions`.
     * 
     */
    @Import(name="managedVirtualNetworkRegions")
    private @Nullable Output<String> managedVirtualNetworkRegions;

    /**
     * @return A list of the regions of the managed Virtual Network. When specified, the Dev Center Project Pool will use a Microsoft managed network.
     * 
     * &gt; **Note:** Currently only one region can be specified for `managedVirtualNetworkRegions`.
     * 
     */
    public Optional<Output<String>> managedVirtualNetworkRegions() {
        return Optional.ofNullable(this.managedVirtualNetworkRegions);
    }

    /**
     * Specifies the name of this Dev Center Project Pool. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Specifies the name of this Dev Center Project Pool. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Specifies whether Dev Boxes in the Pool will have SSO enabled or disabled. Defaults to `false`.
     * 
     */
    @Import(name="singleSignOnEnabled")
    private @Nullable Output<Boolean> singleSignOnEnabled;

    /**
     * @return Specifies whether Dev Boxes in the Pool will have SSO enabled or disabled. Defaults to `false`.
     * 
     */
    public Optional<Output<Boolean>> singleSignOnEnabled() {
        return Optional.ofNullable(this.singleSignOnEnabled);
    }

    /**
     * The specified time in minutes to wait before stopping a Dev Center Dev Box once disconnect is detected. Possible values are between `60` and `480`.
     * 
     */
    @Import(name="stopOnDisconnectGracePeriodMinutes")
    private @Nullable Output<Integer> stopOnDisconnectGracePeriodMinutes;

    /**
     * @return The specified time in minutes to wait before stopping a Dev Center Dev Box once disconnect is detected. Possible values are between `60` and `480`.
     * 
     */
    public Optional<Output<Integer>> stopOnDisconnectGracePeriodMinutes() {
        return Optional.ofNullable(this.stopOnDisconnectGracePeriodMinutes);
    }

    /**
     * A mapping of tags which should be assigned to the Dev Center Project Pool.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return A mapping of tags which should be assigned to the Dev Center Project Pool.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private ProjectPoolArgs() {}

    private ProjectPoolArgs(ProjectPoolArgs $) {
        this.devBoxDefinitionName = $.devBoxDefinitionName;
        this.devCenterAttachedNetworkName = $.devCenterAttachedNetworkName;
        this.devCenterProjectId = $.devCenterProjectId;
        this.localAdministratorEnabled = $.localAdministratorEnabled;
        this.location = $.location;
        this.managedVirtualNetworkRegions = $.managedVirtualNetworkRegions;
        this.name = $.name;
        this.singleSignOnEnabled = $.singleSignOnEnabled;
        this.stopOnDisconnectGracePeriodMinutes = $.stopOnDisconnectGracePeriodMinutes;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ProjectPoolArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ProjectPoolArgs $;

        public Builder() {
            $ = new ProjectPoolArgs();
        }

        public Builder(ProjectPoolArgs defaults) {
            $ = new ProjectPoolArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param devBoxDefinitionName The name of the Dev Center Dev Box Definition.
         * 
         * @return builder
         * 
         */
        public Builder devBoxDefinitionName(Output<String> devBoxDefinitionName) {
            $.devBoxDefinitionName = devBoxDefinitionName;
            return this;
        }

        /**
         * @param devBoxDefinitionName The name of the Dev Center Dev Box Definition.
         * 
         * @return builder
         * 
         */
        public Builder devBoxDefinitionName(String devBoxDefinitionName) {
            return devBoxDefinitionName(Output.of(devBoxDefinitionName));
        }

        /**
         * @param devCenterAttachedNetworkName The name of the Dev Center Attached Network in parent Project of the Dev Center Project Pool.
         * 
         * @return builder
         * 
         */
        public Builder devCenterAttachedNetworkName(Output<String> devCenterAttachedNetworkName) {
            $.devCenterAttachedNetworkName = devCenterAttachedNetworkName;
            return this;
        }

        /**
         * @param devCenterAttachedNetworkName The name of the Dev Center Attached Network in parent Project of the Dev Center Project Pool.
         * 
         * @return builder
         * 
         */
        public Builder devCenterAttachedNetworkName(String devCenterAttachedNetworkName) {
            return devCenterAttachedNetworkName(Output.of(devCenterAttachedNetworkName));
        }

        /**
         * @param devCenterProjectId The ID of the associated Dev Center Project. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder devCenterProjectId(Output<String> devCenterProjectId) {
            $.devCenterProjectId = devCenterProjectId;
            return this;
        }

        /**
         * @param devCenterProjectId The ID of the associated Dev Center Project. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder devCenterProjectId(String devCenterProjectId) {
            return devCenterProjectId(Output.of(devCenterProjectId));
        }

        /**
         * @param localAdministratorEnabled Specifies whether owners of Dev Boxes in the Dev Center Project Pool are added as local administrators on the Dev Box.
         * 
         * @return builder
         * 
         */
        public Builder localAdministratorEnabled(Output<Boolean> localAdministratorEnabled) {
            $.localAdministratorEnabled = localAdministratorEnabled;
            return this;
        }

        /**
         * @param localAdministratorEnabled Specifies whether owners of Dev Boxes in the Dev Center Project Pool are added as local administrators on the Dev Box.
         * 
         * @return builder
         * 
         */
        public Builder localAdministratorEnabled(Boolean localAdministratorEnabled) {
            return localAdministratorEnabled(Output.of(localAdministratorEnabled));
        }

        /**
         * @param location The Azure Region where the Dev Center Project Pool should exist. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location The Azure Region where the Dev Center Project Pool should exist. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param managedVirtualNetworkRegions A list of the regions of the managed Virtual Network. When specified, the Dev Center Project Pool will use a Microsoft managed network.
         * 
         * &gt; **Note:** Currently only one region can be specified for `managedVirtualNetworkRegions`.
         * 
         * @return builder
         * 
         */
        public Builder managedVirtualNetworkRegions(@Nullable Output<String> managedVirtualNetworkRegions) {
            $.managedVirtualNetworkRegions = managedVirtualNetworkRegions;
            return this;
        }

        /**
         * @param managedVirtualNetworkRegions A list of the regions of the managed Virtual Network. When specified, the Dev Center Project Pool will use a Microsoft managed network.
         * 
         * &gt; **Note:** Currently only one region can be specified for `managedVirtualNetworkRegions`.
         * 
         * @return builder
         * 
         */
        public Builder managedVirtualNetworkRegions(String managedVirtualNetworkRegions) {
            return managedVirtualNetworkRegions(Output.of(managedVirtualNetworkRegions));
        }

        /**
         * @param name Specifies the name of this Dev Center Project Pool. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Specifies the name of this Dev Center Project Pool. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param singleSignOnEnabled Specifies whether Dev Boxes in the Pool will have SSO enabled or disabled. Defaults to `false`.
         * 
         * @return builder
         * 
         */
        public Builder singleSignOnEnabled(@Nullable Output<Boolean> singleSignOnEnabled) {
            $.singleSignOnEnabled = singleSignOnEnabled;
            return this;
        }

        /**
         * @param singleSignOnEnabled Specifies whether Dev Boxes in the Pool will have SSO enabled or disabled. Defaults to `false`.
         * 
         * @return builder
         * 
         */
        public Builder singleSignOnEnabled(Boolean singleSignOnEnabled) {
            return singleSignOnEnabled(Output.of(singleSignOnEnabled));
        }

        /**
         * @param stopOnDisconnectGracePeriodMinutes The specified time in minutes to wait before stopping a Dev Center Dev Box once disconnect is detected. Possible values are between `60` and `480`.
         * 
         * @return builder
         * 
         */
        public Builder stopOnDisconnectGracePeriodMinutes(@Nullable Output<Integer> stopOnDisconnectGracePeriodMinutes) {
            $.stopOnDisconnectGracePeriodMinutes = stopOnDisconnectGracePeriodMinutes;
            return this;
        }

        /**
         * @param stopOnDisconnectGracePeriodMinutes The specified time in minutes to wait before stopping a Dev Center Dev Box once disconnect is detected. Possible values are between `60` and `480`.
         * 
         * @return builder
         * 
         */
        public Builder stopOnDisconnectGracePeriodMinutes(Integer stopOnDisconnectGracePeriodMinutes) {
            return stopOnDisconnectGracePeriodMinutes(Output.of(stopOnDisconnectGracePeriodMinutes));
        }

        /**
         * @param tags A mapping of tags which should be assigned to the Dev Center Project Pool.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags A mapping of tags which should be assigned to the Dev Center Project Pool.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public ProjectPoolArgs build() {
            if ($.devBoxDefinitionName == null) {
                throw new MissingRequiredPropertyException("ProjectPoolArgs", "devBoxDefinitionName");
            }
            if ($.devCenterAttachedNetworkName == null) {
                throw new MissingRequiredPropertyException("ProjectPoolArgs", "devCenterAttachedNetworkName");
            }
            if ($.devCenterProjectId == null) {
                throw new MissingRequiredPropertyException("ProjectPoolArgs", "devCenterProjectId");
            }
            if ($.localAdministratorEnabled == null) {
                throw new MissingRequiredPropertyException("ProjectPoolArgs", "localAdministratorEnabled");
            }
            return $;
        }
    }

}
