// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.postgresql.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class FlexibleServerAuthentication {
    /**
     * @return Whether or not Active Directory authentication is allowed to access the PostgreSQL Flexible Server. Defaults to `false`.
     * 
     */
    private @Nullable Boolean activeDirectoryAuthEnabled;
    /**
     * @return Whether or not password authentication is allowed to access the PostgreSQL Flexible Server. Defaults to `true`.
     * 
     */
    private @Nullable Boolean passwordAuthEnabled;
    /**
     * @return The Tenant ID of the Azure Active Directory which is used by the Active Directory authentication. `active_directory_auth_enabled` must be set to `true`.
     * 
     * &gt; **Note:** Setting `active_directory_auth_enabled` to `true` requires a Service Principal for the Postgres Flexible Server. For more details see [this document](https://learn.microsoft.com/en-us/azure/postgresql/flexible-server/how-to-configure-sign-in-azure-ad-authentication).
     * 
     * &gt; **Note:** `tenant_id` is required when `active_directory_auth_enabled` is set to `true`. And it should not be specified when `active_directory_auth_enabled` is set to `false`
     * 
     */
    private @Nullable String tenantId;

    private FlexibleServerAuthentication() {}
    /**
     * @return Whether or not Active Directory authentication is allowed to access the PostgreSQL Flexible Server. Defaults to `false`.
     * 
     */
    public Optional<Boolean> activeDirectoryAuthEnabled() {
        return Optional.ofNullable(this.activeDirectoryAuthEnabled);
    }
    /**
     * @return Whether or not password authentication is allowed to access the PostgreSQL Flexible Server. Defaults to `true`.
     * 
     */
    public Optional<Boolean> passwordAuthEnabled() {
        return Optional.ofNullable(this.passwordAuthEnabled);
    }
    /**
     * @return The Tenant ID of the Azure Active Directory which is used by the Active Directory authentication. `active_directory_auth_enabled` must be set to `true`.
     * 
     * &gt; **Note:** Setting `active_directory_auth_enabled` to `true` requires a Service Principal for the Postgres Flexible Server. For more details see [this document](https://learn.microsoft.com/en-us/azure/postgresql/flexible-server/how-to-configure-sign-in-azure-ad-authentication).
     * 
     * &gt; **Note:** `tenant_id` is required when `active_directory_auth_enabled` is set to `true`. And it should not be specified when `active_directory_auth_enabled` is set to `false`
     * 
     */
    public Optional<String> tenantId() {
        return Optional.ofNullable(this.tenantId);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(FlexibleServerAuthentication defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Boolean activeDirectoryAuthEnabled;
        private @Nullable Boolean passwordAuthEnabled;
        private @Nullable String tenantId;
        public Builder() {}
        public Builder(FlexibleServerAuthentication defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.activeDirectoryAuthEnabled = defaults.activeDirectoryAuthEnabled;
    	      this.passwordAuthEnabled = defaults.passwordAuthEnabled;
    	      this.tenantId = defaults.tenantId;
        }

        @CustomType.Setter
        public Builder activeDirectoryAuthEnabled(@Nullable Boolean activeDirectoryAuthEnabled) {

            this.activeDirectoryAuthEnabled = activeDirectoryAuthEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder passwordAuthEnabled(@Nullable Boolean passwordAuthEnabled) {

            this.passwordAuthEnabled = passwordAuthEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder tenantId(@Nullable String tenantId) {

            this.tenantId = tenantId;
            return this;
        }
        public FlexibleServerAuthentication build() {
            final var _resultValue = new FlexibleServerAuthentication();
            _resultValue.activeDirectoryAuthEnabled = activeDirectoryAuthEnabled;
            _resultValue.passwordAuthEnabled = passwordAuthEnabled;
            _resultValue.tenantId = tenantId;
            return _resultValue;
        }
    }
}
