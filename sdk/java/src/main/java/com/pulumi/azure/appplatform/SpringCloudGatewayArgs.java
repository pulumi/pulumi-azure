// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.appplatform;

import com.pulumi.azure.appplatform.inputs.SpringCloudGatewayApiMetadataArgs;
import com.pulumi.azure.appplatform.inputs.SpringCloudGatewayClientAuthorizationArgs;
import com.pulumi.azure.appplatform.inputs.SpringCloudGatewayCorsArgs;
import com.pulumi.azure.appplatform.inputs.SpringCloudGatewayQuotaArgs;
import com.pulumi.azure.appplatform.inputs.SpringCloudGatewaySsoArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SpringCloudGatewayArgs extends com.pulumi.resources.ResourceArgs {

    public static final SpringCloudGatewayArgs Empty = new SpringCloudGatewayArgs();

    /**
     * A `api_metadata` block as defined below.
     * 
     */
    @Import(name="apiMetadata")
    private @Nullable Output<SpringCloudGatewayApiMetadataArgs> apiMetadata;

    /**
     * @return A `api_metadata` block as defined below.
     * 
     */
    public Optional<Output<SpringCloudGatewayApiMetadataArgs>> apiMetadata() {
        return Optional.ofNullable(this.apiMetadata);
    }

    /**
     * Specifies a list of application performance monitoring types used in the Spring Cloud Gateway. The allowed values are `AppDynamics`, `ApplicationInsights`, `Dynatrace`, `ElasticAPM` and `NewRelic`.
     * 
     */
    @Import(name="applicationPerformanceMonitoringTypes")
    private @Nullable Output<List<String>> applicationPerformanceMonitoringTypes;

    /**
     * @return Specifies a list of application performance monitoring types used in the Spring Cloud Gateway. The allowed values are `AppDynamics`, `ApplicationInsights`, `Dynatrace`, `ElasticAPM` and `NewRelic`.
     * 
     */
    public Optional<Output<List<String>>> applicationPerformanceMonitoringTypes() {
        return Optional.ofNullable(this.applicationPerformanceMonitoringTypes);
    }

    /**
     * A `client_authorization` block as defined below.
     * 
     */
    @Import(name="clientAuthorization")
    private @Nullable Output<SpringCloudGatewayClientAuthorizationArgs> clientAuthorization;

    /**
     * @return A `client_authorization` block as defined below.
     * 
     */
    public Optional<Output<SpringCloudGatewayClientAuthorizationArgs>> clientAuthorization() {
        return Optional.ofNullable(this.clientAuthorization);
    }

    /**
     * A `cors` block as defined below.
     * 
     */
    @Import(name="cors")
    private @Nullable Output<SpringCloudGatewayCorsArgs> cors;

    /**
     * @return A `cors` block as defined below.
     * 
     */
    public Optional<Output<SpringCloudGatewayCorsArgs>> cors() {
        return Optional.ofNullable(this.cors);
    }

    /**
     * Specifies the environment variables of the Spring Cloud Gateway as a map of key-value pairs. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="environmentVariables")
    private @Nullable Output<Map<String,String>> environmentVariables;

    /**
     * @return Specifies the environment variables of the Spring Cloud Gateway as a map of key-value pairs. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<Map<String,String>>> environmentVariables() {
        return Optional.ofNullable(this.environmentVariables);
    }

    /**
     * is only https is allowed?
     * 
     */
    @Import(name="httpsOnly")
    private @Nullable Output<Boolean> httpsOnly;

    /**
     * @return is only https is allowed?
     * 
     */
    public Optional<Output<Boolean>> httpsOnly() {
        return Optional.ofNullable(this.httpsOnly);
    }

    /**
     * Specifies the required instance count of the Spring Cloud Gateway. Possible Values are between `1` and `500`. Defaults to `1` if not specified.
     * 
     */
    @Import(name="instanceCount")
    private @Nullable Output<Integer> instanceCount;

    /**
     * @return Specifies the required instance count of the Spring Cloud Gateway. Possible Values are between `1` and `500`. Defaults to `1` if not specified.
     * 
     */
    public Optional<Output<Integer>> instanceCount() {
        return Optional.ofNullable(this.instanceCount);
    }

    /**
     * The name which should be used for this Spring Cloud Gateway. Changing this forces a new Spring Cloud Gateway to be created. The only possible value is `default`.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name which should be used for this Spring Cloud Gateway. Changing this forces a new Spring Cloud Gateway to be created. The only possible value is `default`.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Indicates whether the Spring Cloud Gateway exposes endpoint.
     * 
     */
    @Import(name="publicNetworkAccessEnabled")
    private @Nullable Output<Boolean> publicNetworkAccessEnabled;

    /**
     * @return Indicates whether the Spring Cloud Gateway exposes endpoint.
     * 
     */
    public Optional<Output<Boolean>> publicNetworkAccessEnabled() {
        return Optional.ofNullable(this.publicNetworkAccessEnabled);
    }

    /**
     * A `quota` block as defined below.
     * 
     */
    @Import(name="quota")
    private @Nullable Output<SpringCloudGatewayQuotaArgs> quota;

    /**
     * @return A `quota` block as defined below.
     * 
     */
    public Optional<Output<SpringCloudGatewayQuotaArgs>> quota() {
        return Optional.ofNullable(this.quota);
    }

    /**
     * Specifies the sensitive environment variables of the Spring Cloud Gateway as a map of key-value pairs. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="sensitiveEnvironmentVariables")
    private @Nullable Output<Map<String,String>> sensitiveEnvironmentVariables;

    /**
     * @return Specifies the sensitive environment variables of the Spring Cloud Gateway as a map of key-value pairs. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<Map<String,String>>> sensitiveEnvironmentVariables() {
        return Optional.ofNullable(this.sensitiveEnvironmentVariables);
    }

    /**
     * The ID of the Spring Cloud Service. Changing this forces a new Spring Cloud Gateway to be created.
     * 
     */
    @Import(name="springCloudServiceId", required=true)
    private Output<String> springCloudServiceId;

    /**
     * @return The ID of the Spring Cloud Service. Changing this forces a new Spring Cloud Gateway to be created.
     * 
     */
    public Output<String> springCloudServiceId() {
        return this.springCloudServiceId;
    }

    /**
     * A `sso` block as defined below.
     * 
     */
    @Import(name="sso")
    private @Nullable Output<SpringCloudGatewaySsoArgs> sso;

    /**
     * @return A `sso` block as defined below.
     * 
     */
    public Optional<Output<SpringCloudGatewaySsoArgs>> sso() {
        return Optional.ofNullable(this.sso);
    }

    private SpringCloudGatewayArgs() {}

    private SpringCloudGatewayArgs(SpringCloudGatewayArgs $) {
        this.apiMetadata = $.apiMetadata;
        this.applicationPerformanceMonitoringTypes = $.applicationPerformanceMonitoringTypes;
        this.clientAuthorization = $.clientAuthorization;
        this.cors = $.cors;
        this.environmentVariables = $.environmentVariables;
        this.httpsOnly = $.httpsOnly;
        this.instanceCount = $.instanceCount;
        this.name = $.name;
        this.publicNetworkAccessEnabled = $.publicNetworkAccessEnabled;
        this.quota = $.quota;
        this.sensitiveEnvironmentVariables = $.sensitiveEnvironmentVariables;
        this.springCloudServiceId = $.springCloudServiceId;
        this.sso = $.sso;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SpringCloudGatewayArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SpringCloudGatewayArgs $;

        public Builder() {
            $ = new SpringCloudGatewayArgs();
        }

        public Builder(SpringCloudGatewayArgs defaults) {
            $ = new SpringCloudGatewayArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param apiMetadata A `api_metadata` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder apiMetadata(@Nullable Output<SpringCloudGatewayApiMetadataArgs> apiMetadata) {
            $.apiMetadata = apiMetadata;
            return this;
        }

        /**
         * @param apiMetadata A `api_metadata` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder apiMetadata(SpringCloudGatewayApiMetadataArgs apiMetadata) {
            return apiMetadata(Output.of(apiMetadata));
        }

        /**
         * @param applicationPerformanceMonitoringTypes Specifies a list of application performance monitoring types used in the Spring Cloud Gateway. The allowed values are `AppDynamics`, `ApplicationInsights`, `Dynatrace`, `ElasticAPM` and `NewRelic`.
         * 
         * @return builder
         * 
         */
        public Builder applicationPerformanceMonitoringTypes(@Nullable Output<List<String>> applicationPerformanceMonitoringTypes) {
            $.applicationPerformanceMonitoringTypes = applicationPerformanceMonitoringTypes;
            return this;
        }

        /**
         * @param applicationPerformanceMonitoringTypes Specifies a list of application performance monitoring types used in the Spring Cloud Gateway. The allowed values are `AppDynamics`, `ApplicationInsights`, `Dynatrace`, `ElasticAPM` and `NewRelic`.
         * 
         * @return builder
         * 
         */
        public Builder applicationPerformanceMonitoringTypes(List<String> applicationPerformanceMonitoringTypes) {
            return applicationPerformanceMonitoringTypes(Output.of(applicationPerformanceMonitoringTypes));
        }

        /**
         * @param applicationPerformanceMonitoringTypes Specifies a list of application performance monitoring types used in the Spring Cloud Gateway. The allowed values are `AppDynamics`, `ApplicationInsights`, `Dynatrace`, `ElasticAPM` and `NewRelic`.
         * 
         * @return builder
         * 
         */
        public Builder applicationPerformanceMonitoringTypes(String... applicationPerformanceMonitoringTypes) {
            return applicationPerformanceMonitoringTypes(List.of(applicationPerformanceMonitoringTypes));
        }

        /**
         * @param clientAuthorization A `client_authorization` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder clientAuthorization(@Nullable Output<SpringCloudGatewayClientAuthorizationArgs> clientAuthorization) {
            $.clientAuthorization = clientAuthorization;
            return this;
        }

        /**
         * @param clientAuthorization A `client_authorization` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder clientAuthorization(SpringCloudGatewayClientAuthorizationArgs clientAuthorization) {
            return clientAuthorization(Output.of(clientAuthorization));
        }

        /**
         * @param cors A `cors` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder cors(@Nullable Output<SpringCloudGatewayCorsArgs> cors) {
            $.cors = cors;
            return this;
        }

        /**
         * @param cors A `cors` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder cors(SpringCloudGatewayCorsArgs cors) {
            return cors(Output.of(cors));
        }

        /**
         * @param environmentVariables Specifies the environment variables of the Spring Cloud Gateway as a map of key-value pairs. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder environmentVariables(@Nullable Output<Map<String,String>> environmentVariables) {
            $.environmentVariables = environmentVariables;
            return this;
        }

        /**
         * @param environmentVariables Specifies the environment variables of the Spring Cloud Gateway as a map of key-value pairs. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder environmentVariables(Map<String,String> environmentVariables) {
            return environmentVariables(Output.of(environmentVariables));
        }

        /**
         * @param httpsOnly is only https is allowed?
         * 
         * @return builder
         * 
         */
        public Builder httpsOnly(@Nullable Output<Boolean> httpsOnly) {
            $.httpsOnly = httpsOnly;
            return this;
        }

        /**
         * @param httpsOnly is only https is allowed?
         * 
         * @return builder
         * 
         */
        public Builder httpsOnly(Boolean httpsOnly) {
            return httpsOnly(Output.of(httpsOnly));
        }

        /**
         * @param instanceCount Specifies the required instance count of the Spring Cloud Gateway. Possible Values are between `1` and `500`. Defaults to `1` if not specified.
         * 
         * @return builder
         * 
         */
        public Builder instanceCount(@Nullable Output<Integer> instanceCount) {
            $.instanceCount = instanceCount;
            return this;
        }

        /**
         * @param instanceCount Specifies the required instance count of the Spring Cloud Gateway. Possible Values are between `1` and `500`. Defaults to `1` if not specified.
         * 
         * @return builder
         * 
         */
        public Builder instanceCount(Integer instanceCount) {
            return instanceCount(Output.of(instanceCount));
        }

        /**
         * @param name The name which should be used for this Spring Cloud Gateway. Changing this forces a new Spring Cloud Gateway to be created. The only possible value is `default`.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name which should be used for this Spring Cloud Gateway. Changing this forces a new Spring Cloud Gateway to be created. The only possible value is `default`.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param publicNetworkAccessEnabled Indicates whether the Spring Cloud Gateway exposes endpoint.
         * 
         * @return builder
         * 
         */
        public Builder publicNetworkAccessEnabled(@Nullable Output<Boolean> publicNetworkAccessEnabled) {
            $.publicNetworkAccessEnabled = publicNetworkAccessEnabled;
            return this;
        }

        /**
         * @param publicNetworkAccessEnabled Indicates whether the Spring Cloud Gateway exposes endpoint.
         * 
         * @return builder
         * 
         */
        public Builder publicNetworkAccessEnabled(Boolean publicNetworkAccessEnabled) {
            return publicNetworkAccessEnabled(Output.of(publicNetworkAccessEnabled));
        }

        /**
         * @param quota A `quota` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder quota(@Nullable Output<SpringCloudGatewayQuotaArgs> quota) {
            $.quota = quota;
            return this;
        }

        /**
         * @param quota A `quota` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder quota(SpringCloudGatewayQuotaArgs quota) {
            return quota(Output.of(quota));
        }

        /**
         * @param sensitiveEnvironmentVariables Specifies the sensitive environment variables of the Spring Cloud Gateway as a map of key-value pairs. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder sensitiveEnvironmentVariables(@Nullable Output<Map<String,String>> sensitiveEnvironmentVariables) {
            $.sensitiveEnvironmentVariables = sensitiveEnvironmentVariables;
            return this;
        }

        /**
         * @param sensitiveEnvironmentVariables Specifies the sensitive environment variables of the Spring Cloud Gateway as a map of key-value pairs. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder sensitiveEnvironmentVariables(Map<String,String> sensitiveEnvironmentVariables) {
            return sensitiveEnvironmentVariables(Output.of(sensitiveEnvironmentVariables));
        }

        /**
         * @param springCloudServiceId The ID of the Spring Cloud Service. Changing this forces a new Spring Cloud Gateway to be created.
         * 
         * @return builder
         * 
         */
        public Builder springCloudServiceId(Output<String> springCloudServiceId) {
            $.springCloudServiceId = springCloudServiceId;
            return this;
        }

        /**
         * @param springCloudServiceId The ID of the Spring Cloud Service. Changing this forces a new Spring Cloud Gateway to be created.
         * 
         * @return builder
         * 
         */
        public Builder springCloudServiceId(String springCloudServiceId) {
            return springCloudServiceId(Output.of(springCloudServiceId));
        }

        /**
         * @param sso A `sso` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder sso(@Nullable Output<SpringCloudGatewaySsoArgs> sso) {
            $.sso = sso;
            return this;
        }

        /**
         * @param sso A `sso` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder sso(SpringCloudGatewaySsoArgs sso) {
            return sso(Output.of(sso));
        }

        public SpringCloudGatewayArgs build() {
            if ($.springCloudServiceId == null) {
                throw new MissingRequiredPropertyException("SpringCloudGatewayArgs", "springCloudServiceId");
            }
            return $;
        }
    }

}
