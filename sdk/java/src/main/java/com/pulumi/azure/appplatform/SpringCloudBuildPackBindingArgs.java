// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.appplatform;

import com.pulumi.azure.appplatform.inputs.SpringCloudBuildPackBindingLaunchArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SpringCloudBuildPackBindingArgs extends com.pulumi.resources.ResourceArgs {

    public static final SpringCloudBuildPackBindingArgs Empty = new SpringCloudBuildPackBindingArgs();

    /**
     * Specifies the Build Pack Binding Type. Allowed values are `ApacheSkyWalking`, `AppDynamics`, `ApplicationInsights`, `Dynatrace`, `ElasticAPM` and `NewRelic`.
     * 
     */
    @Import(name="bindingType")
    private @Nullable Output<String> bindingType;

    /**
     * @return Specifies the Build Pack Binding Type. Allowed values are `ApacheSkyWalking`, `AppDynamics`, `ApplicationInsights`, `Dynatrace`, `ElasticAPM` and `NewRelic`.
     * 
     */
    public Optional<Output<String>> bindingType() {
        return Optional.ofNullable(this.bindingType);
    }

    /**
     * A `launch` block as defined below.
     * 
     */
    @Import(name="launch")
    private @Nullable Output<SpringCloudBuildPackBindingLaunchArgs> launch;

    /**
     * @return A `launch` block as defined below.
     * 
     */
    public Optional<Output<SpringCloudBuildPackBindingLaunchArgs>> launch() {
        return Optional.ofNullable(this.launch);
    }

    /**
     * The name which should be used for this Spring Cloud Build Pack Binding. Changing this forces a new Spring Cloud Build Pack Binding to be created.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name which should be used for this Spring Cloud Build Pack Binding. Changing this forces a new Spring Cloud Build Pack Binding to be created.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The ID of the Spring Cloud Builder. Changing this forces a new Spring Cloud Build Pack Binding to be created.
     * 
     */
    @Import(name="springCloudBuilderId", required=true)
    private Output<String> springCloudBuilderId;

    /**
     * @return The ID of the Spring Cloud Builder. Changing this forces a new Spring Cloud Build Pack Binding to be created.
     * 
     */
    public Output<String> springCloudBuilderId() {
        return this.springCloudBuilderId;
    }

    private SpringCloudBuildPackBindingArgs() {}

    private SpringCloudBuildPackBindingArgs(SpringCloudBuildPackBindingArgs $) {
        this.bindingType = $.bindingType;
        this.launch = $.launch;
        this.name = $.name;
        this.springCloudBuilderId = $.springCloudBuilderId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SpringCloudBuildPackBindingArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SpringCloudBuildPackBindingArgs $;

        public Builder() {
            $ = new SpringCloudBuildPackBindingArgs();
        }

        public Builder(SpringCloudBuildPackBindingArgs defaults) {
            $ = new SpringCloudBuildPackBindingArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param bindingType Specifies the Build Pack Binding Type. Allowed values are `ApacheSkyWalking`, `AppDynamics`, `ApplicationInsights`, `Dynatrace`, `ElasticAPM` and `NewRelic`.
         * 
         * @return builder
         * 
         */
        public Builder bindingType(@Nullable Output<String> bindingType) {
            $.bindingType = bindingType;
            return this;
        }

        /**
         * @param bindingType Specifies the Build Pack Binding Type. Allowed values are `ApacheSkyWalking`, `AppDynamics`, `ApplicationInsights`, `Dynatrace`, `ElasticAPM` and `NewRelic`.
         * 
         * @return builder
         * 
         */
        public Builder bindingType(String bindingType) {
            return bindingType(Output.of(bindingType));
        }

        /**
         * @param launch A `launch` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder launch(@Nullable Output<SpringCloudBuildPackBindingLaunchArgs> launch) {
            $.launch = launch;
            return this;
        }

        /**
         * @param launch A `launch` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder launch(SpringCloudBuildPackBindingLaunchArgs launch) {
            return launch(Output.of(launch));
        }

        /**
         * @param name The name which should be used for this Spring Cloud Build Pack Binding. Changing this forces a new Spring Cloud Build Pack Binding to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name which should be used for this Spring Cloud Build Pack Binding. Changing this forces a new Spring Cloud Build Pack Binding to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param springCloudBuilderId The ID of the Spring Cloud Builder. Changing this forces a new Spring Cloud Build Pack Binding to be created.
         * 
         * @return builder
         * 
         */
        public Builder springCloudBuilderId(Output<String> springCloudBuilderId) {
            $.springCloudBuilderId = springCloudBuilderId;
            return this;
        }

        /**
         * @param springCloudBuilderId The ID of the Spring Cloud Builder. Changing this forces a new Spring Cloud Build Pack Binding to be created.
         * 
         * @return builder
         * 
         */
        public Builder springCloudBuilderId(String springCloudBuilderId) {
            return springCloudBuilderId(Output.of(springCloudBuilderId));
        }

        public SpringCloudBuildPackBindingArgs build() {
            if ($.springCloudBuilderId == null) {
                throw new MissingRequiredPropertyException("SpringCloudBuildPackBindingArgs", "springCloudBuilderId");
            }
            return $;
        }
    }

}
