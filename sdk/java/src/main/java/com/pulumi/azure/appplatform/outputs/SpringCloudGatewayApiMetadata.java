// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.appplatform.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class SpringCloudGatewayApiMetadata {
    /**
     * @return Detailed description of the APIs available on the Gateway instance.
     * 
     */
    private @Nullable String description;
    /**
     * @return Location of additional documentation for the APIs available on the Gateway instance.
     * 
     */
    private @Nullable String documentationUrl;
    /**
     * @return Base URL that API consumers will use to access APIs on the Gateway instance.
     * 
     */
    private @Nullable String serverUrl;
    /**
     * @return Specifies the title describing the context of the APIs available on the Gateway instance.
     * 
     */
    private @Nullable String title;
    /**
     * @return Specifies the version of APIs available on this Gateway instance.
     * 
     */
    private @Nullable String version;

    private SpringCloudGatewayApiMetadata() {}
    /**
     * @return Detailed description of the APIs available on the Gateway instance.
     * 
     */
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }
    /**
     * @return Location of additional documentation for the APIs available on the Gateway instance.
     * 
     */
    public Optional<String> documentationUrl() {
        return Optional.ofNullable(this.documentationUrl);
    }
    /**
     * @return Base URL that API consumers will use to access APIs on the Gateway instance.
     * 
     */
    public Optional<String> serverUrl() {
        return Optional.ofNullable(this.serverUrl);
    }
    /**
     * @return Specifies the title describing the context of the APIs available on the Gateway instance.
     * 
     */
    public Optional<String> title() {
        return Optional.ofNullable(this.title);
    }
    /**
     * @return Specifies the version of APIs available on this Gateway instance.
     * 
     */
    public Optional<String> version() {
        return Optional.ofNullable(this.version);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SpringCloudGatewayApiMetadata defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String description;
        private @Nullable String documentationUrl;
        private @Nullable String serverUrl;
        private @Nullable String title;
        private @Nullable String version;
        public Builder() {}
        public Builder(SpringCloudGatewayApiMetadata defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.description = defaults.description;
    	      this.documentationUrl = defaults.documentationUrl;
    	      this.serverUrl = defaults.serverUrl;
    	      this.title = defaults.title;
    	      this.version = defaults.version;
        }

        @CustomType.Setter
        public Builder description(@Nullable String description) {

            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder documentationUrl(@Nullable String documentationUrl) {

            this.documentationUrl = documentationUrl;
            return this;
        }
        @CustomType.Setter
        public Builder serverUrl(@Nullable String serverUrl) {

            this.serverUrl = serverUrl;
            return this;
        }
        @CustomType.Setter
        public Builder title(@Nullable String title) {

            this.title = title;
            return this;
        }
        @CustomType.Setter
        public Builder version(@Nullable String version) {

            this.version = version;
            return this;
        }
        public SpringCloudGatewayApiMetadata build() {
            final var _resultValue = new SpringCloudGatewayApiMetadata();
            _resultValue.description = description;
            _resultValue.documentationUrl = documentationUrl;
            _resultValue.serverUrl = serverUrl;
            _resultValue.title = title;
            _resultValue.version = version;
            return _resultValue;
        }
    }
}
