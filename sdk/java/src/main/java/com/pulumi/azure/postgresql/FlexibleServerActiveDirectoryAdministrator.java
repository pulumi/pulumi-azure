// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.postgresql;

import com.pulumi.azure.Utilities;
import com.pulumi.azure.postgresql.FlexibleServerActiveDirectoryAdministratorArgs;
import com.pulumi.azure.postgresql.inputs.FlexibleServerActiveDirectoryAdministratorState;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import javax.annotation.Nullable;

/**
 * Allows you to set a user or group as the AD administrator for a PostgreSQL Flexible Server.
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.azure.core.CoreFunctions;
 * import com.pulumi.azuread.AzureadFunctions;
 * import com.pulumi.azuread.inputs.GetServicePrincipalArgs;
 * import com.pulumi.azure.core.ResourceGroup;
 * import com.pulumi.azure.core.ResourceGroupArgs;
 * import com.pulumi.azure.postgresql.FlexibleServer;
 * import com.pulumi.azure.postgresql.FlexibleServerArgs;
 * import com.pulumi.azure.postgresql.inputs.FlexibleServerAuthenticationArgs;
 * import com.pulumi.azure.postgresql.FlexibleServerActiveDirectoryAdministrator;
 * import com.pulumi.azure.postgresql.FlexibleServerActiveDirectoryAdministratorArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         final var current = CoreFunctions.getClientConfig(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference);
 * 
 *         final var example = AzureadFunctions.getServicePrincipal(GetServicePrincipalArgs.builder()
 *             .objectId(current.objectId())
 *             .build());
 * 
 *         var exampleResourceGroup = new ResourceGroup("exampleResourceGroup", ResourceGroupArgs.builder()
 *             .name("example-resources")
 *             .location("West Europe")
 *             .build());
 * 
 *         var exampleFlexibleServer = new FlexibleServer("exampleFlexibleServer", FlexibleServerArgs.builder()
 *             .name("example-fs")
 *             .resourceGroupName(exampleResourceGroup.name())
 *             .location(exampleResourceGroup.location())
 *             .administratorLogin("adminTerraform")
 *             .administratorPassword("QAZwsx123")
 *             .storageMb(32768)
 *             .version("12")
 *             .skuName("GP_Standard_D2s_v3")
 *             .zone("2")
 *             .authentication(FlexibleServerAuthenticationArgs.builder()
 *                 .activeDirectoryAuthEnabled(true)
 *                 .tenantId(current.tenantId())
 *                 .build())
 *             .build());
 * 
 *         var exampleFlexibleServerActiveDirectoryAdministrator = new FlexibleServerActiveDirectoryAdministrator("exampleFlexibleServerActiveDirectoryAdministrator", FlexibleServerActiveDirectoryAdministratorArgs.builder()
 *             .serverName(exampleFlexibleServer.name())
 *             .resourceGroupName(exampleResourceGroup.name())
 *             .tenantId(current.tenantId())
 *             .objectId(example.objectId())
 *             .principalName(example.displayName())
 *             .principalType("ServicePrincipal")
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## API Providers
 * 
 * &lt;!-- This section is generated, changes will be overwritten --&gt;
 * This resource uses the following Azure API Providers:
 * 
 * * `Microsoft.DBforPostgreSQL`: 2024-08-01
 * 
 * ## Import
 * 
 * A PostgreSQL Flexible Server Active Directory Administrator can be imported using the `resource id`, e.g.
 * 
 * ```sh
 * $ pulumi import azure:postgresql/flexibleServerActiveDirectoryAdministrator:FlexibleServerActiveDirectoryAdministrator example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myresourcegroup/providers/Microsoft.DBforPostgreSQL/flexibleServers/myserver/administrators/objectId
 * ```
 * 
 */
@ResourceType(type="azure:postgresql/flexibleServerActiveDirectoryAdministrator:FlexibleServerActiveDirectoryAdministrator")
public class FlexibleServerActiveDirectoryAdministrator extends com.pulumi.resources.CustomResource {
    /**
     * The object ID of a user, service principal or security group in the Azure Active Directory tenant set as the Flexible Server Admin. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="objectId", refs={String.class}, tree="[0]")
    private Output<String> objectId;

    /**
     * @return The object ID of a user, service principal or security group in the Azure Active Directory tenant set as the Flexible Server Admin. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> objectId() {
        return this.objectId;
    }
    /**
     * The name of Azure Active Directory principal. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="principalName", refs={String.class}, tree="[0]")
    private Output<String> principalName;

    /**
     * @return The name of Azure Active Directory principal. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> principalName() {
        return this.principalName;
    }
    /**
     * The type of Azure Active Directory principal. Possible values are `Group`, `ServicePrincipal` and `User`. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="principalType", refs={String.class}, tree="[0]")
    private Output<String> principalType;

    /**
     * @return The type of Azure Active Directory principal. Possible values are `Group`, `ServicePrincipal` and `User`. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> principalType() {
        return this.principalType;
    }
    /**
     * The name of the resource group for the PostgreSQL Server. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="resourceGroupName", refs={String.class}, tree="[0]")
    private Output<String> resourceGroupName;

    /**
     * @return The name of the resource group for the PostgreSQL Server. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }
    /**
     * The name of the PostgreSQL Flexible Server on which to set the administrator. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="serverName", refs={String.class}, tree="[0]")
    private Output<String> serverName;

    /**
     * @return The name of the PostgreSQL Flexible Server on which to set the administrator. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> serverName() {
        return this.serverName;
    }
    /**
     * The Azure Tenant ID. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="tenantId", refs={String.class}, tree="[0]")
    private Output<String> tenantId;

    /**
     * @return The Azure Tenant ID. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> tenantId() {
        return this.tenantId;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public FlexibleServerActiveDirectoryAdministrator(java.lang.String name) {
        this(name, FlexibleServerActiveDirectoryAdministratorArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public FlexibleServerActiveDirectoryAdministrator(java.lang.String name, FlexibleServerActiveDirectoryAdministratorArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public FlexibleServerActiveDirectoryAdministrator(java.lang.String name, FlexibleServerActiveDirectoryAdministratorArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:postgresql/flexibleServerActiveDirectoryAdministrator:FlexibleServerActiveDirectoryAdministrator", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private FlexibleServerActiveDirectoryAdministrator(java.lang.String name, Output<java.lang.String> id, @Nullable FlexibleServerActiveDirectoryAdministratorState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:postgresql/flexibleServerActiveDirectoryAdministrator:FlexibleServerActiveDirectoryAdministrator", name, state, makeResourceOptions(options, id), false);
    }

    private static FlexibleServerActiveDirectoryAdministratorArgs makeArgs(FlexibleServerActiveDirectoryAdministratorArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? FlexibleServerActiveDirectoryAdministratorArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static FlexibleServerActiveDirectoryAdministrator get(java.lang.String name, Output<java.lang.String> id, @Nullable FlexibleServerActiveDirectoryAdministratorState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new FlexibleServerActiveDirectoryAdministrator(name, id, state, options);
    }
}
