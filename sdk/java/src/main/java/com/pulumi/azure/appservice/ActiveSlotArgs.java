// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.appservice;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class ActiveSlotArgs extends com.pulumi.resources.ResourceArgs {

    public static final ActiveSlotArgs Empty = new ActiveSlotArgs();

    /**
     * The name of the App Service within which the Slot exists. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="appServiceName", required=true)
    private Output<String> appServiceName;

    /**
     * @return The name of the App Service within which the Slot exists. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> appServiceName() {
        return this.appServiceName;
    }

    /**
     * The name of the App Service Slot which should be promoted to the Production Slot within the App Service.
     * 
     */
    @Import(name="appServiceSlotName", required=true)
    private Output<String> appServiceSlotName;

    /**
     * @return The name of the App Service Slot which should be promoted to the Production Slot within the App Service.
     * 
     */
    public Output<String> appServiceSlotName() {
        return this.appServiceSlotName;
    }

    /**
     * The name of the resource group in which the App Service exists. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    /**
     * @return The name of the resource group in which the App Service exists. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    private ActiveSlotArgs() {}

    private ActiveSlotArgs(ActiveSlotArgs $) {
        this.appServiceName = $.appServiceName;
        this.appServiceSlotName = $.appServiceSlotName;
        this.resourceGroupName = $.resourceGroupName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ActiveSlotArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ActiveSlotArgs $;

        public Builder() {
            $ = new ActiveSlotArgs();
        }

        public Builder(ActiveSlotArgs defaults) {
            $ = new ActiveSlotArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param appServiceName The name of the App Service within which the Slot exists. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder appServiceName(Output<String> appServiceName) {
            $.appServiceName = appServiceName;
            return this;
        }

        /**
         * @param appServiceName The name of the App Service within which the Slot exists. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder appServiceName(String appServiceName) {
            return appServiceName(Output.of(appServiceName));
        }

        /**
         * @param appServiceSlotName The name of the App Service Slot which should be promoted to the Production Slot within the App Service.
         * 
         * @return builder
         * 
         */
        public Builder appServiceSlotName(Output<String> appServiceSlotName) {
            $.appServiceSlotName = appServiceSlotName;
            return this;
        }

        /**
         * @param appServiceSlotName The name of the App Service Slot which should be promoted to the Production Slot within the App Service.
         * 
         * @return builder
         * 
         */
        public Builder appServiceSlotName(String appServiceSlotName) {
            return appServiceSlotName(Output.of(appServiceSlotName));
        }

        /**
         * @param resourceGroupName The name of the resource group in which the App Service exists. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName The name of the resource group in which the App Service exists. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        public ActiveSlotArgs build() {
            if ($.appServiceName == null) {
                throw new MissingRequiredPropertyException("ActiveSlotArgs", "appServiceName");
            }
            if ($.appServiceSlotName == null) {
                throw new MissingRequiredPropertyException("ActiveSlotArgs", "appServiceSlotName");
            }
            if ($.resourceGroupName == null) {
                throw new MissingRequiredPropertyException("ActiveSlotArgs", "resourceGroupName");
            }
            return $;
        }
    }

}
