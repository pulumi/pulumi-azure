// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.sentinel.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DataConnectorOffice365State extends com.pulumi.resources.ResourceArgs {

    public static final DataConnectorOffice365State Empty = new DataConnectorOffice365State();

    /**
     * Should the Exchange data connector be enabled? Defaults to `true`.
     * 
     */
    @Import(name="exchangeEnabled")
    private @Nullable Output<Boolean> exchangeEnabled;

    /**
     * @return Should the Exchange data connector be enabled? Defaults to `true`.
     * 
     */
    public Optional<Output<Boolean>> exchangeEnabled() {
        return Optional.ofNullable(this.exchangeEnabled);
    }

    /**
     * The ID of the Log Analytics Workspace that this Office 365 Data Connector resides in. Changing this forces a new Office 365 Data Connector to be created.
     * 
     */
    @Import(name="logAnalyticsWorkspaceId")
    private @Nullable Output<String> logAnalyticsWorkspaceId;

    /**
     * @return The ID of the Log Analytics Workspace that this Office 365 Data Connector resides in. Changing this forces a new Office 365 Data Connector to be created.
     * 
     */
    public Optional<Output<String>> logAnalyticsWorkspaceId() {
        return Optional.ofNullable(this.logAnalyticsWorkspaceId);
    }

    /**
     * The name which should be used for this Office 365 Data Connector. Changing this forces a new Office 365 Data Connector to be created.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name which should be used for this Office 365 Data Connector. Changing this forces a new Office 365 Data Connector to be created.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Should the SharePoint data connector be enabled? Defaults to `true`.
     * 
     */
    @Import(name="sharepointEnabled")
    private @Nullable Output<Boolean> sharepointEnabled;

    /**
     * @return Should the SharePoint data connector be enabled? Defaults to `true`.
     * 
     */
    public Optional<Output<Boolean>> sharepointEnabled() {
        return Optional.ofNullable(this.sharepointEnabled);
    }

    /**
     * Should the Microsoft Teams data connector be enabled? Defaults to `true`.
     * 
     */
    @Import(name="teamsEnabled")
    private @Nullable Output<Boolean> teamsEnabled;

    /**
     * @return Should the Microsoft Teams data connector be enabled? Defaults to `true`.
     * 
     */
    public Optional<Output<Boolean>> teamsEnabled() {
        return Optional.ofNullable(this.teamsEnabled);
    }

    /**
     * The ID of the Tenant that this Office 365 Data Connector connects to. Changing this forces a new Office 365 Data Connector to be created.
     * 
     */
    @Import(name="tenantId")
    private @Nullable Output<String> tenantId;

    /**
     * @return The ID of the Tenant that this Office 365 Data Connector connects to. Changing this forces a new Office 365 Data Connector to be created.
     * 
     */
    public Optional<Output<String>> tenantId() {
        return Optional.ofNullable(this.tenantId);
    }

    private DataConnectorOffice365State() {}

    private DataConnectorOffice365State(DataConnectorOffice365State $) {
        this.exchangeEnabled = $.exchangeEnabled;
        this.logAnalyticsWorkspaceId = $.logAnalyticsWorkspaceId;
        this.name = $.name;
        this.sharepointEnabled = $.sharepointEnabled;
        this.teamsEnabled = $.teamsEnabled;
        this.tenantId = $.tenantId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DataConnectorOffice365State defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DataConnectorOffice365State $;

        public Builder() {
            $ = new DataConnectorOffice365State();
        }

        public Builder(DataConnectorOffice365State defaults) {
            $ = new DataConnectorOffice365State(Objects.requireNonNull(defaults));
        }

        /**
         * @param exchangeEnabled Should the Exchange data connector be enabled? Defaults to `true`.
         * 
         * @return builder
         * 
         */
        public Builder exchangeEnabled(@Nullable Output<Boolean> exchangeEnabled) {
            $.exchangeEnabled = exchangeEnabled;
            return this;
        }

        /**
         * @param exchangeEnabled Should the Exchange data connector be enabled? Defaults to `true`.
         * 
         * @return builder
         * 
         */
        public Builder exchangeEnabled(Boolean exchangeEnabled) {
            return exchangeEnabled(Output.of(exchangeEnabled));
        }

        /**
         * @param logAnalyticsWorkspaceId The ID of the Log Analytics Workspace that this Office 365 Data Connector resides in. Changing this forces a new Office 365 Data Connector to be created.
         * 
         * @return builder
         * 
         */
        public Builder logAnalyticsWorkspaceId(@Nullable Output<String> logAnalyticsWorkspaceId) {
            $.logAnalyticsWorkspaceId = logAnalyticsWorkspaceId;
            return this;
        }

        /**
         * @param logAnalyticsWorkspaceId The ID of the Log Analytics Workspace that this Office 365 Data Connector resides in. Changing this forces a new Office 365 Data Connector to be created.
         * 
         * @return builder
         * 
         */
        public Builder logAnalyticsWorkspaceId(String logAnalyticsWorkspaceId) {
            return logAnalyticsWorkspaceId(Output.of(logAnalyticsWorkspaceId));
        }

        /**
         * @param name The name which should be used for this Office 365 Data Connector. Changing this forces a new Office 365 Data Connector to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name which should be used for this Office 365 Data Connector. Changing this forces a new Office 365 Data Connector to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param sharepointEnabled Should the SharePoint data connector be enabled? Defaults to `true`.
         * 
         * @return builder
         * 
         */
        public Builder sharepointEnabled(@Nullable Output<Boolean> sharepointEnabled) {
            $.sharepointEnabled = sharepointEnabled;
            return this;
        }

        /**
         * @param sharepointEnabled Should the SharePoint data connector be enabled? Defaults to `true`.
         * 
         * @return builder
         * 
         */
        public Builder sharepointEnabled(Boolean sharepointEnabled) {
            return sharepointEnabled(Output.of(sharepointEnabled));
        }

        /**
         * @param teamsEnabled Should the Microsoft Teams data connector be enabled? Defaults to `true`.
         * 
         * @return builder
         * 
         */
        public Builder teamsEnabled(@Nullable Output<Boolean> teamsEnabled) {
            $.teamsEnabled = teamsEnabled;
            return this;
        }

        /**
         * @param teamsEnabled Should the Microsoft Teams data connector be enabled? Defaults to `true`.
         * 
         * @return builder
         * 
         */
        public Builder teamsEnabled(Boolean teamsEnabled) {
            return teamsEnabled(Output.of(teamsEnabled));
        }

        /**
         * @param tenantId The ID of the Tenant that this Office 365 Data Connector connects to. Changing this forces a new Office 365 Data Connector to be created.
         * 
         * @return builder
         * 
         */
        public Builder tenantId(@Nullable Output<String> tenantId) {
            $.tenantId = tenantId;
            return this;
        }

        /**
         * @param tenantId The ID of the Tenant that this Office 365 Data Connector connects to. Changing this forces a new Office 365 Data Connector to be created.
         * 
         * @return builder
         * 
         */
        public Builder tenantId(String tenantId) {
            return tenantId(Output.of(tenantId));
        }

        public DataConnectorOffice365State build() {
            return $;
        }
    }

}
