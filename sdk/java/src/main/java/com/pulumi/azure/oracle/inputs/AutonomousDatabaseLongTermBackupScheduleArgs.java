// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.oracle.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;


public final class AutonomousDatabaseLongTermBackupScheduleArgs extends com.pulumi.resources.ResourceArgs {

    public static final AutonomousDatabaseLongTermBackupScheduleArgs Empty = new AutonomousDatabaseLongTermBackupScheduleArgs();

    @Import(name="enabled", required=true)
    private Output<Boolean> enabled;

    public Output<Boolean> enabled() {
        return this.enabled;
    }

    @Import(name="repeatCadence", required=true)
    private Output<String> repeatCadence;

    public Output<String> repeatCadence() {
        return this.repeatCadence;
    }

    @Import(name="retentionPeriodInDays", required=true)
    private Output<Integer> retentionPeriodInDays;

    public Output<Integer> retentionPeriodInDays() {
        return this.retentionPeriodInDays;
    }

    @Import(name="timeOfBackup", required=true)
    private Output<String> timeOfBackup;

    public Output<String> timeOfBackup() {
        return this.timeOfBackup;
    }

    private AutonomousDatabaseLongTermBackupScheduleArgs() {}

    private AutonomousDatabaseLongTermBackupScheduleArgs(AutonomousDatabaseLongTermBackupScheduleArgs $) {
        this.enabled = $.enabled;
        this.repeatCadence = $.repeatCadence;
        this.retentionPeriodInDays = $.retentionPeriodInDays;
        this.timeOfBackup = $.timeOfBackup;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AutonomousDatabaseLongTermBackupScheduleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AutonomousDatabaseLongTermBackupScheduleArgs $;

        public Builder() {
            $ = new AutonomousDatabaseLongTermBackupScheduleArgs();
        }

        public Builder(AutonomousDatabaseLongTermBackupScheduleArgs defaults) {
            $ = new AutonomousDatabaseLongTermBackupScheduleArgs(Objects.requireNonNull(defaults));
        }

        public Builder enabled(Output<Boolean> enabled) {
            $.enabled = enabled;
            return this;
        }

        public Builder enabled(Boolean enabled) {
            return enabled(Output.of(enabled));
        }

        public Builder repeatCadence(Output<String> repeatCadence) {
            $.repeatCadence = repeatCadence;
            return this;
        }

        public Builder repeatCadence(String repeatCadence) {
            return repeatCadence(Output.of(repeatCadence));
        }

        public Builder retentionPeriodInDays(Output<Integer> retentionPeriodInDays) {
            $.retentionPeriodInDays = retentionPeriodInDays;
            return this;
        }

        public Builder retentionPeriodInDays(Integer retentionPeriodInDays) {
            return retentionPeriodInDays(Output.of(retentionPeriodInDays));
        }

        public Builder timeOfBackup(Output<String> timeOfBackup) {
            $.timeOfBackup = timeOfBackup;
            return this;
        }

        public Builder timeOfBackup(String timeOfBackup) {
            return timeOfBackup(Output.of(timeOfBackup));
        }

        public AutonomousDatabaseLongTermBackupScheduleArgs build() {
            if ($.enabled == null) {
                throw new MissingRequiredPropertyException("AutonomousDatabaseLongTermBackupScheduleArgs", "enabled");
            }
            if ($.repeatCadence == null) {
                throw new MissingRequiredPropertyException("AutonomousDatabaseLongTermBackupScheduleArgs", "repeatCadence");
            }
            if ($.retentionPeriodInDays == null) {
                throw new MissingRequiredPropertyException("AutonomousDatabaseLongTermBackupScheduleArgs", "retentionPeriodInDays");
            }
            if ($.timeOfBackup == null) {
                throw new MissingRequiredPropertyException("AutonomousDatabaseLongTermBackupScheduleArgs", "timeOfBackup");
            }
            return $;
        }
    }

}
