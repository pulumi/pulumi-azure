// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.healthcare.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ServiceAuthenticationConfiguration {
    /**
     * @return The intended audience to receive authentication tokens for the service. The default value is https://azurehealthcareapis.com
     * 
     */
    private @Nullable String audience;
    /**
     * @return The Azure Active Directory (tenant) that serves as the authentication authority to access the service. The default authority is the Directory defined in the authentication scheme in use when running this provider.
     * Authority must be registered to Azure AD and in the following format: https://{Azure-AD-endpoint}/{tenant-id}.
     * 
     */
    private @Nullable String authority;
    /**
     * @return (Boolean) Enables the &#39;SMART on FHIR&#39; option for mobile and web implementations.
     * 
     */
    private @Nullable Boolean smartProxyEnabled;

    private ServiceAuthenticationConfiguration() {}
    /**
     * @return The intended audience to receive authentication tokens for the service. The default value is https://azurehealthcareapis.com
     * 
     */
    public Optional<String> audience() {
        return Optional.ofNullable(this.audience);
    }
    /**
     * @return The Azure Active Directory (tenant) that serves as the authentication authority to access the service. The default authority is the Directory defined in the authentication scheme in use when running this provider.
     * Authority must be registered to Azure AD and in the following format: https://{Azure-AD-endpoint}/{tenant-id}.
     * 
     */
    public Optional<String> authority() {
        return Optional.ofNullable(this.authority);
    }
    /**
     * @return (Boolean) Enables the &#39;SMART on FHIR&#39; option for mobile and web implementations.
     * 
     */
    public Optional<Boolean> smartProxyEnabled() {
        return Optional.ofNullable(this.smartProxyEnabled);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ServiceAuthenticationConfiguration defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String audience;
        private @Nullable String authority;
        private @Nullable Boolean smartProxyEnabled;
        public Builder() {}
        public Builder(ServiceAuthenticationConfiguration defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.audience = defaults.audience;
    	      this.authority = defaults.authority;
    	      this.smartProxyEnabled = defaults.smartProxyEnabled;
        }

        @CustomType.Setter
        public Builder audience(@Nullable String audience) {

            this.audience = audience;
            return this;
        }
        @CustomType.Setter
        public Builder authority(@Nullable String authority) {

            this.authority = authority;
            return this;
        }
        @CustomType.Setter
        public Builder smartProxyEnabled(@Nullable Boolean smartProxyEnabled) {

            this.smartProxyEnabled = smartProxyEnabled;
            return this;
        }
        public ServiceAuthenticationConfiguration build() {
            final var _resultValue = new ServiceAuthenticationConfiguration();
            _resultValue.audience = audience;
            _resultValue.authority = authority;
            _resultValue.smartProxyEnabled = smartProxyEnabled;
            return _resultValue;
        }
    }
}
