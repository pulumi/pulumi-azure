// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.cosmosdb;

import com.pulumi.azure.Utilities;
import com.pulumi.azure.cosmosdb.MongoUserDefinitionArgs;
import com.pulumi.azure.cosmosdb.inputs.MongoUserDefinitionState;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Manages a Cosmos DB Mongo User Definition.
 * 
 * ## Example Usage
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.azure.core.ResourceGroup;
 * import com.pulumi.azure.core.ResourceGroupArgs;
 * import com.pulumi.azure.cosmosdb.Account;
 * import com.pulumi.azure.cosmosdb.AccountArgs;
 * import com.pulumi.azure.cosmosdb.inputs.AccountCapabilityArgs;
 * import com.pulumi.azure.cosmosdb.inputs.AccountConsistencyPolicyArgs;
 * import com.pulumi.azure.cosmosdb.inputs.AccountGeoLocationArgs;
 * import com.pulumi.azure.cosmosdb.MongoDatabase;
 * import com.pulumi.azure.cosmosdb.MongoDatabaseArgs;
 * import com.pulumi.azure.cosmosdb.MongoUserDefinition;
 * import com.pulumi.azure.cosmosdb.MongoUserDefinitionArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var exampleResourceGroup = new ResourceGroup(&#34;exampleResourceGroup&#34;, ResourceGroupArgs.builder()        
 *             .location(&#34;West Europe&#34;)
 *             .build());
 * 
 *         var exampleAccount = new Account(&#34;exampleAccount&#34;, AccountArgs.builder()        
 *             .location(exampleResourceGroup.location())
 *             .resourceGroupName(exampleResourceGroup.name())
 *             .offerType(&#34;Standard&#34;)
 *             .kind(&#34;MongoDB&#34;)
 *             .capabilities(            
 *                 AccountCapabilityArgs.builder()
 *                     .name(&#34;EnableMongo&#34;)
 *                     .build(),
 *                 AccountCapabilityArgs.builder()
 *                     .name(&#34;EnableMongoRoleBasedAccessControl&#34;)
 *                     .build())
 *             .consistencyPolicy(AccountConsistencyPolicyArgs.builder()
 *                 .consistencyLevel(&#34;Strong&#34;)
 *                 .build())
 *             .geoLocations(AccountGeoLocationArgs.builder()
 *                 .location(exampleResourceGroup.location())
 *                 .failoverPriority(0)
 *                 .build())
 *             .build());
 * 
 *         var exampleMongoDatabase = new MongoDatabase(&#34;exampleMongoDatabase&#34;, MongoDatabaseArgs.builder()        
 *             .resourceGroupName(exampleAccount.resourceGroupName())
 *             .accountName(exampleAccount.name())
 *             .build());
 * 
 *         var exampleMongoUserDefinition = new MongoUserDefinition(&#34;exampleMongoUserDefinition&#34;, MongoUserDefinitionArgs.builder()        
 *             .cosmosMongoDatabaseId(exampleMongoDatabase.id())
 *             .username(&#34;myUserName&#34;)
 *             .password(&#34;myPassword&#34;)
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * Cosmos DB Mongo User Definitions can be imported using the `resource id`, e.g.
 * 
 * ```sh
 *  $ pulumi import azure:cosmosdb/mongoUserDefinition:MongoUserDefinition example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.DocumentDB/databaseAccounts/account1/mongodbUserDefinitions/dbname1.username1
 * ```
 * 
 */
@ResourceType(type="azure:cosmosdb/mongoUserDefinition:MongoUserDefinition")
public class MongoUserDefinition extends com.pulumi.resources.CustomResource {
    /**
     * The resource ID of the Mongo DB. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="cosmosMongoDatabaseId", refs={String.class}, tree="[0]")
    private Output<String> cosmosMongoDatabaseId;

    /**
     * @return The resource ID of the Mongo DB. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> cosmosMongoDatabaseId() {
        return this.cosmosMongoDatabaseId;
    }
    /**
     * A list of Mongo Roles that are inherited to the Mongo User Definition.
     * 
     * &gt; **Note:** The role that needs to be inherited should exist in the Mongo DB of `cosmos_mongo_database_id`.
     * 
     */
    @Export(name="inheritedRoleNames", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> inheritedRoleNames;

    /**
     * @return A list of Mongo Roles that are inherited to the Mongo User Definition.
     * 
     * &gt; **Note:** The role that needs to be inherited should exist in the Mongo DB of `cosmos_mongo_database_id`.
     * 
     */
    public Output<Optional<List<String>>> inheritedRoleNames() {
        return Codegen.optional(this.inheritedRoleNames);
    }
    /**
     * The password for the Mongo User Definition.
     * 
     */
    @Export(name="password", refs={String.class}, tree="[0]")
    private Output<String> password;

    /**
     * @return The password for the Mongo User Definition.
     * 
     */
    public Output<String> password() {
        return this.password;
    }
    /**
     * The username for the Mongo User Definition. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="username", refs={String.class}, tree="[0]")
    private Output<String> username;

    /**
     * @return The username for the Mongo User Definition. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> username() {
        return this.username;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public MongoUserDefinition(String name) {
        this(name, MongoUserDefinitionArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public MongoUserDefinition(String name, MongoUserDefinitionArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public MongoUserDefinition(String name, MongoUserDefinitionArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:cosmosdb/mongoUserDefinition:MongoUserDefinition", name, args == null ? MongoUserDefinitionArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private MongoUserDefinition(String name, Output<String> id, @Nullable MongoUserDefinitionState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:cosmosdb/mongoUserDefinition:MongoUserDefinition", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .additionalSecretOutputs(List.of(
                "password"
            ))
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static MongoUserDefinition get(String name, Output<String> id, @Nullable MongoUserDefinitionState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new MongoUserDefinition(name, id, state, options);
    }
}
