// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.securitycenter.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AutomationActionArgs extends com.pulumi.resources.ResourceArgs {

    public static final AutomationActionArgs Empty = new AutomationActionArgs();

    /**
     * (Optional, but required when `type` is `EventHub`) A connection string to send data to the target Event Hub namespace, this should include a key with send permissions.
     * 
     */
    @Import(name="connectionString")
    private @Nullable Output<String> connectionString;

    /**
     * @return (Optional, but required when `type` is `EventHub`) A connection string to send data to the target Event Hub namespace, this should include a key with send permissions.
     * 
     */
    public Optional<Output<String>> connectionString() {
        return Optional.ofNullable(this.connectionString);
    }

    /**
     * The resource id of the target Logic App, Event Hub namespace or Log Analytics workspace.
     * 
     */
    @Import(name="resourceId", required=true)
    private Output<String> resourceId;

    /**
     * @return The resource id of the target Logic App, Event Hub namespace or Log Analytics workspace.
     * 
     */
    public Output<String> resourceId() {
        return this.resourceId;
    }

    /**
     * (Optional, but required when `type` is `LogicApp`) The callback URL to trigger the Logic App that will receive and process data sent by this automation. This can be found in the Azure Portal under &#34;See trigger history&#34;
     * 
     */
    @Import(name="triggerUrl")
    private @Nullable Output<String> triggerUrl;

    /**
     * @return (Optional, but required when `type` is `LogicApp`) The callback URL to trigger the Logic App that will receive and process data sent by this automation. This can be found in the Azure Portal under &#34;See trigger history&#34;
     * 
     */
    public Optional<Output<String>> triggerUrl() {
        return Optional.ofNullable(this.triggerUrl);
    }

    /**
     * Type of Azure resource to send data to. Must be set to one of: `LogicApp`, `EventHub` or `LogAnalytics`.
     * 
     */
    @Import(name="type", required=true)
    private Output<String> type;

    /**
     * @return Type of Azure resource to send data to. Must be set to one of: `LogicApp`, `EventHub` or `LogAnalytics`.
     * 
     */
    public Output<String> type() {
        return this.type;
    }

    private AutomationActionArgs() {}

    private AutomationActionArgs(AutomationActionArgs $) {
        this.connectionString = $.connectionString;
        this.resourceId = $.resourceId;
        this.triggerUrl = $.triggerUrl;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AutomationActionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AutomationActionArgs $;

        public Builder() {
            $ = new AutomationActionArgs();
        }

        public Builder(AutomationActionArgs defaults) {
            $ = new AutomationActionArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param connectionString (Optional, but required when `type` is `EventHub`) A connection string to send data to the target Event Hub namespace, this should include a key with send permissions.
         * 
         * @return builder
         * 
         */
        public Builder connectionString(@Nullable Output<String> connectionString) {
            $.connectionString = connectionString;
            return this;
        }

        /**
         * @param connectionString (Optional, but required when `type` is `EventHub`) A connection string to send data to the target Event Hub namespace, this should include a key with send permissions.
         * 
         * @return builder
         * 
         */
        public Builder connectionString(String connectionString) {
            return connectionString(Output.of(connectionString));
        }

        /**
         * @param resourceId The resource id of the target Logic App, Event Hub namespace or Log Analytics workspace.
         * 
         * @return builder
         * 
         */
        public Builder resourceId(Output<String> resourceId) {
            $.resourceId = resourceId;
            return this;
        }

        /**
         * @param resourceId The resource id of the target Logic App, Event Hub namespace or Log Analytics workspace.
         * 
         * @return builder
         * 
         */
        public Builder resourceId(String resourceId) {
            return resourceId(Output.of(resourceId));
        }

        /**
         * @param triggerUrl (Optional, but required when `type` is `LogicApp`) The callback URL to trigger the Logic App that will receive and process data sent by this automation. This can be found in the Azure Portal under &#34;See trigger history&#34;
         * 
         * @return builder
         * 
         */
        public Builder triggerUrl(@Nullable Output<String> triggerUrl) {
            $.triggerUrl = triggerUrl;
            return this;
        }

        /**
         * @param triggerUrl (Optional, but required when `type` is `LogicApp`) The callback URL to trigger the Logic App that will receive and process data sent by this automation. This can be found in the Azure Portal under &#34;See trigger history&#34;
         * 
         * @return builder
         * 
         */
        public Builder triggerUrl(String triggerUrl) {
            return triggerUrl(Output.of(triggerUrl));
        }

        /**
         * @param type Type of Azure resource to send data to. Must be set to one of: `LogicApp`, `EventHub` or `LogAnalytics`.
         * 
         * @return builder
         * 
         */
        public Builder type(Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type Type of Azure resource to send data to. Must be set to one of: `LogicApp`, `EventHub` or `LogAnalytics`.
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        public AutomationActionArgs build() {
            if ($.resourceId == null) {
                throw new MissingRequiredPropertyException("AutomationActionArgs", "resourceId");
            }
            if ($.type == null) {
                throw new MissingRequiredPropertyException("AutomationActionArgs", "type");
            }
            return $;
        }
    }

}
