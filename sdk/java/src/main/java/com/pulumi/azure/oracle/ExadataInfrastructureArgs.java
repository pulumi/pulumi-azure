// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.oracle;

import com.pulumi.azure.oracle.inputs.ExadataInfrastructureMaintenanceWindowArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ExadataInfrastructureArgs extends com.pulumi.resources.ResourceArgs {

    public static final ExadataInfrastructureArgs Empty = new ExadataInfrastructureArgs();

    /**
     * The number of compute servers for the Cloud Exadata Infrastructure. Changing this forces a new Cloud Exadata Infrastructure to be created.
     * 
     */
    @Import(name="computeCount", required=true)
    private Output<Integer> computeCount;

    /**
     * @return The number of compute servers for the Cloud Exadata Infrastructure. Changing this forces a new Cloud Exadata Infrastructure to be created.
     * 
     */
    public Output<Integer> computeCount() {
        return this.computeCount;
    }

    /**
     * The email address used by Oracle to send notifications regarding databases and infrastructure. Changing this forces a new Cloud Exadata Infrastructure to be created.
     * 
     */
    @Import(name="customerContacts")
    private @Nullable Output<List<String>> customerContacts;

    /**
     * @return The email address used by Oracle to send notifications regarding databases and infrastructure. Changing this forces a new Cloud Exadata Infrastructure to be created.
     * 
     */
    public Optional<Output<List<String>>> customerContacts() {
        return Optional.ofNullable(this.customerContacts);
    }

    /**
     * The database server model type of the cloud Exadata infrastructure resource. Changing this forces a new Cloud Exadata Infrastructure to be created.
     * 
     */
    @Import(name="databaseServerType")
    private @Nullable Output<String> databaseServerType;

    /**
     * @return The database server model type of the cloud Exadata infrastructure resource. Changing this forces a new Cloud Exadata Infrastructure to be created.
     * 
     */
    public Optional<Output<String>> databaseServerType() {
        return Optional.ofNullable(this.databaseServerType);
    }

    /**
     * The user-friendly name for the Cloud Exadata Infrastructure resource. The name does not need to be unique. Changing this forces a new Cloud Exadata Infrastructure to be created.
     * 
     */
    @Import(name="displayName", required=true)
    private Output<String> displayName;

    /**
     * @return The user-friendly name for the Cloud Exadata Infrastructure resource. The name does not need to be unique. Changing this forces a new Cloud Exadata Infrastructure to be created.
     * 
     */
    public Output<String> displayName() {
        return this.displayName;
    }

    /**
     * The Azure Region where the Cloud Exadata Infrastructure should exist. Changing this forces a new Cloud Exadata Infrastructure to be created.
     * 
     */
    @Import(name="location")
    private @Nullable Output<String> location;

    /**
     * @return The Azure Region where the Cloud Exadata Infrastructure should exist. Changing this forces a new Cloud Exadata Infrastructure to be created.
     * 
     */
    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * One or more `maintenance_window` blocks as defined below. Changing this forces a new Cloud Exadata Infrastructure to be created.
     * 
     */
    @Import(name="maintenanceWindows")
    private @Nullable Output<List<ExadataInfrastructureMaintenanceWindowArgs>> maintenanceWindows;

    /**
     * @return One or more `maintenance_window` blocks as defined below. Changing this forces a new Cloud Exadata Infrastructure to be created.
     * 
     */
    public Optional<Output<List<ExadataInfrastructureMaintenanceWindowArgs>>> maintenanceWindows() {
        return Optional.ofNullable(this.maintenanceWindows);
    }

    /**
     * The name which should be used for this Cloud Exadata Infrastructure. Changing this forces a new Cloud Exadata Infrastructure to be created.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name which should be used for this Cloud Exadata Infrastructure. Changing this forces a new Cloud Exadata Infrastructure to be created.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The name of the Resource Group where the ODB{@literal @}A Infrastructure should exist. Changing this forces a new Cloud Exadata Infrastructure to be created.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    /**
     * @return The name of the Resource Group where the ODB{@literal @}A Infrastructure should exist. Changing this forces a new Cloud Exadata Infrastructure to be created.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * The shape of the ODB{@literal @}A infrastructure resource. Changing this forces a new Cloud Exadata Infrastructure to be created.
     * 
     */
    @Import(name="shape", required=true)
    private Output<String> shape;

    /**
     * @return The shape of the ODB{@literal @}A infrastructure resource. Changing this forces a new Cloud Exadata Infrastructure to be created.
     * 
     */
    public Output<String> shape() {
        return this.shape;
    }

    /**
     * The number of storage servers for the Cloud Exadata Infrastructure. Changing this forces a new Cloud Exadata Infrastructure to be created.
     * 
     */
    @Import(name="storageCount", required=true)
    private Output<Integer> storageCount;

    /**
     * @return The number of storage servers for the Cloud Exadata Infrastructure. Changing this forces a new Cloud Exadata Infrastructure to be created.
     * 
     */
    public Output<Integer> storageCount() {
        return this.storageCount;
    }

    /**
     * The storage server model type of the cloud Exadata infrastructure resource. Changing this forces a new Cloud Exadata Infrastructure to be created.
     * 
     */
    @Import(name="storageServerType")
    private @Nullable Output<String> storageServerType;

    /**
     * @return The storage server model type of the cloud Exadata infrastructure resource. Changing this forces a new Cloud Exadata Infrastructure to be created.
     * 
     */
    public Optional<Output<String>> storageServerType() {
        return Optional.ofNullable(this.storageServerType);
    }

    /**
     * A mapping of tags which should be assigned to the Cloud Exadata Infrastructure.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return A mapping of tags which should be assigned to the Cloud Exadata Infrastructure.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * Cloud Exadata Infrastructure zones. Changing this forces a new Cloud Exadata Infrastructure to be created.
     * 
     */
    @Import(name="zones", required=true)
    private Output<List<String>> zones;

    /**
     * @return Cloud Exadata Infrastructure zones. Changing this forces a new Cloud Exadata Infrastructure to be created.
     * 
     */
    public Output<List<String>> zones() {
        return this.zones;
    }

    private ExadataInfrastructureArgs() {}

    private ExadataInfrastructureArgs(ExadataInfrastructureArgs $) {
        this.computeCount = $.computeCount;
        this.customerContacts = $.customerContacts;
        this.databaseServerType = $.databaseServerType;
        this.displayName = $.displayName;
        this.location = $.location;
        this.maintenanceWindows = $.maintenanceWindows;
        this.name = $.name;
        this.resourceGroupName = $.resourceGroupName;
        this.shape = $.shape;
        this.storageCount = $.storageCount;
        this.storageServerType = $.storageServerType;
        this.tags = $.tags;
        this.zones = $.zones;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ExadataInfrastructureArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ExadataInfrastructureArgs $;

        public Builder() {
            $ = new ExadataInfrastructureArgs();
        }

        public Builder(ExadataInfrastructureArgs defaults) {
            $ = new ExadataInfrastructureArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param computeCount The number of compute servers for the Cloud Exadata Infrastructure. Changing this forces a new Cloud Exadata Infrastructure to be created.
         * 
         * @return builder
         * 
         */
        public Builder computeCount(Output<Integer> computeCount) {
            $.computeCount = computeCount;
            return this;
        }

        /**
         * @param computeCount The number of compute servers for the Cloud Exadata Infrastructure. Changing this forces a new Cloud Exadata Infrastructure to be created.
         * 
         * @return builder
         * 
         */
        public Builder computeCount(Integer computeCount) {
            return computeCount(Output.of(computeCount));
        }

        /**
         * @param customerContacts The email address used by Oracle to send notifications regarding databases and infrastructure. Changing this forces a new Cloud Exadata Infrastructure to be created.
         * 
         * @return builder
         * 
         */
        public Builder customerContacts(@Nullable Output<List<String>> customerContacts) {
            $.customerContacts = customerContacts;
            return this;
        }

        /**
         * @param customerContacts The email address used by Oracle to send notifications regarding databases and infrastructure. Changing this forces a new Cloud Exadata Infrastructure to be created.
         * 
         * @return builder
         * 
         */
        public Builder customerContacts(List<String> customerContacts) {
            return customerContacts(Output.of(customerContacts));
        }

        /**
         * @param customerContacts The email address used by Oracle to send notifications regarding databases and infrastructure. Changing this forces a new Cloud Exadata Infrastructure to be created.
         * 
         * @return builder
         * 
         */
        public Builder customerContacts(String... customerContacts) {
            return customerContacts(List.of(customerContacts));
        }

        /**
         * @param databaseServerType The database server model type of the cloud Exadata infrastructure resource. Changing this forces a new Cloud Exadata Infrastructure to be created.
         * 
         * @return builder
         * 
         */
        public Builder databaseServerType(@Nullable Output<String> databaseServerType) {
            $.databaseServerType = databaseServerType;
            return this;
        }

        /**
         * @param databaseServerType The database server model type of the cloud Exadata infrastructure resource. Changing this forces a new Cloud Exadata Infrastructure to be created.
         * 
         * @return builder
         * 
         */
        public Builder databaseServerType(String databaseServerType) {
            return databaseServerType(Output.of(databaseServerType));
        }

        /**
         * @param displayName The user-friendly name for the Cloud Exadata Infrastructure resource. The name does not need to be unique. Changing this forces a new Cloud Exadata Infrastructure to be created.
         * 
         * @return builder
         * 
         */
        public Builder displayName(Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName The user-friendly name for the Cloud Exadata Infrastructure resource. The name does not need to be unique. Changing this forces a new Cloud Exadata Infrastructure to be created.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param location The Azure Region where the Cloud Exadata Infrastructure should exist. Changing this forces a new Cloud Exadata Infrastructure to be created.
         * 
         * @return builder
         * 
         */
        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location The Azure Region where the Cloud Exadata Infrastructure should exist. Changing this forces a new Cloud Exadata Infrastructure to be created.
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param maintenanceWindows One or more `maintenance_window` blocks as defined below. Changing this forces a new Cloud Exadata Infrastructure to be created.
         * 
         * @return builder
         * 
         */
        public Builder maintenanceWindows(@Nullable Output<List<ExadataInfrastructureMaintenanceWindowArgs>> maintenanceWindows) {
            $.maintenanceWindows = maintenanceWindows;
            return this;
        }

        /**
         * @param maintenanceWindows One or more `maintenance_window` blocks as defined below. Changing this forces a new Cloud Exadata Infrastructure to be created.
         * 
         * @return builder
         * 
         */
        public Builder maintenanceWindows(List<ExadataInfrastructureMaintenanceWindowArgs> maintenanceWindows) {
            return maintenanceWindows(Output.of(maintenanceWindows));
        }

        /**
         * @param maintenanceWindows One or more `maintenance_window` blocks as defined below. Changing this forces a new Cloud Exadata Infrastructure to be created.
         * 
         * @return builder
         * 
         */
        public Builder maintenanceWindows(ExadataInfrastructureMaintenanceWindowArgs... maintenanceWindows) {
            return maintenanceWindows(List.of(maintenanceWindows));
        }

        /**
         * @param name The name which should be used for this Cloud Exadata Infrastructure. Changing this forces a new Cloud Exadata Infrastructure to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name which should be used for this Cloud Exadata Infrastructure. Changing this forces a new Cloud Exadata Infrastructure to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param resourceGroupName The name of the Resource Group where the ODB{@literal @}A Infrastructure should exist. Changing this forces a new Cloud Exadata Infrastructure to be created.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName The name of the Resource Group where the ODB{@literal @}A Infrastructure should exist. Changing this forces a new Cloud Exadata Infrastructure to be created.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        /**
         * @param shape The shape of the ODB{@literal @}A infrastructure resource. Changing this forces a new Cloud Exadata Infrastructure to be created.
         * 
         * @return builder
         * 
         */
        public Builder shape(Output<String> shape) {
            $.shape = shape;
            return this;
        }

        /**
         * @param shape The shape of the ODB{@literal @}A infrastructure resource. Changing this forces a new Cloud Exadata Infrastructure to be created.
         * 
         * @return builder
         * 
         */
        public Builder shape(String shape) {
            return shape(Output.of(shape));
        }

        /**
         * @param storageCount The number of storage servers for the Cloud Exadata Infrastructure. Changing this forces a new Cloud Exadata Infrastructure to be created.
         * 
         * @return builder
         * 
         */
        public Builder storageCount(Output<Integer> storageCount) {
            $.storageCount = storageCount;
            return this;
        }

        /**
         * @param storageCount The number of storage servers for the Cloud Exadata Infrastructure. Changing this forces a new Cloud Exadata Infrastructure to be created.
         * 
         * @return builder
         * 
         */
        public Builder storageCount(Integer storageCount) {
            return storageCount(Output.of(storageCount));
        }

        /**
         * @param storageServerType The storage server model type of the cloud Exadata infrastructure resource. Changing this forces a new Cloud Exadata Infrastructure to be created.
         * 
         * @return builder
         * 
         */
        public Builder storageServerType(@Nullable Output<String> storageServerType) {
            $.storageServerType = storageServerType;
            return this;
        }

        /**
         * @param storageServerType The storage server model type of the cloud Exadata infrastructure resource. Changing this forces a new Cloud Exadata Infrastructure to be created.
         * 
         * @return builder
         * 
         */
        public Builder storageServerType(String storageServerType) {
            return storageServerType(Output.of(storageServerType));
        }

        /**
         * @param tags A mapping of tags which should be assigned to the Cloud Exadata Infrastructure.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags A mapping of tags which should be assigned to the Cloud Exadata Infrastructure.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param zones Cloud Exadata Infrastructure zones. Changing this forces a new Cloud Exadata Infrastructure to be created.
         * 
         * @return builder
         * 
         */
        public Builder zones(Output<List<String>> zones) {
            $.zones = zones;
            return this;
        }

        /**
         * @param zones Cloud Exadata Infrastructure zones. Changing this forces a new Cloud Exadata Infrastructure to be created.
         * 
         * @return builder
         * 
         */
        public Builder zones(List<String> zones) {
            return zones(Output.of(zones));
        }

        /**
         * @param zones Cloud Exadata Infrastructure zones. Changing this forces a new Cloud Exadata Infrastructure to be created.
         * 
         * @return builder
         * 
         */
        public Builder zones(String... zones) {
            return zones(List.of(zones));
        }

        public ExadataInfrastructureArgs build() {
            if ($.computeCount == null) {
                throw new MissingRequiredPropertyException("ExadataInfrastructureArgs", "computeCount");
            }
            if ($.displayName == null) {
                throw new MissingRequiredPropertyException("ExadataInfrastructureArgs", "displayName");
            }
            if ($.resourceGroupName == null) {
                throw new MissingRequiredPropertyException("ExadataInfrastructureArgs", "resourceGroupName");
            }
            if ($.shape == null) {
                throw new MissingRequiredPropertyException("ExadataInfrastructureArgs", "shape");
            }
            if ($.storageCount == null) {
                throw new MissingRequiredPropertyException("ExadataInfrastructureArgs", "storageCount");
            }
            if ($.zones == null) {
                throw new MissingRequiredPropertyException("ExadataInfrastructureArgs", "zones");
            }
            return $;
        }
    }

}
