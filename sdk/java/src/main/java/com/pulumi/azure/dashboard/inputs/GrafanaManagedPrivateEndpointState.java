// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.dashboard.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GrafanaManagedPrivateEndpointState extends com.pulumi.resources.ResourceArgs {

    public static final GrafanaManagedPrivateEndpointState Empty = new GrafanaManagedPrivateEndpointState();

    /**
     * The id of the associated managed Grafana. Changing this forces a new Dashboard Grafana Managed Private Endpoint to be created.
     * 
     */
    @Import(name="grafanaId")
    private @Nullable Output<String> grafanaId;

    /**
     * @return The id of the associated managed Grafana. Changing this forces a new Dashboard Grafana Managed Private Endpoint to be created.
     * 
     */
    public Optional<Output<String>> grafanaId() {
        return Optional.ofNullable(this.grafanaId);
    }

    /**
     * Specifies a list of private link group IDs. The value of this will depend on the private link resource to which you are connecting. Changing this forces a new Dashboard Grafana Managed Private Endpoint to be created.
     * 
     */
    @Import(name="groupIds")
    private @Nullable Output<List<String>> groupIds;

    /**
     * @return Specifies a list of private link group IDs. The value of this will depend on the private link resource to which you are connecting. Changing this forces a new Dashboard Grafana Managed Private Endpoint to be created.
     * 
     */
    public Optional<Output<List<String>>> groupIds() {
        return Optional.ofNullable(this.groupIds);
    }

    /**
     * The Azure Region where the Dashboard Grafana Managed Private Endpoint should exist. Changing this forces a new Dashboard Grafana Managed Private Endpoint to be created.
     * 
     */
    @Import(name="location")
    private @Nullable Output<String> location;

    /**
     * @return The Azure Region where the Dashboard Grafana Managed Private Endpoint should exist. Changing this forces a new Dashboard Grafana Managed Private Endpoint to be created.
     * 
     */
    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * The name which should be used for this Dashboard Grafana Managed Private Endpoint. Must be between 2 and 20 alphanumeric characters or dashes, must begin with letter and end with a letter or number. Changing this forces a new Dashboard Grafana Managed Private Endpoint to be created.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name which should be used for this Dashboard Grafana Managed Private Endpoint. Must be between 2 and 20 alphanumeric characters or dashes, must begin with letter and end with a letter or number. Changing this forces a new Dashboard Grafana Managed Private Endpoint to be created.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The ID of the resource to which this Dashboard Grafana Managed Private Endpoint will connect. Changing this forces a new Dashboard Grafana Managed Private Endpoint to be created.
     * 
     */
    @Import(name="privateLinkResourceId")
    private @Nullable Output<String> privateLinkResourceId;

    /**
     * @return The ID of the resource to which this Dashboard Grafana Managed Private Endpoint will connect. Changing this forces a new Dashboard Grafana Managed Private Endpoint to be created.
     * 
     */
    public Optional<Output<String>> privateLinkResourceId() {
        return Optional.ofNullable(this.privateLinkResourceId);
    }

    /**
     * The region in which to create the private link. Changing this forces a new Dashboard Grafana Managed Private Endpoint to be created.
     * 
     */
    @Import(name="privateLinkResourceRegion")
    private @Nullable Output<String> privateLinkResourceRegion;

    /**
     * @return The region in which to create the private link. Changing this forces a new Dashboard Grafana Managed Private Endpoint to be created.
     * 
     */
    public Optional<Output<String>> privateLinkResourceRegion() {
        return Optional.ofNullable(this.privateLinkResourceRegion);
    }

    /**
     * A message to provide in the request which will be seen by approvers.
     * 
     */
    @Import(name="requestMessage")
    private @Nullable Output<String> requestMessage;

    /**
     * @return A message to provide in the request which will be seen by approvers.
     * 
     */
    public Optional<Output<String>> requestMessage() {
        return Optional.ofNullable(this.requestMessage);
    }

    /**
     * A mapping of tags which should be assigned to the Dashboard Grafana Managed Private Endpoint.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return A mapping of tags which should be assigned to the Dashboard Grafana Managed Private Endpoint.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private GrafanaManagedPrivateEndpointState() {}

    private GrafanaManagedPrivateEndpointState(GrafanaManagedPrivateEndpointState $) {
        this.grafanaId = $.grafanaId;
        this.groupIds = $.groupIds;
        this.location = $.location;
        this.name = $.name;
        this.privateLinkResourceId = $.privateLinkResourceId;
        this.privateLinkResourceRegion = $.privateLinkResourceRegion;
        this.requestMessage = $.requestMessage;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GrafanaManagedPrivateEndpointState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GrafanaManagedPrivateEndpointState $;

        public Builder() {
            $ = new GrafanaManagedPrivateEndpointState();
        }

        public Builder(GrafanaManagedPrivateEndpointState defaults) {
            $ = new GrafanaManagedPrivateEndpointState(Objects.requireNonNull(defaults));
        }

        /**
         * @param grafanaId The id of the associated managed Grafana. Changing this forces a new Dashboard Grafana Managed Private Endpoint to be created.
         * 
         * @return builder
         * 
         */
        public Builder grafanaId(@Nullable Output<String> grafanaId) {
            $.grafanaId = grafanaId;
            return this;
        }

        /**
         * @param grafanaId The id of the associated managed Grafana. Changing this forces a new Dashboard Grafana Managed Private Endpoint to be created.
         * 
         * @return builder
         * 
         */
        public Builder grafanaId(String grafanaId) {
            return grafanaId(Output.of(grafanaId));
        }

        /**
         * @param groupIds Specifies a list of private link group IDs. The value of this will depend on the private link resource to which you are connecting. Changing this forces a new Dashboard Grafana Managed Private Endpoint to be created.
         * 
         * @return builder
         * 
         */
        public Builder groupIds(@Nullable Output<List<String>> groupIds) {
            $.groupIds = groupIds;
            return this;
        }

        /**
         * @param groupIds Specifies a list of private link group IDs. The value of this will depend on the private link resource to which you are connecting. Changing this forces a new Dashboard Grafana Managed Private Endpoint to be created.
         * 
         * @return builder
         * 
         */
        public Builder groupIds(List<String> groupIds) {
            return groupIds(Output.of(groupIds));
        }

        /**
         * @param groupIds Specifies a list of private link group IDs. The value of this will depend on the private link resource to which you are connecting. Changing this forces a new Dashboard Grafana Managed Private Endpoint to be created.
         * 
         * @return builder
         * 
         */
        public Builder groupIds(String... groupIds) {
            return groupIds(List.of(groupIds));
        }

        /**
         * @param location The Azure Region where the Dashboard Grafana Managed Private Endpoint should exist. Changing this forces a new Dashboard Grafana Managed Private Endpoint to be created.
         * 
         * @return builder
         * 
         */
        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location The Azure Region where the Dashboard Grafana Managed Private Endpoint should exist. Changing this forces a new Dashboard Grafana Managed Private Endpoint to be created.
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param name The name which should be used for this Dashboard Grafana Managed Private Endpoint. Must be between 2 and 20 alphanumeric characters or dashes, must begin with letter and end with a letter or number. Changing this forces a new Dashboard Grafana Managed Private Endpoint to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name which should be used for this Dashboard Grafana Managed Private Endpoint. Must be between 2 and 20 alphanumeric characters or dashes, must begin with letter and end with a letter or number. Changing this forces a new Dashboard Grafana Managed Private Endpoint to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param privateLinkResourceId The ID of the resource to which this Dashboard Grafana Managed Private Endpoint will connect. Changing this forces a new Dashboard Grafana Managed Private Endpoint to be created.
         * 
         * @return builder
         * 
         */
        public Builder privateLinkResourceId(@Nullable Output<String> privateLinkResourceId) {
            $.privateLinkResourceId = privateLinkResourceId;
            return this;
        }

        /**
         * @param privateLinkResourceId The ID of the resource to which this Dashboard Grafana Managed Private Endpoint will connect. Changing this forces a new Dashboard Grafana Managed Private Endpoint to be created.
         * 
         * @return builder
         * 
         */
        public Builder privateLinkResourceId(String privateLinkResourceId) {
            return privateLinkResourceId(Output.of(privateLinkResourceId));
        }

        /**
         * @param privateLinkResourceRegion The region in which to create the private link. Changing this forces a new Dashboard Grafana Managed Private Endpoint to be created.
         * 
         * @return builder
         * 
         */
        public Builder privateLinkResourceRegion(@Nullable Output<String> privateLinkResourceRegion) {
            $.privateLinkResourceRegion = privateLinkResourceRegion;
            return this;
        }

        /**
         * @param privateLinkResourceRegion The region in which to create the private link. Changing this forces a new Dashboard Grafana Managed Private Endpoint to be created.
         * 
         * @return builder
         * 
         */
        public Builder privateLinkResourceRegion(String privateLinkResourceRegion) {
            return privateLinkResourceRegion(Output.of(privateLinkResourceRegion));
        }

        /**
         * @param requestMessage A message to provide in the request which will be seen by approvers.
         * 
         * @return builder
         * 
         */
        public Builder requestMessage(@Nullable Output<String> requestMessage) {
            $.requestMessage = requestMessage;
            return this;
        }

        /**
         * @param requestMessage A message to provide in the request which will be seen by approvers.
         * 
         * @return builder
         * 
         */
        public Builder requestMessage(String requestMessage) {
            return requestMessage(Output.of(requestMessage));
        }

        /**
         * @param tags A mapping of tags which should be assigned to the Dashboard Grafana Managed Private Endpoint.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags A mapping of tags which should be assigned to the Dashboard Grafana Managed Private Endpoint.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public GrafanaManagedPrivateEndpointState build() {
            return $;
        }
    }

}
