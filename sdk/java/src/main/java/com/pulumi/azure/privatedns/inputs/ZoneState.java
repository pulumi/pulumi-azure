// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.privatedns.inputs;

import com.pulumi.azure.privatedns.inputs.ZoneSoaRecordArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ZoneState extends com.pulumi.resources.ResourceArgs {

    public static final ZoneState Empty = new ZoneState();

    /**
     * The maximum number of record sets that can be created in this Private DNS zone.
     * 
     */
    @Import(name="maxNumberOfRecordSets")
    private @Nullable Output<Integer> maxNumberOfRecordSets;

    /**
     * @return The maximum number of record sets that can be created in this Private DNS zone.
     * 
     */
    public Optional<Output<Integer>> maxNumberOfRecordSets() {
        return Optional.ofNullable(this.maxNumberOfRecordSets);
    }

    /**
     * The maximum number of virtual networks that can be linked to this Private DNS zone.
     * 
     */
    @Import(name="maxNumberOfVirtualNetworkLinks")
    private @Nullable Output<Integer> maxNumberOfVirtualNetworkLinks;

    /**
     * @return The maximum number of virtual networks that can be linked to this Private DNS zone.
     * 
     */
    public Optional<Output<Integer>> maxNumberOfVirtualNetworkLinks() {
        return Optional.ofNullable(this.maxNumberOfVirtualNetworkLinks);
    }

    /**
     * The maximum number of virtual networks that can be linked to this Private DNS zone with registration enabled.
     * 
     */
    @Import(name="maxNumberOfVirtualNetworkLinksWithRegistration")
    private @Nullable Output<Integer> maxNumberOfVirtualNetworkLinksWithRegistration;

    /**
     * @return The maximum number of virtual networks that can be linked to this Private DNS zone with registration enabled.
     * 
     */
    public Optional<Output<Integer>> maxNumberOfVirtualNetworkLinksWithRegistration() {
        return Optional.ofNullable(this.maxNumberOfVirtualNetworkLinksWithRegistration);
    }

    /**
     * The name of the Private DNS Zone. Must be a valid domain name.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the Private DNS Zone. Must be a valid domain name.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The current number of record sets in this Private DNS zone.
     * 
     */
    @Import(name="numberOfRecordSets")
    private @Nullable Output<Integer> numberOfRecordSets;

    /**
     * @return The current number of record sets in this Private DNS zone.
     * 
     */
    public Optional<Output<Integer>> numberOfRecordSets() {
        return Optional.ofNullable(this.numberOfRecordSets);
    }

    /**
     * Specifies the resource group where the resource exists. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="resourceGroupName")
    private @Nullable Output<String> resourceGroupName;

    /**
     * @return Specifies the resource group where the resource exists. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> resourceGroupName() {
        return Optional.ofNullable(this.resourceGroupName);
    }

    /**
     * An `soa_record` block as defined below. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="soaRecord")
    private @Nullable Output<ZoneSoaRecordArgs> soaRecord;

    /**
     * @return An `soa_record` block as defined below. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<ZoneSoaRecordArgs>> soaRecord() {
        return Optional.ofNullable(this.soaRecord);
    }

    /**
     * A mapping of tags to assign to the Record Set.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return A mapping of tags to assign to the Record Set.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private ZoneState() {}

    private ZoneState(ZoneState $) {
        this.maxNumberOfRecordSets = $.maxNumberOfRecordSets;
        this.maxNumberOfVirtualNetworkLinks = $.maxNumberOfVirtualNetworkLinks;
        this.maxNumberOfVirtualNetworkLinksWithRegistration = $.maxNumberOfVirtualNetworkLinksWithRegistration;
        this.name = $.name;
        this.numberOfRecordSets = $.numberOfRecordSets;
        this.resourceGroupName = $.resourceGroupName;
        this.soaRecord = $.soaRecord;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ZoneState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ZoneState $;

        public Builder() {
            $ = new ZoneState();
        }

        public Builder(ZoneState defaults) {
            $ = new ZoneState(Objects.requireNonNull(defaults));
        }

        /**
         * @param maxNumberOfRecordSets The maximum number of record sets that can be created in this Private DNS zone.
         * 
         * @return builder
         * 
         */
        public Builder maxNumberOfRecordSets(@Nullable Output<Integer> maxNumberOfRecordSets) {
            $.maxNumberOfRecordSets = maxNumberOfRecordSets;
            return this;
        }

        /**
         * @param maxNumberOfRecordSets The maximum number of record sets that can be created in this Private DNS zone.
         * 
         * @return builder
         * 
         */
        public Builder maxNumberOfRecordSets(Integer maxNumberOfRecordSets) {
            return maxNumberOfRecordSets(Output.of(maxNumberOfRecordSets));
        }

        /**
         * @param maxNumberOfVirtualNetworkLinks The maximum number of virtual networks that can be linked to this Private DNS zone.
         * 
         * @return builder
         * 
         */
        public Builder maxNumberOfVirtualNetworkLinks(@Nullable Output<Integer> maxNumberOfVirtualNetworkLinks) {
            $.maxNumberOfVirtualNetworkLinks = maxNumberOfVirtualNetworkLinks;
            return this;
        }

        /**
         * @param maxNumberOfVirtualNetworkLinks The maximum number of virtual networks that can be linked to this Private DNS zone.
         * 
         * @return builder
         * 
         */
        public Builder maxNumberOfVirtualNetworkLinks(Integer maxNumberOfVirtualNetworkLinks) {
            return maxNumberOfVirtualNetworkLinks(Output.of(maxNumberOfVirtualNetworkLinks));
        }

        /**
         * @param maxNumberOfVirtualNetworkLinksWithRegistration The maximum number of virtual networks that can be linked to this Private DNS zone with registration enabled.
         * 
         * @return builder
         * 
         */
        public Builder maxNumberOfVirtualNetworkLinksWithRegistration(@Nullable Output<Integer> maxNumberOfVirtualNetworkLinksWithRegistration) {
            $.maxNumberOfVirtualNetworkLinksWithRegistration = maxNumberOfVirtualNetworkLinksWithRegistration;
            return this;
        }

        /**
         * @param maxNumberOfVirtualNetworkLinksWithRegistration The maximum number of virtual networks that can be linked to this Private DNS zone with registration enabled.
         * 
         * @return builder
         * 
         */
        public Builder maxNumberOfVirtualNetworkLinksWithRegistration(Integer maxNumberOfVirtualNetworkLinksWithRegistration) {
            return maxNumberOfVirtualNetworkLinksWithRegistration(Output.of(maxNumberOfVirtualNetworkLinksWithRegistration));
        }

        /**
         * @param name The name of the Private DNS Zone. Must be a valid domain name.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the Private DNS Zone. Must be a valid domain name.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param numberOfRecordSets The current number of record sets in this Private DNS zone.
         * 
         * @return builder
         * 
         */
        public Builder numberOfRecordSets(@Nullable Output<Integer> numberOfRecordSets) {
            $.numberOfRecordSets = numberOfRecordSets;
            return this;
        }

        /**
         * @param numberOfRecordSets The current number of record sets in this Private DNS zone.
         * 
         * @return builder
         * 
         */
        public Builder numberOfRecordSets(Integer numberOfRecordSets) {
            return numberOfRecordSets(Output.of(numberOfRecordSets));
        }

        /**
         * @param resourceGroupName Specifies the resource group where the resource exists. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(@Nullable Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName Specifies the resource group where the resource exists. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        /**
         * @param soaRecord An `soa_record` block as defined below. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder soaRecord(@Nullable Output<ZoneSoaRecordArgs> soaRecord) {
            $.soaRecord = soaRecord;
            return this;
        }

        /**
         * @param soaRecord An `soa_record` block as defined below. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder soaRecord(ZoneSoaRecordArgs soaRecord) {
            return soaRecord(Output.of(soaRecord));
        }

        /**
         * @param tags A mapping of tags to assign to the Record Set.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags A mapping of tags to assign to the Record Set.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public ZoneState build() {
            return $;
        }
    }

}
