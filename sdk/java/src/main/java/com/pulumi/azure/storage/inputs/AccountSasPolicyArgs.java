// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.storage.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AccountSasPolicyArgs extends com.pulumi.resources.ResourceArgs {

    public static final AccountSasPolicyArgs Empty = new AccountSasPolicyArgs();

    /**
     * The SAS expiration action. The only possible value is `Log` at this moment. Defaults to `Log`.
     * 
     */
    @Import(name="expirationAction")
    private @Nullable Output<String> expirationAction;

    /**
     * @return The SAS expiration action. The only possible value is `Log` at this moment. Defaults to `Log`.
     * 
     */
    public Optional<Output<String>> expirationAction() {
        return Optional.ofNullable(this.expirationAction);
    }

    /**
     * The SAS expiration period in format of `DD.HH:MM:SS`.
     * 
     */
    @Import(name="expirationPeriod", required=true)
    private Output<String> expirationPeriod;

    /**
     * @return The SAS expiration period in format of `DD.HH:MM:SS`.
     * 
     */
    public Output<String> expirationPeriod() {
        return this.expirationPeriod;
    }

    private AccountSasPolicyArgs() {}

    private AccountSasPolicyArgs(AccountSasPolicyArgs $) {
        this.expirationAction = $.expirationAction;
        this.expirationPeriod = $.expirationPeriod;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AccountSasPolicyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AccountSasPolicyArgs $;

        public Builder() {
            $ = new AccountSasPolicyArgs();
        }

        public Builder(AccountSasPolicyArgs defaults) {
            $ = new AccountSasPolicyArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param expirationAction The SAS expiration action. The only possible value is `Log` at this moment. Defaults to `Log`.
         * 
         * @return builder
         * 
         */
        public Builder expirationAction(@Nullable Output<String> expirationAction) {
            $.expirationAction = expirationAction;
            return this;
        }

        /**
         * @param expirationAction The SAS expiration action. The only possible value is `Log` at this moment. Defaults to `Log`.
         * 
         * @return builder
         * 
         */
        public Builder expirationAction(String expirationAction) {
            return expirationAction(Output.of(expirationAction));
        }

        /**
         * @param expirationPeriod The SAS expiration period in format of `DD.HH:MM:SS`.
         * 
         * @return builder
         * 
         */
        public Builder expirationPeriod(Output<String> expirationPeriod) {
            $.expirationPeriod = expirationPeriod;
            return this;
        }

        /**
         * @param expirationPeriod The SAS expiration period in format of `DD.HH:MM:SS`.
         * 
         * @return builder
         * 
         */
        public Builder expirationPeriod(String expirationPeriod) {
            return expirationPeriod(Output.of(expirationPeriod));
        }

        public AccountSasPolicyArgs build() {
            if ($.expirationPeriod == null) {
                throw new MissingRequiredPropertyException("AccountSasPolicyArgs", "expirationPeriod");
            }
            return $;
        }
    }

}
