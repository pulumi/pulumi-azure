// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.keyvault.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetManagedHardwareSecurityModuleResult {
    /**
     * @return Specifies a list of administrators object IDs for the key vault Managed Hardware Security Module.
     * 
     */
    private final List<String> adminObjectIds;
    /**
     * @return The URI of the Hardware Security Module for performing operations on keys and secrets.
     * 
     */
    private final String hsmUri;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private final String id;
    /**
     * @return The Azure Region in which the Key Vault managed Hardware Security Module exists.
     * 
     */
    private final String location;
    private final String name;
    /**
     * @return Is purge protection enabled on this Key Vault Managed Hardware Security Module?
     * 
     */
    private final Boolean purgeProtectionEnabled;
    private final String resourceGroupName;
    /**
     * @return The Name of the SKU used for this Key Vault Managed Hardware Security Module.
     * 
     */
    private final String skuName;
    /**
     * @return The number of days that items should be retained for soft-deleted.
     * 
     */
    private final Integer softDeleteRetentionDays;
    /**
     * @return A mapping of tags assigned to the Key Vault Managed Hardware Security Module.
     * 
     */
    private final Map<String,String> tags;
    /**
     * @return The Azure Active Directory Tenant ID used for authenticating requests to the Key Vault Managed Hardware Security Module.
     * 
     */
    private final String tenantId;

    @CustomType.Constructor
    private GetManagedHardwareSecurityModuleResult(
        @CustomType.Parameter("adminObjectIds") List<String> adminObjectIds,
        @CustomType.Parameter("hsmUri") String hsmUri,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("location") String location,
        @CustomType.Parameter("name") String name,
        @CustomType.Parameter("purgeProtectionEnabled") Boolean purgeProtectionEnabled,
        @CustomType.Parameter("resourceGroupName") String resourceGroupName,
        @CustomType.Parameter("skuName") String skuName,
        @CustomType.Parameter("softDeleteRetentionDays") Integer softDeleteRetentionDays,
        @CustomType.Parameter("tags") Map<String,String> tags,
        @CustomType.Parameter("tenantId") String tenantId) {
        this.adminObjectIds = adminObjectIds;
        this.hsmUri = hsmUri;
        this.id = id;
        this.location = location;
        this.name = name;
        this.purgeProtectionEnabled = purgeProtectionEnabled;
        this.resourceGroupName = resourceGroupName;
        this.skuName = skuName;
        this.softDeleteRetentionDays = softDeleteRetentionDays;
        this.tags = tags;
        this.tenantId = tenantId;
    }

    /**
     * @return Specifies a list of administrators object IDs for the key vault Managed Hardware Security Module.
     * 
     */
    public List<String> adminObjectIds() {
        return this.adminObjectIds;
    }
    /**
     * @return The URI of the Hardware Security Module for performing operations on keys and secrets.
     * 
     */
    public String hsmUri() {
        return this.hsmUri;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The Azure Region in which the Key Vault managed Hardware Security Module exists.
     * 
     */
    public String location() {
        return this.location;
    }
    public String name() {
        return this.name;
    }
    /**
     * @return Is purge protection enabled on this Key Vault Managed Hardware Security Module?
     * 
     */
    public Boolean purgeProtectionEnabled() {
        return this.purgeProtectionEnabled;
    }
    public String resourceGroupName() {
        return this.resourceGroupName;
    }
    /**
     * @return The Name of the SKU used for this Key Vault Managed Hardware Security Module.
     * 
     */
    public String skuName() {
        return this.skuName;
    }
    /**
     * @return The number of days that items should be retained for soft-deleted.
     * 
     */
    public Integer softDeleteRetentionDays() {
        return this.softDeleteRetentionDays;
    }
    /**
     * @return A mapping of tags assigned to the Key Vault Managed Hardware Security Module.
     * 
     */
    public Map<String,String> tags() {
        return this.tags;
    }
    /**
     * @return The Azure Active Directory Tenant ID used for authenticating requests to the Key Vault Managed Hardware Security Module.
     * 
     */
    public String tenantId() {
        return this.tenantId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetManagedHardwareSecurityModuleResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private List<String> adminObjectIds;
        private String hsmUri;
        private String id;
        private String location;
        private String name;
        private Boolean purgeProtectionEnabled;
        private String resourceGroupName;
        private String skuName;
        private Integer softDeleteRetentionDays;
        private Map<String,String> tags;
        private String tenantId;

        public Builder() {
    	      // Empty
        }

        public Builder(GetManagedHardwareSecurityModuleResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.adminObjectIds = defaults.adminObjectIds;
    	      this.hsmUri = defaults.hsmUri;
    	      this.id = defaults.id;
    	      this.location = defaults.location;
    	      this.name = defaults.name;
    	      this.purgeProtectionEnabled = defaults.purgeProtectionEnabled;
    	      this.resourceGroupName = defaults.resourceGroupName;
    	      this.skuName = defaults.skuName;
    	      this.softDeleteRetentionDays = defaults.softDeleteRetentionDays;
    	      this.tags = defaults.tags;
    	      this.tenantId = defaults.tenantId;
        }

        public Builder adminObjectIds(List<String> adminObjectIds) {
            this.adminObjectIds = Objects.requireNonNull(adminObjectIds);
            return this;
        }
        public Builder adminObjectIds(String... adminObjectIds) {
            return adminObjectIds(List.of(adminObjectIds));
        }
        public Builder hsmUri(String hsmUri) {
            this.hsmUri = Objects.requireNonNull(hsmUri);
            return this;
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder location(String location) {
            this.location = Objects.requireNonNull(location);
            return this;
        }
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        public Builder purgeProtectionEnabled(Boolean purgeProtectionEnabled) {
            this.purgeProtectionEnabled = Objects.requireNonNull(purgeProtectionEnabled);
            return this;
        }
        public Builder resourceGroupName(String resourceGroupName) {
            this.resourceGroupName = Objects.requireNonNull(resourceGroupName);
            return this;
        }
        public Builder skuName(String skuName) {
            this.skuName = Objects.requireNonNull(skuName);
            return this;
        }
        public Builder softDeleteRetentionDays(Integer softDeleteRetentionDays) {
            this.softDeleteRetentionDays = Objects.requireNonNull(softDeleteRetentionDays);
            return this;
        }
        public Builder tags(Map<String,String> tags) {
            this.tags = Objects.requireNonNull(tags);
            return this;
        }
        public Builder tenantId(String tenantId) {
            this.tenantId = Objects.requireNonNull(tenantId);
            return this;
        }        public GetManagedHardwareSecurityModuleResult build() {
            return new GetManagedHardwareSecurityModuleResult(adminObjectIds, hsmUri, id, location, name, purgeProtectionEnabled, resourceGroupName, skuName, softDeleteRetentionDays, tags, tenantId);
        }
    }
}
