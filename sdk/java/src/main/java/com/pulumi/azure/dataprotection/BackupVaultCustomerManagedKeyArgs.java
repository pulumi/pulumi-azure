// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.dataprotection;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class BackupVaultCustomerManagedKeyArgs extends com.pulumi.resources.ResourceArgs {

    public static final BackupVaultCustomerManagedKeyArgs Empty = new BackupVaultCustomerManagedKeyArgs();

    /**
     * The ID of the Backup Vault. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="dataProtectionBackupVaultId", required=true)
    private Output<String> dataProtectionBackupVaultId;

    /**
     * @return The ID of the Backup Vault. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> dataProtectionBackupVaultId() {
        return this.dataProtectionBackupVaultId;
    }

    /**
     * The ID of the Key Vault Key which should be used to Encrypt the data in this Backup Vault.
     * 
     */
    @Import(name="keyVaultKeyId", required=true)
    private Output<String> keyVaultKeyId;

    /**
     * @return The ID of the Key Vault Key which should be used to Encrypt the data in this Backup Vault.
     * 
     */
    public Output<String> keyVaultKeyId() {
        return this.keyVaultKeyId;
    }

    private BackupVaultCustomerManagedKeyArgs() {}

    private BackupVaultCustomerManagedKeyArgs(BackupVaultCustomerManagedKeyArgs $) {
        this.dataProtectionBackupVaultId = $.dataProtectionBackupVaultId;
        this.keyVaultKeyId = $.keyVaultKeyId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BackupVaultCustomerManagedKeyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BackupVaultCustomerManagedKeyArgs $;

        public Builder() {
            $ = new BackupVaultCustomerManagedKeyArgs();
        }

        public Builder(BackupVaultCustomerManagedKeyArgs defaults) {
            $ = new BackupVaultCustomerManagedKeyArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param dataProtectionBackupVaultId The ID of the Backup Vault. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder dataProtectionBackupVaultId(Output<String> dataProtectionBackupVaultId) {
            $.dataProtectionBackupVaultId = dataProtectionBackupVaultId;
            return this;
        }

        /**
         * @param dataProtectionBackupVaultId The ID of the Backup Vault. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder dataProtectionBackupVaultId(String dataProtectionBackupVaultId) {
            return dataProtectionBackupVaultId(Output.of(dataProtectionBackupVaultId));
        }

        /**
         * @param keyVaultKeyId The ID of the Key Vault Key which should be used to Encrypt the data in this Backup Vault.
         * 
         * @return builder
         * 
         */
        public Builder keyVaultKeyId(Output<String> keyVaultKeyId) {
            $.keyVaultKeyId = keyVaultKeyId;
            return this;
        }

        /**
         * @param keyVaultKeyId The ID of the Key Vault Key which should be used to Encrypt the data in this Backup Vault.
         * 
         * @return builder
         * 
         */
        public Builder keyVaultKeyId(String keyVaultKeyId) {
            return keyVaultKeyId(Output.of(keyVaultKeyId));
        }

        public BackupVaultCustomerManagedKeyArgs build() {
            if ($.dataProtectionBackupVaultId == null) {
                throw new MissingRequiredPropertyException("BackupVaultCustomerManagedKeyArgs", "dataProtectionBackupVaultId");
            }
            if ($.keyVaultKeyId == null) {
                throw new MissingRequiredPropertyException("BackupVaultCustomerManagedKeyArgs", "keyVaultKeyId");
            }
            return $;
        }
    }

}
