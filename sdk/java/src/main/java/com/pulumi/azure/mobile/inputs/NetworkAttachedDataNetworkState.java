// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.mobile.inputs;

import com.pulumi.azure.mobile.inputs.NetworkAttachedDataNetworkNetworkAddressPortTranslationArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class NetworkAttachedDataNetworkState extends com.pulumi.resources.ResourceArgs {

    public static final NetworkAttachedDataNetworkState Empty = new NetworkAttachedDataNetworkState();

    /**
     * Specifies the DNS servers to signal to UEs to use for this attached data network.
     * 
     */
    @Import(name="dnsAddresses")
    private @Nullable Output<List<String>> dnsAddresses;

    /**
     * @return Specifies the DNS servers to signal to UEs to use for this attached data network.
     * 
     */
    public Optional<Output<List<String>>> dnsAddresses() {
        return Optional.ofNullable(this.dnsAddresses);
    }

    /**
     * Specifies the Azure Region where the Mobile Network Attached Data Network should exist. Changing this forces a new Mobile Network Attached Data Network to be created.
     * 
     */
    @Import(name="location")
    private @Nullable Output<String> location;

    /**
     * @return Specifies the Azure Region where the Mobile Network Attached Data Network should exist. Changing this forces a new Mobile Network Attached Data Network to be created.
     * 
     */
    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * Specifies the name of the `azure.mobile.NetworkDataNetwork` which the Attached Data Network belongs to, Changing this forces a new Mobile Network Attached Data Network to be created.
     * 
     */
    @Import(name="mobileNetworkDataNetworkName")
    private @Nullable Output<String> mobileNetworkDataNetworkName;

    /**
     * @return Specifies the name of the `azure.mobile.NetworkDataNetwork` which the Attached Data Network belongs to, Changing this forces a new Mobile Network Attached Data Network to be created.
     * 
     */
    public Optional<Output<String>> mobileNetworkDataNetworkName() {
        return Optional.ofNullable(this.mobileNetworkDataNetworkName);
    }

    /**
     * Specifies the ID of the `azure.mobile.NetworkPacketCoreDataPlane` which the Mobile Network Attached Data Network belongs to. Changing this forces a new Mobile Network Attached Data Network to be created.
     * 
     */
    @Import(name="mobileNetworkPacketCoreDataPlaneId")
    private @Nullable Output<String> mobileNetworkPacketCoreDataPlaneId;

    /**
     * @return Specifies the ID of the `azure.mobile.NetworkPacketCoreDataPlane` which the Mobile Network Attached Data Network belongs to. Changing this forces a new Mobile Network Attached Data Network to be created.
     * 
     */
    public Optional<Output<String>> mobileNetworkPacketCoreDataPlaneId() {
        return Optional.ofNullable(this.mobileNetworkPacketCoreDataPlaneId);
    }

    /**
     * A `network_address_port_translation` block as defined below.
     * 
     */
    @Import(name="networkAddressPortTranslation")
    private @Nullable Output<NetworkAttachedDataNetworkNetworkAddressPortTranslationArgs> networkAddressPortTranslation;

    /**
     * @return A `network_address_port_translation` block as defined below.
     * 
     */
    public Optional<Output<NetworkAttachedDataNetworkNetworkAddressPortTranslationArgs>> networkAddressPortTranslation() {
        return Optional.ofNullable(this.networkAddressPortTranslation);
    }

    /**
     * A mapping of tags which should be assigned to the Mobile Network Attached Data Network.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return A mapping of tags which should be assigned to the Mobile Network Attached Data Network.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    @Import(name="userEquipmentAddressPoolPrefixes")
    private @Nullable Output<List<String>> userEquipmentAddressPoolPrefixes;

    public Optional<Output<List<String>>> userEquipmentAddressPoolPrefixes() {
        return Optional.ofNullable(this.userEquipmentAddressPoolPrefixes);
    }

    @Import(name="userEquipmentStaticAddressPoolPrefixes")
    private @Nullable Output<List<String>> userEquipmentStaticAddressPoolPrefixes;

    public Optional<Output<List<String>>> userEquipmentStaticAddressPoolPrefixes() {
        return Optional.ofNullable(this.userEquipmentStaticAddressPoolPrefixes);
    }

    /**
     * The IPv4 address for the user data plane interface. This should match one of the interfaces configured on your Azure Stack Edge device.
     * 
     */
    @Import(name="userPlaneAccessIpv4Address")
    private @Nullable Output<String> userPlaneAccessIpv4Address;

    /**
     * @return The IPv4 address for the user data plane interface. This should match one of the interfaces configured on your Azure Stack Edge device.
     * 
     */
    public Optional<Output<String>> userPlaneAccessIpv4Address() {
        return Optional.ofNullable(this.userPlaneAccessIpv4Address);
    }

    /**
     * The default IPv4 gateway for the user data plane interface. This should match one of the interfaces configured on your Azure Stack Edge device.
     * 
     */
    @Import(name="userPlaneAccessIpv4Gateway")
    private @Nullable Output<String> userPlaneAccessIpv4Gateway;

    /**
     * @return The default IPv4 gateway for the user data plane interface. This should match one of the interfaces configured on your Azure Stack Edge device.
     * 
     */
    public Optional<Output<String>> userPlaneAccessIpv4Gateway() {
        return Optional.ofNullable(this.userPlaneAccessIpv4Gateway);
    }

    /**
     * The IPv4 subnet for the user data plane interface. This should match one of the interfaces configured on your Azure Stack Edge device.
     * 
     */
    @Import(name="userPlaneAccessIpv4Subnet")
    private @Nullable Output<String> userPlaneAccessIpv4Subnet;

    /**
     * @return The IPv4 subnet for the user data plane interface. This should match one of the interfaces configured on your Azure Stack Edge device.
     * 
     */
    public Optional<Output<String>> userPlaneAccessIpv4Subnet() {
        return Optional.ofNullable(this.userPlaneAccessIpv4Subnet);
    }

    /**
     * Specifies the logical name for the user data plane interface. This should match one of the interfaces configured on your Azure Stack Edge device.
     * 
     */
    @Import(name="userPlaneAccessName")
    private @Nullable Output<String> userPlaneAccessName;

    /**
     * @return Specifies the logical name for the user data plane interface. This should match one of the interfaces configured on your Azure Stack Edge device.
     * 
     */
    public Optional<Output<String>> userPlaneAccessName() {
        return Optional.ofNullable(this.userPlaneAccessName);
    }

    private NetworkAttachedDataNetworkState() {}

    private NetworkAttachedDataNetworkState(NetworkAttachedDataNetworkState $) {
        this.dnsAddresses = $.dnsAddresses;
        this.location = $.location;
        this.mobileNetworkDataNetworkName = $.mobileNetworkDataNetworkName;
        this.mobileNetworkPacketCoreDataPlaneId = $.mobileNetworkPacketCoreDataPlaneId;
        this.networkAddressPortTranslation = $.networkAddressPortTranslation;
        this.tags = $.tags;
        this.userEquipmentAddressPoolPrefixes = $.userEquipmentAddressPoolPrefixes;
        this.userEquipmentStaticAddressPoolPrefixes = $.userEquipmentStaticAddressPoolPrefixes;
        this.userPlaneAccessIpv4Address = $.userPlaneAccessIpv4Address;
        this.userPlaneAccessIpv4Gateway = $.userPlaneAccessIpv4Gateway;
        this.userPlaneAccessIpv4Subnet = $.userPlaneAccessIpv4Subnet;
        this.userPlaneAccessName = $.userPlaneAccessName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(NetworkAttachedDataNetworkState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private NetworkAttachedDataNetworkState $;

        public Builder() {
            $ = new NetworkAttachedDataNetworkState();
        }

        public Builder(NetworkAttachedDataNetworkState defaults) {
            $ = new NetworkAttachedDataNetworkState(Objects.requireNonNull(defaults));
        }

        /**
         * @param dnsAddresses Specifies the DNS servers to signal to UEs to use for this attached data network.
         * 
         * @return builder
         * 
         */
        public Builder dnsAddresses(@Nullable Output<List<String>> dnsAddresses) {
            $.dnsAddresses = dnsAddresses;
            return this;
        }

        /**
         * @param dnsAddresses Specifies the DNS servers to signal to UEs to use for this attached data network.
         * 
         * @return builder
         * 
         */
        public Builder dnsAddresses(List<String> dnsAddresses) {
            return dnsAddresses(Output.of(dnsAddresses));
        }

        /**
         * @param dnsAddresses Specifies the DNS servers to signal to UEs to use for this attached data network.
         * 
         * @return builder
         * 
         */
        public Builder dnsAddresses(String... dnsAddresses) {
            return dnsAddresses(List.of(dnsAddresses));
        }

        /**
         * @param location Specifies the Azure Region where the Mobile Network Attached Data Network should exist. Changing this forces a new Mobile Network Attached Data Network to be created.
         * 
         * @return builder
         * 
         */
        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location Specifies the Azure Region where the Mobile Network Attached Data Network should exist. Changing this forces a new Mobile Network Attached Data Network to be created.
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param mobileNetworkDataNetworkName Specifies the name of the `azure.mobile.NetworkDataNetwork` which the Attached Data Network belongs to, Changing this forces a new Mobile Network Attached Data Network to be created.
         * 
         * @return builder
         * 
         */
        public Builder mobileNetworkDataNetworkName(@Nullable Output<String> mobileNetworkDataNetworkName) {
            $.mobileNetworkDataNetworkName = mobileNetworkDataNetworkName;
            return this;
        }

        /**
         * @param mobileNetworkDataNetworkName Specifies the name of the `azure.mobile.NetworkDataNetwork` which the Attached Data Network belongs to, Changing this forces a new Mobile Network Attached Data Network to be created.
         * 
         * @return builder
         * 
         */
        public Builder mobileNetworkDataNetworkName(String mobileNetworkDataNetworkName) {
            return mobileNetworkDataNetworkName(Output.of(mobileNetworkDataNetworkName));
        }

        /**
         * @param mobileNetworkPacketCoreDataPlaneId Specifies the ID of the `azure.mobile.NetworkPacketCoreDataPlane` which the Mobile Network Attached Data Network belongs to. Changing this forces a new Mobile Network Attached Data Network to be created.
         * 
         * @return builder
         * 
         */
        public Builder mobileNetworkPacketCoreDataPlaneId(@Nullable Output<String> mobileNetworkPacketCoreDataPlaneId) {
            $.mobileNetworkPacketCoreDataPlaneId = mobileNetworkPacketCoreDataPlaneId;
            return this;
        }

        /**
         * @param mobileNetworkPacketCoreDataPlaneId Specifies the ID of the `azure.mobile.NetworkPacketCoreDataPlane` which the Mobile Network Attached Data Network belongs to. Changing this forces a new Mobile Network Attached Data Network to be created.
         * 
         * @return builder
         * 
         */
        public Builder mobileNetworkPacketCoreDataPlaneId(String mobileNetworkPacketCoreDataPlaneId) {
            return mobileNetworkPacketCoreDataPlaneId(Output.of(mobileNetworkPacketCoreDataPlaneId));
        }

        /**
         * @param networkAddressPortTranslation A `network_address_port_translation` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder networkAddressPortTranslation(@Nullable Output<NetworkAttachedDataNetworkNetworkAddressPortTranslationArgs> networkAddressPortTranslation) {
            $.networkAddressPortTranslation = networkAddressPortTranslation;
            return this;
        }

        /**
         * @param networkAddressPortTranslation A `network_address_port_translation` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder networkAddressPortTranslation(NetworkAttachedDataNetworkNetworkAddressPortTranslationArgs networkAddressPortTranslation) {
            return networkAddressPortTranslation(Output.of(networkAddressPortTranslation));
        }

        /**
         * @param tags A mapping of tags which should be assigned to the Mobile Network Attached Data Network.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags A mapping of tags which should be assigned to the Mobile Network Attached Data Network.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public Builder userEquipmentAddressPoolPrefixes(@Nullable Output<List<String>> userEquipmentAddressPoolPrefixes) {
            $.userEquipmentAddressPoolPrefixes = userEquipmentAddressPoolPrefixes;
            return this;
        }

        public Builder userEquipmentAddressPoolPrefixes(List<String> userEquipmentAddressPoolPrefixes) {
            return userEquipmentAddressPoolPrefixes(Output.of(userEquipmentAddressPoolPrefixes));
        }

        public Builder userEquipmentAddressPoolPrefixes(String... userEquipmentAddressPoolPrefixes) {
            return userEquipmentAddressPoolPrefixes(List.of(userEquipmentAddressPoolPrefixes));
        }

        public Builder userEquipmentStaticAddressPoolPrefixes(@Nullable Output<List<String>> userEquipmentStaticAddressPoolPrefixes) {
            $.userEquipmentStaticAddressPoolPrefixes = userEquipmentStaticAddressPoolPrefixes;
            return this;
        }

        public Builder userEquipmentStaticAddressPoolPrefixes(List<String> userEquipmentStaticAddressPoolPrefixes) {
            return userEquipmentStaticAddressPoolPrefixes(Output.of(userEquipmentStaticAddressPoolPrefixes));
        }

        public Builder userEquipmentStaticAddressPoolPrefixes(String... userEquipmentStaticAddressPoolPrefixes) {
            return userEquipmentStaticAddressPoolPrefixes(List.of(userEquipmentStaticAddressPoolPrefixes));
        }

        /**
         * @param userPlaneAccessIpv4Address The IPv4 address for the user data plane interface. This should match one of the interfaces configured on your Azure Stack Edge device.
         * 
         * @return builder
         * 
         */
        public Builder userPlaneAccessIpv4Address(@Nullable Output<String> userPlaneAccessIpv4Address) {
            $.userPlaneAccessIpv4Address = userPlaneAccessIpv4Address;
            return this;
        }

        /**
         * @param userPlaneAccessIpv4Address The IPv4 address for the user data plane interface. This should match one of the interfaces configured on your Azure Stack Edge device.
         * 
         * @return builder
         * 
         */
        public Builder userPlaneAccessIpv4Address(String userPlaneAccessIpv4Address) {
            return userPlaneAccessIpv4Address(Output.of(userPlaneAccessIpv4Address));
        }

        /**
         * @param userPlaneAccessIpv4Gateway The default IPv4 gateway for the user data plane interface. This should match one of the interfaces configured on your Azure Stack Edge device.
         * 
         * @return builder
         * 
         */
        public Builder userPlaneAccessIpv4Gateway(@Nullable Output<String> userPlaneAccessIpv4Gateway) {
            $.userPlaneAccessIpv4Gateway = userPlaneAccessIpv4Gateway;
            return this;
        }

        /**
         * @param userPlaneAccessIpv4Gateway The default IPv4 gateway for the user data plane interface. This should match one of the interfaces configured on your Azure Stack Edge device.
         * 
         * @return builder
         * 
         */
        public Builder userPlaneAccessIpv4Gateway(String userPlaneAccessIpv4Gateway) {
            return userPlaneAccessIpv4Gateway(Output.of(userPlaneAccessIpv4Gateway));
        }

        /**
         * @param userPlaneAccessIpv4Subnet The IPv4 subnet for the user data plane interface. This should match one of the interfaces configured on your Azure Stack Edge device.
         * 
         * @return builder
         * 
         */
        public Builder userPlaneAccessIpv4Subnet(@Nullable Output<String> userPlaneAccessIpv4Subnet) {
            $.userPlaneAccessIpv4Subnet = userPlaneAccessIpv4Subnet;
            return this;
        }

        /**
         * @param userPlaneAccessIpv4Subnet The IPv4 subnet for the user data plane interface. This should match one of the interfaces configured on your Azure Stack Edge device.
         * 
         * @return builder
         * 
         */
        public Builder userPlaneAccessIpv4Subnet(String userPlaneAccessIpv4Subnet) {
            return userPlaneAccessIpv4Subnet(Output.of(userPlaneAccessIpv4Subnet));
        }

        /**
         * @param userPlaneAccessName Specifies the logical name for the user data plane interface. This should match one of the interfaces configured on your Azure Stack Edge device.
         * 
         * @return builder
         * 
         */
        public Builder userPlaneAccessName(@Nullable Output<String> userPlaneAccessName) {
            $.userPlaneAccessName = userPlaneAccessName;
            return this;
        }

        /**
         * @param userPlaneAccessName Specifies the logical name for the user data plane interface. This should match one of the interfaces configured on your Azure Stack Edge device.
         * 
         * @return builder
         * 
         */
        public Builder userPlaneAccessName(String userPlaneAccessName) {
            return userPlaneAccessName(Output.of(userPlaneAccessName));
        }

        public NetworkAttachedDataNetworkState build() {
            return $;
        }
    }

}
