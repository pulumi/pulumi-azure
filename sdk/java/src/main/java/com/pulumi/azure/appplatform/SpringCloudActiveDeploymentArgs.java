// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.appplatform;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class SpringCloudActiveDeploymentArgs extends com.pulumi.resources.ResourceArgs {

    public static final SpringCloudActiveDeploymentArgs Empty = new SpringCloudActiveDeploymentArgs();

    /**
     * Specifies the name of Spring Cloud Deployment which is going to be active.
     * 
     */
    @Import(name="deploymentName", required=true)
    private Output<String> deploymentName;

    /**
     * @return Specifies the name of Spring Cloud Deployment which is going to be active.
     * 
     */
    public Output<String> deploymentName() {
        return this.deploymentName;
    }

    /**
     * Specifies the id of the Spring Cloud Application. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="springCloudAppId", required=true)
    private Output<String> springCloudAppId;

    /**
     * @return Specifies the id of the Spring Cloud Application. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> springCloudAppId() {
        return this.springCloudAppId;
    }

    private SpringCloudActiveDeploymentArgs() {}

    private SpringCloudActiveDeploymentArgs(SpringCloudActiveDeploymentArgs $) {
        this.deploymentName = $.deploymentName;
        this.springCloudAppId = $.springCloudAppId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SpringCloudActiveDeploymentArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SpringCloudActiveDeploymentArgs $;

        public Builder() {
            $ = new SpringCloudActiveDeploymentArgs();
        }

        public Builder(SpringCloudActiveDeploymentArgs defaults) {
            $ = new SpringCloudActiveDeploymentArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param deploymentName Specifies the name of Spring Cloud Deployment which is going to be active.
         * 
         * @return builder
         * 
         */
        public Builder deploymentName(Output<String> deploymentName) {
            $.deploymentName = deploymentName;
            return this;
        }

        /**
         * @param deploymentName Specifies the name of Spring Cloud Deployment which is going to be active.
         * 
         * @return builder
         * 
         */
        public Builder deploymentName(String deploymentName) {
            return deploymentName(Output.of(deploymentName));
        }

        /**
         * @param springCloudAppId Specifies the id of the Spring Cloud Application. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder springCloudAppId(Output<String> springCloudAppId) {
            $.springCloudAppId = springCloudAppId;
            return this;
        }

        /**
         * @param springCloudAppId Specifies the id of the Spring Cloud Application. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder springCloudAppId(String springCloudAppId) {
            return springCloudAppId(Output.of(springCloudAppId));
        }

        public SpringCloudActiveDeploymentArgs build() {
            if ($.deploymentName == null) {
                throw new MissingRequiredPropertyException("SpringCloudActiveDeploymentArgs", "deploymentName");
            }
            if ($.springCloudAppId == null) {
                throw new MissingRequiredPropertyException("SpringCloudActiveDeploymentArgs", "springCloudAppId");
            }
            return $;
        }
    }

}
