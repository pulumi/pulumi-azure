// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.appservice.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AppServiceAuthSettingsActiveDirectoryArgs extends com.pulumi.resources.ResourceArgs {

    public static final AppServiceAuthSettingsActiveDirectoryArgs Empty = new AppServiceAuthSettingsActiveDirectoryArgs();

    /**
     * Allowed audience values to consider when validating JWTs issued by Azure Active Directory.
     * 
     */
    @Import(name="allowedAudiences")
    private @Nullable Output<List<String>> allowedAudiences;

    /**
     * @return Allowed audience values to consider when validating JWTs issued by Azure Active Directory.
     * 
     */
    public Optional<Output<List<String>>> allowedAudiences() {
        return Optional.ofNullable(this.allowedAudiences);
    }

    /**
     * The Client ID of this relying party application. Enables OpenIDConnection authentication with Azure Active Directory.
     * 
     */
    @Import(name="clientId", required=true)
    private Output<String> clientId;

    /**
     * @return The Client ID of this relying party application. Enables OpenIDConnection authentication with Azure Active Directory.
     * 
     */
    public Output<String> clientId() {
        return this.clientId;
    }

    /**
     * The Client Secret of this relying party application. If no secret is provided, implicit flow will be used.
     * 
     */
    @Import(name="clientSecret")
    private @Nullable Output<String> clientSecret;

    /**
     * @return The Client Secret of this relying party application. If no secret is provided, implicit flow will be used.
     * 
     */
    public Optional<Output<String>> clientSecret() {
        return Optional.ofNullable(this.clientSecret);
    }

    private AppServiceAuthSettingsActiveDirectoryArgs() {}

    private AppServiceAuthSettingsActiveDirectoryArgs(AppServiceAuthSettingsActiveDirectoryArgs $) {
        this.allowedAudiences = $.allowedAudiences;
        this.clientId = $.clientId;
        this.clientSecret = $.clientSecret;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AppServiceAuthSettingsActiveDirectoryArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AppServiceAuthSettingsActiveDirectoryArgs $;

        public Builder() {
            $ = new AppServiceAuthSettingsActiveDirectoryArgs();
        }

        public Builder(AppServiceAuthSettingsActiveDirectoryArgs defaults) {
            $ = new AppServiceAuthSettingsActiveDirectoryArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param allowedAudiences Allowed audience values to consider when validating JWTs issued by Azure Active Directory.
         * 
         * @return builder
         * 
         */
        public Builder allowedAudiences(@Nullable Output<List<String>> allowedAudiences) {
            $.allowedAudiences = allowedAudiences;
            return this;
        }

        /**
         * @param allowedAudiences Allowed audience values to consider when validating JWTs issued by Azure Active Directory.
         * 
         * @return builder
         * 
         */
        public Builder allowedAudiences(List<String> allowedAudiences) {
            return allowedAudiences(Output.of(allowedAudiences));
        }

        /**
         * @param allowedAudiences Allowed audience values to consider when validating JWTs issued by Azure Active Directory.
         * 
         * @return builder
         * 
         */
        public Builder allowedAudiences(String... allowedAudiences) {
            return allowedAudiences(List.of(allowedAudiences));
        }

        /**
         * @param clientId The Client ID of this relying party application. Enables OpenIDConnection authentication with Azure Active Directory.
         * 
         * @return builder
         * 
         */
        public Builder clientId(Output<String> clientId) {
            $.clientId = clientId;
            return this;
        }

        /**
         * @param clientId The Client ID of this relying party application. Enables OpenIDConnection authentication with Azure Active Directory.
         * 
         * @return builder
         * 
         */
        public Builder clientId(String clientId) {
            return clientId(Output.of(clientId));
        }

        /**
         * @param clientSecret The Client Secret of this relying party application. If no secret is provided, implicit flow will be used.
         * 
         * @return builder
         * 
         */
        public Builder clientSecret(@Nullable Output<String> clientSecret) {
            $.clientSecret = clientSecret;
            return this;
        }

        /**
         * @param clientSecret The Client Secret of this relying party application. If no secret is provided, implicit flow will be used.
         * 
         * @return builder
         * 
         */
        public Builder clientSecret(String clientSecret) {
            return clientSecret(Output.of(clientSecret));
        }

        public AppServiceAuthSettingsActiveDirectoryArgs build() {
            if ($.clientId == null) {
                throw new MissingRequiredPropertyException("AppServiceAuthSettingsActiveDirectoryArgs", "clientId");
            }
            return $;
        }
    }

}
