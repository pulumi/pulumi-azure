// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.maintenance.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetConfigurationInstallPatchLinux {
    /**
     * @return List of Classification category of patches to be patched.
     * 
     */
    private List<String> classificationsToIncludes;
    /**
     * @return List of package names to be excluded from patching.
     * 
     */
    private List<String> packageNamesMaskToExcludes;
    /**
     * @return List of package names to be included for patching.
     * 
     */
    private List<String> packageNamesMaskToIncludes;

    private GetConfigurationInstallPatchLinux() {}
    /**
     * @return List of Classification category of patches to be patched.
     * 
     */
    public List<String> classificationsToIncludes() {
        return this.classificationsToIncludes;
    }
    /**
     * @return List of package names to be excluded from patching.
     * 
     */
    public List<String> packageNamesMaskToExcludes() {
        return this.packageNamesMaskToExcludes;
    }
    /**
     * @return List of package names to be included for patching.
     * 
     */
    public List<String> packageNamesMaskToIncludes() {
        return this.packageNamesMaskToIncludes;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetConfigurationInstallPatchLinux defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<String> classificationsToIncludes;
        private List<String> packageNamesMaskToExcludes;
        private List<String> packageNamesMaskToIncludes;
        public Builder() {}
        public Builder(GetConfigurationInstallPatchLinux defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.classificationsToIncludes = defaults.classificationsToIncludes;
    	      this.packageNamesMaskToExcludes = defaults.packageNamesMaskToExcludes;
    	      this.packageNamesMaskToIncludes = defaults.packageNamesMaskToIncludes;
        }

        @CustomType.Setter
        public Builder classificationsToIncludes(List<String> classificationsToIncludes) {
            this.classificationsToIncludes = Objects.requireNonNull(classificationsToIncludes);
            return this;
        }
        public Builder classificationsToIncludes(String... classificationsToIncludes) {
            return classificationsToIncludes(List.of(classificationsToIncludes));
        }
        @CustomType.Setter
        public Builder packageNamesMaskToExcludes(List<String> packageNamesMaskToExcludes) {
            this.packageNamesMaskToExcludes = Objects.requireNonNull(packageNamesMaskToExcludes);
            return this;
        }
        public Builder packageNamesMaskToExcludes(String... packageNamesMaskToExcludes) {
            return packageNamesMaskToExcludes(List.of(packageNamesMaskToExcludes));
        }
        @CustomType.Setter
        public Builder packageNamesMaskToIncludes(List<String> packageNamesMaskToIncludes) {
            this.packageNamesMaskToIncludes = Objects.requireNonNull(packageNamesMaskToIncludes);
            return this;
        }
        public Builder packageNamesMaskToIncludes(String... packageNamesMaskToIncludes) {
            return packageNamesMaskToIncludes(List.of(packageNamesMaskToIncludes));
        }
        public GetConfigurationInstallPatchLinux build() {
            final var o = new GetConfigurationInstallPatchLinux();
            o.classificationsToIncludes = classificationsToIncludes;
            o.packageNamesMaskToExcludes = packageNamesMaskToExcludes;
            o.packageNamesMaskToIncludes = packageNamesMaskToIncludes;
            return o;
        }
    }
}
