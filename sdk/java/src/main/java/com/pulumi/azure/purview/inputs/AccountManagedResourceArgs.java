// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.purview.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AccountManagedResourceArgs extends com.pulumi.resources.ResourceArgs {

    public static final AccountManagedResourceArgs Empty = new AccountManagedResourceArgs();

    /**
     * The ID of the managed event hub namespace.
     * 
     */
    @Import(name="eventHubNamespaceId")
    private @Nullable Output<String> eventHubNamespaceId;

    /**
     * @return The ID of the managed event hub namespace.
     * 
     */
    public Optional<Output<String>> eventHubNamespaceId() {
        return Optional.ofNullable(this.eventHubNamespaceId);
    }

    /**
     * The ID of the managed resource group.
     * 
     */
    @Import(name="resourceGroupId")
    private @Nullable Output<String> resourceGroupId;

    /**
     * @return The ID of the managed resource group.
     * 
     */
    public Optional<Output<String>> resourceGroupId() {
        return Optional.ofNullable(this.resourceGroupId);
    }

    /**
     * The ID of the managed storage account.
     * 
     */
    @Import(name="storageAccountId")
    private @Nullable Output<String> storageAccountId;

    /**
     * @return The ID of the managed storage account.
     * 
     */
    public Optional<Output<String>> storageAccountId() {
        return Optional.ofNullable(this.storageAccountId);
    }

    private AccountManagedResourceArgs() {}

    private AccountManagedResourceArgs(AccountManagedResourceArgs $) {
        this.eventHubNamespaceId = $.eventHubNamespaceId;
        this.resourceGroupId = $.resourceGroupId;
        this.storageAccountId = $.storageAccountId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AccountManagedResourceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AccountManagedResourceArgs $;

        public Builder() {
            $ = new AccountManagedResourceArgs();
        }

        public Builder(AccountManagedResourceArgs defaults) {
            $ = new AccountManagedResourceArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param eventHubNamespaceId The ID of the managed event hub namespace.
         * 
         * @return builder
         * 
         */
        public Builder eventHubNamespaceId(@Nullable Output<String> eventHubNamespaceId) {
            $.eventHubNamespaceId = eventHubNamespaceId;
            return this;
        }

        /**
         * @param eventHubNamespaceId The ID of the managed event hub namespace.
         * 
         * @return builder
         * 
         */
        public Builder eventHubNamespaceId(String eventHubNamespaceId) {
            return eventHubNamespaceId(Output.of(eventHubNamespaceId));
        }

        /**
         * @param resourceGroupId The ID of the managed resource group.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupId(@Nullable Output<String> resourceGroupId) {
            $.resourceGroupId = resourceGroupId;
            return this;
        }

        /**
         * @param resourceGroupId The ID of the managed resource group.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupId(String resourceGroupId) {
            return resourceGroupId(Output.of(resourceGroupId));
        }

        /**
         * @param storageAccountId The ID of the managed storage account.
         * 
         * @return builder
         * 
         */
        public Builder storageAccountId(@Nullable Output<String> storageAccountId) {
            $.storageAccountId = storageAccountId;
            return this;
        }

        /**
         * @param storageAccountId The ID of the managed storage account.
         * 
         * @return builder
         * 
         */
        public Builder storageAccountId(String storageAccountId) {
            return storageAccountId(Output.of(storageAccountId));
        }

        public AccountManagedResourceArgs build() {
            return $;
        }
    }

}
