// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.cdn;

import com.pulumi.azure.Utilities;
import com.pulumi.azure.cdn.FrontdoorRouteArgs;
import com.pulumi.azure.cdn.inputs.FrontdoorRouteState;
import com.pulumi.azure.cdn.outputs.FrontdoorRouteCache;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Manages a Front Door (standard/premium) Route.
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.azure.core.ResourceGroup;
 * import com.pulumi.azure.core.ResourceGroupArgs;
 * import com.pulumi.azure.dns.Zone;
 * import com.pulumi.azure.dns.ZoneArgs;
 * import com.pulumi.azure.cdn.FrontdoorProfile;
 * import com.pulumi.azure.cdn.FrontdoorProfileArgs;
 * import com.pulumi.azure.cdn.FrontdoorOriginGroup;
 * import com.pulumi.azure.cdn.FrontdoorOriginGroupArgs;
 * import com.pulumi.azure.cdn.inputs.FrontdoorOriginGroupLoadBalancingArgs;
 * import com.pulumi.azure.cdn.FrontdoorOrigin;
 * import com.pulumi.azure.cdn.FrontdoorOriginArgs;
 * import com.pulumi.azure.cdn.FrontdoorEndpoint;
 * import com.pulumi.azure.cdn.FrontdoorEndpointArgs;
 * import com.pulumi.azure.cdn.FrontdoorRuleSet;
 * import com.pulumi.azure.cdn.FrontdoorRuleSetArgs;
 * import com.pulumi.azure.cdn.FrontdoorCustomDomain;
 * import com.pulumi.azure.cdn.FrontdoorCustomDomainArgs;
 * import com.pulumi.azure.cdn.inputs.FrontdoorCustomDomainTlsArgs;
 * import com.pulumi.std.StdFunctions;
 * import com.pulumi.std.inputs.JoinArgs;
 * import com.pulumi.azure.cdn.FrontdoorRoute;
 * import com.pulumi.azure.cdn.FrontdoorRouteArgs;
 * import com.pulumi.azure.cdn.inputs.FrontdoorRouteCacheArgs;
 * import com.pulumi.azure.cdn.FrontdoorCustomDomainAssociation;
 * import com.pulumi.azure.cdn.FrontdoorCustomDomainAssociationArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new ResourceGroup("example", ResourceGroupArgs.builder()
 *             .name("example-cdn-frontdoor")
 *             .location("West Europe")
 *             .build());
 * 
 *         var exampleZone = new Zone("exampleZone", ZoneArgs.builder()
 *             .name("example.com")
 *             .resourceGroupName(example.name())
 *             .build());
 * 
 *         var exampleFrontdoorProfile = new FrontdoorProfile("exampleFrontdoorProfile", FrontdoorProfileArgs.builder()
 *             .name("example-profile")
 *             .resourceGroupName(example.name())
 *             .skuName("Standard_AzureFrontDoor")
 *             .build());
 * 
 *         var exampleFrontdoorOriginGroup = new FrontdoorOriginGroup("exampleFrontdoorOriginGroup", FrontdoorOriginGroupArgs.builder()
 *             .name("example-originGroup")
 *             .cdnFrontdoorProfileId(exampleFrontdoorProfile.id())
 *             .loadBalancing(FrontdoorOriginGroupLoadBalancingArgs.builder()
 *                 .additionalLatencyInMilliseconds(0)
 *                 .sampleSize(16)
 *                 .successfulSamplesRequired(3)
 *                 .build())
 *             .build());
 * 
 *         var exampleFrontdoorOrigin = new FrontdoorOrigin("exampleFrontdoorOrigin", FrontdoorOriginArgs.builder()
 *             .name("example-origin")
 *             .cdnFrontdoorOriginGroupId(exampleFrontdoorOriginGroup.id())
 *             .enabled(true)
 *             .certificateNameCheckEnabled(false)
 *             .hostName("contoso.com")
 *             .httpPort(80)
 *             .httpsPort(443)
 *             .originHostHeader("www.contoso.com")
 *             .priority(1)
 *             .weight(1)
 *             .build());
 * 
 *         var exampleFrontdoorEndpoint = new FrontdoorEndpoint("exampleFrontdoorEndpoint", FrontdoorEndpointArgs.builder()
 *             .name("example-endpoint")
 *             .cdnFrontdoorProfileId(exampleFrontdoorProfile.id())
 *             .build());
 * 
 *         var exampleFrontdoorRuleSet = new FrontdoorRuleSet("exampleFrontdoorRuleSet", FrontdoorRuleSetArgs.builder()
 *             .name("ExampleRuleSet")
 *             .cdnFrontdoorProfileId(exampleFrontdoorProfile.id())
 *             .build());
 * 
 *         var contoso = new FrontdoorCustomDomain("contoso", FrontdoorCustomDomainArgs.builder()
 *             .name("contoso-custom-domain")
 *             .cdnFrontdoorProfileId(exampleFrontdoorProfile.id())
 *             .dnsZoneId(exampleZone.id())
 *             .hostName(StdFunctions.join(JoinArgs.builder()
 *                 .separator(".")
 *                 .input(                
 *                     "contoso",
 *                     exampleZone.name())
 *                 .build()).applyValue(_invoke -> _invoke.result()))
 *             .tls(FrontdoorCustomDomainTlsArgs.builder()
 *                 .certificateType("ManagedCertificate")
 *                 .minimumTlsVersion("TLS12")
 *                 .build())
 *             .build());
 * 
 *         var fabrikam = new FrontdoorCustomDomain("fabrikam", FrontdoorCustomDomainArgs.builder()
 *             .name("fabrikam-custom-domain")
 *             .cdnFrontdoorProfileId(exampleFrontdoorProfile.id())
 *             .dnsZoneId(exampleZone.id())
 *             .hostName(StdFunctions.join(JoinArgs.builder()
 *                 .separator(".")
 *                 .input(                
 *                     "fabrikam",
 *                     exampleZone.name())
 *                 .build()).applyValue(_invoke -> _invoke.result()))
 *             .tls(FrontdoorCustomDomainTlsArgs.builder()
 *                 .certificateType("ManagedCertificate")
 *                 .minimumTlsVersion("TLS12")
 *                 .build())
 *             .build());
 * 
 *         var exampleFrontdoorRoute = new FrontdoorRoute("exampleFrontdoorRoute", FrontdoorRouteArgs.builder()
 *             .name("example-route")
 *             .cdnFrontdoorEndpointId(exampleFrontdoorEndpoint.id())
 *             .cdnFrontdoorOriginGroupId(exampleFrontdoorOriginGroup.id())
 *             .cdnFrontdoorOriginIds(exampleFrontdoorOrigin.id())
 *             .cdnFrontdoorRuleSetIds(exampleFrontdoorRuleSet.id())
 *             .enabled(true)
 *             .forwardingProtocol("HttpsOnly")
 *             .httpsRedirectEnabled(true)
 *             .patternsToMatches("/*")
 *             .supportedProtocols(            
 *                 "Http",
 *                 "Https")
 *             .cdnFrontdoorCustomDomainIds(            
 *                 contoso.id(),
 *                 fabrikam.id())
 *             .linkToDefaultDomain(false)
 *             .cache(FrontdoorRouteCacheArgs.builder()
 *                 .queryStringCachingBehavior("IgnoreSpecifiedQueryStrings")
 *                 .queryStrings(                
 *                     "account",
 *                     "settings")
 *                 .compressionEnabled(true)
 *                 .contentTypesToCompresses(                
 *                     "text/html",
 *                     "text/javascript",
 *                     "text/xml")
 *                 .build())
 *             .build());
 * 
 *         var contosoFrontdoorCustomDomainAssociation = new FrontdoorCustomDomainAssociation("contosoFrontdoorCustomDomainAssociation", FrontdoorCustomDomainAssociationArgs.builder()
 *             .cdnFrontdoorCustomDomainId(contoso.id())
 *             .cdnFrontdoorRouteIds(exampleFrontdoorRoute.id())
 *             .build());
 * 
 *         var fabrikamFrontdoorCustomDomainAssociation = new FrontdoorCustomDomainAssociation("fabrikamFrontdoorCustomDomainAssociation", FrontdoorCustomDomainAssociationArgs.builder()
 *             .cdnFrontdoorCustomDomainId(fabrikam.id())
 *             .cdnFrontdoorRouteIds(exampleFrontdoorRoute.id())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * Front Door Routes can be imported using the `resource id`, e.g.
 * 
 * ```sh
 * $ pulumi import azure:cdn/frontdoorRoute:FrontdoorRoute example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resourceGroup1/providers/Microsoft.Cdn/profiles/profile1/afdEndpoints/endpoint1/routes/route1
 * ```
 * 
 */
@ResourceType(type="azure:cdn/frontdoorRoute:FrontdoorRoute")
public class FrontdoorRoute extends com.pulumi.resources.CustomResource {
    /**
     * A `cache` block as defined below.
     * 
     * &gt; **Note:** To disable caching, do not provide the `cache` block in the configuration file.
     * 
     */
    @Export(name="cache", refs={FrontdoorRouteCache.class}, tree="[0]")
    private Output</* @Nullable */ FrontdoorRouteCache> cache;

    /**
     * @return A `cache` block as defined below.
     * 
     * &gt; **Note:** To disable caching, do not provide the `cache` block in the configuration file.
     * 
     */
    public Output<Optional<FrontdoorRouteCache>> cache() {
        return Codegen.optional(this.cache);
    }
    /**
     * The IDs of the Front Door Custom Domains which are associated with this Front Door Route.
     * 
     */
    @Export(name="cdnFrontdoorCustomDomainIds", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> cdnFrontdoorCustomDomainIds;

    /**
     * @return The IDs of the Front Door Custom Domains which are associated with this Front Door Route.
     * 
     */
    public Output<Optional<List<String>>> cdnFrontdoorCustomDomainIds() {
        return Codegen.optional(this.cdnFrontdoorCustomDomainIds);
    }
    /**
     * The resource ID of the Front Door Endpoint where this Front Door Route should exist. Changing this forces a new Front Door Route to be created.
     * 
     */
    @Export(name="cdnFrontdoorEndpointId", refs={String.class}, tree="[0]")
    private Output<String> cdnFrontdoorEndpointId;

    /**
     * @return The resource ID of the Front Door Endpoint where this Front Door Route should exist. Changing this forces a new Front Door Route to be created.
     * 
     */
    public Output<String> cdnFrontdoorEndpointId() {
        return this.cdnFrontdoorEndpointId;
    }
    /**
     * The resource ID of the Front Door Origin Group where this Front Door Route should be created.
     * 
     */
    @Export(name="cdnFrontdoorOriginGroupId", refs={String.class}, tree="[0]")
    private Output<String> cdnFrontdoorOriginGroupId;

    /**
     * @return The resource ID of the Front Door Origin Group where this Front Door Route should be created.
     * 
     */
    public Output<String> cdnFrontdoorOriginGroupId() {
        return this.cdnFrontdoorOriginGroupId;
    }
    /**
     * One or more Front Door Origin resource IDs that this Front Door Route will link to.
     * 
     */
    @Export(name="cdnFrontdoorOriginIds", refs={List.class,String.class}, tree="[0,1]")
    private Output<List<String>> cdnFrontdoorOriginIds;

    /**
     * @return One or more Front Door Origin resource IDs that this Front Door Route will link to.
     * 
     */
    public Output<List<String>> cdnFrontdoorOriginIds() {
        return this.cdnFrontdoorOriginIds;
    }
    /**
     * A directory path on the Front Door Origin that can be used to retrieve content (e.g. `contoso.cloudapp.net/originpath`).
     * 
     */
    @Export(name="cdnFrontdoorOriginPath", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> cdnFrontdoorOriginPath;

    /**
     * @return A directory path on the Front Door Origin that can be used to retrieve content (e.g. `contoso.cloudapp.net/originpath`).
     * 
     */
    public Output<Optional<String>> cdnFrontdoorOriginPath() {
        return Codegen.optional(this.cdnFrontdoorOriginPath);
    }
    /**
     * A list of the Front Door Rule Set IDs which should be assigned to this Front Door Route.
     * 
     */
    @Export(name="cdnFrontdoorRuleSetIds", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> cdnFrontdoorRuleSetIds;

    /**
     * @return A list of the Front Door Rule Set IDs which should be assigned to this Front Door Route.
     * 
     */
    public Output<Optional<List<String>>> cdnFrontdoorRuleSetIds() {
        return Codegen.optional(this.cdnFrontdoorRuleSetIds);
    }
    /**
     * Is this Front Door Route enabled? Possible values are `true` or `false`. Defaults to `true`.
     * 
     */
    @Export(name="enabled", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> enabled;

    /**
     * @return Is this Front Door Route enabled? Possible values are `true` or `false`. Defaults to `true`.
     * 
     */
    public Output<Optional<Boolean>> enabled() {
        return Codegen.optional(this.enabled);
    }
    /**
     * The Protocol that will be use when forwarding traffic to backends. Possible values are `HttpOnly`, `HttpsOnly` or `MatchRequest`. Defaults to `MatchRequest`.
     * 
     */
    @Export(name="forwardingProtocol", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> forwardingProtocol;

    /**
     * @return The Protocol that will be use when forwarding traffic to backends. Possible values are `HttpOnly`, `HttpsOnly` or `MatchRequest`. Defaults to `MatchRequest`.
     * 
     */
    public Output<Optional<String>> forwardingProtocol() {
        return Codegen.optional(this.forwardingProtocol);
    }
    /**
     * Automatically redirect HTTP traffic to HTTPS traffic? Possible values are `true` or `false`. Defaults to `true`.
     * 
     * &gt; **Note:** The `https_redirect_enabled` rule is the first rule that will be executed.
     * 
     */
    @Export(name="httpsRedirectEnabled", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> httpsRedirectEnabled;

    /**
     * @return Automatically redirect HTTP traffic to HTTPS traffic? Possible values are `true` or `false`. Defaults to `true`.
     * 
     * &gt; **Note:** The `https_redirect_enabled` rule is the first rule that will be executed.
     * 
     */
    public Output<Optional<Boolean>> httpsRedirectEnabled() {
        return Codegen.optional(this.httpsRedirectEnabled);
    }
    /**
     * Should this Front Door Route be linked to the default endpoint? Possible values include `true` or `false`. Defaults to `true`.
     * 
     */
    @Export(name="linkToDefaultDomain", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> linkToDefaultDomain;

    /**
     * @return Should this Front Door Route be linked to the default endpoint? Possible values include `true` or `false`. Defaults to `true`.
     * 
     */
    public Output<Optional<Boolean>> linkToDefaultDomain() {
        return Codegen.optional(this.linkToDefaultDomain);
    }
    /**
     * The name which should be used for this Front Door Route. Valid values must begin with a letter or number, end with a letter or number and may only contain letters, numbers and hyphens with a maximum length of 90 characters. Changing this forces a new Front Door Route to be created.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The name which should be used for this Front Door Route. Valid values must begin with a letter or number, end with a letter or number and may only contain letters, numbers and hyphens with a maximum length of 90 characters. Changing this forces a new Front Door Route to be created.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The route patterns of the rule.
     * 
     */
    @Export(name="patternsToMatches", refs={List.class,String.class}, tree="[0,1]")
    private Output<List<String>> patternsToMatches;

    /**
     * @return The route patterns of the rule.
     * 
     */
    public Output<List<String>> patternsToMatches() {
        return this.patternsToMatches;
    }
    /**
     * One or more Protocols supported by this Front Door Route. Possible values are `Http` or `Https`.
     * 
     * &gt; **Note:** If `https_redirect_enabled` is set to `true` the `supported_protocols` field must contain both `Http` and `Https` values.
     * 
     */
    @Export(name="supportedProtocols", refs={List.class,String.class}, tree="[0,1]")
    private Output<List<String>> supportedProtocols;

    /**
     * @return One or more Protocols supported by this Front Door Route. Possible values are `Http` or `Https`.
     * 
     * &gt; **Note:** If `https_redirect_enabled` is set to `true` the `supported_protocols` field must contain both `Http` and `Https` values.
     * 
     */
    public Output<List<String>> supportedProtocols() {
        return this.supportedProtocols;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public FrontdoorRoute(java.lang.String name) {
        this(name, FrontdoorRouteArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public FrontdoorRoute(java.lang.String name, FrontdoorRouteArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public FrontdoorRoute(java.lang.String name, FrontdoorRouteArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:cdn/frontdoorRoute:FrontdoorRoute", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private FrontdoorRoute(java.lang.String name, Output<java.lang.String> id, @Nullable FrontdoorRouteState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:cdn/frontdoorRoute:FrontdoorRoute", name, state, makeResourceOptions(options, id), false);
    }

    private static FrontdoorRouteArgs makeArgs(FrontdoorRouteArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? FrontdoorRouteArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static FrontdoorRoute get(java.lang.String name, Output<java.lang.String> id, @Nullable FrontdoorRouteState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new FrontdoorRoute(name, id, state, options);
    }
}
