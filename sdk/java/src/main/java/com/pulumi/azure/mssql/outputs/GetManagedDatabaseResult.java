// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.mssql.outputs;

import com.pulumi.azure.mssql.outputs.GetManagedDatabaseLongTermRetentionPolicy;
import com.pulumi.azure.mssql.outputs.GetManagedDatabasePointInTimeRestore;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetManagedDatabaseResult {
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return A `longTermRetentionPolicy` block as defined below.
     * 
     */
    private List<GetManagedDatabaseLongTermRetentionPolicy> longTermRetentionPolicies;
    private String managedInstanceId;
    /**
     * @return The name of the Managed Instance.
     * 
     */
    private String managedInstanceName;
    private String name;
    /**
     * @return A `pointInTimeRestore` block as defined below.
     * 
     */
    private List<GetManagedDatabasePointInTimeRestore> pointInTimeRestores;
    /**
     * @return The name of the Resource Group where the Azure SQL Azure Managed Instance exists.
     * 
     */
    private String resourceGroupName;
    /**
     * @return The backup retention period in days. This is how many days Point-in-Time Restore will be supported.
     * 
     */
    private Integer shortTermRetentionDays;

    private GetManagedDatabaseResult() {}
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return A `longTermRetentionPolicy` block as defined below.
     * 
     */
    public List<GetManagedDatabaseLongTermRetentionPolicy> longTermRetentionPolicies() {
        return this.longTermRetentionPolicies;
    }
    public String managedInstanceId() {
        return this.managedInstanceId;
    }
    /**
     * @return The name of the Managed Instance.
     * 
     */
    public String managedInstanceName() {
        return this.managedInstanceName;
    }
    public String name() {
        return this.name;
    }
    /**
     * @return A `pointInTimeRestore` block as defined below.
     * 
     */
    public List<GetManagedDatabasePointInTimeRestore> pointInTimeRestores() {
        return this.pointInTimeRestores;
    }
    /**
     * @return The name of the Resource Group where the Azure SQL Azure Managed Instance exists.
     * 
     */
    public String resourceGroupName() {
        return this.resourceGroupName;
    }
    /**
     * @return The backup retention period in days. This is how many days Point-in-Time Restore will be supported.
     * 
     */
    public Integer shortTermRetentionDays() {
        return this.shortTermRetentionDays;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetManagedDatabaseResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String id;
        private List<GetManagedDatabaseLongTermRetentionPolicy> longTermRetentionPolicies;
        private String managedInstanceId;
        private String managedInstanceName;
        private String name;
        private List<GetManagedDatabasePointInTimeRestore> pointInTimeRestores;
        private String resourceGroupName;
        private Integer shortTermRetentionDays;
        public Builder() {}
        public Builder(GetManagedDatabaseResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.id = defaults.id;
    	      this.longTermRetentionPolicies = defaults.longTermRetentionPolicies;
    	      this.managedInstanceId = defaults.managedInstanceId;
    	      this.managedInstanceName = defaults.managedInstanceName;
    	      this.name = defaults.name;
    	      this.pointInTimeRestores = defaults.pointInTimeRestores;
    	      this.resourceGroupName = defaults.resourceGroupName;
    	      this.shortTermRetentionDays = defaults.shortTermRetentionDays;
        }

        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetManagedDatabaseResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder longTermRetentionPolicies(List<GetManagedDatabaseLongTermRetentionPolicy> longTermRetentionPolicies) {
            if (longTermRetentionPolicies == null) {
              throw new MissingRequiredPropertyException("GetManagedDatabaseResult", "longTermRetentionPolicies");
            }
            this.longTermRetentionPolicies = longTermRetentionPolicies;
            return this;
        }
        public Builder longTermRetentionPolicies(GetManagedDatabaseLongTermRetentionPolicy... longTermRetentionPolicies) {
            return longTermRetentionPolicies(List.of(longTermRetentionPolicies));
        }
        @CustomType.Setter
        public Builder managedInstanceId(String managedInstanceId) {
            if (managedInstanceId == null) {
              throw new MissingRequiredPropertyException("GetManagedDatabaseResult", "managedInstanceId");
            }
            this.managedInstanceId = managedInstanceId;
            return this;
        }
        @CustomType.Setter
        public Builder managedInstanceName(String managedInstanceName) {
            if (managedInstanceName == null) {
              throw new MissingRequiredPropertyException("GetManagedDatabaseResult", "managedInstanceName");
            }
            this.managedInstanceName = managedInstanceName;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetManagedDatabaseResult", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder pointInTimeRestores(List<GetManagedDatabasePointInTimeRestore> pointInTimeRestores) {
            if (pointInTimeRestores == null) {
              throw new MissingRequiredPropertyException("GetManagedDatabaseResult", "pointInTimeRestores");
            }
            this.pointInTimeRestores = pointInTimeRestores;
            return this;
        }
        public Builder pointInTimeRestores(GetManagedDatabasePointInTimeRestore... pointInTimeRestores) {
            return pointInTimeRestores(List.of(pointInTimeRestores));
        }
        @CustomType.Setter
        public Builder resourceGroupName(String resourceGroupName) {
            if (resourceGroupName == null) {
              throw new MissingRequiredPropertyException("GetManagedDatabaseResult", "resourceGroupName");
            }
            this.resourceGroupName = resourceGroupName;
            return this;
        }
        @CustomType.Setter
        public Builder shortTermRetentionDays(Integer shortTermRetentionDays) {
            if (shortTermRetentionDays == null) {
              throw new MissingRequiredPropertyException("GetManagedDatabaseResult", "shortTermRetentionDays");
            }
            this.shortTermRetentionDays = shortTermRetentionDays;
            return this;
        }
        public GetManagedDatabaseResult build() {
            final var _resultValue = new GetManagedDatabaseResult();
            _resultValue.id = id;
            _resultValue.longTermRetentionPolicies = longTermRetentionPolicies;
            _resultValue.managedInstanceId = managedInstanceId;
            _resultValue.managedInstanceName = managedInstanceName;
            _resultValue.name = name;
            _resultValue.pointInTimeRestores = pointInTimeRestores;
            _resultValue.resourceGroupName = resourceGroupName;
            _resultValue.shortTermRetentionDays = shortTermRetentionDays;
            return _resultValue;
        }
    }
}
