// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.monitoring.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class DiagnosticSettingEnabledMetricArgs extends com.pulumi.resources.ResourceArgs {

    public static final DiagnosticSettingEnabledMetricArgs Empty = new DiagnosticSettingEnabledMetricArgs();

    /**
     * The name of a Diagnostic Metric Category for this Resource.
     * 
     * &gt; **NOTE:** The Metric Categories available vary depending on the Resource being used. You may wish to use the `azure.monitoring.getDiagnosticCategories` Data Source to identify which categories are available for a given Resource.
     * 
     */
    @Import(name="category", required=true)
    private Output<String> category;

    /**
     * @return The name of a Diagnostic Metric Category for this Resource.
     * 
     * &gt; **NOTE:** The Metric Categories available vary depending on the Resource being used. You may wish to use the `azure.monitoring.getDiagnosticCategories` Data Source to identify which categories are available for a given Resource.
     * 
     */
    public Output<String> category() {
        return this.category;
    }

    private DiagnosticSettingEnabledMetricArgs() {}

    private DiagnosticSettingEnabledMetricArgs(DiagnosticSettingEnabledMetricArgs $) {
        this.category = $.category;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DiagnosticSettingEnabledMetricArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DiagnosticSettingEnabledMetricArgs $;

        public Builder() {
            $ = new DiagnosticSettingEnabledMetricArgs();
        }

        public Builder(DiagnosticSettingEnabledMetricArgs defaults) {
            $ = new DiagnosticSettingEnabledMetricArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param category The name of a Diagnostic Metric Category for this Resource.
         * 
         * &gt; **NOTE:** The Metric Categories available vary depending on the Resource being used. You may wish to use the `azure.monitoring.getDiagnosticCategories` Data Source to identify which categories are available for a given Resource.
         * 
         * @return builder
         * 
         */
        public Builder category(Output<String> category) {
            $.category = category;
            return this;
        }

        /**
         * @param category The name of a Diagnostic Metric Category for this Resource.
         * 
         * &gt; **NOTE:** The Metric Categories available vary depending on the Resource being used. You may wish to use the `azure.monitoring.getDiagnosticCategories` Data Source to identify which categories are available for a given Resource.
         * 
         * @return builder
         * 
         */
        public Builder category(String category) {
            return category(Output.of(category));
        }

        public DiagnosticSettingEnabledMetricArgs build() {
            if ($.category == null) {
                throw new MissingRequiredPropertyException("DiagnosticSettingEnabledMetricArgs", "category");
            }
            return $;
        }
    }

}
