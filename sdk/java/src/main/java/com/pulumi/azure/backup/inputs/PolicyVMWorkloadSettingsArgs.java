// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.backup.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class PolicyVMWorkloadSettingsArgs extends com.pulumi.resources.ResourceArgs {

    public static final PolicyVMWorkloadSettingsArgs Empty = new PolicyVMWorkloadSettingsArgs();

    /**
     * The compression setting for the VM Workload Backup Policy. Defaults to `false`.
     * 
     */
    @Import(name="compressionEnabled")
    private @Nullable Output<Boolean> compressionEnabled;

    /**
     * @return The compression setting for the VM Workload Backup Policy. Defaults to `false`.
     * 
     */
    public Optional<Output<Boolean>> compressionEnabled() {
        return Optional.ofNullable(this.compressionEnabled);
    }

    /**
     * The timezone for the VM Workload Backup Policy. [The possible values are defined here](https://jackstromberg.com/2017/01/list-of-time-zones-consumed-by-azure/).
     * 
     */
    @Import(name="timeZone", required=true)
    private Output<String> timeZone;

    /**
     * @return The timezone for the VM Workload Backup Policy. [The possible values are defined here](https://jackstromberg.com/2017/01/list-of-time-zones-consumed-by-azure/).
     * 
     */
    public Output<String> timeZone() {
        return this.timeZone;
    }

    private PolicyVMWorkloadSettingsArgs() {}

    private PolicyVMWorkloadSettingsArgs(PolicyVMWorkloadSettingsArgs $) {
        this.compressionEnabled = $.compressionEnabled;
        this.timeZone = $.timeZone;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PolicyVMWorkloadSettingsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PolicyVMWorkloadSettingsArgs $;

        public Builder() {
            $ = new PolicyVMWorkloadSettingsArgs();
        }

        public Builder(PolicyVMWorkloadSettingsArgs defaults) {
            $ = new PolicyVMWorkloadSettingsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param compressionEnabled The compression setting for the VM Workload Backup Policy. Defaults to `false`.
         * 
         * @return builder
         * 
         */
        public Builder compressionEnabled(@Nullable Output<Boolean> compressionEnabled) {
            $.compressionEnabled = compressionEnabled;
            return this;
        }

        /**
         * @param compressionEnabled The compression setting for the VM Workload Backup Policy. Defaults to `false`.
         * 
         * @return builder
         * 
         */
        public Builder compressionEnabled(Boolean compressionEnabled) {
            return compressionEnabled(Output.of(compressionEnabled));
        }

        /**
         * @param timeZone The timezone for the VM Workload Backup Policy. [The possible values are defined here](https://jackstromberg.com/2017/01/list-of-time-zones-consumed-by-azure/).
         * 
         * @return builder
         * 
         */
        public Builder timeZone(Output<String> timeZone) {
            $.timeZone = timeZone;
            return this;
        }

        /**
         * @param timeZone The timezone for the VM Workload Backup Policy. [The possible values are defined here](https://jackstromberg.com/2017/01/list-of-time-zones-consumed-by-azure/).
         * 
         * @return builder
         * 
         */
        public Builder timeZone(String timeZone) {
            return timeZone(Output.of(timeZone));
        }

        public PolicyVMWorkloadSettingsArgs build() {
            if ($.timeZone == null) {
                throw new MissingRequiredPropertyException("PolicyVMWorkloadSettingsArgs", "timeZone");
            }
            return $;
        }
    }

}
