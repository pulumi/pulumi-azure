// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.logicapps.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class InterationServiceEnvironmentState extends com.pulumi.resources.ResourceArgs {

    public static final InterationServiceEnvironmentState Empty = new InterationServiceEnvironmentState();

    /**
     * The type of access endpoint to use for the Integration Service Environment. Possible Values are `Internal` and `External`. Changing this forces a new Integration Service Environment to be created.
     * 
     */
    @Import(name="accessEndpointType")
    private @Nullable Output<String> accessEndpointType;

    /**
     * @return The type of access endpoint to use for the Integration Service Environment. Possible Values are `Internal` and `External`. Changing this forces a new Integration Service Environment to be created.
     * 
     */
    public Optional<Output<String>> accessEndpointType() {
        return Optional.ofNullable(this.accessEndpointType);
    }

    /**
     * The list of access endpoint IP addresses of connector.
     * 
     */
    @Import(name="connectorEndpointIpAddresses")
    private @Nullable Output<List<String>> connectorEndpointIpAddresses;

    /**
     * @return The list of access endpoint IP addresses of connector.
     * 
     */
    public Optional<Output<List<String>>> connectorEndpointIpAddresses() {
        return Optional.ofNullable(this.connectorEndpointIpAddresses);
    }

    /**
     * The list of outgoing IP addresses of connector.
     * 
     */
    @Import(name="connectorOutboundIpAddresses")
    private @Nullable Output<List<String>> connectorOutboundIpAddresses;

    /**
     * @return The list of outgoing IP addresses of connector.
     * 
     */
    public Optional<Output<List<String>>> connectorOutboundIpAddresses() {
        return Optional.ofNullable(this.connectorOutboundIpAddresses);
    }

    /**
     * The Azure Region where the Integration Service Environment should exist. Changing this forces a new Integration Service Environment to be created.
     * 
     */
    @Import(name="location")
    private @Nullable Output<String> location;

    /**
     * @return The Azure Region where the Integration Service Environment should exist. Changing this forces a new Integration Service Environment to be created.
     * 
     */
    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * The name of the Integration Service Environment. Changing this forces a new Integration Service Environment to be created.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the Integration Service Environment. Changing this forces a new Integration Service Environment to be created.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The name of the Resource Group where the Integration Service Environment should exist. Changing this forces a new Integration Service Environment to be created.
     * 
     */
    @Import(name="resourceGroupName")
    private @Nullable Output<String> resourceGroupName;

    /**
     * @return The name of the Resource Group where the Integration Service Environment should exist. Changing this forces a new Integration Service Environment to be created.
     * 
     */
    public Optional<Output<String>> resourceGroupName() {
        return Optional.ofNullable(this.resourceGroupName);
    }

    /**
     * The SKU name and capacity of the Integration Service Environment. Possible values are `Developer_0`, `Premium_0`, `Premium_1`, `Premium_2`, `Premium_3`, `Premium_4`, `Premium_5`, `Premium_6`, `Premium_7`, `Premium_8`, `Premium_9` and `Premium_10`. Defaults to `Developer_0`.
     * 
     * &gt; **NOTE** For a `sku_name` using the `Developer` `sku` the `capacity` element must be always `0`. For a `sku_name` using the `sku` of `Premium` the `capacity` element can be between `0` and `10`.
     * 
     */
    @Import(name="skuName")
    private @Nullable Output<String> skuName;

    /**
     * @return The SKU name and capacity of the Integration Service Environment. Possible values are `Developer_0`, `Premium_0`, `Premium_1`, `Premium_2`, `Premium_3`, `Premium_4`, `Premium_5`, `Premium_6`, `Premium_7`, `Premium_8`, `Premium_9` and `Premium_10`. Defaults to `Developer_0`.
     * 
     * &gt; **NOTE** For a `sku_name` using the `Developer` `sku` the `capacity` element must be always `0`. For a `sku_name` using the `sku` of `Premium` the `capacity` element can be between `0` and `10`.
     * 
     */
    public Optional<Output<String>> skuName() {
        return Optional.ofNullable(this.skuName);
    }

    /**
     * A mapping of tags which should be assigned to the Integration Service Environment.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return A mapping of tags which should be assigned to the Integration Service Environment.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * A list of virtual network subnet ids to be used by Integration Service Environment. Exactly four distinct ids to `/27` subnets must be provided. Changing this forces a new Integration Service Environment to be created.
     * 
     */
    @Import(name="virtualNetworkSubnetIds")
    private @Nullable Output<List<String>> virtualNetworkSubnetIds;

    /**
     * @return A list of virtual network subnet ids to be used by Integration Service Environment. Exactly four distinct ids to `/27` subnets must be provided. Changing this forces a new Integration Service Environment to be created.
     * 
     */
    public Optional<Output<List<String>>> virtualNetworkSubnetIds() {
        return Optional.ofNullable(this.virtualNetworkSubnetIds);
    }

    /**
     * The list of access endpoint IP addresses of workflow.
     * 
     */
    @Import(name="workflowEndpointIpAddresses")
    private @Nullable Output<List<String>> workflowEndpointIpAddresses;

    /**
     * @return The list of access endpoint IP addresses of workflow.
     * 
     */
    public Optional<Output<List<String>>> workflowEndpointIpAddresses() {
        return Optional.ofNullable(this.workflowEndpointIpAddresses);
    }

    /**
     * The list of outgoing IP addresses of workflow.
     * 
     */
    @Import(name="workflowOutboundIpAddresses")
    private @Nullable Output<List<String>> workflowOutboundIpAddresses;

    /**
     * @return The list of outgoing IP addresses of workflow.
     * 
     */
    public Optional<Output<List<String>>> workflowOutboundIpAddresses() {
        return Optional.ofNullable(this.workflowOutboundIpAddresses);
    }

    private InterationServiceEnvironmentState() {}

    private InterationServiceEnvironmentState(InterationServiceEnvironmentState $) {
        this.accessEndpointType = $.accessEndpointType;
        this.connectorEndpointIpAddresses = $.connectorEndpointIpAddresses;
        this.connectorOutboundIpAddresses = $.connectorOutboundIpAddresses;
        this.location = $.location;
        this.name = $.name;
        this.resourceGroupName = $.resourceGroupName;
        this.skuName = $.skuName;
        this.tags = $.tags;
        this.virtualNetworkSubnetIds = $.virtualNetworkSubnetIds;
        this.workflowEndpointIpAddresses = $.workflowEndpointIpAddresses;
        this.workflowOutboundIpAddresses = $.workflowOutboundIpAddresses;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(InterationServiceEnvironmentState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private InterationServiceEnvironmentState $;

        public Builder() {
            $ = new InterationServiceEnvironmentState();
        }

        public Builder(InterationServiceEnvironmentState defaults) {
            $ = new InterationServiceEnvironmentState(Objects.requireNonNull(defaults));
        }

        /**
         * @param accessEndpointType The type of access endpoint to use for the Integration Service Environment. Possible Values are `Internal` and `External`. Changing this forces a new Integration Service Environment to be created.
         * 
         * @return builder
         * 
         */
        public Builder accessEndpointType(@Nullable Output<String> accessEndpointType) {
            $.accessEndpointType = accessEndpointType;
            return this;
        }

        /**
         * @param accessEndpointType The type of access endpoint to use for the Integration Service Environment. Possible Values are `Internal` and `External`. Changing this forces a new Integration Service Environment to be created.
         * 
         * @return builder
         * 
         */
        public Builder accessEndpointType(String accessEndpointType) {
            return accessEndpointType(Output.of(accessEndpointType));
        }

        /**
         * @param connectorEndpointIpAddresses The list of access endpoint IP addresses of connector.
         * 
         * @return builder
         * 
         */
        public Builder connectorEndpointIpAddresses(@Nullable Output<List<String>> connectorEndpointIpAddresses) {
            $.connectorEndpointIpAddresses = connectorEndpointIpAddresses;
            return this;
        }

        /**
         * @param connectorEndpointIpAddresses The list of access endpoint IP addresses of connector.
         * 
         * @return builder
         * 
         */
        public Builder connectorEndpointIpAddresses(List<String> connectorEndpointIpAddresses) {
            return connectorEndpointIpAddresses(Output.of(connectorEndpointIpAddresses));
        }

        /**
         * @param connectorEndpointIpAddresses The list of access endpoint IP addresses of connector.
         * 
         * @return builder
         * 
         */
        public Builder connectorEndpointIpAddresses(String... connectorEndpointIpAddresses) {
            return connectorEndpointIpAddresses(List.of(connectorEndpointIpAddresses));
        }

        /**
         * @param connectorOutboundIpAddresses The list of outgoing IP addresses of connector.
         * 
         * @return builder
         * 
         */
        public Builder connectorOutboundIpAddresses(@Nullable Output<List<String>> connectorOutboundIpAddresses) {
            $.connectorOutboundIpAddresses = connectorOutboundIpAddresses;
            return this;
        }

        /**
         * @param connectorOutboundIpAddresses The list of outgoing IP addresses of connector.
         * 
         * @return builder
         * 
         */
        public Builder connectorOutboundIpAddresses(List<String> connectorOutboundIpAddresses) {
            return connectorOutboundIpAddresses(Output.of(connectorOutboundIpAddresses));
        }

        /**
         * @param connectorOutboundIpAddresses The list of outgoing IP addresses of connector.
         * 
         * @return builder
         * 
         */
        public Builder connectorOutboundIpAddresses(String... connectorOutboundIpAddresses) {
            return connectorOutboundIpAddresses(List.of(connectorOutboundIpAddresses));
        }

        /**
         * @param location The Azure Region where the Integration Service Environment should exist. Changing this forces a new Integration Service Environment to be created.
         * 
         * @return builder
         * 
         */
        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location The Azure Region where the Integration Service Environment should exist. Changing this forces a new Integration Service Environment to be created.
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param name The name of the Integration Service Environment. Changing this forces a new Integration Service Environment to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the Integration Service Environment. Changing this forces a new Integration Service Environment to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param resourceGroupName The name of the Resource Group where the Integration Service Environment should exist. Changing this forces a new Integration Service Environment to be created.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(@Nullable Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName The name of the Resource Group where the Integration Service Environment should exist. Changing this forces a new Integration Service Environment to be created.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        /**
         * @param skuName The SKU name and capacity of the Integration Service Environment. Possible values are `Developer_0`, `Premium_0`, `Premium_1`, `Premium_2`, `Premium_3`, `Premium_4`, `Premium_5`, `Premium_6`, `Premium_7`, `Premium_8`, `Premium_9` and `Premium_10`. Defaults to `Developer_0`.
         * 
         * &gt; **NOTE** For a `sku_name` using the `Developer` `sku` the `capacity` element must be always `0`. For a `sku_name` using the `sku` of `Premium` the `capacity` element can be between `0` and `10`.
         * 
         * @return builder
         * 
         */
        public Builder skuName(@Nullable Output<String> skuName) {
            $.skuName = skuName;
            return this;
        }

        /**
         * @param skuName The SKU name and capacity of the Integration Service Environment. Possible values are `Developer_0`, `Premium_0`, `Premium_1`, `Premium_2`, `Premium_3`, `Premium_4`, `Premium_5`, `Premium_6`, `Premium_7`, `Premium_8`, `Premium_9` and `Premium_10`. Defaults to `Developer_0`.
         * 
         * &gt; **NOTE** For a `sku_name` using the `Developer` `sku` the `capacity` element must be always `0`. For a `sku_name` using the `sku` of `Premium` the `capacity` element can be between `0` and `10`.
         * 
         * @return builder
         * 
         */
        public Builder skuName(String skuName) {
            return skuName(Output.of(skuName));
        }

        /**
         * @param tags A mapping of tags which should be assigned to the Integration Service Environment.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags A mapping of tags which should be assigned to the Integration Service Environment.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param virtualNetworkSubnetIds A list of virtual network subnet ids to be used by Integration Service Environment. Exactly four distinct ids to `/27` subnets must be provided. Changing this forces a new Integration Service Environment to be created.
         * 
         * @return builder
         * 
         */
        public Builder virtualNetworkSubnetIds(@Nullable Output<List<String>> virtualNetworkSubnetIds) {
            $.virtualNetworkSubnetIds = virtualNetworkSubnetIds;
            return this;
        }

        /**
         * @param virtualNetworkSubnetIds A list of virtual network subnet ids to be used by Integration Service Environment. Exactly four distinct ids to `/27` subnets must be provided. Changing this forces a new Integration Service Environment to be created.
         * 
         * @return builder
         * 
         */
        public Builder virtualNetworkSubnetIds(List<String> virtualNetworkSubnetIds) {
            return virtualNetworkSubnetIds(Output.of(virtualNetworkSubnetIds));
        }

        /**
         * @param virtualNetworkSubnetIds A list of virtual network subnet ids to be used by Integration Service Environment. Exactly four distinct ids to `/27` subnets must be provided. Changing this forces a new Integration Service Environment to be created.
         * 
         * @return builder
         * 
         */
        public Builder virtualNetworkSubnetIds(String... virtualNetworkSubnetIds) {
            return virtualNetworkSubnetIds(List.of(virtualNetworkSubnetIds));
        }

        /**
         * @param workflowEndpointIpAddresses The list of access endpoint IP addresses of workflow.
         * 
         * @return builder
         * 
         */
        public Builder workflowEndpointIpAddresses(@Nullable Output<List<String>> workflowEndpointIpAddresses) {
            $.workflowEndpointIpAddresses = workflowEndpointIpAddresses;
            return this;
        }

        /**
         * @param workflowEndpointIpAddresses The list of access endpoint IP addresses of workflow.
         * 
         * @return builder
         * 
         */
        public Builder workflowEndpointIpAddresses(List<String> workflowEndpointIpAddresses) {
            return workflowEndpointIpAddresses(Output.of(workflowEndpointIpAddresses));
        }

        /**
         * @param workflowEndpointIpAddresses The list of access endpoint IP addresses of workflow.
         * 
         * @return builder
         * 
         */
        public Builder workflowEndpointIpAddresses(String... workflowEndpointIpAddresses) {
            return workflowEndpointIpAddresses(List.of(workflowEndpointIpAddresses));
        }

        /**
         * @param workflowOutboundIpAddresses The list of outgoing IP addresses of workflow.
         * 
         * @return builder
         * 
         */
        public Builder workflowOutboundIpAddresses(@Nullable Output<List<String>> workflowOutboundIpAddresses) {
            $.workflowOutboundIpAddresses = workflowOutboundIpAddresses;
            return this;
        }

        /**
         * @param workflowOutboundIpAddresses The list of outgoing IP addresses of workflow.
         * 
         * @return builder
         * 
         */
        public Builder workflowOutboundIpAddresses(List<String> workflowOutboundIpAddresses) {
            return workflowOutboundIpAddresses(Output.of(workflowOutboundIpAddresses));
        }

        /**
         * @param workflowOutboundIpAddresses The list of outgoing IP addresses of workflow.
         * 
         * @return builder
         * 
         */
        public Builder workflowOutboundIpAddresses(String... workflowOutboundIpAddresses) {
            return workflowOutboundIpAddresses(List.of(workflowOutboundIpAddresses));
        }

        public InterationServiceEnvironmentState build() {
            return $;
        }
    }

}
