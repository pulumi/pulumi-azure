// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.eventhub;

import com.pulumi.azure.eventhub.inputs.EventHubNamespaceIdentityArgs;
import com.pulumi.azure.eventhub.inputs.EventHubNamespaceNetworkRulesetsArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class EventHubNamespaceArgs extends com.pulumi.resources.ResourceArgs {

    public static final EventHubNamespaceArgs Empty = new EventHubNamespaceArgs();

    /**
     * Is Auto Inflate enabled for the EventHub Namespace?
     * 
     */
    @Import(name="autoInflateEnabled")
    private @Nullable Output<Boolean> autoInflateEnabled;

    /**
     * @return Is Auto Inflate enabled for the EventHub Namespace?
     * 
     */
    public Optional<Output<Boolean>> autoInflateEnabled() {
        return Optional.ofNullable(this.autoInflateEnabled);
    }

    /**
     * Specifies the Capacity / Throughput Units for a `Standard` SKU namespace. Default capacity has a maximum of `2`, but can be increased in blocks of 2 on a committed purchase basis. Defaults to `1`.
     * 
     */
    @Import(name="capacity")
    private @Nullable Output<Integer> capacity;

    /**
     * @return Specifies the Capacity / Throughput Units for a `Standard` SKU namespace. Default capacity has a maximum of `2`, but can be increased in blocks of 2 on a committed purchase basis. Defaults to `1`.
     * 
     */
    public Optional<Output<Integer>> capacity() {
        return Optional.ofNullable(this.capacity);
    }

    /**
     * Specifies the ID of the EventHub Dedicated Cluster where this Namespace should created. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="dedicatedClusterId")
    private @Nullable Output<String> dedicatedClusterId;

    /**
     * @return Specifies the ID of the EventHub Dedicated Cluster where this Namespace should created. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> dedicatedClusterId() {
        return Optional.ofNullable(this.dedicatedClusterId);
    }

    /**
     * An `identity` block as defined below.
     * 
     */
    @Import(name="identity")
    private @Nullable Output<EventHubNamespaceIdentityArgs> identity;

    /**
     * @return An `identity` block as defined below.
     * 
     */
    public Optional<Output<EventHubNamespaceIdentityArgs>> identity() {
        return Optional.ofNullable(this.identity);
    }

    /**
     * Is SAS authentication enabled for the EventHub Namespace? Defaults to `true`.
     * 
     */
    @Import(name="localAuthenticationEnabled")
    private @Nullable Output<Boolean> localAuthenticationEnabled;

    /**
     * @return Is SAS authentication enabled for the EventHub Namespace? Defaults to `true`.
     * 
     */
    public Optional<Output<Boolean>> localAuthenticationEnabled() {
        return Optional.ofNullable(this.localAuthenticationEnabled);
    }

    /**
     * Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="location")
    private @Nullable Output<String> location;

    /**
     * @return Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * Specifies the maximum number of throughput units when Auto Inflate is Enabled. Valid values range from `1` - `20`.
     * 
     */
    @Import(name="maximumThroughputUnits")
    private @Nullable Output<Integer> maximumThroughputUnits;

    /**
     * @return Specifies the maximum number of throughput units when Auto Inflate is Enabled. Valid values range from `1` - `20`.
     * 
     */
    public Optional<Output<Integer>> maximumThroughputUnits() {
        return Optional.ofNullable(this.maximumThroughputUnits);
    }

    /**
     * The minimum supported TLS version for this EventHub Namespace. Valid values are: `1.0`, `1.1` and `1.2`. The current default minimum TLS version is `1.2`.
     * 
     */
    @Import(name="minimumTlsVersion")
    private @Nullable Output<String> minimumTlsVersion;

    /**
     * @return The minimum supported TLS version for this EventHub Namespace. Valid values are: `1.0`, `1.1` and `1.2`. The current default minimum TLS version is `1.2`.
     * 
     */
    public Optional<Output<String>> minimumTlsVersion() {
        return Optional.ofNullable(this.minimumTlsVersion);
    }

    /**
     * Specifies the name of the EventHub Namespace resource. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Specifies the name of the EventHub Namespace resource. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * A `network_rulesets` block as defined below.
     * 
     */
    @Import(name="networkRulesets")
    private @Nullable Output<EventHubNamespaceNetworkRulesetsArgs> networkRulesets;

    /**
     * @return A `network_rulesets` block as defined below.
     * 
     */
    public Optional<Output<EventHubNamespaceNetworkRulesetsArgs>> networkRulesets() {
        return Optional.ofNullable(this.networkRulesets);
    }

    /**
     * Is public network access enabled for the EventHub Namespace? Defaults to `true`.
     * 
     */
    @Import(name="publicNetworkAccessEnabled")
    private @Nullable Output<Boolean> publicNetworkAccessEnabled;

    /**
     * @return Is public network access enabled for the EventHub Namespace? Defaults to `true`.
     * 
     */
    public Optional<Output<Boolean>> publicNetworkAccessEnabled() {
        return Optional.ofNullable(this.publicNetworkAccessEnabled);
    }

    /**
     * The name of the resource group in which to create the namespace. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    /**
     * @return The name of the resource group in which to create the namespace. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * Defines which tier to use. Valid options are `Basic`, `Standard`, and `Premium`. Please note that setting this field to `Premium` will force the creation of a new resource.
     * 
     */
    @Import(name="sku", required=true)
    private Output<String> sku;

    /**
     * @return Defines which tier to use. Valid options are `Basic`, `Standard`, and `Premium`. Please note that setting this field to `Premium` will force the creation of a new resource.
     * 
     */
    public Output<String> sku() {
        return this.sku;
    }

    /**
     * A mapping of tags to assign to the resource.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return A mapping of tags to assign to the resource.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * Specifies if the EventHub Namespace should be Zone Redundant (created across Availability Zones). Changing this forces a new resource to be created. Defaults to `false`.
     * 
     * &gt; **Note:** For eventhub premium namespace, `zone_redundant` is computed by api based on the availability zone feature in each region. User&#39;s input will be overridden. Please explicitly sets the property to `true` when creating the premium namespace in a region that supports availability zone since the default value is `false` in 3.0 provider.
     * 
     */
    @Import(name="zoneRedundant")
    private @Nullable Output<Boolean> zoneRedundant;

    /**
     * @return Specifies if the EventHub Namespace should be Zone Redundant (created across Availability Zones). Changing this forces a new resource to be created. Defaults to `false`.
     * 
     * &gt; **Note:** For eventhub premium namespace, `zone_redundant` is computed by api based on the availability zone feature in each region. User&#39;s input will be overridden. Please explicitly sets the property to `true` when creating the premium namespace in a region that supports availability zone since the default value is `false` in 3.0 provider.
     * 
     */
    public Optional<Output<Boolean>> zoneRedundant() {
        return Optional.ofNullable(this.zoneRedundant);
    }

    private EventHubNamespaceArgs() {}

    private EventHubNamespaceArgs(EventHubNamespaceArgs $) {
        this.autoInflateEnabled = $.autoInflateEnabled;
        this.capacity = $.capacity;
        this.dedicatedClusterId = $.dedicatedClusterId;
        this.identity = $.identity;
        this.localAuthenticationEnabled = $.localAuthenticationEnabled;
        this.location = $.location;
        this.maximumThroughputUnits = $.maximumThroughputUnits;
        this.minimumTlsVersion = $.minimumTlsVersion;
        this.name = $.name;
        this.networkRulesets = $.networkRulesets;
        this.publicNetworkAccessEnabled = $.publicNetworkAccessEnabled;
        this.resourceGroupName = $.resourceGroupName;
        this.sku = $.sku;
        this.tags = $.tags;
        this.zoneRedundant = $.zoneRedundant;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(EventHubNamespaceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private EventHubNamespaceArgs $;

        public Builder() {
            $ = new EventHubNamespaceArgs();
        }

        public Builder(EventHubNamespaceArgs defaults) {
            $ = new EventHubNamespaceArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param autoInflateEnabled Is Auto Inflate enabled for the EventHub Namespace?
         * 
         * @return builder
         * 
         */
        public Builder autoInflateEnabled(@Nullable Output<Boolean> autoInflateEnabled) {
            $.autoInflateEnabled = autoInflateEnabled;
            return this;
        }

        /**
         * @param autoInflateEnabled Is Auto Inflate enabled for the EventHub Namespace?
         * 
         * @return builder
         * 
         */
        public Builder autoInflateEnabled(Boolean autoInflateEnabled) {
            return autoInflateEnabled(Output.of(autoInflateEnabled));
        }

        /**
         * @param capacity Specifies the Capacity / Throughput Units for a `Standard` SKU namespace. Default capacity has a maximum of `2`, but can be increased in blocks of 2 on a committed purchase basis. Defaults to `1`.
         * 
         * @return builder
         * 
         */
        public Builder capacity(@Nullable Output<Integer> capacity) {
            $.capacity = capacity;
            return this;
        }

        /**
         * @param capacity Specifies the Capacity / Throughput Units for a `Standard` SKU namespace. Default capacity has a maximum of `2`, but can be increased in blocks of 2 on a committed purchase basis. Defaults to `1`.
         * 
         * @return builder
         * 
         */
        public Builder capacity(Integer capacity) {
            return capacity(Output.of(capacity));
        }

        /**
         * @param dedicatedClusterId Specifies the ID of the EventHub Dedicated Cluster where this Namespace should created. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder dedicatedClusterId(@Nullable Output<String> dedicatedClusterId) {
            $.dedicatedClusterId = dedicatedClusterId;
            return this;
        }

        /**
         * @param dedicatedClusterId Specifies the ID of the EventHub Dedicated Cluster where this Namespace should created. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder dedicatedClusterId(String dedicatedClusterId) {
            return dedicatedClusterId(Output.of(dedicatedClusterId));
        }

        /**
         * @param identity An `identity` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder identity(@Nullable Output<EventHubNamespaceIdentityArgs> identity) {
            $.identity = identity;
            return this;
        }

        /**
         * @param identity An `identity` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder identity(EventHubNamespaceIdentityArgs identity) {
            return identity(Output.of(identity));
        }

        /**
         * @param localAuthenticationEnabled Is SAS authentication enabled for the EventHub Namespace? Defaults to `true`.
         * 
         * @return builder
         * 
         */
        public Builder localAuthenticationEnabled(@Nullable Output<Boolean> localAuthenticationEnabled) {
            $.localAuthenticationEnabled = localAuthenticationEnabled;
            return this;
        }

        /**
         * @param localAuthenticationEnabled Is SAS authentication enabled for the EventHub Namespace? Defaults to `true`.
         * 
         * @return builder
         * 
         */
        public Builder localAuthenticationEnabled(Boolean localAuthenticationEnabled) {
            return localAuthenticationEnabled(Output.of(localAuthenticationEnabled));
        }

        /**
         * @param location Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param maximumThroughputUnits Specifies the maximum number of throughput units when Auto Inflate is Enabled. Valid values range from `1` - `20`.
         * 
         * @return builder
         * 
         */
        public Builder maximumThroughputUnits(@Nullable Output<Integer> maximumThroughputUnits) {
            $.maximumThroughputUnits = maximumThroughputUnits;
            return this;
        }

        /**
         * @param maximumThroughputUnits Specifies the maximum number of throughput units when Auto Inflate is Enabled. Valid values range from `1` - `20`.
         * 
         * @return builder
         * 
         */
        public Builder maximumThroughputUnits(Integer maximumThroughputUnits) {
            return maximumThroughputUnits(Output.of(maximumThroughputUnits));
        }

        /**
         * @param minimumTlsVersion The minimum supported TLS version for this EventHub Namespace. Valid values are: `1.0`, `1.1` and `1.2`. The current default minimum TLS version is `1.2`.
         * 
         * @return builder
         * 
         */
        public Builder minimumTlsVersion(@Nullable Output<String> minimumTlsVersion) {
            $.minimumTlsVersion = minimumTlsVersion;
            return this;
        }

        /**
         * @param minimumTlsVersion The minimum supported TLS version for this EventHub Namespace. Valid values are: `1.0`, `1.1` and `1.2`. The current default minimum TLS version is `1.2`.
         * 
         * @return builder
         * 
         */
        public Builder minimumTlsVersion(String minimumTlsVersion) {
            return minimumTlsVersion(Output.of(minimumTlsVersion));
        }

        /**
         * @param name Specifies the name of the EventHub Namespace resource. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Specifies the name of the EventHub Namespace resource. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param networkRulesets A `network_rulesets` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder networkRulesets(@Nullable Output<EventHubNamespaceNetworkRulesetsArgs> networkRulesets) {
            $.networkRulesets = networkRulesets;
            return this;
        }

        /**
         * @param networkRulesets A `network_rulesets` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder networkRulesets(EventHubNamespaceNetworkRulesetsArgs networkRulesets) {
            return networkRulesets(Output.of(networkRulesets));
        }

        /**
         * @param publicNetworkAccessEnabled Is public network access enabled for the EventHub Namespace? Defaults to `true`.
         * 
         * @return builder
         * 
         */
        public Builder publicNetworkAccessEnabled(@Nullable Output<Boolean> publicNetworkAccessEnabled) {
            $.publicNetworkAccessEnabled = publicNetworkAccessEnabled;
            return this;
        }

        /**
         * @param publicNetworkAccessEnabled Is public network access enabled for the EventHub Namespace? Defaults to `true`.
         * 
         * @return builder
         * 
         */
        public Builder publicNetworkAccessEnabled(Boolean publicNetworkAccessEnabled) {
            return publicNetworkAccessEnabled(Output.of(publicNetworkAccessEnabled));
        }

        /**
         * @param resourceGroupName The name of the resource group in which to create the namespace. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName The name of the resource group in which to create the namespace. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        /**
         * @param sku Defines which tier to use. Valid options are `Basic`, `Standard`, and `Premium`. Please note that setting this field to `Premium` will force the creation of a new resource.
         * 
         * @return builder
         * 
         */
        public Builder sku(Output<String> sku) {
            $.sku = sku;
            return this;
        }

        /**
         * @param sku Defines which tier to use. Valid options are `Basic`, `Standard`, and `Premium`. Please note that setting this field to `Premium` will force the creation of a new resource.
         * 
         * @return builder
         * 
         */
        public Builder sku(String sku) {
            return sku(Output.of(sku));
        }

        /**
         * @param tags A mapping of tags to assign to the resource.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags A mapping of tags to assign to the resource.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param zoneRedundant Specifies if the EventHub Namespace should be Zone Redundant (created across Availability Zones). Changing this forces a new resource to be created. Defaults to `false`.
         * 
         * &gt; **Note:** For eventhub premium namespace, `zone_redundant` is computed by api based on the availability zone feature in each region. User&#39;s input will be overridden. Please explicitly sets the property to `true` when creating the premium namespace in a region that supports availability zone since the default value is `false` in 3.0 provider.
         * 
         * @return builder
         * 
         */
        public Builder zoneRedundant(@Nullable Output<Boolean> zoneRedundant) {
            $.zoneRedundant = zoneRedundant;
            return this;
        }

        /**
         * @param zoneRedundant Specifies if the EventHub Namespace should be Zone Redundant (created across Availability Zones). Changing this forces a new resource to be created. Defaults to `false`.
         * 
         * &gt; **Note:** For eventhub premium namespace, `zone_redundant` is computed by api based on the availability zone feature in each region. User&#39;s input will be overridden. Please explicitly sets the property to `true` when creating the premium namespace in a region that supports availability zone since the default value is `false` in 3.0 provider.
         * 
         * @return builder
         * 
         */
        public Builder zoneRedundant(Boolean zoneRedundant) {
            return zoneRedundant(Output.of(zoneRedundant));
        }

        public EventHubNamespaceArgs build() {
            if ($.resourceGroupName == null) {
                throw new MissingRequiredPropertyException("EventHubNamespaceArgs", "resourceGroupName");
            }
            if ($.sku == null) {
                throw new MissingRequiredPropertyException("EventHubNamespaceArgs", "sku");
            }
            return $;
        }
    }

}
