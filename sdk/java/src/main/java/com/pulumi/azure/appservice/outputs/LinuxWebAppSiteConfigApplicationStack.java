// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.appservice.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class LinuxWebAppSiteConfigApplicationStack {
    /**
     * @return The Docker image reference, including repository host as needed.
     * 
     */
    private final @Nullable String dockerImage;
    /**
     * @return The image Tag to use. e.g. `latest`.
     * 
     */
    private final @Nullable String dockerImageTag;
    /**
     * @return The version of .NET to use. Possible values include `3.1`, `5.0`, and `6.0`.
     * 
     */
    private final @Nullable String dotnetVersion;
    /**
     * @return The Java server type. Possible values include `JAVA`, `TOMCAT`, and `JBOSSEAP`.
     * 
     */
    private final @Nullable String javaServer;
    /**
     * @return The Version of the `java_server` to use.
     * 
     */
    private final @Nullable String javaServerVersion;
    /**
     * @return The Version of Java to use. Supported versions of Java vary depending on the `java_server` and `java_server_version`, as well as security and fixes to major versions. Please see Azure documentation for the latest information.
     * 
     */
    private final @Nullable String javaVersion;
    /**
     * @return The version of Node to run. Possible values include `12-lts`, `14-lts`, and `16-lts`. This property conflicts with `java_version`.
     * 
     */
    private final @Nullable String nodeVersion;
    /**
     * @return The version of PHP to run. Possible values include `7.4`, and `8.0`.
     * 
     */
    private final @Nullable String phpVersion;
    /**
     * @return The version of Python to run. Possible values include `3.7`, `3.8`, and `3.9`.
     * 
     */
    private final @Nullable String pythonVersion;
    /**
     * @return Te version of Ruby to run. Possible values include `2.6` and `2.7`.
     * 
     */
    private final @Nullable String rubyVersion;

    @CustomType.Constructor
    private LinuxWebAppSiteConfigApplicationStack(
        @CustomType.Parameter("dockerImage") @Nullable String dockerImage,
        @CustomType.Parameter("dockerImageTag") @Nullable String dockerImageTag,
        @CustomType.Parameter("dotnetVersion") @Nullable String dotnetVersion,
        @CustomType.Parameter("javaServer") @Nullable String javaServer,
        @CustomType.Parameter("javaServerVersion") @Nullable String javaServerVersion,
        @CustomType.Parameter("javaVersion") @Nullable String javaVersion,
        @CustomType.Parameter("nodeVersion") @Nullable String nodeVersion,
        @CustomType.Parameter("phpVersion") @Nullable String phpVersion,
        @CustomType.Parameter("pythonVersion") @Nullable String pythonVersion,
        @CustomType.Parameter("rubyVersion") @Nullable String rubyVersion) {
        this.dockerImage = dockerImage;
        this.dockerImageTag = dockerImageTag;
        this.dotnetVersion = dotnetVersion;
        this.javaServer = javaServer;
        this.javaServerVersion = javaServerVersion;
        this.javaVersion = javaVersion;
        this.nodeVersion = nodeVersion;
        this.phpVersion = phpVersion;
        this.pythonVersion = pythonVersion;
        this.rubyVersion = rubyVersion;
    }

    /**
     * @return The Docker image reference, including repository host as needed.
     * 
     */
    public Optional<String> dockerImage() {
        return Optional.ofNullable(this.dockerImage);
    }
    /**
     * @return The image Tag to use. e.g. `latest`.
     * 
     */
    public Optional<String> dockerImageTag() {
        return Optional.ofNullable(this.dockerImageTag);
    }
    /**
     * @return The version of .NET to use. Possible values include `3.1`, `5.0`, and `6.0`.
     * 
     */
    public Optional<String> dotnetVersion() {
        return Optional.ofNullable(this.dotnetVersion);
    }
    /**
     * @return The Java server type. Possible values include `JAVA`, `TOMCAT`, and `JBOSSEAP`.
     * 
     */
    public Optional<String> javaServer() {
        return Optional.ofNullable(this.javaServer);
    }
    /**
     * @return The Version of the `java_server` to use.
     * 
     */
    public Optional<String> javaServerVersion() {
        return Optional.ofNullable(this.javaServerVersion);
    }
    /**
     * @return The Version of Java to use. Supported versions of Java vary depending on the `java_server` and `java_server_version`, as well as security and fixes to major versions. Please see Azure documentation for the latest information.
     * 
     */
    public Optional<String> javaVersion() {
        return Optional.ofNullable(this.javaVersion);
    }
    /**
     * @return The version of Node to run. Possible values include `12-lts`, `14-lts`, and `16-lts`. This property conflicts with `java_version`.
     * 
     */
    public Optional<String> nodeVersion() {
        return Optional.ofNullable(this.nodeVersion);
    }
    /**
     * @return The version of PHP to run. Possible values include `7.4`, and `8.0`.
     * 
     */
    public Optional<String> phpVersion() {
        return Optional.ofNullable(this.phpVersion);
    }
    /**
     * @return The version of Python to run. Possible values include `3.7`, `3.8`, and `3.9`.
     * 
     */
    public Optional<String> pythonVersion() {
        return Optional.ofNullable(this.pythonVersion);
    }
    /**
     * @return Te version of Ruby to run. Possible values include `2.6` and `2.7`.
     * 
     */
    public Optional<String> rubyVersion() {
        return Optional.ofNullable(this.rubyVersion);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(LinuxWebAppSiteConfigApplicationStack defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String dockerImage;
        private @Nullable String dockerImageTag;
        private @Nullable String dotnetVersion;
        private @Nullable String javaServer;
        private @Nullable String javaServerVersion;
        private @Nullable String javaVersion;
        private @Nullable String nodeVersion;
        private @Nullable String phpVersion;
        private @Nullable String pythonVersion;
        private @Nullable String rubyVersion;

        public Builder() {
    	      // Empty
        }

        public Builder(LinuxWebAppSiteConfigApplicationStack defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.dockerImage = defaults.dockerImage;
    	      this.dockerImageTag = defaults.dockerImageTag;
    	      this.dotnetVersion = defaults.dotnetVersion;
    	      this.javaServer = defaults.javaServer;
    	      this.javaServerVersion = defaults.javaServerVersion;
    	      this.javaVersion = defaults.javaVersion;
    	      this.nodeVersion = defaults.nodeVersion;
    	      this.phpVersion = defaults.phpVersion;
    	      this.pythonVersion = defaults.pythonVersion;
    	      this.rubyVersion = defaults.rubyVersion;
        }

        public Builder dockerImage(@Nullable String dockerImage) {
            this.dockerImage = dockerImage;
            return this;
        }
        public Builder dockerImageTag(@Nullable String dockerImageTag) {
            this.dockerImageTag = dockerImageTag;
            return this;
        }
        public Builder dotnetVersion(@Nullable String dotnetVersion) {
            this.dotnetVersion = dotnetVersion;
            return this;
        }
        public Builder javaServer(@Nullable String javaServer) {
            this.javaServer = javaServer;
            return this;
        }
        public Builder javaServerVersion(@Nullable String javaServerVersion) {
            this.javaServerVersion = javaServerVersion;
            return this;
        }
        public Builder javaVersion(@Nullable String javaVersion) {
            this.javaVersion = javaVersion;
            return this;
        }
        public Builder nodeVersion(@Nullable String nodeVersion) {
            this.nodeVersion = nodeVersion;
            return this;
        }
        public Builder phpVersion(@Nullable String phpVersion) {
            this.phpVersion = phpVersion;
            return this;
        }
        public Builder pythonVersion(@Nullable String pythonVersion) {
            this.pythonVersion = pythonVersion;
            return this;
        }
        public Builder rubyVersion(@Nullable String rubyVersion) {
            this.rubyVersion = rubyVersion;
            return this;
        }        public LinuxWebAppSiteConfigApplicationStack build() {
            return new LinuxWebAppSiteConfigApplicationStack(dockerImage, dockerImageTag, dotnetVersion, javaServer, javaServerVersion, javaVersion, nodeVersion, phpVersion, pythonVersion, rubyVersion);
        }
    }
}
