// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.compute.outputs;

import com.pulumi.azure.compute.outputs.OrchestratedVirtualMachineScaleSetExtensionProtectedSettingsFromKeyVault;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class OrchestratedVirtualMachineScaleSetExtension {
    /**
     * @return Should the latest version of the Extension be used at Deployment Time, if one is available? This won&#39;t auto-update the extension on existing installation. Defaults to `true`.
     * 
     */
    private @Nullable Boolean autoUpgradeMinorVersionEnabled;
    /**
     * @return An ordered list of Extension names which Orchestrated Virtual Machine Scale Set should provision after VM creation.
     * 
     */
    private @Nullable List<String> extensionsToProvisionAfterVmCreations;
    /**
     * @return Should failures from the extension be suppressed? Possible values are `true` or `false`.
     * 
     * &gt; **NOTE:** Operational failures such as not connecting to the VM will not be suppressed regardless of the `failure_suppression_enabled` value.
     * 
     */
    private @Nullable Boolean failureSuppressionEnabled;
    /**
     * @return A value which, when different to the previous value can be used to force-run the Extension even if the Extension Configuration hasn&#39;t changed.
     * 
     */
    private @Nullable String forceExtensionExecutionOnChange;
    /**
     * @return The name for the Virtual Machine Scale Set Extension.
     * 
     */
    private String name;
    /**
     * @return A JSON String which specifies Sensitive Settings (such as Passwords) for the Extension.
     * 
     * &gt; **NOTE:** Keys within the `protected_settings` block are notoriously case-sensitive, where the casing required (e.g. `TitleCase` vs `snakeCase`) depends on the Extension being used. Please refer to the documentation for the specific Orchestrated Virtual Machine Extension you&#39;re looking to use for more information.
     * 
     */
    private @Nullable String protectedSettings;
    /**
     * @return A `protected_settings_from_key_vault` block as defined below.
     * 
     * &gt; **Note:** `protected_settings_from_key_vault` cannot be used with `protected_settings`
     * 
     */
    private @Nullable OrchestratedVirtualMachineScaleSetExtensionProtectedSettingsFromKeyVault protectedSettingsFromKeyVault;
    /**
     * @return Specifies the Publisher of the Extension.
     * 
     */
    private String publisher;
    /**
     * @return A JSON String which specifies Settings for the Extension.
     * 
     */
    private @Nullable String settings;
    /**
     * @return Specifies the Type of the Extension.
     * 
     */
    private String type;
    /**
     * @return Specifies the version of the extension to use, available versions can be found using the Azure CLI.
     * 
     */
    private String typeHandlerVersion;

    private OrchestratedVirtualMachineScaleSetExtension() {}
    /**
     * @return Should the latest version of the Extension be used at Deployment Time, if one is available? This won&#39;t auto-update the extension on existing installation. Defaults to `true`.
     * 
     */
    public Optional<Boolean> autoUpgradeMinorVersionEnabled() {
        return Optional.ofNullable(this.autoUpgradeMinorVersionEnabled);
    }
    /**
     * @return An ordered list of Extension names which Orchestrated Virtual Machine Scale Set should provision after VM creation.
     * 
     */
    public List<String> extensionsToProvisionAfterVmCreations() {
        return this.extensionsToProvisionAfterVmCreations == null ? List.of() : this.extensionsToProvisionAfterVmCreations;
    }
    /**
     * @return Should failures from the extension be suppressed? Possible values are `true` or `false`.
     * 
     * &gt; **NOTE:** Operational failures such as not connecting to the VM will not be suppressed regardless of the `failure_suppression_enabled` value.
     * 
     */
    public Optional<Boolean> failureSuppressionEnabled() {
        return Optional.ofNullable(this.failureSuppressionEnabled);
    }
    /**
     * @return A value which, when different to the previous value can be used to force-run the Extension even if the Extension Configuration hasn&#39;t changed.
     * 
     */
    public Optional<String> forceExtensionExecutionOnChange() {
        return Optional.ofNullable(this.forceExtensionExecutionOnChange);
    }
    /**
     * @return The name for the Virtual Machine Scale Set Extension.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return A JSON String which specifies Sensitive Settings (such as Passwords) for the Extension.
     * 
     * &gt; **NOTE:** Keys within the `protected_settings` block are notoriously case-sensitive, where the casing required (e.g. `TitleCase` vs `snakeCase`) depends on the Extension being used. Please refer to the documentation for the specific Orchestrated Virtual Machine Extension you&#39;re looking to use for more information.
     * 
     */
    public Optional<String> protectedSettings() {
        return Optional.ofNullable(this.protectedSettings);
    }
    /**
     * @return A `protected_settings_from_key_vault` block as defined below.
     * 
     * &gt; **Note:** `protected_settings_from_key_vault` cannot be used with `protected_settings`
     * 
     */
    public Optional<OrchestratedVirtualMachineScaleSetExtensionProtectedSettingsFromKeyVault> protectedSettingsFromKeyVault() {
        return Optional.ofNullable(this.protectedSettingsFromKeyVault);
    }
    /**
     * @return Specifies the Publisher of the Extension.
     * 
     */
    public String publisher() {
        return this.publisher;
    }
    /**
     * @return A JSON String which specifies Settings for the Extension.
     * 
     */
    public Optional<String> settings() {
        return Optional.ofNullable(this.settings);
    }
    /**
     * @return Specifies the Type of the Extension.
     * 
     */
    public String type() {
        return this.type;
    }
    /**
     * @return Specifies the version of the extension to use, available versions can be found using the Azure CLI.
     * 
     */
    public String typeHandlerVersion() {
        return this.typeHandlerVersion;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(OrchestratedVirtualMachineScaleSetExtension defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Boolean autoUpgradeMinorVersionEnabled;
        private @Nullable List<String> extensionsToProvisionAfterVmCreations;
        private @Nullable Boolean failureSuppressionEnabled;
        private @Nullable String forceExtensionExecutionOnChange;
        private String name;
        private @Nullable String protectedSettings;
        private @Nullable OrchestratedVirtualMachineScaleSetExtensionProtectedSettingsFromKeyVault protectedSettingsFromKeyVault;
        private String publisher;
        private @Nullable String settings;
        private String type;
        private String typeHandlerVersion;
        public Builder() {}
        public Builder(OrchestratedVirtualMachineScaleSetExtension defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.autoUpgradeMinorVersionEnabled = defaults.autoUpgradeMinorVersionEnabled;
    	      this.extensionsToProvisionAfterVmCreations = defaults.extensionsToProvisionAfterVmCreations;
    	      this.failureSuppressionEnabled = defaults.failureSuppressionEnabled;
    	      this.forceExtensionExecutionOnChange = defaults.forceExtensionExecutionOnChange;
    	      this.name = defaults.name;
    	      this.protectedSettings = defaults.protectedSettings;
    	      this.protectedSettingsFromKeyVault = defaults.protectedSettingsFromKeyVault;
    	      this.publisher = defaults.publisher;
    	      this.settings = defaults.settings;
    	      this.type = defaults.type;
    	      this.typeHandlerVersion = defaults.typeHandlerVersion;
        }

        @CustomType.Setter
        public Builder autoUpgradeMinorVersionEnabled(@Nullable Boolean autoUpgradeMinorVersionEnabled) {

            this.autoUpgradeMinorVersionEnabled = autoUpgradeMinorVersionEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder extensionsToProvisionAfterVmCreations(@Nullable List<String> extensionsToProvisionAfterVmCreations) {

            this.extensionsToProvisionAfterVmCreations = extensionsToProvisionAfterVmCreations;
            return this;
        }
        public Builder extensionsToProvisionAfterVmCreations(String... extensionsToProvisionAfterVmCreations) {
            return extensionsToProvisionAfterVmCreations(List.of(extensionsToProvisionAfterVmCreations));
        }
        @CustomType.Setter
        public Builder failureSuppressionEnabled(@Nullable Boolean failureSuppressionEnabled) {

            this.failureSuppressionEnabled = failureSuppressionEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder forceExtensionExecutionOnChange(@Nullable String forceExtensionExecutionOnChange) {

            this.forceExtensionExecutionOnChange = forceExtensionExecutionOnChange;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("OrchestratedVirtualMachineScaleSetExtension", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder protectedSettings(@Nullable String protectedSettings) {

            this.protectedSettings = protectedSettings;
            return this;
        }
        @CustomType.Setter
        public Builder protectedSettingsFromKeyVault(@Nullable OrchestratedVirtualMachineScaleSetExtensionProtectedSettingsFromKeyVault protectedSettingsFromKeyVault) {

            this.protectedSettingsFromKeyVault = protectedSettingsFromKeyVault;
            return this;
        }
        @CustomType.Setter
        public Builder publisher(String publisher) {
            if (publisher == null) {
              throw new MissingRequiredPropertyException("OrchestratedVirtualMachineScaleSetExtension", "publisher");
            }
            this.publisher = publisher;
            return this;
        }
        @CustomType.Setter
        public Builder settings(@Nullable String settings) {

            this.settings = settings;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            if (type == null) {
              throw new MissingRequiredPropertyException("OrchestratedVirtualMachineScaleSetExtension", "type");
            }
            this.type = type;
            return this;
        }
        @CustomType.Setter
        public Builder typeHandlerVersion(String typeHandlerVersion) {
            if (typeHandlerVersion == null) {
              throw new MissingRequiredPropertyException("OrchestratedVirtualMachineScaleSetExtension", "typeHandlerVersion");
            }
            this.typeHandlerVersion = typeHandlerVersion;
            return this;
        }
        public OrchestratedVirtualMachineScaleSetExtension build() {
            final var _resultValue = new OrchestratedVirtualMachineScaleSetExtension();
            _resultValue.autoUpgradeMinorVersionEnabled = autoUpgradeMinorVersionEnabled;
            _resultValue.extensionsToProvisionAfterVmCreations = extensionsToProvisionAfterVmCreations;
            _resultValue.failureSuppressionEnabled = failureSuppressionEnabled;
            _resultValue.forceExtensionExecutionOnChange = forceExtensionExecutionOnChange;
            _resultValue.name = name;
            _resultValue.protectedSettings = protectedSettings;
            _resultValue.protectedSettingsFromKeyVault = protectedSettingsFromKeyVault;
            _resultValue.publisher = publisher;
            _resultValue.settings = settings;
            _resultValue.type = type;
            _resultValue.typeHandlerVersion = typeHandlerVersion;
            return _resultValue;
        }
    }
}
