// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.backup.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class PolicyVMWorkloadProtectionPolicyRetentionYearly {
    /**
     * @return The number of yearly backups to keep. Possible values are between `1` and `99`
     * 
     */
    private Integer count;
    /**
     * @return The retention schedule format type for yearly retention policy. Possible values are `Daily` and `Weekly`.
     * 
     */
    private String formatType;
    /**
     * @return The monthday backups to retain. Possible values are between `0` and `28`.
     * 
     */
    private @Nullable List<Integer> monthdays;
    /**
     * @return The months of the year to retain backups of. Possible values are `January`, `February`, `March`, `April`, `May`, `June`, `July`, `August`, `September`, `October`, `November` and `December`.
     * 
     */
    private List<String> months;
    /**
     * @return The weekday backups to retain. Possible values are `Sunday`, `Monday`, `Tuesday`, `Wednesday`, `Thursday`, `Friday` or `Saturday`.
     * 
     */
    private @Nullable List<String> weekdays;
    /**
     * @return The weeks of the month to retain backups of. Possible values are `First`, `Second`, `Third`, `Fourth`, `Last`.
     * 
     */
    private @Nullable List<String> weeks;

    private PolicyVMWorkloadProtectionPolicyRetentionYearly() {}
    /**
     * @return The number of yearly backups to keep. Possible values are between `1` and `99`
     * 
     */
    public Integer count() {
        return this.count;
    }
    /**
     * @return The retention schedule format type for yearly retention policy. Possible values are `Daily` and `Weekly`.
     * 
     */
    public String formatType() {
        return this.formatType;
    }
    /**
     * @return The monthday backups to retain. Possible values are between `0` and `28`.
     * 
     */
    public List<Integer> monthdays() {
        return this.monthdays == null ? List.of() : this.monthdays;
    }
    /**
     * @return The months of the year to retain backups of. Possible values are `January`, `February`, `March`, `April`, `May`, `June`, `July`, `August`, `September`, `October`, `November` and `December`.
     * 
     */
    public List<String> months() {
        return this.months;
    }
    /**
     * @return The weekday backups to retain. Possible values are `Sunday`, `Monday`, `Tuesday`, `Wednesday`, `Thursday`, `Friday` or `Saturday`.
     * 
     */
    public List<String> weekdays() {
        return this.weekdays == null ? List.of() : this.weekdays;
    }
    /**
     * @return The weeks of the month to retain backups of. Possible values are `First`, `Second`, `Third`, `Fourth`, `Last`.
     * 
     */
    public List<String> weeks() {
        return this.weeks == null ? List.of() : this.weeks;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(PolicyVMWorkloadProtectionPolicyRetentionYearly defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer count;
        private String formatType;
        private @Nullable List<Integer> monthdays;
        private List<String> months;
        private @Nullable List<String> weekdays;
        private @Nullable List<String> weeks;
        public Builder() {}
        public Builder(PolicyVMWorkloadProtectionPolicyRetentionYearly defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.count = defaults.count;
    	      this.formatType = defaults.formatType;
    	      this.monthdays = defaults.monthdays;
    	      this.months = defaults.months;
    	      this.weekdays = defaults.weekdays;
    	      this.weeks = defaults.weeks;
        }

        @CustomType.Setter
        public Builder count(Integer count) {
            this.count = Objects.requireNonNull(count);
            return this;
        }
        @CustomType.Setter
        public Builder formatType(String formatType) {
            this.formatType = Objects.requireNonNull(formatType);
            return this;
        }
        @CustomType.Setter
        public Builder monthdays(@Nullable List<Integer> monthdays) {
            this.monthdays = monthdays;
            return this;
        }
        public Builder monthdays(Integer... monthdays) {
            return monthdays(List.of(monthdays));
        }
        @CustomType.Setter
        public Builder months(List<String> months) {
            this.months = Objects.requireNonNull(months);
            return this;
        }
        public Builder months(String... months) {
            return months(List.of(months));
        }
        @CustomType.Setter
        public Builder weekdays(@Nullable List<String> weekdays) {
            this.weekdays = weekdays;
            return this;
        }
        public Builder weekdays(String... weekdays) {
            return weekdays(List.of(weekdays));
        }
        @CustomType.Setter
        public Builder weeks(@Nullable List<String> weeks) {
            this.weeks = weeks;
            return this;
        }
        public Builder weeks(String... weeks) {
            return weeks(List.of(weeks));
        }
        public PolicyVMWorkloadProtectionPolicyRetentionYearly build() {
            final var o = new PolicyVMWorkloadProtectionPolicyRetentionYearly();
            o.count = count;
            o.formatType = formatType;
            o.monthdays = monthdays;
            o.months = months;
            o.weekdays = weekdays;
            o.weeks = weeks;
            return o;
        }
    }
}
