// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.network.inputs;

import com.pulumi.azure.network.inputs.RouteMapRuleArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class RouteMapState extends com.pulumi.resources.ResourceArgs {

    public static final RouteMapState Empty = new RouteMapState();

    /**
     * The name which should be used for this Route Map. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name which should be used for this Route Map. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * A `rule` block as defined below.
     * 
     */
    @Import(name="rules")
    private @Nullable Output<List<RouteMapRuleArgs>> rules;

    /**
     * @return A `rule` block as defined below.
     * 
     */
    public Optional<Output<List<RouteMapRuleArgs>>> rules() {
        return Optional.ofNullable(this.rules);
    }

    /**
     * The resource ID of the Virtual Hub. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="virtualHubId")
    private @Nullable Output<String> virtualHubId;

    /**
     * @return The resource ID of the Virtual Hub. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> virtualHubId() {
        return Optional.ofNullable(this.virtualHubId);
    }

    private RouteMapState() {}

    private RouteMapState(RouteMapState $) {
        this.name = $.name;
        this.rules = $.rules;
        this.virtualHubId = $.virtualHubId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RouteMapState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RouteMapState $;

        public Builder() {
            $ = new RouteMapState();
        }

        public Builder(RouteMapState defaults) {
            $ = new RouteMapState(Objects.requireNonNull(defaults));
        }

        /**
         * @param name The name which should be used for this Route Map. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name which should be used for this Route Map. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param rules A `rule` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder rules(@Nullable Output<List<RouteMapRuleArgs>> rules) {
            $.rules = rules;
            return this;
        }

        /**
         * @param rules A `rule` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder rules(List<RouteMapRuleArgs> rules) {
            return rules(Output.of(rules));
        }

        /**
         * @param rules A `rule` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder rules(RouteMapRuleArgs... rules) {
            return rules(List.of(rules));
        }

        /**
         * @param virtualHubId The resource ID of the Virtual Hub. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder virtualHubId(@Nullable Output<String> virtualHubId) {
            $.virtualHubId = virtualHubId;
            return this;
        }

        /**
         * @param virtualHubId The resource ID of the Virtual Hub. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder virtualHubId(String virtualHubId) {
            return virtualHubId(Output.of(virtualHubId));
        }

        public RouteMapState build() {
            return $;
        }
    }

}
