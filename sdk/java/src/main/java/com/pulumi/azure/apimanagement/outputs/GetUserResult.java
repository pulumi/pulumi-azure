// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.apimanagement.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetUserResult {
    private String apiManagementName;
    /**
     * @return The Email Address used for this User.
     * 
     */
    private String email;
    /**
     * @return The First Name for the User.
     * 
     */
    private String firstName;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return The Last Name for the User.
     * 
     */
    private String lastName;
    /**
     * @return Any notes about this User.
     * 
     */
    private String note;
    private String resourceGroupName;
    /**
     * @return The current state of this User, for example `active`, `blocked` or `pending`.
     * 
     */
    private String state;
    private String userId;

    private GetUserResult() {}
    public String apiManagementName() {
        return this.apiManagementName;
    }
    /**
     * @return The Email Address used for this User.
     * 
     */
    public String email() {
        return this.email;
    }
    /**
     * @return The First Name for the User.
     * 
     */
    public String firstName() {
        return this.firstName;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The Last Name for the User.
     * 
     */
    public String lastName() {
        return this.lastName;
    }
    /**
     * @return Any notes about this User.
     * 
     */
    public String note() {
        return this.note;
    }
    public String resourceGroupName() {
        return this.resourceGroupName;
    }
    /**
     * @return The current state of this User, for example `active`, `blocked` or `pending`.
     * 
     */
    public String state() {
        return this.state;
    }
    public String userId() {
        return this.userId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetUserResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String apiManagementName;
        private String email;
        private String firstName;
        private String id;
        private String lastName;
        private String note;
        private String resourceGroupName;
        private String state;
        private String userId;
        public Builder() {}
        public Builder(GetUserResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.apiManagementName = defaults.apiManagementName;
    	      this.email = defaults.email;
    	      this.firstName = defaults.firstName;
    	      this.id = defaults.id;
    	      this.lastName = defaults.lastName;
    	      this.note = defaults.note;
    	      this.resourceGroupName = defaults.resourceGroupName;
    	      this.state = defaults.state;
    	      this.userId = defaults.userId;
        }

        @CustomType.Setter
        public Builder apiManagementName(String apiManagementName) {
            if (apiManagementName == null) {
              throw new MissingRequiredPropertyException("GetUserResult", "apiManagementName");
            }
            this.apiManagementName = apiManagementName;
            return this;
        }
        @CustomType.Setter
        public Builder email(String email) {
            if (email == null) {
              throw new MissingRequiredPropertyException("GetUserResult", "email");
            }
            this.email = email;
            return this;
        }
        @CustomType.Setter
        public Builder firstName(String firstName) {
            if (firstName == null) {
              throw new MissingRequiredPropertyException("GetUserResult", "firstName");
            }
            this.firstName = firstName;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetUserResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder lastName(String lastName) {
            if (lastName == null) {
              throw new MissingRequiredPropertyException("GetUserResult", "lastName");
            }
            this.lastName = lastName;
            return this;
        }
        @CustomType.Setter
        public Builder note(String note) {
            if (note == null) {
              throw new MissingRequiredPropertyException("GetUserResult", "note");
            }
            this.note = note;
            return this;
        }
        @CustomType.Setter
        public Builder resourceGroupName(String resourceGroupName) {
            if (resourceGroupName == null) {
              throw new MissingRequiredPropertyException("GetUserResult", "resourceGroupName");
            }
            this.resourceGroupName = resourceGroupName;
            return this;
        }
        @CustomType.Setter
        public Builder state(String state) {
            if (state == null) {
              throw new MissingRequiredPropertyException("GetUserResult", "state");
            }
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder userId(String userId) {
            if (userId == null) {
              throw new MissingRequiredPropertyException("GetUserResult", "userId");
            }
            this.userId = userId;
            return this;
        }
        public GetUserResult build() {
            final var _resultValue = new GetUserResult();
            _resultValue.apiManagementName = apiManagementName;
            _resultValue.email = email;
            _resultValue.firstName = firstName;
            _resultValue.id = id;
            _resultValue.lastName = lastName;
            _resultValue.note = note;
            _resultValue.resourceGroupName = resourceGroupName;
            _resultValue.state = state;
            _resultValue.userId = userId;
            return _resultValue;
        }
    }
}
