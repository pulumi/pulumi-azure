// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.cdn.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class FrontdoorOriginGroupLoadBalancing {
    /**
     * @return Specifies the additional latency in milliseconds for probes to fall into the lowest latency bucket. Possible values are between `0` and `1000` milliseconds (inclusive). Defaults to `50`.
     * 
     */
    private @Nullable Integer additionalLatencyInMilliseconds;
    /**
     * @return Specifies the number of samples to consider for load balancing decisions. Possible values are between `0` and `255` (inclusive). Defaults to `4`.
     * 
     */
    private @Nullable Integer sampleSize;
    /**
     * @return Specifies the number of samples within the sample period that must succeed. Possible values are between `0` and `255` (inclusive). Defaults to `3`.
     * 
     */
    private @Nullable Integer successfulSamplesRequired;

    private FrontdoorOriginGroupLoadBalancing() {}
    /**
     * @return Specifies the additional latency in milliseconds for probes to fall into the lowest latency bucket. Possible values are between `0` and `1000` milliseconds (inclusive). Defaults to `50`.
     * 
     */
    public Optional<Integer> additionalLatencyInMilliseconds() {
        return Optional.ofNullable(this.additionalLatencyInMilliseconds);
    }
    /**
     * @return Specifies the number of samples to consider for load balancing decisions. Possible values are between `0` and `255` (inclusive). Defaults to `4`.
     * 
     */
    public Optional<Integer> sampleSize() {
        return Optional.ofNullable(this.sampleSize);
    }
    /**
     * @return Specifies the number of samples within the sample period that must succeed. Possible values are between `0` and `255` (inclusive). Defaults to `3`.
     * 
     */
    public Optional<Integer> successfulSamplesRequired() {
        return Optional.ofNullable(this.successfulSamplesRequired);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(FrontdoorOriginGroupLoadBalancing defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Integer additionalLatencyInMilliseconds;
        private @Nullable Integer sampleSize;
        private @Nullable Integer successfulSamplesRequired;
        public Builder() {}
        public Builder(FrontdoorOriginGroupLoadBalancing defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.additionalLatencyInMilliseconds = defaults.additionalLatencyInMilliseconds;
    	      this.sampleSize = defaults.sampleSize;
    	      this.successfulSamplesRequired = defaults.successfulSamplesRequired;
        }

        @CustomType.Setter
        public Builder additionalLatencyInMilliseconds(@Nullable Integer additionalLatencyInMilliseconds) {

            this.additionalLatencyInMilliseconds = additionalLatencyInMilliseconds;
            return this;
        }
        @CustomType.Setter
        public Builder sampleSize(@Nullable Integer sampleSize) {

            this.sampleSize = sampleSize;
            return this;
        }
        @CustomType.Setter
        public Builder successfulSamplesRequired(@Nullable Integer successfulSamplesRequired) {

            this.successfulSamplesRequired = successfulSamplesRequired;
            return this;
        }
        public FrontdoorOriginGroupLoadBalancing build() {
            final var _resultValue = new FrontdoorOriginGroupLoadBalancing();
            _resultValue.additionalLatencyInMilliseconds = additionalLatencyInMilliseconds;
            _resultValue.sampleSize = sampleSize;
            _resultValue.successfulSamplesRequired = successfulSamplesRequired;
            return _resultValue;
        }
    }
}
