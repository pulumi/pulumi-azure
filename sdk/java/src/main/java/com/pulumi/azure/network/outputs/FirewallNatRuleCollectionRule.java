// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.network.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class FirewallNatRuleCollectionRule {
    /**
     * @return Specifies a description for the rule.
     * 
     */
    private final @Nullable String description;
    /**
     * @return A list of destination IP addresses and/or IP ranges.
     * 
     */
    private final List<String> destinationAddresses;
    /**
     * @return A list of destination ports.
     * 
     */
    private final List<String> destinationPorts;
    /**
     * @return Specifies the name of the rule.
     * 
     */
    private final String name;
    /**
     * @return A list of protocols. Possible values are `Any`, `ICMP`, `TCP` and `UDP`.  If `action` is `Dnat`, protocols can only be `TCP` and `UDP`.
     * 
     */
    private final List<String> protocols;
    /**
     * @return A list of source IP addresses and/or IP ranges.
     * 
     */
    private final @Nullable List<String> sourceAddresses;
    /**
     * @return A list of source IP Group IDs for the rule.
     * 
     */
    private final @Nullable List<String> sourceIpGroups;
    /**
     * @return The address of the service behind the Firewall.
     * 
     */
    private final String translatedAddress;
    /**
     * @return The port of the service behind the Firewall.
     * 
     */
    private final String translatedPort;

    @CustomType.Constructor
    private FirewallNatRuleCollectionRule(
        @CustomType.Parameter("description") @Nullable String description,
        @CustomType.Parameter("destinationAddresses") List<String> destinationAddresses,
        @CustomType.Parameter("destinationPorts") List<String> destinationPorts,
        @CustomType.Parameter("name") String name,
        @CustomType.Parameter("protocols") List<String> protocols,
        @CustomType.Parameter("sourceAddresses") @Nullable List<String> sourceAddresses,
        @CustomType.Parameter("sourceIpGroups") @Nullable List<String> sourceIpGroups,
        @CustomType.Parameter("translatedAddress") String translatedAddress,
        @CustomType.Parameter("translatedPort") String translatedPort) {
        this.description = description;
        this.destinationAddresses = destinationAddresses;
        this.destinationPorts = destinationPorts;
        this.name = name;
        this.protocols = protocols;
        this.sourceAddresses = sourceAddresses;
        this.sourceIpGroups = sourceIpGroups;
        this.translatedAddress = translatedAddress;
        this.translatedPort = translatedPort;
    }

    /**
     * @return Specifies a description for the rule.
     * 
     */
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }
    /**
     * @return A list of destination IP addresses and/or IP ranges.
     * 
     */
    public List<String> destinationAddresses() {
        return this.destinationAddresses;
    }
    /**
     * @return A list of destination ports.
     * 
     */
    public List<String> destinationPorts() {
        return this.destinationPorts;
    }
    /**
     * @return Specifies the name of the rule.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return A list of protocols. Possible values are `Any`, `ICMP`, `TCP` and `UDP`.  If `action` is `Dnat`, protocols can only be `TCP` and `UDP`.
     * 
     */
    public List<String> protocols() {
        return this.protocols;
    }
    /**
     * @return A list of source IP addresses and/or IP ranges.
     * 
     */
    public List<String> sourceAddresses() {
        return this.sourceAddresses == null ? List.of() : this.sourceAddresses;
    }
    /**
     * @return A list of source IP Group IDs for the rule.
     * 
     */
    public List<String> sourceIpGroups() {
        return this.sourceIpGroups == null ? List.of() : this.sourceIpGroups;
    }
    /**
     * @return The address of the service behind the Firewall.
     * 
     */
    public String translatedAddress() {
        return this.translatedAddress;
    }
    /**
     * @return The port of the service behind the Firewall.
     * 
     */
    public String translatedPort() {
        return this.translatedPort;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(FirewallNatRuleCollectionRule defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String description;
        private List<String> destinationAddresses;
        private List<String> destinationPorts;
        private String name;
        private List<String> protocols;
        private @Nullable List<String> sourceAddresses;
        private @Nullable List<String> sourceIpGroups;
        private String translatedAddress;
        private String translatedPort;

        public Builder() {
    	      // Empty
        }

        public Builder(FirewallNatRuleCollectionRule defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.description = defaults.description;
    	      this.destinationAddresses = defaults.destinationAddresses;
    	      this.destinationPorts = defaults.destinationPorts;
    	      this.name = defaults.name;
    	      this.protocols = defaults.protocols;
    	      this.sourceAddresses = defaults.sourceAddresses;
    	      this.sourceIpGroups = defaults.sourceIpGroups;
    	      this.translatedAddress = defaults.translatedAddress;
    	      this.translatedPort = defaults.translatedPort;
        }

        public Builder description(@Nullable String description) {
            this.description = description;
            return this;
        }
        public Builder destinationAddresses(List<String> destinationAddresses) {
            this.destinationAddresses = Objects.requireNonNull(destinationAddresses);
            return this;
        }
        public Builder destinationAddresses(String... destinationAddresses) {
            return destinationAddresses(List.of(destinationAddresses));
        }
        public Builder destinationPorts(List<String> destinationPorts) {
            this.destinationPorts = Objects.requireNonNull(destinationPorts);
            return this;
        }
        public Builder destinationPorts(String... destinationPorts) {
            return destinationPorts(List.of(destinationPorts));
        }
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        public Builder protocols(List<String> protocols) {
            this.protocols = Objects.requireNonNull(protocols);
            return this;
        }
        public Builder protocols(String... protocols) {
            return protocols(List.of(protocols));
        }
        public Builder sourceAddresses(@Nullable List<String> sourceAddresses) {
            this.sourceAddresses = sourceAddresses;
            return this;
        }
        public Builder sourceAddresses(String... sourceAddresses) {
            return sourceAddresses(List.of(sourceAddresses));
        }
        public Builder sourceIpGroups(@Nullable List<String> sourceIpGroups) {
            this.sourceIpGroups = sourceIpGroups;
            return this;
        }
        public Builder sourceIpGroups(String... sourceIpGroups) {
            return sourceIpGroups(List.of(sourceIpGroups));
        }
        public Builder translatedAddress(String translatedAddress) {
            this.translatedAddress = Objects.requireNonNull(translatedAddress);
            return this;
        }
        public Builder translatedPort(String translatedPort) {
            this.translatedPort = Objects.requireNonNull(translatedPort);
            return this;
        }        public FirewallNatRuleCollectionRule build() {
            return new FirewallNatRuleCollectionRule(description, destinationAddresses, destinationPorts, name, protocols, sourceAddresses, sourceIpGroups, translatedAddress, translatedPort);
        }
    }
}
