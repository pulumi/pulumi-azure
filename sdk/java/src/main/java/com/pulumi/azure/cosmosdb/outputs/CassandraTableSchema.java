// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.cosmosdb.outputs;

import com.pulumi.azure.cosmosdb.outputs.CassandraTableSchemaClusterKey;
import com.pulumi.azure.cosmosdb.outputs.CassandraTableSchemaColumn;
import com.pulumi.azure.cosmosdb.outputs.CassandraTableSchemaPartitionKey;
import com.pulumi.core.annotations.CustomType;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class CassandraTableSchema {
    /**
     * @return One or more `cluster_key` blocks as defined below.
     * 
     */
    private final @Nullable List<CassandraTableSchemaClusterKey> clusterKeys;
    /**
     * @return One or more `column` blocks as defined below.
     * 
     */
    private final List<CassandraTableSchemaColumn> columns;
    /**
     * @return One or more `partition_key` blocks as defined below.
     * 
     */
    private final List<CassandraTableSchemaPartitionKey> partitionKeys;

    @CustomType.Constructor
    private CassandraTableSchema(
        @CustomType.Parameter("clusterKeys") @Nullable List<CassandraTableSchemaClusterKey> clusterKeys,
        @CustomType.Parameter("columns") List<CassandraTableSchemaColumn> columns,
        @CustomType.Parameter("partitionKeys") List<CassandraTableSchemaPartitionKey> partitionKeys) {
        this.clusterKeys = clusterKeys;
        this.columns = columns;
        this.partitionKeys = partitionKeys;
    }

    /**
     * @return One or more `cluster_key` blocks as defined below.
     * 
     */
    public List<CassandraTableSchemaClusterKey> clusterKeys() {
        return this.clusterKeys == null ? List.of() : this.clusterKeys;
    }
    /**
     * @return One or more `column` blocks as defined below.
     * 
     */
    public List<CassandraTableSchemaColumn> columns() {
        return this.columns;
    }
    /**
     * @return One or more `partition_key` blocks as defined below.
     * 
     */
    public List<CassandraTableSchemaPartitionKey> partitionKeys() {
        return this.partitionKeys;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(CassandraTableSchema defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable List<CassandraTableSchemaClusterKey> clusterKeys;
        private List<CassandraTableSchemaColumn> columns;
        private List<CassandraTableSchemaPartitionKey> partitionKeys;

        public Builder() {
    	      // Empty
        }

        public Builder(CassandraTableSchema defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.clusterKeys = defaults.clusterKeys;
    	      this.columns = defaults.columns;
    	      this.partitionKeys = defaults.partitionKeys;
        }

        public Builder clusterKeys(@Nullable List<CassandraTableSchemaClusterKey> clusterKeys) {
            this.clusterKeys = clusterKeys;
            return this;
        }
        public Builder clusterKeys(CassandraTableSchemaClusterKey... clusterKeys) {
            return clusterKeys(List.of(clusterKeys));
        }
        public Builder columns(List<CassandraTableSchemaColumn> columns) {
            this.columns = Objects.requireNonNull(columns);
            return this;
        }
        public Builder columns(CassandraTableSchemaColumn... columns) {
            return columns(List.of(columns));
        }
        public Builder partitionKeys(List<CassandraTableSchemaPartitionKey> partitionKeys) {
            this.partitionKeys = Objects.requireNonNull(partitionKeys);
            return this;
        }
        public Builder partitionKeys(CassandraTableSchemaPartitionKey... partitionKeys) {
            return partitionKeys(List.of(partitionKeys));
        }        public CassandraTableSchema build() {
            return new CassandraTableSchema(clusterKeys, columns, partitionKeys);
        }
    }
}
