// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.elasticcloud;

import com.pulumi.azure.elasticcloud.inputs.ElasticsearchLogsArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ElasticsearchArgs extends com.pulumi.resources.ResourceArgs {

    public static final ElasticsearchArgs Empty = new ElasticsearchArgs();

    /**
     * Specifies the Email Address which should be associated with this Elasticsearch account. Changing this forces a new Elasticsearch to be created.
     * 
     */
    @Import(name="elasticCloudEmailAddress", required=true)
    private Output<String> elasticCloudEmailAddress;

    /**
     * @return Specifies the Email Address which should be associated with this Elasticsearch account. Changing this forces a new Elasticsearch to be created.
     * 
     */
    public Output<String> elasticCloudEmailAddress() {
        return this.elasticCloudEmailAddress;
    }

    /**
     * The Azure Region where the Elasticsearch resource should exist. Changing this forces a new Elasticsearch to be created.
     * 
     */
    @Import(name="location")
    private @Nullable Output<String> location;

    /**
     * @return The Azure Region where the Elasticsearch resource should exist. Changing this forces a new Elasticsearch to be created.
     * 
     */
    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * A `logs` block as defined below.
     * 
     */
    @Import(name="logs")
    private @Nullable Output<ElasticsearchLogsArgs> logs;

    /**
     * @return A `logs` block as defined below.
     * 
     */
    public Optional<Output<ElasticsearchLogsArgs>> logs() {
        return Optional.ofNullable(this.logs);
    }

    /**
     * Specifies if the Elasticsearch should have monitoring configured? Defaults to `true`. Changing this forces a new Elasticsearch to be created.
     * 
     */
    @Import(name="monitoringEnabled")
    private @Nullable Output<Boolean> monitoringEnabled;

    /**
     * @return Specifies if the Elasticsearch should have monitoring configured? Defaults to `true`. Changing this forces a new Elasticsearch to be created.
     * 
     */
    public Optional<Output<Boolean>> monitoringEnabled() {
        return Optional.ofNullable(this.monitoringEnabled);
    }

    /**
     * The name which should be used for this Elasticsearch resource. Changing this forces a new Elasticsearch to be created.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name which should be used for this Elasticsearch resource. Changing this forces a new Elasticsearch to be created.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The name of the Resource Group where the Elasticsearch resource should exist. Changing this forces a new Elasticsearch to be created.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    /**
     * @return The name of the Resource Group where the Elasticsearch resource should exist. Changing this forces a new Elasticsearch to be created.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * Specifies the name of the SKU for this Elasticsearch. Changing this forces a new Elasticsearch to be created.
     * 
     * &gt; **NOTE:** The SKU depends on the Elasticsearch Plans available for your account and is a combination of PlanID_Term.
     * Ex: If the plan ID is &#34;planXYZ&#34; and term is &#34;Yearly&#34;, the SKU will be &#34;planXYZ_Yearly&#34;.
     * You may find your eligible plans [here](https://portal.azure.com/#view/Microsoft_Azure_Marketplace/GalleryItemDetailsBladeNopdl/id/elastic.ec-azure-pp) or in the online documentation [here](https://azuremarketplace.microsoft.com/en-us/marketplace/apps/elastic.ec-azure-pp?tab=PlansAndPrice) for more details or in case of any issues with the SKU.
     * 
     */
    @Import(name="skuName", required=true)
    private Output<String> skuName;

    /**
     * @return Specifies the name of the SKU for this Elasticsearch. Changing this forces a new Elasticsearch to be created.
     * 
     * &gt; **NOTE:** The SKU depends on the Elasticsearch Plans available for your account and is a combination of PlanID_Term.
     * Ex: If the plan ID is &#34;planXYZ&#34; and term is &#34;Yearly&#34;, the SKU will be &#34;planXYZ_Yearly&#34;.
     * You may find your eligible plans [here](https://portal.azure.com/#view/Microsoft_Azure_Marketplace/GalleryItemDetailsBladeNopdl/id/elastic.ec-azure-pp) or in the online documentation [here](https://azuremarketplace.microsoft.com/en-us/marketplace/apps/elastic.ec-azure-pp?tab=PlansAndPrice) for more details or in case of any issues with the SKU.
     * 
     */
    public Output<String> skuName() {
        return this.skuName;
    }

    /**
     * A mapping of tags which should be assigned to the Elasticsearch resource.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return A mapping of tags which should be assigned to the Elasticsearch resource.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private ElasticsearchArgs() {}

    private ElasticsearchArgs(ElasticsearchArgs $) {
        this.elasticCloudEmailAddress = $.elasticCloudEmailAddress;
        this.location = $.location;
        this.logs = $.logs;
        this.monitoringEnabled = $.monitoringEnabled;
        this.name = $.name;
        this.resourceGroupName = $.resourceGroupName;
        this.skuName = $.skuName;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ElasticsearchArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ElasticsearchArgs $;

        public Builder() {
            $ = new ElasticsearchArgs();
        }

        public Builder(ElasticsearchArgs defaults) {
            $ = new ElasticsearchArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param elasticCloudEmailAddress Specifies the Email Address which should be associated with this Elasticsearch account. Changing this forces a new Elasticsearch to be created.
         * 
         * @return builder
         * 
         */
        public Builder elasticCloudEmailAddress(Output<String> elasticCloudEmailAddress) {
            $.elasticCloudEmailAddress = elasticCloudEmailAddress;
            return this;
        }

        /**
         * @param elasticCloudEmailAddress Specifies the Email Address which should be associated with this Elasticsearch account. Changing this forces a new Elasticsearch to be created.
         * 
         * @return builder
         * 
         */
        public Builder elasticCloudEmailAddress(String elasticCloudEmailAddress) {
            return elasticCloudEmailAddress(Output.of(elasticCloudEmailAddress));
        }

        /**
         * @param location The Azure Region where the Elasticsearch resource should exist. Changing this forces a new Elasticsearch to be created.
         * 
         * @return builder
         * 
         */
        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location The Azure Region where the Elasticsearch resource should exist. Changing this forces a new Elasticsearch to be created.
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param logs A `logs` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder logs(@Nullable Output<ElasticsearchLogsArgs> logs) {
            $.logs = logs;
            return this;
        }

        /**
         * @param logs A `logs` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder logs(ElasticsearchLogsArgs logs) {
            return logs(Output.of(logs));
        }

        /**
         * @param monitoringEnabled Specifies if the Elasticsearch should have monitoring configured? Defaults to `true`. Changing this forces a new Elasticsearch to be created.
         * 
         * @return builder
         * 
         */
        public Builder monitoringEnabled(@Nullable Output<Boolean> monitoringEnabled) {
            $.monitoringEnabled = monitoringEnabled;
            return this;
        }

        /**
         * @param monitoringEnabled Specifies if the Elasticsearch should have monitoring configured? Defaults to `true`. Changing this forces a new Elasticsearch to be created.
         * 
         * @return builder
         * 
         */
        public Builder monitoringEnabled(Boolean monitoringEnabled) {
            return monitoringEnabled(Output.of(monitoringEnabled));
        }

        /**
         * @param name The name which should be used for this Elasticsearch resource. Changing this forces a new Elasticsearch to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name which should be used for this Elasticsearch resource. Changing this forces a new Elasticsearch to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param resourceGroupName The name of the Resource Group where the Elasticsearch resource should exist. Changing this forces a new Elasticsearch to be created.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName The name of the Resource Group where the Elasticsearch resource should exist. Changing this forces a new Elasticsearch to be created.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        /**
         * @param skuName Specifies the name of the SKU for this Elasticsearch. Changing this forces a new Elasticsearch to be created.
         * 
         * &gt; **NOTE:** The SKU depends on the Elasticsearch Plans available for your account and is a combination of PlanID_Term.
         * Ex: If the plan ID is &#34;planXYZ&#34; and term is &#34;Yearly&#34;, the SKU will be &#34;planXYZ_Yearly&#34;.
         * You may find your eligible plans [here](https://portal.azure.com/#view/Microsoft_Azure_Marketplace/GalleryItemDetailsBladeNopdl/id/elastic.ec-azure-pp) or in the online documentation [here](https://azuremarketplace.microsoft.com/en-us/marketplace/apps/elastic.ec-azure-pp?tab=PlansAndPrice) for more details or in case of any issues with the SKU.
         * 
         * @return builder
         * 
         */
        public Builder skuName(Output<String> skuName) {
            $.skuName = skuName;
            return this;
        }

        /**
         * @param skuName Specifies the name of the SKU for this Elasticsearch. Changing this forces a new Elasticsearch to be created.
         * 
         * &gt; **NOTE:** The SKU depends on the Elasticsearch Plans available for your account and is a combination of PlanID_Term.
         * Ex: If the plan ID is &#34;planXYZ&#34; and term is &#34;Yearly&#34;, the SKU will be &#34;planXYZ_Yearly&#34;.
         * You may find your eligible plans [here](https://portal.azure.com/#view/Microsoft_Azure_Marketplace/GalleryItemDetailsBladeNopdl/id/elastic.ec-azure-pp) or in the online documentation [here](https://azuremarketplace.microsoft.com/en-us/marketplace/apps/elastic.ec-azure-pp?tab=PlansAndPrice) for more details or in case of any issues with the SKU.
         * 
         * @return builder
         * 
         */
        public Builder skuName(String skuName) {
            return skuName(Output.of(skuName));
        }

        /**
         * @param tags A mapping of tags which should be assigned to the Elasticsearch resource.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags A mapping of tags which should be assigned to the Elasticsearch resource.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public ElasticsearchArgs build() {
            if ($.elasticCloudEmailAddress == null) {
                throw new MissingRequiredPropertyException("ElasticsearchArgs", "elasticCloudEmailAddress");
            }
            if ($.resourceGroupName == null) {
                throw new MissingRequiredPropertyException("ElasticsearchArgs", "resourceGroupName");
            }
            if ($.skuName == null) {
                throw new MissingRequiredPropertyException("ElasticsearchArgs", "skuName");
            }
            return $;
        }
    }

}
