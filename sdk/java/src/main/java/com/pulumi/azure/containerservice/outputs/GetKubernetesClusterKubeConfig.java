// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.containerservice.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetKubernetesClusterKubeConfig {
    /**
     * @return Base64 encoded public certificate used by clients to authenticate to the Kubernetes cluster.
     * 
     */
    private String clientCertificate;
    /**
     * @return Base64 encoded private key used by clients to authenticate to the Kubernetes cluster.
     * 
     */
    private String clientKey;
    /**
     * @return Base64 encoded public CA certificate used as the root of trust for the Kubernetes cluster.
     * 
     */
    private String clusterCaCertificate;
    /**
     * @return The Kubernetes cluster server host.
     * 
     */
    private String host;
    /**
     * @return A password or token used to authenticate to the Kubernetes cluster.
     * 
     */
    private String password;
    /**
     * @return A username used to authenticate to the Kubernetes cluster.
     * 
     */
    private String username;

    private GetKubernetesClusterKubeConfig() {}
    /**
     * @return Base64 encoded public certificate used by clients to authenticate to the Kubernetes cluster.
     * 
     */
    public String clientCertificate() {
        return this.clientCertificate;
    }
    /**
     * @return Base64 encoded private key used by clients to authenticate to the Kubernetes cluster.
     * 
     */
    public String clientKey() {
        return this.clientKey;
    }
    /**
     * @return Base64 encoded public CA certificate used as the root of trust for the Kubernetes cluster.
     * 
     */
    public String clusterCaCertificate() {
        return this.clusterCaCertificate;
    }
    /**
     * @return The Kubernetes cluster server host.
     * 
     */
    public String host() {
        return this.host;
    }
    /**
     * @return A password or token used to authenticate to the Kubernetes cluster.
     * 
     */
    public String password() {
        return this.password;
    }
    /**
     * @return A username used to authenticate to the Kubernetes cluster.
     * 
     */
    public String username() {
        return this.username;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetKubernetesClusterKubeConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String clientCertificate;
        private String clientKey;
        private String clusterCaCertificate;
        private String host;
        private String password;
        private String username;
        public Builder() {}
        public Builder(GetKubernetesClusterKubeConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.clientCertificate = defaults.clientCertificate;
    	      this.clientKey = defaults.clientKey;
    	      this.clusterCaCertificate = defaults.clusterCaCertificate;
    	      this.host = defaults.host;
    	      this.password = defaults.password;
    	      this.username = defaults.username;
        }

        @CustomType.Setter
        public Builder clientCertificate(String clientCertificate) {
            if (clientCertificate == null) {
              throw new MissingRequiredPropertyException("GetKubernetesClusterKubeConfig", "clientCertificate");
            }
            this.clientCertificate = clientCertificate;
            return this;
        }
        @CustomType.Setter
        public Builder clientKey(String clientKey) {
            if (clientKey == null) {
              throw new MissingRequiredPropertyException("GetKubernetesClusterKubeConfig", "clientKey");
            }
            this.clientKey = clientKey;
            return this;
        }
        @CustomType.Setter
        public Builder clusterCaCertificate(String clusterCaCertificate) {
            if (clusterCaCertificate == null) {
              throw new MissingRequiredPropertyException("GetKubernetesClusterKubeConfig", "clusterCaCertificate");
            }
            this.clusterCaCertificate = clusterCaCertificate;
            return this;
        }
        @CustomType.Setter
        public Builder host(String host) {
            if (host == null) {
              throw new MissingRequiredPropertyException("GetKubernetesClusterKubeConfig", "host");
            }
            this.host = host;
            return this;
        }
        @CustomType.Setter
        public Builder password(String password) {
            if (password == null) {
              throw new MissingRequiredPropertyException("GetKubernetesClusterKubeConfig", "password");
            }
            this.password = password;
            return this;
        }
        @CustomType.Setter
        public Builder username(String username) {
            if (username == null) {
              throw new MissingRequiredPropertyException("GetKubernetesClusterKubeConfig", "username");
            }
            this.username = username;
            return this;
        }
        public GetKubernetesClusterKubeConfig build() {
            final var _resultValue = new GetKubernetesClusterKubeConfig();
            _resultValue.clientCertificate = clientCertificate;
            _resultValue.clientKey = clientKey;
            _resultValue.clusterCaCertificate = clusterCaCertificate;
            _resultValue.host = host;
            _resultValue.password = password;
            _resultValue.username = username;
            return _resultValue;
        }
    }
}
