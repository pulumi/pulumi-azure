// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.devtest;

import com.pulumi.azure.devtest.inputs.GlobalVMShutdownScheduleNotificationSettingsArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GlobalVMShutdownScheduleArgs extends com.pulumi.resources.ResourceArgs {

    public static final GlobalVMShutdownScheduleArgs Empty = new GlobalVMShutdownScheduleArgs();

    /**
     * The time each day when the schedule takes effect. Must match the format HHmm where HH is 00-23 and mm is 00-59 (e.g. 0930, 2300, etc.)
     * 
     */
    @Import(name="dailyRecurrenceTime", required=true)
    private Output<String> dailyRecurrenceTime;

    /**
     * @return The time each day when the schedule takes effect. Must match the format HHmm where HH is 00-23 and mm is 00-59 (e.g. 0930, 2300, etc.)
     * 
     */
    public Output<String> dailyRecurrenceTime() {
        return this.dailyRecurrenceTime;
    }

    /**
     * Whether to enable the schedule. Possible values are `true` and `false`. Defaults to `true`.
     * 
     */
    @Import(name="enabled")
    private @Nullable Output<Boolean> enabled;

    /**
     * @return Whether to enable the schedule. Possible values are `true` and `false`. Defaults to `true`.
     * 
     */
    public Optional<Output<Boolean>> enabled() {
        return Optional.ofNullable(this.enabled);
    }

    /**
     * The location where the schedule is created. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="location")
    private @Nullable Output<String> location;

    /**
     * @return The location where the schedule is created. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * The notification setting of a schedule. A `notification_settings` block as defined below.
     * 
     */
    @Import(name="notificationSettings", required=true)
    private Output<GlobalVMShutdownScheduleNotificationSettingsArgs> notificationSettings;

    /**
     * @return The notification setting of a schedule. A `notification_settings` block as defined below.
     * 
     */
    public Output<GlobalVMShutdownScheduleNotificationSettingsArgs> notificationSettings() {
        return this.notificationSettings;
    }

    /**
     * A mapping of tags to assign to the resource.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return A mapping of tags to assign to the resource.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * The time zone ID (e.g. Pacific Standard time). Refer to this guide for a [full list of accepted time zone names](https://jackstromberg.com/2017/01/list-of-time-zones-consumed-by-azure/).
     * 
     */
    @Import(name="timezone", required=true)
    private Output<String> timezone;

    /**
     * @return The time zone ID (e.g. Pacific Standard time). Refer to this guide for a [full list of accepted time zone names](https://jackstromberg.com/2017/01/list-of-time-zones-consumed-by-azure/).
     * 
     */
    public Output<String> timezone() {
        return this.timezone;
    }

    /**
     * The resource ID of the target ARM-based Virtual Machine. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="virtualMachineId", required=true)
    private Output<String> virtualMachineId;

    /**
     * @return The resource ID of the target ARM-based Virtual Machine. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> virtualMachineId() {
        return this.virtualMachineId;
    }

    private GlobalVMShutdownScheduleArgs() {}

    private GlobalVMShutdownScheduleArgs(GlobalVMShutdownScheduleArgs $) {
        this.dailyRecurrenceTime = $.dailyRecurrenceTime;
        this.enabled = $.enabled;
        this.location = $.location;
        this.notificationSettings = $.notificationSettings;
        this.tags = $.tags;
        this.timezone = $.timezone;
        this.virtualMachineId = $.virtualMachineId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GlobalVMShutdownScheduleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GlobalVMShutdownScheduleArgs $;

        public Builder() {
            $ = new GlobalVMShutdownScheduleArgs();
        }

        public Builder(GlobalVMShutdownScheduleArgs defaults) {
            $ = new GlobalVMShutdownScheduleArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param dailyRecurrenceTime The time each day when the schedule takes effect. Must match the format HHmm where HH is 00-23 and mm is 00-59 (e.g. 0930, 2300, etc.)
         * 
         * @return builder
         * 
         */
        public Builder dailyRecurrenceTime(Output<String> dailyRecurrenceTime) {
            $.dailyRecurrenceTime = dailyRecurrenceTime;
            return this;
        }

        /**
         * @param dailyRecurrenceTime The time each day when the schedule takes effect. Must match the format HHmm where HH is 00-23 and mm is 00-59 (e.g. 0930, 2300, etc.)
         * 
         * @return builder
         * 
         */
        public Builder dailyRecurrenceTime(String dailyRecurrenceTime) {
            return dailyRecurrenceTime(Output.of(dailyRecurrenceTime));
        }

        /**
         * @param enabled Whether to enable the schedule. Possible values are `true` and `false`. Defaults to `true`.
         * 
         * @return builder
         * 
         */
        public Builder enabled(@Nullable Output<Boolean> enabled) {
            $.enabled = enabled;
            return this;
        }

        /**
         * @param enabled Whether to enable the schedule. Possible values are `true` and `false`. Defaults to `true`.
         * 
         * @return builder
         * 
         */
        public Builder enabled(Boolean enabled) {
            return enabled(Output.of(enabled));
        }

        /**
         * @param location The location where the schedule is created. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location The location where the schedule is created. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param notificationSettings The notification setting of a schedule. A `notification_settings` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder notificationSettings(Output<GlobalVMShutdownScheduleNotificationSettingsArgs> notificationSettings) {
            $.notificationSettings = notificationSettings;
            return this;
        }

        /**
         * @param notificationSettings The notification setting of a schedule. A `notification_settings` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder notificationSettings(GlobalVMShutdownScheduleNotificationSettingsArgs notificationSettings) {
            return notificationSettings(Output.of(notificationSettings));
        }

        /**
         * @param tags A mapping of tags to assign to the resource.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags A mapping of tags to assign to the resource.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param timezone The time zone ID (e.g. Pacific Standard time). Refer to this guide for a [full list of accepted time zone names](https://jackstromberg.com/2017/01/list-of-time-zones-consumed-by-azure/).
         * 
         * @return builder
         * 
         */
        public Builder timezone(Output<String> timezone) {
            $.timezone = timezone;
            return this;
        }

        /**
         * @param timezone The time zone ID (e.g. Pacific Standard time). Refer to this guide for a [full list of accepted time zone names](https://jackstromberg.com/2017/01/list-of-time-zones-consumed-by-azure/).
         * 
         * @return builder
         * 
         */
        public Builder timezone(String timezone) {
            return timezone(Output.of(timezone));
        }

        /**
         * @param virtualMachineId The resource ID of the target ARM-based Virtual Machine. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder virtualMachineId(Output<String> virtualMachineId) {
            $.virtualMachineId = virtualMachineId;
            return this;
        }

        /**
         * @param virtualMachineId The resource ID of the target ARM-based Virtual Machine. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder virtualMachineId(String virtualMachineId) {
            return virtualMachineId(Output.of(virtualMachineId));
        }

        public GlobalVMShutdownScheduleArgs build() {
            $.dailyRecurrenceTime = Objects.requireNonNull($.dailyRecurrenceTime, "expected parameter 'dailyRecurrenceTime' to be non-null");
            $.notificationSettings = Objects.requireNonNull($.notificationSettings, "expected parameter 'notificationSettings' to be non-null");
            $.timezone = Objects.requireNonNull($.timezone, "expected parameter 'timezone' to be non-null");
            $.virtualMachineId = Objects.requireNonNull($.virtualMachineId, "expected parameter 'virtualMachineId' to be non-null");
            return $;
        }
    }

}
