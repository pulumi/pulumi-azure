// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.elasticsan.inputs;

import com.pulumi.azure.elasticsan.inputs.ElasticSanSkuArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ElasticSanState extends com.pulumi.resources.ResourceArgs {

    public static final ElasticSanState Empty = new ElasticSanState();

    /**
     * Specifies the base size of the Elastic SAN resource in TiB. Possible values are between `1` and `100`.
     * 
     * &gt; **NOTE** When updating `base_size_in_tib`, the new value should be greater than the existing one.
     * 
     */
    @Import(name="baseSizeInTib")
    private @Nullable Output<Integer> baseSizeInTib;

    /**
     * @return Specifies the base size of the Elastic SAN resource in TiB. Possible values are between `1` and `100`.
     * 
     * &gt; **NOTE** When updating `base_size_in_tib`, the new value should be greater than the existing one.
     * 
     */
    public Optional<Output<Integer>> baseSizeInTib() {
        return Optional.ofNullable(this.baseSizeInTib);
    }

    /**
     * Specifies the extended size of the Elastic SAN resource in TiB. Possible values are between `1` and `100`.
     * 
     * &gt; **NOTE** `extended_size_in_tib` cannot be removed and when updating, the new value should be greater than the existing one.
     * 
     */
    @Import(name="extendedSizeInTib")
    private @Nullable Output<Integer> extendedSizeInTib;

    /**
     * @return Specifies the extended size of the Elastic SAN resource in TiB. Possible values are between `1` and `100`.
     * 
     * &gt; **NOTE** `extended_size_in_tib` cannot be removed and when updating, the new value should be greater than the existing one.
     * 
     */
    public Optional<Output<Integer>> extendedSizeInTib() {
        return Optional.ofNullable(this.extendedSizeInTib);
    }

    /**
     * The Azure Region where the Elastic SAN resource should exist. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="location")
    private @Nullable Output<String> location;

    /**
     * @return The Azure Region where the Elastic SAN resource should exist. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * Specifies the name of this Elastic SAN resource. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Specifies the name of this Elastic SAN resource. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Specifies the name of the Resource Group within which this Elastic SAN resource should exist. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="resourceGroupName")
    private @Nullable Output<String> resourceGroupName;

    /**
     * @return Specifies the name of the Resource Group within which this Elastic SAN resource should exist. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> resourceGroupName() {
        return Optional.ofNullable(this.resourceGroupName);
    }

    /**
     * A `sku` block as defined below.
     * 
     */
    @Import(name="sku")
    private @Nullable Output<ElasticSanSkuArgs> sku;

    /**
     * @return A `sku` block as defined below.
     * 
     */
    public Optional<Output<ElasticSanSkuArgs>> sku() {
        return Optional.ofNullable(this.sku);
    }

    /**
     * A mapping of tags which should be assigned to the Elastic SAN resource.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return A mapping of tags which should be assigned to the Elastic SAN resource.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * Total Provisioned IOps of the Elastic SAN resource.
     * 
     */
    @Import(name="totalIops")
    private @Nullable Output<Integer> totalIops;

    /**
     * @return Total Provisioned IOps of the Elastic SAN resource.
     * 
     */
    public Optional<Output<Integer>> totalIops() {
        return Optional.ofNullable(this.totalIops);
    }

    /**
     * Total Provisioned MBps Elastic SAN resource.
     * 
     */
    @Import(name="totalMbps")
    private @Nullable Output<Integer> totalMbps;

    /**
     * @return Total Provisioned MBps Elastic SAN resource.
     * 
     */
    public Optional<Output<Integer>> totalMbps() {
        return Optional.ofNullable(this.totalMbps);
    }

    /**
     * Total size of the Elastic SAN resource in TB.
     * 
     */
    @Import(name="totalSizeInTib")
    private @Nullable Output<Integer> totalSizeInTib;

    /**
     * @return Total size of the Elastic SAN resource in TB.
     * 
     */
    public Optional<Output<Integer>> totalSizeInTib() {
        return Optional.ofNullable(this.totalSizeInTib);
    }

    /**
     * Total size of the provisioned Volumes in GiB.
     * 
     */
    @Import(name="totalVolumeSizeInGib")
    private @Nullable Output<Integer> totalVolumeSizeInGib;

    /**
     * @return Total size of the provisioned Volumes in GiB.
     * 
     */
    public Optional<Output<Integer>> totalVolumeSizeInGib() {
        return Optional.ofNullable(this.totalVolumeSizeInGib);
    }

    /**
     * Total number of volume groups in this Elastic SAN resource.
     * 
     */
    @Import(name="volumeGroupCount")
    private @Nullable Output<Integer> volumeGroupCount;

    /**
     * @return Total number of volume groups in this Elastic SAN resource.
     * 
     */
    public Optional<Output<Integer>> volumeGroupCount() {
        return Optional.ofNullable(this.volumeGroupCount);
    }

    /**
     * Logical zone for the Elastic SAN resource. Changing this forces a new resource to be created.
     * 
     * &gt; **NOTE** `zones` cannot be specified if `sku.name` is set to `Premium_ZRS`.
     * 
     */
    @Import(name="zones")
    private @Nullable Output<List<String>> zones;

    /**
     * @return Logical zone for the Elastic SAN resource. Changing this forces a new resource to be created.
     * 
     * &gt; **NOTE** `zones` cannot be specified if `sku.name` is set to `Premium_ZRS`.
     * 
     */
    public Optional<Output<List<String>>> zones() {
        return Optional.ofNullable(this.zones);
    }

    private ElasticSanState() {}

    private ElasticSanState(ElasticSanState $) {
        this.baseSizeInTib = $.baseSizeInTib;
        this.extendedSizeInTib = $.extendedSizeInTib;
        this.location = $.location;
        this.name = $.name;
        this.resourceGroupName = $.resourceGroupName;
        this.sku = $.sku;
        this.tags = $.tags;
        this.totalIops = $.totalIops;
        this.totalMbps = $.totalMbps;
        this.totalSizeInTib = $.totalSizeInTib;
        this.totalVolumeSizeInGib = $.totalVolumeSizeInGib;
        this.volumeGroupCount = $.volumeGroupCount;
        this.zones = $.zones;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ElasticSanState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ElasticSanState $;

        public Builder() {
            $ = new ElasticSanState();
        }

        public Builder(ElasticSanState defaults) {
            $ = new ElasticSanState(Objects.requireNonNull(defaults));
        }

        /**
         * @param baseSizeInTib Specifies the base size of the Elastic SAN resource in TiB. Possible values are between `1` and `100`.
         * 
         * &gt; **NOTE** When updating `base_size_in_tib`, the new value should be greater than the existing one.
         * 
         * @return builder
         * 
         */
        public Builder baseSizeInTib(@Nullable Output<Integer> baseSizeInTib) {
            $.baseSizeInTib = baseSizeInTib;
            return this;
        }

        /**
         * @param baseSizeInTib Specifies the base size of the Elastic SAN resource in TiB. Possible values are between `1` and `100`.
         * 
         * &gt; **NOTE** When updating `base_size_in_tib`, the new value should be greater than the existing one.
         * 
         * @return builder
         * 
         */
        public Builder baseSizeInTib(Integer baseSizeInTib) {
            return baseSizeInTib(Output.of(baseSizeInTib));
        }

        /**
         * @param extendedSizeInTib Specifies the extended size of the Elastic SAN resource in TiB. Possible values are between `1` and `100`.
         * 
         * &gt; **NOTE** `extended_size_in_tib` cannot be removed and when updating, the new value should be greater than the existing one.
         * 
         * @return builder
         * 
         */
        public Builder extendedSizeInTib(@Nullable Output<Integer> extendedSizeInTib) {
            $.extendedSizeInTib = extendedSizeInTib;
            return this;
        }

        /**
         * @param extendedSizeInTib Specifies the extended size of the Elastic SAN resource in TiB. Possible values are between `1` and `100`.
         * 
         * &gt; **NOTE** `extended_size_in_tib` cannot be removed and when updating, the new value should be greater than the existing one.
         * 
         * @return builder
         * 
         */
        public Builder extendedSizeInTib(Integer extendedSizeInTib) {
            return extendedSizeInTib(Output.of(extendedSizeInTib));
        }

        /**
         * @param location The Azure Region where the Elastic SAN resource should exist. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location The Azure Region where the Elastic SAN resource should exist. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param name Specifies the name of this Elastic SAN resource. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Specifies the name of this Elastic SAN resource. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param resourceGroupName Specifies the name of the Resource Group within which this Elastic SAN resource should exist. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(@Nullable Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName Specifies the name of the Resource Group within which this Elastic SAN resource should exist. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        /**
         * @param sku A `sku` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder sku(@Nullable Output<ElasticSanSkuArgs> sku) {
            $.sku = sku;
            return this;
        }

        /**
         * @param sku A `sku` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder sku(ElasticSanSkuArgs sku) {
            return sku(Output.of(sku));
        }

        /**
         * @param tags A mapping of tags which should be assigned to the Elastic SAN resource.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags A mapping of tags which should be assigned to the Elastic SAN resource.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param totalIops Total Provisioned IOps of the Elastic SAN resource.
         * 
         * @return builder
         * 
         */
        public Builder totalIops(@Nullable Output<Integer> totalIops) {
            $.totalIops = totalIops;
            return this;
        }

        /**
         * @param totalIops Total Provisioned IOps of the Elastic SAN resource.
         * 
         * @return builder
         * 
         */
        public Builder totalIops(Integer totalIops) {
            return totalIops(Output.of(totalIops));
        }

        /**
         * @param totalMbps Total Provisioned MBps Elastic SAN resource.
         * 
         * @return builder
         * 
         */
        public Builder totalMbps(@Nullable Output<Integer> totalMbps) {
            $.totalMbps = totalMbps;
            return this;
        }

        /**
         * @param totalMbps Total Provisioned MBps Elastic SAN resource.
         * 
         * @return builder
         * 
         */
        public Builder totalMbps(Integer totalMbps) {
            return totalMbps(Output.of(totalMbps));
        }

        /**
         * @param totalSizeInTib Total size of the Elastic SAN resource in TB.
         * 
         * @return builder
         * 
         */
        public Builder totalSizeInTib(@Nullable Output<Integer> totalSizeInTib) {
            $.totalSizeInTib = totalSizeInTib;
            return this;
        }

        /**
         * @param totalSizeInTib Total size of the Elastic SAN resource in TB.
         * 
         * @return builder
         * 
         */
        public Builder totalSizeInTib(Integer totalSizeInTib) {
            return totalSizeInTib(Output.of(totalSizeInTib));
        }

        /**
         * @param totalVolumeSizeInGib Total size of the provisioned Volumes in GiB.
         * 
         * @return builder
         * 
         */
        public Builder totalVolumeSizeInGib(@Nullable Output<Integer> totalVolumeSizeInGib) {
            $.totalVolumeSizeInGib = totalVolumeSizeInGib;
            return this;
        }

        /**
         * @param totalVolumeSizeInGib Total size of the provisioned Volumes in GiB.
         * 
         * @return builder
         * 
         */
        public Builder totalVolumeSizeInGib(Integer totalVolumeSizeInGib) {
            return totalVolumeSizeInGib(Output.of(totalVolumeSizeInGib));
        }

        /**
         * @param volumeGroupCount Total number of volume groups in this Elastic SAN resource.
         * 
         * @return builder
         * 
         */
        public Builder volumeGroupCount(@Nullable Output<Integer> volumeGroupCount) {
            $.volumeGroupCount = volumeGroupCount;
            return this;
        }

        /**
         * @param volumeGroupCount Total number of volume groups in this Elastic SAN resource.
         * 
         * @return builder
         * 
         */
        public Builder volumeGroupCount(Integer volumeGroupCount) {
            return volumeGroupCount(Output.of(volumeGroupCount));
        }

        /**
         * @param zones Logical zone for the Elastic SAN resource. Changing this forces a new resource to be created.
         * 
         * &gt; **NOTE** `zones` cannot be specified if `sku.name` is set to `Premium_ZRS`.
         * 
         * @return builder
         * 
         */
        public Builder zones(@Nullable Output<List<String>> zones) {
            $.zones = zones;
            return this;
        }

        /**
         * @param zones Logical zone for the Elastic SAN resource. Changing this forces a new resource to be created.
         * 
         * &gt; **NOTE** `zones` cannot be specified if `sku.name` is set to `Premium_ZRS`.
         * 
         * @return builder
         * 
         */
        public Builder zones(List<String> zones) {
            return zones(Output.of(zones));
        }

        /**
         * @param zones Logical zone for the Elastic SAN resource. Changing this forces a new resource to be created.
         * 
         * &gt; **NOTE** `zones` cannot be specified if `sku.name` is set to `Premium_ZRS`.
         * 
         * @return builder
         * 
         */
        public Builder zones(String... zones) {
            return zones(List.of(zones));
        }

        public ElasticSanState build() {
            return $;
        }
    }

}
