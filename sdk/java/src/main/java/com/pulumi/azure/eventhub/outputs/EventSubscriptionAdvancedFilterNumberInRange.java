// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.eventhub.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Double;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class EventSubscriptionAdvancedFilterNumberInRange {
    /**
     * @return Specifies the field within the event data that you want to use for filtering. Type of the field can be a number, boolean, or string.
     * 
     */
    private String key;
    /**
     * @return Specifies an array of values to compare to when using a multiple values operator.
     * 
     * &gt; **NOTE:** A maximum of total number of advanced filter values allowed on event subscription is 25.
     * 
     */
    private List<List<Double>> values;

    private EventSubscriptionAdvancedFilterNumberInRange() {}
    /**
     * @return Specifies the field within the event data that you want to use for filtering. Type of the field can be a number, boolean, or string.
     * 
     */
    public String key() {
        return this.key;
    }
    /**
     * @return Specifies an array of values to compare to when using a multiple values operator.
     * 
     * &gt; **NOTE:** A maximum of total number of advanced filter values allowed on event subscription is 25.
     * 
     */
    public List<List<Double>> values() {
        return this.values;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(EventSubscriptionAdvancedFilterNumberInRange defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String key;
        private List<List<Double>> values;
        public Builder() {}
        public Builder(EventSubscriptionAdvancedFilterNumberInRange defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.key = defaults.key;
    	      this.values = defaults.values;
        }

        @CustomType.Setter
        public Builder key(String key) {
            if (key == null) {
              throw new MissingRequiredPropertyException("EventSubscriptionAdvancedFilterNumberInRange", "key");
            }
            this.key = key;
            return this;
        }
        @CustomType.Setter
        public Builder values(List<List<Double>> values) {
            if (values == null) {
              throw new MissingRequiredPropertyException("EventSubscriptionAdvancedFilterNumberInRange", "values");
            }
            this.values = values;
            return this;
        }
        public EventSubscriptionAdvancedFilterNumberInRange build() {
            final var _resultValue = new EventSubscriptionAdvancedFilterNumberInRange();
            _resultValue.key = key;
            _resultValue.values = values;
            return _resultValue;
        }
    }
}
