// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.storage;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class MoverTargetEndpointArgs extends com.pulumi.resources.ResourceArgs {

    public static final MoverTargetEndpointArgs Empty = new MoverTargetEndpointArgs();

    /**
     * Specifies a description for the Storage Mover Target Endpoint.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return Specifies a description for the Storage Mover Target Endpoint.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Specifies the name which should be used for this Storage Mover Target Endpoint. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Specifies the name which should be used for this Storage Mover Target Endpoint. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Specifies the ID of the storage account for this Storage Mover Target Endpoint. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="storageAccountId", required=true)
    private Output<String> storageAccountId;

    /**
     * @return Specifies the ID of the storage account for this Storage Mover Target Endpoint. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> storageAccountId() {
        return this.storageAccountId;
    }

    /**
     * Specifies the name of the storage blob container for this Storage Mover Target Endpoint. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="storageContainerName", required=true)
    private Output<String> storageContainerName;

    /**
     * @return Specifies the name of the storage blob container for this Storage Mover Target Endpoint. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> storageContainerName() {
        return this.storageContainerName;
    }

    /**
     * Specifies the ID of the storage mover for this Storage Mover Target Endpoint. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="storageMoverId", required=true)
    private Output<String> storageMoverId;

    /**
     * @return Specifies the ID of the storage mover for this Storage Mover Target Endpoint. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> storageMoverId() {
        return this.storageMoverId;
    }

    private MoverTargetEndpointArgs() {}

    private MoverTargetEndpointArgs(MoverTargetEndpointArgs $) {
        this.description = $.description;
        this.name = $.name;
        this.storageAccountId = $.storageAccountId;
        this.storageContainerName = $.storageContainerName;
        this.storageMoverId = $.storageMoverId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(MoverTargetEndpointArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private MoverTargetEndpointArgs $;

        public Builder() {
            $ = new MoverTargetEndpointArgs();
        }

        public Builder(MoverTargetEndpointArgs defaults) {
            $ = new MoverTargetEndpointArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param description Specifies a description for the Storage Mover Target Endpoint.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description Specifies a description for the Storage Mover Target Endpoint.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param name Specifies the name which should be used for this Storage Mover Target Endpoint. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Specifies the name which should be used for this Storage Mover Target Endpoint. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param storageAccountId Specifies the ID of the storage account for this Storage Mover Target Endpoint. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder storageAccountId(Output<String> storageAccountId) {
            $.storageAccountId = storageAccountId;
            return this;
        }

        /**
         * @param storageAccountId Specifies the ID of the storage account for this Storage Mover Target Endpoint. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder storageAccountId(String storageAccountId) {
            return storageAccountId(Output.of(storageAccountId));
        }

        /**
         * @param storageContainerName Specifies the name of the storage blob container for this Storage Mover Target Endpoint. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder storageContainerName(Output<String> storageContainerName) {
            $.storageContainerName = storageContainerName;
            return this;
        }

        /**
         * @param storageContainerName Specifies the name of the storage blob container for this Storage Mover Target Endpoint. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder storageContainerName(String storageContainerName) {
            return storageContainerName(Output.of(storageContainerName));
        }

        /**
         * @param storageMoverId Specifies the ID of the storage mover for this Storage Mover Target Endpoint. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder storageMoverId(Output<String> storageMoverId) {
            $.storageMoverId = storageMoverId;
            return this;
        }

        /**
         * @param storageMoverId Specifies the ID of the storage mover for this Storage Mover Target Endpoint. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder storageMoverId(String storageMoverId) {
            return storageMoverId(Output.of(storageMoverId));
        }

        public MoverTargetEndpointArgs build() {
            if ($.storageAccountId == null) {
                throw new MissingRequiredPropertyException("MoverTargetEndpointArgs", "storageAccountId");
            }
            if ($.storageContainerName == null) {
                throw new MissingRequiredPropertyException("MoverTargetEndpointArgs", "storageContainerName");
            }
            if ($.storageMoverId == null) {
                throw new MissingRequiredPropertyException("MoverTargetEndpointArgs", "storageMoverId");
            }
            return $;
        }
    }

}
