// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.appservice.outputs;

import com.pulumi.azure.appservice.outputs.GetWindowsWebAppSiteConfigIpRestrictionHeader;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetWindowsWebAppSiteConfigIpRestriction {
    /**
     * @return A `action` block as defined above.
     * 
     */
    private String action;
    private List<GetWindowsWebAppSiteConfigIpRestrictionHeader> headers;
    /**
     * @return The CIDR notation of the IP or IP Range to match.
     * 
     */
    private String ipAddress;
    /**
     * @return The name of this Windows Web App.
     * 
     */
    private String name;
    /**
     * @return The priority value of this `ip_restriction`.
     * 
     */
    private Integer priority;
    /**
     * @return The Service Tag used for this IP Restriction.
     * 
     */
    private String serviceTag;
    /**
     * @return The subnet id which the Windows Web App is vNet Integrated with.
     * 
     */
    private String virtualNetworkSubnetId;

    private GetWindowsWebAppSiteConfigIpRestriction() {}
    /**
     * @return A `action` block as defined above.
     * 
     */
    public String action() {
        return this.action;
    }
    public List<GetWindowsWebAppSiteConfigIpRestrictionHeader> headers() {
        return this.headers;
    }
    /**
     * @return The CIDR notation of the IP or IP Range to match.
     * 
     */
    public String ipAddress() {
        return this.ipAddress;
    }
    /**
     * @return The name of this Windows Web App.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The priority value of this `ip_restriction`.
     * 
     */
    public Integer priority() {
        return this.priority;
    }
    /**
     * @return The Service Tag used for this IP Restriction.
     * 
     */
    public String serviceTag() {
        return this.serviceTag;
    }
    /**
     * @return The subnet id which the Windows Web App is vNet Integrated with.
     * 
     */
    public String virtualNetworkSubnetId() {
        return this.virtualNetworkSubnetId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetWindowsWebAppSiteConfigIpRestriction defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String action;
        private List<GetWindowsWebAppSiteConfigIpRestrictionHeader> headers;
        private String ipAddress;
        private String name;
        private Integer priority;
        private String serviceTag;
        private String virtualNetworkSubnetId;
        public Builder() {}
        public Builder(GetWindowsWebAppSiteConfigIpRestriction defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.action = defaults.action;
    	      this.headers = defaults.headers;
    	      this.ipAddress = defaults.ipAddress;
    	      this.name = defaults.name;
    	      this.priority = defaults.priority;
    	      this.serviceTag = defaults.serviceTag;
    	      this.virtualNetworkSubnetId = defaults.virtualNetworkSubnetId;
        }

        @CustomType.Setter
        public Builder action(String action) {
            if (action == null) {
              throw new MissingRequiredPropertyException("GetWindowsWebAppSiteConfigIpRestriction", "action");
            }
            this.action = action;
            return this;
        }
        @CustomType.Setter
        public Builder headers(List<GetWindowsWebAppSiteConfigIpRestrictionHeader> headers) {
            if (headers == null) {
              throw new MissingRequiredPropertyException("GetWindowsWebAppSiteConfigIpRestriction", "headers");
            }
            this.headers = headers;
            return this;
        }
        public Builder headers(GetWindowsWebAppSiteConfigIpRestrictionHeader... headers) {
            return headers(List.of(headers));
        }
        @CustomType.Setter
        public Builder ipAddress(String ipAddress) {
            if (ipAddress == null) {
              throw new MissingRequiredPropertyException("GetWindowsWebAppSiteConfigIpRestriction", "ipAddress");
            }
            this.ipAddress = ipAddress;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetWindowsWebAppSiteConfigIpRestriction", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder priority(Integer priority) {
            if (priority == null) {
              throw new MissingRequiredPropertyException("GetWindowsWebAppSiteConfigIpRestriction", "priority");
            }
            this.priority = priority;
            return this;
        }
        @CustomType.Setter
        public Builder serviceTag(String serviceTag) {
            if (serviceTag == null) {
              throw new MissingRequiredPropertyException("GetWindowsWebAppSiteConfigIpRestriction", "serviceTag");
            }
            this.serviceTag = serviceTag;
            return this;
        }
        @CustomType.Setter
        public Builder virtualNetworkSubnetId(String virtualNetworkSubnetId) {
            if (virtualNetworkSubnetId == null) {
              throw new MissingRequiredPropertyException("GetWindowsWebAppSiteConfigIpRestriction", "virtualNetworkSubnetId");
            }
            this.virtualNetworkSubnetId = virtualNetworkSubnetId;
            return this;
        }
        public GetWindowsWebAppSiteConfigIpRestriction build() {
            final var _resultValue = new GetWindowsWebAppSiteConfigIpRestriction();
            _resultValue.action = action;
            _resultValue.headers = headers;
            _resultValue.ipAddress = ipAddress;
            _resultValue.name = name;
            _resultValue.priority = priority;
            _resultValue.serviceTag = serviceTag;
            _resultValue.virtualNetworkSubnetId = virtualNetworkSubnetId;
            return _resultValue;
        }
    }
}
