// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.media.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class TransformOutputCustomPresetFilterOverlayVideoPosition {
    /**
     * @return The height of the rectangular region in pixels. This can be absolute pixel value (e.g `100`), or relative to the size of the video (For example, `50%`).
     * 
     */
    private @Nullable String height;
    /**
     * @return The number of pixels from the left-margin. This can be absolute pixel value (e.g `100`), or relative to the size of the video (For example, `50%`).
     * 
     */
    private @Nullable String left;
    /**
     * @return The number of pixels from the top-margin. This can be absolute pixel value (e.g `100`), or relative to the size of the video (For example, `50%`).
     * 
     */
    private @Nullable String top;
    /**
     * @return The width of the rectangular region in pixels. This can be absolute pixel value (e.g`  100 `), or relative to the size of the video (For example, `50%`).
     * 
     */
    private @Nullable String width;

    private TransformOutputCustomPresetFilterOverlayVideoPosition() {}
    /**
     * @return The height of the rectangular region in pixels. This can be absolute pixel value (e.g `100`), or relative to the size of the video (For example, `50%`).
     * 
     */
    public Optional<String> height() {
        return Optional.ofNullable(this.height);
    }
    /**
     * @return The number of pixels from the left-margin. This can be absolute pixel value (e.g `100`), or relative to the size of the video (For example, `50%`).
     * 
     */
    public Optional<String> left() {
        return Optional.ofNullable(this.left);
    }
    /**
     * @return The number of pixels from the top-margin. This can be absolute pixel value (e.g `100`), or relative to the size of the video (For example, `50%`).
     * 
     */
    public Optional<String> top() {
        return Optional.ofNullable(this.top);
    }
    /**
     * @return The width of the rectangular region in pixels. This can be absolute pixel value (e.g`  100 `), or relative to the size of the video (For example, `50%`).
     * 
     */
    public Optional<String> width() {
        return Optional.ofNullable(this.width);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(TransformOutputCustomPresetFilterOverlayVideoPosition defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String height;
        private @Nullable String left;
        private @Nullable String top;
        private @Nullable String width;
        public Builder() {}
        public Builder(TransformOutputCustomPresetFilterOverlayVideoPosition defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.height = defaults.height;
    	      this.left = defaults.left;
    	      this.top = defaults.top;
    	      this.width = defaults.width;
        }

        @CustomType.Setter
        public Builder height(@Nullable String height) {

            this.height = height;
            return this;
        }
        @CustomType.Setter
        public Builder left(@Nullable String left) {

            this.left = left;
            return this;
        }
        @CustomType.Setter
        public Builder top(@Nullable String top) {

            this.top = top;
            return this;
        }
        @CustomType.Setter
        public Builder width(@Nullable String width) {

            this.width = width;
            return this;
        }
        public TransformOutputCustomPresetFilterOverlayVideoPosition build() {
            final var _resultValue = new TransformOutputCustomPresetFilterOverlayVideoPosition();
            _resultValue.height = height;
            _resultValue.left = left;
            _resultValue.top = top;
            _resultValue.width = width;
            return _resultValue;
        }
    }
}
