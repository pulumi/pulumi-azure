// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.machinelearning;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DatastoreDatalakeGen2Args extends com.pulumi.resources.ResourceArgs {

    public static final DatastoreDatalakeGen2Args Empty = new DatastoreDatalakeGen2Args();

    /**
     * An URL used for authentication.
     * 
     */
    @Import(name="authorityUrl")
    private @Nullable Output<String> authorityUrl;

    /**
     * @return An URL used for authentication.
     * 
     */
    public Optional<Output<String>> authorityUrl() {
        return Optional.ofNullable(this.authorityUrl);
    }

    /**
     * The object ID of the Service Principal.
     * 
     */
    @Import(name="clientId")
    private @Nullable Output<String> clientId;

    /**
     * @return The object ID of the Service Principal.
     * 
     */
    public Optional<Output<String>> clientId() {
        return Optional.ofNullable(this.clientId);
    }

    /**
     * The secret of the Service Principal.
     * 
     */
    @Import(name="clientSecret")
    private @Nullable Output<String> clientSecret;

    /**
     * @return The secret of the Service Principal.
     * 
     */
    public Optional<Output<String>> clientSecret() {
        return Optional.ofNullable(this.clientSecret);
    }

    /**
     * Text used to describe the asset. Changing this forces a new Machine Learning DataStore to be created.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return Text used to describe the asset. Changing this forces a new Machine Learning DataStore to be created.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * The name of the Machine Learning DataStore. Changing this forces a new Machine Learning DataStore to be created.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the Machine Learning DataStore. Changing this forces a new Machine Learning DataStore to be created.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Specifies which identity to use when retrieving data from the specified source. Defaults to `None`. Possible values are `None`, `WorkspaceSystemAssignedIdentity` and `WorkspaceUserAssignedIdentity`.
     * 
     */
    @Import(name="serviceDataIdentity")
    private @Nullable Output<String> serviceDataIdentity;

    /**
     * @return Specifies which identity to use when retrieving data from the specified source. Defaults to `None`. Possible values are `None`, `WorkspaceSystemAssignedIdentity` and `WorkspaceUserAssignedIdentity`.
     * 
     */
    public Optional<Output<String>> serviceDataIdentity() {
        return Optional.ofNullable(this.serviceDataIdentity);
    }

    /**
     * The ID of the Storage Account Container. Changing this forces a new Machine Learning DataStore to be created.
     * 
     */
    @Import(name="storageContainerId", required=true)
    private Output<String> storageContainerId;

    /**
     * @return The ID of the Storage Account Container. Changing this forces a new Machine Learning DataStore to be created.
     * 
     */
    public Output<String> storageContainerId() {
        return this.storageContainerId;
    }

    /**
     * A mapping of tags which should be assigned to the Machine Learning DataStore. Changing this forces a new Machine Learning DataStore to be created.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return A mapping of tags which should be assigned to the Machine Learning DataStore. Changing this forces a new Machine Learning DataStore to be created.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * The ID of the Tenant which the Service Principal belongs to.
     * 
     */
    @Import(name="tenantId")
    private @Nullable Output<String> tenantId;

    /**
     * @return The ID of the Tenant which the Service Principal belongs to.
     * 
     */
    public Optional<Output<String>> tenantId() {
        return Optional.ofNullable(this.tenantId);
    }

    /**
     * The ID of the Machine Learning Workspace. Changing this forces a new Machine Learning DataStore to be created.
     * 
     */
    @Import(name="workspaceId", required=true)
    private Output<String> workspaceId;

    /**
     * @return The ID of the Machine Learning Workspace. Changing this forces a new Machine Learning DataStore to be created.
     * 
     */
    public Output<String> workspaceId() {
        return this.workspaceId;
    }

    private DatastoreDatalakeGen2Args() {}

    private DatastoreDatalakeGen2Args(DatastoreDatalakeGen2Args $) {
        this.authorityUrl = $.authorityUrl;
        this.clientId = $.clientId;
        this.clientSecret = $.clientSecret;
        this.description = $.description;
        this.name = $.name;
        this.serviceDataIdentity = $.serviceDataIdentity;
        this.storageContainerId = $.storageContainerId;
        this.tags = $.tags;
        this.tenantId = $.tenantId;
        this.workspaceId = $.workspaceId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DatastoreDatalakeGen2Args defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DatastoreDatalakeGen2Args $;

        public Builder() {
            $ = new DatastoreDatalakeGen2Args();
        }

        public Builder(DatastoreDatalakeGen2Args defaults) {
            $ = new DatastoreDatalakeGen2Args(Objects.requireNonNull(defaults));
        }

        /**
         * @param authorityUrl An URL used for authentication.
         * 
         * @return builder
         * 
         */
        public Builder authorityUrl(@Nullable Output<String> authorityUrl) {
            $.authorityUrl = authorityUrl;
            return this;
        }

        /**
         * @param authorityUrl An URL used for authentication.
         * 
         * @return builder
         * 
         */
        public Builder authorityUrl(String authorityUrl) {
            return authorityUrl(Output.of(authorityUrl));
        }

        /**
         * @param clientId The object ID of the Service Principal.
         * 
         * @return builder
         * 
         */
        public Builder clientId(@Nullable Output<String> clientId) {
            $.clientId = clientId;
            return this;
        }

        /**
         * @param clientId The object ID of the Service Principal.
         * 
         * @return builder
         * 
         */
        public Builder clientId(String clientId) {
            return clientId(Output.of(clientId));
        }

        /**
         * @param clientSecret The secret of the Service Principal.
         * 
         * @return builder
         * 
         */
        public Builder clientSecret(@Nullable Output<String> clientSecret) {
            $.clientSecret = clientSecret;
            return this;
        }

        /**
         * @param clientSecret The secret of the Service Principal.
         * 
         * @return builder
         * 
         */
        public Builder clientSecret(String clientSecret) {
            return clientSecret(Output.of(clientSecret));
        }

        /**
         * @param description Text used to describe the asset. Changing this forces a new Machine Learning DataStore to be created.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description Text used to describe the asset. Changing this forces a new Machine Learning DataStore to be created.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param name The name of the Machine Learning DataStore. Changing this forces a new Machine Learning DataStore to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the Machine Learning DataStore. Changing this forces a new Machine Learning DataStore to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param serviceDataIdentity Specifies which identity to use when retrieving data from the specified source. Defaults to `None`. Possible values are `None`, `WorkspaceSystemAssignedIdentity` and `WorkspaceUserAssignedIdentity`.
         * 
         * @return builder
         * 
         */
        public Builder serviceDataIdentity(@Nullable Output<String> serviceDataIdentity) {
            $.serviceDataIdentity = serviceDataIdentity;
            return this;
        }

        /**
         * @param serviceDataIdentity Specifies which identity to use when retrieving data from the specified source. Defaults to `None`. Possible values are `None`, `WorkspaceSystemAssignedIdentity` and `WorkspaceUserAssignedIdentity`.
         * 
         * @return builder
         * 
         */
        public Builder serviceDataIdentity(String serviceDataIdentity) {
            return serviceDataIdentity(Output.of(serviceDataIdentity));
        }

        /**
         * @param storageContainerId The ID of the Storage Account Container. Changing this forces a new Machine Learning DataStore to be created.
         * 
         * @return builder
         * 
         */
        public Builder storageContainerId(Output<String> storageContainerId) {
            $.storageContainerId = storageContainerId;
            return this;
        }

        /**
         * @param storageContainerId The ID of the Storage Account Container. Changing this forces a new Machine Learning DataStore to be created.
         * 
         * @return builder
         * 
         */
        public Builder storageContainerId(String storageContainerId) {
            return storageContainerId(Output.of(storageContainerId));
        }

        /**
         * @param tags A mapping of tags which should be assigned to the Machine Learning DataStore. Changing this forces a new Machine Learning DataStore to be created.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags A mapping of tags which should be assigned to the Machine Learning DataStore. Changing this forces a new Machine Learning DataStore to be created.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param tenantId The ID of the Tenant which the Service Principal belongs to.
         * 
         * @return builder
         * 
         */
        public Builder tenantId(@Nullable Output<String> tenantId) {
            $.tenantId = tenantId;
            return this;
        }

        /**
         * @param tenantId The ID of the Tenant which the Service Principal belongs to.
         * 
         * @return builder
         * 
         */
        public Builder tenantId(String tenantId) {
            return tenantId(Output.of(tenantId));
        }

        /**
         * @param workspaceId The ID of the Machine Learning Workspace. Changing this forces a new Machine Learning DataStore to be created.
         * 
         * @return builder
         * 
         */
        public Builder workspaceId(Output<String> workspaceId) {
            $.workspaceId = workspaceId;
            return this;
        }

        /**
         * @param workspaceId The ID of the Machine Learning Workspace. Changing this forces a new Machine Learning DataStore to be created.
         * 
         * @return builder
         * 
         */
        public Builder workspaceId(String workspaceId) {
            return workspaceId(Output.of(workspaceId));
        }

        public DatastoreDatalakeGen2Args build() {
            if ($.storageContainerId == null) {
                throw new MissingRequiredPropertyException("DatastoreDatalakeGen2Args", "storageContainerId");
            }
            if ($.workspaceId == null) {
                throw new MissingRequiredPropertyException("DatastoreDatalakeGen2Args", "workspaceId");
            }
            return $;
        }
    }

}
