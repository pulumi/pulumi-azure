// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.compute.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class OrchestratedVirtualMachineScaleSetOsDiskDiffDiskSettingsArgs extends com.pulumi.resources.ResourceArgs {

    public static final OrchestratedVirtualMachineScaleSetOsDiskDiffDiskSettingsArgs Empty = new OrchestratedVirtualMachineScaleSetOsDiskDiffDiskSettingsArgs();

    /**
     * Specifies the Ephemeral Disk Settings for the OS Disk. At this time the only possible value is `Local`. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="option", required=true)
    private Output<String> option;

    /**
     * @return Specifies the Ephemeral Disk Settings for the OS Disk. At this time the only possible value is `Local`. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> option() {
        return this.option;
    }

    /**
     * Specifies where to store the Ephemeral Disk. Possible values are `CacheDisk` and `ResourceDisk`. Defaults to `CacheDisk`. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="placement")
    private @Nullable Output<String> placement;

    /**
     * @return Specifies where to store the Ephemeral Disk. Possible values are `CacheDisk` and `ResourceDisk`. Defaults to `CacheDisk`. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> placement() {
        return Optional.ofNullable(this.placement);
    }

    private OrchestratedVirtualMachineScaleSetOsDiskDiffDiskSettingsArgs() {}

    private OrchestratedVirtualMachineScaleSetOsDiskDiffDiskSettingsArgs(OrchestratedVirtualMachineScaleSetOsDiskDiffDiskSettingsArgs $) {
        this.option = $.option;
        this.placement = $.placement;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(OrchestratedVirtualMachineScaleSetOsDiskDiffDiskSettingsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private OrchestratedVirtualMachineScaleSetOsDiskDiffDiskSettingsArgs $;

        public Builder() {
            $ = new OrchestratedVirtualMachineScaleSetOsDiskDiffDiskSettingsArgs();
        }

        public Builder(OrchestratedVirtualMachineScaleSetOsDiskDiffDiskSettingsArgs defaults) {
            $ = new OrchestratedVirtualMachineScaleSetOsDiskDiffDiskSettingsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param option Specifies the Ephemeral Disk Settings for the OS Disk. At this time the only possible value is `Local`. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder option(Output<String> option) {
            $.option = option;
            return this;
        }

        /**
         * @param option Specifies the Ephemeral Disk Settings for the OS Disk. At this time the only possible value is `Local`. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder option(String option) {
            return option(Output.of(option));
        }

        /**
         * @param placement Specifies where to store the Ephemeral Disk. Possible values are `CacheDisk` and `ResourceDisk`. Defaults to `CacheDisk`. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder placement(@Nullable Output<String> placement) {
            $.placement = placement;
            return this;
        }

        /**
         * @param placement Specifies where to store the Ephemeral Disk. Possible values are `CacheDisk` and `ResourceDisk`. Defaults to `CacheDisk`. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder placement(String placement) {
            return placement(Output.of(placement));
        }

        public OrchestratedVirtualMachineScaleSetOsDiskDiffDiskSettingsArgs build() {
            if ($.option == null) {
                throw new MissingRequiredPropertyException("OrchestratedVirtualMachineScaleSetOsDiskDiffDiskSettingsArgs", "option");
            }
            return $;
        }
    }

}
