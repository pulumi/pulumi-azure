// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.devtest.outputs;

import com.pulumi.azure.devtest.outputs.GetVirtualNetworkAllowedSubnet;
import com.pulumi.azure.devtest.outputs.GetVirtualNetworkSubnetOverride;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetVirtualNetworkResult {
    /**
     * @return The list of subnets enabled for the virtual network as defined below.
     * 
     */
    private List<GetVirtualNetworkAllowedSubnet> allowedSubnets;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private String labName;
    private String name;
    private String resourceGroupName;
    /**
     * @return The list of permission overrides for the subnets as defined below.
     * 
     */
    private List<GetVirtualNetworkSubnetOverride> subnetOverrides;
    /**
     * @return The unique immutable identifier of the virtual network.
     * 
     */
    private String uniqueIdentifier;

    private GetVirtualNetworkResult() {}
    /**
     * @return The list of subnets enabled for the virtual network as defined below.
     * 
     */
    public List<GetVirtualNetworkAllowedSubnet> allowedSubnets() {
        return this.allowedSubnets;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public String labName() {
        return this.labName;
    }
    public String name() {
        return this.name;
    }
    public String resourceGroupName() {
        return this.resourceGroupName;
    }
    /**
     * @return The list of permission overrides for the subnets as defined below.
     * 
     */
    public List<GetVirtualNetworkSubnetOverride> subnetOverrides() {
        return this.subnetOverrides;
    }
    /**
     * @return The unique immutable identifier of the virtual network.
     * 
     */
    public String uniqueIdentifier() {
        return this.uniqueIdentifier;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetVirtualNetworkResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetVirtualNetworkAllowedSubnet> allowedSubnets;
        private String id;
        private String labName;
        private String name;
        private String resourceGroupName;
        private List<GetVirtualNetworkSubnetOverride> subnetOverrides;
        private String uniqueIdentifier;
        public Builder() {}
        public Builder(GetVirtualNetworkResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.allowedSubnets = defaults.allowedSubnets;
    	      this.id = defaults.id;
    	      this.labName = defaults.labName;
    	      this.name = defaults.name;
    	      this.resourceGroupName = defaults.resourceGroupName;
    	      this.subnetOverrides = defaults.subnetOverrides;
    	      this.uniqueIdentifier = defaults.uniqueIdentifier;
        }

        @CustomType.Setter
        public Builder allowedSubnets(List<GetVirtualNetworkAllowedSubnet> allowedSubnets) {
            if (allowedSubnets == null) {
              throw new MissingRequiredPropertyException("GetVirtualNetworkResult", "allowedSubnets");
            }
            this.allowedSubnets = allowedSubnets;
            return this;
        }
        public Builder allowedSubnets(GetVirtualNetworkAllowedSubnet... allowedSubnets) {
            return allowedSubnets(List.of(allowedSubnets));
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetVirtualNetworkResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder labName(String labName) {
            if (labName == null) {
              throw new MissingRequiredPropertyException("GetVirtualNetworkResult", "labName");
            }
            this.labName = labName;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetVirtualNetworkResult", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder resourceGroupName(String resourceGroupName) {
            if (resourceGroupName == null) {
              throw new MissingRequiredPropertyException("GetVirtualNetworkResult", "resourceGroupName");
            }
            this.resourceGroupName = resourceGroupName;
            return this;
        }
        @CustomType.Setter
        public Builder subnetOverrides(List<GetVirtualNetworkSubnetOverride> subnetOverrides) {
            if (subnetOverrides == null) {
              throw new MissingRequiredPropertyException("GetVirtualNetworkResult", "subnetOverrides");
            }
            this.subnetOverrides = subnetOverrides;
            return this;
        }
        public Builder subnetOverrides(GetVirtualNetworkSubnetOverride... subnetOverrides) {
            return subnetOverrides(List.of(subnetOverrides));
        }
        @CustomType.Setter
        public Builder uniqueIdentifier(String uniqueIdentifier) {
            if (uniqueIdentifier == null) {
              throw new MissingRequiredPropertyException("GetVirtualNetworkResult", "uniqueIdentifier");
            }
            this.uniqueIdentifier = uniqueIdentifier;
            return this;
        }
        public GetVirtualNetworkResult build() {
            final var _resultValue = new GetVirtualNetworkResult();
            _resultValue.allowedSubnets = allowedSubnets;
            _resultValue.id = id;
            _resultValue.labName = labName;
            _resultValue.name = name;
            _resultValue.resourceGroupName = resourceGroupName;
            _resultValue.subnetOverrides = subnetOverrides;
            _resultValue.uniqueIdentifier = uniqueIdentifier;
            return _resultValue;
        }
    }
}
