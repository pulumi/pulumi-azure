// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.keyvault.inputs;

import com.pulumi.azure.keyvault.inputs.ManagedHardwareSecurityModuleRoleDefinitionPermissionArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ManagedHardwareSecurityModuleRoleDefinitionState extends com.pulumi.resources.ResourceArgs {

    public static final ManagedHardwareSecurityModuleRoleDefinitionState Empty = new ManagedHardwareSecurityModuleRoleDefinitionState();

    /**
     * Specifies a text description about this KeyVault Role Definition.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return Specifies a text description about this KeyVault Role Definition.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * The name which should be used for this KeyVault Role Definition. Changing this forces a new KeyVault Role Definition to be created.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name which should be used for this KeyVault Role Definition. Changing this forces a new KeyVault Role Definition to be created.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * One or more `permission` blocks as defined below.
     * 
     */
    @Import(name="permissions")
    private @Nullable Output<List<ManagedHardwareSecurityModuleRoleDefinitionPermissionArgs>> permissions;

    /**
     * @return One or more `permission` blocks as defined below.
     * 
     */
    public Optional<Output<List<ManagedHardwareSecurityModuleRoleDefinitionPermissionArgs>>> permissions() {
        return Optional.ofNullable(this.permissions);
    }

    @Import(name="resourceManagerId")
    private @Nullable Output<String> resourceManagerId;

    public Optional<Output<String>> resourceManagerId() {
        return Optional.ofNullable(this.resourceManagerId);
    }

    /**
     * Specify a name for this KeyVault Role Definition.
     * 
     */
    @Import(name="roleName")
    private @Nullable Output<String> roleName;

    /**
     * @return Specify a name for this KeyVault Role Definition.
     * 
     */
    public Optional<Output<String>> roleName() {
        return Optional.ofNullable(this.roleName);
    }

    /**
     * The type of the role definition. Possible values are `AKVBuiltInRole` and `CustomRole`.
     * 
     */
    @Import(name="roleType")
    private @Nullable Output<String> roleType;

    /**
     * @return The type of the role definition. Possible values are `AKVBuiltInRole` and `CustomRole`.
     * 
     */
    public Optional<Output<String>> roleType() {
        return Optional.ofNullable(this.roleType);
    }

    /**
     * The base URL of the managed hardware security module resource. Changing this forces a new KeyVault Role Definition to be created.
     * 
     */
    @Import(name="vaultBaseUrl")
    private @Nullable Output<String> vaultBaseUrl;

    /**
     * @return The base URL of the managed hardware security module resource. Changing this forces a new KeyVault Role Definition to be created.
     * 
     */
    public Optional<Output<String>> vaultBaseUrl() {
        return Optional.ofNullable(this.vaultBaseUrl);
    }

    private ManagedHardwareSecurityModuleRoleDefinitionState() {}

    private ManagedHardwareSecurityModuleRoleDefinitionState(ManagedHardwareSecurityModuleRoleDefinitionState $) {
        this.description = $.description;
        this.name = $.name;
        this.permissions = $.permissions;
        this.resourceManagerId = $.resourceManagerId;
        this.roleName = $.roleName;
        this.roleType = $.roleType;
        this.vaultBaseUrl = $.vaultBaseUrl;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ManagedHardwareSecurityModuleRoleDefinitionState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ManagedHardwareSecurityModuleRoleDefinitionState $;

        public Builder() {
            $ = new ManagedHardwareSecurityModuleRoleDefinitionState();
        }

        public Builder(ManagedHardwareSecurityModuleRoleDefinitionState defaults) {
            $ = new ManagedHardwareSecurityModuleRoleDefinitionState(Objects.requireNonNull(defaults));
        }

        /**
         * @param description Specifies a text description about this KeyVault Role Definition.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description Specifies a text description about this KeyVault Role Definition.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param name The name which should be used for this KeyVault Role Definition. Changing this forces a new KeyVault Role Definition to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name which should be used for this KeyVault Role Definition. Changing this forces a new KeyVault Role Definition to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param permissions One or more `permission` blocks as defined below.
         * 
         * @return builder
         * 
         */
        public Builder permissions(@Nullable Output<List<ManagedHardwareSecurityModuleRoleDefinitionPermissionArgs>> permissions) {
            $.permissions = permissions;
            return this;
        }

        /**
         * @param permissions One or more `permission` blocks as defined below.
         * 
         * @return builder
         * 
         */
        public Builder permissions(List<ManagedHardwareSecurityModuleRoleDefinitionPermissionArgs> permissions) {
            return permissions(Output.of(permissions));
        }

        /**
         * @param permissions One or more `permission` blocks as defined below.
         * 
         * @return builder
         * 
         */
        public Builder permissions(ManagedHardwareSecurityModuleRoleDefinitionPermissionArgs... permissions) {
            return permissions(List.of(permissions));
        }

        public Builder resourceManagerId(@Nullable Output<String> resourceManagerId) {
            $.resourceManagerId = resourceManagerId;
            return this;
        }

        public Builder resourceManagerId(String resourceManagerId) {
            return resourceManagerId(Output.of(resourceManagerId));
        }

        /**
         * @param roleName Specify a name for this KeyVault Role Definition.
         * 
         * @return builder
         * 
         */
        public Builder roleName(@Nullable Output<String> roleName) {
            $.roleName = roleName;
            return this;
        }

        /**
         * @param roleName Specify a name for this KeyVault Role Definition.
         * 
         * @return builder
         * 
         */
        public Builder roleName(String roleName) {
            return roleName(Output.of(roleName));
        }

        /**
         * @param roleType The type of the role definition. Possible values are `AKVBuiltInRole` and `CustomRole`.
         * 
         * @return builder
         * 
         */
        public Builder roleType(@Nullable Output<String> roleType) {
            $.roleType = roleType;
            return this;
        }

        /**
         * @param roleType The type of the role definition. Possible values are `AKVBuiltInRole` and `CustomRole`.
         * 
         * @return builder
         * 
         */
        public Builder roleType(String roleType) {
            return roleType(Output.of(roleType));
        }

        /**
         * @param vaultBaseUrl The base URL of the managed hardware security module resource. Changing this forces a new KeyVault Role Definition to be created.
         * 
         * @return builder
         * 
         */
        public Builder vaultBaseUrl(@Nullable Output<String> vaultBaseUrl) {
            $.vaultBaseUrl = vaultBaseUrl;
            return this;
        }

        /**
         * @param vaultBaseUrl The base URL of the managed hardware security module resource. Changing this forces a new KeyVault Role Definition to be created.
         * 
         * @return builder
         * 
         */
        public Builder vaultBaseUrl(String vaultBaseUrl) {
            return vaultBaseUrl(Output.of(vaultBaseUrl));
        }

        public ManagedHardwareSecurityModuleRoleDefinitionState build() {
            return $;
        }
    }

}
