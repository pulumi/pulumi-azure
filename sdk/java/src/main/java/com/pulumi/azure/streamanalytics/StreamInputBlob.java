// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.streamanalytics;

import com.pulumi.azure.Utilities;
import com.pulumi.azure.streamanalytics.StreamInputBlobArgs;
import com.pulumi.azure.streamanalytics.inputs.StreamInputBlobState;
import com.pulumi.azure.streamanalytics.outputs.StreamInputBlobSerialization;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;

/**
 * Manages a Stream Analytics Stream Input Blob.
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.azure.core.ResourceGroup;
 * import com.pulumi.azure.core.ResourceGroupArgs;
 * import com.pulumi.azure.streamanalytics.StreamanalyticsFunctions;
 * import com.pulumi.azure.streamanalytics.inputs.GetJobArgs;
 * import com.pulumi.azure.storage.Account;
 * import com.pulumi.azure.storage.AccountArgs;
 * import com.pulumi.azure.storage.Container;
 * import com.pulumi.azure.storage.ContainerArgs;
 * import com.pulumi.azure.streamanalytics.StreamInputBlob;
 * import com.pulumi.azure.streamanalytics.StreamInputBlobArgs;
 * import com.pulumi.azure.streamanalytics.inputs.StreamInputBlobSerializationArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var exampleResourceGroup = new ResourceGroup("exampleResourceGroup", ResourceGroupArgs.builder()
 *             .name("example-resources")
 *             .location("West Europe")
 *             .build());
 * 
 *         final var example = StreamanalyticsFunctions.getJob(GetJobArgs.builder()
 *             .name("example-job")
 *             .resourceGroupName(exampleResourceGroup.name())
 *             .build());
 * 
 *         var exampleAccount = new Account("exampleAccount", AccountArgs.builder()
 *             .name("examplestoracc")
 *             .resourceGroupName(exampleResourceGroup.name())
 *             .location(exampleResourceGroup.location())
 *             .accountTier("Standard")
 *             .accountReplicationType("LRS")
 *             .build());
 * 
 *         var exampleContainer = new Container("exampleContainer", ContainerArgs.builder()
 *             .name("example")
 *             .storageAccountName(exampleAccount.name())
 *             .containerAccessType("private")
 *             .build());
 * 
 *         var exampleStreamInputBlob = new StreamInputBlob("exampleStreamInputBlob", StreamInputBlobArgs.builder()
 *             .name("blob-stream-input")
 *             .streamAnalyticsJobName(example.applyValue(getJobResult -> getJobResult).applyValue(example -> example.applyValue(getJobResult -> getJobResult.name())))
 *             .resourceGroupName(example.applyValue(getJobResult -> getJobResult).applyValue(example -> example.applyValue(getJobResult -> getJobResult.resourceGroupName())))
 *             .storageAccountName(exampleAccount.name())
 *             .storageAccountKey(exampleAccount.primaryAccessKey())
 *             .storageContainerName(exampleContainer.name())
 *             .pathPattern("some-random-pattern")
 *             .dateFormat("yyyy/MM/dd")
 *             .timeFormat("HH")
 *             .serialization(StreamInputBlobSerializationArgs.builder()
 *                 .type("Json")
 *                 .encoding("UTF8")
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * Stream Analytics Stream Input Blob&#39;s can be imported using the `resource id`, e.g.
 * 
 * ```sh
 * $ pulumi import azure:streamanalytics/streamInputBlob:StreamInputBlob example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.StreamAnalytics/streamingJobs/job1/inputs/input1
 * ```
 * 
 */
@ResourceType(type="azure:streamanalytics/streamInputBlob:StreamInputBlob")
public class StreamInputBlob extends com.pulumi.resources.CustomResource {
    /**
     * The date format. Wherever `{date}` appears in `path_pattern`, the value of this property is used as the date format instead.
     * 
     */
    @Export(name="dateFormat", refs={String.class}, tree="[0]")
    private Output<String> dateFormat;

    /**
     * @return The date format. Wherever `{date}` appears in `path_pattern`, the value of this property is used as the date format instead.
     * 
     */
    public Output<String> dateFormat() {
        return this.dateFormat;
    }
    /**
     * The name of the Stream Input Blob. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The name of the Stream Input Blob. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The blob path pattern. Not a regular expression. It represents a pattern against which blob names will be matched to determine whether or not they should be included as input or output to the job.
     * 
     */
    @Export(name="pathPattern", refs={String.class}, tree="[0]")
    private Output<String> pathPattern;

    /**
     * @return The blob path pattern. Not a regular expression. It represents a pattern against which blob names will be matched to determine whether or not they should be included as input or output to the job.
     * 
     */
    public Output<String> pathPattern() {
        return this.pathPattern;
    }
    /**
     * The name of the Resource Group where the Stream Analytics Job exists. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="resourceGroupName", refs={String.class}, tree="[0]")
    private Output<String> resourceGroupName;

    /**
     * @return The name of the Resource Group where the Stream Analytics Job exists. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }
    /**
     * A `serialization` block as defined below.
     * 
     */
    @Export(name="serialization", refs={StreamInputBlobSerialization.class}, tree="[0]")
    private Output<StreamInputBlobSerialization> serialization;

    /**
     * @return A `serialization` block as defined below.
     * 
     */
    public Output<StreamInputBlobSerialization> serialization() {
        return this.serialization;
    }
    /**
     * The Access Key which should be used to connect to this Storage Account.
     * 
     */
    @Export(name="storageAccountKey", refs={String.class}, tree="[0]")
    private Output<String> storageAccountKey;

    /**
     * @return The Access Key which should be used to connect to this Storage Account.
     * 
     */
    public Output<String> storageAccountKey() {
        return this.storageAccountKey;
    }
    /**
     * The name of the Storage Account.
     * 
     */
    @Export(name="storageAccountName", refs={String.class}, tree="[0]")
    private Output<String> storageAccountName;

    /**
     * @return The name of the Storage Account.
     * 
     */
    public Output<String> storageAccountName() {
        return this.storageAccountName;
    }
    /**
     * The name of the Container within the Storage Account.
     * 
     */
    @Export(name="storageContainerName", refs={String.class}, tree="[0]")
    private Output<String> storageContainerName;

    /**
     * @return The name of the Container within the Storage Account.
     * 
     */
    public Output<String> storageContainerName() {
        return this.storageContainerName;
    }
    /**
     * The name of the Stream Analytics Job. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="streamAnalyticsJobName", refs={String.class}, tree="[0]")
    private Output<String> streamAnalyticsJobName;

    /**
     * @return The name of the Stream Analytics Job. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> streamAnalyticsJobName() {
        return this.streamAnalyticsJobName;
    }
    /**
     * The time format. Wherever `{time}` appears in `path_pattern`, the value of this property is used as the time format instead.
     * 
     */
    @Export(name="timeFormat", refs={String.class}, tree="[0]")
    private Output<String> timeFormat;

    /**
     * @return The time format. Wherever `{time}` appears in `path_pattern`, the value of this property is used as the time format instead.
     * 
     */
    public Output<String> timeFormat() {
        return this.timeFormat;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public StreamInputBlob(java.lang.String name) {
        this(name, StreamInputBlobArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public StreamInputBlob(java.lang.String name, StreamInputBlobArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public StreamInputBlob(java.lang.String name, StreamInputBlobArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:streamanalytics/streamInputBlob:StreamInputBlob", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private StreamInputBlob(java.lang.String name, Output<java.lang.String> id, @Nullable StreamInputBlobState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:streamanalytics/streamInputBlob:StreamInputBlob", name, state, makeResourceOptions(options, id), false);
    }

    private static StreamInputBlobArgs makeArgs(StreamInputBlobArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? StreamInputBlobArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .additionalSecretOutputs(List.of(
                "storageAccountKey"
            ))
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static StreamInputBlob get(java.lang.String name, Output<java.lang.String> id, @Nullable StreamInputBlobState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new StreamInputBlob(name, id, state, options);
    }
}
