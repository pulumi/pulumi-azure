// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.loadtest.inputs;

import com.pulumi.azure.loadtest.inputs.LoadTestEncryptionIdentityArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class LoadTestEncryptionArgs extends com.pulumi.resources.ResourceArgs {

    public static final LoadTestEncryptionArgs Empty = new LoadTestEncryptionArgs();

    /**
     * An `identity` block as defined below. Changing this forces a new Load Test to be created.
     * 
     */
    @Import(name="identity", required=true)
    private Output<LoadTestEncryptionIdentityArgs> identity;

    /**
     * @return An `identity` block as defined below. Changing this forces a new Load Test to be created.
     * 
     */
    public Output<LoadTestEncryptionIdentityArgs> identity() {
        return this.identity;
    }

    /**
     * The URI specifying the Key vault and key to be used to encrypt data in this resource. The URI should include the key version. Changing this forces a new Load Test to be created.
     * 
     */
    @Import(name="keyUrl", required=true)
    private Output<String> keyUrl;

    /**
     * @return The URI specifying the Key vault and key to be used to encrypt data in this resource. The URI should include the key version. Changing this forces a new Load Test to be created.
     * 
     */
    public Output<String> keyUrl() {
        return this.keyUrl;
    }

    private LoadTestEncryptionArgs() {}

    private LoadTestEncryptionArgs(LoadTestEncryptionArgs $) {
        this.identity = $.identity;
        this.keyUrl = $.keyUrl;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(LoadTestEncryptionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private LoadTestEncryptionArgs $;

        public Builder() {
            $ = new LoadTestEncryptionArgs();
        }

        public Builder(LoadTestEncryptionArgs defaults) {
            $ = new LoadTestEncryptionArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param identity An `identity` block as defined below. Changing this forces a new Load Test to be created.
         * 
         * @return builder
         * 
         */
        public Builder identity(Output<LoadTestEncryptionIdentityArgs> identity) {
            $.identity = identity;
            return this;
        }

        /**
         * @param identity An `identity` block as defined below. Changing this forces a new Load Test to be created.
         * 
         * @return builder
         * 
         */
        public Builder identity(LoadTestEncryptionIdentityArgs identity) {
            return identity(Output.of(identity));
        }

        /**
         * @param keyUrl The URI specifying the Key vault and key to be used to encrypt data in this resource. The URI should include the key version. Changing this forces a new Load Test to be created.
         * 
         * @return builder
         * 
         */
        public Builder keyUrl(Output<String> keyUrl) {
            $.keyUrl = keyUrl;
            return this;
        }

        /**
         * @param keyUrl The URI specifying the Key vault and key to be used to encrypt data in this resource. The URI should include the key version. Changing this forces a new Load Test to be created.
         * 
         * @return builder
         * 
         */
        public Builder keyUrl(String keyUrl) {
            return keyUrl(Output.of(keyUrl));
        }

        public LoadTestEncryptionArgs build() {
            if ($.identity == null) {
                throw new MissingRequiredPropertyException("LoadTestEncryptionArgs", "identity");
            }
            if ($.keyUrl == null) {
                throw new MissingRequiredPropertyException("LoadTestEncryptionArgs", "keyUrl");
            }
            return $;
        }
    }

}
