// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.storage.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ManagementPolicyRuleFiltersMatchBlobIndexTagArgs extends com.pulumi.resources.ResourceArgs {

    public static final ManagementPolicyRuleFiltersMatchBlobIndexTagArgs Empty = new ManagementPolicyRuleFiltersMatchBlobIndexTagArgs();

    /**
     * The filter tag name used for tag based filtering for blob objects.
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    /**
     * @return The filter tag name used for tag based filtering for blob objects.
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    /**
     * The comparison operator which is used for object comparison and filtering. Possible value is `==`. Defaults to `==`.
     * 
     */
    @Import(name="operation")
    private @Nullable Output<String> operation;

    /**
     * @return The comparison operator which is used for object comparison and filtering. Possible value is `==`. Defaults to `==`.
     * 
     */
    public Optional<Output<String>> operation() {
        return Optional.ofNullable(this.operation);
    }

    /**
     * The filter tag value used for tag based filtering for blob objects.
     * 
     */
    @Import(name="value", required=true)
    private Output<String> value;

    /**
     * @return The filter tag value used for tag based filtering for blob objects.
     * 
     */
    public Output<String> value() {
        return this.value;
    }

    private ManagementPolicyRuleFiltersMatchBlobIndexTagArgs() {}

    private ManagementPolicyRuleFiltersMatchBlobIndexTagArgs(ManagementPolicyRuleFiltersMatchBlobIndexTagArgs $) {
        this.name = $.name;
        this.operation = $.operation;
        this.value = $.value;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ManagementPolicyRuleFiltersMatchBlobIndexTagArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ManagementPolicyRuleFiltersMatchBlobIndexTagArgs $;

        public Builder() {
            $ = new ManagementPolicyRuleFiltersMatchBlobIndexTagArgs();
        }

        public Builder(ManagementPolicyRuleFiltersMatchBlobIndexTagArgs defaults) {
            $ = new ManagementPolicyRuleFiltersMatchBlobIndexTagArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param name The filter tag name used for tag based filtering for blob objects.
         * 
         * @return builder
         * 
         */
        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The filter tag name used for tag based filtering for blob objects.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param operation The comparison operator which is used for object comparison and filtering. Possible value is `==`. Defaults to `==`.
         * 
         * @return builder
         * 
         */
        public Builder operation(@Nullable Output<String> operation) {
            $.operation = operation;
            return this;
        }

        /**
         * @param operation The comparison operator which is used for object comparison and filtering. Possible value is `==`. Defaults to `==`.
         * 
         * @return builder
         * 
         */
        public Builder operation(String operation) {
            return operation(Output.of(operation));
        }

        /**
         * @param value The filter tag value used for tag based filtering for blob objects.
         * 
         * @return builder
         * 
         */
        public Builder value(Output<String> value) {
            $.value = value;
            return this;
        }

        /**
         * @param value The filter tag value used for tag based filtering for blob objects.
         * 
         * @return builder
         * 
         */
        public Builder value(String value) {
            return value(Output.of(value));
        }

        public ManagementPolicyRuleFiltersMatchBlobIndexTagArgs build() {
            if ($.name == null) {
                throw new MissingRequiredPropertyException("ManagementPolicyRuleFiltersMatchBlobIndexTagArgs", "name");
            }
            if ($.value == null) {
                throw new MissingRequiredPropertyException("ManagementPolicyRuleFiltersMatchBlobIndexTagArgs", "value");
            }
            return $;
        }
    }

}
