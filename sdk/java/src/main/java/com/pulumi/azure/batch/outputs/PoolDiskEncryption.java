// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.batch.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class PoolDiskEncryption {
    /**
     * @return On Linux pool, only \&#34;TemporaryDisk\&#34; is supported; on Windows pool, \&#34;OsDisk\&#34; and \&#34;TemporaryDisk\&#34; must be specified.
     * 
     */
    private String diskEncryptionTarget;

    private PoolDiskEncryption() {}
    /**
     * @return On Linux pool, only \&#34;TemporaryDisk\&#34; is supported; on Windows pool, \&#34;OsDisk\&#34; and \&#34;TemporaryDisk\&#34; must be specified.
     * 
     */
    public String diskEncryptionTarget() {
        return this.diskEncryptionTarget;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(PoolDiskEncryption defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String diskEncryptionTarget;
        public Builder() {}
        public Builder(PoolDiskEncryption defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.diskEncryptionTarget = defaults.diskEncryptionTarget;
        }

        @CustomType.Setter
        public Builder diskEncryptionTarget(String diskEncryptionTarget) {
            if (diskEncryptionTarget == null) {
              throw new MissingRequiredPropertyException("PoolDiskEncryption", "diskEncryptionTarget");
            }
            this.diskEncryptionTarget = diskEncryptionTarget;
            return this;
        }
        public PoolDiskEncryption build() {
            final var _resultValue = new PoolDiskEncryption();
            _resultValue.diskEncryptionTarget = diskEncryptionTarget;
            return _resultValue;
        }
    }
}
