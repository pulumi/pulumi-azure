// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.pim.outputs;

import com.pulumi.azure.pim.outputs.GetRoleAssignmentsRoleAssignment;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetRoleAssignmentsResult {
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private @Nullable Boolean limitAtScope;
    /**
     * @return The principal ID.
     * 
     */
    private @Nullable String principalId;
    /**
     * @return A `role_assignments` block as defined below.
     * 
     */
    private List<GetRoleAssignmentsRoleAssignment> roleAssignments;
    private String scope;
    private @Nullable String tenantId;

    private GetRoleAssignmentsResult() {}
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public Optional<Boolean> limitAtScope() {
        return Optional.ofNullable(this.limitAtScope);
    }
    /**
     * @return The principal ID.
     * 
     */
    public Optional<String> principalId() {
        return Optional.ofNullable(this.principalId);
    }
    /**
     * @return A `role_assignments` block as defined below.
     * 
     */
    public List<GetRoleAssignmentsRoleAssignment> roleAssignments() {
        return this.roleAssignments;
    }
    public String scope() {
        return this.scope;
    }
    public Optional<String> tenantId() {
        return Optional.ofNullable(this.tenantId);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetRoleAssignmentsResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String id;
        private @Nullable Boolean limitAtScope;
        private @Nullable String principalId;
        private List<GetRoleAssignmentsRoleAssignment> roleAssignments;
        private String scope;
        private @Nullable String tenantId;
        public Builder() {}
        public Builder(GetRoleAssignmentsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.id = defaults.id;
    	      this.limitAtScope = defaults.limitAtScope;
    	      this.principalId = defaults.principalId;
    	      this.roleAssignments = defaults.roleAssignments;
    	      this.scope = defaults.scope;
    	      this.tenantId = defaults.tenantId;
        }

        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetRoleAssignmentsResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder limitAtScope(@Nullable Boolean limitAtScope) {

            this.limitAtScope = limitAtScope;
            return this;
        }
        @CustomType.Setter
        public Builder principalId(@Nullable String principalId) {

            this.principalId = principalId;
            return this;
        }
        @CustomType.Setter
        public Builder roleAssignments(List<GetRoleAssignmentsRoleAssignment> roleAssignments) {
            if (roleAssignments == null) {
              throw new MissingRequiredPropertyException("GetRoleAssignmentsResult", "roleAssignments");
            }
            this.roleAssignments = roleAssignments;
            return this;
        }
        public Builder roleAssignments(GetRoleAssignmentsRoleAssignment... roleAssignments) {
            return roleAssignments(List.of(roleAssignments));
        }
        @CustomType.Setter
        public Builder scope(String scope) {
            if (scope == null) {
              throw new MissingRequiredPropertyException("GetRoleAssignmentsResult", "scope");
            }
            this.scope = scope;
            return this;
        }
        @CustomType.Setter
        public Builder tenantId(@Nullable String tenantId) {

            this.tenantId = tenantId;
            return this;
        }
        public GetRoleAssignmentsResult build() {
            final var _resultValue = new GetRoleAssignmentsResult();
            _resultValue.id = id;
            _resultValue.limitAtScope = limitAtScope;
            _resultValue.principalId = principalId;
            _resultValue.roleAssignments = roleAssignments;
            _resultValue.scope = scope;
            _resultValue.tenantId = tenantId;
            return _resultValue;
        }
    }
}
