// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.dataprotection.inputs;

import com.pulumi.azure.dataprotection.inputs.BackupPolicyMysqlFlexibleServerDefaultRetentionRuleLifeCycleArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.util.List;
import java.util.Objects;


public final class BackupPolicyMysqlFlexibleServerDefaultRetentionRuleArgs extends com.pulumi.resources.ResourceArgs {

    public static final BackupPolicyMysqlFlexibleServerDefaultRetentionRuleArgs Empty = new BackupPolicyMysqlFlexibleServerDefaultRetentionRuleArgs();

    /**
     * A `life_cycle` block as defined below. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="lifeCycles", required=true)
    private Output<List<BackupPolicyMysqlFlexibleServerDefaultRetentionRuleLifeCycleArgs>> lifeCycles;

    /**
     * @return A `life_cycle` block as defined below. Changing this forces a new resource to be created.
     * 
     */
    public Output<List<BackupPolicyMysqlFlexibleServerDefaultRetentionRuleLifeCycleArgs>> lifeCycles() {
        return this.lifeCycles;
    }

    private BackupPolicyMysqlFlexibleServerDefaultRetentionRuleArgs() {}

    private BackupPolicyMysqlFlexibleServerDefaultRetentionRuleArgs(BackupPolicyMysqlFlexibleServerDefaultRetentionRuleArgs $) {
        this.lifeCycles = $.lifeCycles;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BackupPolicyMysqlFlexibleServerDefaultRetentionRuleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BackupPolicyMysqlFlexibleServerDefaultRetentionRuleArgs $;

        public Builder() {
            $ = new BackupPolicyMysqlFlexibleServerDefaultRetentionRuleArgs();
        }

        public Builder(BackupPolicyMysqlFlexibleServerDefaultRetentionRuleArgs defaults) {
            $ = new BackupPolicyMysqlFlexibleServerDefaultRetentionRuleArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param lifeCycles A `life_cycle` block as defined below. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder lifeCycles(Output<List<BackupPolicyMysqlFlexibleServerDefaultRetentionRuleLifeCycleArgs>> lifeCycles) {
            $.lifeCycles = lifeCycles;
            return this;
        }

        /**
         * @param lifeCycles A `life_cycle` block as defined below. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder lifeCycles(List<BackupPolicyMysqlFlexibleServerDefaultRetentionRuleLifeCycleArgs> lifeCycles) {
            return lifeCycles(Output.of(lifeCycles));
        }

        /**
         * @param lifeCycles A `life_cycle` block as defined below. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder lifeCycles(BackupPolicyMysqlFlexibleServerDefaultRetentionRuleLifeCycleArgs... lifeCycles) {
            return lifeCycles(List.of(lifeCycles));
        }

        public BackupPolicyMysqlFlexibleServerDefaultRetentionRuleArgs build() {
            if ($.lifeCycles == null) {
                throw new MissingRequiredPropertyException("BackupPolicyMysqlFlexibleServerDefaultRetentionRuleArgs", "lifeCycles");
            }
            return $;
        }
    }

}
