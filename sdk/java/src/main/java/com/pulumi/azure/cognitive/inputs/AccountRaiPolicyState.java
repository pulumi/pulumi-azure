// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.cognitive.inputs;

import com.pulumi.azure.cognitive.inputs.AccountRaiPolicyContentFilterArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AccountRaiPolicyState extends com.pulumi.resources.ResourceArgs {

    public static final AccountRaiPolicyState Empty = new AccountRaiPolicyState();

    /**
     * The name of the base policy to use for this RAI Policy. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="basePolicyName")
    private @Nullable Output<String> basePolicyName;

    /**
     * @return The name of the base policy to use for this RAI Policy. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> basePolicyName() {
        return Optional.ofNullable(this.basePolicyName);
    }

    /**
     * The ID of the Cognitive Service Account to which this RAI Policy should be associated. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="cognitiveAccountId")
    private @Nullable Output<String> cognitiveAccountId;

    /**
     * @return The ID of the Cognitive Service Account to which this RAI Policy should be associated. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> cognitiveAccountId() {
        return Optional.ofNullable(this.cognitiveAccountId);
    }

    /**
     * A `content_filter` block as defined below.
     * 
     */
    @Import(name="contentFilters")
    private @Nullable Output<List<AccountRaiPolicyContentFilterArgs>> contentFilters;

    /**
     * @return A `content_filter` block as defined below.
     * 
     */
    public Optional<Output<List<AccountRaiPolicyContentFilterArgs>>> contentFilters() {
        return Optional.ofNullable(this.contentFilters);
    }

    /**
     * The mode of the RAI Policy. Possible values are `Default`, `Deferred`, `Blocking` or `Asynchronous_filter`.
     * 
     */
    @Import(name="mode")
    private @Nullable Output<String> mode;

    /**
     * @return The mode of the RAI Policy. Possible values are `Default`, `Deferred`, `Blocking` or `Asynchronous_filter`.
     * 
     */
    public Optional<Output<String>> mode() {
        return Optional.ofNullable(this.mode);
    }

    /**
     * The name of the Cognitive Service Account RAI Policy. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the Cognitive Service Account RAI Policy. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * A mapping of tags to assign to the resource.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return A mapping of tags to assign to the resource.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private AccountRaiPolicyState() {}

    private AccountRaiPolicyState(AccountRaiPolicyState $) {
        this.basePolicyName = $.basePolicyName;
        this.cognitiveAccountId = $.cognitiveAccountId;
        this.contentFilters = $.contentFilters;
        this.mode = $.mode;
        this.name = $.name;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AccountRaiPolicyState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AccountRaiPolicyState $;

        public Builder() {
            $ = new AccountRaiPolicyState();
        }

        public Builder(AccountRaiPolicyState defaults) {
            $ = new AccountRaiPolicyState(Objects.requireNonNull(defaults));
        }

        /**
         * @param basePolicyName The name of the base policy to use for this RAI Policy. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder basePolicyName(@Nullable Output<String> basePolicyName) {
            $.basePolicyName = basePolicyName;
            return this;
        }

        /**
         * @param basePolicyName The name of the base policy to use for this RAI Policy. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder basePolicyName(String basePolicyName) {
            return basePolicyName(Output.of(basePolicyName));
        }

        /**
         * @param cognitiveAccountId The ID of the Cognitive Service Account to which this RAI Policy should be associated. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder cognitiveAccountId(@Nullable Output<String> cognitiveAccountId) {
            $.cognitiveAccountId = cognitiveAccountId;
            return this;
        }

        /**
         * @param cognitiveAccountId The ID of the Cognitive Service Account to which this RAI Policy should be associated. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder cognitiveAccountId(String cognitiveAccountId) {
            return cognitiveAccountId(Output.of(cognitiveAccountId));
        }

        /**
         * @param contentFilters A `content_filter` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder contentFilters(@Nullable Output<List<AccountRaiPolicyContentFilterArgs>> contentFilters) {
            $.contentFilters = contentFilters;
            return this;
        }

        /**
         * @param contentFilters A `content_filter` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder contentFilters(List<AccountRaiPolicyContentFilterArgs> contentFilters) {
            return contentFilters(Output.of(contentFilters));
        }

        /**
         * @param contentFilters A `content_filter` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder contentFilters(AccountRaiPolicyContentFilterArgs... contentFilters) {
            return contentFilters(List.of(contentFilters));
        }

        /**
         * @param mode The mode of the RAI Policy. Possible values are `Default`, `Deferred`, `Blocking` or `Asynchronous_filter`.
         * 
         * @return builder
         * 
         */
        public Builder mode(@Nullable Output<String> mode) {
            $.mode = mode;
            return this;
        }

        /**
         * @param mode The mode of the RAI Policy. Possible values are `Default`, `Deferred`, `Blocking` or `Asynchronous_filter`.
         * 
         * @return builder
         * 
         */
        public Builder mode(String mode) {
            return mode(Output.of(mode));
        }

        /**
         * @param name The name of the Cognitive Service Account RAI Policy. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the Cognitive Service Account RAI Policy. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param tags A mapping of tags to assign to the resource.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags A mapping of tags to assign to the resource.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public AccountRaiPolicyState build() {
            return $;
        }
    }

}
