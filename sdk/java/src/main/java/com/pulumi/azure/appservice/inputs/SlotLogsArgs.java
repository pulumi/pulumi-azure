// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.appservice.inputs;

import com.pulumi.azure.appservice.inputs.SlotLogsApplicationLogsArgs;
import com.pulumi.azure.appservice.inputs.SlotLogsHttpLogsArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SlotLogsArgs extends com.pulumi.resources.ResourceArgs {

    public static final SlotLogsArgs Empty = new SlotLogsArgs();

    /**
     * An `application_logs` block as defined below.
     * 
     */
    @Import(name="applicationLogs")
    private @Nullable Output<SlotLogsApplicationLogsArgs> applicationLogs;

    /**
     * @return An `application_logs` block as defined below.
     * 
     */
    public Optional<Output<SlotLogsApplicationLogsArgs>> applicationLogs() {
        return Optional.ofNullable(this.applicationLogs);
    }

    /**
     * Should `Detailed error messages` be enabled on this App Service slot? Defaults to `false`.
     * 
     */
    @Import(name="detailedErrorMessagesEnabled")
    private @Nullable Output<Boolean> detailedErrorMessagesEnabled;

    /**
     * @return Should `Detailed error messages` be enabled on this App Service slot? Defaults to `false`.
     * 
     */
    public Optional<Output<Boolean>> detailedErrorMessagesEnabled() {
        return Optional.ofNullable(this.detailedErrorMessagesEnabled);
    }

    /**
     * Should `Failed request tracing` be enabled on this App Service slot? Defaults to `false`.
     * 
     */
    @Import(name="failedRequestTracingEnabled")
    private @Nullable Output<Boolean> failedRequestTracingEnabled;

    /**
     * @return Should `Failed request tracing` be enabled on this App Service slot? Defaults to `false`.
     * 
     */
    public Optional<Output<Boolean>> failedRequestTracingEnabled() {
        return Optional.ofNullable(this.failedRequestTracingEnabled);
    }

    /**
     * An `http_logs` block as defined below.
     * 
     */
    @Import(name="httpLogs")
    private @Nullable Output<SlotLogsHttpLogsArgs> httpLogs;

    /**
     * @return An `http_logs` block as defined below.
     * 
     */
    public Optional<Output<SlotLogsHttpLogsArgs>> httpLogs() {
        return Optional.ofNullable(this.httpLogs);
    }

    private SlotLogsArgs() {}

    private SlotLogsArgs(SlotLogsArgs $) {
        this.applicationLogs = $.applicationLogs;
        this.detailedErrorMessagesEnabled = $.detailedErrorMessagesEnabled;
        this.failedRequestTracingEnabled = $.failedRequestTracingEnabled;
        this.httpLogs = $.httpLogs;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SlotLogsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SlotLogsArgs $;

        public Builder() {
            $ = new SlotLogsArgs();
        }

        public Builder(SlotLogsArgs defaults) {
            $ = new SlotLogsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param applicationLogs An `application_logs` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder applicationLogs(@Nullable Output<SlotLogsApplicationLogsArgs> applicationLogs) {
            $.applicationLogs = applicationLogs;
            return this;
        }

        /**
         * @param applicationLogs An `application_logs` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder applicationLogs(SlotLogsApplicationLogsArgs applicationLogs) {
            return applicationLogs(Output.of(applicationLogs));
        }

        /**
         * @param detailedErrorMessagesEnabled Should `Detailed error messages` be enabled on this App Service slot? Defaults to `false`.
         * 
         * @return builder
         * 
         */
        public Builder detailedErrorMessagesEnabled(@Nullable Output<Boolean> detailedErrorMessagesEnabled) {
            $.detailedErrorMessagesEnabled = detailedErrorMessagesEnabled;
            return this;
        }

        /**
         * @param detailedErrorMessagesEnabled Should `Detailed error messages` be enabled on this App Service slot? Defaults to `false`.
         * 
         * @return builder
         * 
         */
        public Builder detailedErrorMessagesEnabled(Boolean detailedErrorMessagesEnabled) {
            return detailedErrorMessagesEnabled(Output.of(detailedErrorMessagesEnabled));
        }

        /**
         * @param failedRequestTracingEnabled Should `Failed request tracing` be enabled on this App Service slot? Defaults to `false`.
         * 
         * @return builder
         * 
         */
        public Builder failedRequestTracingEnabled(@Nullable Output<Boolean> failedRequestTracingEnabled) {
            $.failedRequestTracingEnabled = failedRequestTracingEnabled;
            return this;
        }

        /**
         * @param failedRequestTracingEnabled Should `Failed request tracing` be enabled on this App Service slot? Defaults to `false`.
         * 
         * @return builder
         * 
         */
        public Builder failedRequestTracingEnabled(Boolean failedRequestTracingEnabled) {
            return failedRequestTracingEnabled(Output.of(failedRequestTracingEnabled));
        }

        /**
         * @param httpLogs An `http_logs` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder httpLogs(@Nullable Output<SlotLogsHttpLogsArgs> httpLogs) {
            $.httpLogs = httpLogs;
            return this;
        }

        /**
         * @param httpLogs An `http_logs` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder httpLogs(SlotLogsHttpLogsArgs httpLogs) {
            return httpLogs(Output.of(httpLogs));
        }

        public SlotLogsArgs build() {
            return $;
        }
    }

}
