// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.healthcare;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class MedtechServiceFhirDestinationArgs extends com.pulumi.resources.ResourceArgs {

    public static final MedtechServiceFhirDestinationArgs Empty = new MedtechServiceFhirDestinationArgs();

    /**
     * Specifies the destination Fhir mappings of the Med Tech Service Fhir Destination.
     * 
     */
    @Import(name="destinationFhirMappingJson", required=true)
    private Output<String> destinationFhirMappingJson;

    /**
     * @return Specifies the destination Fhir mappings of the Med Tech Service Fhir Destination.
     * 
     */
    public Output<String> destinationFhirMappingJson() {
        return this.destinationFhirMappingJson;
    }

    /**
     * Specifies the destination fhir service id of the Med Tech Service Fhir Destination.
     * 
     */
    @Import(name="destinationFhirServiceId", required=true)
    private Output<String> destinationFhirServiceId;

    /**
     * @return Specifies the destination fhir service id of the Med Tech Service Fhir Destination.
     * 
     */
    public Output<String> destinationFhirServiceId() {
        return this.destinationFhirServiceId;
    }

    /**
     * Specifies the destination identity resolution type where the Healthcare Med Tech Service Fhir Destination should be created. Possible values are `Create`, `Lookup`.
     * 
     */
    @Import(name="destinationIdentityResolutionType", required=true)
    private Output<String> destinationIdentityResolutionType;

    /**
     * @return Specifies the destination identity resolution type where the Healthcare Med Tech Service Fhir Destination should be created. Possible values are `Create`, `Lookup`.
     * 
     */
    public Output<String> destinationIdentityResolutionType() {
        return this.destinationIdentityResolutionType;
    }

    /**
     * Specifies the Azure Region where the Healthcare Med Tech Service Fhir Destination should be created. Changing this forces a new Healthcare Med Tech Service Fhir Destination to be created.
     * 
     */
    @Import(name="location")
    private @Nullable Output<String> location;

    /**
     * @return Specifies the Azure Region where the Healthcare Med Tech Service Fhir Destination should be created. Changing this forces a new Healthcare Med Tech Service Fhir Destination to be created.
     * 
     */
    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * Specifies the name of the Healthcare Med Tech Service where the Healthcare Med Tech Service Fhir Destination should exist. Changing this forces a new Healthcare Med Tech Service Fhir Destination to be created.
     * 
     */
    @Import(name="medtechServiceId", required=true)
    private Output<String> medtechServiceId;

    /**
     * @return Specifies the name of the Healthcare Med Tech Service where the Healthcare Med Tech Service Fhir Destination should exist. Changing this forces a new Healthcare Med Tech Service Fhir Destination to be created.
     * 
     */
    public Output<String> medtechServiceId() {
        return this.medtechServiceId;
    }

    /**
     * Specifies the name of the Healthcare Med Tech Service Fhir Destination. Changing this forces a new Healthcare Med Tech Service Fhir Destination to be created.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Specifies the name of the Healthcare Med Tech Service Fhir Destination. Changing this forces a new Healthcare Med Tech Service Fhir Destination to be created.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    private MedtechServiceFhirDestinationArgs() {}

    private MedtechServiceFhirDestinationArgs(MedtechServiceFhirDestinationArgs $) {
        this.destinationFhirMappingJson = $.destinationFhirMappingJson;
        this.destinationFhirServiceId = $.destinationFhirServiceId;
        this.destinationIdentityResolutionType = $.destinationIdentityResolutionType;
        this.location = $.location;
        this.medtechServiceId = $.medtechServiceId;
        this.name = $.name;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(MedtechServiceFhirDestinationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private MedtechServiceFhirDestinationArgs $;

        public Builder() {
            $ = new MedtechServiceFhirDestinationArgs();
        }

        public Builder(MedtechServiceFhirDestinationArgs defaults) {
            $ = new MedtechServiceFhirDestinationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param destinationFhirMappingJson Specifies the destination Fhir mappings of the Med Tech Service Fhir Destination.
         * 
         * @return builder
         * 
         */
        public Builder destinationFhirMappingJson(Output<String> destinationFhirMappingJson) {
            $.destinationFhirMappingJson = destinationFhirMappingJson;
            return this;
        }

        /**
         * @param destinationFhirMappingJson Specifies the destination Fhir mappings of the Med Tech Service Fhir Destination.
         * 
         * @return builder
         * 
         */
        public Builder destinationFhirMappingJson(String destinationFhirMappingJson) {
            return destinationFhirMappingJson(Output.of(destinationFhirMappingJson));
        }

        /**
         * @param destinationFhirServiceId Specifies the destination fhir service id of the Med Tech Service Fhir Destination.
         * 
         * @return builder
         * 
         */
        public Builder destinationFhirServiceId(Output<String> destinationFhirServiceId) {
            $.destinationFhirServiceId = destinationFhirServiceId;
            return this;
        }

        /**
         * @param destinationFhirServiceId Specifies the destination fhir service id of the Med Tech Service Fhir Destination.
         * 
         * @return builder
         * 
         */
        public Builder destinationFhirServiceId(String destinationFhirServiceId) {
            return destinationFhirServiceId(Output.of(destinationFhirServiceId));
        }

        /**
         * @param destinationIdentityResolutionType Specifies the destination identity resolution type where the Healthcare Med Tech Service Fhir Destination should be created. Possible values are `Create`, `Lookup`.
         * 
         * @return builder
         * 
         */
        public Builder destinationIdentityResolutionType(Output<String> destinationIdentityResolutionType) {
            $.destinationIdentityResolutionType = destinationIdentityResolutionType;
            return this;
        }

        /**
         * @param destinationIdentityResolutionType Specifies the destination identity resolution type where the Healthcare Med Tech Service Fhir Destination should be created. Possible values are `Create`, `Lookup`.
         * 
         * @return builder
         * 
         */
        public Builder destinationIdentityResolutionType(String destinationIdentityResolutionType) {
            return destinationIdentityResolutionType(Output.of(destinationIdentityResolutionType));
        }

        /**
         * @param location Specifies the Azure Region where the Healthcare Med Tech Service Fhir Destination should be created. Changing this forces a new Healthcare Med Tech Service Fhir Destination to be created.
         * 
         * @return builder
         * 
         */
        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location Specifies the Azure Region where the Healthcare Med Tech Service Fhir Destination should be created. Changing this forces a new Healthcare Med Tech Service Fhir Destination to be created.
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param medtechServiceId Specifies the name of the Healthcare Med Tech Service where the Healthcare Med Tech Service Fhir Destination should exist. Changing this forces a new Healthcare Med Tech Service Fhir Destination to be created.
         * 
         * @return builder
         * 
         */
        public Builder medtechServiceId(Output<String> medtechServiceId) {
            $.medtechServiceId = medtechServiceId;
            return this;
        }

        /**
         * @param medtechServiceId Specifies the name of the Healthcare Med Tech Service where the Healthcare Med Tech Service Fhir Destination should exist. Changing this forces a new Healthcare Med Tech Service Fhir Destination to be created.
         * 
         * @return builder
         * 
         */
        public Builder medtechServiceId(String medtechServiceId) {
            return medtechServiceId(Output.of(medtechServiceId));
        }

        /**
         * @param name Specifies the name of the Healthcare Med Tech Service Fhir Destination. Changing this forces a new Healthcare Med Tech Service Fhir Destination to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Specifies the name of the Healthcare Med Tech Service Fhir Destination. Changing this forces a new Healthcare Med Tech Service Fhir Destination to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        public MedtechServiceFhirDestinationArgs build() {
            if ($.destinationFhirMappingJson == null) {
                throw new MissingRequiredPropertyException("MedtechServiceFhirDestinationArgs", "destinationFhirMappingJson");
            }
            if ($.destinationFhirServiceId == null) {
                throw new MissingRequiredPropertyException("MedtechServiceFhirDestinationArgs", "destinationFhirServiceId");
            }
            if ($.destinationIdentityResolutionType == null) {
                throw new MissingRequiredPropertyException("MedtechServiceFhirDestinationArgs", "destinationIdentityResolutionType");
            }
            if ($.medtechServiceId == null) {
                throw new MissingRequiredPropertyException("MedtechServiceFhirDestinationArgs", "medtechServiceId");
            }
            return $;
        }
    }

}
