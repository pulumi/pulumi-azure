// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.network.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetPublicIPResult {
    /**
     * @return The allocation method for this IP address. Possible values are `Static` or `Dynamic`.
     * 
     */
    private String allocationMethod;
    /**
     * @return The DDoS protection mode of the public IP.
     * 
     */
    private String ddosProtectionMode;
    /**
     * @return The ID of DDoS protection plan associated with the public IP.
     * 
     */
    private String ddosProtectionPlanId;
    /**
     * @return The label for the Domain Name.
     * 
     */
    private String domainNameLabel;
    /**
     * @return Fully qualified domain name of the A DNS record associated with the public IP. This is the concatenation of the domainNameLabel and the regionalized DNS zone.
     * 
     */
    private String fqdn;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return Specifies the timeout for the TCP idle connection.
     * 
     */
    private Integer idleTimeoutInMinutes;
    /**
     * @return The IP address value that was allocated.
     * 
     */
    private String ipAddress;
    /**
     * @return A mapping of tags to assigned to the resource.
     * 
     */
    private Map<String,String> ipTags;
    /**
     * @return The IP version being used, for example `IPv4` or `IPv6`.
     * 
     */
    private String ipVersion;
    /**
     * @return The region that this public ip exists.
     * 
     */
    private String location;
    private String name;
    private String resourceGroupName;
    /**
     * @return The fully qualified domain name that resolves to this public IP address.
     * 
     */
    private String reverseFqdn;
    /**
     * @return The SKU of the Public IP.
     * 
     */
    private String sku;
    /**
     * @return A mapping of tags to assigned to the resource.
     * 
     */
    private Map<String,String> tags;
    /**
     * @return A list of Availability Zones in which this Public IP is located.
     * 
     */
    private List<String> zones;

    private GetPublicIPResult() {}
    /**
     * @return The allocation method for this IP address. Possible values are `Static` or `Dynamic`.
     * 
     */
    public String allocationMethod() {
        return this.allocationMethod;
    }
    /**
     * @return The DDoS protection mode of the public IP.
     * 
     */
    public String ddosProtectionMode() {
        return this.ddosProtectionMode;
    }
    /**
     * @return The ID of DDoS protection plan associated with the public IP.
     * 
     */
    public String ddosProtectionPlanId() {
        return this.ddosProtectionPlanId;
    }
    /**
     * @return The label for the Domain Name.
     * 
     */
    public String domainNameLabel() {
        return this.domainNameLabel;
    }
    /**
     * @return Fully qualified domain name of the A DNS record associated with the public IP. This is the concatenation of the domainNameLabel and the regionalized DNS zone.
     * 
     */
    public String fqdn() {
        return this.fqdn;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Specifies the timeout for the TCP idle connection.
     * 
     */
    public Integer idleTimeoutInMinutes() {
        return this.idleTimeoutInMinutes;
    }
    /**
     * @return The IP address value that was allocated.
     * 
     */
    public String ipAddress() {
        return this.ipAddress;
    }
    /**
     * @return A mapping of tags to assigned to the resource.
     * 
     */
    public Map<String,String> ipTags() {
        return this.ipTags;
    }
    /**
     * @return The IP version being used, for example `IPv4` or `IPv6`.
     * 
     */
    public String ipVersion() {
        return this.ipVersion;
    }
    /**
     * @return The region that this public ip exists.
     * 
     */
    public String location() {
        return this.location;
    }
    public String name() {
        return this.name;
    }
    public String resourceGroupName() {
        return this.resourceGroupName;
    }
    /**
     * @return The fully qualified domain name that resolves to this public IP address.
     * 
     */
    public String reverseFqdn() {
        return this.reverseFqdn;
    }
    /**
     * @return The SKU of the Public IP.
     * 
     */
    public String sku() {
        return this.sku;
    }
    /**
     * @return A mapping of tags to assigned to the resource.
     * 
     */
    public Map<String,String> tags() {
        return this.tags;
    }
    /**
     * @return A list of Availability Zones in which this Public IP is located.
     * 
     */
    public List<String> zones() {
        return this.zones;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetPublicIPResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String allocationMethod;
        private String ddosProtectionMode;
        private String ddosProtectionPlanId;
        private String domainNameLabel;
        private String fqdn;
        private String id;
        private Integer idleTimeoutInMinutes;
        private String ipAddress;
        private Map<String,String> ipTags;
        private String ipVersion;
        private String location;
        private String name;
        private String resourceGroupName;
        private String reverseFqdn;
        private String sku;
        private Map<String,String> tags;
        private List<String> zones;
        public Builder() {}
        public Builder(GetPublicIPResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.allocationMethod = defaults.allocationMethod;
    	      this.ddosProtectionMode = defaults.ddosProtectionMode;
    	      this.ddosProtectionPlanId = defaults.ddosProtectionPlanId;
    	      this.domainNameLabel = defaults.domainNameLabel;
    	      this.fqdn = defaults.fqdn;
    	      this.id = defaults.id;
    	      this.idleTimeoutInMinutes = defaults.idleTimeoutInMinutes;
    	      this.ipAddress = defaults.ipAddress;
    	      this.ipTags = defaults.ipTags;
    	      this.ipVersion = defaults.ipVersion;
    	      this.location = defaults.location;
    	      this.name = defaults.name;
    	      this.resourceGroupName = defaults.resourceGroupName;
    	      this.reverseFqdn = defaults.reverseFqdn;
    	      this.sku = defaults.sku;
    	      this.tags = defaults.tags;
    	      this.zones = defaults.zones;
        }

        @CustomType.Setter
        public Builder allocationMethod(String allocationMethod) {
            this.allocationMethod = Objects.requireNonNull(allocationMethod);
            return this;
        }
        @CustomType.Setter
        public Builder ddosProtectionMode(String ddosProtectionMode) {
            this.ddosProtectionMode = Objects.requireNonNull(ddosProtectionMode);
            return this;
        }
        @CustomType.Setter
        public Builder ddosProtectionPlanId(String ddosProtectionPlanId) {
            this.ddosProtectionPlanId = Objects.requireNonNull(ddosProtectionPlanId);
            return this;
        }
        @CustomType.Setter
        public Builder domainNameLabel(String domainNameLabel) {
            this.domainNameLabel = Objects.requireNonNull(domainNameLabel);
            return this;
        }
        @CustomType.Setter
        public Builder fqdn(String fqdn) {
            this.fqdn = Objects.requireNonNull(fqdn);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder idleTimeoutInMinutes(Integer idleTimeoutInMinutes) {
            this.idleTimeoutInMinutes = Objects.requireNonNull(idleTimeoutInMinutes);
            return this;
        }
        @CustomType.Setter
        public Builder ipAddress(String ipAddress) {
            this.ipAddress = Objects.requireNonNull(ipAddress);
            return this;
        }
        @CustomType.Setter
        public Builder ipTags(Map<String,String> ipTags) {
            this.ipTags = Objects.requireNonNull(ipTags);
            return this;
        }
        @CustomType.Setter
        public Builder ipVersion(String ipVersion) {
            this.ipVersion = Objects.requireNonNull(ipVersion);
            return this;
        }
        @CustomType.Setter
        public Builder location(String location) {
            this.location = Objects.requireNonNull(location);
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder resourceGroupName(String resourceGroupName) {
            this.resourceGroupName = Objects.requireNonNull(resourceGroupName);
            return this;
        }
        @CustomType.Setter
        public Builder reverseFqdn(String reverseFqdn) {
            this.reverseFqdn = Objects.requireNonNull(reverseFqdn);
            return this;
        }
        @CustomType.Setter
        public Builder sku(String sku) {
            this.sku = Objects.requireNonNull(sku);
            return this;
        }
        @CustomType.Setter
        public Builder tags(Map<String,String> tags) {
            this.tags = Objects.requireNonNull(tags);
            return this;
        }
        @CustomType.Setter
        public Builder zones(List<String> zones) {
            this.zones = Objects.requireNonNull(zones);
            return this;
        }
        public Builder zones(String... zones) {
            return zones(List.of(zones));
        }
        public GetPublicIPResult build() {
            final var _resultValue = new GetPublicIPResult();
            _resultValue.allocationMethod = allocationMethod;
            _resultValue.ddosProtectionMode = ddosProtectionMode;
            _resultValue.ddosProtectionPlanId = ddosProtectionPlanId;
            _resultValue.domainNameLabel = domainNameLabel;
            _resultValue.fqdn = fqdn;
            _resultValue.id = id;
            _resultValue.idleTimeoutInMinutes = idleTimeoutInMinutes;
            _resultValue.ipAddress = ipAddress;
            _resultValue.ipTags = ipTags;
            _resultValue.ipVersion = ipVersion;
            _resultValue.location = location;
            _resultValue.name = name;
            _resultValue.resourceGroupName = resourceGroupName;
            _resultValue.reverseFqdn = reverseFqdn;
            _resultValue.sku = sku;
            _resultValue.tags = tags;
            _resultValue.zones = zones;
            return _resultValue;
        }
    }
}
