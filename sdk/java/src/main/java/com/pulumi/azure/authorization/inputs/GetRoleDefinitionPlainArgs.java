// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.authorization.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetRoleDefinitionPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetRoleDefinitionPlainArgs Empty = new GetRoleDefinitionPlainArgs();

    /**
     * Specifies the Name of either a built-in or custom Role Definition.
     * 
     */
    @Import(name="name")
    private @Nullable String name;

    /**
     * @return Specifies the Name of either a built-in or custom Role Definition.
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Specifies the ID of the Role Definition as a UUID/GUID.
     * 
     */
    @Import(name="roleDefinitionId")
    private @Nullable String roleDefinitionId;

    /**
     * @return Specifies the ID of the Role Definition as a UUID/GUID.
     * 
     */
    public Optional<String> roleDefinitionId() {
        return Optional.ofNullable(this.roleDefinitionId);
    }

    /**
     * Specifies the Scope at which the Custom Role Definition exists.
     * 
     */
    @Import(name="scope")
    private @Nullable String scope;

    /**
     * @return Specifies the Scope at which the Custom Role Definition exists.
     * 
     */
    public Optional<String> scope() {
        return Optional.ofNullable(this.scope);
    }

    private GetRoleDefinitionPlainArgs() {}

    private GetRoleDefinitionPlainArgs(GetRoleDefinitionPlainArgs $) {
        this.name = $.name;
        this.roleDefinitionId = $.roleDefinitionId;
        this.scope = $.scope;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetRoleDefinitionPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetRoleDefinitionPlainArgs $;

        public Builder() {
            $ = new GetRoleDefinitionPlainArgs();
        }

        public Builder(GetRoleDefinitionPlainArgs defaults) {
            $ = new GetRoleDefinitionPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param name Specifies the Name of either a built-in or custom Role Definition.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable String name) {
            $.name = name;
            return this;
        }

        /**
         * @param roleDefinitionId Specifies the ID of the Role Definition as a UUID/GUID.
         * 
         * @return builder
         * 
         */
        public Builder roleDefinitionId(@Nullable String roleDefinitionId) {
            $.roleDefinitionId = roleDefinitionId;
            return this;
        }

        /**
         * @param scope Specifies the Scope at which the Custom Role Definition exists.
         * 
         * @return builder
         * 
         */
        public Builder scope(@Nullable String scope) {
            $.scope = scope;
            return this;
        }

        public GetRoleDefinitionPlainArgs build() {
            return $;
        }
    }

}
