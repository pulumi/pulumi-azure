// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.devcenter.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ProjectState extends com.pulumi.resources.ResourceArgs {

    public static final ProjectState Empty = new ProjectState();

    /**
     * Description of the project. Changing this forces a new Dev Center Project to be created.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return Description of the project. Changing this forces a new Dev Center Project to be created.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Resource Id of an associated DevCenter. Changing this forces a new Dev Center Project to be created.
     * 
     */
    @Import(name="devCenterId")
    private @Nullable Output<String> devCenterId;

    /**
     * @return Resource Id of an associated DevCenter. Changing this forces a new Dev Center Project to be created.
     * 
     */
    public Optional<Output<String>> devCenterId() {
        return Optional.ofNullable(this.devCenterId);
    }

    /**
     * The URI of the Dev Center resource this project is associated with.
     * 
     */
    @Import(name="devCenterUri")
    private @Nullable Output<String> devCenterUri;

    /**
     * @return The URI of the Dev Center resource this project is associated with.
     * 
     */
    public Optional<Output<String>> devCenterUri() {
        return Optional.ofNullable(this.devCenterUri);
    }

    /**
     * The Azure Region where the Dev Center Project should exist. Changing this forces a new Dev Center Project to be created.
     * 
     */
    @Import(name="location")
    private @Nullable Output<String> location;

    /**
     * @return The Azure Region where the Dev Center Project should exist. Changing this forces a new Dev Center Project to be created.
     * 
     */
    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * When specified, limits the maximum number of Dev Boxes a single user can create across all pools in the project.
     * 
     */
    @Import(name="maximumDevBoxesPerUser")
    private @Nullable Output<Integer> maximumDevBoxesPerUser;

    /**
     * @return When specified, limits the maximum number of Dev Boxes a single user can create across all pools in the project.
     * 
     */
    public Optional<Output<Integer>> maximumDevBoxesPerUser() {
        return Optional.ofNullable(this.maximumDevBoxesPerUser);
    }

    /**
     * Specifies the name of this Dev Center Project. Changing this forces a new Dev Center Project to be created.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Specifies the name of this Dev Center Project. Changing this forces a new Dev Center Project to be created.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Specifies the name of the Resource Group within which this Dev Center Project should exist. Changing this forces a new Dev Center Project to be created.
     * 
     */
    @Import(name="resourceGroupName")
    private @Nullable Output<String> resourceGroupName;

    /**
     * @return Specifies the name of the Resource Group within which this Dev Center Project should exist. Changing this forces a new Dev Center Project to be created.
     * 
     */
    public Optional<Output<String>> resourceGroupName() {
        return Optional.ofNullable(this.resourceGroupName);
    }

    /**
     * A mapping of tags which should be assigned to the Dev Center Project.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return A mapping of tags which should be assigned to the Dev Center Project.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private ProjectState() {}

    private ProjectState(ProjectState $) {
        this.description = $.description;
        this.devCenterId = $.devCenterId;
        this.devCenterUri = $.devCenterUri;
        this.location = $.location;
        this.maximumDevBoxesPerUser = $.maximumDevBoxesPerUser;
        this.name = $.name;
        this.resourceGroupName = $.resourceGroupName;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ProjectState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ProjectState $;

        public Builder() {
            $ = new ProjectState();
        }

        public Builder(ProjectState defaults) {
            $ = new ProjectState(Objects.requireNonNull(defaults));
        }

        /**
         * @param description Description of the project. Changing this forces a new Dev Center Project to be created.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description Description of the project. Changing this forces a new Dev Center Project to be created.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param devCenterId Resource Id of an associated DevCenter. Changing this forces a new Dev Center Project to be created.
         * 
         * @return builder
         * 
         */
        public Builder devCenterId(@Nullable Output<String> devCenterId) {
            $.devCenterId = devCenterId;
            return this;
        }

        /**
         * @param devCenterId Resource Id of an associated DevCenter. Changing this forces a new Dev Center Project to be created.
         * 
         * @return builder
         * 
         */
        public Builder devCenterId(String devCenterId) {
            return devCenterId(Output.of(devCenterId));
        }

        /**
         * @param devCenterUri The URI of the Dev Center resource this project is associated with.
         * 
         * @return builder
         * 
         */
        public Builder devCenterUri(@Nullable Output<String> devCenterUri) {
            $.devCenterUri = devCenterUri;
            return this;
        }

        /**
         * @param devCenterUri The URI of the Dev Center resource this project is associated with.
         * 
         * @return builder
         * 
         */
        public Builder devCenterUri(String devCenterUri) {
            return devCenterUri(Output.of(devCenterUri));
        }

        /**
         * @param location The Azure Region where the Dev Center Project should exist. Changing this forces a new Dev Center Project to be created.
         * 
         * @return builder
         * 
         */
        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location The Azure Region where the Dev Center Project should exist. Changing this forces a new Dev Center Project to be created.
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param maximumDevBoxesPerUser When specified, limits the maximum number of Dev Boxes a single user can create across all pools in the project.
         * 
         * @return builder
         * 
         */
        public Builder maximumDevBoxesPerUser(@Nullable Output<Integer> maximumDevBoxesPerUser) {
            $.maximumDevBoxesPerUser = maximumDevBoxesPerUser;
            return this;
        }

        /**
         * @param maximumDevBoxesPerUser When specified, limits the maximum number of Dev Boxes a single user can create across all pools in the project.
         * 
         * @return builder
         * 
         */
        public Builder maximumDevBoxesPerUser(Integer maximumDevBoxesPerUser) {
            return maximumDevBoxesPerUser(Output.of(maximumDevBoxesPerUser));
        }

        /**
         * @param name Specifies the name of this Dev Center Project. Changing this forces a new Dev Center Project to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Specifies the name of this Dev Center Project. Changing this forces a new Dev Center Project to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param resourceGroupName Specifies the name of the Resource Group within which this Dev Center Project should exist. Changing this forces a new Dev Center Project to be created.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(@Nullable Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName Specifies the name of the Resource Group within which this Dev Center Project should exist. Changing this forces a new Dev Center Project to be created.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        /**
         * @param tags A mapping of tags which should be assigned to the Dev Center Project.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags A mapping of tags which should be assigned to the Dev Center Project.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public ProjectState build() {
            return $;
        }
    }

}
