// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.devcenter;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class EnvironmentTypeArgs extends com.pulumi.resources.ResourceArgs {

    public static final EnvironmentTypeArgs Empty = new EnvironmentTypeArgs();

    /**
     * The ID of the associated Dev Center. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="devCenterId", required=true)
    private Output<String> devCenterId;

    /**
     * @return The ID of the associated Dev Center. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> devCenterId() {
        return this.devCenterId;
    }

    /**
     * Specifies the name of this Dev Center Environment Type. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Specifies the name of this Dev Center Environment Type. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * A mapping of tags which should be assigned to the Dev Center Environment Type.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return A mapping of tags which should be assigned to the Dev Center Environment Type.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private EnvironmentTypeArgs() {}

    private EnvironmentTypeArgs(EnvironmentTypeArgs $) {
        this.devCenterId = $.devCenterId;
        this.name = $.name;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(EnvironmentTypeArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private EnvironmentTypeArgs $;

        public Builder() {
            $ = new EnvironmentTypeArgs();
        }

        public Builder(EnvironmentTypeArgs defaults) {
            $ = new EnvironmentTypeArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param devCenterId The ID of the associated Dev Center. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder devCenterId(Output<String> devCenterId) {
            $.devCenterId = devCenterId;
            return this;
        }

        /**
         * @param devCenterId The ID of the associated Dev Center. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder devCenterId(String devCenterId) {
            return devCenterId(Output.of(devCenterId));
        }

        /**
         * @param name Specifies the name of this Dev Center Environment Type. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Specifies the name of this Dev Center Environment Type. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param tags A mapping of tags which should be assigned to the Dev Center Environment Type.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags A mapping of tags which should be assigned to the Dev Center Environment Type.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public EnvironmentTypeArgs build() {
            if ($.devCenterId == null) {
                throw new MissingRequiredPropertyException("EnvironmentTypeArgs", "devCenterId");
            }
            return $;
        }
    }

}
