// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.network.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetFirewallArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetFirewallArgs Empty = new GetFirewallArgs();

    /**
     * Whether DNS proxy is enabled. It will forward DNS requests to the DNS servers when it is `true`.
     * 
     */
    @Import(name="dnsProxyEnabled")
    private @Nullable Output<Boolean> dnsProxyEnabled;

    /**
     * @return Whether DNS proxy is enabled. It will forward DNS requests to the DNS servers when it is `true`.
     * 
     */
    public Optional<Output<Boolean>> dnsProxyEnabled() {
        return Optional.ofNullable(this.dnsProxyEnabled);
    }

    /**
     * The name of the Azure Firewall.
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    /**
     * @return The name of the Azure Firewall.
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    /**
     * The name of the Resource Group in which the Azure Firewall exists.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    /**
     * @return The name of the Resource Group in which the Azure Firewall exists.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    private GetFirewallArgs() {}

    private GetFirewallArgs(GetFirewallArgs $) {
        this.dnsProxyEnabled = $.dnsProxyEnabled;
        this.name = $.name;
        this.resourceGroupName = $.resourceGroupName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetFirewallArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetFirewallArgs $;

        public Builder() {
            $ = new GetFirewallArgs();
        }

        public Builder(GetFirewallArgs defaults) {
            $ = new GetFirewallArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param dnsProxyEnabled Whether DNS proxy is enabled. It will forward DNS requests to the DNS servers when it is `true`.
         * 
         * @return builder
         * 
         */
        public Builder dnsProxyEnabled(@Nullable Output<Boolean> dnsProxyEnabled) {
            $.dnsProxyEnabled = dnsProxyEnabled;
            return this;
        }

        /**
         * @param dnsProxyEnabled Whether DNS proxy is enabled. It will forward DNS requests to the DNS servers when it is `true`.
         * 
         * @return builder
         * 
         */
        public Builder dnsProxyEnabled(Boolean dnsProxyEnabled) {
            return dnsProxyEnabled(Output.of(dnsProxyEnabled));
        }

        /**
         * @param name The name of the Azure Firewall.
         * 
         * @return builder
         * 
         */
        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the Azure Firewall.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param resourceGroupName The name of the Resource Group in which the Azure Firewall exists.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName The name of the Resource Group in which the Azure Firewall exists.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        public GetFirewallArgs build() {
            $.name = Objects.requireNonNull($.name, "expected parameter 'name' to be non-null");
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            return $;
        }
    }

}
