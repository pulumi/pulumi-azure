// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.network.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.util.Objects;


public final class ApplicationGatewayGlobalArgs extends com.pulumi.resources.ResourceArgs {

    public static final ApplicationGatewayGlobalArgs Empty = new ApplicationGatewayGlobalArgs();

    /**
     * Whether Application Gateway&#39;s Request buffer is enabled.
     * 
     */
    @Import(name="requestBufferingEnabled", required=true)
    private Output<Boolean> requestBufferingEnabled;

    /**
     * @return Whether Application Gateway&#39;s Request buffer is enabled.
     * 
     */
    public Output<Boolean> requestBufferingEnabled() {
        return this.requestBufferingEnabled;
    }

    /**
     * Whether Application Gateway&#39;s Response buffer is enabled.
     * 
     */
    @Import(name="responseBufferingEnabled", required=true)
    private Output<Boolean> responseBufferingEnabled;

    /**
     * @return Whether Application Gateway&#39;s Response buffer is enabled.
     * 
     */
    public Output<Boolean> responseBufferingEnabled() {
        return this.responseBufferingEnabled;
    }

    private ApplicationGatewayGlobalArgs() {}

    private ApplicationGatewayGlobalArgs(ApplicationGatewayGlobalArgs $) {
        this.requestBufferingEnabled = $.requestBufferingEnabled;
        this.responseBufferingEnabled = $.responseBufferingEnabled;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ApplicationGatewayGlobalArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ApplicationGatewayGlobalArgs $;

        public Builder() {
            $ = new ApplicationGatewayGlobalArgs();
        }

        public Builder(ApplicationGatewayGlobalArgs defaults) {
            $ = new ApplicationGatewayGlobalArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param requestBufferingEnabled Whether Application Gateway&#39;s Request buffer is enabled.
         * 
         * @return builder
         * 
         */
        public Builder requestBufferingEnabled(Output<Boolean> requestBufferingEnabled) {
            $.requestBufferingEnabled = requestBufferingEnabled;
            return this;
        }

        /**
         * @param requestBufferingEnabled Whether Application Gateway&#39;s Request buffer is enabled.
         * 
         * @return builder
         * 
         */
        public Builder requestBufferingEnabled(Boolean requestBufferingEnabled) {
            return requestBufferingEnabled(Output.of(requestBufferingEnabled));
        }

        /**
         * @param responseBufferingEnabled Whether Application Gateway&#39;s Response buffer is enabled.
         * 
         * @return builder
         * 
         */
        public Builder responseBufferingEnabled(Output<Boolean> responseBufferingEnabled) {
            $.responseBufferingEnabled = responseBufferingEnabled;
            return this;
        }

        /**
         * @param responseBufferingEnabled Whether Application Gateway&#39;s Response buffer is enabled.
         * 
         * @return builder
         * 
         */
        public Builder responseBufferingEnabled(Boolean responseBufferingEnabled) {
            return responseBufferingEnabled(Output.of(responseBufferingEnabled));
        }

        public ApplicationGatewayGlobalArgs build() {
            if ($.requestBufferingEnabled == null) {
                throw new MissingRequiredPropertyException("ApplicationGatewayGlobalArgs", "requestBufferingEnabled");
            }
            if ($.responseBufferingEnabled == null) {
                throw new MissingRequiredPropertyException("ApplicationGatewayGlobalArgs", "responseBufferingEnabled");
            }
            return $;
        }
    }

}
