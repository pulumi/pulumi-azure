// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.network.outputs;

import com.pulumi.azure.network.outputs.ApplicationGatewaySslProfileSslPolicy;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ApplicationGatewaySslProfile {
    /**
     * @return The ID of the Rewrite Rule Set
     * 
     */
    private @Nullable String id;
    /**
     * @return The name of the SSL Profile that is unique within this Application Gateway.
     * 
     */
    private String name;
    /**
     * @return a `ssl_policy` block as defined below.
     * 
     */
    private @Nullable ApplicationGatewaySslProfileSslPolicy sslPolicy;
    /**
     * @return The name of the Trusted Client Certificate that will be used to authenticate requests from clients.
     * 
     */
    private @Nullable List<String> trustedClientCertificateNames;
    /**
     * @return Should client certificate issuer DN be verified? Defaults to `false`.
     * 
     */
    private @Nullable Boolean verifyClientCertIssuerDn;
    /**
     * @return Specify the method to check client certificate revocation status. Possible value is `OCSP`.
     * 
     */
    private @Nullable String verifyClientCertificateRevocation;

    private ApplicationGatewaySslProfile() {}
    /**
     * @return The ID of the Rewrite Rule Set
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return The name of the SSL Profile that is unique within this Application Gateway.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return a `ssl_policy` block as defined below.
     * 
     */
    public Optional<ApplicationGatewaySslProfileSslPolicy> sslPolicy() {
        return Optional.ofNullable(this.sslPolicy);
    }
    /**
     * @return The name of the Trusted Client Certificate that will be used to authenticate requests from clients.
     * 
     */
    public List<String> trustedClientCertificateNames() {
        return this.trustedClientCertificateNames == null ? List.of() : this.trustedClientCertificateNames;
    }
    /**
     * @return Should client certificate issuer DN be verified? Defaults to `false`.
     * 
     */
    public Optional<Boolean> verifyClientCertIssuerDn() {
        return Optional.ofNullable(this.verifyClientCertIssuerDn);
    }
    /**
     * @return Specify the method to check client certificate revocation status. Possible value is `OCSP`.
     * 
     */
    public Optional<String> verifyClientCertificateRevocation() {
        return Optional.ofNullable(this.verifyClientCertificateRevocation);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ApplicationGatewaySslProfile defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String id;
        private String name;
        private @Nullable ApplicationGatewaySslProfileSslPolicy sslPolicy;
        private @Nullable List<String> trustedClientCertificateNames;
        private @Nullable Boolean verifyClientCertIssuerDn;
        private @Nullable String verifyClientCertificateRevocation;
        public Builder() {}
        public Builder(ApplicationGatewaySslProfile defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.sslPolicy = defaults.sslPolicy;
    	      this.trustedClientCertificateNames = defaults.trustedClientCertificateNames;
    	      this.verifyClientCertIssuerDn = defaults.verifyClientCertIssuerDn;
    	      this.verifyClientCertificateRevocation = defaults.verifyClientCertificateRevocation;
        }

        @CustomType.Setter
        public Builder id(@Nullable String id) {

            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("ApplicationGatewaySslProfile", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder sslPolicy(@Nullable ApplicationGatewaySslProfileSslPolicy sslPolicy) {

            this.sslPolicy = sslPolicy;
            return this;
        }
        @CustomType.Setter
        public Builder trustedClientCertificateNames(@Nullable List<String> trustedClientCertificateNames) {

            this.trustedClientCertificateNames = trustedClientCertificateNames;
            return this;
        }
        public Builder trustedClientCertificateNames(String... trustedClientCertificateNames) {
            return trustedClientCertificateNames(List.of(trustedClientCertificateNames));
        }
        @CustomType.Setter
        public Builder verifyClientCertIssuerDn(@Nullable Boolean verifyClientCertIssuerDn) {

            this.verifyClientCertIssuerDn = verifyClientCertIssuerDn;
            return this;
        }
        @CustomType.Setter
        public Builder verifyClientCertificateRevocation(@Nullable String verifyClientCertificateRevocation) {

            this.verifyClientCertificateRevocation = verifyClientCertificateRevocation;
            return this;
        }
        public ApplicationGatewaySslProfile build() {
            final var _resultValue = new ApplicationGatewaySslProfile();
            _resultValue.id = id;
            _resultValue.name = name;
            _resultValue.sslPolicy = sslPolicy;
            _resultValue.trustedClientCertificateNames = trustedClientCertificateNames;
            _resultValue.verifyClientCertIssuerDn = verifyClientCertIssuerDn;
            _resultValue.verifyClientCertificateRevocation = verifyClientCertificateRevocation;
            return _resultValue;
        }
    }
}
