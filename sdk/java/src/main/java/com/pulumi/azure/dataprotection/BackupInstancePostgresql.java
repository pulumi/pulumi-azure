// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.dataprotection;

import com.pulumi.azure.Utilities;
import com.pulumi.azure.dataprotection.BackupInstancePostgresqlArgs;
import com.pulumi.azure.dataprotection.inputs.BackupInstancePostgresqlState;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Manages a Backup Instance to back up PostgreSQL.
 * 
 * &gt; **Note:** Before using this resource, there are some prerequisite permissions for configure backup and restore. See more details from https://docs.microsoft.com/azure/backup/backup-azure-database-postgresql#prerequisite-permissions-for-configure-backup-and-restore.
 * 
 * ## Example Usage
 * 
 * ## Import
 * 
 * Backup Instance PostgreSQL can be imported using the `resource id`, e.g.
 * 
 * ```sh
 *  $ pulumi import azure:dataprotection/backupInstancePostgresql:BackupInstancePostgresql example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.DataProtection/backupVaults/vault1/backupInstances/backupInstance1
 * ```
 * 
 */
@ResourceType(type="azure:dataprotection/backupInstancePostgresql:BackupInstancePostgresql")
public class BackupInstancePostgresql extends com.pulumi.resources.CustomResource {
    /**
     * The ID of the Backup Policy.
     * 
     */
    @Export(name="backupPolicyId", type=String.class, parameters={})
    private Output<String> backupPolicyId;

    /**
     * @return The ID of the Backup Policy.
     * 
     */
    public Output<String> backupPolicyId() {
        return this.backupPolicyId;
    }
    /**
     * The ID or versionless ID of the key vault secret which stores the connection string of the database.
     * 
     */
    @Export(name="databaseCredentialKeyVaultSecretId", type=String.class, parameters={})
    private Output</* @Nullable */ String> databaseCredentialKeyVaultSecretId;

    /**
     * @return The ID or versionless ID of the key vault secret which stores the connection string of the database.
     * 
     */
    public Output<Optional<String>> databaseCredentialKeyVaultSecretId() {
        return Codegen.optional(this.databaseCredentialKeyVaultSecretId);
    }
    /**
     * The ID of the source database. Changing this forces a new Backup Instance PostgreSQL to be created.
     * 
     */
    @Export(name="databaseId", type=String.class, parameters={})
    private Output<String> databaseId;

    /**
     * @return The ID of the source database. Changing this forces a new Backup Instance PostgreSQL to be created.
     * 
     */
    public Output<String> databaseId() {
        return this.databaseId;
    }
    /**
     * The location of the source database. Changing this forces a new Backup Instance PostgreSQL to be created.
     * 
     */
    @Export(name="location", type=String.class, parameters={})
    private Output<String> location;

    /**
     * @return The location of the source database. Changing this forces a new Backup Instance PostgreSQL to be created.
     * 
     */
    public Output<String> location() {
        return this.location;
    }
    /**
     * The name which should be used for this Backup Instance PostgreSQL. Changing this forces a new Backup Instance PostgreSQL to be created.
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return The name which should be used for this Backup Instance PostgreSQL. Changing this forces a new Backup Instance PostgreSQL to be created.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The ID of the Backup Vault within which the PostgreSQL Backup Instance should exist. Changing this forces a new Backup Instance PostgreSQL to be created.
     * 
     */
    @Export(name="vaultId", type=String.class, parameters={})
    private Output<String> vaultId;

    /**
     * @return The ID of the Backup Vault within which the PostgreSQL Backup Instance should exist. Changing this forces a new Backup Instance PostgreSQL to be created.
     * 
     */
    public Output<String> vaultId() {
        return this.vaultId;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public BackupInstancePostgresql(String name) {
        this(name, BackupInstancePostgresqlArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public BackupInstancePostgresql(String name, BackupInstancePostgresqlArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public BackupInstancePostgresql(String name, BackupInstancePostgresqlArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:dataprotection/backupInstancePostgresql:BackupInstancePostgresql", name, args == null ? BackupInstancePostgresqlArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private BackupInstancePostgresql(String name, Output<String> id, @Nullable BackupInstancePostgresqlState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:dataprotection/backupInstancePostgresql:BackupInstancePostgresql", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static BackupInstancePostgresql get(String name, Output<String> id, @Nullable BackupInstancePostgresqlState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new BackupInstancePostgresql(name, id, state, options);
    }
}
