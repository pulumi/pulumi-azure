// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.dataprotection;

import com.pulumi.azure.Utilities;
import com.pulumi.azure.dataprotection.BackupInstancePostgresqlArgs;
import com.pulumi.azure.dataprotection.inputs.BackupInstancePostgresqlState;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Manages a Backup Instance to back up PostgreSQL.
 * 
 * &gt; **Note:** Before using this resource, there are some prerequisite permissions for configure backup and restore. See more details from https://docs.microsoft.com/azure/backup/backup-azure-database-postgresql#prerequisite-permissions-for-configure-backup-and-restore.
 * 
 * ## Example Usage
 * ```java
 * package generated_program;
 * 
 * import java.util.*;
 * import java.io.*;
 * import java.nio.*;
 * import com.pulumi.*;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         final var current = Output.of(CoreFunctions.getClientConfig());
 * 
 *         var exampleResourceGroup = new ResourceGroup(&#34;exampleResourceGroup&#34;, ResourceGroupArgs.builder()        
 *             .location(&#34;West Europe&#34;)
 *             .build());
 * 
 *         var exampleServer = new Server(&#34;exampleServer&#34;, ServerArgs.builder()        
 *             .location(exampleResourceGroup.location())
 *             .resourceGroupName(exampleResourceGroup.name())
 *             .skuName(&#34;B_Gen5_2&#34;)
 *             .storageMb(5120)
 *             .backupRetentionDays(7)
 *             .geoRedundantBackupEnabled(false)
 *             .autoGrowEnabled(true)
 *             .administratorLogin(&#34;psqladmin&#34;)
 *             .administratorLoginPassword(&#34;H@Sh1CoR3!&#34;)
 *             .version(&#34;9.5&#34;)
 *             .sslEnforcementEnabled(true)
 *             .build());
 * 
 *         var exampleFirewallRule = new FirewallRule(&#34;exampleFirewallRule&#34;, FirewallRuleArgs.builder()        
 *             .resourceGroupName(exampleResourceGroup.name())
 *             .serverName(exampleServer.name())
 *             .startIpAddress(&#34;0.0.0.0&#34;)
 *             .endIpAddress(&#34;0.0.0.0&#34;)
 *             .build());
 * 
 *         var exampleDatabase = new Database(&#34;exampleDatabase&#34;, DatabaseArgs.builder()        
 *             .resourceGroupName(exampleResourceGroup.name())
 *             .serverName(exampleServer.name())
 *             .charset(&#34;UTF8&#34;)
 *             .collation(&#34;English_United States.1252&#34;)
 *             .build());
 * 
 *         var exampleBackupVault = new BackupVault(&#34;exampleBackupVault&#34;, BackupVaultArgs.builder()        
 *             .resourceGroupName(exampleResourceGroup.name())
 *             .location(exampleResourceGroup.location())
 *             .datastoreType(&#34;VaultStore&#34;)
 *             .redundancy(&#34;LocallyRedundant&#34;)
 *             .identity(BackupVaultIdentityArgs.builder()
 *                 .type(&#34;SystemAssigned&#34;)
 *                 .build())
 *             .build());
 * 
 *         var exampleKeyVault = new KeyVault(&#34;exampleKeyVault&#34;, KeyVaultArgs.builder()        
 *             .location(exampleResourceGroup.location())
 *             .resourceGroupName(exampleResourceGroup.name())
 *             .tenantId(current.apply(getClientConfigResult -&gt; getClientConfigResult.tenantId()))
 *             .skuName(&#34;premium&#34;)
 *             .softDeleteRetentionDays(7)
 *             .accessPolicies(            
 *                 KeyVaultAccessPolicyArgs.builder()
 *                     .tenantId(current.apply(getClientConfigResult -&gt; getClientConfigResult.tenantId()))
 *                     .objectId(current.apply(getClientConfigResult -&gt; getClientConfigResult.objectId()))
 *                     .keyPermissions(                    
 *                         &#34;create&#34;,
 *                         &#34;get&#34;)
 *                     .secretPermissions(                    
 *                         &#34;set&#34;,
 *                         &#34;get&#34;,
 *                         &#34;delete&#34;,
 *                         &#34;purge&#34;,
 *                         &#34;recover&#34;)
 *                     .build(),
 *                 KeyVaultAccessPolicyArgs.builder()
 *                     .tenantId(exampleBackupVault.identity().apply(identity -&gt; identity.tenantId()))
 *                     .objectId(exampleBackupVault.identity().apply(identity -&gt; identity.principalId()))
 *                     .keyPermissions(                    
 *                         &#34;create&#34;,
 *                         &#34;get&#34;)
 *                     .secretPermissions(                    
 *                         &#34;set&#34;,
 *                         &#34;get&#34;,
 *                         &#34;delete&#34;,
 *                         &#34;purge&#34;,
 *                         &#34;recover&#34;)
 *                     .build())
 *             .build());
 * 
 *         var exampleSecret = new Secret(&#34;exampleSecret&#34;, SecretArgs.builder()        
 *             .value(Output.tuple(exampleServer.name(), exampleDatabase.name(), exampleServer.name()).apply(values -&gt; {
 *                 var exampleServerName = values.t1;
 *                 var exampleDatabaseName = values.t2;
 *                 var exampleServerName1 = values.t3;
 *                 return String.format(&#34;Server=%s.postgres.database.azure.com;Database=%s;Port=5432;User Id=psqladmin@%s;Password=H@Sh1CoR3!;Ssl Mode=Require;&#34;, exampleServerName,exampleDatabaseName,exampleServerName1);
 *             }))
 *             .keyVaultId(exampleKeyVault.id())
 *             .build());
 * 
 *         var exampleBackupPolicyPostgresql = new BackupPolicyPostgresql(&#34;exampleBackupPolicyPostgresql&#34;, BackupPolicyPostgresqlArgs.builder()        
 *             .resourceGroupName(exampleResourceGroup.name())
 *             .vaultName(exampleBackupVault.name())
 *             .backupRepeatingTimeIntervals(&#34;R/2021-05-23T02:30:00+00:00/P1W&#34;)
 *             .defaultRetentionDuration(&#34;P4M&#34;)
 *             .build());
 * 
 *         var exampleAssignment = new Assignment(&#34;exampleAssignment&#34;, AssignmentArgs.builder()        
 *             .scope(exampleServer.id())
 *             .roleDefinitionName(&#34;Reader&#34;)
 *             .principalId(exampleBackupVault.identity().apply(identity -&gt; identity.principalId()))
 *             .build());
 * 
 *         var exampleBackupInstancePostgresql = new BackupInstancePostgresql(&#34;exampleBackupInstancePostgresql&#34;, BackupInstancePostgresqlArgs.builder()        
 *             .location(exampleResourceGroup.location())
 *             .vaultId(exampleBackupVault.id())
 *             .databaseId(exampleDatabase.id())
 *             .backupPolicyId(exampleBackupPolicyPostgresql.id())
 *             .databaseCredentialKeyVaultSecretId(exampleSecret.versionlessId())
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * Backup Instance PostgreSQL can be imported using the `resource id`, e.g.
 * 
 * ```sh
 *  $ pulumi import azure:dataprotection/backupInstancePostgresql:BackupInstancePostgresql example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.DataProtection/backupVaults/vault1/backupInstances/backupInstance1
 * ```
 * 
 */
@ResourceType(type="azure:dataprotection/backupInstancePostgresql:BackupInstancePostgresql")
public class BackupInstancePostgresql extends com.pulumi.resources.CustomResource {
    /**
     * The ID of the Backup Policy.
     * 
     */
    @Export(name="backupPolicyId", type=String.class, parameters={})
    private Output<String> backupPolicyId;

    /**
     * @return The ID of the Backup Policy.
     * 
     */
    public Output<String> backupPolicyId() {
        return this.backupPolicyId;
    }
    /**
     * The ID or versionless ID of the key vault secret which stores the connection string of the database.
     * 
     */
    @Export(name="databaseCredentialKeyVaultSecretId", type=String.class, parameters={})
    private Output</* @Nullable */ String> databaseCredentialKeyVaultSecretId;

    /**
     * @return The ID or versionless ID of the key vault secret which stores the connection string of the database.
     * 
     */
    public Output<Optional<String>> databaseCredentialKeyVaultSecretId() {
        return Codegen.optional(this.databaseCredentialKeyVaultSecretId);
    }
    /**
     * The ID of the source database. Changing this forces a new Backup Instance PostgreSQL to be created.
     * 
     */
    @Export(name="databaseId", type=String.class, parameters={})
    private Output<String> databaseId;

    /**
     * @return The ID of the source database. Changing this forces a new Backup Instance PostgreSQL to be created.
     * 
     */
    public Output<String> databaseId() {
        return this.databaseId;
    }
    /**
     * The location of the source database. Changing this forces a new Backup Instance PostgreSQL to be created.
     * 
     */
    @Export(name="location", type=String.class, parameters={})
    private Output<String> location;

    /**
     * @return The location of the source database. Changing this forces a new Backup Instance PostgreSQL to be created.
     * 
     */
    public Output<String> location() {
        return this.location;
    }
    /**
     * The name which should be used for this Backup Instance PostgreSQL. Changing this forces a new Backup Instance PostgreSQL to be created.
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return The name which should be used for this Backup Instance PostgreSQL. Changing this forces a new Backup Instance PostgreSQL to be created.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The ID of the Backup Vault within which the PostgreSQL Backup Instance should exist. Changing this forces a new Backup Instance PostgreSQL to be created.
     * 
     */
    @Export(name="vaultId", type=String.class, parameters={})
    private Output<String> vaultId;

    /**
     * @return The ID of the Backup Vault within which the PostgreSQL Backup Instance should exist. Changing this forces a new Backup Instance PostgreSQL to be created.
     * 
     */
    public Output<String> vaultId() {
        return this.vaultId;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public BackupInstancePostgresql(String name) {
        this(name, BackupInstancePostgresqlArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public BackupInstancePostgresql(String name, BackupInstancePostgresqlArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public BackupInstancePostgresql(String name, BackupInstancePostgresqlArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:dataprotection/backupInstancePostgresql:BackupInstancePostgresql", name, args == null ? BackupInstancePostgresqlArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private BackupInstancePostgresql(String name, Output<String> id, @Nullable BackupInstancePostgresqlState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:dataprotection/backupInstancePostgresql:BackupInstancePostgresql", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static BackupInstancePostgresql get(String name, Output<String> id, @Nullable BackupInstancePostgresqlState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new BackupInstancePostgresql(name, id, state, options);
    }
}
