// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.appservice.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class FunctionAppHybridConnectionState extends com.pulumi.resources.ResourceArgs {

    public static final FunctionAppHybridConnectionState Empty = new FunctionAppHybridConnectionState();

    /**
     * The ID of the Function App for this Hybrid Connection. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="functionAppId")
    private @Nullable Output<String> functionAppId;

    /**
     * @return The ID of the Function App for this Hybrid Connection. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> functionAppId() {
        return Optional.ofNullable(this.functionAppId);
    }

    /**
     * The hostname of the endpoint.
     * 
     */
    @Import(name="hostname")
    private @Nullable Output<String> hostname;

    /**
     * @return The hostname of the endpoint.
     * 
     */
    public Optional<Output<String>> hostname() {
        return Optional.ofNullable(this.hostname);
    }

    /**
     * The name of the Relay Namespace.
     * 
     */
    @Import(name="namespaceName")
    private @Nullable Output<String> namespaceName;

    /**
     * @return The name of the Relay Namespace.
     * 
     */
    public Optional<Output<String>> namespaceName() {
        return Optional.ofNullable(this.namespaceName);
    }

    /**
     * The port to use for the endpoint
     * 
     */
    @Import(name="port")
    private @Nullable Output<Integer> port;

    /**
     * @return The port to use for the endpoint
     * 
     */
    public Optional<Output<Integer>> port() {
        return Optional.ofNullable(this.port);
    }

    /**
     * The ID of the Relay Hybrid Connection to use. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="relayId")
    private @Nullable Output<String> relayId;

    /**
     * @return The ID of the Relay Hybrid Connection to use. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> relayId() {
        return Optional.ofNullable(this.relayId);
    }

    /**
     * The name of the Relay in use.
     * 
     */
    @Import(name="relayName")
    private @Nullable Output<String> relayName;

    /**
     * @return The name of the Relay in use.
     * 
     */
    public Optional<Output<String>> relayName() {
        return Optional.ofNullable(this.relayName);
    }

    /**
     * The name of the Relay key with `Send` permission to use. Defaults to `RootManageSharedAccessKey`
     * 
     */
    @Import(name="sendKeyName")
    private @Nullable Output<String> sendKeyName;

    /**
     * @return The name of the Relay key with `Send` permission to use. Defaults to `RootManageSharedAccessKey`
     * 
     */
    public Optional<Output<String>> sendKeyName() {
        return Optional.ofNullable(this.sendKeyName);
    }

    /**
     * The Primary Access Key for the `send_key_name`
     * 
     */
    @Import(name="sendKeyValue")
    private @Nullable Output<String> sendKeyValue;

    /**
     * @return The Primary Access Key for the `send_key_name`
     * 
     */
    public Optional<Output<String>> sendKeyValue() {
        return Optional.ofNullable(this.sendKeyValue);
    }

    /**
     * The Service Bus Namespace.
     * 
     */
    @Import(name="serviceBusNamespace")
    private @Nullable Output<String> serviceBusNamespace;

    /**
     * @return The Service Bus Namespace.
     * 
     */
    public Optional<Output<String>> serviceBusNamespace() {
        return Optional.ofNullable(this.serviceBusNamespace);
    }

    /**
     * The suffix for the endpoint.
     * 
     */
    @Import(name="serviceBusSuffix")
    private @Nullable Output<String> serviceBusSuffix;

    /**
     * @return The suffix for the endpoint.
     * 
     */
    public Optional<Output<String>> serviceBusSuffix() {
        return Optional.ofNullable(this.serviceBusSuffix);
    }

    private FunctionAppHybridConnectionState() {}

    private FunctionAppHybridConnectionState(FunctionAppHybridConnectionState $) {
        this.functionAppId = $.functionAppId;
        this.hostname = $.hostname;
        this.namespaceName = $.namespaceName;
        this.port = $.port;
        this.relayId = $.relayId;
        this.relayName = $.relayName;
        this.sendKeyName = $.sendKeyName;
        this.sendKeyValue = $.sendKeyValue;
        this.serviceBusNamespace = $.serviceBusNamespace;
        this.serviceBusSuffix = $.serviceBusSuffix;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FunctionAppHybridConnectionState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FunctionAppHybridConnectionState $;

        public Builder() {
            $ = new FunctionAppHybridConnectionState();
        }

        public Builder(FunctionAppHybridConnectionState defaults) {
            $ = new FunctionAppHybridConnectionState(Objects.requireNonNull(defaults));
        }

        /**
         * @param functionAppId The ID of the Function App for this Hybrid Connection. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder functionAppId(@Nullable Output<String> functionAppId) {
            $.functionAppId = functionAppId;
            return this;
        }

        /**
         * @param functionAppId The ID of the Function App for this Hybrid Connection. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder functionAppId(String functionAppId) {
            return functionAppId(Output.of(functionAppId));
        }

        /**
         * @param hostname The hostname of the endpoint.
         * 
         * @return builder
         * 
         */
        public Builder hostname(@Nullable Output<String> hostname) {
            $.hostname = hostname;
            return this;
        }

        /**
         * @param hostname The hostname of the endpoint.
         * 
         * @return builder
         * 
         */
        public Builder hostname(String hostname) {
            return hostname(Output.of(hostname));
        }

        /**
         * @param namespaceName The name of the Relay Namespace.
         * 
         * @return builder
         * 
         */
        public Builder namespaceName(@Nullable Output<String> namespaceName) {
            $.namespaceName = namespaceName;
            return this;
        }

        /**
         * @param namespaceName The name of the Relay Namespace.
         * 
         * @return builder
         * 
         */
        public Builder namespaceName(String namespaceName) {
            return namespaceName(Output.of(namespaceName));
        }

        /**
         * @param port The port to use for the endpoint
         * 
         * @return builder
         * 
         */
        public Builder port(@Nullable Output<Integer> port) {
            $.port = port;
            return this;
        }

        /**
         * @param port The port to use for the endpoint
         * 
         * @return builder
         * 
         */
        public Builder port(Integer port) {
            return port(Output.of(port));
        }

        /**
         * @param relayId The ID of the Relay Hybrid Connection to use. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder relayId(@Nullable Output<String> relayId) {
            $.relayId = relayId;
            return this;
        }

        /**
         * @param relayId The ID of the Relay Hybrid Connection to use. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder relayId(String relayId) {
            return relayId(Output.of(relayId));
        }

        /**
         * @param relayName The name of the Relay in use.
         * 
         * @return builder
         * 
         */
        public Builder relayName(@Nullable Output<String> relayName) {
            $.relayName = relayName;
            return this;
        }

        /**
         * @param relayName The name of the Relay in use.
         * 
         * @return builder
         * 
         */
        public Builder relayName(String relayName) {
            return relayName(Output.of(relayName));
        }

        /**
         * @param sendKeyName The name of the Relay key with `Send` permission to use. Defaults to `RootManageSharedAccessKey`
         * 
         * @return builder
         * 
         */
        public Builder sendKeyName(@Nullable Output<String> sendKeyName) {
            $.sendKeyName = sendKeyName;
            return this;
        }

        /**
         * @param sendKeyName The name of the Relay key with `Send` permission to use. Defaults to `RootManageSharedAccessKey`
         * 
         * @return builder
         * 
         */
        public Builder sendKeyName(String sendKeyName) {
            return sendKeyName(Output.of(sendKeyName));
        }

        /**
         * @param sendKeyValue The Primary Access Key for the `send_key_name`
         * 
         * @return builder
         * 
         */
        public Builder sendKeyValue(@Nullable Output<String> sendKeyValue) {
            $.sendKeyValue = sendKeyValue;
            return this;
        }

        /**
         * @param sendKeyValue The Primary Access Key for the `send_key_name`
         * 
         * @return builder
         * 
         */
        public Builder sendKeyValue(String sendKeyValue) {
            return sendKeyValue(Output.of(sendKeyValue));
        }

        /**
         * @param serviceBusNamespace The Service Bus Namespace.
         * 
         * @return builder
         * 
         */
        public Builder serviceBusNamespace(@Nullable Output<String> serviceBusNamespace) {
            $.serviceBusNamespace = serviceBusNamespace;
            return this;
        }

        /**
         * @param serviceBusNamespace The Service Bus Namespace.
         * 
         * @return builder
         * 
         */
        public Builder serviceBusNamespace(String serviceBusNamespace) {
            return serviceBusNamespace(Output.of(serviceBusNamespace));
        }

        /**
         * @param serviceBusSuffix The suffix for the endpoint.
         * 
         * @return builder
         * 
         */
        public Builder serviceBusSuffix(@Nullable Output<String> serviceBusSuffix) {
            $.serviceBusSuffix = serviceBusSuffix;
            return this;
        }

        /**
         * @param serviceBusSuffix The suffix for the endpoint.
         * 
         * @return builder
         * 
         */
        public Builder serviceBusSuffix(String serviceBusSuffix) {
            return serviceBusSuffix(Output.of(serviceBusSuffix));
        }

        public FunctionAppHybridConnectionState build() {
            return $;
        }
    }

}
