// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.automation.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ConnectionTypeField {
    /**
     * @return Whether to set the isEncrypted flag of the connection field definition.
     * 
     */
    private @Nullable Boolean isEncrypted;
    /**
     * @return Whether to set the isOptional flag of the connection field definition.
     * 
     */
    private @Nullable Boolean isOptional;
    /**
     * @return The name which should be used for this connection field definition.
     * 
     */
    private String name;
    /**
     * @return The type of the connection field definition.
     * 
     */
    private String type;

    private ConnectionTypeField() {}
    /**
     * @return Whether to set the isEncrypted flag of the connection field definition.
     * 
     */
    public Optional<Boolean> isEncrypted() {
        return Optional.ofNullable(this.isEncrypted);
    }
    /**
     * @return Whether to set the isOptional flag of the connection field definition.
     * 
     */
    public Optional<Boolean> isOptional() {
        return Optional.ofNullable(this.isOptional);
    }
    /**
     * @return The name which should be used for this connection field definition.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The type of the connection field definition.
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ConnectionTypeField defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Boolean isEncrypted;
        private @Nullable Boolean isOptional;
        private String name;
        private String type;
        public Builder() {}
        public Builder(ConnectionTypeField defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.isEncrypted = defaults.isEncrypted;
    	      this.isOptional = defaults.isOptional;
    	      this.name = defaults.name;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder isEncrypted(@Nullable Boolean isEncrypted) {

            this.isEncrypted = isEncrypted;
            return this;
        }
        @CustomType.Setter
        public Builder isOptional(@Nullable Boolean isOptional) {

            this.isOptional = isOptional;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("ConnectionTypeField", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            if (type == null) {
              throw new MissingRequiredPropertyException("ConnectionTypeField", "type");
            }
            this.type = type;
            return this;
        }
        public ConnectionTypeField build() {
            final var _resultValue = new ConnectionTypeField();
            _resultValue.isEncrypted = isEncrypted;
            _resultValue.isOptional = isOptional;
            _resultValue.name = name;
            _resultValue.type = type;
            return _resultValue;
        }
    }
}
