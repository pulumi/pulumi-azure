// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.mssql.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class FailoverGroupReadWriteEndpointFailoverPolicyArgs extends com.pulumi.resources.ResourceArgs {

    public static final FailoverGroupReadWriteEndpointFailoverPolicyArgs Empty = new FailoverGroupReadWriteEndpointFailoverPolicyArgs();

    /**
     * The grace period in minutes, before failover with data loss is attempted for the read-write endpoint. Required when `mode` is `Automatic`.
     * 
     */
    @Import(name="graceMinutes")
    private @Nullable Output<Integer> graceMinutes;

    /**
     * @return The grace period in minutes, before failover with data loss is attempted for the read-write endpoint. Required when `mode` is `Automatic`.
     * 
     */
    public Optional<Output<Integer>> graceMinutes() {
        return Optional.ofNullable(this.graceMinutes);
    }

    /**
     * The failover policy of the read-write endpoint for the failover group. Possible values are `Automatic` or `Manual`.
     * 
     */
    @Import(name="mode", required=true)
    private Output<String> mode;

    /**
     * @return The failover policy of the read-write endpoint for the failover group. Possible values are `Automatic` or `Manual`.
     * 
     */
    public Output<String> mode() {
        return this.mode;
    }

    private FailoverGroupReadWriteEndpointFailoverPolicyArgs() {}

    private FailoverGroupReadWriteEndpointFailoverPolicyArgs(FailoverGroupReadWriteEndpointFailoverPolicyArgs $) {
        this.graceMinutes = $.graceMinutes;
        this.mode = $.mode;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FailoverGroupReadWriteEndpointFailoverPolicyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FailoverGroupReadWriteEndpointFailoverPolicyArgs $;

        public Builder() {
            $ = new FailoverGroupReadWriteEndpointFailoverPolicyArgs();
        }

        public Builder(FailoverGroupReadWriteEndpointFailoverPolicyArgs defaults) {
            $ = new FailoverGroupReadWriteEndpointFailoverPolicyArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param graceMinutes The grace period in minutes, before failover with data loss is attempted for the read-write endpoint. Required when `mode` is `Automatic`.
         * 
         * @return builder
         * 
         */
        public Builder graceMinutes(@Nullable Output<Integer> graceMinutes) {
            $.graceMinutes = graceMinutes;
            return this;
        }

        /**
         * @param graceMinutes The grace period in minutes, before failover with data loss is attempted for the read-write endpoint. Required when `mode` is `Automatic`.
         * 
         * @return builder
         * 
         */
        public Builder graceMinutes(Integer graceMinutes) {
            return graceMinutes(Output.of(graceMinutes));
        }

        /**
         * @param mode The failover policy of the read-write endpoint for the failover group. Possible values are `Automatic` or `Manual`.
         * 
         * @return builder
         * 
         */
        public Builder mode(Output<String> mode) {
            $.mode = mode;
            return this;
        }

        /**
         * @param mode The failover policy of the read-write endpoint for the failover group. Possible values are `Automatic` or `Manual`.
         * 
         * @return builder
         * 
         */
        public Builder mode(String mode) {
            return mode(Output.of(mode));
        }

        public FailoverGroupReadWriteEndpointFailoverPolicyArgs build() {
            if ($.mode == null) {
                throw new MissingRequiredPropertyException("FailoverGroupReadWriteEndpointFailoverPolicyArgs", "mode");
            }
            return $;
        }
    }

}
