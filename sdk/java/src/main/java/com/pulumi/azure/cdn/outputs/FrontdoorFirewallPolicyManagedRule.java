// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.cdn.outputs;

import com.pulumi.azure.cdn.outputs.FrontdoorFirewallPolicyManagedRuleExclusion;
import com.pulumi.azure.cdn.outputs.FrontdoorFirewallPolicyManagedRuleOverride;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class FrontdoorFirewallPolicyManagedRule {
    /**
     * @return The action to perform when the managed rule is matched. Possible values are `Allow`, `Block`, `Log`, or `Redirect`.
     * 
     */
    private String action;
    /**
     * @return One or more `exclusion` blocks as defined below.
     * 
     */
    private @Nullable List<FrontdoorFirewallPolicyManagedRuleExclusion> exclusions;
    /**
     * @return One or more `override` blocks as defined below.
     * 
     */
    private @Nullable List<FrontdoorFirewallPolicyManagedRuleOverride> overrides;
    /**
     * @return The name of the managed rule to use with this resource.
     * 
     */
    private String type;
    /**
     * @return The version on the managed rule to use with this resource.
     * 
     */
    private String version;

    private FrontdoorFirewallPolicyManagedRule() {}
    /**
     * @return The action to perform when the managed rule is matched. Possible values are `Allow`, `Block`, `Log`, or `Redirect`.
     * 
     */
    public String action() {
        return this.action;
    }
    /**
     * @return One or more `exclusion` blocks as defined below.
     * 
     */
    public List<FrontdoorFirewallPolicyManagedRuleExclusion> exclusions() {
        return this.exclusions == null ? List.of() : this.exclusions;
    }
    /**
     * @return One or more `override` blocks as defined below.
     * 
     */
    public List<FrontdoorFirewallPolicyManagedRuleOverride> overrides() {
        return this.overrides == null ? List.of() : this.overrides;
    }
    /**
     * @return The name of the managed rule to use with this resource.
     * 
     */
    public String type() {
        return this.type;
    }
    /**
     * @return The version on the managed rule to use with this resource.
     * 
     */
    public String version() {
        return this.version;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(FrontdoorFirewallPolicyManagedRule defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String action;
        private @Nullable List<FrontdoorFirewallPolicyManagedRuleExclusion> exclusions;
        private @Nullable List<FrontdoorFirewallPolicyManagedRuleOverride> overrides;
        private String type;
        private String version;
        public Builder() {}
        public Builder(FrontdoorFirewallPolicyManagedRule defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.action = defaults.action;
    	      this.exclusions = defaults.exclusions;
    	      this.overrides = defaults.overrides;
    	      this.type = defaults.type;
    	      this.version = defaults.version;
        }

        @CustomType.Setter
        public Builder action(String action) {
            this.action = Objects.requireNonNull(action);
            return this;
        }
        @CustomType.Setter
        public Builder exclusions(@Nullable List<FrontdoorFirewallPolicyManagedRuleExclusion> exclusions) {
            this.exclusions = exclusions;
            return this;
        }
        public Builder exclusions(FrontdoorFirewallPolicyManagedRuleExclusion... exclusions) {
            return exclusions(List.of(exclusions));
        }
        @CustomType.Setter
        public Builder overrides(@Nullable List<FrontdoorFirewallPolicyManagedRuleOverride> overrides) {
            this.overrides = overrides;
            return this;
        }
        public Builder overrides(FrontdoorFirewallPolicyManagedRuleOverride... overrides) {
            return overrides(List.of(overrides));
        }
        @CustomType.Setter
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        @CustomType.Setter
        public Builder version(String version) {
            this.version = Objects.requireNonNull(version);
            return this;
        }
        public FrontdoorFirewallPolicyManagedRule build() {
            final var o = new FrontdoorFirewallPolicyManagedRule();
            o.action = action;
            o.exclusions = exclusions;
            o.overrides = overrides;
            o.type = type;
            o.version = version;
            return o;
        }
    }
}
