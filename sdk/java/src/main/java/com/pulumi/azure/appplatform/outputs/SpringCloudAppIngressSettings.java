// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.appplatform.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class SpringCloudAppIngressSettings {
    /**
     * @return Specifies how ingress should communicate with this app backend service. Allowed values are `GRPC` and `Default`. Defaults to `Default`.
     * 
     */
    private @Nullable String backendProtocol;
    /**
     * @return Specifies the ingress read time out in seconds. Defaults to `300`.
     * 
     */
    private @Nullable Integer readTimeoutInSeconds;
    /**
     * @return Specifies the ingress send time out in seconds. Defaults to `60`.
     * 
     */
    private @Nullable Integer sendTimeoutInSeconds;
    /**
     * @return Specifies the type of the affinity, set this to `Cookie` to enable session affinity. Allowed values are `Cookie` and `None`. Defaults to `None`.
     * 
     */
    private @Nullable String sessionAffinity;
    /**
     * @return Specifies the time in seconds until the cookie expires.
     * 
     */
    private @Nullable Integer sessionCookieMaxAge;

    private SpringCloudAppIngressSettings() {}
    /**
     * @return Specifies how ingress should communicate with this app backend service. Allowed values are `GRPC` and `Default`. Defaults to `Default`.
     * 
     */
    public Optional<String> backendProtocol() {
        return Optional.ofNullable(this.backendProtocol);
    }
    /**
     * @return Specifies the ingress read time out in seconds. Defaults to `300`.
     * 
     */
    public Optional<Integer> readTimeoutInSeconds() {
        return Optional.ofNullable(this.readTimeoutInSeconds);
    }
    /**
     * @return Specifies the ingress send time out in seconds. Defaults to `60`.
     * 
     */
    public Optional<Integer> sendTimeoutInSeconds() {
        return Optional.ofNullable(this.sendTimeoutInSeconds);
    }
    /**
     * @return Specifies the type of the affinity, set this to `Cookie` to enable session affinity. Allowed values are `Cookie` and `None`. Defaults to `None`.
     * 
     */
    public Optional<String> sessionAffinity() {
        return Optional.ofNullable(this.sessionAffinity);
    }
    /**
     * @return Specifies the time in seconds until the cookie expires.
     * 
     */
    public Optional<Integer> sessionCookieMaxAge() {
        return Optional.ofNullable(this.sessionCookieMaxAge);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SpringCloudAppIngressSettings defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String backendProtocol;
        private @Nullable Integer readTimeoutInSeconds;
        private @Nullable Integer sendTimeoutInSeconds;
        private @Nullable String sessionAffinity;
        private @Nullable Integer sessionCookieMaxAge;
        public Builder() {}
        public Builder(SpringCloudAppIngressSettings defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.backendProtocol = defaults.backendProtocol;
    	      this.readTimeoutInSeconds = defaults.readTimeoutInSeconds;
    	      this.sendTimeoutInSeconds = defaults.sendTimeoutInSeconds;
    	      this.sessionAffinity = defaults.sessionAffinity;
    	      this.sessionCookieMaxAge = defaults.sessionCookieMaxAge;
        }

        @CustomType.Setter
        public Builder backendProtocol(@Nullable String backendProtocol) {

            this.backendProtocol = backendProtocol;
            return this;
        }
        @CustomType.Setter
        public Builder readTimeoutInSeconds(@Nullable Integer readTimeoutInSeconds) {

            this.readTimeoutInSeconds = readTimeoutInSeconds;
            return this;
        }
        @CustomType.Setter
        public Builder sendTimeoutInSeconds(@Nullable Integer sendTimeoutInSeconds) {

            this.sendTimeoutInSeconds = sendTimeoutInSeconds;
            return this;
        }
        @CustomType.Setter
        public Builder sessionAffinity(@Nullable String sessionAffinity) {

            this.sessionAffinity = sessionAffinity;
            return this;
        }
        @CustomType.Setter
        public Builder sessionCookieMaxAge(@Nullable Integer sessionCookieMaxAge) {

            this.sessionCookieMaxAge = sessionCookieMaxAge;
            return this;
        }
        public SpringCloudAppIngressSettings build() {
            final var _resultValue = new SpringCloudAppIngressSettings();
            _resultValue.backendProtocol = backendProtocol;
            _resultValue.readTimeoutInSeconds = readTimeoutInSeconds;
            _resultValue.sendTimeoutInSeconds = sendTimeoutInSeconds;
            _resultValue.sessionAffinity = sessionAffinity;
            _resultValue.sessionCookieMaxAge = sessionCookieMaxAge;
            return _resultValue;
        }
    }
}
