// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.appservice.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class WindowsWebAppSiteConfigApplicationStack {
    /**
     * @return The Application Stack for the Windows Web App. Possible values include `dotnet`, `dotnetcore`, `node`, `python`, `php`, and `java`.
     * 
     * &gt; **NOTE:** Whilst this property is Optional omitting it can cause unexpected behaviour, in particular for display of settings in the Azure Portal.
     * 
     * &gt; **NOTE:** Windows Web apps can configure multiple `app_stack` properties, it is recommended to always configure this `Optional` value and set it to the primary application stack of your app to ensure correct operation of this resource and display the correct metadata in the Azure Portal.
     * 
     */
    private @Nullable String currentStack;
    /**
     * @return The name of the container to be used. This value is required with `docker_container_tag`.
     * 
     */
    private @Nullable String dockerContainerName;
    /**
     * @deprecated
     * This property has been deprecated and will be removed in a future release of the provider.
     * 
     */
    @Deprecated /* This property has been deprecated and will be removed in a future release of the provider. */
    private @Nullable String dockerContainerRegistry;
    /**
     * @return The tag of the container to be used. This value is required with `docker_container_name`.
     * 
     */
    private @Nullable String dockerContainerTag;
    /**
     * @return The docker image, including tag, to be used. e.g. `azure-app-service/windows/parkingpage:latest`.
     * 
     */
    private @Nullable String dockerImageName;
    /**
     * @return The User Name to use for authentication against the registry to pull the image.
     * 
     * &gt; **NOTE:** `docker_registry_url`, `docker_registry_username`, and `docker_registry_password` replace the use of the `app_settings` values of `DOCKER_REGISTRY_SERVER_URL`, `DOCKER_REGISTRY_SERVER_USERNAME` and `DOCKER_REGISTRY_SERVER_PASSWORD` respectively, these values will be managed by the provider and should not be specified in the `app_settings` map.
     * 
     */
    private @Nullable String dockerRegistryPassword;
    /**
     * @return The URL of the container registry where the `docker_image_name` is located. e.g. `https://index.docker.io` or `https://mcr.microsoft.com`. This value is required with `docker_image_name`.
     * 
     */
    private @Nullable String dockerRegistryUrl;
    /**
     * @return The User Name to use for authentication against the registry to pull the image.
     * 
     */
    private @Nullable String dockerRegistryUsername;
    /**
     * @return The version of .NET to use when `current_stack` is set to `dotnetcore`. Possible values include `v4.0`.
     * 
     */
    private @Nullable String dotnetCoreVersion;
    /**
     * @return The version of .NET to use when `current_stack` is set to `dotnet`. Possible values include `v2.0`,`v3.0`, `v4.0`, `v5.0`, `v6.0` and `v7.0`.
     * 
     * &gt; **NOTE:** The Portal displayed values and the actual underlying API values differ for this setting, as follows:
     * Portal Value | API value
     * :--|--:
     * ASP.NET V3.5 | v2.0
     * ASP.NET V4.8 | v4.0
     * .NET 6 (LTS) | v6.0
     * .NET 7 (STS) | v7.0
     * 
     */
    private @Nullable String dotnetVersion;
    /**
     * @deprecated
     * this property has been deprecated in favour of `tomcat_version` and `java_embedded_server_enabled`
     * 
     */
    @Deprecated /* this property has been deprecated in favour of `tomcat_version` and `java_embedded_server_enabled` */
    private @Nullable String javaContainer;
    /**
     * @deprecated
     * This property has been deprecated in favour of `tomcat_version` and `java_embedded_server_enabled`
     * 
     */
    @Deprecated /* This property has been deprecated in favour of `tomcat_version` and `java_embedded_server_enabled` */
    private @Nullable String javaContainerVersion;
    /**
     * @return Should the Java Embedded Server (Java SE) be used to run the app.
     * 
     */
    private @Nullable Boolean javaEmbeddedServerEnabled;
    /**
     * @return The version of Java to use when `current_stack` is set to `java`.
     * 
     * &gt; **NOTE:** For currently supported versions, please see the official documentation. Some example values include: `1.8`, `1.8.0_322`,  `11`, `11.0.14`, `17` and `17.0.2`
     * 
     */
    private @Nullable String javaVersion;
    /**
     * @return The version of node to use when `current_stack` is set to `node`. Possible values are `~12`, `~14`, `~16`, and `~18`.
     * 
     * &gt; **NOTE:** This property conflicts with `java_version`.
     * 
     */
    private @Nullable String nodeVersion;
    /**
     * @return The version of PHP to use when `current_stack` is set to `php`. Possible values are `7.1`, `7.4` and `Off`.
     * 
     * &gt; **NOTE:** The value `Off` is used to signify latest supported by the service.
     * 
     */
    private @Nullable String phpVersion;
    /**
     * @return Specifies whether this is a Python app. Defaults to `false`.
     * 
     */
    private @Nullable Boolean python;
    /**
     * @deprecated
     * This property is deprecated. Values set are not used by the service.
     * 
     */
    @Deprecated /* This property is deprecated. Values set are not used by the service. */
    private @Nullable String pythonVersion;
    /**
     * @return The version of Tomcat the Java App should use. Conflicts with `java_embedded_server_enabled`
     * 
     * &gt; **NOTE:** See the official documentation for current supported versions.  Some example valuess include: `10.0`, `10.0.20`.
     * 
     */
    private @Nullable String tomcatVersion;

    private WindowsWebAppSiteConfigApplicationStack() {}
    /**
     * @return The Application Stack for the Windows Web App. Possible values include `dotnet`, `dotnetcore`, `node`, `python`, `php`, and `java`.
     * 
     * &gt; **NOTE:** Whilst this property is Optional omitting it can cause unexpected behaviour, in particular for display of settings in the Azure Portal.
     * 
     * &gt; **NOTE:** Windows Web apps can configure multiple `app_stack` properties, it is recommended to always configure this `Optional` value and set it to the primary application stack of your app to ensure correct operation of this resource and display the correct metadata in the Azure Portal.
     * 
     */
    public Optional<String> currentStack() {
        return Optional.ofNullable(this.currentStack);
    }
    /**
     * @return The name of the container to be used. This value is required with `docker_container_tag`.
     * 
     */
    public Optional<String> dockerContainerName() {
        return Optional.ofNullable(this.dockerContainerName);
    }
    /**
     * @deprecated
     * This property has been deprecated and will be removed in a future release of the provider.
     * 
     */
    @Deprecated /* This property has been deprecated and will be removed in a future release of the provider. */
    public Optional<String> dockerContainerRegistry() {
        return Optional.ofNullable(this.dockerContainerRegistry);
    }
    /**
     * @return The tag of the container to be used. This value is required with `docker_container_name`.
     * 
     */
    public Optional<String> dockerContainerTag() {
        return Optional.ofNullable(this.dockerContainerTag);
    }
    /**
     * @return The docker image, including tag, to be used. e.g. `azure-app-service/windows/parkingpage:latest`.
     * 
     */
    public Optional<String> dockerImageName() {
        return Optional.ofNullable(this.dockerImageName);
    }
    /**
     * @return The User Name to use for authentication against the registry to pull the image.
     * 
     * &gt; **NOTE:** `docker_registry_url`, `docker_registry_username`, and `docker_registry_password` replace the use of the `app_settings` values of `DOCKER_REGISTRY_SERVER_URL`, `DOCKER_REGISTRY_SERVER_USERNAME` and `DOCKER_REGISTRY_SERVER_PASSWORD` respectively, these values will be managed by the provider and should not be specified in the `app_settings` map.
     * 
     */
    public Optional<String> dockerRegistryPassword() {
        return Optional.ofNullable(this.dockerRegistryPassword);
    }
    /**
     * @return The URL of the container registry where the `docker_image_name` is located. e.g. `https://index.docker.io` or `https://mcr.microsoft.com`. This value is required with `docker_image_name`.
     * 
     */
    public Optional<String> dockerRegistryUrl() {
        return Optional.ofNullable(this.dockerRegistryUrl);
    }
    /**
     * @return The User Name to use for authentication against the registry to pull the image.
     * 
     */
    public Optional<String> dockerRegistryUsername() {
        return Optional.ofNullable(this.dockerRegistryUsername);
    }
    /**
     * @return The version of .NET to use when `current_stack` is set to `dotnetcore`. Possible values include `v4.0`.
     * 
     */
    public Optional<String> dotnetCoreVersion() {
        return Optional.ofNullable(this.dotnetCoreVersion);
    }
    /**
     * @return The version of .NET to use when `current_stack` is set to `dotnet`. Possible values include `v2.0`,`v3.0`, `v4.0`, `v5.0`, `v6.0` and `v7.0`.
     * 
     * &gt; **NOTE:** The Portal displayed values and the actual underlying API values differ for this setting, as follows:
     * Portal Value | API value
     * :--|--:
     * ASP.NET V3.5 | v2.0
     * ASP.NET V4.8 | v4.0
     * .NET 6 (LTS) | v6.0
     * .NET 7 (STS) | v7.0
     * 
     */
    public Optional<String> dotnetVersion() {
        return Optional.ofNullable(this.dotnetVersion);
    }
    /**
     * @deprecated
     * this property has been deprecated in favour of `tomcat_version` and `java_embedded_server_enabled`
     * 
     */
    @Deprecated /* this property has been deprecated in favour of `tomcat_version` and `java_embedded_server_enabled` */
    public Optional<String> javaContainer() {
        return Optional.ofNullable(this.javaContainer);
    }
    /**
     * @deprecated
     * This property has been deprecated in favour of `tomcat_version` and `java_embedded_server_enabled`
     * 
     */
    @Deprecated /* This property has been deprecated in favour of `tomcat_version` and `java_embedded_server_enabled` */
    public Optional<String> javaContainerVersion() {
        return Optional.ofNullable(this.javaContainerVersion);
    }
    /**
     * @return Should the Java Embedded Server (Java SE) be used to run the app.
     * 
     */
    public Optional<Boolean> javaEmbeddedServerEnabled() {
        return Optional.ofNullable(this.javaEmbeddedServerEnabled);
    }
    /**
     * @return The version of Java to use when `current_stack` is set to `java`.
     * 
     * &gt; **NOTE:** For currently supported versions, please see the official documentation. Some example values include: `1.8`, `1.8.0_322`,  `11`, `11.0.14`, `17` and `17.0.2`
     * 
     */
    public Optional<String> javaVersion() {
        return Optional.ofNullable(this.javaVersion);
    }
    /**
     * @return The version of node to use when `current_stack` is set to `node`. Possible values are `~12`, `~14`, `~16`, and `~18`.
     * 
     * &gt; **NOTE:** This property conflicts with `java_version`.
     * 
     */
    public Optional<String> nodeVersion() {
        return Optional.ofNullable(this.nodeVersion);
    }
    /**
     * @return The version of PHP to use when `current_stack` is set to `php`. Possible values are `7.1`, `7.4` and `Off`.
     * 
     * &gt; **NOTE:** The value `Off` is used to signify latest supported by the service.
     * 
     */
    public Optional<String> phpVersion() {
        return Optional.ofNullable(this.phpVersion);
    }
    /**
     * @return Specifies whether this is a Python app. Defaults to `false`.
     * 
     */
    public Optional<Boolean> python() {
        return Optional.ofNullable(this.python);
    }
    /**
     * @deprecated
     * This property is deprecated. Values set are not used by the service.
     * 
     */
    @Deprecated /* This property is deprecated. Values set are not used by the service. */
    public Optional<String> pythonVersion() {
        return Optional.ofNullable(this.pythonVersion);
    }
    /**
     * @return The version of Tomcat the Java App should use. Conflicts with `java_embedded_server_enabled`
     * 
     * &gt; **NOTE:** See the official documentation for current supported versions.  Some example valuess include: `10.0`, `10.0.20`.
     * 
     */
    public Optional<String> tomcatVersion() {
        return Optional.ofNullable(this.tomcatVersion);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(WindowsWebAppSiteConfigApplicationStack defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String currentStack;
        private @Nullable String dockerContainerName;
        private @Nullable String dockerContainerRegistry;
        private @Nullable String dockerContainerTag;
        private @Nullable String dockerImageName;
        private @Nullable String dockerRegistryPassword;
        private @Nullable String dockerRegistryUrl;
        private @Nullable String dockerRegistryUsername;
        private @Nullable String dotnetCoreVersion;
        private @Nullable String dotnetVersion;
        private @Nullable String javaContainer;
        private @Nullable String javaContainerVersion;
        private @Nullable Boolean javaEmbeddedServerEnabled;
        private @Nullable String javaVersion;
        private @Nullable String nodeVersion;
        private @Nullable String phpVersion;
        private @Nullable Boolean python;
        private @Nullable String pythonVersion;
        private @Nullable String tomcatVersion;
        public Builder() {}
        public Builder(WindowsWebAppSiteConfigApplicationStack defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.currentStack = defaults.currentStack;
    	      this.dockerContainerName = defaults.dockerContainerName;
    	      this.dockerContainerRegistry = defaults.dockerContainerRegistry;
    	      this.dockerContainerTag = defaults.dockerContainerTag;
    	      this.dockerImageName = defaults.dockerImageName;
    	      this.dockerRegistryPassword = defaults.dockerRegistryPassword;
    	      this.dockerRegistryUrl = defaults.dockerRegistryUrl;
    	      this.dockerRegistryUsername = defaults.dockerRegistryUsername;
    	      this.dotnetCoreVersion = defaults.dotnetCoreVersion;
    	      this.dotnetVersion = defaults.dotnetVersion;
    	      this.javaContainer = defaults.javaContainer;
    	      this.javaContainerVersion = defaults.javaContainerVersion;
    	      this.javaEmbeddedServerEnabled = defaults.javaEmbeddedServerEnabled;
    	      this.javaVersion = defaults.javaVersion;
    	      this.nodeVersion = defaults.nodeVersion;
    	      this.phpVersion = defaults.phpVersion;
    	      this.python = defaults.python;
    	      this.pythonVersion = defaults.pythonVersion;
    	      this.tomcatVersion = defaults.tomcatVersion;
        }

        @CustomType.Setter
        public Builder currentStack(@Nullable String currentStack) {
            this.currentStack = currentStack;
            return this;
        }
        @CustomType.Setter
        public Builder dockerContainerName(@Nullable String dockerContainerName) {
            this.dockerContainerName = dockerContainerName;
            return this;
        }
        @CustomType.Setter
        public Builder dockerContainerRegistry(@Nullable String dockerContainerRegistry) {
            this.dockerContainerRegistry = dockerContainerRegistry;
            return this;
        }
        @CustomType.Setter
        public Builder dockerContainerTag(@Nullable String dockerContainerTag) {
            this.dockerContainerTag = dockerContainerTag;
            return this;
        }
        @CustomType.Setter
        public Builder dockerImageName(@Nullable String dockerImageName) {
            this.dockerImageName = dockerImageName;
            return this;
        }
        @CustomType.Setter
        public Builder dockerRegistryPassword(@Nullable String dockerRegistryPassword) {
            this.dockerRegistryPassword = dockerRegistryPassword;
            return this;
        }
        @CustomType.Setter
        public Builder dockerRegistryUrl(@Nullable String dockerRegistryUrl) {
            this.dockerRegistryUrl = dockerRegistryUrl;
            return this;
        }
        @CustomType.Setter
        public Builder dockerRegistryUsername(@Nullable String dockerRegistryUsername) {
            this.dockerRegistryUsername = dockerRegistryUsername;
            return this;
        }
        @CustomType.Setter
        public Builder dotnetCoreVersion(@Nullable String dotnetCoreVersion) {
            this.dotnetCoreVersion = dotnetCoreVersion;
            return this;
        }
        @CustomType.Setter
        public Builder dotnetVersion(@Nullable String dotnetVersion) {
            this.dotnetVersion = dotnetVersion;
            return this;
        }
        @CustomType.Setter
        public Builder javaContainer(@Nullable String javaContainer) {
            this.javaContainer = javaContainer;
            return this;
        }
        @CustomType.Setter
        public Builder javaContainerVersion(@Nullable String javaContainerVersion) {
            this.javaContainerVersion = javaContainerVersion;
            return this;
        }
        @CustomType.Setter
        public Builder javaEmbeddedServerEnabled(@Nullable Boolean javaEmbeddedServerEnabled) {
            this.javaEmbeddedServerEnabled = javaEmbeddedServerEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder javaVersion(@Nullable String javaVersion) {
            this.javaVersion = javaVersion;
            return this;
        }
        @CustomType.Setter
        public Builder nodeVersion(@Nullable String nodeVersion) {
            this.nodeVersion = nodeVersion;
            return this;
        }
        @CustomType.Setter
        public Builder phpVersion(@Nullable String phpVersion) {
            this.phpVersion = phpVersion;
            return this;
        }
        @CustomType.Setter
        public Builder python(@Nullable Boolean python) {
            this.python = python;
            return this;
        }
        @CustomType.Setter
        public Builder pythonVersion(@Nullable String pythonVersion) {
            this.pythonVersion = pythonVersion;
            return this;
        }
        @CustomType.Setter
        public Builder tomcatVersion(@Nullable String tomcatVersion) {
            this.tomcatVersion = tomcatVersion;
            return this;
        }
        public WindowsWebAppSiteConfigApplicationStack build() {
            final var _resultValue = new WindowsWebAppSiteConfigApplicationStack();
            _resultValue.currentStack = currentStack;
            _resultValue.dockerContainerName = dockerContainerName;
            _resultValue.dockerContainerRegistry = dockerContainerRegistry;
            _resultValue.dockerContainerTag = dockerContainerTag;
            _resultValue.dockerImageName = dockerImageName;
            _resultValue.dockerRegistryPassword = dockerRegistryPassword;
            _resultValue.dockerRegistryUrl = dockerRegistryUrl;
            _resultValue.dockerRegistryUsername = dockerRegistryUsername;
            _resultValue.dotnetCoreVersion = dotnetCoreVersion;
            _resultValue.dotnetVersion = dotnetVersion;
            _resultValue.javaContainer = javaContainer;
            _resultValue.javaContainerVersion = javaContainerVersion;
            _resultValue.javaEmbeddedServerEnabled = javaEmbeddedServerEnabled;
            _resultValue.javaVersion = javaVersion;
            _resultValue.nodeVersion = nodeVersion;
            _resultValue.phpVersion = phpVersion;
            _resultValue.python = python;
            _resultValue.pythonVersion = pythonVersion;
            _resultValue.tomcatVersion = tomcatVersion;
            return _resultValue;
        }
    }
}
