// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.network.outputs;

import com.pulumi.azure.network.outputs.GetTrafficManagerProfileDnsConfig;
import com.pulumi.azure.network.outputs.GetTrafficManagerProfileMonitorConfig;
import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetTrafficManagerProfileResult {
    /**
     * @return This block specifies the DNS configuration of the Profile.
     * 
     */
    private final List<GetTrafficManagerProfileDnsConfig> dnsConfigs;
    /**
     * @return The FQDN of the created Profile.
     * 
     */
    private final String fqdn;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private final String id;
    /**
     * @return This block specifies the Endpoint monitoring configuration for the Profile.
     * 
     */
    private final List<GetTrafficManagerProfileMonitorConfig> monitorConfigs;
    /**
     * @return The name of the custom header.
     * 
     */
    private final String name;
    /**
     * @return The status of the profile.
     * 
     */
    private final String profileStatus;
    private final String resourceGroupName;
    /**
     * @return A mapping of tags to assign to the resource.
     * 
     */
    private final @Nullable Map<String,String> tags;
    /**
     * @return Specifies the algorithm used to route traffic.
     * 
     */
    private final String trafficRoutingMethod;
    /**
     * @return Indicates whether Traffic View is enabled for the Traffic Manager profile.
     * 
     */
    private final @Nullable Boolean trafficViewEnabled;

    @CustomType.Constructor
    private GetTrafficManagerProfileResult(
        @CustomType.Parameter("dnsConfigs") List<GetTrafficManagerProfileDnsConfig> dnsConfigs,
        @CustomType.Parameter("fqdn") String fqdn,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("monitorConfigs") List<GetTrafficManagerProfileMonitorConfig> monitorConfigs,
        @CustomType.Parameter("name") String name,
        @CustomType.Parameter("profileStatus") String profileStatus,
        @CustomType.Parameter("resourceGroupName") String resourceGroupName,
        @CustomType.Parameter("tags") @Nullable Map<String,String> tags,
        @CustomType.Parameter("trafficRoutingMethod") String trafficRoutingMethod,
        @CustomType.Parameter("trafficViewEnabled") @Nullable Boolean trafficViewEnabled) {
        this.dnsConfigs = dnsConfigs;
        this.fqdn = fqdn;
        this.id = id;
        this.monitorConfigs = monitorConfigs;
        this.name = name;
        this.profileStatus = profileStatus;
        this.resourceGroupName = resourceGroupName;
        this.tags = tags;
        this.trafficRoutingMethod = trafficRoutingMethod;
        this.trafficViewEnabled = trafficViewEnabled;
    }

    /**
     * @return This block specifies the DNS configuration of the Profile.
     * 
     */
    public List<GetTrafficManagerProfileDnsConfig> dnsConfigs() {
        return this.dnsConfigs;
    }
    /**
     * @return The FQDN of the created Profile.
     * 
     */
    public String fqdn() {
        return this.fqdn;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return This block specifies the Endpoint monitoring configuration for the Profile.
     * 
     */
    public List<GetTrafficManagerProfileMonitorConfig> monitorConfigs() {
        return this.monitorConfigs;
    }
    /**
     * @return The name of the custom header.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The status of the profile.
     * 
     */
    public String profileStatus() {
        return this.profileStatus;
    }
    public String resourceGroupName() {
        return this.resourceGroupName;
    }
    /**
     * @return A mapping of tags to assign to the resource.
     * 
     */
    public Map<String,String> tags() {
        return this.tags == null ? Map.of() : this.tags;
    }
    /**
     * @return Specifies the algorithm used to route traffic.
     * 
     */
    public String trafficRoutingMethod() {
        return this.trafficRoutingMethod;
    }
    /**
     * @return Indicates whether Traffic View is enabled for the Traffic Manager profile.
     * 
     */
    public Optional<Boolean> trafficViewEnabled() {
        return Optional.ofNullable(this.trafficViewEnabled);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetTrafficManagerProfileResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private List<GetTrafficManagerProfileDnsConfig> dnsConfigs;
        private String fqdn;
        private String id;
        private List<GetTrafficManagerProfileMonitorConfig> monitorConfigs;
        private String name;
        private String profileStatus;
        private String resourceGroupName;
        private @Nullable Map<String,String> tags;
        private String trafficRoutingMethod;
        private @Nullable Boolean trafficViewEnabled;

        public Builder() {
    	      // Empty
        }

        public Builder(GetTrafficManagerProfileResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.dnsConfigs = defaults.dnsConfigs;
    	      this.fqdn = defaults.fqdn;
    	      this.id = defaults.id;
    	      this.monitorConfigs = defaults.monitorConfigs;
    	      this.name = defaults.name;
    	      this.profileStatus = defaults.profileStatus;
    	      this.resourceGroupName = defaults.resourceGroupName;
    	      this.tags = defaults.tags;
    	      this.trafficRoutingMethod = defaults.trafficRoutingMethod;
    	      this.trafficViewEnabled = defaults.trafficViewEnabled;
        }

        public Builder dnsConfigs(List<GetTrafficManagerProfileDnsConfig> dnsConfigs) {
            this.dnsConfigs = Objects.requireNonNull(dnsConfigs);
            return this;
        }
        public Builder dnsConfigs(GetTrafficManagerProfileDnsConfig... dnsConfigs) {
            return dnsConfigs(List.of(dnsConfigs));
        }
        public Builder fqdn(String fqdn) {
            this.fqdn = Objects.requireNonNull(fqdn);
            return this;
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder monitorConfigs(List<GetTrafficManagerProfileMonitorConfig> monitorConfigs) {
            this.monitorConfigs = Objects.requireNonNull(monitorConfigs);
            return this;
        }
        public Builder monitorConfigs(GetTrafficManagerProfileMonitorConfig... monitorConfigs) {
            return monitorConfigs(List.of(monitorConfigs));
        }
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        public Builder profileStatus(String profileStatus) {
            this.profileStatus = Objects.requireNonNull(profileStatus);
            return this;
        }
        public Builder resourceGroupName(String resourceGroupName) {
            this.resourceGroupName = Objects.requireNonNull(resourceGroupName);
            return this;
        }
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = tags;
            return this;
        }
        public Builder trafficRoutingMethod(String trafficRoutingMethod) {
            this.trafficRoutingMethod = Objects.requireNonNull(trafficRoutingMethod);
            return this;
        }
        public Builder trafficViewEnabled(@Nullable Boolean trafficViewEnabled) {
            this.trafficViewEnabled = trafficViewEnabled;
            return this;
        }        public GetTrafficManagerProfileResult build() {
            return new GetTrafficManagerProfileResult(dnsConfigs, fqdn, id, monitorConfigs, name, profileStatus, resourceGroupName, tags, trafficRoutingMethod, trafficViewEnabled);
        }
    }
}
