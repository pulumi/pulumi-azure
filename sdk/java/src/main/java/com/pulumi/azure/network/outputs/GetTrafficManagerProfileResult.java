// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.network.outputs;

import com.pulumi.azure.network.outputs.GetTrafficManagerProfileDnsConfig;
import com.pulumi.azure.network.outputs.GetTrafficManagerProfileMonitorConfig;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetTrafficManagerProfileResult {
    /**
     * @return This block specifies the DNS configuration of the Profile.
     * 
     */
    private List<GetTrafficManagerProfileDnsConfig> dnsConfigs;
    /**
     * @return The FQDN of the created Profile.
     * 
     */
    private String fqdn;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return This block specifies the Endpoint monitoring configuration for the Profile.
     * 
     */
    private List<GetTrafficManagerProfileMonitorConfig> monitorConfigs;
    /**
     * @return The name of the custom header.
     * 
     */
    private String name;
    /**
     * @return The status of the profile.
     * 
     */
    private String profileStatus;
    private String resourceGroupName;
    /**
     * @return A mapping of tags to assign to the resource.
     * 
     */
    private @Nullable Map<String,String> tags;
    /**
     * @return Specifies the algorithm used to route traffic.
     * 
     */
    private String trafficRoutingMethod;
    /**
     * @return Indicates whether Traffic View is enabled for the Traffic Manager profile.
     * 
     */
    private @Nullable Boolean trafficViewEnabled;

    private GetTrafficManagerProfileResult() {}
    /**
     * @return This block specifies the DNS configuration of the Profile.
     * 
     */
    public List<GetTrafficManagerProfileDnsConfig> dnsConfigs() {
        return this.dnsConfigs;
    }
    /**
     * @return The FQDN of the created Profile.
     * 
     */
    public String fqdn() {
        return this.fqdn;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return This block specifies the Endpoint monitoring configuration for the Profile.
     * 
     */
    public List<GetTrafficManagerProfileMonitorConfig> monitorConfigs() {
        return this.monitorConfigs;
    }
    /**
     * @return The name of the custom header.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The status of the profile.
     * 
     */
    public String profileStatus() {
        return this.profileStatus;
    }
    public String resourceGroupName() {
        return this.resourceGroupName;
    }
    /**
     * @return A mapping of tags to assign to the resource.
     * 
     */
    public Map<String,String> tags() {
        return this.tags == null ? Map.of() : this.tags;
    }
    /**
     * @return Specifies the algorithm used to route traffic.
     * 
     */
    public String trafficRoutingMethod() {
        return this.trafficRoutingMethod;
    }
    /**
     * @return Indicates whether Traffic View is enabled for the Traffic Manager profile.
     * 
     */
    public Optional<Boolean> trafficViewEnabled() {
        return Optional.ofNullable(this.trafficViewEnabled);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetTrafficManagerProfileResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetTrafficManagerProfileDnsConfig> dnsConfigs;
        private String fqdn;
        private String id;
        private List<GetTrafficManagerProfileMonitorConfig> monitorConfigs;
        private String name;
        private String profileStatus;
        private String resourceGroupName;
        private @Nullable Map<String,String> tags;
        private String trafficRoutingMethod;
        private @Nullable Boolean trafficViewEnabled;
        public Builder() {}
        public Builder(GetTrafficManagerProfileResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.dnsConfigs = defaults.dnsConfigs;
    	      this.fqdn = defaults.fqdn;
    	      this.id = defaults.id;
    	      this.monitorConfigs = defaults.monitorConfigs;
    	      this.name = defaults.name;
    	      this.profileStatus = defaults.profileStatus;
    	      this.resourceGroupName = defaults.resourceGroupName;
    	      this.tags = defaults.tags;
    	      this.trafficRoutingMethod = defaults.trafficRoutingMethod;
    	      this.trafficViewEnabled = defaults.trafficViewEnabled;
        }

        @CustomType.Setter
        public Builder dnsConfigs(List<GetTrafficManagerProfileDnsConfig> dnsConfigs) {
            if (dnsConfigs == null) {
              throw new MissingRequiredPropertyException("GetTrafficManagerProfileResult", "dnsConfigs");
            }
            this.dnsConfigs = dnsConfigs;
            return this;
        }
        public Builder dnsConfigs(GetTrafficManagerProfileDnsConfig... dnsConfigs) {
            return dnsConfigs(List.of(dnsConfigs));
        }
        @CustomType.Setter
        public Builder fqdn(String fqdn) {
            if (fqdn == null) {
              throw new MissingRequiredPropertyException("GetTrafficManagerProfileResult", "fqdn");
            }
            this.fqdn = fqdn;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetTrafficManagerProfileResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder monitorConfigs(List<GetTrafficManagerProfileMonitorConfig> monitorConfigs) {
            if (monitorConfigs == null) {
              throw new MissingRequiredPropertyException("GetTrafficManagerProfileResult", "monitorConfigs");
            }
            this.monitorConfigs = monitorConfigs;
            return this;
        }
        public Builder monitorConfigs(GetTrafficManagerProfileMonitorConfig... monitorConfigs) {
            return monitorConfigs(List.of(monitorConfigs));
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetTrafficManagerProfileResult", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder profileStatus(String profileStatus) {
            if (profileStatus == null) {
              throw new MissingRequiredPropertyException("GetTrafficManagerProfileResult", "profileStatus");
            }
            this.profileStatus = profileStatus;
            return this;
        }
        @CustomType.Setter
        public Builder resourceGroupName(String resourceGroupName) {
            if (resourceGroupName == null) {
              throw new MissingRequiredPropertyException("GetTrafficManagerProfileResult", "resourceGroupName");
            }
            this.resourceGroupName = resourceGroupName;
            return this;
        }
        @CustomType.Setter
        public Builder tags(@Nullable Map<String,String> tags) {

            this.tags = tags;
            return this;
        }
        @CustomType.Setter
        public Builder trafficRoutingMethod(String trafficRoutingMethod) {
            if (trafficRoutingMethod == null) {
              throw new MissingRequiredPropertyException("GetTrafficManagerProfileResult", "trafficRoutingMethod");
            }
            this.trafficRoutingMethod = trafficRoutingMethod;
            return this;
        }
        @CustomType.Setter
        public Builder trafficViewEnabled(@Nullable Boolean trafficViewEnabled) {

            this.trafficViewEnabled = trafficViewEnabled;
            return this;
        }
        public GetTrafficManagerProfileResult build() {
            final var _resultValue = new GetTrafficManagerProfileResult();
            _resultValue.dnsConfigs = dnsConfigs;
            _resultValue.fqdn = fqdn;
            _resultValue.id = id;
            _resultValue.monitorConfigs = monitorConfigs;
            _resultValue.name = name;
            _resultValue.profileStatus = profileStatus;
            _resultValue.resourceGroupName = resourceGroupName;
            _resultValue.tags = tags;
            _resultValue.trafficRoutingMethod = trafficRoutingMethod;
            _resultValue.trafficViewEnabled = trafficViewEnabled;
            return _resultValue;
        }
    }
}
