// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.consumption;

import com.pulumi.azure.Utilities;
import com.pulumi.azure.consumption.BudgetResourceGroupArgs;
import com.pulumi.azure.consumption.inputs.BudgetResourceGroupState;
import com.pulumi.azure.consumption.outputs.BudgetResourceGroupFilter;
import com.pulumi.azure.consumption.outputs.BudgetResourceGroupNotification;
import com.pulumi.azure.consumption.outputs.BudgetResourceGroupTimePeriod;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Double;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Manages a Resource Group Consumption Budget.
 * 
 * ## Example Usage
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.azure.core.ResourceGroup;
 * import com.pulumi.azure.core.ResourceGroupArgs;
 * import com.pulumi.azure.monitoring.ActionGroup;
 * import com.pulumi.azure.monitoring.ActionGroupArgs;
 * import com.pulumi.azure.consumption.BudgetResourceGroup;
 * import com.pulumi.azure.consumption.BudgetResourceGroupArgs;
 * import com.pulumi.azure.consumption.inputs.BudgetResourceGroupTimePeriodArgs;
 * import com.pulumi.azure.consumption.inputs.BudgetResourceGroupFilterArgs;
 * import com.pulumi.azure.consumption.inputs.BudgetResourceGroupNotificationArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var exampleResourceGroup = new ResourceGroup(&#34;exampleResourceGroup&#34;, ResourceGroupArgs.builder()        
 *             .location(&#34;eastus&#34;)
 *             .build());
 * 
 *         var exampleActionGroup = new ActionGroup(&#34;exampleActionGroup&#34;, ActionGroupArgs.builder()        
 *             .resourceGroupName(exampleResourceGroup.name())
 *             .shortName(&#34;example&#34;)
 *             .build());
 * 
 *         var exampleBudgetResourceGroup = new BudgetResourceGroup(&#34;exampleBudgetResourceGroup&#34;, BudgetResourceGroupArgs.builder()        
 *             .resourceGroupId(exampleResourceGroup.id())
 *             .amount(1000)
 *             .timeGrain(&#34;Monthly&#34;)
 *             .timePeriod(BudgetResourceGroupTimePeriodArgs.builder()
 *                 .startDate(&#34;2022-06-01T00:00:00Z&#34;)
 *                 .endDate(&#34;2022-07-01T00:00:00Z&#34;)
 *                 .build())
 *             .filter(BudgetResourceGroupFilterArgs.builder()
 *                 .dimensions(BudgetResourceGroupFilterDimensionArgs.builder()
 *                     .name(&#34;ResourceId&#34;)
 *                     .values(exampleActionGroup.id())
 *                     .build())
 *                 .tags(BudgetResourceGroupFilterTagArgs.builder()
 *                     .name(&#34;foo&#34;)
 *                     .values(                    
 *                         &#34;bar&#34;,
 *                         &#34;baz&#34;)
 *                     .build())
 *                 .build())
 *             .notifications(            
 *                 BudgetResourceGroupNotificationArgs.builder()
 *                     .enabled(true)
 *                     .threshold(90)
 *                     .operator(&#34;EqualTo&#34;)
 *                     .thresholdType(&#34;Forecasted&#34;)
 *                     .contactEmails(                    
 *                         &#34;foo@example.com&#34;,
 *                         &#34;bar@example.com&#34;)
 *                     .contactGroups(exampleActionGroup.id())
 *                     .contactRoles(&#34;Owner&#34;)
 *                     .build(),
 *                 BudgetResourceGroupNotificationArgs.builder()
 *                     .enabled(false)
 *                     .threshold(100)
 *                     .operator(&#34;GreaterThan&#34;)
 *                     .contactEmails(                    
 *                         &#34;foo@example.com&#34;,
 *                         &#34;bar@example.com&#34;)
 *                     .build())
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * Resource Group Consumption Budgets can be imported using the `resource id`, e.g.
 * 
 * ```sh
 *  $ pulumi import azure:consumption/budgetResourceGroup:BudgetResourceGroup example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resourceGroup1/providers/Microsoft.Consumption/budgets/resourceGroup1
 * ```
 * 
 */
@ResourceType(type="azure:consumption/budgetResourceGroup:BudgetResourceGroup")
public class BudgetResourceGroup extends com.pulumi.resources.CustomResource {
    /**
     * The total amount of cost to track with the budget.
     * 
     */
    @Export(name="amount", type=Double.class, parameters={})
    private Output<Double> amount;

    /**
     * @return The total amount of cost to track with the budget.
     * 
     */
    public Output<Double> amount() {
        return this.amount;
    }
    /**
     * (Optional) The ETag of the Resource Group Consumption Budget
     * 
     */
    @Export(name="etag", type=String.class, parameters={})
    private Output<String> etag;

    /**
     * @return (Optional) The ETag of the Resource Group Consumption Budget
     * 
     */
    public Output<String> etag() {
        return this.etag;
    }
    /**
     * A `filter` block as defined below.
     * 
     */
    @Export(name="filter", type=BudgetResourceGroupFilter.class, parameters={})
    private Output</* @Nullable */ BudgetResourceGroupFilter> filter;

    /**
     * @return A `filter` block as defined below.
     * 
     */
    public Output<Optional<BudgetResourceGroupFilter>> filter() {
        return Codegen.optional(this.filter);
    }
    /**
     * The name which should be used for this Resource Group Consumption Budget. Changing this forces a new Resource Group Consumption Budget to be created.
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return The name which should be used for this Resource Group Consumption Budget. Changing this forces a new Resource Group Consumption Budget to be created.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * One or more `notification` blocks as defined below.
     * 
     */
    @Export(name="notifications", type=List.class, parameters={BudgetResourceGroupNotification.class})
    private Output<List<BudgetResourceGroupNotification>> notifications;

    /**
     * @return One or more `notification` blocks as defined below.
     * 
     */
    public Output<List<BudgetResourceGroupNotification>> notifications() {
        return this.notifications;
    }
    /**
     * The ID of the Resource Group to create the consumption budget for in the form of /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resourceGroup1. Changing this forces a new Resource Group Consumption Budget to be created.
     * 
     */
    @Export(name="resourceGroupId", type=String.class, parameters={})
    private Output<String> resourceGroupId;

    /**
     * @return The ID of the Resource Group to create the consumption budget for in the form of /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resourceGroup1. Changing this forces a new Resource Group Consumption Budget to be created.
     * 
     */
    public Output<String> resourceGroupId() {
        return this.resourceGroupId;
    }
    /**
     * The time covered by a budget. Tracking of the amount will be reset based on the time grain. Must be one of `BillingAnnual`, `BillingMonth`, `BillingQuarter`, `Annually`, `Monthly` and `Quarterly`. Defaults to `Monthly`. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="timeGrain", type=String.class, parameters={})
    private Output</* @Nullable */ String> timeGrain;

    /**
     * @return The time covered by a budget. Tracking of the amount will be reset based on the time grain. Must be one of `BillingAnnual`, `BillingMonth`, `BillingQuarter`, `Annually`, `Monthly` and `Quarterly`. Defaults to `Monthly`. Changing this forces a new resource to be created.
     * 
     */
    public Output<Optional<String>> timeGrain() {
        return Codegen.optional(this.timeGrain);
    }
    /**
     * A `time_period` block as defined below.
     * 
     */
    @Export(name="timePeriod", type=BudgetResourceGroupTimePeriod.class, parameters={})
    private Output<BudgetResourceGroupTimePeriod> timePeriod;

    /**
     * @return A `time_period` block as defined below.
     * 
     */
    public Output<BudgetResourceGroupTimePeriod> timePeriod() {
        return this.timePeriod;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public BudgetResourceGroup(String name) {
        this(name, BudgetResourceGroupArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public BudgetResourceGroup(String name, BudgetResourceGroupArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public BudgetResourceGroup(String name, BudgetResourceGroupArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:consumption/budgetResourceGroup:BudgetResourceGroup", name, args == null ? BudgetResourceGroupArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private BudgetResourceGroup(String name, Output<String> id, @Nullable BudgetResourceGroupState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:consumption/budgetResourceGroup:BudgetResourceGroup", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static BudgetResourceGroup get(String name, Output<String> id, @Nullable BudgetResourceGroupState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new BudgetResourceGroup(name, id, state, options);
    }
}
