// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.mobile;

import com.pulumi.azure.Utilities;
import com.pulumi.azure.mobile.NetworkSimGroupArgs;
import com.pulumi.azure.mobile.inputs.NetworkSimGroupState;
import com.pulumi.azure.mobile.outputs.NetworkSimGroupIdentity;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Manages a Mobile Network Sim Group.
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.azure.core.ResourceGroup;
 * import com.pulumi.azure.core.ResourceGroupArgs;
 * import com.pulumi.azure.mobile.Network;
 * import com.pulumi.azure.mobile.NetworkArgs;
 * import com.pulumi.azure.authorization.AuthorizationFunctions;
 * import com.pulumi.azure.authorization.inputs.GetUserAssignedIdentityArgs;
 * import com.pulumi.azure.keyvault.KeyvaultFunctions;
 * import com.pulumi.azure.keyvault.inputs.GetKeyVaultArgs;
 * import com.pulumi.azure.keyvault.inputs.GetKeyArgs;
 * import com.pulumi.azure.mobile.NetworkSimGroup;
 * import com.pulumi.azure.mobile.NetworkSimGroupArgs;
 * import com.pulumi.azure.mobile.inputs.NetworkSimGroupIdentityArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var exampleResourceGroup = new ResourceGroup("exampleResourceGroup", ResourceGroupArgs.builder()
 *             .name("example-resources")
 *             .location("West Europe")
 *             .build());
 * 
 *         var exampleNetwork = new Network("exampleNetwork", NetworkArgs.builder()
 *             .name("example-mn")
 *             .location(exampleResourceGroup.location())
 *             .resourceGroupName(exampleResourceGroup.name())
 *             .mobileCountryCode("001")
 *             .mobileNetworkCode("01")
 *             .build());
 * 
 *         final var example = AuthorizationFunctions.getUserAssignedIdentity(GetUserAssignedIdentityArgs.builder()
 *             .name("name_of_user_assigned_identity")
 *             .resourceGroupName("name_of_resource_group")
 *             .build());
 * 
 *         final var exampleGetKeyVault = KeyvaultFunctions.getKeyVault(GetKeyVaultArgs.builder()
 *             .name("example-kv")
 *             .resourceGroupName("some-resource-group")
 *             .build());
 * 
 *         final var exampleGetKey = KeyvaultFunctions.getKey(GetKeyArgs.builder()
 *             .name("example-key")
 *             .keyVaultId(exampleGetKeyVault.applyValue(getKeyVaultResult -> getKeyVaultResult.id()))
 *             .build());
 * 
 *         var exampleNetworkSimGroup = new NetworkSimGroup("exampleNetworkSimGroup", NetworkSimGroupArgs.builder()
 *             .name("example-mnsg")
 *             .location(exampleResourceGroup.location())
 *             .mobileNetworkId(exampleNetwork.id())
 *             .encryptionKeyUrl(exampleGetKey.applyValue(getKeyResult -> getKeyResult.id()))
 *             .identity(NetworkSimGroupIdentityArgs.builder()
 *                 .type("SystemAssigned, UserAssigned")
 *                 .identityIds(example.applyValue(getUserAssignedIdentityResult -> getUserAssignedIdentityResult.id()))
 *                 .build())
 *             .tags(Map.of("key", "value"))
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * Mobile Network Sim Groups can be imported using the `resource id`, e.g.
 * 
 * ```sh
 * $ pulumi import azure:mobile/networkSimGroup:NetworkSimGroup example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resourceGroup1/providers/Microsoft.MobileNetwork/simGroups/simGroup1
 * ```
 * 
 */
@ResourceType(type="azure:mobile/networkSimGroup:NetworkSimGroup")
public class NetworkSimGroup extends com.pulumi.resources.CustomResource {
    /**
     * A key to encrypt the SIM data that belongs to this SIM group.
     * 
     */
    @Export(name="encryptionKeyUrl", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> encryptionKeyUrl;

    /**
     * @return A key to encrypt the SIM data that belongs to this SIM group.
     * 
     */
    public Output<Optional<String>> encryptionKeyUrl() {
        return Codegen.optional(this.encryptionKeyUrl);
    }
    /**
     * An `identity` block as defined below.
     * 
     * &gt; **NOTE:** A `UserAssigned` identity must be specified when `encryption_key_url` is specified.
     * 
     */
    @Export(name="identity", refs={NetworkSimGroupIdentity.class}, tree="[0]")
    private Output</* @Nullable */ NetworkSimGroupIdentity> identity;

    /**
     * @return An `identity` block as defined below.
     * 
     * &gt; **NOTE:** A `UserAssigned` identity must be specified when `encryption_key_url` is specified.
     * 
     */
    public Output<Optional<NetworkSimGroupIdentity>> identity() {
        return Codegen.optional(this.identity);
    }
    /**
     * Specifies the Azure Region where the Mobile Network Sim Groups should exist. Changing this forces a new Mobile Network Sim Group to be created.
     * 
     */
    @Export(name="location", refs={String.class}, tree="[0]")
    private Output<String> location;

    /**
     * @return Specifies the Azure Region where the Mobile Network Sim Groups should exist. Changing this forces a new Mobile Network Sim Group to be created.
     * 
     */
    public Output<String> location() {
        return this.location;
    }
    /**
     * The ID of Mobile Network which the Mobile Network Sim Group belongs to. Changing this forces a new Mobile Network Slice to be created.
     * 
     */
    @Export(name="mobileNetworkId", refs={String.class}, tree="[0]")
    private Output<String> mobileNetworkId;

    /**
     * @return The ID of Mobile Network which the Mobile Network Sim Group belongs to. Changing this forces a new Mobile Network Slice to be created.
     * 
     */
    public Output<String> mobileNetworkId() {
        return this.mobileNetworkId;
    }
    /**
     * Specifies the name which should be used for this Mobile Network Sim Groups. Changing this forces a new Mobile Network Sim Group to be created.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return Specifies the name which should be used for this Mobile Network Sim Groups. Changing this forces a new Mobile Network Sim Group to be created.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * A mapping of tags which should be assigned to the Mobile Network Sim Groups.
     * 
     */
    @Export(name="tags", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output</* @Nullable */ Map<String,String>> tags;

    /**
     * @return A mapping of tags which should be assigned to the Mobile Network Sim Groups.
     * 
     */
    public Output<Optional<Map<String,String>>> tags() {
        return Codegen.optional(this.tags);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public NetworkSimGroup(String name) {
        this(name, NetworkSimGroupArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public NetworkSimGroup(String name, NetworkSimGroupArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public NetworkSimGroup(String name, NetworkSimGroupArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:mobile/networkSimGroup:NetworkSimGroup", name, args == null ? NetworkSimGroupArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private NetworkSimGroup(String name, Output<String> id, @Nullable NetworkSimGroupState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:mobile/networkSimGroup:NetworkSimGroup", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static NetworkSimGroup get(String name, Output<String> id, @Nullable NetworkSimGroupState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new NetworkSimGroup(name, id, state, options);
    }
}
