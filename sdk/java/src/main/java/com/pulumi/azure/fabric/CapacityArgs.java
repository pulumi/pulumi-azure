// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.fabric;

import com.pulumi.azure.fabric.inputs.CapacitySkuArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CapacityArgs extends com.pulumi.resources.ResourceArgs {

    public static final CapacityArgs Empty = new CapacityArgs();

    /**
     * An array of administrator user identities. The member must be an Entra member user or a service principal.
     * 
     */
    @Import(name="administrationMembers")
    private @Nullable Output<List<String>> administrationMembers;

    /**
     * @return An array of administrator user identities. The member must be an Entra member user or a service principal.
     * 
     */
    public Optional<Output<List<String>>> administrationMembers() {
        return Optional.ofNullable(this.administrationMembers);
    }

    /**
     * The supported Azure location where the Fabric Capacity exists. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="location")
    private @Nullable Output<String> location;

    /**
     * @return The supported Azure location where the Fabric Capacity exists. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * The name which should be used for the Fabric Capacity. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name which should be used for the Fabric Capacity. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The name of the Resource Group in which to create the Fabric Capacity. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    /**
     * @return The name of the Resource Group in which to create the Fabric Capacity. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * A `sku` block as defined below.
     * 
     */
    @Import(name="sku", required=true)
    private Output<CapacitySkuArgs> sku;

    /**
     * @return A `sku` block as defined below.
     * 
     */
    public Output<CapacitySkuArgs> sku() {
        return this.sku;
    }

    /**
     * A mapping of tags to assign to the Fabric Capacity.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return A mapping of tags to assign to the Fabric Capacity.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private CapacityArgs() {}

    private CapacityArgs(CapacityArgs $) {
        this.administrationMembers = $.administrationMembers;
        this.location = $.location;
        this.name = $.name;
        this.resourceGroupName = $.resourceGroupName;
        this.sku = $.sku;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CapacityArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CapacityArgs $;

        public Builder() {
            $ = new CapacityArgs();
        }

        public Builder(CapacityArgs defaults) {
            $ = new CapacityArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param administrationMembers An array of administrator user identities. The member must be an Entra member user or a service principal.
         * 
         * @return builder
         * 
         */
        public Builder administrationMembers(@Nullable Output<List<String>> administrationMembers) {
            $.administrationMembers = administrationMembers;
            return this;
        }

        /**
         * @param administrationMembers An array of administrator user identities. The member must be an Entra member user or a service principal.
         * 
         * @return builder
         * 
         */
        public Builder administrationMembers(List<String> administrationMembers) {
            return administrationMembers(Output.of(administrationMembers));
        }

        /**
         * @param administrationMembers An array of administrator user identities. The member must be an Entra member user or a service principal.
         * 
         * @return builder
         * 
         */
        public Builder administrationMembers(String... administrationMembers) {
            return administrationMembers(List.of(administrationMembers));
        }

        /**
         * @param location The supported Azure location where the Fabric Capacity exists. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location The supported Azure location where the Fabric Capacity exists. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param name The name which should be used for the Fabric Capacity. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name which should be used for the Fabric Capacity. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param resourceGroupName The name of the Resource Group in which to create the Fabric Capacity. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName The name of the Resource Group in which to create the Fabric Capacity. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        /**
         * @param sku A `sku` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder sku(Output<CapacitySkuArgs> sku) {
            $.sku = sku;
            return this;
        }

        /**
         * @param sku A `sku` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder sku(CapacitySkuArgs sku) {
            return sku(Output.of(sku));
        }

        /**
         * @param tags A mapping of tags to assign to the Fabric Capacity.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags A mapping of tags to assign to the Fabric Capacity.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public CapacityArgs build() {
            if ($.resourceGroupName == null) {
                throw new MissingRequiredPropertyException("CapacityArgs", "resourceGroupName");
            }
            if ($.sku == null) {
                throw new MissingRequiredPropertyException("CapacityArgs", "sku");
            }
            return $;
        }
    }

}
