// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.media.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Double;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class TransformOutputBuiltinPresetPresetConfiguration {
    /**
     * @return The complexity of the encoding. Possible values are `Balanced`, `Speed` or `Quality`.
     * 
     */
    private @Nullable String complexity;
    /**
     * @return Specifies the interleave mode of the output to control how audio are stored in the container format. Possible values are `InterleavedOutput` and `NonInterleavedOutput`.
     * 
     */
    private @Nullable String interleaveOutput;
    /**
     * @return The key frame interval in seconds. Possible value is a positive float. For example, set as `2.0` to reduce the playback buffering for some players.
     * 
     */
    private @Nullable Double keyFrameIntervalInSeconds;
    /**
     * @return The maximum bitrate in bits per second (threshold for the top video layer). For example, set as `6000000` to avoid producing very high bitrate outputs for contents with high complexity.
     * 
     */
    private @Nullable Integer maxBitrateBps;
    /**
     * @return The maximum height of output video layers. For example, set as `720` to produce output layers up to 720P even if the input is 4K.
     * 
     */
    private @Nullable Integer maxHeight;
    /**
     * @return The maximum number of output video layers. For example, set as `4` to make sure at most 4 output layers are produced to control the overall cost of the encoding job.
     * 
     */
    private @Nullable Integer maxLayers;
    /**
     * @return The minimum bitrate in bits per second (threshold for the bottom video layer). For example, set as `200000` to have a bottom layer that covers users with low network bandwidth.
     * 
     */
    private @Nullable Integer minBitrateBps;
    /**
     * @return The minimum height of output video layers. For example, set as `360` to avoid output layers of smaller resolutions like 180P.
     * 
     */
    private @Nullable Integer minHeight;

    private TransformOutputBuiltinPresetPresetConfiguration() {}
    /**
     * @return The complexity of the encoding. Possible values are `Balanced`, `Speed` or `Quality`.
     * 
     */
    public Optional<String> complexity() {
        return Optional.ofNullable(this.complexity);
    }
    /**
     * @return Specifies the interleave mode of the output to control how audio are stored in the container format. Possible values are `InterleavedOutput` and `NonInterleavedOutput`.
     * 
     */
    public Optional<String> interleaveOutput() {
        return Optional.ofNullable(this.interleaveOutput);
    }
    /**
     * @return The key frame interval in seconds. Possible value is a positive float. For example, set as `2.0` to reduce the playback buffering for some players.
     * 
     */
    public Optional<Double> keyFrameIntervalInSeconds() {
        return Optional.ofNullable(this.keyFrameIntervalInSeconds);
    }
    /**
     * @return The maximum bitrate in bits per second (threshold for the top video layer). For example, set as `6000000` to avoid producing very high bitrate outputs for contents with high complexity.
     * 
     */
    public Optional<Integer> maxBitrateBps() {
        return Optional.ofNullable(this.maxBitrateBps);
    }
    /**
     * @return The maximum height of output video layers. For example, set as `720` to produce output layers up to 720P even if the input is 4K.
     * 
     */
    public Optional<Integer> maxHeight() {
        return Optional.ofNullable(this.maxHeight);
    }
    /**
     * @return The maximum number of output video layers. For example, set as `4` to make sure at most 4 output layers are produced to control the overall cost of the encoding job.
     * 
     */
    public Optional<Integer> maxLayers() {
        return Optional.ofNullable(this.maxLayers);
    }
    /**
     * @return The minimum bitrate in bits per second (threshold for the bottom video layer). For example, set as `200000` to have a bottom layer that covers users with low network bandwidth.
     * 
     */
    public Optional<Integer> minBitrateBps() {
        return Optional.ofNullable(this.minBitrateBps);
    }
    /**
     * @return The minimum height of output video layers. For example, set as `360` to avoid output layers of smaller resolutions like 180P.
     * 
     */
    public Optional<Integer> minHeight() {
        return Optional.ofNullable(this.minHeight);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(TransformOutputBuiltinPresetPresetConfiguration defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String complexity;
        private @Nullable String interleaveOutput;
        private @Nullable Double keyFrameIntervalInSeconds;
        private @Nullable Integer maxBitrateBps;
        private @Nullable Integer maxHeight;
        private @Nullable Integer maxLayers;
        private @Nullable Integer minBitrateBps;
        private @Nullable Integer minHeight;
        public Builder() {}
        public Builder(TransformOutputBuiltinPresetPresetConfiguration defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.complexity = defaults.complexity;
    	      this.interleaveOutput = defaults.interleaveOutput;
    	      this.keyFrameIntervalInSeconds = defaults.keyFrameIntervalInSeconds;
    	      this.maxBitrateBps = defaults.maxBitrateBps;
    	      this.maxHeight = defaults.maxHeight;
    	      this.maxLayers = defaults.maxLayers;
    	      this.minBitrateBps = defaults.minBitrateBps;
    	      this.minHeight = defaults.minHeight;
        }

        @CustomType.Setter
        public Builder complexity(@Nullable String complexity) {

            this.complexity = complexity;
            return this;
        }
        @CustomType.Setter
        public Builder interleaveOutput(@Nullable String interleaveOutput) {

            this.interleaveOutput = interleaveOutput;
            return this;
        }
        @CustomType.Setter
        public Builder keyFrameIntervalInSeconds(@Nullable Double keyFrameIntervalInSeconds) {

            this.keyFrameIntervalInSeconds = keyFrameIntervalInSeconds;
            return this;
        }
        @CustomType.Setter
        public Builder maxBitrateBps(@Nullable Integer maxBitrateBps) {

            this.maxBitrateBps = maxBitrateBps;
            return this;
        }
        @CustomType.Setter
        public Builder maxHeight(@Nullable Integer maxHeight) {

            this.maxHeight = maxHeight;
            return this;
        }
        @CustomType.Setter
        public Builder maxLayers(@Nullable Integer maxLayers) {

            this.maxLayers = maxLayers;
            return this;
        }
        @CustomType.Setter
        public Builder minBitrateBps(@Nullable Integer minBitrateBps) {

            this.minBitrateBps = minBitrateBps;
            return this;
        }
        @CustomType.Setter
        public Builder minHeight(@Nullable Integer minHeight) {

            this.minHeight = minHeight;
            return this;
        }
        public TransformOutputBuiltinPresetPresetConfiguration build() {
            final var _resultValue = new TransformOutputBuiltinPresetPresetConfiguration();
            _resultValue.complexity = complexity;
            _resultValue.interleaveOutput = interleaveOutput;
            _resultValue.keyFrameIntervalInSeconds = keyFrameIntervalInSeconds;
            _resultValue.maxBitrateBps = maxBitrateBps;
            _resultValue.maxHeight = maxHeight;
            _resultValue.maxLayers = maxLayers;
            _resultValue.minBitrateBps = minBitrateBps;
            _resultValue.minHeight = minHeight;
            return _resultValue;
        }
    }
}
