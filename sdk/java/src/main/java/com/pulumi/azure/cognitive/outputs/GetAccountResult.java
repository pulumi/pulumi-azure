// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.cognitive.outputs;

import com.pulumi.azure.cognitive.outputs.GetAccountIdentity;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class GetAccountResult {
    /**
     * @return The endpoint of the Cognitive Services Account
     * 
     */
    private String endpoint;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return A `identity` block as defined below.
     * 
     */
    private List<GetAccountIdentity> identities;
    /**
     * @return The kind of the Cognitive Services Account
     * 
     */
    private String kind;
    /**
     * @return The Azure location where the Cognitive Services Account exists
     * 
     */
    private String location;
    private String name;
    /**
     * @return The primary access key of the Cognitive Services Account
     * 
     */
    private String primaryAccessKey;
    /**
     * @return If `kind` is `QnAMaker` the link to the QNA runtime.
     * 
     */
    private String qnaRuntimeEndpoint;
    private String resourceGroupName;
    /**
     * @return The secondary access key of the Cognitive Services Account
     * 
     */
    private String secondaryAccessKey;
    /**
     * @return The SKU name of the Cognitive Services Account
     * 
     */
    private String skuName;
    /**
     * @return A mapping of tags to assigned to the resource.
     * 
     */
    private @Nullable Map<String,String> tags;

    private GetAccountResult() {}
    /**
     * @return The endpoint of the Cognitive Services Account
     * 
     */
    public String endpoint() {
        return this.endpoint;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return A `identity` block as defined below.
     * 
     */
    public List<GetAccountIdentity> identities() {
        return this.identities;
    }
    /**
     * @return The kind of the Cognitive Services Account
     * 
     */
    public String kind() {
        return this.kind;
    }
    /**
     * @return The Azure location where the Cognitive Services Account exists
     * 
     */
    public String location() {
        return this.location;
    }
    public String name() {
        return this.name;
    }
    /**
     * @return The primary access key of the Cognitive Services Account
     * 
     */
    public String primaryAccessKey() {
        return this.primaryAccessKey;
    }
    /**
     * @return If `kind` is `QnAMaker` the link to the QNA runtime.
     * 
     */
    public String qnaRuntimeEndpoint() {
        return this.qnaRuntimeEndpoint;
    }
    public String resourceGroupName() {
        return this.resourceGroupName;
    }
    /**
     * @return The secondary access key of the Cognitive Services Account
     * 
     */
    public String secondaryAccessKey() {
        return this.secondaryAccessKey;
    }
    /**
     * @return The SKU name of the Cognitive Services Account
     * 
     */
    public String skuName() {
        return this.skuName;
    }
    /**
     * @return A mapping of tags to assigned to the resource.
     * 
     */
    public Map<String,String> tags() {
        return this.tags == null ? Map.of() : this.tags;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAccountResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String endpoint;
        private String id;
        private List<GetAccountIdentity> identities;
        private String kind;
        private String location;
        private String name;
        private String primaryAccessKey;
        private String qnaRuntimeEndpoint;
        private String resourceGroupName;
        private String secondaryAccessKey;
        private String skuName;
        private @Nullable Map<String,String> tags;
        public Builder() {}
        public Builder(GetAccountResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.endpoint = defaults.endpoint;
    	      this.id = defaults.id;
    	      this.identities = defaults.identities;
    	      this.kind = defaults.kind;
    	      this.location = defaults.location;
    	      this.name = defaults.name;
    	      this.primaryAccessKey = defaults.primaryAccessKey;
    	      this.qnaRuntimeEndpoint = defaults.qnaRuntimeEndpoint;
    	      this.resourceGroupName = defaults.resourceGroupName;
    	      this.secondaryAccessKey = defaults.secondaryAccessKey;
    	      this.skuName = defaults.skuName;
    	      this.tags = defaults.tags;
        }

        @CustomType.Setter
        public Builder endpoint(String endpoint) {
            if (endpoint == null) {
              throw new MissingRequiredPropertyException("GetAccountResult", "endpoint");
            }
            this.endpoint = endpoint;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetAccountResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder identities(List<GetAccountIdentity> identities) {
            if (identities == null) {
              throw new MissingRequiredPropertyException("GetAccountResult", "identities");
            }
            this.identities = identities;
            return this;
        }
        public Builder identities(GetAccountIdentity... identities) {
            return identities(List.of(identities));
        }
        @CustomType.Setter
        public Builder kind(String kind) {
            if (kind == null) {
              throw new MissingRequiredPropertyException("GetAccountResult", "kind");
            }
            this.kind = kind;
            return this;
        }
        @CustomType.Setter
        public Builder location(String location) {
            if (location == null) {
              throw new MissingRequiredPropertyException("GetAccountResult", "location");
            }
            this.location = location;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetAccountResult", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder primaryAccessKey(String primaryAccessKey) {
            if (primaryAccessKey == null) {
              throw new MissingRequiredPropertyException("GetAccountResult", "primaryAccessKey");
            }
            this.primaryAccessKey = primaryAccessKey;
            return this;
        }
        @CustomType.Setter
        public Builder qnaRuntimeEndpoint(String qnaRuntimeEndpoint) {
            if (qnaRuntimeEndpoint == null) {
              throw new MissingRequiredPropertyException("GetAccountResult", "qnaRuntimeEndpoint");
            }
            this.qnaRuntimeEndpoint = qnaRuntimeEndpoint;
            return this;
        }
        @CustomType.Setter
        public Builder resourceGroupName(String resourceGroupName) {
            if (resourceGroupName == null) {
              throw new MissingRequiredPropertyException("GetAccountResult", "resourceGroupName");
            }
            this.resourceGroupName = resourceGroupName;
            return this;
        }
        @CustomType.Setter
        public Builder secondaryAccessKey(String secondaryAccessKey) {
            if (secondaryAccessKey == null) {
              throw new MissingRequiredPropertyException("GetAccountResult", "secondaryAccessKey");
            }
            this.secondaryAccessKey = secondaryAccessKey;
            return this;
        }
        @CustomType.Setter
        public Builder skuName(String skuName) {
            if (skuName == null) {
              throw new MissingRequiredPropertyException("GetAccountResult", "skuName");
            }
            this.skuName = skuName;
            return this;
        }
        @CustomType.Setter
        public Builder tags(@Nullable Map<String,String> tags) {

            this.tags = tags;
            return this;
        }
        public GetAccountResult build() {
            final var _resultValue = new GetAccountResult();
            _resultValue.endpoint = endpoint;
            _resultValue.id = id;
            _resultValue.identities = identities;
            _resultValue.kind = kind;
            _resultValue.location = location;
            _resultValue.name = name;
            _resultValue.primaryAccessKey = primaryAccessKey;
            _resultValue.qnaRuntimeEndpoint = qnaRuntimeEndpoint;
            _resultValue.resourceGroupName = resourceGroupName;
            _resultValue.secondaryAccessKey = secondaryAccessKey;
            _resultValue.skuName = skuName;
            _resultValue.tags = tags;
            return _resultValue;
        }
    }
}
