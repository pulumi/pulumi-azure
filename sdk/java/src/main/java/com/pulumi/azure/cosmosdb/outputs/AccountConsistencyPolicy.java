// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.cosmosdb.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class AccountConsistencyPolicy {
    /**
     * @return The Consistency Level to use for this CosmosDB Account - can be either `BoundedStaleness`, `Eventual`, `Session`, `Strong` or `ConsistentPrefix`.
     * 
     */
    private final String consistencyLevel;
    /**
     * @return When used with the Bounded Staleness consistency level, this value represents the time amount of staleness (in seconds) tolerated. Accepted range for this value is `5` - `86400` (1 day). Defaults to `5`. Required when `consistency_level` is set to `BoundedStaleness`.
     * 
     */
    private final @Nullable Integer maxIntervalInSeconds;
    /**
     * @return When used with the Bounded Staleness consistency level, this value represents the number of stale requests tolerated. Accepted range for this value is `10` – `2147483647`. Defaults to `100`. Required when `consistency_level` is set to `BoundedStaleness`.
     * 
     */
    private final @Nullable Integer maxStalenessPrefix;

    @CustomType.Constructor
    private AccountConsistencyPolicy(
        @CustomType.Parameter("consistencyLevel") String consistencyLevel,
        @CustomType.Parameter("maxIntervalInSeconds") @Nullable Integer maxIntervalInSeconds,
        @CustomType.Parameter("maxStalenessPrefix") @Nullable Integer maxStalenessPrefix) {
        this.consistencyLevel = consistencyLevel;
        this.maxIntervalInSeconds = maxIntervalInSeconds;
        this.maxStalenessPrefix = maxStalenessPrefix;
    }

    /**
     * @return The Consistency Level to use for this CosmosDB Account - can be either `BoundedStaleness`, `Eventual`, `Session`, `Strong` or `ConsistentPrefix`.
     * 
     */
    public String consistencyLevel() {
        return this.consistencyLevel;
    }
    /**
     * @return When used with the Bounded Staleness consistency level, this value represents the time amount of staleness (in seconds) tolerated. Accepted range for this value is `5` - `86400` (1 day). Defaults to `5`. Required when `consistency_level` is set to `BoundedStaleness`.
     * 
     */
    public Optional<Integer> maxIntervalInSeconds() {
        return Optional.ofNullable(this.maxIntervalInSeconds);
    }
    /**
     * @return When used with the Bounded Staleness consistency level, this value represents the number of stale requests tolerated. Accepted range for this value is `10` – `2147483647`. Defaults to `100`. Required when `consistency_level` is set to `BoundedStaleness`.
     * 
     */
    public Optional<Integer> maxStalenessPrefix() {
        return Optional.ofNullable(this.maxStalenessPrefix);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AccountConsistencyPolicy defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String consistencyLevel;
        private @Nullable Integer maxIntervalInSeconds;
        private @Nullable Integer maxStalenessPrefix;

        public Builder() {
    	      // Empty
        }

        public Builder(AccountConsistencyPolicy defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.consistencyLevel = defaults.consistencyLevel;
    	      this.maxIntervalInSeconds = defaults.maxIntervalInSeconds;
    	      this.maxStalenessPrefix = defaults.maxStalenessPrefix;
        }

        public Builder consistencyLevel(String consistencyLevel) {
            this.consistencyLevel = Objects.requireNonNull(consistencyLevel);
            return this;
        }
        public Builder maxIntervalInSeconds(@Nullable Integer maxIntervalInSeconds) {
            this.maxIntervalInSeconds = maxIntervalInSeconds;
            return this;
        }
        public Builder maxStalenessPrefix(@Nullable Integer maxStalenessPrefix) {
            this.maxStalenessPrefix = maxStalenessPrefix;
            return this;
        }        public AccountConsistencyPolicy build() {
            return new AccountConsistencyPolicy(consistencyLevel, maxIntervalInSeconds, maxStalenessPrefix);
        }
    }
}
