// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.backup;

import com.pulumi.azure.Utilities;
import com.pulumi.azure.backup.ContainerStorageAccountArgs;
import com.pulumi.azure.backup.inputs.ContainerStorageAccountState;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import javax.annotation.Nullable;

/**
 * Manages registration of a storage account with Azure Backup. Storage accounts must be registered with an Azure Recovery Vault in order to backup file shares within the storage account. Registering a storage account with a vault creates what is known as a protection container within Azure Recovery Services. Once the container is created, Azure file shares within the storage account can be backed up using the `azure.backup.ProtectedFileShare` resource.
 * 
 * ## Example Usage
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.azure.core.ResourceGroup;
 * import com.pulumi.azure.core.ResourceGroupArgs;
 * import com.pulumi.azure.recoveryservices.Vault;
 * import com.pulumi.azure.recoveryservices.VaultArgs;
 * import com.pulumi.azure.storage.Account;
 * import com.pulumi.azure.storage.AccountArgs;
 * import com.pulumi.azure.backup.ContainerStorageAccount;
 * import com.pulumi.azure.backup.ContainerStorageAccountArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new ResourceGroup(&#34;example&#34;, ResourceGroupArgs.builder()        
 *             .location(&#34;West Europe&#34;)
 *             .build());
 * 
 *         var vault = new Vault(&#34;vault&#34;, VaultArgs.builder()        
 *             .location(example.location())
 *             .resourceGroupName(example.name())
 *             .sku(&#34;Standard&#34;)
 *             .build());
 * 
 *         var sa = new Account(&#34;sa&#34;, AccountArgs.builder()        
 *             .location(example.location())
 *             .resourceGroupName(example.name())
 *             .accountTier(&#34;Standard&#34;)
 *             .accountReplicationType(&#34;LRS&#34;)
 *             .build());
 * 
 *         var container = new ContainerStorageAccount(&#34;container&#34;, ContainerStorageAccountArgs.builder()        
 *             .resourceGroupName(example.name())
 *             .recoveryVaultName(vault.name())
 *             .storageAccountId(sa.id())
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * Backup Storage Account Containers can be imported using the `resource id`, e.g.
 * 
 * ```sh
 *  $ pulumi import azure:backup/containerStorageAccount:ContainerStorageAccount mycontainer &#34;/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resource-group-name/providers/Microsoft.RecoveryServices/vaults/recovery-vault-name/backupFabrics/Azure/protectionContainers/StorageContainer;storage;storage-rg-name;storage-account&#34;
 * ```
 * 
 *  Note the ID requires quoting as there are semicolons
 * 
 */
@ResourceType(type="azure:backup/containerStorageAccount:ContainerStorageAccount")
public class ContainerStorageAccount extends com.pulumi.resources.CustomResource {
    /**
     * The name of the vault where the storage account will be registered. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="recoveryVaultName", refs={String.class}, tree="[0]")
    private Output<String> recoveryVaultName;

    /**
     * @return The name of the vault where the storage account will be registered. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> recoveryVaultName() {
        return this.recoveryVaultName;
    }
    /**
     * Name of the resource group where the vault is located. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="resourceGroupName", refs={String.class}, tree="[0]")
    private Output<String> resourceGroupName;

    /**
     * @return Name of the resource group where the vault is located. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }
    /**
     * The ID of the Storage Account to be registered Changing this forces a new resource to be created.
     * 
     */
    @Export(name="storageAccountId", refs={String.class}, tree="[0]")
    private Output<String> storageAccountId;

    /**
     * @return The ID of the Storage Account to be registered Changing this forces a new resource to be created.
     * 
     */
    public Output<String> storageAccountId() {
        return this.storageAccountId;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public ContainerStorageAccount(String name) {
        this(name, ContainerStorageAccountArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public ContainerStorageAccount(String name, ContainerStorageAccountArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public ContainerStorageAccount(String name, ContainerStorageAccountArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:backup/containerStorageAccount:ContainerStorageAccount", name, args == null ? ContainerStorageAccountArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private ContainerStorageAccount(String name, Output<String> id, @Nullable ContainerStorageAccountState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:backup/containerStorageAccount:ContainerStorageAccount", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static ContainerStorageAccount get(String name, Output<String> id, @Nullable ContainerStorageAccountState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new ContainerStorageAccount(name, id, state, options);
    }
}
