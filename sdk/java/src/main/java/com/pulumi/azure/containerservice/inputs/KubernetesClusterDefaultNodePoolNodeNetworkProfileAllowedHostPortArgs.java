// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.containerservice.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class KubernetesClusterDefaultNodePoolNodeNetworkProfileAllowedHostPortArgs extends com.pulumi.resources.ResourceArgs {

    public static final KubernetesClusterDefaultNodePoolNodeNetworkProfileAllowedHostPortArgs Empty = new KubernetesClusterDefaultNodePoolNodeNetworkProfileAllowedHostPortArgs();

    /**
     * Specifies the end of the port range.
     * 
     */
    @Import(name="portEnd")
    private @Nullable Output<Integer> portEnd;

    /**
     * @return Specifies the end of the port range.
     * 
     */
    public Optional<Output<Integer>> portEnd() {
        return Optional.ofNullable(this.portEnd);
    }

    /**
     * Specifies the start of the port range.
     * 
     */
    @Import(name="portStart")
    private @Nullable Output<Integer> portStart;

    /**
     * @return Specifies the start of the port range.
     * 
     */
    public Optional<Output<Integer>> portStart() {
        return Optional.ofNullable(this.portStart);
    }

    /**
     * Specifies the protocol of the port range. Possible values are `TCP` and `UDP`.
     * 
     */
    @Import(name="protocol")
    private @Nullable Output<String> protocol;

    /**
     * @return Specifies the protocol of the port range. Possible values are `TCP` and `UDP`.
     * 
     */
    public Optional<Output<String>> protocol() {
        return Optional.ofNullable(this.protocol);
    }

    private KubernetesClusterDefaultNodePoolNodeNetworkProfileAllowedHostPortArgs() {}

    private KubernetesClusterDefaultNodePoolNodeNetworkProfileAllowedHostPortArgs(KubernetesClusterDefaultNodePoolNodeNetworkProfileAllowedHostPortArgs $) {
        this.portEnd = $.portEnd;
        this.portStart = $.portStart;
        this.protocol = $.protocol;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(KubernetesClusterDefaultNodePoolNodeNetworkProfileAllowedHostPortArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private KubernetesClusterDefaultNodePoolNodeNetworkProfileAllowedHostPortArgs $;

        public Builder() {
            $ = new KubernetesClusterDefaultNodePoolNodeNetworkProfileAllowedHostPortArgs();
        }

        public Builder(KubernetesClusterDefaultNodePoolNodeNetworkProfileAllowedHostPortArgs defaults) {
            $ = new KubernetesClusterDefaultNodePoolNodeNetworkProfileAllowedHostPortArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param portEnd Specifies the end of the port range.
         * 
         * @return builder
         * 
         */
        public Builder portEnd(@Nullable Output<Integer> portEnd) {
            $.portEnd = portEnd;
            return this;
        }

        /**
         * @param portEnd Specifies the end of the port range.
         * 
         * @return builder
         * 
         */
        public Builder portEnd(Integer portEnd) {
            return portEnd(Output.of(portEnd));
        }

        /**
         * @param portStart Specifies the start of the port range.
         * 
         * @return builder
         * 
         */
        public Builder portStart(@Nullable Output<Integer> portStart) {
            $.portStart = portStart;
            return this;
        }

        /**
         * @param portStart Specifies the start of the port range.
         * 
         * @return builder
         * 
         */
        public Builder portStart(Integer portStart) {
            return portStart(Output.of(portStart));
        }

        /**
         * @param protocol Specifies the protocol of the port range. Possible values are `TCP` and `UDP`.
         * 
         * @return builder
         * 
         */
        public Builder protocol(@Nullable Output<String> protocol) {
            $.protocol = protocol;
            return this;
        }

        /**
         * @param protocol Specifies the protocol of the port range. Possible values are `TCP` and `UDP`.
         * 
         * @return builder
         * 
         */
        public Builder protocol(String protocol) {
            return protocol(Output.of(protocol));
        }

        public KubernetesClusterDefaultNodePoolNodeNetworkProfileAllowedHostPortArgs build() {
            return $;
        }
    }

}
