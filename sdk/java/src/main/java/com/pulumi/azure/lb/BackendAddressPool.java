// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.lb;

import com.pulumi.azure.Utilities;
import com.pulumi.azure.lb.BackendAddressPoolArgs;
import com.pulumi.azure.lb.inputs.BackendAddressPoolState;
import com.pulumi.azure.lb.outputs.BackendAddressPoolTunnelInterface;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Manages a Load Balancer Backend Address Pool.
 * 
 * &gt; **NOTE:** When using this resource, the Load Balancer needs to have a FrontEnd IP Configuration Attached
 * 
 * ## Example Usage
 * ```java
 * package generated_program;
 * 
 * import java.util.*;
 * import java.io.*;
 * import java.nio.*;
 * import com.pulumi.*;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var exampleResourceGroup = new ResourceGroup(&#34;exampleResourceGroup&#34;, ResourceGroupArgs.builder()        
 *             .location(&#34;West Europe&#34;)
 *             .build());
 * 
 *         var examplePublicIp = new PublicIp(&#34;examplePublicIp&#34;, PublicIpArgs.builder()        
 *             .location(exampleResourceGroup.location())
 *             .resourceGroupName(exampleResourceGroup.name())
 *             .allocationMethod(&#34;Static&#34;)
 *             .build());
 * 
 *         var exampleLoadBalancer = new LoadBalancer(&#34;exampleLoadBalancer&#34;, LoadBalancerArgs.builder()        
 *             .location(exampleResourceGroup.location())
 *             .resourceGroupName(exampleResourceGroup.name())
 *             .frontendIpConfigurations(LoadBalancerFrontendIpConfigurationArgs.builder()
 *                 .name(&#34;PublicIPAddress&#34;)
 *                 .publicIpAddressId(examplePublicIp.id())
 *                 .build())
 *             .build());
 * 
 *         var exampleBackendAddressPool = new BackendAddressPool(&#34;exampleBackendAddressPool&#34;, BackendAddressPoolArgs.builder()        
 *             .loadbalancerId(exampleLoadBalancer.id())
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * Load Balancer Backend Address Pools can be imported using the `resource id`, e.g.
 * 
 * ```sh
 *  $ pulumi import azure:lb/backendAddressPool:BackendAddressPool example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.Network/loadBalancers/lb1/backendAddressPools/pool1
 * ```
 * 
 */
@ResourceType(type="azure:lb/backendAddressPool:BackendAddressPool")
public class BackendAddressPool extends com.pulumi.resources.CustomResource {
    /**
     * The Backend IP Configurations associated with this Backend Address Pool.
     * 
     */
    @Export(name="backendIpConfigurations", type=List.class, parameters={String.class})
    private Output<List<String>> backendIpConfigurations;

    /**
     * @return The Backend IP Configurations associated with this Backend Address Pool.
     * 
     */
    public Output<List<String>> backendIpConfigurations() {
        return this.backendIpConfigurations;
    }
    /**
     * The Load Balancing Rules associated with this Backend Address Pool.
     * 
     */
    @Export(name="loadBalancingRules", type=List.class, parameters={String.class})
    private Output<List<String>> loadBalancingRules;

    /**
     * @return The Load Balancing Rules associated with this Backend Address Pool.
     * 
     */
    public Output<List<String>> loadBalancingRules() {
        return this.loadBalancingRules;
    }
    /**
     * The ID of the Load Balancer in which to create the Backend Address Pool.
     * 
     */
    @Export(name="loadbalancerId", type=String.class, parameters={})
    private Output<String> loadbalancerId;

    /**
     * @return The ID of the Load Balancer in which to create the Backend Address Pool.
     * 
     */
    public Output<String> loadbalancerId() {
        return this.loadbalancerId;
    }
    /**
     * Specifies the name of the Backend Address Pool.
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return Specifies the name of the Backend Address Pool.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * An array of the Load Balancing Outbound Rules associated with this Backend Address Pool.
     * 
     */
    @Export(name="outboundRules", type=List.class, parameters={String.class})
    private Output<List<String>> outboundRules;

    /**
     * @return An array of the Load Balancing Outbound Rules associated with this Backend Address Pool.
     * 
     */
    public Output<List<String>> outboundRules() {
        return this.outboundRules;
    }
    /**
     * One or more `tunnel_interface` blocks as defined below.
     * 
     */
    @Export(name="tunnelInterfaces", type=List.class, parameters={BackendAddressPoolTunnelInterface.class})
    private Output</* @Nullable */ List<BackendAddressPoolTunnelInterface>> tunnelInterfaces;

    /**
     * @return One or more `tunnel_interface` blocks as defined below.
     * 
     */
    public Output<Optional<List<BackendAddressPoolTunnelInterface>>> tunnelInterfaces() {
        return Codegen.optional(this.tunnelInterfaces);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public BackendAddressPool(String name) {
        this(name, BackendAddressPoolArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public BackendAddressPool(String name, BackendAddressPoolArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public BackendAddressPool(String name, BackendAddressPoolArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:lb/backendAddressPool:BackendAddressPool", name, args == null ? BackendAddressPoolArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private BackendAddressPool(String name, Output<String> id, @Nullable BackendAddressPoolState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:lb/backendAddressPool:BackendAddressPool", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static BackendAddressPool get(String name, Output<String> id, @Nullable BackendAddressPoolState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new BackendAddressPool(name, id, state, options);
    }
}
