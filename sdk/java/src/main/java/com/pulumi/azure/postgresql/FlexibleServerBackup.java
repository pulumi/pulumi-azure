// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.postgresql;

import com.pulumi.azure.Utilities;
import com.pulumi.azure.postgresql.FlexibleServerBackupArgs;
import com.pulumi.azure.postgresql.inputs.FlexibleServerBackupState;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import javax.annotation.Nullable;

/**
 * Manages a PostgreSQL Flexible Server Backup.
 * 
 * ## Example Usage
 * 
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.azure.core.ResourceGroup;
 * import com.pulumi.azure.core.ResourceGroupArgs;
 * import com.pulumi.azure.postgresql.FlexibleServer;
 * import com.pulumi.azure.postgresql.FlexibleServerArgs;
 * import com.pulumi.azure.postgresql.FlexibleServerBackup;
 * import com.pulumi.azure.postgresql.FlexibleServerBackupArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new ResourceGroup("example", ResourceGroupArgs.builder()
 *             .name("example-resources")
 *             .location("West Europe")
 *             .build());
 * 
 *         var exampleFlexibleServer = new FlexibleServer("exampleFlexibleServer", FlexibleServerArgs.builder()
 *             .name("example-fs")
 *             .resourceGroupName(example.name())
 *             .location(example.location())
 *             .administratorLogin("adminTerraform")
 *             .administratorPassword("QAZwsx123")
 *             .version("12")
 *             .skuName("GP_Standard_D2s_v3")
 *             .zone("2")
 *             .build());
 * 
 *         var exampleFlexibleServerBackup = new FlexibleServerBackup("exampleFlexibleServerBackup", FlexibleServerBackupArgs.builder()
 *             .name("example-pfsb")
 *             .serverId(exampleFlexibleServer.id())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * 
 * ## API Providers
 * 
 * &lt;!-- This section is generated, changes will be overwritten --&gt;
 * This resource uses the following Azure API Providers:
 * 
 * * `Microsoft.DBforPostgreSQL` - 2024-08-01
 * 
 * ## Import
 * 
 * An existing PostgreSQL Flexible Server Backup can be imported into Pulumi using the `resource id`, e.g.
 * 
 * ```sh
 * $ pulumi import azure:postgresql/flexibleServerBackup:FlexibleServerBackup example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.DBforPostgreSQL/flexibleServers/fs1/backups/backup1
 * ```
 * 
 */
@ResourceType(type="azure:postgresql/flexibleServerBackup:FlexibleServerBackup")
public class FlexibleServerBackup extends com.pulumi.resources.CustomResource {
    /**
     * The Time (ISO8601 format) at which the backup was completed.
     * 
     */
    @Export(name="completedTime", refs={String.class}, tree="[0]")
    private Output<String> completedTime;

    /**
     * @return The Time (ISO8601 format) at which the backup was completed.
     * 
     */
    public Output<String> completedTime() {
        return this.completedTime;
    }
    /**
     * Specifies the name of this PostgreSQL Flexible Server Backup. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return Specifies the name of this PostgreSQL Flexible Server Backup. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The ID of the PostgreSQL Flexible Server from which to create this PostgreSQL Flexible Server Backup. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="serverId", refs={String.class}, tree="[0]")
    private Output<String> serverId;

    /**
     * @return The ID of the PostgreSQL Flexible Server from which to create this PostgreSQL Flexible Server Backup. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> serverId() {
        return this.serverId;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public FlexibleServerBackup(java.lang.String name) {
        this(name, FlexibleServerBackupArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public FlexibleServerBackup(java.lang.String name, FlexibleServerBackupArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public FlexibleServerBackup(java.lang.String name, FlexibleServerBackupArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:postgresql/flexibleServerBackup:FlexibleServerBackup", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private FlexibleServerBackup(java.lang.String name, Output<java.lang.String> id, @Nullable FlexibleServerBackupState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:postgresql/flexibleServerBackup:FlexibleServerBackup", name, state, makeResourceOptions(options, id), false);
    }

    private static FlexibleServerBackupArgs makeArgs(FlexibleServerBackupArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? FlexibleServerBackupArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static FlexibleServerBackup get(java.lang.String name, Output<java.lang.String> id, @Nullable FlexibleServerBackupState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new FlexibleServerBackup(name, id, state, options);
    }
}
