// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.privatedns.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class LinkServiceNatIpConfiguration {
    /**
     * @return Specifies the name which should be used for the NAT IP Configuration. Changing this forces a new resource to be created.
     * 
     */
    private String name;
    /**
     * @return Is this is the Primary IP Configuration? Changing this forces a new resource to be created.
     * 
     */
    private Boolean primary;
    /**
     * @return Specifies a Private Static IP Address for this IP Configuration.
     * 
     */
    private @Nullable String privateIpAddress;
    /**
     * @return The version of the IP Protocol which should be used. At this time the only supported value is `IPv4`. Defaults to `IPv4`.
     * 
     */
    private @Nullable String privateIpAddressVersion;
    /**
     * @return Specifies the ID of the Subnet which should be used for the Private Link Service.
     * 
     * &gt; **NOTE:** Verify that the Subnet&#39;s `enforce_private_link_service_network_policies` attribute is set to `true`.
     * 
     */
    private String subnetId;

    private LinkServiceNatIpConfiguration() {}
    /**
     * @return Specifies the name which should be used for the NAT IP Configuration. Changing this forces a new resource to be created.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Is this is the Primary IP Configuration? Changing this forces a new resource to be created.
     * 
     */
    public Boolean primary() {
        return this.primary;
    }
    /**
     * @return Specifies a Private Static IP Address for this IP Configuration.
     * 
     */
    public Optional<String> privateIpAddress() {
        return Optional.ofNullable(this.privateIpAddress);
    }
    /**
     * @return The version of the IP Protocol which should be used. At this time the only supported value is `IPv4`. Defaults to `IPv4`.
     * 
     */
    public Optional<String> privateIpAddressVersion() {
        return Optional.ofNullable(this.privateIpAddressVersion);
    }
    /**
     * @return Specifies the ID of the Subnet which should be used for the Private Link Service.
     * 
     * &gt; **NOTE:** Verify that the Subnet&#39;s `enforce_private_link_service_network_policies` attribute is set to `true`.
     * 
     */
    public String subnetId() {
        return this.subnetId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(LinkServiceNatIpConfiguration defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String name;
        private Boolean primary;
        private @Nullable String privateIpAddress;
        private @Nullable String privateIpAddressVersion;
        private String subnetId;
        public Builder() {}
        public Builder(LinkServiceNatIpConfiguration defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.name = defaults.name;
    	      this.primary = defaults.primary;
    	      this.privateIpAddress = defaults.privateIpAddress;
    	      this.privateIpAddressVersion = defaults.privateIpAddressVersion;
    	      this.subnetId = defaults.subnetId;
        }

        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("LinkServiceNatIpConfiguration", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder primary(Boolean primary) {
            if (primary == null) {
              throw new MissingRequiredPropertyException("LinkServiceNatIpConfiguration", "primary");
            }
            this.primary = primary;
            return this;
        }
        @CustomType.Setter
        public Builder privateIpAddress(@Nullable String privateIpAddress) {

            this.privateIpAddress = privateIpAddress;
            return this;
        }
        @CustomType.Setter
        public Builder privateIpAddressVersion(@Nullable String privateIpAddressVersion) {

            this.privateIpAddressVersion = privateIpAddressVersion;
            return this;
        }
        @CustomType.Setter
        public Builder subnetId(String subnetId) {
            if (subnetId == null) {
              throw new MissingRequiredPropertyException("LinkServiceNatIpConfiguration", "subnetId");
            }
            this.subnetId = subnetId;
            return this;
        }
        public LinkServiceNatIpConfiguration build() {
            final var _resultValue = new LinkServiceNatIpConfiguration();
            _resultValue.name = name;
            _resultValue.primary = primary;
            _resultValue.privateIpAddress = privateIpAddress;
            _resultValue.privateIpAddressVersion = privateIpAddressVersion;
            _resultValue.subnetId = subnetId;
            return _resultValue;
        }
    }
}
