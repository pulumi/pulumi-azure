// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.network;

import com.pulumi.azure.network.inputs.VirtualHubRouteTableRouteArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class VirtualHubRouteTableArgs extends com.pulumi.resources.ResourceArgs {

    public static final VirtualHubRouteTableArgs Empty = new VirtualHubRouteTableArgs();

    /**
     * List of labels associated with this route table.
     * 
     */
    @Import(name="labels")
    private @Nullable Output<List<String>> labels;

    /**
     * @return List of labels associated with this route table.
     * 
     */
    public Optional<Output<List<String>>> labels() {
        return Optional.ofNullable(this.labels);
    }

    /**
     * The name which should be used for Virtual Hub Route Table. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name which should be used for Virtual Hub Route Table. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * One or more `route` blocks as defined below.
     * 
     */
    @Import(name="routes")
    private @Nullable Output<List<VirtualHubRouteTableRouteArgs>> routes;

    /**
     * @return One or more `route` blocks as defined below.
     * 
     */
    public Optional<Output<List<VirtualHubRouteTableRouteArgs>>> routes() {
        return Optional.ofNullable(this.routes);
    }

    /**
     * The ID of the Virtual Hub within which this route table should be created. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="virtualHubId", required=true)
    private Output<String> virtualHubId;

    /**
     * @return The ID of the Virtual Hub within which this route table should be created. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> virtualHubId() {
        return this.virtualHubId;
    }

    private VirtualHubRouteTableArgs() {}

    private VirtualHubRouteTableArgs(VirtualHubRouteTableArgs $) {
        this.labels = $.labels;
        this.name = $.name;
        this.routes = $.routes;
        this.virtualHubId = $.virtualHubId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VirtualHubRouteTableArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VirtualHubRouteTableArgs $;

        public Builder() {
            $ = new VirtualHubRouteTableArgs();
        }

        public Builder(VirtualHubRouteTableArgs defaults) {
            $ = new VirtualHubRouteTableArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param labels List of labels associated with this route table.
         * 
         * @return builder
         * 
         */
        public Builder labels(@Nullable Output<List<String>> labels) {
            $.labels = labels;
            return this;
        }

        /**
         * @param labels List of labels associated with this route table.
         * 
         * @return builder
         * 
         */
        public Builder labels(List<String> labels) {
            return labels(Output.of(labels));
        }

        /**
         * @param labels List of labels associated with this route table.
         * 
         * @return builder
         * 
         */
        public Builder labels(String... labels) {
            return labels(List.of(labels));
        }

        /**
         * @param name The name which should be used for Virtual Hub Route Table. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name which should be used for Virtual Hub Route Table. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param routes One or more `route` blocks as defined below.
         * 
         * @return builder
         * 
         */
        public Builder routes(@Nullable Output<List<VirtualHubRouteTableRouteArgs>> routes) {
            $.routes = routes;
            return this;
        }

        /**
         * @param routes One or more `route` blocks as defined below.
         * 
         * @return builder
         * 
         */
        public Builder routes(List<VirtualHubRouteTableRouteArgs> routes) {
            return routes(Output.of(routes));
        }

        /**
         * @param routes One or more `route` blocks as defined below.
         * 
         * @return builder
         * 
         */
        public Builder routes(VirtualHubRouteTableRouteArgs... routes) {
            return routes(List.of(routes));
        }

        /**
         * @param virtualHubId The ID of the Virtual Hub within which this route table should be created. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder virtualHubId(Output<String> virtualHubId) {
            $.virtualHubId = virtualHubId;
            return this;
        }

        /**
         * @param virtualHubId The ID of the Virtual Hub within which this route table should be created. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder virtualHubId(String virtualHubId) {
            return virtualHubId(Output.of(virtualHubId));
        }

        public VirtualHubRouteTableArgs build() {
            if ($.virtualHubId == null) {
                throw new MissingRequiredPropertyException("VirtualHubRouteTableArgs", "virtualHubId");
            }
            return $;
        }
    }

}
