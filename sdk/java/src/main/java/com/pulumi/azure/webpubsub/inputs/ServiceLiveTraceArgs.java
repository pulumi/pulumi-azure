// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.webpubsub.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ServiceLiveTraceArgs extends com.pulumi.resources.ResourceArgs {

    public static final ServiceLiveTraceArgs Empty = new ServiceLiveTraceArgs();

    /**
     * Whether the log category `ConnectivityLogs` is enabled? Defaults to `true`
     * 
     */
    @Import(name="connectivityLogsEnabled")
    private @Nullable Output<Boolean> connectivityLogsEnabled;

    /**
     * @return Whether the log category `ConnectivityLogs` is enabled? Defaults to `true`
     * 
     */
    public Optional<Output<Boolean>> connectivityLogsEnabled() {
        return Optional.ofNullable(this.connectivityLogsEnabled);
    }

    /**
     * Whether the live trace is enabled? Defaults to `true`.
     * 
     */
    @Import(name="enabled")
    private @Nullable Output<Boolean> enabled;

    /**
     * @return Whether the live trace is enabled? Defaults to `true`.
     * 
     */
    public Optional<Output<Boolean>> enabled() {
        return Optional.ofNullable(this.enabled);
    }

    /**
     * Whether the log category `HttpRequestLogs` is enabled? Defaults to `true`
     * 
     */
    @Import(name="httpRequestLogsEnabled")
    private @Nullable Output<Boolean> httpRequestLogsEnabled;

    /**
     * @return Whether the log category `HttpRequestLogs` is enabled? Defaults to `true`
     * 
     */
    public Optional<Output<Boolean>> httpRequestLogsEnabled() {
        return Optional.ofNullable(this.httpRequestLogsEnabled);
    }

    /**
     * Whether the log category `MessagingLogs` is enabled? Defaults to `true`
     * 
     */
    @Import(name="messagingLogsEnabled")
    private @Nullable Output<Boolean> messagingLogsEnabled;

    /**
     * @return Whether the log category `MessagingLogs` is enabled? Defaults to `true`
     * 
     */
    public Optional<Output<Boolean>> messagingLogsEnabled() {
        return Optional.ofNullable(this.messagingLogsEnabled);
    }

    private ServiceLiveTraceArgs() {}

    private ServiceLiveTraceArgs(ServiceLiveTraceArgs $) {
        this.connectivityLogsEnabled = $.connectivityLogsEnabled;
        this.enabled = $.enabled;
        this.httpRequestLogsEnabled = $.httpRequestLogsEnabled;
        this.messagingLogsEnabled = $.messagingLogsEnabled;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ServiceLiveTraceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ServiceLiveTraceArgs $;

        public Builder() {
            $ = new ServiceLiveTraceArgs();
        }

        public Builder(ServiceLiveTraceArgs defaults) {
            $ = new ServiceLiveTraceArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param connectivityLogsEnabled Whether the log category `ConnectivityLogs` is enabled? Defaults to `true`
         * 
         * @return builder
         * 
         */
        public Builder connectivityLogsEnabled(@Nullable Output<Boolean> connectivityLogsEnabled) {
            $.connectivityLogsEnabled = connectivityLogsEnabled;
            return this;
        }

        /**
         * @param connectivityLogsEnabled Whether the log category `ConnectivityLogs` is enabled? Defaults to `true`
         * 
         * @return builder
         * 
         */
        public Builder connectivityLogsEnabled(Boolean connectivityLogsEnabled) {
            return connectivityLogsEnabled(Output.of(connectivityLogsEnabled));
        }

        /**
         * @param enabled Whether the live trace is enabled? Defaults to `true`.
         * 
         * @return builder
         * 
         */
        public Builder enabled(@Nullable Output<Boolean> enabled) {
            $.enabled = enabled;
            return this;
        }

        /**
         * @param enabled Whether the live trace is enabled? Defaults to `true`.
         * 
         * @return builder
         * 
         */
        public Builder enabled(Boolean enabled) {
            return enabled(Output.of(enabled));
        }

        /**
         * @param httpRequestLogsEnabled Whether the log category `HttpRequestLogs` is enabled? Defaults to `true`
         * 
         * @return builder
         * 
         */
        public Builder httpRequestLogsEnabled(@Nullable Output<Boolean> httpRequestLogsEnabled) {
            $.httpRequestLogsEnabled = httpRequestLogsEnabled;
            return this;
        }

        /**
         * @param httpRequestLogsEnabled Whether the log category `HttpRequestLogs` is enabled? Defaults to `true`
         * 
         * @return builder
         * 
         */
        public Builder httpRequestLogsEnabled(Boolean httpRequestLogsEnabled) {
            return httpRequestLogsEnabled(Output.of(httpRequestLogsEnabled));
        }

        /**
         * @param messagingLogsEnabled Whether the log category `MessagingLogs` is enabled? Defaults to `true`
         * 
         * @return builder
         * 
         */
        public Builder messagingLogsEnabled(@Nullable Output<Boolean> messagingLogsEnabled) {
            $.messagingLogsEnabled = messagingLogsEnabled;
            return this;
        }

        /**
         * @param messagingLogsEnabled Whether the log category `MessagingLogs` is enabled? Defaults to `true`
         * 
         * @return builder
         * 
         */
        public Builder messagingLogsEnabled(Boolean messagingLogsEnabled) {
            return messagingLogsEnabled(Output.of(messagingLogsEnabled));
        }

        public ServiceLiveTraceArgs build() {
            return $;
        }
    }

}
