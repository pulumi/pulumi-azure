// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.containerservice;

import com.pulumi.azure.Utilities;
import com.pulumi.azure.containerservice.RegistryArgs;
import com.pulumi.azure.containerservice.inputs.RegistryState;
import com.pulumi.azure.containerservice.outputs.RegistryEncryption;
import com.pulumi.azure.containerservice.outputs.RegistryGeoreplication;
import com.pulumi.azure.containerservice.outputs.RegistryIdentity;
import com.pulumi.azure.containerservice.outputs.RegistryNetworkRuleSet;
import com.pulumi.azure.containerservice.outputs.RegistryRetentionPolicy;
import com.pulumi.azure.containerservice.outputs.RegistryTrustPolicy;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Manages an Azure Container Registry.
 * 
 * ## Example Usage
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.azure.core.ResourceGroup;
 * import com.pulumi.azure.core.ResourceGroupArgs;
 * import com.pulumi.azure.containerservice.Registry;
 * import com.pulumi.azure.containerservice.RegistryArgs;
 * import com.pulumi.azure.containerservice.inputs.RegistryGeoreplicationArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new ResourceGroup(&#34;example&#34;, ResourceGroupArgs.builder()        
 *             .location(&#34;West Europe&#34;)
 *             .build());
 * 
 *         var acr = new Registry(&#34;acr&#34;, RegistryArgs.builder()        
 *             .resourceGroupName(example.name())
 *             .location(example.location())
 *             .sku(&#34;Premium&#34;)
 *             .adminEnabled(false)
 *             .georeplications(            
 *                 RegistryGeoreplicationArgs.builder()
 *                     .location(&#34;East US&#34;)
 *                     .zoneRedundancyEnabled(true)
 *                     .tags()
 *                     .build(),
 *                 RegistryGeoreplicationArgs.builder()
 *                     .location(&#34;North Europe&#34;)
 *                     .zoneRedundancyEnabled(true)
 *                     .tags()
 *                     .build())
 *             .build());
 * 
 *     }
 * }
 * ```
 * ### Encryption)
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.azure.core.ResourceGroup;
 * import com.pulumi.azure.core.ResourceGroupArgs;
 * import com.pulumi.azure.authorization.UserAssignedIdentity;
 * import com.pulumi.azure.authorization.UserAssignedIdentityArgs;
 * import com.pulumi.azure.keyvault.KeyvaultFunctions;
 * import com.pulumi.azure.keyvault.inputs.GetKeyArgs;
 * import com.pulumi.azure.containerservice.Registry;
 * import com.pulumi.azure.containerservice.RegistryArgs;
 * import com.pulumi.azure.containerservice.inputs.RegistryIdentityArgs;
 * import com.pulumi.azure.containerservice.inputs.RegistryEncryptionArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var exampleResourceGroup = new ResourceGroup(&#34;exampleResourceGroup&#34;, ResourceGroupArgs.builder()        
 *             .location(&#34;West Europe&#34;)
 *             .build());
 * 
 *         var exampleUserAssignedIdentity = new UserAssignedIdentity(&#34;exampleUserAssignedIdentity&#34;, UserAssignedIdentityArgs.builder()        
 *             .resourceGroupName(exampleResourceGroup.name())
 *             .location(exampleResourceGroup.location())
 *             .build());
 * 
 *         final var exampleKey = KeyvaultFunctions.getKey(GetKeyArgs.builder()
 *             .name(&#34;super-secret&#34;)
 *             .keyVaultId(data.azurerm_key_vault().existing().id())
 *             .build());
 * 
 *         var acr = new Registry(&#34;acr&#34;, RegistryArgs.builder()        
 *             .resourceGroupName(exampleResourceGroup.name())
 *             .location(exampleResourceGroup.location())
 *             .sku(&#34;Premium&#34;)
 *             .identity(RegistryIdentityArgs.builder()
 *                 .type(&#34;UserAssigned&#34;)
 *                 .identityIds(exampleUserAssignedIdentity.id())
 *                 .build())
 *             .encryption(RegistryEncryptionArgs.builder()
 *                 .enabled(true)
 *                 .keyVaultKeyId(exampleKey.applyValue(getKeyResult -&gt; getKeyResult.id()))
 *                 .identityClientId(exampleUserAssignedIdentity.clientId())
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * ```
 * ### Attaching A Container Registry To A Kubernetes Cluster)
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.azure.core.ResourceGroup;
 * import com.pulumi.azure.core.ResourceGroupArgs;
 * import com.pulumi.azure.containerservice.Registry;
 * import com.pulumi.azure.containerservice.RegistryArgs;
 * import com.pulumi.azure.containerservice.KubernetesCluster;
 * import com.pulumi.azure.containerservice.KubernetesClusterArgs;
 * import com.pulumi.azure.containerservice.inputs.KubernetesClusterDefaultNodePoolArgs;
 * import com.pulumi.azure.containerservice.inputs.KubernetesClusterIdentityArgs;
 * import com.pulumi.azure.authorization.Assignment;
 * import com.pulumi.azure.authorization.AssignmentArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var exampleResourceGroup = new ResourceGroup(&#34;exampleResourceGroup&#34;, ResourceGroupArgs.builder()        
 *             .location(&#34;West Europe&#34;)
 *             .build());
 * 
 *         var exampleRegistry = new Registry(&#34;exampleRegistry&#34;, RegistryArgs.builder()        
 *             .resourceGroupName(exampleResourceGroup.name())
 *             .location(exampleResourceGroup.location())
 *             .sku(&#34;Premium&#34;)
 *             .build());
 * 
 *         var exampleKubernetesCluster = new KubernetesCluster(&#34;exampleKubernetesCluster&#34;, KubernetesClusterArgs.builder()        
 *             .location(exampleResourceGroup.location())
 *             .resourceGroupName(exampleResourceGroup.name())
 *             .dnsPrefix(&#34;exampleaks1&#34;)
 *             .defaultNodePool(KubernetesClusterDefaultNodePoolArgs.builder()
 *                 .name(&#34;default&#34;)
 *                 .nodeCount(1)
 *                 .vmSize(&#34;Standard_D2_v2&#34;)
 *                 .build())
 *             .identity(KubernetesClusterIdentityArgs.builder()
 *                 .type(&#34;SystemAssigned&#34;)
 *                 .build())
 *             .tags(Map.of(&#34;Environment&#34;, &#34;Production&#34;))
 *             .build());
 * 
 *         var exampleAssignment = new Assignment(&#34;exampleAssignment&#34;, AssignmentArgs.builder()        
 *             .principalId(exampleKubernetesCluster.kubeletIdentity().applyValue(kubeletIdentity -&gt; kubeletIdentity.objectId()))
 *             .roleDefinitionName(&#34;AcrPull&#34;)
 *             .scope(exampleRegistry.id())
 *             .skipServicePrincipalAadCheck(true)
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * Container Registries can be imported using the `resource id`, e.g.
 * 
 * ```sh
 *  $ pulumi import azure:containerservice/registry:Registry example /subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/mygroup1/providers/Microsoft.ContainerRegistry/registries/myregistry1
 * ```
 * 
 */
@ResourceType(type="azure:containerservice/registry:Registry")
public class Registry extends com.pulumi.resources.CustomResource {
    /**
     * Specifies whether the admin user is enabled. Defaults to `false`.
     * 
     */
    @Export(name="adminEnabled", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> adminEnabled;

    /**
     * @return Specifies whether the admin user is enabled. Defaults to `false`.
     * 
     */
    public Output<Optional<Boolean>> adminEnabled() {
        return Codegen.optional(this.adminEnabled);
    }
    /**
     * The Password associated with the Container Registry Admin account - if the admin account is enabled.
     * 
     */
    @Export(name="adminPassword", type=String.class, parameters={})
    private Output<String> adminPassword;

    /**
     * @return The Password associated with the Container Registry Admin account - if the admin account is enabled.
     * 
     */
    public Output<String> adminPassword() {
        return this.adminPassword;
    }
    /**
     * The Username associated with the Container Registry Admin account - if the admin account is enabled.
     * 
     */
    @Export(name="adminUsername", type=String.class, parameters={})
    private Output<String> adminUsername;

    /**
     * @return The Username associated with the Container Registry Admin account - if the admin account is enabled.
     * 
     */
    public Output<String> adminUsername() {
        return this.adminUsername;
    }
    /**
     * Whether allows anonymous (unauthenticated) pull access to this Container Registry?  This is only supported on resources with the `Standard` or `Premium` SKU.
     * 
     */
    @Export(name="anonymousPullEnabled", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> anonymousPullEnabled;

    /**
     * @return Whether allows anonymous (unauthenticated) pull access to this Container Registry?  This is only supported on resources with the `Standard` or `Premium` SKU.
     * 
     */
    public Output<Optional<Boolean>> anonymousPullEnabled() {
        return Codegen.optional(this.anonymousPullEnabled);
    }
    /**
     * Whether to enable dedicated data endpoints for this Container Registry?  This is only supported on resources with the `Premium` SKU.
     * 
     */
    @Export(name="dataEndpointEnabled", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> dataEndpointEnabled;

    /**
     * @return Whether to enable dedicated data endpoints for this Container Registry?  This is only supported on resources with the `Premium` SKU.
     * 
     */
    public Output<Optional<Boolean>> dataEndpointEnabled() {
        return Codegen.optional(this.dataEndpointEnabled);
    }
    /**
     * An `encryption` block as documented below.
     * 
     */
    @Export(name="encryption", type=RegistryEncryption.class, parameters={})
    private Output<RegistryEncryption> encryption;

    /**
     * @return An `encryption` block as documented below.
     * 
     */
    public Output<RegistryEncryption> encryption() {
        return this.encryption;
    }
    /**
     * Boolean value that indicates whether export policy is enabled. Defaults to `true`. In order to set it to `false`, make sure the `public_network_access_enabled` is also set to `false`.
     * 
     */
    @Export(name="exportPolicyEnabled", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> exportPolicyEnabled;

    /**
     * @return Boolean value that indicates whether export policy is enabled. Defaults to `true`. In order to set it to `false`, make sure the `public_network_access_enabled` is also set to `false`.
     * 
     */
    public Output<Optional<Boolean>> exportPolicyEnabled() {
        return Codegen.optional(this.exportPolicyEnabled);
    }
    /**
     * A `georeplications` block as documented below.
     * 
     */
    @Export(name="georeplications", type=List.class, parameters={RegistryGeoreplication.class})
    private Output</* @Nullable */ List<RegistryGeoreplication>> georeplications;

    /**
     * @return A `georeplications` block as documented below.
     * 
     */
    public Output<Optional<List<RegistryGeoreplication>>> georeplications() {
        return Codegen.optional(this.georeplications);
    }
    /**
     * An `identity` block as defined below.
     * 
     */
    @Export(name="identity", type=RegistryIdentity.class, parameters={})
    private Output</* @Nullable */ RegistryIdentity> identity;

    /**
     * @return An `identity` block as defined below.
     * 
     */
    public Output<Optional<RegistryIdentity>> identity() {
        return Codegen.optional(this.identity);
    }
    /**
     * Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="location", type=String.class, parameters={})
    private Output<String> location;

    /**
     * @return Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> location() {
        return this.location;
    }
    /**
     * The URL that can be used to log into the container registry.
     * 
     */
    @Export(name="loginServer", type=String.class, parameters={})
    private Output<String> loginServer;

    /**
     * @return The URL that can be used to log into the container registry.
     * 
     */
    public Output<String> loginServer() {
        return this.loginServer;
    }
    /**
     * Specifies the name of the Container Registry. Only Alphanumeric characters allowed. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return Specifies the name of the Container Registry. Only Alphanumeric characters allowed. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Whether to allow trusted Azure services to access a network restricted Container Registry? Possible values are `None` and `AzureServices`. Defaults to `AzureServices`.
     * 
     */
    @Export(name="networkRuleBypassOption", type=String.class, parameters={})
    private Output</* @Nullable */ String> networkRuleBypassOption;

    /**
     * @return Whether to allow trusted Azure services to access a network restricted Container Registry? Possible values are `None` and `AzureServices`. Defaults to `AzureServices`.
     * 
     */
    public Output<Optional<String>> networkRuleBypassOption() {
        return Codegen.optional(this.networkRuleBypassOption);
    }
    /**
     * A `network_rule_set` block as documented below.
     * 
     */
    @Export(name="networkRuleSet", type=RegistryNetworkRuleSet.class, parameters={})
    private Output<RegistryNetworkRuleSet> networkRuleSet;

    /**
     * @return A `network_rule_set` block as documented below.
     * 
     */
    public Output<RegistryNetworkRuleSet> networkRuleSet() {
        return this.networkRuleSet;
    }
    /**
     * Whether public network access is allowed for the container registry. Defaults to `true`.
     * 
     */
    @Export(name="publicNetworkAccessEnabled", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> publicNetworkAccessEnabled;

    /**
     * @return Whether public network access is allowed for the container registry. Defaults to `true`.
     * 
     */
    public Output<Optional<Boolean>> publicNetworkAccessEnabled() {
        return Codegen.optional(this.publicNetworkAccessEnabled);
    }
    /**
     * Boolean value that indicates whether quarantine policy is enabled.
     * 
     */
    @Export(name="quarantinePolicyEnabled", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> quarantinePolicyEnabled;

    /**
     * @return Boolean value that indicates whether quarantine policy is enabled.
     * 
     */
    public Output<Optional<Boolean>> quarantinePolicyEnabled() {
        return Codegen.optional(this.quarantinePolicyEnabled);
    }
    /**
     * The name of the resource group in which to create the Container Registry. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="resourceGroupName", type=String.class, parameters={})
    private Output<String> resourceGroupName;

    /**
     * @return The name of the resource group in which to create the Container Registry. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }
    /**
     * A `retention_policy` block as documented below.
     * 
     */
    @Export(name="retentionPolicy", type=RegistryRetentionPolicy.class, parameters={})
    private Output<RegistryRetentionPolicy> retentionPolicy;

    /**
     * @return A `retention_policy` block as documented below.
     * 
     */
    public Output<RegistryRetentionPolicy> retentionPolicy() {
        return this.retentionPolicy;
    }
    /**
     * The SKU name of the container registry. Possible values are  `Basic`, `Standard` and `Premium`.
     * 
     */
    @Export(name="sku", type=String.class, parameters={})
    private Output<String> sku;

    /**
     * @return The SKU name of the container registry. Possible values are  `Basic`, `Standard` and `Premium`.
     * 
     */
    public Output<String> sku() {
        return this.sku;
    }
    /**
     * A mapping of tags to assign to the resource.
     * 
     */
    @Export(name="tags", type=Map.class, parameters={String.class, String.class})
    private Output</* @Nullable */ Map<String,String>> tags;

    /**
     * @return A mapping of tags to assign to the resource.
     * 
     */
    public Output<Optional<Map<String,String>>> tags() {
        return Codegen.optional(this.tags);
    }
    /**
     * A `trust_policy` block as documented below.
     * 
     */
    @Export(name="trustPolicy", type=RegistryTrustPolicy.class, parameters={})
    private Output<RegistryTrustPolicy> trustPolicy;

    /**
     * @return A `trust_policy` block as documented below.
     * 
     */
    public Output<RegistryTrustPolicy> trustPolicy() {
        return this.trustPolicy;
    }
    /**
     * Whether zone redundancy is enabled for this Container Registry? Changing this forces a new resource to be created. Defaults to `false`.
     * 
     */
    @Export(name="zoneRedundancyEnabled", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> zoneRedundancyEnabled;

    /**
     * @return Whether zone redundancy is enabled for this Container Registry? Changing this forces a new resource to be created. Defaults to `false`.
     * 
     */
    public Output<Optional<Boolean>> zoneRedundancyEnabled() {
        return Codegen.optional(this.zoneRedundancyEnabled);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Registry(String name) {
        this(name, RegistryArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Registry(String name, RegistryArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Registry(String name, RegistryArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:containerservice/registry:Registry", name, args == null ? RegistryArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private Registry(String name, Output<String> id, @Nullable RegistryState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:containerservice/registry:Registry", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .additionalSecretOutputs(List.of(
                "adminPassword"
            ))
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Registry get(String name, Output<String> id, @Nullable RegistryState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Registry(name, id, state, options);
    }
}
