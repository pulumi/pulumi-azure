// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.eventhub;

import com.pulumi.azure.Utilities;
import com.pulumi.azure.eventhub.SubscriptionArgs;
import com.pulumi.azure.eventhub.inputs.SubscriptionState;
import com.pulumi.azure.eventhub.outputs.SubscriptionClientScopedSubscription;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Manages a ServiceBus Subscription.
 * 
 * ## Example Usage
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.azure.core.ResourceGroup;
 * import com.pulumi.azure.core.ResourceGroupArgs;
 * import com.pulumi.azure.servicebus.Namespace;
 * import com.pulumi.azure.servicebus.NamespaceArgs;
 * import com.pulumi.azure.servicebus.Topic;
 * import com.pulumi.azure.servicebus.TopicArgs;
 * import com.pulumi.azure.servicebus.Subscription;
 * import com.pulumi.azure.servicebus.SubscriptionArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var exampleResourceGroup = new ResourceGroup(&#34;exampleResourceGroup&#34;, ResourceGroupArgs.builder()        
 *             .location(&#34;West Europe&#34;)
 *             .build());
 * 
 *         var exampleNamespace = new Namespace(&#34;exampleNamespace&#34;, NamespaceArgs.builder()        
 *             .location(exampleResourceGroup.location())
 *             .resourceGroupName(exampleResourceGroup.name())
 *             .sku(&#34;Standard&#34;)
 *             .tags(Map.of(&#34;source&#34;, &#34;example&#34;))
 *             .build());
 * 
 *         var exampleTopic = new Topic(&#34;exampleTopic&#34;, TopicArgs.builder()        
 *             .namespaceId(exampleNamespace.id())
 *             .enablePartitioning(true)
 *             .build());
 * 
 *         var exampleSubscription = new Subscription(&#34;exampleSubscription&#34;, SubscriptionArgs.builder()        
 *             .topicId(exampleTopic.id())
 *             .maxDeliveryCount(1)
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * Service Bus Subscriptions can be imported using the `resource id`, e.g.
 * 
 * ```sh
 *  $ pulumi import azure:eventhub/subscription:Subscription example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/mygroup1/providers/Microsoft.ServiceBus/namespaces/sbns1/topics/sntopic1/subscriptions/sbsub1
 * ```
 * 
 * @deprecated
 * azure.eventhub.Subscription has been deprecated in favor of azure.servicebus.Subscription
 * 
 */
@Deprecated /* azure.eventhub.Subscription has been deprecated in favor of azure.servicebus.Subscription */
@ResourceType(type="azure:eventhub/subscription:Subscription")
public class Subscription extends com.pulumi.resources.CustomResource {
    /**
     * The idle interval after which the topic is automatically deleted as an [ISO 8601 duration](https://en.wikipedia.org/wiki/ISO_8601#Durations). The minimum duration is `5` minutes or `PT5M`.
     * 
     */
    @Export(name="autoDeleteOnIdle", refs={String.class}, tree="[0]")
    private Output<String> autoDeleteOnIdle;

    /**
     * @return The idle interval after which the topic is automatically deleted as an [ISO 8601 duration](https://en.wikipedia.org/wiki/ISO_8601#Durations). The minimum duration is `5` minutes or `PT5M`.
     * 
     */
    public Output<String> autoDeleteOnIdle() {
        return this.autoDeleteOnIdle;
    }
    /**
     * A `client_scoped_subscription` block as defined below.
     * 
     */
    @Export(name="clientScopedSubscription", refs={SubscriptionClientScopedSubscription.class}, tree="[0]")
    private Output</* @Nullable */ SubscriptionClientScopedSubscription> clientScopedSubscription;

    /**
     * @return A `client_scoped_subscription` block as defined below.
     * 
     */
    public Output<Optional<SubscriptionClientScopedSubscription>> clientScopedSubscription() {
        return Codegen.optional(this.clientScopedSubscription);
    }
    /**
     * whether the subscription is scoped to a client id. Defaults to `false`.
     * 
     * &gt; **NOTE:** Client Scoped Subscription can only be used for JMS subscription (Java Message Service).
     * 
     */
    @Export(name="clientScopedSubscriptionEnabled", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> clientScopedSubscriptionEnabled;

    /**
     * @return whether the subscription is scoped to a client id. Defaults to `false`.
     * 
     * &gt; **NOTE:** Client Scoped Subscription can only be used for JMS subscription (Java Message Service).
     * 
     */
    public Output<Optional<Boolean>> clientScopedSubscriptionEnabled() {
        return Codegen.optional(this.clientScopedSubscriptionEnabled);
    }
    /**
     * Boolean flag which controls whether the Subscription has dead letter support on filter evaluation exceptions. Defaults to `true`.
     * 
     */
    @Export(name="deadLetteringOnFilterEvaluationError", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> deadLetteringOnFilterEvaluationError;

    /**
     * @return Boolean flag which controls whether the Subscription has dead letter support on filter evaluation exceptions. Defaults to `true`.
     * 
     */
    public Output<Optional<Boolean>> deadLetteringOnFilterEvaluationError() {
        return Codegen.optional(this.deadLetteringOnFilterEvaluationError);
    }
    /**
     * Boolean flag which controls whether the Subscription has dead letter support when a message expires.
     * 
     */
    @Export(name="deadLetteringOnMessageExpiration", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> deadLetteringOnMessageExpiration;

    /**
     * @return Boolean flag which controls whether the Subscription has dead letter support when a message expires.
     * 
     */
    public Output<Optional<Boolean>> deadLetteringOnMessageExpiration() {
        return Codegen.optional(this.deadLetteringOnMessageExpiration);
    }
    /**
     * The Default message timespan to live as an [ISO 8601 duration](https://en.wikipedia.org/wiki/ISO_8601#Durations). This is the duration after which the message expires, starting from when the message is sent to Service Bus. This is the default value used when TimeToLive is not set on a message itself.
     * 
     */
    @Export(name="defaultMessageTtl", refs={String.class}, tree="[0]")
    private Output<String> defaultMessageTtl;

    /**
     * @return The Default message timespan to live as an [ISO 8601 duration](https://en.wikipedia.org/wiki/ISO_8601#Durations). This is the duration after which the message expires, starting from when the message is sent to Service Bus. This is the default value used when TimeToLive is not set on a message itself.
     * 
     */
    public Output<String> defaultMessageTtl() {
        return this.defaultMessageTtl;
    }
    /**
     * Boolean flag which controls whether the Subscription supports batched operations.
     * 
     */
    @Export(name="enableBatchedOperations", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> enableBatchedOperations;

    /**
     * @return Boolean flag which controls whether the Subscription supports batched operations.
     * 
     */
    public Output<Optional<Boolean>> enableBatchedOperations() {
        return Codegen.optional(this.enableBatchedOperations);
    }
    /**
     * The name of a Queue or Topic to automatically forward Dead Letter messages to.
     * 
     */
    @Export(name="forwardDeadLetteredMessagesTo", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> forwardDeadLetteredMessagesTo;

    /**
     * @return The name of a Queue or Topic to automatically forward Dead Letter messages to.
     * 
     */
    public Output<Optional<String>> forwardDeadLetteredMessagesTo() {
        return Codegen.optional(this.forwardDeadLetteredMessagesTo);
    }
    /**
     * The name of a Queue or Topic to automatically forward messages to.
     * 
     */
    @Export(name="forwardTo", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> forwardTo;

    /**
     * @return The name of a Queue or Topic to automatically forward messages to.
     * 
     */
    public Output<Optional<String>> forwardTo() {
        return Codegen.optional(this.forwardTo);
    }
    /**
     * The lock duration for the subscription as an [ISO 8601 duration](https://en.wikipedia.org/wiki/ISO_8601#Durations). The default value is `1` minute or `P0DT0H1M0S` . The maximum value is `5` minutes or `P0DT0H5M0S` .
     * 
     */
    @Export(name="lockDuration", refs={String.class}, tree="[0]")
    private Output<String> lockDuration;

    /**
     * @return The lock duration for the subscription as an [ISO 8601 duration](https://en.wikipedia.org/wiki/ISO_8601#Durations). The default value is `1` minute or `P0DT0H1M0S` . The maximum value is `5` minutes or `P0DT0H5M0S` .
     * 
     */
    public Output<String> lockDuration() {
        return this.lockDuration;
    }
    /**
     * The maximum number of deliveries.
     * 
     */
    @Export(name="maxDeliveryCount", refs={Integer.class}, tree="[0]")
    private Output<Integer> maxDeliveryCount;

    /**
     * @return The maximum number of deliveries.
     * 
     */
    public Output<Integer> maxDeliveryCount() {
        return this.maxDeliveryCount;
    }
    /**
     * Specifies the name of the ServiceBus Subscription resource. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return Specifies the name of the ServiceBus Subscription resource. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Boolean flag which controls whether this Subscription supports the concept of a session. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="requiresSession", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> requiresSession;

    /**
     * @return Boolean flag which controls whether this Subscription supports the concept of a session. Changing this forces a new resource to be created.
     * 
     */
    public Output<Optional<Boolean>> requiresSession() {
        return Codegen.optional(this.requiresSession);
    }
    /**
     * The status of the Subscription. Possible values are `Active`,`ReceiveDisabled`, or `Disabled`. Defaults to `Active`.
     * 
     */
    @Export(name="status", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> status;

    /**
     * @return The status of the Subscription. Possible values are `Active`,`ReceiveDisabled`, or `Disabled`. Defaults to `Active`.
     * 
     */
    public Output<Optional<String>> status() {
        return Codegen.optional(this.status);
    }
    /**
     * The ID of the ServiceBus Topic to create this Subscription in. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="topicId", refs={String.class}, tree="[0]")
    private Output<String> topicId;

    /**
     * @return The ID of the ServiceBus Topic to create this Subscription in. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> topicId() {
        return this.topicId;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Subscription(String name) {
        this(name, SubscriptionArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Subscription(String name, SubscriptionArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Subscription(String name, SubscriptionArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:eventhub/subscription:Subscription", name, args == null ? SubscriptionArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private Subscription(String name, Output<String> id, @Nullable SubscriptionState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:eventhub/subscription:Subscription", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Subscription get(String name, Output<String> id, @Nullable SubscriptionState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Subscription(name, id, state, options);
    }
}
