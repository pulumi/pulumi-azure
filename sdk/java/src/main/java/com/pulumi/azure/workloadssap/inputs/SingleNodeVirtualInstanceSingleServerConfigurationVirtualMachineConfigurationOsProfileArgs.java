// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.workloadssap.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class SingleNodeVirtualInstanceSingleServerConfigurationVirtualMachineConfigurationOsProfileArgs extends com.pulumi.resources.ResourceArgs {

    public static final SingleNodeVirtualInstanceSingleServerConfigurationVirtualMachineConfigurationOsProfileArgs Empty = new SingleNodeVirtualInstanceSingleServerConfigurationVirtualMachineConfigurationOsProfileArgs();

    /**
     * The name of the administrator account. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="adminUsername", required=true)
    private Output<String> adminUsername;

    /**
     * @return The name of the administrator account. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> adminUsername() {
        return this.adminUsername;
    }

    /**
     * The SSH public key that is used to authenticate with the Virtual Machine. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="sshPrivateKey", required=true)
    private Output<String> sshPrivateKey;

    /**
     * @return The SSH public key that is used to authenticate with the Virtual Machine. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> sshPrivateKey() {
        return this.sshPrivateKey;
    }

    /**
     * The SSH private key that is used to authenticate with the Virtual Machine. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="sshPublicKey", required=true)
    private Output<String> sshPublicKey;

    /**
     * @return The SSH private key that is used to authenticate with the Virtual Machine. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> sshPublicKey() {
        return this.sshPublicKey;
    }

    private SingleNodeVirtualInstanceSingleServerConfigurationVirtualMachineConfigurationOsProfileArgs() {}

    private SingleNodeVirtualInstanceSingleServerConfigurationVirtualMachineConfigurationOsProfileArgs(SingleNodeVirtualInstanceSingleServerConfigurationVirtualMachineConfigurationOsProfileArgs $) {
        this.adminUsername = $.adminUsername;
        this.sshPrivateKey = $.sshPrivateKey;
        this.sshPublicKey = $.sshPublicKey;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SingleNodeVirtualInstanceSingleServerConfigurationVirtualMachineConfigurationOsProfileArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SingleNodeVirtualInstanceSingleServerConfigurationVirtualMachineConfigurationOsProfileArgs $;

        public Builder() {
            $ = new SingleNodeVirtualInstanceSingleServerConfigurationVirtualMachineConfigurationOsProfileArgs();
        }

        public Builder(SingleNodeVirtualInstanceSingleServerConfigurationVirtualMachineConfigurationOsProfileArgs defaults) {
            $ = new SingleNodeVirtualInstanceSingleServerConfigurationVirtualMachineConfigurationOsProfileArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param adminUsername The name of the administrator account. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder adminUsername(Output<String> adminUsername) {
            $.adminUsername = adminUsername;
            return this;
        }

        /**
         * @param adminUsername The name of the administrator account. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder adminUsername(String adminUsername) {
            return adminUsername(Output.of(adminUsername));
        }

        /**
         * @param sshPrivateKey The SSH public key that is used to authenticate with the Virtual Machine. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder sshPrivateKey(Output<String> sshPrivateKey) {
            $.sshPrivateKey = sshPrivateKey;
            return this;
        }

        /**
         * @param sshPrivateKey The SSH public key that is used to authenticate with the Virtual Machine. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder sshPrivateKey(String sshPrivateKey) {
            return sshPrivateKey(Output.of(sshPrivateKey));
        }

        /**
         * @param sshPublicKey The SSH private key that is used to authenticate with the Virtual Machine. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder sshPublicKey(Output<String> sshPublicKey) {
            $.sshPublicKey = sshPublicKey;
            return this;
        }

        /**
         * @param sshPublicKey The SSH private key that is used to authenticate with the Virtual Machine. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder sshPublicKey(String sshPublicKey) {
            return sshPublicKey(Output.of(sshPublicKey));
        }

        public SingleNodeVirtualInstanceSingleServerConfigurationVirtualMachineConfigurationOsProfileArgs build() {
            if ($.adminUsername == null) {
                throw new MissingRequiredPropertyException("SingleNodeVirtualInstanceSingleServerConfigurationVirtualMachineConfigurationOsProfileArgs", "adminUsername");
            }
            if ($.sshPrivateKey == null) {
                throw new MissingRequiredPropertyException("SingleNodeVirtualInstanceSingleServerConfigurationVirtualMachineConfigurationOsProfileArgs", "sshPrivateKey");
            }
            if ($.sshPublicKey == null) {
                throw new MissingRequiredPropertyException("SingleNodeVirtualInstanceSingleServerConfigurationVirtualMachineConfigurationOsProfileArgs", "sshPublicKey");
            }
            return $;
        }
    }

}
