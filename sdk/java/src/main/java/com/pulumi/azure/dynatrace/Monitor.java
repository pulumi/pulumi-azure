// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.dynatrace;

import com.pulumi.azure.Utilities;
import com.pulumi.azure.dynatrace.MonitorArgs;
import com.pulumi.azure.dynatrace.inputs.MonitorState;
import com.pulumi.azure.dynatrace.outputs.MonitorEnvironmentProperty;
import com.pulumi.azure.dynatrace.outputs.MonitorIdentity;
import com.pulumi.azure.dynatrace.outputs.MonitorPlan;
import com.pulumi.azure.dynatrace.outputs.MonitorUser;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Manages a Dynatrace monitor.
 * 
 * ## Example Usage
 * 
 * ## API Providers
 * 
 * &lt;!-- This section is generated, changes will be overwritten --&gt;
 * This resource uses the following Azure API Providers:
 * 
 * * `Dynatrace.Observability` - 2023-04-27
 * 
 * ## Import
 * 
 * Dynatrace monitor can be imported using the `resource id`, e.g.
 * 
 * ```sh
 * $ pulumi import azure:dynatrace/monitor:Monitor example /subscriptions/12345678-1234-9876-4563-123456789012/resourceGroups/resGroup1/providers/Dynatrace.Observability/monitors/monitor1
 * ```
 * 
 */
@ResourceType(type="azure:dynatrace/monitor:Monitor")
public class Monitor extends com.pulumi.resources.CustomResource {
    /**
     * Properties of the Dynatrace environment. An `environmentProperties` block as defined below.
     * 
     */
    @Export(name="environmentProperties", refs={List.class,MonitorEnvironmentProperty.class}, tree="[0,1]")
    private Output</* @Nullable */ List<MonitorEnvironmentProperty>> environmentProperties;

    /**
     * @return Properties of the Dynatrace environment. An `environmentProperties` block as defined below.
     * 
     */
    public Output<Optional<List<MonitorEnvironmentProperty>>> environmentProperties() {
        return Codegen.optional(this.environmentProperties);
    }
    /**
     * The kind of managed identity assigned to this resource.  A `identity` block as defined below.
     * 
     */
    @Export(name="identity", refs={MonitorIdentity.class}, tree="[0]")
    private Output<MonitorIdentity> identity;

    /**
     * @return The kind of managed identity assigned to this resource.  A `identity` block as defined below.
     * 
     */
    public Output<MonitorIdentity> identity() {
        return this.identity;
    }
    /**
     * The Azure Region where the Dynatrace monitor should exist. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="location", refs={String.class}, tree="[0]")
    private Output<String> location;

    /**
     * @return The Azure Region where the Dynatrace monitor should exist. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> location() {
        return this.location;
    }
    /**
     * Flag specifying the Marketplace Subscription Status of the resource. If payment is not made in time, the resource will go in Suspended state. Possible values are `Active` and `Suspended`.
     * 
     */
    @Export(name="marketplaceSubscription", refs={String.class}, tree="[0]")
    private Output<String> marketplaceSubscription;

    /**
     * @return Flag specifying the Marketplace Subscription Status of the resource. If payment is not made in time, the resource will go in Suspended state. Possible values are `Active` and `Suspended`.
     * 
     */
    public Output<String> marketplaceSubscription() {
        return this.marketplaceSubscription;
    }
    /**
     * Flag specifying if the resource monitoring is enabled or disabled. Default is `true`.
     * 
     */
    @Export(name="monitoringEnabled", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> monitoringEnabled;

    /**
     * @return Flag specifying if the resource monitoring is enabled or disabled. Default is `true`.
     * 
     */
    public Output<Optional<Boolean>> monitoringEnabled() {
        return Codegen.optional(this.monitoringEnabled);
    }
    /**
     * Name of the Dynatrace monitor. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return Name of the Dynatrace monitor. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Billing plan information. A `plan` block as defined below. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="plan", refs={MonitorPlan.class}, tree="[0]")
    private Output<MonitorPlan> plan;

    /**
     * @return Billing plan information. A `plan` block as defined below. Changing this forces a new resource to be created.
     * 
     */
    public Output<MonitorPlan> plan() {
        return this.plan;
    }
    /**
     * The name of the Resource Group where the Dynatrace monitor should exist. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="resourceGroupName", refs={String.class}, tree="[0]")
    private Output<String> resourceGroupName;

    /**
     * @return The name of the Resource Group where the Dynatrace monitor should exist. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }
    /**
     * A mapping of tags to assign to the resource.
     * 
     */
    @Export(name="tags", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output</* @Nullable */ Map<String,String>> tags;

    /**
     * @return A mapping of tags to assign to the resource.
     * 
     */
    public Output<Optional<Map<String,String>>> tags() {
        return Codegen.optional(this.tags);
    }
    /**
     * User&#39;s information. A `user` block as defined below. Chainging this forces a new resource to be created.
     * 
     */
    @Export(name="user", refs={MonitorUser.class}, tree="[0]")
    private Output<MonitorUser> user;

    /**
     * @return User&#39;s information. A `user` block as defined below. Chainging this forces a new resource to be created.
     * 
     */
    public Output<MonitorUser> user() {
        return this.user;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Monitor(java.lang.String name) {
        this(name, MonitorArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Monitor(java.lang.String name, MonitorArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Monitor(java.lang.String name, MonitorArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:dynatrace/monitor:Monitor", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private Monitor(java.lang.String name, Output<java.lang.String> id, @Nullable MonitorState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:dynatrace/monitor:Monitor", name, state, makeResourceOptions(options, id), false);
    }

    private static MonitorArgs makeArgs(MonitorArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? MonitorArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Monitor get(java.lang.String name, Output<java.lang.String> id, @Nullable MonitorState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Monitor(name, id, state, options);
    }
}
