// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.dataprotection.inputs;

import com.pulumi.azure.dataprotection.inputs.BackupPolicyKubernetesClusterRetentionRuleCriteriaArgs;
import com.pulumi.azure.dataprotection.inputs.BackupPolicyKubernetesClusterRetentionRuleLifeCycleArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class BackupPolicyKubernetesClusterRetentionRuleArgs extends com.pulumi.resources.ResourceArgs {

    public static final BackupPolicyKubernetesClusterRetentionRuleArgs Empty = new BackupPolicyKubernetesClusterRetentionRuleArgs();

    /**
     * A `criteria` block as defined below. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="criteria", required=true)
    private Output<BackupPolicyKubernetesClusterRetentionRuleCriteriaArgs> criteria;

    /**
     * @return A `criteria` block as defined below. Changing this forces a new resource to be created.
     * 
     */
    public Output<BackupPolicyKubernetesClusterRetentionRuleCriteriaArgs> criteria() {
        return this.criteria;
    }

    /**
     * A `lifeCycle` block as defined below. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="lifeCycles", required=true)
    private Output<List<BackupPolicyKubernetesClusterRetentionRuleLifeCycleArgs>> lifeCycles;

    /**
     * @return A `lifeCycle` block as defined below. Changing this forces a new resource to be created.
     * 
     */
    public Output<List<BackupPolicyKubernetesClusterRetentionRuleLifeCycleArgs>> lifeCycles() {
        return this.lifeCycles;
    }

    /**
     * The name which should be used for this retention rule. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    /**
     * @return The name which should be used for this retention rule. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    /**
     * Specifies the priority of the rule. The priority number must be unique for each rule. The lower the priority number, the higher the priority of the rule. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="priority", required=true)
    private Output<Integer> priority;

    /**
     * @return Specifies the priority of the rule. The priority number must be unique for each rule. The lower the priority number, the higher the priority of the rule. Changing this forces a new resource to be created.
     * 
     */
    public Output<Integer> priority() {
        return this.priority;
    }

    private BackupPolicyKubernetesClusterRetentionRuleArgs() {}

    private BackupPolicyKubernetesClusterRetentionRuleArgs(BackupPolicyKubernetesClusterRetentionRuleArgs $) {
        this.criteria = $.criteria;
        this.lifeCycles = $.lifeCycles;
        this.name = $.name;
        this.priority = $.priority;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BackupPolicyKubernetesClusterRetentionRuleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BackupPolicyKubernetesClusterRetentionRuleArgs $;

        public Builder() {
            $ = new BackupPolicyKubernetesClusterRetentionRuleArgs();
        }

        public Builder(BackupPolicyKubernetesClusterRetentionRuleArgs defaults) {
            $ = new BackupPolicyKubernetesClusterRetentionRuleArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param criteria A `criteria` block as defined below. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder criteria(Output<BackupPolicyKubernetesClusterRetentionRuleCriteriaArgs> criteria) {
            $.criteria = criteria;
            return this;
        }

        /**
         * @param criteria A `criteria` block as defined below. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder criteria(BackupPolicyKubernetesClusterRetentionRuleCriteriaArgs criteria) {
            return criteria(Output.of(criteria));
        }

        /**
         * @param lifeCycles A `lifeCycle` block as defined below. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder lifeCycles(Output<List<BackupPolicyKubernetesClusterRetentionRuleLifeCycleArgs>> lifeCycles) {
            $.lifeCycles = lifeCycles;
            return this;
        }

        /**
         * @param lifeCycles A `lifeCycle` block as defined below. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder lifeCycles(List<BackupPolicyKubernetesClusterRetentionRuleLifeCycleArgs> lifeCycles) {
            return lifeCycles(Output.of(lifeCycles));
        }

        /**
         * @param lifeCycles A `lifeCycle` block as defined below. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder lifeCycles(BackupPolicyKubernetesClusterRetentionRuleLifeCycleArgs... lifeCycles) {
            return lifeCycles(List.of(lifeCycles));
        }

        /**
         * @param name The name which should be used for this retention rule. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name which should be used for this retention rule. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param priority Specifies the priority of the rule. The priority number must be unique for each rule. The lower the priority number, the higher the priority of the rule. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder priority(Output<Integer> priority) {
            $.priority = priority;
            return this;
        }

        /**
         * @param priority Specifies the priority of the rule. The priority number must be unique for each rule. The lower the priority number, the higher the priority of the rule. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder priority(Integer priority) {
            return priority(Output.of(priority));
        }

        public BackupPolicyKubernetesClusterRetentionRuleArgs build() {
            if ($.criteria == null) {
                throw new MissingRequiredPropertyException("BackupPolicyKubernetesClusterRetentionRuleArgs", "criteria");
            }
            if ($.lifeCycles == null) {
                throw new MissingRequiredPropertyException("BackupPolicyKubernetesClusterRetentionRuleArgs", "lifeCycles");
            }
            if ($.name == null) {
                throw new MissingRequiredPropertyException("BackupPolicyKubernetesClusterRetentionRuleArgs", "name");
            }
            if ($.priority == null) {
                throw new MissingRequiredPropertyException("BackupPolicyKubernetesClusterRetentionRuleArgs", "priority");
            }
            return $;
        }
    }

}
