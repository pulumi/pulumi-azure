// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.storage.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class EncryptionScopeState extends com.pulumi.resources.ResourceArgs {

    public static final EncryptionScopeState Empty = new EncryptionScopeState();

    /**
     * Is a secondary layer of encryption with Platform Managed Keys for data applied?
     * 
     */
    @Import(name="infrastructureEncryptionRequired")
    private @Nullable Output<Boolean> infrastructureEncryptionRequired;

    /**
     * @return Is a secondary layer of encryption with Platform Managed Keys for data applied?
     * 
     */
    public Optional<Output<Boolean>> infrastructureEncryptionRequired() {
        return Optional.ofNullable(this.infrastructureEncryptionRequired);
    }

    /**
     * The ID of the Key Vault Key. Required when `source` is `Microsoft.KeyVault`.
     * 
     */
    @Import(name="keyVaultKeyId")
    private @Nullable Output<String> keyVaultKeyId;

    /**
     * @return The ID of the Key Vault Key. Required when `source` is `Microsoft.KeyVault`.
     * 
     */
    public Optional<Output<String>> keyVaultKeyId() {
        return Optional.ofNullable(this.keyVaultKeyId);
    }

    /**
     * The name which should be used for this Storage Encryption Scope. Changing this forces a new Storage Encryption Scope to be created.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name which should be used for this Storage Encryption Scope. Changing this forces a new Storage Encryption Scope to be created.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The source of the Storage Encryption Scope. Possible values are `Microsoft.KeyVault` and `Microsoft.Storage`.
     * 
     */
    @Import(name="source")
    private @Nullable Output<String> source;

    /**
     * @return The source of the Storage Encryption Scope. Possible values are `Microsoft.KeyVault` and `Microsoft.Storage`.
     * 
     */
    public Optional<Output<String>> source() {
        return Optional.ofNullable(this.source);
    }

    /**
     * The ID of the Storage Account where this Storage Encryption Scope is created. Changing this forces a new Storage Encryption Scope to be created.
     * 
     */
    @Import(name="storageAccountId")
    private @Nullable Output<String> storageAccountId;

    /**
     * @return The ID of the Storage Account where this Storage Encryption Scope is created. Changing this forces a new Storage Encryption Scope to be created.
     * 
     */
    public Optional<Output<String>> storageAccountId() {
        return Optional.ofNullable(this.storageAccountId);
    }

    private EncryptionScopeState() {}

    private EncryptionScopeState(EncryptionScopeState $) {
        this.infrastructureEncryptionRequired = $.infrastructureEncryptionRequired;
        this.keyVaultKeyId = $.keyVaultKeyId;
        this.name = $.name;
        this.source = $.source;
        this.storageAccountId = $.storageAccountId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(EncryptionScopeState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private EncryptionScopeState $;

        public Builder() {
            $ = new EncryptionScopeState();
        }

        public Builder(EncryptionScopeState defaults) {
            $ = new EncryptionScopeState(Objects.requireNonNull(defaults));
        }

        /**
         * @param infrastructureEncryptionRequired Is a secondary layer of encryption with Platform Managed Keys for data applied?
         * 
         * @return builder
         * 
         */
        public Builder infrastructureEncryptionRequired(@Nullable Output<Boolean> infrastructureEncryptionRequired) {
            $.infrastructureEncryptionRequired = infrastructureEncryptionRequired;
            return this;
        }

        /**
         * @param infrastructureEncryptionRequired Is a secondary layer of encryption with Platform Managed Keys for data applied?
         * 
         * @return builder
         * 
         */
        public Builder infrastructureEncryptionRequired(Boolean infrastructureEncryptionRequired) {
            return infrastructureEncryptionRequired(Output.of(infrastructureEncryptionRequired));
        }

        /**
         * @param keyVaultKeyId The ID of the Key Vault Key. Required when `source` is `Microsoft.KeyVault`.
         * 
         * @return builder
         * 
         */
        public Builder keyVaultKeyId(@Nullable Output<String> keyVaultKeyId) {
            $.keyVaultKeyId = keyVaultKeyId;
            return this;
        }

        /**
         * @param keyVaultKeyId The ID of the Key Vault Key. Required when `source` is `Microsoft.KeyVault`.
         * 
         * @return builder
         * 
         */
        public Builder keyVaultKeyId(String keyVaultKeyId) {
            return keyVaultKeyId(Output.of(keyVaultKeyId));
        }

        /**
         * @param name The name which should be used for this Storage Encryption Scope. Changing this forces a new Storage Encryption Scope to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name which should be used for this Storage Encryption Scope. Changing this forces a new Storage Encryption Scope to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param source The source of the Storage Encryption Scope. Possible values are `Microsoft.KeyVault` and `Microsoft.Storage`.
         * 
         * @return builder
         * 
         */
        public Builder source(@Nullable Output<String> source) {
            $.source = source;
            return this;
        }

        /**
         * @param source The source of the Storage Encryption Scope. Possible values are `Microsoft.KeyVault` and `Microsoft.Storage`.
         * 
         * @return builder
         * 
         */
        public Builder source(String source) {
            return source(Output.of(source));
        }

        /**
         * @param storageAccountId The ID of the Storage Account where this Storage Encryption Scope is created. Changing this forces a new Storage Encryption Scope to be created.
         * 
         * @return builder
         * 
         */
        public Builder storageAccountId(@Nullable Output<String> storageAccountId) {
            $.storageAccountId = storageAccountId;
            return this;
        }

        /**
         * @param storageAccountId The ID of the Storage Account where this Storage Encryption Scope is created. Changing this forces a new Storage Encryption Scope to be created.
         * 
         * @return builder
         * 
         */
        public Builder storageAccountId(String storageAccountId) {
            return storageAccountId(Output.of(storageAccountId));
        }

        public EncryptionScopeState build() {
            return $;
        }
    }

}
