// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.mobile.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetNetworkSiteResult {
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return The Azure Region where the Mobile Network Site should exist.
     * 
     */
    private String location;
    private String mobileNetworkId;
    private String name;
    /**
     * @return An array of Id of Network Functions deployed on the site.
     * 
     */
    private List<String> networkFunctionIds;
    /**
     * @return A mapping of tags which should be assigned to the Mobile Network Site.
     * 
     */
    private Map<String,String> tags;

    private GetNetworkSiteResult() {}
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The Azure Region where the Mobile Network Site should exist.
     * 
     */
    public String location() {
        return this.location;
    }
    public String mobileNetworkId() {
        return this.mobileNetworkId;
    }
    public String name() {
        return this.name;
    }
    /**
     * @return An array of Id of Network Functions deployed on the site.
     * 
     */
    public List<String> networkFunctionIds() {
        return this.networkFunctionIds;
    }
    /**
     * @return A mapping of tags which should be assigned to the Mobile Network Site.
     * 
     */
    public Map<String,String> tags() {
        return this.tags;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetNetworkSiteResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String id;
        private String location;
        private String mobileNetworkId;
        private String name;
        private List<String> networkFunctionIds;
        private Map<String,String> tags;
        public Builder() {}
        public Builder(GetNetworkSiteResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.id = defaults.id;
    	      this.location = defaults.location;
    	      this.mobileNetworkId = defaults.mobileNetworkId;
    	      this.name = defaults.name;
    	      this.networkFunctionIds = defaults.networkFunctionIds;
    	      this.tags = defaults.tags;
        }

        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetNetworkSiteResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder location(String location) {
            if (location == null) {
              throw new MissingRequiredPropertyException("GetNetworkSiteResult", "location");
            }
            this.location = location;
            return this;
        }
        @CustomType.Setter
        public Builder mobileNetworkId(String mobileNetworkId) {
            if (mobileNetworkId == null) {
              throw new MissingRequiredPropertyException("GetNetworkSiteResult", "mobileNetworkId");
            }
            this.mobileNetworkId = mobileNetworkId;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetNetworkSiteResult", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder networkFunctionIds(List<String> networkFunctionIds) {
            if (networkFunctionIds == null) {
              throw new MissingRequiredPropertyException("GetNetworkSiteResult", "networkFunctionIds");
            }
            this.networkFunctionIds = networkFunctionIds;
            return this;
        }
        public Builder networkFunctionIds(String... networkFunctionIds) {
            return networkFunctionIds(List.of(networkFunctionIds));
        }
        @CustomType.Setter
        public Builder tags(Map<String,String> tags) {
            if (tags == null) {
              throw new MissingRequiredPropertyException("GetNetworkSiteResult", "tags");
            }
            this.tags = tags;
            return this;
        }
        public GetNetworkSiteResult build() {
            final var _resultValue = new GetNetworkSiteResult();
            _resultValue.id = id;
            _resultValue.location = location;
            _resultValue.mobileNetworkId = mobileNetworkId;
            _resultValue.name = name;
            _resultValue.networkFunctionIds = networkFunctionIds;
            _resultValue.tags = tags;
            return _resultValue;
        }
    }
}
