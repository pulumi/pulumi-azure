// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.datadog;

import com.pulumi.azure.datadog.inputs.MonitorDatadogOrganizationArgs;
import com.pulumi.azure.datadog.inputs.MonitorIdentityArgs;
import com.pulumi.azure.datadog.inputs.MonitorUserArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class MonitorArgs extends com.pulumi.resources.ResourceArgs {

    public static final MonitorArgs Empty = new MonitorArgs();

    /**
     * A `datadog_organization` block as defined below.
     * 
     */
    @Import(name="datadogOrganization", required=true)
    private Output<MonitorDatadogOrganizationArgs> datadogOrganization;

    /**
     * @return A `datadog_organization` block as defined below.
     * 
     */
    public Output<MonitorDatadogOrganizationArgs> datadogOrganization() {
        return this.datadogOrganization;
    }

    /**
     * A `identity` block as defined below.
     * 
     */
    @Import(name="identity")
    private @Nullable Output<MonitorIdentityArgs> identity;

    /**
     * @return A `identity` block as defined below.
     * 
     */
    public Optional<Output<MonitorIdentityArgs>> identity() {
        return Optional.ofNullable(this.identity);
    }

    /**
     * The Azure Region where the Datadog Monitor should exist. Changing this forces a new Datadog Monitor to be created.
     * 
     */
    @Import(name="location")
    private @Nullable Output<String> location;

    /**
     * @return The Azure Region where the Datadog Monitor should exist. Changing this forces a new Datadog Monitor to be created.
     * 
     */
    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * Is monitoring enabled? Defaults to `true`.
     * 
     */
    @Import(name="monitoringEnabled")
    private @Nullable Output<Boolean> monitoringEnabled;

    /**
     * @return Is monitoring enabled? Defaults to `true`.
     * 
     */
    public Optional<Output<Boolean>> monitoringEnabled() {
        return Optional.ofNullable(this.monitoringEnabled);
    }

    /**
     * The name of the user that will be associated with the Datadog Monitor. Changing this forces a new Datadog Monitor to be created.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the user that will be associated with the Datadog Monitor. Changing this forces a new Datadog Monitor to be created.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The name of the Resource Group where the Datadog Monitor should exist. Changing this forces a new Datadog Monitor to be created.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    /**
     * @return The name of the Resource Group where the Datadog Monitor should exist. Changing this forces a new Datadog Monitor to be created.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * The name which should be used for this sku.
     * 
     */
    @Import(name="skuName", required=true)
    private Output<String> skuName;

    /**
     * @return The name which should be used for this sku.
     * 
     */
    public Output<String> skuName() {
        return this.skuName;
    }

    /**
     * A mapping of tags which should be assigned to the Datadog Monitor.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return A mapping of tags which should be assigned to the Datadog Monitor.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * A `user` block as defined below.
     * 
     */
    @Import(name="user", required=true)
    private Output<MonitorUserArgs> user;

    /**
     * @return A `user` block as defined below.
     * 
     */
    public Output<MonitorUserArgs> user() {
        return this.user;
    }

    private MonitorArgs() {}

    private MonitorArgs(MonitorArgs $) {
        this.datadogOrganization = $.datadogOrganization;
        this.identity = $.identity;
        this.location = $.location;
        this.monitoringEnabled = $.monitoringEnabled;
        this.name = $.name;
        this.resourceGroupName = $.resourceGroupName;
        this.skuName = $.skuName;
        this.tags = $.tags;
        this.user = $.user;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(MonitorArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private MonitorArgs $;

        public Builder() {
            $ = new MonitorArgs();
        }

        public Builder(MonitorArgs defaults) {
            $ = new MonitorArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param datadogOrganization A `datadog_organization` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder datadogOrganization(Output<MonitorDatadogOrganizationArgs> datadogOrganization) {
            $.datadogOrganization = datadogOrganization;
            return this;
        }

        /**
         * @param datadogOrganization A `datadog_organization` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder datadogOrganization(MonitorDatadogOrganizationArgs datadogOrganization) {
            return datadogOrganization(Output.of(datadogOrganization));
        }

        /**
         * @param identity A `identity` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder identity(@Nullable Output<MonitorIdentityArgs> identity) {
            $.identity = identity;
            return this;
        }

        /**
         * @param identity A `identity` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder identity(MonitorIdentityArgs identity) {
            return identity(Output.of(identity));
        }

        /**
         * @param location The Azure Region where the Datadog Monitor should exist. Changing this forces a new Datadog Monitor to be created.
         * 
         * @return builder
         * 
         */
        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location The Azure Region where the Datadog Monitor should exist. Changing this forces a new Datadog Monitor to be created.
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param monitoringEnabled Is monitoring enabled? Defaults to `true`.
         * 
         * @return builder
         * 
         */
        public Builder monitoringEnabled(@Nullable Output<Boolean> monitoringEnabled) {
            $.monitoringEnabled = monitoringEnabled;
            return this;
        }

        /**
         * @param monitoringEnabled Is monitoring enabled? Defaults to `true`.
         * 
         * @return builder
         * 
         */
        public Builder monitoringEnabled(Boolean monitoringEnabled) {
            return monitoringEnabled(Output.of(monitoringEnabled));
        }

        /**
         * @param name The name of the user that will be associated with the Datadog Monitor. Changing this forces a new Datadog Monitor to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the user that will be associated with the Datadog Monitor. Changing this forces a new Datadog Monitor to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param resourceGroupName The name of the Resource Group where the Datadog Monitor should exist. Changing this forces a new Datadog Monitor to be created.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName The name of the Resource Group where the Datadog Monitor should exist. Changing this forces a new Datadog Monitor to be created.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        /**
         * @param skuName The name which should be used for this sku.
         * 
         * @return builder
         * 
         */
        public Builder skuName(Output<String> skuName) {
            $.skuName = skuName;
            return this;
        }

        /**
         * @param skuName The name which should be used for this sku.
         * 
         * @return builder
         * 
         */
        public Builder skuName(String skuName) {
            return skuName(Output.of(skuName));
        }

        /**
         * @param tags A mapping of tags which should be assigned to the Datadog Monitor.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags A mapping of tags which should be assigned to the Datadog Monitor.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param user A `user` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder user(Output<MonitorUserArgs> user) {
            $.user = user;
            return this;
        }

        /**
         * @param user A `user` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder user(MonitorUserArgs user) {
            return user(Output.of(user));
        }

        public MonitorArgs build() {
            if ($.datadogOrganization == null) {
                throw new MissingRequiredPropertyException("MonitorArgs", "datadogOrganization");
            }
            if ($.resourceGroupName == null) {
                throw new MissingRequiredPropertyException("MonitorArgs", "resourceGroupName");
            }
            if ($.skuName == null) {
                throw new MissingRequiredPropertyException("MonitorArgs", "skuName");
            }
            if ($.user == null) {
                throw new MissingRequiredPropertyException("MonitorArgs", "user");
            }
            return $;
        }
    }

}
