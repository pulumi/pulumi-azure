// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.cdn.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class FrontdoorOriginGroupHealthProbe {
    /**
     * @return Specifies the number of seconds between health probes. Possible values are between `5` and `31536000` seconds (inclusive).
     * 
     */
    private final Integer intervalInSeconds;
    /**
     * @return Specifies the path relative to the origin that is used to determine the health of the origin. Defaults to `/`.
     * 
     */
    private final @Nullable String path;
    /**
     * @return Specifies the protocol to use for health probe. Possible values are `Http` and `Https`.
     * 
     */
    private final String protocol;
    /**
     * @return Specifies the type of health probe request that is made. Possible values are `GET` and `HEAD`. Defaults to `HEAD`.
     * 
     */
    private final @Nullable String requestType;

    @CustomType.Constructor
    private FrontdoorOriginGroupHealthProbe(
        @CustomType.Parameter("intervalInSeconds") Integer intervalInSeconds,
        @CustomType.Parameter("path") @Nullable String path,
        @CustomType.Parameter("protocol") String protocol,
        @CustomType.Parameter("requestType") @Nullable String requestType) {
        this.intervalInSeconds = intervalInSeconds;
        this.path = path;
        this.protocol = protocol;
        this.requestType = requestType;
    }

    /**
     * @return Specifies the number of seconds between health probes. Possible values are between `5` and `31536000` seconds (inclusive).
     * 
     */
    public Integer intervalInSeconds() {
        return this.intervalInSeconds;
    }
    /**
     * @return Specifies the path relative to the origin that is used to determine the health of the origin. Defaults to `/`.
     * 
     */
    public Optional<String> path() {
        return Optional.ofNullable(this.path);
    }
    /**
     * @return Specifies the protocol to use for health probe. Possible values are `Http` and `Https`.
     * 
     */
    public String protocol() {
        return this.protocol;
    }
    /**
     * @return Specifies the type of health probe request that is made. Possible values are `GET` and `HEAD`. Defaults to `HEAD`.
     * 
     */
    public Optional<String> requestType() {
        return Optional.ofNullable(this.requestType);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(FrontdoorOriginGroupHealthProbe defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Integer intervalInSeconds;
        private @Nullable String path;
        private String protocol;
        private @Nullable String requestType;

        public Builder() {
    	      // Empty
        }

        public Builder(FrontdoorOriginGroupHealthProbe defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.intervalInSeconds = defaults.intervalInSeconds;
    	      this.path = defaults.path;
    	      this.protocol = defaults.protocol;
    	      this.requestType = defaults.requestType;
        }

        public Builder intervalInSeconds(Integer intervalInSeconds) {
            this.intervalInSeconds = Objects.requireNonNull(intervalInSeconds);
            return this;
        }
        public Builder path(@Nullable String path) {
            this.path = path;
            return this;
        }
        public Builder protocol(String protocol) {
            this.protocol = Objects.requireNonNull(protocol);
            return this;
        }
        public Builder requestType(@Nullable String requestType) {
            this.requestType = requestType;
            return this;
        }        public FrontdoorOriginGroupHealthProbe build() {
            return new FrontdoorOriginGroupHealthProbe(intervalInSeconds, path, protocol, requestType);
        }
    }
}
