// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.mssql.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class VirtualMachineAssessmentSchedule {
    /**
     * @return What day of the week the assessment will be run. Possible values are `Friday`, `Monday`, `Saturday`, `Sunday`, `Thursday`, `Tuesday` and `Wednesday`.
     * 
     */
    private String dayOfWeek;
    /**
     * @return How many months between assessment runs. Valid values are between `1` and `5`.
     * 
     * &gt; **NOTE:** Either one of `weekly_interval` or `monthly_occurrence` must be specified.
     * 
     */
    private @Nullable Integer monthlyOccurrence;
    /**
     * @return What time the assessment will be run. Must be in the format `HH:mm`.
     * 
     */
    private String startTime;
    /**
     * @return How many weeks between assessment runs. Valid values are between `1` and `6`.
     * 
     */
    private @Nullable Integer weeklyInterval;

    private VirtualMachineAssessmentSchedule() {}
    /**
     * @return What day of the week the assessment will be run. Possible values are `Friday`, `Monday`, `Saturday`, `Sunday`, `Thursday`, `Tuesday` and `Wednesday`.
     * 
     */
    public String dayOfWeek() {
        return this.dayOfWeek;
    }
    /**
     * @return How many months between assessment runs. Valid values are between `1` and `5`.
     * 
     * &gt; **NOTE:** Either one of `weekly_interval` or `monthly_occurrence` must be specified.
     * 
     */
    public Optional<Integer> monthlyOccurrence() {
        return Optional.ofNullable(this.monthlyOccurrence);
    }
    /**
     * @return What time the assessment will be run. Must be in the format `HH:mm`.
     * 
     */
    public String startTime() {
        return this.startTime;
    }
    /**
     * @return How many weeks between assessment runs. Valid values are between `1` and `6`.
     * 
     */
    public Optional<Integer> weeklyInterval() {
        return Optional.ofNullable(this.weeklyInterval);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(VirtualMachineAssessmentSchedule defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String dayOfWeek;
        private @Nullable Integer monthlyOccurrence;
        private String startTime;
        private @Nullable Integer weeklyInterval;
        public Builder() {}
        public Builder(VirtualMachineAssessmentSchedule defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.dayOfWeek = defaults.dayOfWeek;
    	      this.monthlyOccurrence = defaults.monthlyOccurrence;
    	      this.startTime = defaults.startTime;
    	      this.weeklyInterval = defaults.weeklyInterval;
        }

        @CustomType.Setter
        public Builder dayOfWeek(String dayOfWeek) {
            this.dayOfWeek = Objects.requireNonNull(dayOfWeek);
            return this;
        }
        @CustomType.Setter
        public Builder monthlyOccurrence(@Nullable Integer monthlyOccurrence) {
            this.monthlyOccurrence = monthlyOccurrence;
            return this;
        }
        @CustomType.Setter
        public Builder startTime(String startTime) {
            this.startTime = Objects.requireNonNull(startTime);
            return this;
        }
        @CustomType.Setter
        public Builder weeklyInterval(@Nullable Integer weeklyInterval) {
            this.weeklyInterval = weeklyInterval;
            return this;
        }
        public VirtualMachineAssessmentSchedule build() {
            final var _resultValue = new VirtualMachineAssessmentSchedule();
            _resultValue.dayOfWeek = dayOfWeek;
            _resultValue.monthlyOccurrence = monthlyOccurrence;
            _resultValue.startTime = startTime;
            _resultValue.weeklyInterval = weeklyInterval;
            return _resultValue;
        }
    }
}
