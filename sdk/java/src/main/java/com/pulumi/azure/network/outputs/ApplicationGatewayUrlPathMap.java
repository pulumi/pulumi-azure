// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.network.outputs;

import com.pulumi.azure.network.outputs.ApplicationGatewayUrlPathMapPathRule;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ApplicationGatewayUrlPathMap {
    /**
     * @return The ID of the Default Backend Address Pool.
     * 
     */
    private final @Nullable String defaultBackendAddressPoolId;
    /**
     * @return The Name of the Default Backend Address Pool which should be used for this URL Path Map. Cannot be set if `default_redirect_configuration_name` is set.
     * 
     */
    private final @Nullable String defaultBackendAddressPoolName;
    /**
     * @return The ID of the Default Backend HTTP Settings Collection.
     * 
     */
    private final @Nullable String defaultBackendHttpSettingsId;
    /**
     * @return The Name of the Default Backend HTTP Settings Collection which should be used for this URL Path Map. Cannot be set if `default_redirect_configuration_name` is set.
     * 
     */
    private final @Nullable String defaultBackendHttpSettingsName;
    /**
     * @return The ID of the Default Redirect Configuration.
     * 
     */
    private final @Nullable String defaultRedirectConfigurationId;
    /**
     * @return The Name of the Default Redirect Configuration which should be used for this URL Path Map. Cannot be set if either `default_backend_address_pool_name` or `default_backend_http_settings_name` is set.
     * 
     */
    private final @Nullable String defaultRedirectConfigurationName;
    private final @Nullable String defaultRewriteRuleSetId;
    /**
     * @return The Name of the Default Rewrite Rule Set which should be used for this URL Path Map. Only valid for v2 SKUs.
     * 
     */
    private final @Nullable String defaultRewriteRuleSetName;
    /**
     * @return The ID of the Rewrite Rule Set
     * 
     */
    private final @Nullable String id;
    /**
     * @return The Name of the URL Path Map.
     * 
     */
    private final String name;
    /**
     * @return One or more `path_rule` blocks as defined above.
     * 
     */
    private final List<ApplicationGatewayUrlPathMapPathRule> pathRules;

    @CustomType.Constructor
    private ApplicationGatewayUrlPathMap(
        @CustomType.Parameter("defaultBackendAddressPoolId") @Nullable String defaultBackendAddressPoolId,
        @CustomType.Parameter("defaultBackendAddressPoolName") @Nullable String defaultBackendAddressPoolName,
        @CustomType.Parameter("defaultBackendHttpSettingsId") @Nullable String defaultBackendHttpSettingsId,
        @CustomType.Parameter("defaultBackendHttpSettingsName") @Nullable String defaultBackendHttpSettingsName,
        @CustomType.Parameter("defaultRedirectConfigurationId") @Nullable String defaultRedirectConfigurationId,
        @CustomType.Parameter("defaultRedirectConfigurationName") @Nullable String defaultRedirectConfigurationName,
        @CustomType.Parameter("defaultRewriteRuleSetId") @Nullable String defaultRewriteRuleSetId,
        @CustomType.Parameter("defaultRewriteRuleSetName") @Nullable String defaultRewriteRuleSetName,
        @CustomType.Parameter("id") @Nullable String id,
        @CustomType.Parameter("name") String name,
        @CustomType.Parameter("pathRules") List<ApplicationGatewayUrlPathMapPathRule> pathRules) {
        this.defaultBackendAddressPoolId = defaultBackendAddressPoolId;
        this.defaultBackendAddressPoolName = defaultBackendAddressPoolName;
        this.defaultBackendHttpSettingsId = defaultBackendHttpSettingsId;
        this.defaultBackendHttpSettingsName = defaultBackendHttpSettingsName;
        this.defaultRedirectConfigurationId = defaultRedirectConfigurationId;
        this.defaultRedirectConfigurationName = defaultRedirectConfigurationName;
        this.defaultRewriteRuleSetId = defaultRewriteRuleSetId;
        this.defaultRewriteRuleSetName = defaultRewriteRuleSetName;
        this.id = id;
        this.name = name;
        this.pathRules = pathRules;
    }

    /**
     * @return The ID of the Default Backend Address Pool.
     * 
     */
    public Optional<String> defaultBackendAddressPoolId() {
        return Optional.ofNullable(this.defaultBackendAddressPoolId);
    }
    /**
     * @return The Name of the Default Backend Address Pool which should be used for this URL Path Map. Cannot be set if `default_redirect_configuration_name` is set.
     * 
     */
    public Optional<String> defaultBackendAddressPoolName() {
        return Optional.ofNullable(this.defaultBackendAddressPoolName);
    }
    /**
     * @return The ID of the Default Backend HTTP Settings Collection.
     * 
     */
    public Optional<String> defaultBackendHttpSettingsId() {
        return Optional.ofNullable(this.defaultBackendHttpSettingsId);
    }
    /**
     * @return The Name of the Default Backend HTTP Settings Collection which should be used for this URL Path Map. Cannot be set if `default_redirect_configuration_name` is set.
     * 
     */
    public Optional<String> defaultBackendHttpSettingsName() {
        return Optional.ofNullable(this.defaultBackendHttpSettingsName);
    }
    /**
     * @return The ID of the Default Redirect Configuration.
     * 
     */
    public Optional<String> defaultRedirectConfigurationId() {
        return Optional.ofNullable(this.defaultRedirectConfigurationId);
    }
    /**
     * @return The Name of the Default Redirect Configuration which should be used for this URL Path Map. Cannot be set if either `default_backend_address_pool_name` or `default_backend_http_settings_name` is set.
     * 
     */
    public Optional<String> defaultRedirectConfigurationName() {
        return Optional.ofNullable(this.defaultRedirectConfigurationName);
    }
    public Optional<String> defaultRewriteRuleSetId() {
        return Optional.ofNullable(this.defaultRewriteRuleSetId);
    }
    /**
     * @return The Name of the Default Rewrite Rule Set which should be used for this URL Path Map. Only valid for v2 SKUs.
     * 
     */
    public Optional<String> defaultRewriteRuleSetName() {
        return Optional.ofNullable(this.defaultRewriteRuleSetName);
    }
    /**
     * @return The ID of the Rewrite Rule Set
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return The Name of the URL Path Map.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return One or more `path_rule` blocks as defined above.
     * 
     */
    public List<ApplicationGatewayUrlPathMapPathRule> pathRules() {
        return this.pathRules;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ApplicationGatewayUrlPathMap defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String defaultBackendAddressPoolId;
        private @Nullable String defaultBackendAddressPoolName;
        private @Nullable String defaultBackendHttpSettingsId;
        private @Nullable String defaultBackendHttpSettingsName;
        private @Nullable String defaultRedirectConfigurationId;
        private @Nullable String defaultRedirectConfigurationName;
        private @Nullable String defaultRewriteRuleSetId;
        private @Nullable String defaultRewriteRuleSetName;
        private @Nullable String id;
        private String name;
        private List<ApplicationGatewayUrlPathMapPathRule> pathRules;

        public Builder() {
    	      // Empty
        }

        public Builder(ApplicationGatewayUrlPathMap defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.defaultBackendAddressPoolId = defaults.defaultBackendAddressPoolId;
    	      this.defaultBackendAddressPoolName = defaults.defaultBackendAddressPoolName;
    	      this.defaultBackendHttpSettingsId = defaults.defaultBackendHttpSettingsId;
    	      this.defaultBackendHttpSettingsName = defaults.defaultBackendHttpSettingsName;
    	      this.defaultRedirectConfigurationId = defaults.defaultRedirectConfigurationId;
    	      this.defaultRedirectConfigurationName = defaults.defaultRedirectConfigurationName;
    	      this.defaultRewriteRuleSetId = defaults.defaultRewriteRuleSetId;
    	      this.defaultRewriteRuleSetName = defaults.defaultRewriteRuleSetName;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.pathRules = defaults.pathRules;
        }

        public Builder defaultBackendAddressPoolId(@Nullable String defaultBackendAddressPoolId) {
            this.defaultBackendAddressPoolId = defaultBackendAddressPoolId;
            return this;
        }
        public Builder defaultBackendAddressPoolName(@Nullable String defaultBackendAddressPoolName) {
            this.defaultBackendAddressPoolName = defaultBackendAddressPoolName;
            return this;
        }
        public Builder defaultBackendHttpSettingsId(@Nullable String defaultBackendHttpSettingsId) {
            this.defaultBackendHttpSettingsId = defaultBackendHttpSettingsId;
            return this;
        }
        public Builder defaultBackendHttpSettingsName(@Nullable String defaultBackendHttpSettingsName) {
            this.defaultBackendHttpSettingsName = defaultBackendHttpSettingsName;
            return this;
        }
        public Builder defaultRedirectConfigurationId(@Nullable String defaultRedirectConfigurationId) {
            this.defaultRedirectConfigurationId = defaultRedirectConfigurationId;
            return this;
        }
        public Builder defaultRedirectConfigurationName(@Nullable String defaultRedirectConfigurationName) {
            this.defaultRedirectConfigurationName = defaultRedirectConfigurationName;
            return this;
        }
        public Builder defaultRewriteRuleSetId(@Nullable String defaultRewriteRuleSetId) {
            this.defaultRewriteRuleSetId = defaultRewriteRuleSetId;
            return this;
        }
        public Builder defaultRewriteRuleSetName(@Nullable String defaultRewriteRuleSetName) {
            this.defaultRewriteRuleSetName = defaultRewriteRuleSetName;
            return this;
        }
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        public Builder pathRules(List<ApplicationGatewayUrlPathMapPathRule> pathRules) {
            this.pathRules = Objects.requireNonNull(pathRules);
            return this;
        }
        public Builder pathRules(ApplicationGatewayUrlPathMapPathRule... pathRules) {
            return pathRules(List.of(pathRules));
        }        public ApplicationGatewayUrlPathMap build() {
            return new ApplicationGatewayUrlPathMap(defaultBackendAddressPoolId, defaultBackendAddressPoolName, defaultBackendHttpSettingsId, defaultBackendHttpSettingsName, defaultRedirectConfigurationId, defaultRedirectConfigurationName, defaultRewriteRuleSetId, defaultRewriteRuleSetName, id, name, pathRules);
        }
    }
}
