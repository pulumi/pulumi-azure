// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.containerservice.inputs;

import com.pulumi.azure.containerservice.inputs.FleetUpdateRunManagedClusterUpdateNodeImageSelectionArgs;
import com.pulumi.azure.containerservice.inputs.FleetUpdateRunManagedClusterUpdateUpgradeArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class FleetUpdateRunManagedClusterUpdateArgs extends com.pulumi.resources.ResourceArgs {

    public static final FleetUpdateRunManagedClusterUpdateArgs Empty = new FleetUpdateRunManagedClusterUpdateArgs();

    /**
     * A `nodeImageSelection` block as defined below.
     * 
     */
    @Import(name="nodeImageSelection")
    private @Nullable Output<FleetUpdateRunManagedClusterUpdateNodeImageSelectionArgs> nodeImageSelection;

    /**
     * @return A `nodeImageSelection` block as defined below.
     * 
     */
    public Optional<Output<FleetUpdateRunManagedClusterUpdateNodeImageSelectionArgs>> nodeImageSelection() {
        return Optional.ofNullable(this.nodeImageSelection);
    }

    /**
     * A `upgrade` block as defined below.
     * 
     */
    @Import(name="upgrade", required=true)
    private Output<FleetUpdateRunManagedClusterUpdateUpgradeArgs> upgrade;

    /**
     * @return A `upgrade` block as defined below.
     * 
     */
    public Output<FleetUpdateRunManagedClusterUpdateUpgradeArgs> upgrade() {
        return this.upgrade;
    }

    private FleetUpdateRunManagedClusterUpdateArgs() {}

    private FleetUpdateRunManagedClusterUpdateArgs(FleetUpdateRunManagedClusterUpdateArgs $) {
        this.nodeImageSelection = $.nodeImageSelection;
        this.upgrade = $.upgrade;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FleetUpdateRunManagedClusterUpdateArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FleetUpdateRunManagedClusterUpdateArgs $;

        public Builder() {
            $ = new FleetUpdateRunManagedClusterUpdateArgs();
        }

        public Builder(FleetUpdateRunManagedClusterUpdateArgs defaults) {
            $ = new FleetUpdateRunManagedClusterUpdateArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param nodeImageSelection A `nodeImageSelection` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder nodeImageSelection(@Nullable Output<FleetUpdateRunManagedClusterUpdateNodeImageSelectionArgs> nodeImageSelection) {
            $.nodeImageSelection = nodeImageSelection;
            return this;
        }

        /**
         * @param nodeImageSelection A `nodeImageSelection` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder nodeImageSelection(FleetUpdateRunManagedClusterUpdateNodeImageSelectionArgs nodeImageSelection) {
            return nodeImageSelection(Output.of(nodeImageSelection));
        }

        /**
         * @param upgrade A `upgrade` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder upgrade(Output<FleetUpdateRunManagedClusterUpdateUpgradeArgs> upgrade) {
            $.upgrade = upgrade;
            return this;
        }

        /**
         * @param upgrade A `upgrade` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder upgrade(FleetUpdateRunManagedClusterUpdateUpgradeArgs upgrade) {
            return upgrade(Output.of(upgrade));
        }

        public FleetUpdateRunManagedClusterUpdateArgs build() {
            if ($.upgrade == null) {
                throw new MissingRequiredPropertyException("FleetUpdateRunManagedClusterUpdateArgs", "upgrade");
            }
            return $;
        }
    }

}
