// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.bot.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ChannelDirectLineSite {
    /**
     * @return Enables/Disables this site. Defaults to `true`.
     * 
     */
    private @Nullable Boolean enabled;
    /**
     * @return Is the endpoint parameters enabled for this site?
     * 
     */
    private @Nullable Boolean endpointParametersEnabled;
    /**
     * @return Enables additional security measures for this site, see [Enhanced Directline Authentication Features](https://blog.botframework.com/2018/09/25/enhanced-direct-line-authentication-features). Disabled by default.
     * 
     */
    private @Nullable Boolean enhancedAuthenticationEnabled;
    /**
     * @return Id for the site
     * 
     */
    private @Nullable String id;
    /**
     * @return Primary key for accessing this site
     * 
     */
    private @Nullable String key;
    /**
     * @return Secondary key for accessing this site
     * 
     */
    private @Nullable String key2;
    /**
     * @return The name of the site
     * 
     */
    private String name;
    /**
     * @return Is the storage site enabled for detailed logging? Defaults to `true`.
     * 
     */
    private @Nullable Boolean storageEnabled;
    /**
     * @return This field is required when `is_secure_site_enabled` is enabled. Determines which origins can establish a Directline conversation for this site.
     * 
     */
    private @Nullable List<String> trustedOrigins;
    /**
     * @return Is the user upload enabled for this site? Defaults to `true`.
     * 
     */
    private @Nullable Boolean userUploadEnabled;
    /**
     * @return Enables v1 of the Directline protocol for this site. Defaults to `true`.
     * 
     */
    private @Nullable Boolean v1Allowed;
    /**
     * @return Enables v3 of the Directline protocol for this site. Defaults to `true`.
     * 
     */
    private @Nullable Boolean v3Allowed;

    private ChannelDirectLineSite() {}
    /**
     * @return Enables/Disables this site. Defaults to `true`.
     * 
     */
    public Optional<Boolean> enabled() {
        return Optional.ofNullable(this.enabled);
    }
    /**
     * @return Is the endpoint parameters enabled for this site?
     * 
     */
    public Optional<Boolean> endpointParametersEnabled() {
        return Optional.ofNullable(this.endpointParametersEnabled);
    }
    /**
     * @return Enables additional security measures for this site, see [Enhanced Directline Authentication Features](https://blog.botframework.com/2018/09/25/enhanced-direct-line-authentication-features). Disabled by default.
     * 
     */
    public Optional<Boolean> enhancedAuthenticationEnabled() {
        return Optional.ofNullable(this.enhancedAuthenticationEnabled);
    }
    /**
     * @return Id for the site
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return Primary key for accessing this site
     * 
     */
    public Optional<String> key() {
        return Optional.ofNullable(this.key);
    }
    /**
     * @return Secondary key for accessing this site
     * 
     */
    public Optional<String> key2() {
        return Optional.ofNullable(this.key2);
    }
    /**
     * @return The name of the site
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Is the storage site enabled for detailed logging? Defaults to `true`.
     * 
     */
    public Optional<Boolean> storageEnabled() {
        return Optional.ofNullable(this.storageEnabled);
    }
    /**
     * @return This field is required when `is_secure_site_enabled` is enabled. Determines which origins can establish a Directline conversation for this site.
     * 
     */
    public List<String> trustedOrigins() {
        return this.trustedOrigins == null ? List.of() : this.trustedOrigins;
    }
    /**
     * @return Is the user upload enabled for this site? Defaults to `true`.
     * 
     */
    public Optional<Boolean> userUploadEnabled() {
        return Optional.ofNullable(this.userUploadEnabled);
    }
    /**
     * @return Enables v1 of the Directline protocol for this site. Defaults to `true`.
     * 
     */
    public Optional<Boolean> v1Allowed() {
        return Optional.ofNullable(this.v1Allowed);
    }
    /**
     * @return Enables v3 of the Directline protocol for this site. Defaults to `true`.
     * 
     */
    public Optional<Boolean> v3Allowed() {
        return Optional.ofNullable(this.v3Allowed);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ChannelDirectLineSite defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Boolean enabled;
        private @Nullable Boolean endpointParametersEnabled;
        private @Nullable Boolean enhancedAuthenticationEnabled;
        private @Nullable String id;
        private @Nullable String key;
        private @Nullable String key2;
        private String name;
        private @Nullable Boolean storageEnabled;
        private @Nullable List<String> trustedOrigins;
        private @Nullable Boolean userUploadEnabled;
        private @Nullable Boolean v1Allowed;
        private @Nullable Boolean v3Allowed;
        public Builder() {}
        public Builder(ChannelDirectLineSite defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.enabled = defaults.enabled;
    	      this.endpointParametersEnabled = defaults.endpointParametersEnabled;
    	      this.enhancedAuthenticationEnabled = defaults.enhancedAuthenticationEnabled;
    	      this.id = defaults.id;
    	      this.key = defaults.key;
    	      this.key2 = defaults.key2;
    	      this.name = defaults.name;
    	      this.storageEnabled = defaults.storageEnabled;
    	      this.trustedOrigins = defaults.trustedOrigins;
    	      this.userUploadEnabled = defaults.userUploadEnabled;
    	      this.v1Allowed = defaults.v1Allowed;
    	      this.v3Allowed = defaults.v3Allowed;
        }

        @CustomType.Setter
        public Builder enabled(@Nullable Boolean enabled) {
            this.enabled = enabled;
            return this;
        }
        @CustomType.Setter
        public Builder endpointParametersEnabled(@Nullable Boolean endpointParametersEnabled) {
            this.endpointParametersEnabled = endpointParametersEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder enhancedAuthenticationEnabled(@Nullable Boolean enhancedAuthenticationEnabled) {
            this.enhancedAuthenticationEnabled = enhancedAuthenticationEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder key(@Nullable String key) {
            this.key = key;
            return this;
        }
        @CustomType.Setter
        public Builder key2(@Nullable String key2) {
            this.key2 = key2;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder storageEnabled(@Nullable Boolean storageEnabled) {
            this.storageEnabled = storageEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder trustedOrigins(@Nullable List<String> trustedOrigins) {
            this.trustedOrigins = trustedOrigins;
            return this;
        }
        public Builder trustedOrigins(String... trustedOrigins) {
            return trustedOrigins(List.of(trustedOrigins));
        }
        @CustomType.Setter
        public Builder userUploadEnabled(@Nullable Boolean userUploadEnabled) {
            this.userUploadEnabled = userUploadEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder v1Allowed(@Nullable Boolean v1Allowed) {
            this.v1Allowed = v1Allowed;
            return this;
        }
        @CustomType.Setter
        public Builder v3Allowed(@Nullable Boolean v3Allowed) {
            this.v3Allowed = v3Allowed;
            return this;
        }
        public ChannelDirectLineSite build() {
            final var _resultValue = new ChannelDirectLineSite();
            _resultValue.enabled = enabled;
            _resultValue.endpointParametersEnabled = endpointParametersEnabled;
            _resultValue.enhancedAuthenticationEnabled = enhancedAuthenticationEnabled;
            _resultValue.id = id;
            _resultValue.key = key;
            _resultValue.key2 = key2;
            _resultValue.name = name;
            _resultValue.storageEnabled = storageEnabled;
            _resultValue.trustedOrigins = trustedOrigins;
            _resultValue.userUploadEnabled = userUploadEnabled;
            _resultValue.v1Allowed = v1Allowed;
            _resultValue.v3Allowed = v3Allowed;
            return _resultValue;
        }
    }
}
