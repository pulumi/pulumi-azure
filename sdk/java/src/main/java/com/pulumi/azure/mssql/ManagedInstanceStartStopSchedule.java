// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.mssql;

import com.pulumi.azure.Utilities;
import com.pulumi.azure.mssql.ManagedInstanceStartStopScheduleArgs;
import com.pulumi.azure.mssql.inputs.ManagedInstanceStartStopScheduleState;
import com.pulumi.azure.mssql.outputs.ManagedInstanceStartStopScheduleSchedule;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Manages Start Stop Schedules for an MS SQL Managed Instance.
 * 
 * ## Example Usage
 * 
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.azure.core.ResourceGroup;
 * import com.pulumi.azure.core.ResourceGroupArgs;
 * import com.pulumi.azure.network.NetworkSecurityGroup;
 * import com.pulumi.azure.network.NetworkSecurityGroupArgs;
 * import com.pulumi.azure.network.NetworkSecurityRule;
 * import com.pulumi.azure.network.NetworkSecurityRuleArgs;
 * import com.pulumi.azure.network.VirtualNetwork;
 * import com.pulumi.azure.network.VirtualNetworkArgs;
 * import com.pulumi.azure.network.Subnet;
 * import com.pulumi.azure.network.SubnetArgs;
 * import com.pulumi.azure.network.inputs.SubnetDelegationArgs;
 * import com.pulumi.azure.network.inputs.SubnetDelegationServiceDelegationArgs;
 * import com.pulumi.azure.network.SubnetNetworkSecurityGroupAssociation;
 * import com.pulumi.azure.network.SubnetNetworkSecurityGroupAssociationArgs;
 * import com.pulumi.azure.network.RouteTable;
 * import com.pulumi.azure.network.RouteTableArgs;
 * import com.pulumi.azure.network.SubnetRouteTableAssociation;
 * import com.pulumi.azure.network.SubnetRouteTableAssociationArgs;
 * import com.pulumi.azure.mssql.ManagedInstance;
 * import com.pulumi.azure.mssql.ManagedInstanceArgs;
 * import com.pulumi.azure.mssql.ManagedInstanceStartStopSchedule;
 * import com.pulumi.azure.mssql.ManagedInstanceStartStopScheduleArgs;
 * import com.pulumi.azure.mssql.inputs.ManagedInstanceStartStopScheduleScheduleArgs;
 * import com.pulumi.resources.CustomResourceOptions;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new ResourceGroup("example", ResourceGroupArgs.builder()
 *             .name("database-rg")
 *             .location("West Europe")
 *             .build());
 * 
 *         var exampleNetworkSecurityGroup = new NetworkSecurityGroup("exampleNetworkSecurityGroup", NetworkSecurityGroupArgs.builder()
 *             .name("mi-security-group")
 *             .location(example.location())
 *             .resourceGroupName(example.name())
 *             .build());
 * 
 *         var allowManagementInbound = new NetworkSecurityRule("allowManagementInbound", NetworkSecurityRuleArgs.builder()
 *             .name("allow_management_inbound")
 *             .priority(106)
 *             .direction("Inbound")
 *             .access("Allow")
 *             .protocol("Tcp")
 *             .sourcePortRange("*")
 *             .destinationPortRanges(            
 *                 "9000",
 *                 "9003",
 *                 "1438",
 *                 "1440",
 *                 "1452")
 *             .sourceAddressPrefix("*")
 *             .destinationAddressPrefix("*")
 *             .resourceGroupName(example.name())
 *             .networkSecurityGroupName(exampleNetworkSecurityGroup.name())
 *             .build());
 * 
 *         var allowMisubnetInbound = new NetworkSecurityRule("allowMisubnetInbound", NetworkSecurityRuleArgs.builder()
 *             .name("allow_misubnet_inbound")
 *             .priority(200)
 *             .direction("Inbound")
 *             .access("Allow")
 *             .protocol("*")
 *             .sourcePortRange("*")
 *             .destinationPortRange("*")
 *             .sourceAddressPrefix("10.0.0.0/24")
 *             .destinationAddressPrefix("*")
 *             .resourceGroupName(example.name())
 *             .networkSecurityGroupName(exampleNetworkSecurityGroup.name())
 *             .build());
 * 
 *         var allowHealthProbeInbound = new NetworkSecurityRule("allowHealthProbeInbound", NetworkSecurityRuleArgs.builder()
 *             .name("allow_health_probe_inbound")
 *             .priority(300)
 *             .direction("Inbound")
 *             .access("Allow")
 *             .protocol("*")
 *             .sourcePortRange("*")
 *             .destinationPortRange("*")
 *             .sourceAddressPrefix("AzureLoadBalancer")
 *             .destinationAddressPrefix("*")
 *             .resourceGroupName(example.name())
 *             .networkSecurityGroupName(exampleNetworkSecurityGroup.name())
 *             .build());
 * 
 *         var allowTdsInbound = new NetworkSecurityRule("allowTdsInbound", NetworkSecurityRuleArgs.builder()
 *             .name("allow_tds_inbound")
 *             .priority(1000)
 *             .direction("Inbound")
 *             .access("Allow")
 *             .protocol("Tcp")
 *             .sourcePortRange("*")
 *             .destinationPortRange("1433")
 *             .sourceAddressPrefix("VirtualNetwork")
 *             .destinationAddressPrefix("*")
 *             .resourceGroupName(example.name())
 *             .networkSecurityGroupName(exampleNetworkSecurityGroup.name())
 *             .build());
 * 
 *         var denyAllInbound = new NetworkSecurityRule("denyAllInbound", NetworkSecurityRuleArgs.builder()
 *             .name("deny_all_inbound")
 *             .priority(4096)
 *             .direction("Inbound")
 *             .access("Deny")
 *             .protocol("*")
 *             .sourcePortRange("*")
 *             .destinationPortRange("*")
 *             .sourceAddressPrefix("*")
 *             .destinationAddressPrefix("*")
 *             .resourceGroupName(example.name())
 *             .networkSecurityGroupName(exampleNetworkSecurityGroup.name())
 *             .build());
 * 
 *         var allowManagementOutbound = new NetworkSecurityRule("allowManagementOutbound", NetworkSecurityRuleArgs.builder()
 *             .name("allow_management_outbound")
 *             .priority(102)
 *             .direction("Outbound")
 *             .access("Allow")
 *             .protocol("Tcp")
 *             .sourcePortRange("*")
 *             .destinationPortRanges(            
 *                 "80",
 *                 "443",
 *                 "12000")
 *             .sourceAddressPrefix("*")
 *             .destinationAddressPrefix("*")
 *             .resourceGroupName(example.name())
 *             .networkSecurityGroupName(exampleNetworkSecurityGroup.name())
 *             .build());
 * 
 *         var allowMisubnetOutbound = new NetworkSecurityRule("allowMisubnetOutbound", NetworkSecurityRuleArgs.builder()
 *             .name("allow_misubnet_outbound")
 *             .priority(200)
 *             .direction("Outbound")
 *             .access("Allow")
 *             .protocol("*")
 *             .sourcePortRange("*")
 *             .destinationPortRange("*")
 *             .sourceAddressPrefix("10.0.0.0/24")
 *             .destinationAddressPrefix("*")
 *             .resourceGroupName(example.name())
 *             .networkSecurityGroupName(exampleNetworkSecurityGroup.name())
 *             .build());
 * 
 *         var denyAllOutbound = new NetworkSecurityRule("denyAllOutbound", NetworkSecurityRuleArgs.builder()
 *             .name("deny_all_outbound")
 *             .priority(4096)
 *             .direction("Outbound")
 *             .access("Deny")
 *             .protocol("*")
 *             .sourcePortRange("*")
 *             .destinationPortRange("*")
 *             .sourceAddressPrefix("*")
 *             .destinationAddressPrefix("*")
 *             .resourceGroupName(example.name())
 *             .networkSecurityGroupName(exampleNetworkSecurityGroup.name())
 *             .build());
 * 
 *         var exampleVirtualNetwork = new VirtualNetwork("exampleVirtualNetwork", VirtualNetworkArgs.builder()
 *             .name("vnet-mi")
 *             .resourceGroupName(example.name())
 *             .addressSpaces("10.0.0.0/16")
 *             .location(example.location())
 *             .build());
 * 
 *         var exampleSubnet = new Subnet("exampleSubnet", SubnetArgs.builder()
 *             .name("subnet-mi")
 *             .resourceGroupName(example.name())
 *             .virtualNetworkName(exampleVirtualNetwork.name())
 *             .addressPrefixes("10.0.0.0/24")
 *             .delegations(SubnetDelegationArgs.builder()
 *                 .name("managedinstancedelegation")
 *                 .serviceDelegation(SubnetDelegationServiceDelegationArgs.builder()
 *                     .name("Microsoft.Sql/managedInstances")
 *                     .actions(                    
 *                         "Microsoft.Network/virtualNetworks/subnets/join/action",
 *                         "Microsoft.Network/virtualNetworks/subnets/prepareNetworkPolicies/action",
 *                         "Microsoft.Network/virtualNetworks/subnets/unprepareNetworkPolicies/action")
 *                     .build())
 *                 .build())
 *             .build());
 * 
 *         var exampleSubnetNetworkSecurityGroupAssociation = new SubnetNetworkSecurityGroupAssociation("exampleSubnetNetworkSecurityGroupAssociation", SubnetNetworkSecurityGroupAssociationArgs.builder()
 *             .subnetId(exampleSubnet.id())
 *             .networkSecurityGroupId(exampleNetworkSecurityGroup.id())
 *             .build());
 * 
 *         var exampleRouteTable = new RouteTable("exampleRouteTable", RouteTableArgs.builder()
 *             .name("routetable-mi")
 *             .location(example.location())
 *             .resourceGroupName(example.name())
 *             .disableBgpRoutePropagation(false)
 *             .build(), CustomResourceOptions.builder()
 *                 .dependsOn(List.of(exampleSubnet))
 *                 .build());
 * 
 *         var exampleSubnetRouteTableAssociation = new SubnetRouteTableAssociation("exampleSubnetRouteTableAssociation", SubnetRouteTableAssociationArgs.builder()
 *             .subnetId(exampleSubnet.id())
 *             .routeTableId(exampleRouteTable.id())
 *             .build());
 * 
 *         var exampleManagedInstance = new ManagedInstance("exampleManagedInstance", ManagedInstanceArgs.builder()
 *             .name("managedsqlinstance")
 *             .resourceGroupName(example.name())
 *             .location(example.location())
 *             .licenseType("BasePrice")
 *             .skuName("GP_Gen5")
 *             .storageSizeInGb(32)
 *             .subnetId(exampleSubnet.id())
 *             .vcores(4)
 *             .administratorLogin("mradministrator")
 *             .administratorLoginPassword("thisIsDog11")
 *             .build(), CustomResourceOptions.builder()
 *                 .dependsOn(                
 *                     exampleSubnetNetworkSecurityGroupAssociation,
 *                     exampleSubnetRouteTableAssociation)
 *                 .build());
 * 
 *         var exampleManagedInstanceStartStopSchedule = new ManagedInstanceStartStopSchedule("exampleManagedInstanceStartStopSchedule", ManagedInstanceStartStopScheduleArgs.builder()
 *             .managedInstanceId(exampleManagedInstance.id())
 *             .timezoneId("Central European Standard Time")
 *             .schedules(            
 *                 ManagedInstanceStartStopScheduleScheduleArgs.builder()
 *                     .startDay("Monday")
 *                     .startTime("08:00")
 *                     .stopDay("Monday")
 *                     .stopTime("11:00")
 *                     .build(),
 *                 ManagedInstanceStartStopScheduleScheduleArgs.builder()
 *                     .startDay("Tuesday")
 *                     .startTime("12:00")
 *                     .stopDay("Tuesday")
 *                     .stopTime("18:00")
 *                     .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * 
 * ## API Providers
 * 
 * &lt;!-- This section is generated, changes will be overwritten --&gt;
 * This resource uses the following Azure API Providers:
 * 
 * * `Microsoft.Sql` - 2023-08-01-preview
 * 
 * ## Import
 * 
 * MS SQL Managed Instance Start Stop Schedule can be imported using the `resource id`, e.g.
 * 
 * ```sh
 * $ pulumi import azure:mssql/managedInstanceStartStopSchedule:ManagedInstanceStartStopSchedule example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resourceGroup1/providers/Microsoft.Sql/managedInstances/managedInstance1/startStopSchedules/default
 * ```
 * 
 */
@ResourceType(type="azure:mssql/managedInstanceStartStopSchedule:ManagedInstanceStartStopSchedule")
public class ManagedInstanceStartStopSchedule extends com.pulumi.resources.CustomResource {
    /**
     * Specifies the description of the schedule.
     * 
     */
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> description;

    /**
     * @return Specifies the description of the schedule.
     * 
     */
    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    /**
     * Specifies the ID of the Managed Instance. Changing this forces a new Sql Start Stop Managed Instance Schedule to be created.
     * 
     */
    @Export(name="managedInstanceId", refs={String.class}, tree="[0]")
    private Output<String> managedInstanceId;

    /**
     * @return Specifies the ID of the Managed Instance. Changing this forces a new Sql Start Stop Managed Instance Schedule to be created.
     * 
     */
    public Output<String> managedInstanceId() {
        return this.managedInstanceId;
    }
    /**
     * Timestamp when the next action will be executed in the corresponding schedule time zone.
     * 
     */
    @Export(name="nextExecutionTime", refs={String.class}, tree="[0]")
    private Output<String> nextExecutionTime;

    /**
     * @return Timestamp when the next action will be executed in the corresponding schedule time zone.
     * 
     */
    public Output<String> nextExecutionTime() {
        return this.nextExecutionTime;
    }
    /**
     * Next action to be executed (Start or Stop).
     * 
     */
    @Export(name="nextRunAction", refs={String.class}, tree="[0]")
    private Output<String> nextRunAction;

    /**
     * @return Next action to be executed (Start or Stop).
     * 
     */
    public Output<String> nextRunAction() {
        return this.nextRunAction;
    }
    /**
     * A `schedule` block as defined below.
     * 
     */
    @Export(name="schedules", refs={List.class,ManagedInstanceStartStopScheduleSchedule.class}, tree="[0,1]")
    private Output<List<ManagedInstanceStartStopScheduleSchedule>> schedules;

    /**
     * @return A `schedule` block as defined below.
     * 
     */
    public Output<List<ManagedInstanceStartStopScheduleSchedule>> schedules() {
        return this.schedules;
    }
    /**
     * Specifies the time zone of the schedule. Defaults to `UTC`.
     * 
     */
    @Export(name="timezoneId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> timezoneId;

    /**
     * @return Specifies the time zone of the schedule. Defaults to `UTC`.
     * 
     */
    public Output<Optional<String>> timezoneId() {
        return Codegen.optional(this.timezoneId);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public ManagedInstanceStartStopSchedule(java.lang.String name) {
        this(name, ManagedInstanceStartStopScheduleArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public ManagedInstanceStartStopSchedule(java.lang.String name, ManagedInstanceStartStopScheduleArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public ManagedInstanceStartStopSchedule(java.lang.String name, ManagedInstanceStartStopScheduleArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:mssql/managedInstanceStartStopSchedule:ManagedInstanceStartStopSchedule", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private ManagedInstanceStartStopSchedule(java.lang.String name, Output<java.lang.String> id, @Nullable ManagedInstanceStartStopScheduleState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:mssql/managedInstanceStartStopSchedule:ManagedInstanceStartStopSchedule", name, state, makeResourceOptions(options, id), false);
    }

    private static ManagedInstanceStartStopScheduleArgs makeArgs(ManagedInstanceStartStopScheduleArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? ManagedInstanceStartStopScheduleArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static ManagedInstanceStartStopSchedule get(java.lang.String name, Output<java.lang.String> id, @Nullable ManagedInstanceStartStopScheduleState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new ManagedInstanceStartStopSchedule(name, id, state, options);
    }
}
