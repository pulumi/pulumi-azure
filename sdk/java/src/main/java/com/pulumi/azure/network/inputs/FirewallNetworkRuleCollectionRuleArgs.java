// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.network.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class FirewallNetworkRuleCollectionRuleArgs extends com.pulumi.resources.ResourceArgs {

    public static final FirewallNetworkRuleCollectionRuleArgs Empty = new FirewallNetworkRuleCollectionRuleArgs();

    /**
     * Specifies a description for the rule.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return Specifies a description for the rule.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Either a list of destination IP addresses and/or IP ranges, or a list of destination [Service Tags](https://docs.microsoft.com/azure/virtual-network/service-tags-overview#available-service-tags).
     * 
     */
    @Import(name="destinationAddresses")
    private @Nullable Output<List<String>> destinationAddresses;

    /**
     * @return Either a list of destination IP addresses and/or IP ranges, or a list of destination [Service Tags](https://docs.microsoft.com/azure/virtual-network/service-tags-overview#available-service-tags).
     * 
     */
    public Optional<Output<List<String>>> destinationAddresses() {
        return Optional.ofNullable(this.destinationAddresses);
    }

    /**
     * A list of destination FQDNS for the rule.
     * 
     * &gt; **NOTE** [You must enable DNS Proxy to use FQDNs in your network rules](https://docs.microsoft.com/azure/firewall/fqdn-filtering-network-rules).
     * 
     * &gt; **NOTE** At least one of `destination_addresses`, `destination_ip_groups` and `destination_fqdns` must be specified for a rule.
     * 
     */
    @Import(name="destinationFqdns")
    private @Nullable Output<List<String>> destinationFqdns;

    /**
     * @return A list of destination FQDNS for the rule.
     * 
     * &gt; **NOTE** [You must enable DNS Proxy to use FQDNs in your network rules](https://docs.microsoft.com/azure/firewall/fqdn-filtering-network-rules).
     * 
     * &gt; **NOTE** At least one of `destination_addresses`, `destination_ip_groups` and `destination_fqdns` must be specified for a rule.
     * 
     */
    public Optional<Output<List<String>>> destinationFqdns() {
        return Optional.ofNullable(this.destinationFqdns);
    }

    /**
     * A list of destination IP Group IDs for the rule.
     * 
     */
    @Import(name="destinationIpGroups")
    private @Nullable Output<List<String>> destinationIpGroups;

    /**
     * @return A list of destination IP Group IDs for the rule.
     * 
     */
    public Optional<Output<List<String>>> destinationIpGroups() {
        return Optional.ofNullable(this.destinationIpGroups);
    }

    /**
     * A list of destination ports.
     * 
     */
    @Import(name="destinationPorts", required=true)
    private Output<List<String>> destinationPorts;

    /**
     * @return A list of destination ports.
     * 
     */
    public Output<List<String>> destinationPorts() {
        return this.destinationPorts;
    }

    /**
     * Specifies the name of the rule.
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    /**
     * @return Specifies the name of the rule.
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    /**
     * A list of protocols. Possible values are `Any`, `ICMP`, `TCP` and `UDP`.
     * 
     */
    @Import(name="protocols", required=true)
    private Output<List<String>> protocols;

    /**
     * @return A list of protocols. Possible values are `Any`, `ICMP`, `TCP` and `UDP`.
     * 
     */
    public Output<List<String>> protocols() {
        return this.protocols;
    }

    /**
     * A list of source IP addresses and/or IP ranges.
     * 
     */
    @Import(name="sourceAddresses")
    private @Nullable Output<List<String>> sourceAddresses;

    /**
     * @return A list of source IP addresses and/or IP ranges.
     * 
     */
    public Optional<Output<List<String>>> sourceAddresses() {
        return Optional.ofNullable(this.sourceAddresses);
    }

    /**
     * A list of IP Group IDs for the rule.
     * 
     * &gt; **NOTE** At least one of `source_addresses` and `source_ip_groups` must be specified for a rule.
     * 
     */
    @Import(name="sourceIpGroups")
    private @Nullable Output<List<String>> sourceIpGroups;

    /**
     * @return A list of IP Group IDs for the rule.
     * 
     * &gt; **NOTE** At least one of `source_addresses` and `source_ip_groups` must be specified for a rule.
     * 
     */
    public Optional<Output<List<String>>> sourceIpGroups() {
        return Optional.ofNullable(this.sourceIpGroups);
    }

    private FirewallNetworkRuleCollectionRuleArgs() {}

    private FirewallNetworkRuleCollectionRuleArgs(FirewallNetworkRuleCollectionRuleArgs $) {
        this.description = $.description;
        this.destinationAddresses = $.destinationAddresses;
        this.destinationFqdns = $.destinationFqdns;
        this.destinationIpGroups = $.destinationIpGroups;
        this.destinationPorts = $.destinationPorts;
        this.name = $.name;
        this.protocols = $.protocols;
        this.sourceAddresses = $.sourceAddresses;
        this.sourceIpGroups = $.sourceIpGroups;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FirewallNetworkRuleCollectionRuleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FirewallNetworkRuleCollectionRuleArgs $;

        public Builder() {
            $ = new FirewallNetworkRuleCollectionRuleArgs();
        }

        public Builder(FirewallNetworkRuleCollectionRuleArgs defaults) {
            $ = new FirewallNetworkRuleCollectionRuleArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param description Specifies a description for the rule.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description Specifies a description for the rule.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param destinationAddresses Either a list of destination IP addresses and/or IP ranges, or a list of destination [Service Tags](https://docs.microsoft.com/azure/virtual-network/service-tags-overview#available-service-tags).
         * 
         * @return builder
         * 
         */
        public Builder destinationAddresses(@Nullable Output<List<String>> destinationAddresses) {
            $.destinationAddresses = destinationAddresses;
            return this;
        }

        /**
         * @param destinationAddresses Either a list of destination IP addresses and/or IP ranges, or a list of destination [Service Tags](https://docs.microsoft.com/azure/virtual-network/service-tags-overview#available-service-tags).
         * 
         * @return builder
         * 
         */
        public Builder destinationAddresses(List<String> destinationAddresses) {
            return destinationAddresses(Output.of(destinationAddresses));
        }

        /**
         * @param destinationAddresses Either a list of destination IP addresses and/or IP ranges, or a list of destination [Service Tags](https://docs.microsoft.com/azure/virtual-network/service-tags-overview#available-service-tags).
         * 
         * @return builder
         * 
         */
        public Builder destinationAddresses(String... destinationAddresses) {
            return destinationAddresses(List.of(destinationAddresses));
        }

        /**
         * @param destinationFqdns A list of destination FQDNS for the rule.
         * 
         * &gt; **NOTE** [You must enable DNS Proxy to use FQDNs in your network rules](https://docs.microsoft.com/azure/firewall/fqdn-filtering-network-rules).
         * 
         * &gt; **NOTE** At least one of `destination_addresses`, `destination_ip_groups` and `destination_fqdns` must be specified for a rule.
         * 
         * @return builder
         * 
         */
        public Builder destinationFqdns(@Nullable Output<List<String>> destinationFqdns) {
            $.destinationFqdns = destinationFqdns;
            return this;
        }

        /**
         * @param destinationFqdns A list of destination FQDNS for the rule.
         * 
         * &gt; **NOTE** [You must enable DNS Proxy to use FQDNs in your network rules](https://docs.microsoft.com/azure/firewall/fqdn-filtering-network-rules).
         * 
         * &gt; **NOTE** At least one of `destination_addresses`, `destination_ip_groups` and `destination_fqdns` must be specified for a rule.
         * 
         * @return builder
         * 
         */
        public Builder destinationFqdns(List<String> destinationFqdns) {
            return destinationFqdns(Output.of(destinationFqdns));
        }

        /**
         * @param destinationFqdns A list of destination FQDNS for the rule.
         * 
         * &gt; **NOTE** [You must enable DNS Proxy to use FQDNs in your network rules](https://docs.microsoft.com/azure/firewall/fqdn-filtering-network-rules).
         * 
         * &gt; **NOTE** At least one of `destination_addresses`, `destination_ip_groups` and `destination_fqdns` must be specified for a rule.
         * 
         * @return builder
         * 
         */
        public Builder destinationFqdns(String... destinationFqdns) {
            return destinationFqdns(List.of(destinationFqdns));
        }

        /**
         * @param destinationIpGroups A list of destination IP Group IDs for the rule.
         * 
         * @return builder
         * 
         */
        public Builder destinationIpGroups(@Nullable Output<List<String>> destinationIpGroups) {
            $.destinationIpGroups = destinationIpGroups;
            return this;
        }

        /**
         * @param destinationIpGroups A list of destination IP Group IDs for the rule.
         * 
         * @return builder
         * 
         */
        public Builder destinationIpGroups(List<String> destinationIpGroups) {
            return destinationIpGroups(Output.of(destinationIpGroups));
        }

        /**
         * @param destinationIpGroups A list of destination IP Group IDs for the rule.
         * 
         * @return builder
         * 
         */
        public Builder destinationIpGroups(String... destinationIpGroups) {
            return destinationIpGroups(List.of(destinationIpGroups));
        }

        /**
         * @param destinationPorts A list of destination ports.
         * 
         * @return builder
         * 
         */
        public Builder destinationPorts(Output<List<String>> destinationPorts) {
            $.destinationPorts = destinationPorts;
            return this;
        }

        /**
         * @param destinationPorts A list of destination ports.
         * 
         * @return builder
         * 
         */
        public Builder destinationPorts(List<String> destinationPorts) {
            return destinationPorts(Output.of(destinationPorts));
        }

        /**
         * @param destinationPorts A list of destination ports.
         * 
         * @return builder
         * 
         */
        public Builder destinationPorts(String... destinationPorts) {
            return destinationPorts(List.of(destinationPorts));
        }

        /**
         * @param name Specifies the name of the rule.
         * 
         * @return builder
         * 
         */
        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Specifies the name of the rule.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param protocols A list of protocols. Possible values are `Any`, `ICMP`, `TCP` and `UDP`.
         * 
         * @return builder
         * 
         */
        public Builder protocols(Output<List<String>> protocols) {
            $.protocols = protocols;
            return this;
        }

        /**
         * @param protocols A list of protocols. Possible values are `Any`, `ICMP`, `TCP` and `UDP`.
         * 
         * @return builder
         * 
         */
        public Builder protocols(List<String> protocols) {
            return protocols(Output.of(protocols));
        }

        /**
         * @param protocols A list of protocols. Possible values are `Any`, `ICMP`, `TCP` and `UDP`.
         * 
         * @return builder
         * 
         */
        public Builder protocols(String... protocols) {
            return protocols(List.of(protocols));
        }

        /**
         * @param sourceAddresses A list of source IP addresses and/or IP ranges.
         * 
         * @return builder
         * 
         */
        public Builder sourceAddresses(@Nullable Output<List<String>> sourceAddresses) {
            $.sourceAddresses = sourceAddresses;
            return this;
        }

        /**
         * @param sourceAddresses A list of source IP addresses and/or IP ranges.
         * 
         * @return builder
         * 
         */
        public Builder sourceAddresses(List<String> sourceAddresses) {
            return sourceAddresses(Output.of(sourceAddresses));
        }

        /**
         * @param sourceAddresses A list of source IP addresses and/or IP ranges.
         * 
         * @return builder
         * 
         */
        public Builder sourceAddresses(String... sourceAddresses) {
            return sourceAddresses(List.of(sourceAddresses));
        }

        /**
         * @param sourceIpGroups A list of IP Group IDs for the rule.
         * 
         * &gt; **NOTE** At least one of `source_addresses` and `source_ip_groups` must be specified for a rule.
         * 
         * @return builder
         * 
         */
        public Builder sourceIpGroups(@Nullable Output<List<String>> sourceIpGroups) {
            $.sourceIpGroups = sourceIpGroups;
            return this;
        }

        /**
         * @param sourceIpGroups A list of IP Group IDs for the rule.
         * 
         * &gt; **NOTE** At least one of `source_addresses` and `source_ip_groups` must be specified for a rule.
         * 
         * @return builder
         * 
         */
        public Builder sourceIpGroups(List<String> sourceIpGroups) {
            return sourceIpGroups(Output.of(sourceIpGroups));
        }

        /**
         * @param sourceIpGroups A list of IP Group IDs for the rule.
         * 
         * &gt; **NOTE** At least one of `source_addresses` and `source_ip_groups` must be specified for a rule.
         * 
         * @return builder
         * 
         */
        public Builder sourceIpGroups(String... sourceIpGroups) {
            return sourceIpGroups(List.of(sourceIpGroups));
        }

        public FirewallNetworkRuleCollectionRuleArgs build() {
            if ($.destinationPorts == null) {
                throw new MissingRequiredPropertyException("FirewallNetworkRuleCollectionRuleArgs", "destinationPorts");
            }
            if ($.name == null) {
                throw new MissingRequiredPropertyException("FirewallNetworkRuleCollectionRuleArgs", "name");
            }
            if ($.protocols == null) {
                throw new MissingRequiredPropertyException("FirewallNetworkRuleCollectionRuleArgs", "protocols");
            }
            return $;
        }
    }

}
