// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.mssql.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class VirtualMachineKeyVaultCredentialArgs extends com.pulumi.resources.ResourceArgs {

    public static final VirtualMachineKeyVaultCredentialArgs Empty = new VirtualMachineKeyVaultCredentialArgs();

    /**
     * The Azure Key Vault url. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="keyVaultUrl", required=true)
    private Output<String> keyVaultUrl;

    /**
     * @return The Azure Key Vault url. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> keyVaultUrl() {
        return this.keyVaultUrl;
    }

    /**
     * The credential name.
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    /**
     * @return The credential name.
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    /**
     * The service principal name to access key vault. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="servicePrincipalName", required=true)
    private Output<String> servicePrincipalName;

    /**
     * @return The service principal name to access key vault. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> servicePrincipalName() {
        return this.servicePrincipalName;
    }

    /**
     * The service principal name secret to access key vault. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="servicePrincipalSecret", required=true)
    private Output<String> servicePrincipalSecret;

    /**
     * @return The service principal name secret to access key vault. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> servicePrincipalSecret() {
        return this.servicePrincipalSecret;
    }

    private VirtualMachineKeyVaultCredentialArgs() {}

    private VirtualMachineKeyVaultCredentialArgs(VirtualMachineKeyVaultCredentialArgs $) {
        this.keyVaultUrl = $.keyVaultUrl;
        this.name = $.name;
        this.servicePrincipalName = $.servicePrincipalName;
        this.servicePrincipalSecret = $.servicePrincipalSecret;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VirtualMachineKeyVaultCredentialArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VirtualMachineKeyVaultCredentialArgs $;

        public Builder() {
            $ = new VirtualMachineKeyVaultCredentialArgs();
        }

        public Builder(VirtualMachineKeyVaultCredentialArgs defaults) {
            $ = new VirtualMachineKeyVaultCredentialArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param keyVaultUrl The Azure Key Vault url. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder keyVaultUrl(Output<String> keyVaultUrl) {
            $.keyVaultUrl = keyVaultUrl;
            return this;
        }

        /**
         * @param keyVaultUrl The Azure Key Vault url. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder keyVaultUrl(String keyVaultUrl) {
            return keyVaultUrl(Output.of(keyVaultUrl));
        }

        /**
         * @param name The credential name.
         * 
         * @return builder
         * 
         */
        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The credential name.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param servicePrincipalName The service principal name to access key vault. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder servicePrincipalName(Output<String> servicePrincipalName) {
            $.servicePrincipalName = servicePrincipalName;
            return this;
        }

        /**
         * @param servicePrincipalName The service principal name to access key vault. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder servicePrincipalName(String servicePrincipalName) {
            return servicePrincipalName(Output.of(servicePrincipalName));
        }

        /**
         * @param servicePrincipalSecret The service principal name secret to access key vault. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder servicePrincipalSecret(Output<String> servicePrincipalSecret) {
            $.servicePrincipalSecret = servicePrincipalSecret;
            return this;
        }

        /**
         * @param servicePrincipalSecret The service principal name secret to access key vault. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder servicePrincipalSecret(String servicePrincipalSecret) {
            return servicePrincipalSecret(Output.of(servicePrincipalSecret));
        }

        public VirtualMachineKeyVaultCredentialArgs build() {
            if ($.keyVaultUrl == null) {
                throw new MissingRequiredPropertyException("VirtualMachineKeyVaultCredentialArgs", "keyVaultUrl");
            }
            if ($.name == null) {
                throw new MissingRequiredPropertyException("VirtualMachineKeyVaultCredentialArgs", "name");
            }
            if ($.servicePrincipalName == null) {
                throw new MissingRequiredPropertyException("VirtualMachineKeyVaultCredentialArgs", "servicePrincipalName");
            }
            if ($.servicePrincipalSecret == null) {
                throw new MissingRequiredPropertyException("VirtualMachineKeyVaultCredentialArgs", "servicePrincipalSecret");
            }
            return $;
        }
    }

}
