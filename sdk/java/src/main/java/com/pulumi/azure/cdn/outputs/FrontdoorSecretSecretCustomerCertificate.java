// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.cdn.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class FrontdoorSecretSecretCustomerCertificate {
    /**
     * @return The ID of the Key Vault certificate resource to use. Changing this forces a new Front Door Secret to be created.
     * 
     * -&gt;**NOTE:** If you would like to use the **latest version** of the Key Vault Certificate use the Key Vault Certificates `versionless_id` attribute as the `key_vault_certificate_id` fields value(e.g. `key_vault_certificate_id = azurerm_key_vault_certificate.example.versionless_id`).
     * 
     */
    private String keyVaultCertificateId;
    /**
     * @return One or more `subject alternative names` contained within the key vault certificate.
     * 
     */
    private @Nullable List<String> subjectAlternativeNames;

    private FrontdoorSecretSecretCustomerCertificate() {}
    /**
     * @return The ID of the Key Vault certificate resource to use. Changing this forces a new Front Door Secret to be created.
     * 
     * -&gt;**NOTE:** If you would like to use the **latest version** of the Key Vault Certificate use the Key Vault Certificates `versionless_id` attribute as the `key_vault_certificate_id` fields value(e.g. `key_vault_certificate_id = azurerm_key_vault_certificate.example.versionless_id`).
     * 
     */
    public String keyVaultCertificateId() {
        return this.keyVaultCertificateId;
    }
    /**
     * @return One or more `subject alternative names` contained within the key vault certificate.
     * 
     */
    public List<String> subjectAlternativeNames() {
        return this.subjectAlternativeNames == null ? List.of() : this.subjectAlternativeNames;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(FrontdoorSecretSecretCustomerCertificate defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String keyVaultCertificateId;
        private @Nullable List<String> subjectAlternativeNames;
        public Builder() {}
        public Builder(FrontdoorSecretSecretCustomerCertificate defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.keyVaultCertificateId = defaults.keyVaultCertificateId;
    	      this.subjectAlternativeNames = defaults.subjectAlternativeNames;
        }

        @CustomType.Setter
        public Builder keyVaultCertificateId(String keyVaultCertificateId) {
            if (keyVaultCertificateId == null) {
              throw new MissingRequiredPropertyException("FrontdoorSecretSecretCustomerCertificate", "keyVaultCertificateId");
            }
            this.keyVaultCertificateId = keyVaultCertificateId;
            return this;
        }
        @CustomType.Setter
        public Builder subjectAlternativeNames(@Nullable List<String> subjectAlternativeNames) {

            this.subjectAlternativeNames = subjectAlternativeNames;
            return this;
        }
        public Builder subjectAlternativeNames(String... subjectAlternativeNames) {
            return subjectAlternativeNames(List.of(subjectAlternativeNames));
        }
        public FrontdoorSecretSecretCustomerCertificate build() {
            final var _resultValue = new FrontdoorSecretSecretCustomerCertificate();
            _resultValue.keyVaultCertificateId = keyVaultCertificateId;
            _resultValue.subjectAlternativeNames = subjectAlternativeNames;
            return _resultValue;
        }
    }
}
