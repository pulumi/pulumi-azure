// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.appservice.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class ConnectionSecretStoreArgs extends com.pulumi.resources.ResourceArgs {

    public static final ConnectionSecretStoreArgs Empty = new ConnectionSecretStoreArgs();

    /**
     * The key vault id to store secret.
     * 
     */
    @Import(name="keyVaultId", required=true)
    private Output<String> keyVaultId;

    /**
     * @return The key vault id to store secret.
     * 
     */
    public Output<String> keyVaultId() {
        return this.keyVaultId;
    }

    private ConnectionSecretStoreArgs() {}

    private ConnectionSecretStoreArgs(ConnectionSecretStoreArgs $) {
        this.keyVaultId = $.keyVaultId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ConnectionSecretStoreArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ConnectionSecretStoreArgs $;

        public Builder() {
            $ = new ConnectionSecretStoreArgs();
        }

        public Builder(ConnectionSecretStoreArgs defaults) {
            $ = new ConnectionSecretStoreArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param keyVaultId The key vault id to store secret.
         * 
         * @return builder
         * 
         */
        public Builder keyVaultId(Output<String> keyVaultId) {
            $.keyVaultId = keyVaultId;
            return this;
        }

        /**
         * @param keyVaultId The key vault id to store secret.
         * 
         * @return builder
         * 
         */
        public Builder keyVaultId(String keyVaultId) {
            return keyVaultId(Output.of(keyVaultId));
        }

        public ConnectionSecretStoreArgs build() {
            if ($.keyVaultId == null) {
                throw new MissingRequiredPropertyException("ConnectionSecretStoreArgs", "keyVaultId");
            }
            return $;
        }
    }

}
