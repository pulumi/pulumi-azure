// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.videoanalyzer.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class AnalyzerStorageAccountArgs extends com.pulumi.resources.ResourceArgs {

    public static final AnalyzerStorageAccountArgs Empty = new AnalyzerStorageAccountArgs();

    /**
     * Specifies the ID of the Storage Account that will be associated with the Video Analyzer instance.
     * 
     */
    @Import(name="id", required=true)
    private Output<String> id;

    /**
     * @return Specifies the ID of the Storage Account that will be associated with the Video Analyzer instance.
     * 
     */
    public Output<String> id() {
        return this.id;
    }

    /**
     * Specifies the User Assigned Identity ID which should be assigned to access this Storage Account.
     * 
     */
    @Import(name="userAssignedIdentityId", required=true)
    private Output<String> userAssignedIdentityId;

    /**
     * @return Specifies the User Assigned Identity ID which should be assigned to access this Storage Account.
     * 
     */
    public Output<String> userAssignedIdentityId() {
        return this.userAssignedIdentityId;
    }

    private AnalyzerStorageAccountArgs() {}

    private AnalyzerStorageAccountArgs(AnalyzerStorageAccountArgs $) {
        this.id = $.id;
        this.userAssignedIdentityId = $.userAssignedIdentityId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AnalyzerStorageAccountArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AnalyzerStorageAccountArgs $;

        public Builder() {
            $ = new AnalyzerStorageAccountArgs();
        }

        public Builder(AnalyzerStorageAccountArgs defaults) {
            $ = new AnalyzerStorageAccountArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param id Specifies the ID of the Storage Account that will be associated with the Video Analyzer instance.
         * 
         * @return builder
         * 
         */
        public Builder id(Output<String> id) {
            $.id = id;
            return this;
        }

        /**
         * @param id Specifies the ID of the Storage Account that will be associated with the Video Analyzer instance.
         * 
         * @return builder
         * 
         */
        public Builder id(String id) {
            return id(Output.of(id));
        }

        /**
         * @param userAssignedIdentityId Specifies the User Assigned Identity ID which should be assigned to access this Storage Account.
         * 
         * @return builder
         * 
         */
        public Builder userAssignedIdentityId(Output<String> userAssignedIdentityId) {
            $.userAssignedIdentityId = userAssignedIdentityId;
            return this;
        }

        /**
         * @param userAssignedIdentityId Specifies the User Assigned Identity ID which should be assigned to access this Storage Account.
         * 
         * @return builder
         * 
         */
        public Builder userAssignedIdentityId(String userAssignedIdentityId) {
            return userAssignedIdentityId(Output.of(userAssignedIdentityId));
        }

        public AnalyzerStorageAccountArgs build() {
            if ($.id == null) {
                throw new MissingRequiredPropertyException("AnalyzerStorageAccountArgs", "id");
            }
            if ($.userAssignedIdentityId == null) {
                throw new MissingRequiredPropertyException("AnalyzerStorageAccountArgs", "userAssignedIdentityId");
            }
            return $;
        }
    }

}
