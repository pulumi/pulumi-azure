// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.frontdoor;

import com.pulumi.azure.frontdoor.inputs.FrontdoorBackendPoolArgs;
import com.pulumi.azure.frontdoor.inputs.FrontdoorBackendPoolHealthProbeArgs;
import com.pulumi.azure.frontdoor.inputs.FrontdoorBackendPoolLoadBalancingArgs;
import com.pulumi.azure.frontdoor.inputs.FrontdoorBackendPoolSettingArgs;
import com.pulumi.azure.frontdoor.inputs.FrontdoorFrontendEndpointArgs;
import com.pulumi.azure.frontdoor.inputs.FrontdoorRoutingRuleArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class FrontdoorArgs extends com.pulumi.resources.ResourceArgs {

    public static final FrontdoorArgs Empty = new FrontdoorArgs();

    /**
     * A `backend_pool_health_probe` block as defined below.
     * 
     */
    @Import(name="backendPoolHealthProbes", required=true)
    private Output<List<FrontdoorBackendPoolHealthProbeArgs>> backendPoolHealthProbes;

    /**
     * @return A `backend_pool_health_probe` block as defined below.
     * 
     */
    public Output<List<FrontdoorBackendPoolHealthProbeArgs>> backendPoolHealthProbes() {
        return this.backendPoolHealthProbes;
    }

    /**
     * A `backend_pool_load_balancing` block as defined below.
     * 
     */
    @Import(name="backendPoolLoadBalancings", required=true)
    private Output<List<FrontdoorBackendPoolLoadBalancingArgs>> backendPoolLoadBalancings;

    /**
     * @return A `backend_pool_load_balancing` block as defined below.
     * 
     */
    public Output<List<FrontdoorBackendPoolLoadBalancingArgs>> backendPoolLoadBalancings() {
        return this.backendPoolLoadBalancings;
    }

    /**
     * A `backend_pool_settings` block as defined below.
     * 
     */
    @Import(name="backendPoolSettings")
    private @Nullable Output<List<FrontdoorBackendPoolSettingArgs>> backendPoolSettings;

    /**
     * @return A `backend_pool_settings` block as defined below.
     * 
     */
    public Optional<Output<List<FrontdoorBackendPoolSettingArgs>>> backendPoolSettings() {
        return Optional.ofNullable(this.backendPoolSettings);
    }

    /**
     * A `backend_pool` block as defined below.
     * 
     * &gt; Azure by default allows specifying up to 50 Backend Pools - but this quota can be increased via Microsoft Support.
     * 
     */
    @Import(name="backendPools", required=true)
    private Output<List<FrontdoorBackendPoolArgs>> backendPools;

    /**
     * @return A `backend_pool` block as defined below.
     * 
     * &gt; Azure by default allows specifying up to 50 Backend Pools - but this quota can be increased via Microsoft Support.
     * 
     */
    public Output<List<FrontdoorBackendPoolArgs>> backendPools() {
        return this.backendPools;
    }

    /**
     * A friendly name for the Front Door service.
     * 
     */
    @Import(name="friendlyName")
    private @Nullable Output<String> friendlyName;

    /**
     * @return A friendly name for the Front Door service.
     * 
     */
    public Optional<Output<String>> friendlyName() {
        return Optional.ofNullable(this.friendlyName);
    }

    /**
     * A `frontend_endpoint` block as defined below.
     * 
     */
    @Import(name="frontendEndpoints", required=true)
    private Output<List<FrontdoorFrontendEndpointArgs>> frontendEndpoints;

    /**
     * @return A `frontend_endpoint` block as defined below.
     * 
     */
    public Output<List<FrontdoorFrontendEndpointArgs>> frontendEndpoints() {
        return this.frontendEndpoints;
    }

    /**
     * Should the Front Door Load Balancer be Enabled? Defaults to `true`.
     * 
     */
    @Import(name="loadBalancerEnabled")
    private @Nullable Output<Boolean> loadBalancerEnabled;

    /**
     * @return Should the Front Door Load Balancer be Enabled? Defaults to `true`.
     * 
     */
    public Optional<Output<Boolean>> loadBalancerEnabled() {
        return Optional.ofNullable(this.loadBalancerEnabled);
    }

    /**
     * Specifies the name of the Front Door service. Must be globally unique. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Specifies the name of the Front Door service. Must be globally unique. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Specifies the name of the Resource Group in which the Front Door service should exist. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    /**
     * @return Specifies the name of the Resource Group in which the Front Door service should exist. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * A `routing_rule` block as defined below.
     * 
     */
    @Import(name="routingRules", required=true)
    private Output<List<FrontdoorRoutingRuleArgs>> routingRules;

    /**
     * @return A `routing_rule` block as defined below.
     * 
     */
    public Output<List<FrontdoorRoutingRuleArgs>> routingRules() {
        return this.routingRules;
    }

    /**
     * A mapping of tags to assign to the resource.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return A mapping of tags to assign to the resource.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private FrontdoorArgs() {}

    private FrontdoorArgs(FrontdoorArgs $) {
        this.backendPoolHealthProbes = $.backendPoolHealthProbes;
        this.backendPoolLoadBalancings = $.backendPoolLoadBalancings;
        this.backendPoolSettings = $.backendPoolSettings;
        this.backendPools = $.backendPools;
        this.friendlyName = $.friendlyName;
        this.frontendEndpoints = $.frontendEndpoints;
        this.loadBalancerEnabled = $.loadBalancerEnabled;
        this.name = $.name;
        this.resourceGroupName = $.resourceGroupName;
        this.routingRules = $.routingRules;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FrontdoorArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FrontdoorArgs $;

        public Builder() {
            $ = new FrontdoorArgs();
        }

        public Builder(FrontdoorArgs defaults) {
            $ = new FrontdoorArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param backendPoolHealthProbes A `backend_pool_health_probe` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder backendPoolHealthProbes(Output<List<FrontdoorBackendPoolHealthProbeArgs>> backendPoolHealthProbes) {
            $.backendPoolHealthProbes = backendPoolHealthProbes;
            return this;
        }

        /**
         * @param backendPoolHealthProbes A `backend_pool_health_probe` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder backendPoolHealthProbes(List<FrontdoorBackendPoolHealthProbeArgs> backendPoolHealthProbes) {
            return backendPoolHealthProbes(Output.of(backendPoolHealthProbes));
        }

        /**
         * @param backendPoolHealthProbes A `backend_pool_health_probe` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder backendPoolHealthProbes(FrontdoorBackendPoolHealthProbeArgs... backendPoolHealthProbes) {
            return backendPoolHealthProbes(List.of(backendPoolHealthProbes));
        }

        /**
         * @param backendPoolLoadBalancings A `backend_pool_load_balancing` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder backendPoolLoadBalancings(Output<List<FrontdoorBackendPoolLoadBalancingArgs>> backendPoolLoadBalancings) {
            $.backendPoolLoadBalancings = backendPoolLoadBalancings;
            return this;
        }

        /**
         * @param backendPoolLoadBalancings A `backend_pool_load_balancing` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder backendPoolLoadBalancings(List<FrontdoorBackendPoolLoadBalancingArgs> backendPoolLoadBalancings) {
            return backendPoolLoadBalancings(Output.of(backendPoolLoadBalancings));
        }

        /**
         * @param backendPoolLoadBalancings A `backend_pool_load_balancing` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder backendPoolLoadBalancings(FrontdoorBackendPoolLoadBalancingArgs... backendPoolLoadBalancings) {
            return backendPoolLoadBalancings(List.of(backendPoolLoadBalancings));
        }

        /**
         * @param backendPoolSettings A `backend_pool_settings` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder backendPoolSettings(@Nullable Output<List<FrontdoorBackendPoolSettingArgs>> backendPoolSettings) {
            $.backendPoolSettings = backendPoolSettings;
            return this;
        }

        /**
         * @param backendPoolSettings A `backend_pool_settings` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder backendPoolSettings(List<FrontdoorBackendPoolSettingArgs> backendPoolSettings) {
            return backendPoolSettings(Output.of(backendPoolSettings));
        }

        /**
         * @param backendPoolSettings A `backend_pool_settings` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder backendPoolSettings(FrontdoorBackendPoolSettingArgs... backendPoolSettings) {
            return backendPoolSettings(List.of(backendPoolSettings));
        }

        /**
         * @param backendPools A `backend_pool` block as defined below.
         * 
         * &gt; Azure by default allows specifying up to 50 Backend Pools - but this quota can be increased via Microsoft Support.
         * 
         * @return builder
         * 
         */
        public Builder backendPools(Output<List<FrontdoorBackendPoolArgs>> backendPools) {
            $.backendPools = backendPools;
            return this;
        }

        /**
         * @param backendPools A `backend_pool` block as defined below.
         * 
         * &gt; Azure by default allows specifying up to 50 Backend Pools - but this quota can be increased via Microsoft Support.
         * 
         * @return builder
         * 
         */
        public Builder backendPools(List<FrontdoorBackendPoolArgs> backendPools) {
            return backendPools(Output.of(backendPools));
        }

        /**
         * @param backendPools A `backend_pool` block as defined below.
         * 
         * &gt; Azure by default allows specifying up to 50 Backend Pools - but this quota can be increased via Microsoft Support.
         * 
         * @return builder
         * 
         */
        public Builder backendPools(FrontdoorBackendPoolArgs... backendPools) {
            return backendPools(List.of(backendPools));
        }

        /**
         * @param friendlyName A friendly name for the Front Door service.
         * 
         * @return builder
         * 
         */
        public Builder friendlyName(@Nullable Output<String> friendlyName) {
            $.friendlyName = friendlyName;
            return this;
        }

        /**
         * @param friendlyName A friendly name for the Front Door service.
         * 
         * @return builder
         * 
         */
        public Builder friendlyName(String friendlyName) {
            return friendlyName(Output.of(friendlyName));
        }

        /**
         * @param frontendEndpoints A `frontend_endpoint` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder frontendEndpoints(Output<List<FrontdoorFrontendEndpointArgs>> frontendEndpoints) {
            $.frontendEndpoints = frontendEndpoints;
            return this;
        }

        /**
         * @param frontendEndpoints A `frontend_endpoint` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder frontendEndpoints(List<FrontdoorFrontendEndpointArgs> frontendEndpoints) {
            return frontendEndpoints(Output.of(frontendEndpoints));
        }

        /**
         * @param frontendEndpoints A `frontend_endpoint` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder frontendEndpoints(FrontdoorFrontendEndpointArgs... frontendEndpoints) {
            return frontendEndpoints(List.of(frontendEndpoints));
        }

        /**
         * @param loadBalancerEnabled Should the Front Door Load Balancer be Enabled? Defaults to `true`.
         * 
         * @return builder
         * 
         */
        public Builder loadBalancerEnabled(@Nullable Output<Boolean> loadBalancerEnabled) {
            $.loadBalancerEnabled = loadBalancerEnabled;
            return this;
        }

        /**
         * @param loadBalancerEnabled Should the Front Door Load Balancer be Enabled? Defaults to `true`.
         * 
         * @return builder
         * 
         */
        public Builder loadBalancerEnabled(Boolean loadBalancerEnabled) {
            return loadBalancerEnabled(Output.of(loadBalancerEnabled));
        }

        /**
         * @param name Specifies the name of the Front Door service. Must be globally unique. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Specifies the name of the Front Door service. Must be globally unique. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param resourceGroupName Specifies the name of the Resource Group in which the Front Door service should exist. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName Specifies the name of the Resource Group in which the Front Door service should exist. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        /**
         * @param routingRules A `routing_rule` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder routingRules(Output<List<FrontdoorRoutingRuleArgs>> routingRules) {
            $.routingRules = routingRules;
            return this;
        }

        /**
         * @param routingRules A `routing_rule` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder routingRules(List<FrontdoorRoutingRuleArgs> routingRules) {
            return routingRules(Output.of(routingRules));
        }

        /**
         * @param routingRules A `routing_rule` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder routingRules(FrontdoorRoutingRuleArgs... routingRules) {
            return routingRules(List.of(routingRules));
        }

        /**
         * @param tags A mapping of tags to assign to the resource.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags A mapping of tags to assign to the resource.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public FrontdoorArgs build() {
            if ($.backendPoolHealthProbes == null) {
                throw new MissingRequiredPropertyException("FrontdoorArgs", "backendPoolHealthProbes");
            }
            if ($.backendPoolLoadBalancings == null) {
                throw new MissingRequiredPropertyException("FrontdoorArgs", "backendPoolLoadBalancings");
            }
            if ($.backendPools == null) {
                throw new MissingRequiredPropertyException("FrontdoorArgs", "backendPools");
            }
            if ($.frontendEndpoints == null) {
                throw new MissingRequiredPropertyException("FrontdoorArgs", "frontendEndpoints");
            }
            if ($.resourceGroupName == null) {
                throw new MissingRequiredPropertyException("FrontdoorArgs", "resourceGroupName");
            }
            if ($.routingRules == null) {
                throw new MissingRequiredPropertyException("FrontdoorArgs", "routingRules");
            }
            return $;
        }
    }

}
