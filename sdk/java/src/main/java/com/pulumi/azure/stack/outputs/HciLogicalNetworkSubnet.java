// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.stack.outputs;

import com.pulumi.azure.stack.outputs.HciLogicalNetworkSubnetIpPool;
import com.pulumi.azure.stack.outputs.HciLogicalNetworkSubnetRoute;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class HciLogicalNetworkSubnet {
    /**
     * @return The address prefix in CIDR notation. Changing this forces a new resource to be created.
     * 
     */
    private @Nullable String addressPrefix;
    /**
     * @return The IP address allocation method for the subnet. Possible values are `Dynamic` and `Static`. Changing this forces a new resource to be created.
     * 
     */
    private String ipAllocationMethod;
    /**
     * @return One or more `ip_pool` block as defined above. Changing this forces a new resource to be created.
     * 
     * &gt; **Note:** If `ip_pool` is not specified, it will be assigned by the server. If you experience a diff you may need to add this to `ignore_changes`.
     * 
     */
    private @Nullable List<HciLogicalNetworkSubnetIpPool> ipPools;
    /**
     * @return A `route` block as defined above. Changing this forces a new resource to be created.
     * 
     */
    private @Nullable List<HciLogicalNetworkSubnetRoute> routes;
    /**
     * @return The VLAN ID for the Logical Network. Changing this forces a new resource to be created.
     * 
     */
    private @Nullable Integer vlanId;

    private HciLogicalNetworkSubnet() {}
    /**
     * @return The address prefix in CIDR notation. Changing this forces a new resource to be created.
     * 
     */
    public Optional<String> addressPrefix() {
        return Optional.ofNullable(this.addressPrefix);
    }
    /**
     * @return The IP address allocation method for the subnet. Possible values are `Dynamic` and `Static`. Changing this forces a new resource to be created.
     * 
     */
    public String ipAllocationMethod() {
        return this.ipAllocationMethod;
    }
    /**
     * @return One or more `ip_pool` block as defined above. Changing this forces a new resource to be created.
     * 
     * &gt; **Note:** If `ip_pool` is not specified, it will be assigned by the server. If you experience a diff you may need to add this to `ignore_changes`.
     * 
     */
    public List<HciLogicalNetworkSubnetIpPool> ipPools() {
        return this.ipPools == null ? List.of() : this.ipPools;
    }
    /**
     * @return A `route` block as defined above. Changing this forces a new resource to be created.
     * 
     */
    public List<HciLogicalNetworkSubnetRoute> routes() {
        return this.routes == null ? List.of() : this.routes;
    }
    /**
     * @return The VLAN ID for the Logical Network. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Integer> vlanId() {
        return Optional.ofNullable(this.vlanId);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(HciLogicalNetworkSubnet defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String addressPrefix;
        private String ipAllocationMethod;
        private @Nullable List<HciLogicalNetworkSubnetIpPool> ipPools;
        private @Nullable List<HciLogicalNetworkSubnetRoute> routes;
        private @Nullable Integer vlanId;
        public Builder() {}
        public Builder(HciLogicalNetworkSubnet defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.addressPrefix = defaults.addressPrefix;
    	      this.ipAllocationMethod = defaults.ipAllocationMethod;
    	      this.ipPools = defaults.ipPools;
    	      this.routes = defaults.routes;
    	      this.vlanId = defaults.vlanId;
        }

        @CustomType.Setter
        public Builder addressPrefix(@Nullable String addressPrefix) {

            this.addressPrefix = addressPrefix;
            return this;
        }
        @CustomType.Setter
        public Builder ipAllocationMethod(String ipAllocationMethod) {
            if (ipAllocationMethod == null) {
              throw new MissingRequiredPropertyException("HciLogicalNetworkSubnet", "ipAllocationMethod");
            }
            this.ipAllocationMethod = ipAllocationMethod;
            return this;
        }
        @CustomType.Setter
        public Builder ipPools(@Nullable List<HciLogicalNetworkSubnetIpPool> ipPools) {

            this.ipPools = ipPools;
            return this;
        }
        public Builder ipPools(HciLogicalNetworkSubnetIpPool... ipPools) {
            return ipPools(List.of(ipPools));
        }
        @CustomType.Setter
        public Builder routes(@Nullable List<HciLogicalNetworkSubnetRoute> routes) {

            this.routes = routes;
            return this;
        }
        public Builder routes(HciLogicalNetworkSubnetRoute... routes) {
            return routes(List.of(routes));
        }
        @CustomType.Setter
        public Builder vlanId(@Nullable Integer vlanId) {

            this.vlanId = vlanId;
            return this;
        }
        public HciLogicalNetworkSubnet build() {
            final var _resultValue = new HciLogicalNetworkSubnet();
            _resultValue.addressPrefix = addressPrefix;
            _resultValue.ipAllocationMethod = ipAllocationMethod;
            _resultValue.ipPools = ipPools;
            _resultValue.routes = routes;
            _resultValue.vlanId = vlanId;
            return _resultValue;
        }
    }
}
