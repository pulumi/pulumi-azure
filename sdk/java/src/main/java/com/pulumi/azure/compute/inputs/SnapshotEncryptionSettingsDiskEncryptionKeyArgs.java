// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.compute.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class SnapshotEncryptionSettingsDiskEncryptionKeyArgs extends com.pulumi.resources.ResourceArgs {

    public static final SnapshotEncryptionSettingsDiskEncryptionKeyArgs Empty = new SnapshotEncryptionSettingsDiskEncryptionKeyArgs();

    @Import(name="secretUrl", required=true)
    private Output<String> secretUrl;

    public Output<String> secretUrl() {
        return this.secretUrl;
    }

    @Import(name="sourceVaultId", required=true)
    private Output<String> sourceVaultId;

    public Output<String> sourceVaultId() {
        return this.sourceVaultId;
    }

    private SnapshotEncryptionSettingsDiskEncryptionKeyArgs() {}

    private SnapshotEncryptionSettingsDiskEncryptionKeyArgs(SnapshotEncryptionSettingsDiskEncryptionKeyArgs $) {
        this.secretUrl = $.secretUrl;
        this.sourceVaultId = $.sourceVaultId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SnapshotEncryptionSettingsDiskEncryptionKeyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SnapshotEncryptionSettingsDiskEncryptionKeyArgs $;

        public Builder() {
            $ = new SnapshotEncryptionSettingsDiskEncryptionKeyArgs();
        }

        public Builder(SnapshotEncryptionSettingsDiskEncryptionKeyArgs defaults) {
            $ = new SnapshotEncryptionSettingsDiskEncryptionKeyArgs(Objects.requireNonNull(defaults));
        }

        public Builder secretUrl(Output<String> secretUrl) {
            $.secretUrl = secretUrl;
            return this;
        }

        public Builder secretUrl(String secretUrl) {
            return secretUrl(Output.of(secretUrl));
        }

        public Builder sourceVaultId(Output<String> sourceVaultId) {
            $.sourceVaultId = sourceVaultId;
            return this;
        }

        public Builder sourceVaultId(String sourceVaultId) {
            return sourceVaultId(Output.of(sourceVaultId));
        }

        public SnapshotEncryptionSettingsDiskEncryptionKeyArgs build() {
            $.secretUrl = Objects.requireNonNull($.secretUrl, "expected parameter 'secretUrl' to be non-null");
            $.sourceVaultId = Objects.requireNonNull($.sourceVaultId, "expected parameter 'sourceVaultId' to be non-null");
            return $;
        }
    }

}
