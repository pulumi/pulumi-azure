// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.workloadssap.inputs;

import com.pulumi.azure.workloadssap.inputs.DiscoveryVirtualInstanceIdentityArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DiscoveryVirtualInstanceState extends com.pulumi.resources.ResourceArgs {

    public static final DiscoveryVirtualInstanceState Empty = new DiscoveryVirtualInstanceState();

    /**
     * The ID of the Virtual Machine of the Central Server. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="centralServerVirtualMachineId")
    private @Nullable Output<String> centralServerVirtualMachineId;

    /**
     * @return The ID of the Virtual Machine of the Central Server. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> centralServerVirtualMachineId() {
        return Optional.ofNullable(this.centralServerVirtualMachineId);
    }

    /**
     * The environment type for the SAP Discovery Virtual Instance. Possible values are `NonProd` and `Prod`. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="environment")
    private @Nullable Output<String> environment;

    /**
     * @return The environment type for the SAP Discovery Virtual Instance. Possible values are `NonProd` and `Prod`. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> environment() {
        return Optional.ofNullable(this.environment);
    }

    /**
     * An `identity` block as defined below.
     * 
     */
    @Import(name="identity")
    private @Nullable Output<DiscoveryVirtualInstanceIdentityArgs> identity;

    /**
     * @return An `identity` block as defined below.
     * 
     */
    public Optional<Output<DiscoveryVirtualInstanceIdentityArgs>> identity() {
        return Optional.ofNullable(this.identity);
    }

    /**
     * The Azure Region where the SAP Discovery Virtual Instance should exist. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="location")
    private @Nullable Output<String> location;

    /**
     * @return The Azure Region where the SAP Discovery Virtual Instance should exist. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * The name of the managed Resource Group for the SAP Discovery Virtual Instance. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="managedResourceGroupName")
    private @Nullable Output<String> managedResourceGroupName;

    /**
     * @return The name of the managed Resource Group for the SAP Discovery Virtual Instance. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> managedResourceGroupName() {
        return Optional.ofNullable(this.managedResourceGroupName);
    }

    /**
     * The name of the custom Storage Account created by the service in the managed Resource Group. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="managedStorageAccountName")
    private @Nullable Output<String> managedStorageAccountName;

    /**
     * @return The name of the custom Storage Account created by the service in the managed Resource Group. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> managedStorageAccountName() {
        return Optional.ofNullable(this.managedStorageAccountName);
    }

    /**
     * Specifies the name of the SAP Discovery Virtual Instance. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Specifies the name of the SAP Discovery Virtual Instance. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The name of the Resource Group where the SAP Discovery Virtual Instance should exist. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="resourceGroupName")
    private @Nullable Output<String> resourceGroupName;

    /**
     * @return The name of the Resource Group where the SAP Discovery Virtual Instance should exist. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> resourceGroupName() {
        return Optional.ofNullable(this.resourceGroupName);
    }

    /**
     * The SAP Product type for the SAP Discovery Virtual Instance. Possible values are `ECC`, `Other` and `S4HANA`. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="sapProduct")
    private @Nullable Output<String> sapProduct;

    /**
     * @return The SAP Product type for the SAP Discovery Virtual Instance. Possible values are `ECC`, `Other` and `S4HANA`. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> sapProduct() {
        return Optional.ofNullable(this.sapProduct);
    }

    /**
     * A mapping of tags which should be assigned to the SAP Discovery Virtual Instance.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return A mapping of tags which should be assigned to the SAP Discovery Virtual Instance.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private DiscoveryVirtualInstanceState() {}

    private DiscoveryVirtualInstanceState(DiscoveryVirtualInstanceState $) {
        this.centralServerVirtualMachineId = $.centralServerVirtualMachineId;
        this.environment = $.environment;
        this.identity = $.identity;
        this.location = $.location;
        this.managedResourceGroupName = $.managedResourceGroupName;
        this.managedStorageAccountName = $.managedStorageAccountName;
        this.name = $.name;
        this.resourceGroupName = $.resourceGroupName;
        this.sapProduct = $.sapProduct;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DiscoveryVirtualInstanceState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DiscoveryVirtualInstanceState $;

        public Builder() {
            $ = new DiscoveryVirtualInstanceState();
        }

        public Builder(DiscoveryVirtualInstanceState defaults) {
            $ = new DiscoveryVirtualInstanceState(Objects.requireNonNull(defaults));
        }

        /**
         * @param centralServerVirtualMachineId The ID of the Virtual Machine of the Central Server. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder centralServerVirtualMachineId(@Nullable Output<String> centralServerVirtualMachineId) {
            $.centralServerVirtualMachineId = centralServerVirtualMachineId;
            return this;
        }

        /**
         * @param centralServerVirtualMachineId The ID of the Virtual Machine of the Central Server. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder centralServerVirtualMachineId(String centralServerVirtualMachineId) {
            return centralServerVirtualMachineId(Output.of(centralServerVirtualMachineId));
        }

        /**
         * @param environment The environment type for the SAP Discovery Virtual Instance. Possible values are `NonProd` and `Prod`. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder environment(@Nullable Output<String> environment) {
            $.environment = environment;
            return this;
        }

        /**
         * @param environment The environment type for the SAP Discovery Virtual Instance. Possible values are `NonProd` and `Prod`. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder environment(String environment) {
            return environment(Output.of(environment));
        }

        /**
         * @param identity An `identity` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder identity(@Nullable Output<DiscoveryVirtualInstanceIdentityArgs> identity) {
            $.identity = identity;
            return this;
        }

        /**
         * @param identity An `identity` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder identity(DiscoveryVirtualInstanceIdentityArgs identity) {
            return identity(Output.of(identity));
        }

        /**
         * @param location The Azure Region where the SAP Discovery Virtual Instance should exist. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location The Azure Region where the SAP Discovery Virtual Instance should exist. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param managedResourceGroupName The name of the managed Resource Group for the SAP Discovery Virtual Instance. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder managedResourceGroupName(@Nullable Output<String> managedResourceGroupName) {
            $.managedResourceGroupName = managedResourceGroupName;
            return this;
        }

        /**
         * @param managedResourceGroupName The name of the managed Resource Group for the SAP Discovery Virtual Instance. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder managedResourceGroupName(String managedResourceGroupName) {
            return managedResourceGroupName(Output.of(managedResourceGroupName));
        }

        /**
         * @param managedStorageAccountName The name of the custom Storage Account created by the service in the managed Resource Group. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder managedStorageAccountName(@Nullable Output<String> managedStorageAccountName) {
            $.managedStorageAccountName = managedStorageAccountName;
            return this;
        }

        /**
         * @param managedStorageAccountName The name of the custom Storage Account created by the service in the managed Resource Group. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder managedStorageAccountName(String managedStorageAccountName) {
            return managedStorageAccountName(Output.of(managedStorageAccountName));
        }

        /**
         * @param name Specifies the name of the SAP Discovery Virtual Instance. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Specifies the name of the SAP Discovery Virtual Instance. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param resourceGroupName The name of the Resource Group where the SAP Discovery Virtual Instance should exist. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(@Nullable Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName The name of the Resource Group where the SAP Discovery Virtual Instance should exist. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        /**
         * @param sapProduct The SAP Product type for the SAP Discovery Virtual Instance. Possible values are `ECC`, `Other` and `S4HANA`. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder sapProduct(@Nullable Output<String> sapProduct) {
            $.sapProduct = sapProduct;
            return this;
        }

        /**
         * @param sapProduct The SAP Product type for the SAP Discovery Virtual Instance. Possible values are `ECC`, `Other` and `S4HANA`. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder sapProduct(String sapProduct) {
            return sapProduct(Output.of(sapProduct));
        }

        /**
         * @param tags A mapping of tags which should be assigned to the SAP Discovery Virtual Instance.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags A mapping of tags which should be assigned to the SAP Discovery Virtual Instance.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public DiscoveryVirtualInstanceState build() {
            return $;
        }
    }

}
