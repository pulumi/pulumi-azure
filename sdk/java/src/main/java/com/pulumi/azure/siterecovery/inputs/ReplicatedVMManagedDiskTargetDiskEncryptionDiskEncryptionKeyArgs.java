// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.siterecovery.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class ReplicatedVMManagedDiskTargetDiskEncryptionDiskEncryptionKeyArgs extends com.pulumi.resources.ResourceArgs {

    public static final ReplicatedVMManagedDiskTargetDiskEncryptionDiskEncryptionKeyArgs Empty = new ReplicatedVMManagedDiskTargetDiskEncryptionDiskEncryptionKeyArgs();

    /**
     * The URL to the Key Vault Secret used as the Disk Encryption Key that the Managed Disk will be associated with. This can be found as `id` on the `azure.keyvault.Secret` resource. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="secretUrl", required=true)
    private Output<String> secretUrl;

    /**
     * @return The URL to the Key Vault Secret used as the Disk Encryption Key that the Managed Disk will be associated with. This can be found as `id` on the `azure.keyvault.Secret` resource. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> secretUrl() {
        return this.secretUrl;
    }

    /**
     * The ID of the Key Vault. This can be found as `id` on the `azure.keyvault.KeyVault` resource. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="vaultId", required=true)
    private Output<String> vaultId;

    /**
     * @return The ID of the Key Vault. This can be found as `id` on the `azure.keyvault.KeyVault` resource. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> vaultId() {
        return this.vaultId;
    }

    private ReplicatedVMManagedDiskTargetDiskEncryptionDiskEncryptionKeyArgs() {}

    private ReplicatedVMManagedDiskTargetDiskEncryptionDiskEncryptionKeyArgs(ReplicatedVMManagedDiskTargetDiskEncryptionDiskEncryptionKeyArgs $) {
        this.secretUrl = $.secretUrl;
        this.vaultId = $.vaultId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ReplicatedVMManagedDiskTargetDiskEncryptionDiskEncryptionKeyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ReplicatedVMManagedDiskTargetDiskEncryptionDiskEncryptionKeyArgs $;

        public Builder() {
            $ = new ReplicatedVMManagedDiskTargetDiskEncryptionDiskEncryptionKeyArgs();
        }

        public Builder(ReplicatedVMManagedDiskTargetDiskEncryptionDiskEncryptionKeyArgs defaults) {
            $ = new ReplicatedVMManagedDiskTargetDiskEncryptionDiskEncryptionKeyArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param secretUrl The URL to the Key Vault Secret used as the Disk Encryption Key that the Managed Disk will be associated with. This can be found as `id` on the `azure.keyvault.Secret` resource. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder secretUrl(Output<String> secretUrl) {
            $.secretUrl = secretUrl;
            return this;
        }

        /**
         * @param secretUrl The URL to the Key Vault Secret used as the Disk Encryption Key that the Managed Disk will be associated with. This can be found as `id` on the `azure.keyvault.Secret` resource. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder secretUrl(String secretUrl) {
            return secretUrl(Output.of(secretUrl));
        }

        /**
         * @param vaultId The ID of the Key Vault. This can be found as `id` on the `azure.keyvault.KeyVault` resource. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder vaultId(Output<String> vaultId) {
            $.vaultId = vaultId;
            return this;
        }

        /**
         * @param vaultId The ID of the Key Vault. This can be found as `id` on the `azure.keyvault.KeyVault` resource. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder vaultId(String vaultId) {
            return vaultId(Output.of(vaultId));
        }

        public ReplicatedVMManagedDiskTargetDiskEncryptionDiskEncryptionKeyArgs build() {
            if ($.secretUrl == null) {
                throw new MissingRequiredPropertyException("ReplicatedVMManagedDiskTargetDiskEncryptionDiskEncryptionKeyArgs", "secretUrl");
            }
            if ($.vaultId == null) {
                throw new MissingRequiredPropertyException("ReplicatedVMManagedDiskTargetDiskEncryptionDiskEncryptionKeyArgs", "vaultId");
            }
            return $;
        }
    }

}
