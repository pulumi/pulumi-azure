// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.privatedns;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ResolverVirtualNetworkLinkArgs extends com.pulumi.resources.ResourceArgs {

    public static final ResolverVirtualNetworkLinkArgs Empty = new ResolverVirtualNetworkLinkArgs();

    /**
     * Specifies the ID of the Private DNS Resolver DNS Forwarding Ruleset. Changing this forces a new Private DNS Resolver Virtual Network Link to be created.
     * 
     */
    @Import(name="dnsForwardingRulesetId", required=true)
    private Output<String> dnsForwardingRulesetId;

    /**
     * @return Specifies the ID of the Private DNS Resolver DNS Forwarding Ruleset. Changing this forces a new Private DNS Resolver Virtual Network Link to be created.
     * 
     */
    public Output<String> dnsForwardingRulesetId() {
        return this.dnsForwardingRulesetId;
    }

    /**
     * Metadata attached to the Private DNS Resolver Virtual Network Link.
     * 
     */
    @Import(name="metadata")
    private @Nullable Output<Map<String,String>> metadata;

    /**
     * @return Metadata attached to the Private DNS Resolver Virtual Network Link.
     * 
     */
    public Optional<Output<Map<String,String>>> metadata() {
        return Optional.ofNullable(this.metadata);
    }

    /**
     * Specifies the name which should be used for this Private DNS Resolver Virtual Network Link. Changing this forces a new Private DNS Resolver Virtual Network Link to be created.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Specifies the name which should be used for this Private DNS Resolver Virtual Network Link. Changing this forces a new Private DNS Resolver Virtual Network Link to be created.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The ID of the Virtual Network that is linked to the Private DNS Resolver Virtual Network Link. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="virtualNetworkId", required=true)
    private Output<String> virtualNetworkId;

    /**
     * @return The ID of the Virtual Network that is linked to the Private DNS Resolver Virtual Network Link. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> virtualNetworkId() {
        return this.virtualNetworkId;
    }

    private ResolverVirtualNetworkLinkArgs() {}

    private ResolverVirtualNetworkLinkArgs(ResolverVirtualNetworkLinkArgs $) {
        this.dnsForwardingRulesetId = $.dnsForwardingRulesetId;
        this.metadata = $.metadata;
        this.name = $.name;
        this.virtualNetworkId = $.virtualNetworkId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ResolverVirtualNetworkLinkArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ResolverVirtualNetworkLinkArgs $;

        public Builder() {
            $ = new ResolverVirtualNetworkLinkArgs();
        }

        public Builder(ResolverVirtualNetworkLinkArgs defaults) {
            $ = new ResolverVirtualNetworkLinkArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param dnsForwardingRulesetId Specifies the ID of the Private DNS Resolver DNS Forwarding Ruleset. Changing this forces a new Private DNS Resolver Virtual Network Link to be created.
         * 
         * @return builder
         * 
         */
        public Builder dnsForwardingRulesetId(Output<String> dnsForwardingRulesetId) {
            $.dnsForwardingRulesetId = dnsForwardingRulesetId;
            return this;
        }

        /**
         * @param dnsForwardingRulesetId Specifies the ID of the Private DNS Resolver DNS Forwarding Ruleset. Changing this forces a new Private DNS Resolver Virtual Network Link to be created.
         * 
         * @return builder
         * 
         */
        public Builder dnsForwardingRulesetId(String dnsForwardingRulesetId) {
            return dnsForwardingRulesetId(Output.of(dnsForwardingRulesetId));
        }

        /**
         * @param metadata Metadata attached to the Private DNS Resolver Virtual Network Link.
         * 
         * @return builder
         * 
         */
        public Builder metadata(@Nullable Output<Map<String,String>> metadata) {
            $.metadata = metadata;
            return this;
        }

        /**
         * @param metadata Metadata attached to the Private DNS Resolver Virtual Network Link.
         * 
         * @return builder
         * 
         */
        public Builder metadata(Map<String,String> metadata) {
            return metadata(Output.of(metadata));
        }

        /**
         * @param name Specifies the name which should be used for this Private DNS Resolver Virtual Network Link. Changing this forces a new Private DNS Resolver Virtual Network Link to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Specifies the name which should be used for this Private DNS Resolver Virtual Network Link. Changing this forces a new Private DNS Resolver Virtual Network Link to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param virtualNetworkId The ID of the Virtual Network that is linked to the Private DNS Resolver Virtual Network Link. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder virtualNetworkId(Output<String> virtualNetworkId) {
            $.virtualNetworkId = virtualNetworkId;
            return this;
        }

        /**
         * @param virtualNetworkId The ID of the Virtual Network that is linked to the Private DNS Resolver Virtual Network Link. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder virtualNetworkId(String virtualNetworkId) {
            return virtualNetworkId(Output.of(virtualNetworkId));
        }

        public ResolverVirtualNetworkLinkArgs build() {
            if ($.dnsForwardingRulesetId == null) {
                throw new MissingRequiredPropertyException("ResolverVirtualNetworkLinkArgs", "dnsForwardingRulesetId");
            }
            if ($.virtualNetworkId == null) {
                throw new MissingRequiredPropertyException("ResolverVirtualNetworkLinkArgs", "virtualNetworkId");
            }
            return $;
        }
    }

}
