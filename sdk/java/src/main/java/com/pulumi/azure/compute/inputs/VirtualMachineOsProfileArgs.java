// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.compute.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class VirtualMachineOsProfileArgs extends com.pulumi.resources.ResourceArgs {

    public static final VirtualMachineOsProfileArgs Empty = new VirtualMachineOsProfileArgs();

    /**
     * The password associated with the local administrator account.
     * 
     */
    @Import(name="adminPassword")
    private @Nullable Output<String> adminPassword;

    /**
     * @return The password associated with the local administrator account.
     * 
     */
    public Optional<Output<String>> adminPassword() {
        return Optional.ofNullable(this.adminPassword);
    }

    /**
     * Specifies the name of the local administrator account.
     * 
     */
    @Import(name="adminUsername", required=true)
    private Output<String> adminUsername;

    /**
     * @return Specifies the name of the local administrator account.
     * 
     */
    public Output<String> adminUsername() {
        return this.adminUsername;
    }

    /**
     * Specifies the name of the Virtual Machine.
     * 
     */
    @Import(name="computerName", required=true)
    private Output<String> computerName;

    /**
     * @return Specifies the name of the Virtual Machine.
     * 
     */
    public Output<String> computerName() {
        return this.computerName;
    }

    /**
     * Specifies custom data to supply to the machine. On Linux-based systems, this can be used as a cloud-init script. On other systems, this will be copied as a file on disk. Internally, this provider will base64 encode this value before sending it to the API. The maximum length of the binary array is 65535 bytes.
     * 
     */
    @Import(name="customData")
    private @Nullable Output<String> customData;

    /**
     * @return Specifies custom data to supply to the machine. On Linux-based systems, this can be used as a cloud-init script. On other systems, this will be copied as a file on disk. Internally, this provider will base64 encode this value before sending it to the API. The maximum length of the binary array is 65535 bytes.
     * 
     */
    public Optional<Output<String>> customData() {
        return Optional.ofNullable(this.customData);
    }

    private VirtualMachineOsProfileArgs() {}

    private VirtualMachineOsProfileArgs(VirtualMachineOsProfileArgs $) {
        this.adminPassword = $.adminPassword;
        this.adminUsername = $.adminUsername;
        this.computerName = $.computerName;
        this.customData = $.customData;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VirtualMachineOsProfileArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VirtualMachineOsProfileArgs $;

        public Builder() {
            $ = new VirtualMachineOsProfileArgs();
        }

        public Builder(VirtualMachineOsProfileArgs defaults) {
            $ = new VirtualMachineOsProfileArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param adminPassword The password associated with the local administrator account.
         * 
         * @return builder
         * 
         */
        public Builder adminPassword(@Nullable Output<String> adminPassword) {
            $.adminPassword = adminPassword;
            return this;
        }

        /**
         * @param adminPassword The password associated with the local administrator account.
         * 
         * @return builder
         * 
         */
        public Builder adminPassword(String adminPassword) {
            return adminPassword(Output.of(adminPassword));
        }

        /**
         * @param adminUsername Specifies the name of the local administrator account.
         * 
         * @return builder
         * 
         */
        public Builder adminUsername(Output<String> adminUsername) {
            $.adminUsername = adminUsername;
            return this;
        }

        /**
         * @param adminUsername Specifies the name of the local administrator account.
         * 
         * @return builder
         * 
         */
        public Builder adminUsername(String adminUsername) {
            return adminUsername(Output.of(adminUsername));
        }

        /**
         * @param computerName Specifies the name of the Virtual Machine.
         * 
         * @return builder
         * 
         */
        public Builder computerName(Output<String> computerName) {
            $.computerName = computerName;
            return this;
        }

        /**
         * @param computerName Specifies the name of the Virtual Machine.
         * 
         * @return builder
         * 
         */
        public Builder computerName(String computerName) {
            return computerName(Output.of(computerName));
        }

        /**
         * @param customData Specifies custom data to supply to the machine. On Linux-based systems, this can be used as a cloud-init script. On other systems, this will be copied as a file on disk. Internally, this provider will base64 encode this value before sending it to the API. The maximum length of the binary array is 65535 bytes.
         * 
         * @return builder
         * 
         */
        public Builder customData(@Nullable Output<String> customData) {
            $.customData = customData;
            return this;
        }

        /**
         * @param customData Specifies custom data to supply to the machine. On Linux-based systems, this can be used as a cloud-init script. On other systems, this will be copied as a file on disk. Internally, this provider will base64 encode this value before sending it to the API. The maximum length of the binary array is 65535 bytes.
         * 
         * @return builder
         * 
         */
        public Builder customData(String customData) {
            return customData(Output.of(customData));
        }

        public VirtualMachineOsProfileArgs build() {
            $.adminUsername = Objects.requireNonNull($.adminUsername, "expected parameter 'adminUsername' to be non-null");
            $.computerName = Objects.requireNonNull($.computerName, "expected parameter 'computerName' to be non-null");
            return $;
        }
    }

}
