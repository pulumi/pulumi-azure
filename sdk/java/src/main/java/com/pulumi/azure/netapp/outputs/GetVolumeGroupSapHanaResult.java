// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.netapp.outputs;

import com.pulumi.azure.netapp.outputs.GetVolumeGroupSapHanaVolume;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetVolumeGroupSapHanaResult {
    private String accountName;
    /**
     * @return The application identifier.
     * 
     */
    private String applicationIdentifier;
    /**
     * @return Volume group description.
     * 
     */
    private String groupDescription;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return The Azure Region where the Application Volume Group exists.
     * 
     */
    private String location;
    /**
     * @return The name of this volume.
     * 
     */
    private String name;
    private String resourceGroupName;
    /**
     * @return A `volume` block as defined below.
     * 
     */
    private List<GetVolumeGroupSapHanaVolume> volumes;

    private GetVolumeGroupSapHanaResult() {}
    public String accountName() {
        return this.accountName;
    }
    /**
     * @return The application identifier.
     * 
     */
    public String applicationIdentifier() {
        return this.applicationIdentifier;
    }
    /**
     * @return Volume group description.
     * 
     */
    public String groupDescription() {
        return this.groupDescription;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The Azure Region where the Application Volume Group exists.
     * 
     */
    public String location() {
        return this.location;
    }
    /**
     * @return The name of this volume.
     * 
     */
    public String name() {
        return this.name;
    }
    public String resourceGroupName() {
        return this.resourceGroupName;
    }
    /**
     * @return A `volume` block as defined below.
     * 
     */
    public List<GetVolumeGroupSapHanaVolume> volumes() {
        return this.volumes;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetVolumeGroupSapHanaResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String accountName;
        private String applicationIdentifier;
        private String groupDescription;
        private String id;
        private String location;
        private String name;
        private String resourceGroupName;
        private List<GetVolumeGroupSapHanaVolume> volumes;
        public Builder() {}
        public Builder(GetVolumeGroupSapHanaResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accountName = defaults.accountName;
    	      this.applicationIdentifier = defaults.applicationIdentifier;
    	      this.groupDescription = defaults.groupDescription;
    	      this.id = defaults.id;
    	      this.location = defaults.location;
    	      this.name = defaults.name;
    	      this.resourceGroupName = defaults.resourceGroupName;
    	      this.volumes = defaults.volumes;
        }

        @CustomType.Setter
        public Builder accountName(String accountName) {
            if (accountName == null) {
              throw new MissingRequiredPropertyException("GetVolumeGroupSapHanaResult", "accountName");
            }
            this.accountName = accountName;
            return this;
        }
        @CustomType.Setter
        public Builder applicationIdentifier(String applicationIdentifier) {
            if (applicationIdentifier == null) {
              throw new MissingRequiredPropertyException("GetVolumeGroupSapHanaResult", "applicationIdentifier");
            }
            this.applicationIdentifier = applicationIdentifier;
            return this;
        }
        @CustomType.Setter
        public Builder groupDescription(String groupDescription) {
            if (groupDescription == null) {
              throw new MissingRequiredPropertyException("GetVolumeGroupSapHanaResult", "groupDescription");
            }
            this.groupDescription = groupDescription;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetVolumeGroupSapHanaResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder location(String location) {
            if (location == null) {
              throw new MissingRequiredPropertyException("GetVolumeGroupSapHanaResult", "location");
            }
            this.location = location;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetVolumeGroupSapHanaResult", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder resourceGroupName(String resourceGroupName) {
            if (resourceGroupName == null) {
              throw new MissingRequiredPropertyException("GetVolumeGroupSapHanaResult", "resourceGroupName");
            }
            this.resourceGroupName = resourceGroupName;
            return this;
        }
        @CustomType.Setter
        public Builder volumes(List<GetVolumeGroupSapHanaVolume> volumes) {
            if (volumes == null) {
              throw new MissingRequiredPropertyException("GetVolumeGroupSapHanaResult", "volumes");
            }
            this.volumes = volumes;
            return this;
        }
        public Builder volumes(GetVolumeGroupSapHanaVolume... volumes) {
            return volumes(List.of(volumes));
        }
        public GetVolumeGroupSapHanaResult build() {
            final var _resultValue = new GetVolumeGroupSapHanaResult();
            _resultValue.accountName = accountName;
            _resultValue.applicationIdentifier = applicationIdentifier;
            _resultValue.groupDescription = groupDescription;
            _resultValue.id = id;
            _resultValue.location = location;
            _resultValue.name = name;
            _resultValue.resourceGroupName = resourceGroupName;
            _resultValue.volumes = volumes;
            return _resultValue;
        }
    }
}
