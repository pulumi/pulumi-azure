// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.iot.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SecurityDeviceGroupAllowRuleArgs extends com.pulumi.resources.ResourceArgs {

    public static final SecurityDeviceGroupAllowRuleArgs Empty = new SecurityDeviceGroupAllowRuleArgs();

    /**
     * Specifies which IP is not allowed to be connected to in current device group for inbound connection.
     * 
     */
    @Import(name="connectionFromIpsNotAlloweds")
    private @Nullable Output<List<String>> connectionFromIpsNotAlloweds;

    /**
     * @return Specifies which IP is not allowed to be connected to in current device group for inbound connection.
     * 
     */
    public Optional<Output<List<String>>> connectionFromIpsNotAlloweds() {
        return Optional.ofNullable(this.connectionFromIpsNotAlloweds);
    }

    /**
     * Specifies which IP is not allowed to be connected to in current device group for outbound connection.
     * 
     */
    @Import(name="connectionToIpsNotAlloweds")
    private @Nullable Output<List<String>> connectionToIpsNotAlloweds;

    /**
     * @return Specifies which IP is not allowed to be connected to in current device group for outbound connection.
     * 
     */
    public Optional<Output<List<String>>> connectionToIpsNotAlloweds() {
        return Optional.ofNullable(this.connectionToIpsNotAlloweds);
    }

    /**
     * Specifies which local user is not allowed to login in current device group.
     * 
     */
    @Import(name="localUsersNotAlloweds")
    private @Nullable Output<List<String>> localUsersNotAlloweds;

    /**
     * @return Specifies which local user is not allowed to login in current device group.
     * 
     */
    public Optional<Output<List<String>>> localUsersNotAlloweds() {
        return Optional.ofNullable(this.localUsersNotAlloweds);
    }

    /**
     * Specifies which process is not allowed to be executed in current device group.
     * 
     */
    @Import(name="processesNotAlloweds")
    private @Nullable Output<List<String>> processesNotAlloweds;

    /**
     * @return Specifies which process is not allowed to be executed in current device group.
     * 
     */
    public Optional<Output<List<String>>> processesNotAlloweds() {
        return Optional.ofNullable(this.processesNotAlloweds);
    }

    private SecurityDeviceGroupAllowRuleArgs() {}

    private SecurityDeviceGroupAllowRuleArgs(SecurityDeviceGroupAllowRuleArgs $) {
        this.connectionFromIpsNotAlloweds = $.connectionFromIpsNotAlloweds;
        this.connectionToIpsNotAlloweds = $.connectionToIpsNotAlloweds;
        this.localUsersNotAlloweds = $.localUsersNotAlloweds;
        this.processesNotAlloweds = $.processesNotAlloweds;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SecurityDeviceGroupAllowRuleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SecurityDeviceGroupAllowRuleArgs $;

        public Builder() {
            $ = new SecurityDeviceGroupAllowRuleArgs();
        }

        public Builder(SecurityDeviceGroupAllowRuleArgs defaults) {
            $ = new SecurityDeviceGroupAllowRuleArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param connectionFromIpsNotAlloweds Specifies which IP is not allowed to be connected to in current device group for inbound connection.
         * 
         * @return builder
         * 
         */
        public Builder connectionFromIpsNotAlloweds(@Nullable Output<List<String>> connectionFromIpsNotAlloweds) {
            $.connectionFromIpsNotAlloweds = connectionFromIpsNotAlloweds;
            return this;
        }

        /**
         * @param connectionFromIpsNotAlloweds Specifies which IP is not allowed to be connected to in current device group for inbound connection.
         * 
         * @return builder
         * 
         */
        public Builder connectionFromIpsNotAlloweds(List<String> connectionFromIpsNotAlloweds) {
            return connectionFromIpsNotAlloweds(Output.of(connectionFromIpsNotAlloweds));
        }

        /**
         * @param connectionFromIpsNotAlloweds Specifies which IP is not allowed to be connected to in current device group for inbound connection.
         * 
         * @return builder
         * 
         */
        public Builder connectionFromIpsNotAlloweds(String... connectionFromIpsNotAlloweds) {
            return connectionFromIpsNotAlloweds(List.of(connectionFromIpsNotAlloweds));
        }

        /**
         * @param connectionToIpsNotAlloweds Specifies which IP is not allowed to be connected to in current device group for outbound connection.
         * 
         * @return builder
         * 
         */
        public Builder connectionToIpsNotAlloweds(@Nullable Output<List<String>> connectionToIpsNotAlloweds) {
            $.connectionToIpsNotAlloweds = connectionToIpsNotAlloweds;
            return this;
        }

        /**
         * @param connectionToIpsNotAlloweds Specifies which IP is not allowed to be connected to in current device group for outbound connection.
         * 
         * @return builder
         * 
         */
        public Builder connectionToIpsNotAlloweds(List<String> connectionToIpsNotAlloweds) {
            return connectionToIpsNotAlloweds(Output.of(connectionToIpsNotAlloweds));
        }

        /**
         * @param connectionToIpsNotAlloweds Specifies which IP is not allowed to be connected to in current device group for outbound connection.
         * 
         * @return builder
         * 
         */
        public Builder connectionToIpsNotAlloweds(String... connectionToIpsNotAlloweds) {
            return connectionToIpsNotAlloweds(List.of(connectionToIpsNotAlloweds));
        }

        /**
         * @param localUsersNotAlloweds Specifies which local user is not allowed to login in current device group.
         * 
         * @return builder
         * 
         */
        public Builder localUsersNotAlloweds(@Nullable Output<List<String>> localUsersNotAlloweds) {
            $.localUsersNotAlloweds = localUsersNotAlloweds;
            return this;
        }

        /**
         * @param localUsersNotAlloweds Specifies which local user is not allowed to login in current device group.
         * 
         * @return builder
         * 
         */
        public Builder localUsersNotAlloweds(List<String> localUsersNotAlloweds) {
            return localUsersNotAlloweds(Output.of(localUsersNotAlloweds));
        }

        /**
         * @param localUsersNotAlloweds Specifies which local user is not allowed to login in current device group.
         * 
         * @return builder
         * 
         */
        public Builder localUsersNotAlloweds(String... localUsersNotAlloweds) {
            return localUsersNotAlloweds(List.of(localUsersNotAlloweds));
        }

        /**
         * @param processesNotAlloweds Specifies which process is not allowed to be executed in current device group.
         * 
         * @return builder
         * 
         */
        public Builder processesNotAlloweds(@Nullable Output<List<String>> processesNotAlloweds) {
            $.processesNotAlloweds = processesNotAlloweds;
            return this;
        }

        /**
         * @param processesNotAlloweds Specifies which process is not allowed to be executed in current device group.
         * 
         * @return builder
         * 
         */
        public Builder processesNotAlloweds(List<String> processesNotAlloweds) {
            return processesNotAlloweds(Output.of(processesNotAlloweds));
        }

        /**
         * @param processesNotAlloweds Specifies which process is not allowed to be executed in current device group.
         * 
         * @return builder
         * 
         */
        public Builder processesNotAlloweds(String... processesNotAlloweds) {
            return processesNotAlloweds(List.of(processesNotAlloweds));
        }

        public SecurityDeviceGroupAllowRuleArgs build() {
            return $;
        }
    }

}
