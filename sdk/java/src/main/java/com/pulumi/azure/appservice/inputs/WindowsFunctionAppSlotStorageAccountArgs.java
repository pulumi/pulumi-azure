// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.appservice.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class WindowsFunctionAppSlotStorageAccountArgs extends com.pulumi.resources.ResourceArgs {

    public static final WindowsFunctionAppSlotStorageAccountArgs Empty = new WindowsFunctionAppSlotStorageAccountArgs();

    /**
     * The Access key for the storage account.
     * 
     */
    @Import(name="accessKey", required=true)
    private Output<String> accessKey;

    /**
     * @return The Access key for the storage account.
     * 
     */
    public Output<String> accessKey() {
        return this.accessKey;
    }

    /**
     * The Name of the Storage Account.
     * 
     */
    @Import(name="accountName", required=true)
    private Output<String> accountName;

    /**
     * @return The Name of the Storage Account.
     * 
     */
    public Output<String> accountName() {
        return this.accountName;
    }

    /**
     * The path at which to mount the storage share.
     * 
     */
    @Import(name="mountPath")
    private @Nullable Output<String> mountPath;

    /**
     * @return The path at which to mount the storage share.
     * 
     */
    public Optional<Output<String>> mountPath() {
        return Optional.ofNullable(this.mountPath);
    }

    /**
     * The name which should be used for this Storage Account.
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    /**
     * @return The name which should be used for this Storage Account.
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    /**
     * The Name of the File Share or Container Name for Blob storage.
     * 
     */
    @Import(name="shareName", required=true)
    private Output<String> shareName;

    /**
     * @return The Name of the File Share or Container Name for Blob storage.
     * 
     */
    public Output<String> shareName() {
        return this.shareName;
    }

    /**
     * The Azure Storage Type. Possible values include `AzureFiles`.
     * 
     */
    @Import(name="type", required=true)
    private Output<String> type;

    /**
     * @return The Azure Storage Type. Possible values include `AzureFiles`.
     * 
     */
    public Output<String> type() {
        return this.type;
    }

    private WindowsFunctionAppSlotStorageAccountArgs() {}

    private WindowsFunctionAppSlotStorageAccountArgs(WindowsFunctionAppSlotStorageAccountArgs $) {
        this.accessKey = $.accessKey;
        this.accountName = $.accountName;
        this.mountPath = $.mountPath;
        this.name = $.name;
        this.shareName = $.shareName;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(WindowsFunctionAppSlotStorageAccountArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private WindowsFunctionAppSlotStorageAccountArgs $;

        public Builder() {
            $ = new WindowsFunctionAppSlotStorageAccountArgs();
        }

        public Builder(WindowsFunctionAppSlotStorageAccountArgs defaults) {
            $ = new WindowsFunctionAppSlotStorageAccountArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param accessKey The Access key for the storage account.
         * 
         * @return builder
         * 
         */
        public Builder accessKey(Output<String> accessKey) {
            $.accessKey = accessKey;
            return this;
        }

        /**
         * @param accessKey The Access key for the storage account.
         * 
         * @return builder
         * 
         */
        public Builder accessKey(String accessKey) {
            return accessKey(Output.of(accessKey));
        }

        /**
         * @param accountName The Name of the Storage Account.
         * 
         * @return builder
         * 
         */
        public Builder accountName(Output<String> accountName) {
            $.accountName = accountName;
            return this;
        }

        /**
         * @param accountName The Name of the Storage Account.
         * 
         * @return builder
         * 
         */
        public Builder accountName(String accountName) {
            return accountName(Output.of(accountName));
        }

        /**
         * @param mountPath The path at which to mount the storage share.
         * 
         * @return builder
         * 
         */
        public Builder mountPath(@Nullable Output<String> mountPath) {
            $.mountPath = mountPath;
            return this;
        }

        /**
         * @param mountPath The path at which to mount the storage share.
         * 
         * @return builder
         * 
         */
        public Builder mountPath(String mountPath) {
            return mountPath(Output.of(mountPath));
        }

        /**
         * @param name The name which should be used for this Storage Account.
         * 
         * @return builder
         * 
         */
        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name which should be used for this Storage Account.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param shareName The Name of the File Share or Container Name for Blob storage.
         * 
         * @return builder
         * 
         */
        public Builder shareName(Output<String> shareName) {
            $.shareName = shareName;
            return this;
        }

        /**
         * @param shareName The Name of the File Share or Container Name for Blob storage.
         * 
         * @return builder
         * 
         */
        public Builder shareName(String shareName) {
            return shareName(Output.of(shareName));
        }

        /**
         * @param type The Azure Storage Type. Possible values include `AzureFiles`.
         * 
         * @return builder
         * 
         */
        public Builder type(Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type The Azure Storage Type. Possible values include `AzureFiles`.
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        public WindowsFunctionAppSlotStorageAccountArgs build() {
            if ($.accessKey == null) {
                throw new MissingRequiredPropertyException("WindowsFunctionAppSlotStorageAccountArgs", "accessKey");
            }
            if ($.accountName == null) {
                throw new MissingRequiredPropertyException("WindowsFunctionAppSlotStorageAccountArgs", "accountName");
            }
            if ($.name == null) {
                throw new MissingRequiredPropertyException("WindowsFunctionAppSlotStorageAccountArgs", "name");
            }
            if ($.shareName == null) {
                throw new MissingRequiredPropertyException("WindowsFunctionAppSlotStorageAccountArgs", "shareName");
            }
            if ($.type == null) {
                throw new MissingRequiredPropertyException("WindowsFunctionAppSlotStorageAccountArgs", "type");
            }
            return $;
        }
    }

}
