// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.eventhub;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class NamespaceCustomerManagedKeyArgs extends com.pulumi.resources.ResourceArgs {

    public static final NamespaceCustomerManagedKeyArgs Empty = new NamespaceCustomerManagedKeyArgs();

    /**
     * The ID of the EventHub Namespace. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="eventhubNamespaceId", required=true)
    private Output<String> eventhubNamespaceId;

    /**
     * @return The ID of the EventHub Namespace. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> eventhubNamespaceId() {
        return this.eventhubNamespaceId;
    }

    /**
     * The list of keys of Key Vault.
     * 
     */
    @Import(name="keyVaultKeyIds", required=true)
    private Output<List<String>> keyVaultKeyIds;

    /**
     * @return The list of keys of Key Vault.
     * 
     */
    public Output<List<String>> keyVaultKeyIds() {
        return this.keyVaultKeyIds;
    }

    private NamespaceCustomerManagedKeyArgs() {}

    private NamespaceCustomerManagedKeyArgs(NamespaceCustomerManagedKeyArgs $) {
        this.eventhubNamespaceId = $.eventhubNamespaceId;
        this.keyVaultKeyIds = $.keyVaultKeyIds;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(NamespaceCustomerManagedKeyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private NamespaceCustomerManagedKeyArgs $;

        public Builder() {
            $ = new NamespaceCustomerManagedKeyArgs();
        }

        public Builder(NamespaceCustomerManagedKeyArgs defaults) {
            $ = new NamespaceCustomerManagedKeyArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param eventhubNamespaceId The ID of the EventHub Namespace. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder eventhubNamespaceId(Output<String> eventhubNamespaceId) {
            $.eventhubNamespaceId = eventhubNamespaceId;
            return this;
        }

        /**
         * @param eventhubNamespaceId The ID of the EventHub Namespace. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder eventhubNamespaceId(String eventhubNamespaceId) {
            return eventhubNamespaceId(Output.of(eventhubNamespaceId));
        }

        /**
         * @param keyVaultKeyIds The list of keys of Key Vault.
         * 
         * @return builder
         * 
         */
        public Builder keyVaultKeyIds(Output<List<String>> keyVaultKeyIds) {
            $.keyVaultKeyIds = keyVaultKeyIds;
            return this;
        }

        /**
         * @param keyVaultKeyIds The list of keys of Key Vault.
         * 
         * @return builder
         * 
         */
        public Builder keyVaultKeyIds(List<String> keyVaultKeyIds) {
            return keyVaultKeyIds(Output.of(keyVaultKeyIds));
        }

        /**
         * @param keyVaultKeyIds The list of keys of Key Vault.
         * 
         * @return builder
         * 
         */
        public Builder keyVaultKeyIds(String... keyVaultKeyIds) {
            return keyVaultKeyIds(List.of(keyVaultKeyIds));
        }

        public NamespaceCustomerManagedKeyArgs build() {
            $.eventhubNamespaceId = Objects.requireNonNull($.eventhubNamespaceId, "expected parameter 'eventhubNamespaceId' to be non-null");
            $.keyVaultKeyIds = Objects.requireNonNull($.keyVaultKeyIds, "expected parameter 'keyVaultKeyIds' to be non-null");
            return $;
        }
    }

}
