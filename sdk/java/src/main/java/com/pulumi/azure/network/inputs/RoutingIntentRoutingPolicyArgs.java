// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.network.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class RoutingIntentRoutingPolicyArgs extends com.pulumi.resources.ResourceArgs {

    public static final RoutingIntentRoutingPolicyArgs Empty = new RoutingIntentRoutingPolicyArgs();

    /**
     * A list of destinations which this routing policy is applicable to. Possible values are `Internet` and `PrivateTraffic`.
     * 
     */
    @Import(name="destinations", required=true)
    private Output<List<String>> destinations;

    /**
     * @return A list of destinations which this routing policy is applicable to. Possible values are `Internet` and `PrivateTraffic`.
     * 
     */
    public Output<List<String>> destinations() {
        return this.destinations;
    }

    /**
     * The unique name for the routing policy.
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    /**
     * @return The unique name for the routing policy.
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    /**
     * The resource ID of the next hop on which this routing policy is applicable to.
     * 
     */
    @Import(name="nextHop", required=true)
    private Output<String> nextHop;

    /**
     * @return The resource ID of the next hop on which this routing policy is applicable to.
     * 
     */
    public Output<String> nextHop() {
        return this.nextHop;
    }

    private RoutingIntentRoutingPolicyArgs() {}

    private RoutingIntentRoutingPolicyArgs(RoutingIntentRoutingPolicyArgs $) {
        this.destinations = $.destinations;
        this.name = $.name;
        this.nextHop = $.nextHop;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RoutingIntentRoutingPolicyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RoutingIntentRoutingPolicyArgs $;

        public Builder() {
            $ = new RoutingIntentRoutingPolicyArgs();
        }

        public Builder(RoutingIntentRoutingPolicyArgs defaults) {
            $ = new RoutingIntentRoutingPolicyArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param destinations A list of destinations which this routing policy is applicable to. Possible values are `Internet` and `PrivateTraffic`.
         * 
         * @return builder
         * 
         */
        public Builder destinations(Output<List<String>> destinations) {
            $.destinations = destinations;
            return this;
        }

        /**
         * @param destinations A list of destinations which this routing policy is applicable to. Possible values are `Internet` and `PrivateTraffic`.
         * 
         * @return builder
         * 
         */
        public Builder destinations(List<String> destinations) {
            return destinations(Output.of(destinations));
        }

        /**
         * @param destinations A list of destinations which this routing policy is applicable to. Possible values are `Internet` and `PrivateTraffic`.
         * 
         * @return builder
         * 
         */
        public Builder destinations(String... destinations) {
            return destinations(List.of(destinations));
        }

        /**
         * @param name The unique name for the routing policy.
         * 
         * @return builder
         * 
         */
        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The unique name for the routing policy.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param nextHop The resource ID of the next hop on which this routing policy is applicable to.
         * 
         * @return builder
         * 
         */
        public Builder nextHop(Output<String> nextHop) {
            $.nextHop = nextHop;
            return this;
        }

        /**
         * @param nextHop The resource ID of the next hop on which this routing policy is applicable to.
         * 
         * @return builder
         * 
         */
        public Builder nextHop(String nextHop) {
            return nextHop(Output.of(nextHop));
        }

        public RoutingIntentRoutingPolicyArgs build() {
            if ($.destinations == null) {
                throw new MissingRequiredPropertyException("RoutingIntentRoutingPolicyArgs", "destinations");
            }
            if ($.name == null) {
                throw new MissingRequiredPropertyException("RoutingIntentRoutingPolicyArgs", "name");
            }
            if ($.nextHop == null) {
                throw new MissingRequiredPropertyException("RoutingIntentRoutingPolicyArgs", "nextHop");
            }
            return $;
        }
    }

}
