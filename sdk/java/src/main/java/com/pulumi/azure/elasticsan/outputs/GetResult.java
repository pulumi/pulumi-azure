// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.elasticsan.outputs;

import com.pulumi.azure.elasticsan.outputs.GetSkus;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetResult {
    /**
     * @return The base size of the Elastic SAN resource in TiB.
     * 
     */
    private Integer baseSizeInTib;
    /**
     * @return The base size of the Elastic SAN resource in TiB.
     * 
     */
    private Integer extendedSizeInTib;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return The Azure Region where the Elastic SAN exists.
     * 
     */
    private String location;
    /**
     * @return The SKU name.
     * 
     */
    private String name;
    private String resourceGroupName;
    /**
     * @return A `sku` block as defined below.
     * 
     */
    private List<GetSkus> skus;
    /**
     * @return A mapping of tags assigned to the Elastic SAN.
     * 
     */
    private Map<String,String> tags;
    /**
     * @return Total Provisioned IOps of the Elastic SAN resource.
     * 
     */
    private Integer totalIops;
    /**
     * @return Total Provisioned MBps Elastic SAN resource.
     * 
     */
    private Integer totalMbps;
    /**
     * @return Total size of the Elastic SAN resource in TB.
     * 
     */
    private Integer totalSizeInTib;
    /**
     * @return Total size of the provisioned Volumes in GiB.
     * 
     */
    private Integer totalVolumeSizeInGib;
    /**
     * @return Total number of volume groups in this Elastic SAN resource.
     * 
     */
    private Integer volumeGroupCount;
    /**
     * @return Logical zone for the Elastic SAN resource.
     * 
     */
    private List<String> zones;

    private GetResult() {}
    /**
     * @return The base size of the Elastic SAN resource in TiB.
     * 
     */
    public Integer baseSizeInTib() {
        return this.baseSizeInTib;
    }
    /**
     * @return The base size of the Elastic SAN resource in TiB.
     * 
     */
    public Integer extendedSizeInTib() {
        return this.extendedSizeInTib;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The Azure Region where the Elastic SAN exists.
     * 
     */
    public String location() {
        return this.location;
    }
    /**
     * @return The SKU name.
     * 
     */
    public String name() {
        return this.name;
    }
    public String resourceGroupName() {
        return this.resourceGroupName;
    }
    /**
     * @return A `sku` block as defined below.
     * 
     */
    public List<GetSkus> skus() {
        return this.skus;
    }
    /**
     * @return A mapping of tags assigned to the Elastic SAN.
     * 
     */
    public Map<String,String> tags() {
        return this.tags;
    }
    /**
     * @return Total Provisioned IOps of the Elastic SAN resource.
     * 
     */
    public Integer totalIops() {
        return this.totalIops;
    }
    /**
     * @return Total Provisioned MBps Elastic SAN resource.
     * 
     */
    public Integer totalMbps() {
        return this.totalMbps;
    }
    /**
     * @return Total size of the Elastic SAN resource in TB.
     * 
     */
    public Integer totalSizeInTib() {
        return this.totalSizeInTib;
    }
    /**
     * @return Total size of the provisioned Volumes in GiB.
     * 
     */
    public Integer totalVolumeSizeInGib() {
        return this.totalVolumeSizeInGib;
    }
    /**
     * @return Total number of volume groups in this Elastic SAN resource.
     * 
     */
    public Integer volumeGroupCount() {
        return this.volumeGroupCount;
    }
    /**
     * @return Logical zone for the Elastic SAN resource.
     * 
     */
    public List<String> zones() {
        return this.zones;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer baseSizeInTib;
        private Integer extendedSizeInTib;
        private String id;
        private String location;
        private String name;
        private String resourceGroupName;
        private List<GetSkus> skus;
        private Map<String,String> tags;
        private Integer totalIops;
        private Integer totalMbps;
        private Integer totalSizeInTib;
        private Integer totalVolumeSizeInGib;
        private Integer volumeGroupCount;
        private List<String> zones;
        public Builder() {}
        public Builder(GetResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.baseSizeInTib = defaults.baseSizeInTib;
    	      this.extendedSizeInTib = defaults.extendedSizeInTib;
    	      this.id = defaults.id;
    	      this.location = defaults.location;
    	      this.name = defaults.name;
    	      this.resourceGroupName = defaults.resourceGroupName;
    	      this.skus = defaults.skus;
    	      this.tags = defaults.tags;
    	      this.totalIops = defaults.totalIops;
    	      this.totalMbps = defaults.totalMbps;
    	      this.totalSizeInTib = defaults.totalSizeInTib;
    	      this.totalVolumeSizeInGib = defaults.totalVolumeSizeInGib;
    	      this.volumeGroupCount = defaults.volumeGroupCount;
    	      this.zones = defaults.zones;
        }

        @CustomType.Setter
        public Builder baseSizeInTib(Integer baseSizeInTib) {
            if (baseSizeInTib == null) {
              throw new MissingRequiredPropertyException("GetResult", "baseSizeInTib");
            }
            this.baseSizeInTib = baseSizeInTib;
            return this;
        }
        @CustomType.Setter
        public Builder extendedSizeInTib(Integer extendedSizeInTib) {
            if (extendedSizeInTib == null) {
              throw new MissingRequiredPropertyException("GetResult", "extendedSizeInTib");
            }
            this.extendedSizeInTib = extendedSizeInTib;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder location(String location) {
            if (location == null) {
              throw new MissingRequiredPropertyException("GetResult", "location");
            }
            this.location = location;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetResult", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder resourceGroupName(String resourceGroupName) {
            if (resourceGroupName == null) {
              throw new MissingRequiredPropertyException("GetResult", "resourceGroupName");
            }
            this.resourceGroupName = resourceGroupName;
            return this;
        }
        @CustomType.Setter
        public Builder skus(List<GetSkus> skus) {
            if (skus == null) {
              throw new MissingRequiredPropertyException("GetResult", "skus");
            }
            this.skus = skus;
            return this;
        }
        public Builder skus(GetSkus... skus) {
            return skus(List.of(skus));
        }
        @CustomType.Setter
        public Builder tags(Map<String,String> tags) {
            if (tags == null) {
              throw new MissingRequiredPropertyException("GetResult", "tags");
            }
            this.tags = tags;
            return this;
        }
        @CustomType.Setter
        public Builder totalIops(Integer totalIops) {
            if (totalIops == null) {
              throw new MissingRequiredPropertyException("GetResult", "totalIops");
            }
            this.totalIops = totalIops;
            return this;
        }
        @CustomType.Setter
        public Builder totalMbps(Integer totalMbps) {
            if (totalMbps == null) {
              throw new MissingRequiredPropertyException("GetResult", "totalMbps");
            }
            this.totalMbps = totalMbps;
            return this;
        }
        @CustomType.Setter
        public Builder totalSizeInTib(Integer totalSizeInTib) {
            if (totalSizeInTib == null) {
              throw new MissingRequiredPropertyException("GetResult", "totalSizeInTib");
            }
            this.totalSizeInTib = totalSizeInTib;
            return this;
        }
        @CustomType.Setter
        public Builder totalVolumeSizeInGib(Integer totalVolumeSizeInGib) {
            if (totalVolumeSizeInGib == null) {
              throw new MissingRequiredPropertyException("GetResult", "totalVolumeSizeInGib");
            }
            this.totalVolumeSizeInGib = totalVolumeSizeInGib;
            return this;
        }
        @CustomType.Setter
        public Builder volumeGroupCount(Integer volumeGroupCount) {
            if (volumeGroupCount == null) {
              throw new MissingRequiredPropertyException("GetResult", "volumeGroupCount");
            }
            this.volumeGroupCount = volumeGroupCount;
            return this;
        }
        @CustomType.Setter
        public Builder zones(List<String> zones) {
            if (zones == null) {
              throw new MissingRequiredPropertyException("GetResult", "zones");
            }
            this.zones = zones;
            return this;
        }
        public Builder zones(String... zones) {
            return zones(List.of(zones));
        }
        public GetResult build() {
            final var _resultValue = new GetResult();
            _resultValue.baseSizeInTib = baseSizeInTib;
            _resultValue.extendedSizeInTib = extendedSizeInTib;
            _resultValue.id = id;
            _resultValue.location = location;
            _resultValue.name = name;
            _resultValue.resourceGroupName = resourceGroupName;
            _resultValue.skus = skus;
            _resultValue.tags = tags;
            _resultValue.totalIops = totalIops;
            _resultValue.totalMbps = totalMbps;
            _resultValue.totalSizeInTib = totalSizeInTib;
            _resultValue.totalVolumeSizeInGib = totalVolumeSizeInGib;
            _resultValue.volumeGroupCount = volumeGroupCount;
            _resultValue.zones = zones;
            return _resultValue;
        }
    }
}
