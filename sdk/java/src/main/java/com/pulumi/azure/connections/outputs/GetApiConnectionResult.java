// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.connections.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetApiConnectionResult {
    /**
     * @return The display name of the API Connection.
     * 
     */
    private String displayName;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return The Azure Region where the API Connection exists.
     * 
     */
    private String location;
    /**
     * @return The ID of the Managed API that this connection is linked to.
     * 
     */
    private String managedApiId;
    private String name;
    /**
     * @return A mapping of parameter names to their values for the API Connection.
     * 
     */
    private Map<String,String> parameterValues;
    private String resourceGroupName;
    /**
     * @return A mapping of tags assigned to the API Connection.
     * 
     */
    private Map<String,String> tags;

    private GetApiConnectionResult() {}
    /**
     * @return The display name of the API Connection.
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The Azure Region where the API Connection exists.
     * 
     */
    public String location() {
        return this.location;
    }
    /**
     * @return The ID of the Managed API that this connection is linked to.
     * 
     */
    public String managedApiId() {
        return this.managedApiId;
    }
    public String name() {
        return this.name;
    }
    /**
     * @return A mapping of parameter names to their values for the API Connection.
     * 
     */
    public Map<String,String> parameterValues() {
        return this.parameterValues;
    }
    public String resourceGroupName() {
        return this.resourceGroupName;
    }
    /**
     * @return A mapping of tags assigned to the API Connection.
     * 
     */
    public Map<String,String> tags() {
        return this.tags;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetApiConnectionResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String displayName;
        private String id;
        private String location;
        private String managedApiId;
        private String name;
        private Map<String,String> parameterValues;
        private String resourceGroupName;
        private Map<String,String> tags;
        public Builder() {}
        public Builder(GetApiConnectionResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.displayName = defaults.displayName;
    	      this.id = defaults.id;
    	      this.location = defaults.location;
    	      this.managedApiId = defaults.managedApiId;
    	      this.name = defaults.name;
    	      this.parameterValues = defaults.parameterValues;
    	      this.resourceGroupName = defaults.resourceGroupName;
    	      this.tags = defaults.tags;
        }

        @CustomType.Setter
        public Builder displayName(String displayName) {
            if (displayName == null) {
              throw new MissingRequiredPropertyException("GetApiConnectionResult", "displayName");
            }
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetApiConnectionResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder location(String location) {
            if (location == null) {
              throw new MissingRequiredPropertyException("GetApiConnectionResult", "location");
            }
            this.location = location;
            return this;
        }
        @CustomType.Setter
        public Builder managedApiId(String managedApiId) {
            if (managedApiId == null) {
              throw new MissingRequiredPropertyException("GetApiConnectionResult", "managedApiId");
            }
            this.managedApiId = managedApiId;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetApiConnectionResult", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder parameterValues(Map<String,String> parameterValues) {
            if (parameterValues == null) {
              throw new MissingRequiredPropertyException("GetApiConnectionResult", "parameterValues");
            }
            this.parameterValues = parameterValues;
            return this;
        }
        @CustomType.Setter
        public Builder resourceGroupName(String resourceGroupName) {
            if (resourceGroupName == null) {
              throw new MissingRequiredPropertyException("GetApiConnectionResult", "resourceGroupName");
            }
            this.resourceGroupName = resourceGroupName;
            return this;
        }
        @CustomType.Setter
        public Builder tags(Map<String,String> tags) {
            if (tags == null) {
              throw new MissingRequiredPropertyException("GetApiConnectionResult", "tags");
            }
            this.tags = tags;
            return this;
        }
        public GetApiConnectionResult build() {
            final var _resultValue = new GetApiConnectionResult();
            _resultValue.displayName = displayName;
            _resultValue.id = id;
            _resultValue.location = location;
            _resultValue.managedApiId = managedApiId;
            _resultValue.name = name;
            _resultValue.parameterValues = parameterValues;
            _resultValue.resourceGroupName = resourceGroupName;
            _resultValue.tags = tags;
            return _resultValue;
        }
    }
}
