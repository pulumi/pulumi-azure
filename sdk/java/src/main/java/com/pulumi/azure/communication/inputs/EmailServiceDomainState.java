// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.communication.inputs;

import com.pulumi.azure.communication.inputs.EmailServiceDomainVerificationRecordArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class EmailServiceDomainState extends com.pulumi.resources.ResourceArgs {

    public static final EmailServiceDomainState Empty = new EmailServiceDomainState();

    /**
     * Describes how a Domains resource is being managed. Possible values are `AzureManaged`, `CustomerManaged`, `CustomerManagedInExchangeOnline`. Changing this forces a new Email Communication Service to be created.
     * 
     */
    @Import(name="domainManagement")
    private @Nullable Output<String> domainManagement;

    /**
     * @return Describes how a Domains resource is being managed. Possible values are `AzureManaged`, `CustomerManaged`, `CustomerManagedInExchangeOnline`. Changing this forces a new Email Communication Service to be created.
     * 
     */
    public Optional<Output<String>> domainManagement() {
        return Optional.ofNullable(this.domainManagement);
    }

    /**
     * The resource ID of the Email Communication Service where the Domain belongs to. Changing this forces a new Email Communication Service to be created.
     * 
     */
    @Import(name="emailServiceId")
    private @Nullable Output<String> emailServiceId;

    /**
     * @return The resource ID of the Email Communication Service where the Domain belongs to. Changing this forces a new Email Communication Service to be created.
     * 
     */
    public Optional<Output<String>> emailServiceId() {
        return Optional.ofNullable(this.emailServiceId);
    }

    /**
     * P2 sender domain that is displayed to the email recipients [RFC 5322].
     * 
     */
    @Import(name="fromSenderDomain")
    private @Nullable Output<String> fromSenderDomain;

    /**
     * @return P2 sender domain that is displayed to the email recipients [RFC 5322].
     * 
     */
    public Optional<Output<String>> fromSenderDomain() {
        return Optional.ofNullable(this.fromSenderDomain);
    }

    /**
     * P1 sender domain that is present on the email envelope [RFC 5321].
     * 
     */
    @Import(name="mailFromSenderDomain")
    private @Nullable Output<String> mailFromSenderDomain;

    /**
     * @return P1 sender domain that is present on the email envelope [RFC 5321].
     * 
     */
    public Optional<Output<String>> mailFromSenderDomain() {
        return Optional.ofNullable(this.mailFromSenderDomain);
    }

    /**
     * The name of the Email Communication Service resource. If `domain_management` is `AzureManaged`, the name must be `AzureManagedDomain`. Changing this forces a new Email Communication Service to be created.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the Email Communication Service resource. If `domain_management` is `AzureManaged`, the name must be `AzureManagedDomain`. Changing this forces a new Email Communication Service to be created.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * A mapping of tags which should be assigned to the Email Communication Service.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return A mapping of tags which should be assigned to the Email Communication Service.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * Describes user engagement tracking is enabled or disabled. Defaults to `false`.
     * 
     */
    @Import(name="userEngagementTrackingEnabled")
    private @Nullable Output<Boolean> userEngagementTrackingEnabled;

    /**
     * @return Describes user engagement tracking is enabled or disabled. Defaults to `false`.
     * 
     */
    public Optional<Output<Boolean>> userEngagementTrackingEnabled() {
        return Optional.ofNullable(this.userEngagementTrackingEnabled);
    }

    /**
     * (Optional) An `verification_records` block as defined below.
     * 
     */
    @Import(name="verificationRecords")
    private @Nullable Output<List<EmailServiceDomainVerificationRecordArgs>> verificationRecords;

    /**
     * @return (Optional) An `verification_records` block as defined below.
     * 
     */
    public Optional<Output<List<EmailServiceDomainVerificationRecordArgs>>> verificationRecords() {
        return Optional.ofNullable(this.verificationRecords);
    }

    private EmailServiceDomainState() {}

    private EmailServiceDomainState(EmailServiceDomainState $) {
        this.domainManagement = $.domainManagement;
        this.emailServiceId = $.emailServiceId;
        this.fromSenderDomain = $.fromSenderDomain;
        this.mailFromSenderDomain = $.mailFromSenderDomain;
        this.name = $.name;
        this.tags = $.tags;
        this.userEngagementTrackingEnabled = $.userEngagementTrackingEnabled;
        this.verificationRecords = $.verificationRecords;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(EmailServiceDomainState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private EmailServiceDomainState $;

        public Builder() {
            $ = new EmailServiceDomainState();
        }

        public Builder(EmailServiceDomainState defaults) {
            $ = new EmailServiceDomainState(Objects.requireNonNull(defaults));
        }

        /**
         * @param domainManagement Describes how a Domains resource is being managed. Possible values are `AzureManaged`, `CustomerManaged`, `CustomerManagedInExchangeOnline`. Changing this forces a new Email Communication Service to be created.
         * 
         * @return builder
         * 
         */
        public Builder domainManagement(@Nullable Output<String> domainManagement) {
            $.domainManagement = domainManagement;
            return this;
        }

        /**
         * @param domainManagement Describes how a Domains resource is being managed. Possible values are `AzureManaged`, `CustomerManaged`, `CustomerManagedInExchangeOnline`. Changing this forces a new Email Communication Service to be created.
         * 
         * @return builder
         * 
         */
        public Builder domainManagement(String domainManagement) {
            return domainManagement(Output.of(domainManagement));
        }

        /**
         * @param emailServiceId The resource ID of the Email Communication Service where the Domain belongs to. Changing this forces a new Email Communication Service to be created.
         * 
         * @return builder
         * 
         */
        public Builder emailServiceId(@Nullable Output<String> emailServiceId) {
            $.emailServiceId = emailServiceId;
            return this;
        }

        /**
         * @param emailServiceId The resource ID of the Email Communication Service where the Domain belongs to. Changing this forces a new Email Communication Service to be created.
         * 
         * @return builder
         * 
         */
        public Builder emailServiceId(String emailServiceId) {
            return emailServiceId(Output.of(emailServiceId));
        }

        /**
         * @param fromSenderDomain P2 sender domain that is displayed to the email recipients [RFC 5322].
         * 
         * @return builder
         * 
         */
        public Builder fromSenderDomain(@Nullable Output<String> fromSenderDomain) {
            $.fromSenderDomain = fromSenderDomain;
            return this;
        }

        /**
         * @param fromSenderDomain P2 sender domain that is displayed to the email recipients [RFC 5322].
         * 
         * @return builder
         * 
         */
        public Builder fromSenderDomain(String fromSenderDomain) {
            return fromSenderDomain(Output.of(fromSenderDomain));
        }

        /**
         * @param mailFromSenderDomain P1 sender domain that is present on the email envelope [RFC 5321].
         * 
         * @return builder
         * 
         */
        public Builder mailFromSenderDomain(@Nullable Output<String> mailFromSenderDomain) {
            $.mailFromSenderDomain = mailFromSenderDomain;
            return this;
        }

        /**
         * @param mailFromSenderDomain P1 sender domain that is present on the email envelope [RFC 5321].
         * 
         * @return builder
         * 
         */
        public Builder mailFromSenderDomain(String mailFromSenderDomain) {
            return mailFromSenderDomain(Output.of(mailFromSenderDomain));
        }

        /**
         * @param name The name of the Email Communication Service resource. If `domain_management` is `AzureManaged`, the name must be `AzureManagedDomain`. Changing this forces a new Email Communication Service to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the Email Communication Service resource. If `domain_management` is `AzureManaged`, the name must be `AzureManagedDomain`. Changing this forces a new Email Communication Service to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param tags A mapping of tags which should be assigned to the Email Communication Service.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags A mapping of tags which should be assigned to the Email Communication Service.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param userEngagementTrackingEnabled Describes user engagement tracking is enabled or disabled. Defaults to `false`.
         * 
         * @return builder
         * 
         */
        public Builder userEngagementTrackingEnabled(@Nullable Output<Boolean> userEngagementTrackingEnabled) {
            $.userEngagementTrackingEnabled = userEngagementTrackingEnabled;
            return this;
        }

        /**
         * @param userEngagementTrackingEnabled Describes user engagement tracking is enabled or disabled. Defaults to `false`.
         * 
         * @return builder
         * 
         */
        public Builder userEngagementTrackingEnabled(Boolean userEngagementTrackingEnabled) {
            return userEngagementTrackingEnabled(Output.of(userEngagementTrackingEnabled));
        }

        /**
         * @param verificationRecords (Optional) An `verification_records` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder verificationRecords(@Nullable Output<List<EmailServiceDomainVerificationRecordArgs>> verificationRecords) {
            $.verificationRecords = verificationRecords;
            return this;
        }

        /**
         * @param verificationRecords (Optional) An `verification_records` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder verificationRecords(List<EmailServiceDomainVerificationRecordArgs> verificationRecords) {
            return verificationRecords(Output.of(verificationRecords));
        }

        /**
         * @param verificationRecords (Optional) An `verification_records` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder verificationRecords(EmailServiceDomainVerificationRecordArgs... verificationRecords) {
            return verificationRecords(List.of(verificationRecords));
        }

        public EmailServiceDomainState build() {
            return $;
        }
    }

}
