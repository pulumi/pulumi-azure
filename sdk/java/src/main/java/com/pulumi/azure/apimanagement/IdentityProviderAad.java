// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.apimanagement;

import com.pulumi.azure.Utilities;
import com.pulumi.azure.apimanagement.IdentityProviderAadArgs;
import com.pulumi.azure.apimanagement.inputs.IdentityProviderAadState;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Manages an API Management AAD Identity Provider.
 * 
 * ## Example Usage
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.azure.core.ResourceGroup;
 * import com.pulumi.azure.core.ResourceGroupArgs;
 * import com.pulumi.azure.apimanagement.Service;
 * import com.pulumi.azure.apimanagement.ServiceArgs;
 * import com.pulumi.azure.apimanagement.IdentityProviderAad;
 * import com.pulumi.azure.apimanagement.IdentityProviderAadArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var exampleResourceGroup = new ResourceGroup(&#34;exampleResourceGroup&#34;, ResourceGroupArgs.builder()        
 *             .location(&#34;West Europe&#34;)
 *             .build());
 * 
 *         var exampleService = new Service(&#34;exampleService&#34;, ServiceArgs.builder()        
 *             .location(exampleResourceGroup.location())
 *             .resourceGroupName(exampleResourceGroup.name())
 *             .publisherName(&#34;My Company&#34;)
 *             .publisherEmail(&#34;company@mycompany.io&#34;)
 *             .skuName(&#34;Developer_1&#34;)
 *             .build());
 * 
 *         var exampleIdentityProviderAad = new IdentityProviderAad(&#34;exampleIdentityProviderAad&#34;, IdentityProviderAadArgs.builder()        
 *             .resourceGroupName(exampleResourceGroup.name())
 *             .apiManagementName(exampleService.name())
 *             .clientId(&#34;00000000-0000-0000-0000-000000000000&#34;)
 *             .clientSecret(&#34;00000000000000000000000000000000&#34;)
 *             .allowedTenants(&#34;00000000-0000-0000-0000-000000000000&#34;)
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * API Management AAD Identity Provider can be imported using the `resource id`, e.g.
 * 
 * ```sh
 *  $ pulumi import azure:apimanagement/identityProviderAad:IdentityProviderAad example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/mygroup1/providers/Microsoft.ApiManagement/service/instance1/identityProviders/aad
 * ```
 * 
 */
@ResourceType(type="azure:apimanagement/identityProviderAad:IdentityProviderAad")
public class IdentityProviderAad extends com.pulumi.resources.CustomResource {
    /**
     * List of allowed AAD Tenants.
     * 
     */
    @Export(name="allowedTenants", type=List.class, parameters={String.class})
    private Output<List<String>> allowedTenants;

    /**
     * @return List of allowed AAD Tenants.
     * 
     */
    public Output<List<String>> allowedTenants() {
        return this.allowedTenants;
    }
    /**
     * The Name of the API Management Service where this AAD Identity Provider should be created. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="apiManagementName", type=String.class, parameters={})
    private Output<String> apiManagementName;

    /**
     * @return The Name of the API Management Service where this AAD Identity Provider should be created. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> apiManagementName() {
        return this.apiManagementName;
    }
    /**
     * Client Id of the Application in the AAD Identity Provider.
     * 
     */
    @Export(name="clientId", type=String.class, parameters={})
    private Output<String> clientId;

    /**
     * @return Client Id of the Application in the AAD Identity Provider.
     * 
     */
    public Output<String> clientId() {
        return this.clientId;
    }
    /**
     * Client secret of the Application in the AAD Identity Provider.
     * 
     */
    @Export(name="clientSecret", type=String.class, parameters={})
    private Output<String> clientSecret;

    /**
     * @return Client secret of the Application in the AAD Identity Provider.
     * 
     */
    public Output<String> clientSecret() {
        return this.clientSecret;
    }
    /**
     * The Name of the Resource Group where the API Management Service exists. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="resourceGroupName", type=String.class, parameters={})
    private Output<String> resourceGroupName;

    /**
     * @return The Name of the Resource Group where the API Management Service exists. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }
    /**
     * The AAD Tenant to use instead of Common when logging into Active Directory
     * 
     */
    @Export(name="signinTenant", type=String.class, parameters={})
    private Output</* @Nullable */ String> signinTenant;

    /**
     * @return The AAD Tenant to use instead of Common when logging into Active Directory
     * 
     */
    public Output<Optional<String>> signinTenant() {
        return Codegen.optional(this.signinTenant);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public IdentityProviderAad(String name) {
        this(name, IdentityProviderAadArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public IdentityProviderAad(String name, IdentityProviderAadArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public IdentityProviderAad(String name, IdentityProviderAadArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:apimanagement/identityProviderAad:IdentityProviderAad", name, args == null ? IdentityProviderAadArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private IdentityProviderAad(String name, Output<String> id, @Nullable IdentityProviderAadState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:apimanagement/identityProviderAad:IdentityProviderAad", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static IdentityProviderAad get(String name, Output<String> id, @Nullable IdentityProviderAadState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new IdentityProviderAad(name, id, state, options);
    }
}
