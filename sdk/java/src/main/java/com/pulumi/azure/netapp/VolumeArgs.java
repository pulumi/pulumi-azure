// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.netapp;

import com.pulumi.azure.netapp.inputs.VolumeDataProtectionReplicationArgs;
import com.pulumi.azure.netapp.inputs.VolumeDataProtectionSnapshotPolicyArgs;
import com.pulumi.azure.netapp.inputs.VolumeExportPolicyRuleArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class VolumeArgs extends com.pulumi.resources.ResourceArgs {

    public static final VolumeArgs Empty = new VolumeArgs();

    /**
     * The name of the NetApp account in which the NetApp Pool should be created. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="accountName", required=true)
    private Output<String> accountName;

    /**
     * @return The name of the NetApp account in which the NetApp Pool should be created. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> accountName() {
        return this.accountName;
    }

    /**
     * Is the NetApp Volume enabled for Azure VMware Solution (AVS) datastore purpose. Defaults to `false`. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="azureVmwareDataStoreEnabled")
    private @Nullable Output<Boolean> azureVmwareDataStoreEnabled;

    /**
     * @return Is the NetApp Volume enabled for Azure VMware Solution (AVS) datastore purpose. Defaults to `false`. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<Boolean>> azureVmwareDataStoreEnabled() {
        return Optional.ofNullable(this.azureVmwareDataStoreEnabled);
    }

    /**
     * Creates volume from snapshot. Following properties must be the same as the original volume where the snapshot was taken from: `protocols`, `subnet_id`, `location`, `service_level`, `resource_group_name`, `account_name` and `pool_name`. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="createFromSnapshotResourceId")
    private @Nullable Output<String> createFromSnapshotResourceId;

    /**
     * @return Creates volume from snapshot. Following properties must be the same as the original volume where the snapshot was taken from: `protocols`, `subnet_id`, `location`, `service_level`, `resource_group_name`, `account_name` and `pool_name`. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> createFromSnapshotResourceId() {
        return Optional.ofNullable(this.createFromSnapshotResourceId);
    }

    /**
     * A `data_protection_replication` block as defined below. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="dataProtectionReplication")
    private @Nullable Output<VolumeDataProtectionReplicationArgs> dataProtectionReplication;

    /**
     * @return A `data_protection_replication` block as defined below. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<VolumeDataProtectionReplicationArgs>> dataProtectionReplication() {
        return Optional.ofNullable(this.dataProtectionReplication);
    }

    /**
     * A `data_protection_snapshot_policy` block as defined below.
     * 
     */
    @Import(name="dataProtectionSnapshotPolicy")
    private @Nullable Output<VolumeDataProtectionSnapshotPolicyArgs> dataProtectionSnapshotPolicy;

    /**
     * @return A `data_protection_snapshot_policy` block as defined below.
     * 
     */
    public Optional<Output<VolumeDataProtectionSnapshotPolicyArgs>> dataProtectionSnapshotPolicy() {
        return Optional.ofNullable(this.dataProtectionSnapshotPolicy);
    }

    /**
     * The encryption key source, it can be `Microsoft.NetApp` for platform managed keys or `Microsoft.KeyVault` for customer-managed keys. This is required with `key_vault_private_endpoint_id`.
     * 
     */
    @Import(name="encryptionKeySource")
    private @Nullable Output<String> encryptionKeySource;

    /**
     * @return The encryption key source, it can be `Microsoft.NetApp` for platform managed keys or `Microsoft.KeyVault` for customer-managed keys. This is required with `key_vault_private_endpoint_id`.
     * 
     */
    public Optional<Output<String>> encryptionKeySource() {
        return Optional.ofNullable(this.encryptionKeySource);
    }

    /**
     * One or more `export_policy_rule` block defined below.
     * 
     */
    @Import(name="exportPolicyRules")
    private @Nullable Output<List<VolumeExportPolicyRuleArgs>> exportPolicyRules;

    /**
     * @return One or more `export_policy_rule` block defined below.
     * 
     */
    public Optional<Output<List<VolumeExportPolicyRuleArgs>>> exportPolicyRules() {
        return Optional.ofNullable(this.exportPolicyRules);
    }

    /**
     * The Private Endpoint ID for Key Vault, which is required when using customer-managed keys. This is required with `encryption_key_source`.
     * 
     */
    @Import(name="keyVaultPrivateEndpointId")
    private @Nullable Output<String> keyVaultPrivateEndpointId;

    /**
     * @return The Private Endpoint ID for Key Vault, which is required when using customer-managed keys. This is required with `encryption_key_source`.
     * 
     */
    public Optional<Output<String>> keyVaultPrivateEndpointId() {
        return Optional.ofNullable(this.keyVaultPrivateEndpointId);
    }

    /**
     * Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="location")
    private @Nullable Output<String> location;

    /**
     * @return Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * The name of the NetApp Volume. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the NetApp Volume. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Indicates which network feature to use, accepted values are `Basic` or `Standard`, it defaults to `Basic` if not defined. This is a feature in public preview and for more information about it and how to register, please refer to [Configure network features for an Azure NetApp Files volume](https://docs.microsoft.com/en-us/azure/azure-netapp-files/configure-network-features). Changing this forces a new resource to be created.
     * 
     */
    @Import(name="networkFeatures")
    private @Nullable Output<String> networkFeatures;

    /**
     * @return Indicates which network feature to use, accepted values are `Basic` or `Standard`, it defaults to `Basic` if not defined. This is a feature in public preview and for more information about it and how to register, please refer to [Configure network features for an Azure NetApp Files volume](https://docs.microsoft.com/en-us/azure/azure-netapp-files/configure-network-features). Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> networkFeatures() {
        return Optional.ofNullable(this.networkFeatures);
    }

    /**
     * The name of the NetApp pool in which the NetApp Volume should be created. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="poolName", required=true)
    private Output<String> poolName;

    /**
     * @return The name of the NetApp pool in which the NetApp Volume should be created. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> poolName() {
        return this.poolName;
    }

    /**
     * The target volume protocol expressed as a list. Supported single value include `CIFS`, `NFSv3`, or `NFSv4.1`. If argument is not defined it will default to `NFSv3`. Changing this forces a new resource to be created and data will be lost. Dual protocol scenario is supported for CIFS and NFSv3, for more information, please refer to [Create a dual-protocol volume for Azure NetApp Files](https://docs.microsoft.com/azure/azure-netapp-files/create-volumes-dual-protocol) document.
     * 
     */
    @Import(name="protocols")
    private @Nullable Output<List<String>> protocols;

    /**
     * @return The target volume protocol expressed as a list. Supported single value include `CIFS`, `NFSv3`, or `NFSv4.1`. If argument is not defined it will default to `NFSv3`. Changing this forces a new resource to be created and data will be lost. Dual protocol scenario is supported for CIFS and NFSv3, for more information, please refer to [Create a dual-protocol volume for Azure NetApp Files](https://docs.microsoft.com/azure/azure-netapp-files/create-volumes-dual-protocol) document.
     * 
     */
    public Optional<Output<List<String>>> protocols() {
        return Optional.ofNullable(this.protocols);
    }

    /**
     * The name of the resource group where the NetApp Volume should be created. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    /**
     * @return The name of the resource group where the NetApp Volume should be created. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * Volume security style, accepted values are `unix` or `ntfs`. If not provided, single-protocol volume is created defaulting to `unix` if it is `NFSv3` or `NFSv4.1` volume, if `CIFS`, it will default to `ntfs`. In a dual-protocol volume, if not provided, its value will be `ntfs`. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="securityStyle")
    private @Nullable Output<String> securityStyle;

    /**
     * @return Volume security style, accepted values are `unix` or `ntfs`. If not provided, single-protocol volume is created defaulting to `unix` if it is `NFSv3` or `NFSv4.1` volume, if `CIFS`, it will default to `ntfs`. In a dual-protocol volume, if not provided, its value will be `ntfs`. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> securityStyle() {
        return Optional.ofNullable(this.securityStyle);
    }

    /**
     * The target performance of the file system. Valid values include `Premium`, `Standard`, or `Ultra`. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="serviceLevel", required=true)
    private Output<String> serviceLevel;

    /**
     * @return The target performance of the file system. Valid values include `Premium`, `Standard`, or `Ultra`. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> serviceLevel() {
        return this.serviceLevel;
    }

    /**
     * Specifies whether the .snapshot (NFS clients) or ~snapshot (SMB clients) path of a volume is visible, default value is true.
     * 
     */
    @Import(name="snapshotDirectoryVisible")
    private @Nullable Output<Boolean> snapshotDirectoryVisible;

    /**
     * @return Specifies whether the .snapshot (NFS clients) or ~snapshot (SMB clients) path of a volume is visible, default value is true.
     * 
     */
    public Optional<Output<Boolean>> snapshotDirectoryVisible() {
        return Optional.ofNullable(this.snapshotDirectoryVisible);
    }

    /**
     * The maximum Storage Quota allowed for a file system in Gigabytes.
     * 
     */
    @Import(name="storageQuotaInGb", required=true)
    private Output<Integer> storageQuotaInGb;

    /**
     * @return The maximum Storage Quota allowed for a file system in Gigabytes.
     * 
     */
    public Output<Integer> storageQuotaInGb() {
        return this.storageQuotaInGb;
    }

    /**
     * The ID of the Subnet the NetApp Volume resides in, which must have the `Microsoft.NetApp/volumes` delegation. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="subnetId", required=true)
    private Output<String> subnetId;

    /**
     * @return The ID of the Subnet the NetApp Volume resides in, which must have the `Microsoft.NetApp/volumes` delegation. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> subnetId() {
        return this.subnetId;
    }

    /**
     * A mapping of tags to assign to the resource.
     * 
     * &gt; **Note:** It is highly recommended to use the **lifecycle** property as noted in the example since it will prevent an accidental deletion of the volume if the `protocols` argument changes to a different protocol type.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return A mapping of tags to assign to the resource.
     * 
     * &gt; **Note:** It is highly recommended to use the **lifecycle** property as noted in the example since it will prevent an accidental deletion of the volume if the `protocols` argument changes to a different protocol type.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * Throughput of this volume in Mibps.
     * 
     */
    @Import(name="throughputInMibps")
    private @Nullable Output<Double> throughputInMibps;

    /**
     * @return Throughput of this volume in Mibps.
     * 
     */
    public Optional<Output<Double>> throughputInMibps() {
        return Optional.ofNullable(this.throughputInMibps);
    }

    /**
     * A unique file path for the volume. Used when creating mount targets. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="volumePath", required=true)
    private Output<String> volumePath;

    /**
     * @return A unique file path for the volume. Used when creating mount targets. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> volumePath() {
        return this.volumePath;
    }

    /**
     * Specifies the Availability Zone in which the Volume should be located. Possible values are `1`, `2` and `3`. Changing this forces a new resource to be created. This feature is currently in preview, for more information on how to enable it, please refer to [Manage availability zone volume placement for Azure NetApp Files](https://learn.microsoft.com/en-us/azure/azure-netapp-files/manage-availability-zone-volume-placement#register-the-feature).
     * 
     */
    @Import(name="zone")
    private @Nullable Output<String> zone;

    /**
     * @return Specifies the Availability Zone in which the Volume should be located. Possible values are `1`, `2` and `3`. Changing this forces a new resource to be created. This feature is currently in preview, for more information on how to enable it, please refer to [Manage availability zone volume placement for Azure NetApp Files](https://learn.microsoft.com/en-us/azure/azure-netapp-files/manage-availability-zone-volume-placement#register-the-feature).
     * 
     */
    public Optional<Output<String>> zone() {
        return Optional.ofNullable(this.zone);
    }

    private VolumeArgs() {}

    private VolumeArgs(VolumeArgs $) {
        this.accountName = $.accountName;
        this.azureVmwareDataStoreEnabled = $.azureVmwareDataStoreEnabled;
        this.createFromSnapshotResourceId = $.createFromSnapshotResourceId;
        this.dataProtectionReplication = $.dataProtectionReplication;
        this.dataProtectionSnapshotPolicy = $.dataProtectionSnapshotPolicy;
        this.encryptionKeySource = $.encryptionKeySource;
        this.exportPolicyRules = $.exportPolicyRules;
        this.keyVaultPrivateEndpointId = $.keyVaultPrivateEndpointId;
        this.location = $.location;
        this.name = $.name;
        this.networkFeatures = $.networkFeatures;
        this.poolName = $.poolName;
        this.protocols = $.protocols;
        this.resourceGroupName = $.resourceGroupName;
        this.securityStyle = $.securityStyle;
        this.serviceLevel = $.serviceLevel;
        this.snapshotDirectoryVisible = $.snapshotDirectoryVisible;
        this.storageQuotaInGb = $.storageQuotaInGb;
        this.subnetId = $.subnetId;
        this.tags = $.tags;
        this.throughputInMibps = $.throughputInMibps;
        this.volumePath = $.volumePath;
        this.zone = $.zone;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VolumeArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VolumeArgs $;

        public Builder() {
            $ = new VolumeArgs();
        }

        public Builder(VolumeArgs defaults) {
            $ = new VolumeArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param accountName The name of the NetApp account in which the NetApp Pool should be created. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder accountName(Output<String> accountName) {
            $.accountName = accountName;
            return this;
        }

        /**
         * @param accountName The name of the NetApp account in which the NetApp Pool should be created. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder accountName(String accountName) {
            return accountName(Output.of(accountName));
        }

        /**
         * @param azureVmwareDataStoreEnabled Is the NetApp Volume enabled for Azure VMware Solution (AVS) datastore purpose. Defaults to `false`. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder azureVmwareDataStoreEnabled(@Nullable Output<Boolean> azureVmwareDataStoreEnabled) {
            $.azureVmwareDataStoreEnabled = azureVmwareDataStoreEnabled;
            return this;
        }

        /**
         * @param azureVmwareDataStoreEnabled Is the NetApp Volume enabled for Azure VMware Solution (AVS) datastore purpose. Defaults to `false`. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder azureVmwareDataStoreEnabled(Boolean azureVmwareDataStoreEnabled) {
            return azureVmwareDataStoreEnabled(Output.of(azureVmwareDataStoreEnabled));
        }

        /**
         * @param createFromSnapshotResourceId Creates volume from snapshot. Following properties must be the same as the original volume where the snapshot was taken from: `protocols`, `subnet_id`, `location`, `service_level`, `resource_group_name`, `account_name` and `pool_name`. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder createFromSnapshotResourceId(@Nullable Output<String> createFromSnapshotResourceId) {
            $.createFromSnapshotResourceId = createFromSnapshotResourceId;
            return this;
        }

        /**
         * @param createFromSnapshotResourceId Creates volume from snapshot. Following properties must be the same as the original volume where the snapshot was taken from: `protocols`, `subnet_id`, `location`, `service_level`, `resource_group_name`, `account_name` and `pool_name`. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder createFromSnapshotResourceId(String createFromSnapshotResourceId) {
            return createFromSnapshotResourceId(Output.of(createFromSnapshotResourceId));
        }

        /**
         * @param dataProtectionReplication A `data_protection_replication` block as defined below. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder dataProtectionReplication(@Nullable Output<VolumeDataProtectionReplicationArgs> dataProtectionReplication) {
            $.dataProtectionReplication = dataProtectionReplication;
            return this;
        }

        /**
         * @param dataProtectionReplication A `data_protection_replication` block as defined below. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder dataProtectionReplication(VolumeDataProtectionReplicationArgs dataProtectionReplication) {
            return dataProtectionReplication(Output.of(dataProtectionReplication));
        }

        /**
         * @param dataProtectionSnapshotPolicy A `data_protection_snapshot_policy` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder dataProtectionSnapshotPolicy(@Nullable Output<VolumeDataProtectionSnapshotPolicyArgs> dataProtectionSnapshotPolicy) {
            $.dataProtectionSnapshotPolicy = dataProtectionSnapshotPolicy;
            return this;
        }

        /**
         * @param dataProtectionSnapshotPolicy A `data_protection_snapshot_policy` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder dataProtectionSnapshotPolicy(VolumeDataProtectionSnapshotPolicyArgs dataProtectionSnapshotPolicy) {
            return dataProtectionSnapshotPolicy(Output.of(dataProtectionSnapshotPolicy));
        }

        /**
         * @param encryptionKeySource The encryption key source, it can be `Microsoft.NetApp` for platform managed keys or `Microsoft.KeyVault` for customer-managed keys. This is required with `key_vault_private_endpoint_id`.
         * 
         * @return builder
         * 
         */
        public Builder encryptionKeySource(@Nullable Output<String> encryptionKeySource) {
            $.encryptionKeySource = encryptionKeySource;
            return this;
        }

        /**
         * @param encryptionKeySource The encryption key source, it can be `Microsoft.NetApp` for platform managed keys or `Microsoft.KeyVault` for customer-managed keys. This is required with `key_vault_private_endpoint_id`.
         * 
         * @return builder
         * 
         */
        public Builder encryptionKeySource(String encryptionKeySource) {
            return encryptionKeySource(Output.of(encryptionKeySource));
        }

        /**
         * @param exportPolicyRules One or more `export_policy_rule` block defined below.
         * 
         * @return builder
         * 
         */
        public Builder exportPolicyRules(@Nullable Output<List<VolumeExportPolicyRuleArgs>> exportPolicyRules) {
            $.exportPolicyRules = exportPolicyRules;
            return this;
        }

        /**
         * @param exportPolicyRules One or more `export_policy_rule` block defined below.
         * 
         * @return builder
         * 
         */
        public Builder exportPolicyRules(List<VolumeExportPolicyRuleArgs> exportPolicyRules) {
            return exportPolicyRules(Output.of(exportPolicyRules));
        }

        /**
         * @param exportPolicyRules One or more `export_policy_rule` block defined below.
         * 
         * @return builder
         * 
         */
        public Builder exportPolicyRules(VolumeExportPolicyRuleArgs... exportPolicyRules) {
            return exportPolicyRules(List.of(exportPolicyRules));
        }

        /**
         * @param keyVaultPrivateEndpointId The Private Endpoint ID for Key Vault, which is required when using customer-managed keys. This is required with `encryption_key_source`.
         * 
         * @return builder
         * 
         */
        public Builder keyVaultPrivateEndpointId(@Nullable Output<String> keyVaultPrivateEndpointId) {
            $.keyVaultPrivateEndpointId = keyVaultPrivateEndpointId;
            return this;
        }

        /**
         * @param keyVaultPrivateEndpointId The Private Endpoint ID for Key Vault, which is required when using customer-managed keys. This is required with `encryption_key_source`.
         * 
         * @return builder
         * 
         */
        public Builder keyVaultPrivateEndpointId(String keyVaultPrivateEndpointId) {
            return keyVaultPrivateEndpointId(Output.of(keyVaultPrivateEndpointId));
        }

        /**
         * @param location Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param name The name of the NetApp Volume. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the NetApp Volume. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param networkFeatures Indicates which network feature to use, accepted values are `Basic` or `Standard`, it defaults to `Basic` if not defined. This is a feature in public preview and for more information about it and how to register, please refer to [Configure network features for an Azure NetApp Files volume](https://docs.microsoft.com/en-us/azure/azure-netapp-files/configure-network-features). Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder networkFeatures(@Nullable Output<String> networkFeatures) {
            $.networkFeatures = networkFeatures;
            return this;
        }

        /**
         * @param networkFeatures Indicates which network feature to use, accepted values are `Basic` or `Standard`, it defaults to `Basic` if not defined. This is a feature in public preview and for more information about it and how to register, please refer to [Configure network features for an Azure NetApp Files volume](https://docs.microsoft.com/en-us/azure/azure-netapp-files/configure-network-features). Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder networkFeatures(String networkFeatures) {
            return networkFeatures(Output.of(networkFeatures));
        }

        /**
         * @param poolName The name of the NetApp pool in which the NetApp Volume should be created. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder poolName(Output<String> poolName) {
            $.poolName = poolName;
            return this;
        }

        /**
         * @param poolName The name of the NetApp pool in which the NetApp Volume should be created. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder poolName(String poolName) {
            return poolName(Output.of(poolName));
        }

        /**
         * @param protocols The target volume protocol expressed as a list. Supported single value include `CIFS`, `NFSv3`, or `NFSv4.1`. If argument is not defined it will default to `NFSv3`. Changing this forces a new resource to be created and data will be lost. Dual protocol scenario is supported for CIFS and NFSv3, for more information, please refer to [Create a dual-protocol volume for Azure NetApp Files](https://docs.microsoft.com/azure/azure-netapp-files/create-volumes-dual-protocol) document.
         * 
         * @return builder
         * 
         */
        public Builder protocols(@Nullable Output<List<String>> protocols) {
            $.protocols = protocols;
            return this;
        }

        /**
         * @param protocols The target volume protocol expressed as a list. Supported single value include `CIFS`, `NFSv3`, or `NFSv4.1`. If argument is not defined it will default to `NFSv3`. Changing this forces a new resource to be created and data will be lost. Dual protocol scenario is supported for CIFS and NFSv3, for more information, please refer to [Create a dual-protocol volume for Azure NetApp Files](https://docs.microsoft.com/azure/azure-netapp-files/create-volumes-dual-protocol) document.
         * 
         * @return builder
         * 
         */
        public Builder protocols(List<String> protocols) {
            return protocols(Output.of(protocols));
        }

        /**
         * @param protocols The target volume protocol expressed as a list. Supported single value include `CIFS`, `NFSv3`, or `NFSv4.1`. If argument is not defined it will default to `NFSv3`. Changing this forces a new resource to be created and data will be lost. Dual protocol scenario is supported for CIFS and NFSv3, for more information, please refer to [Create a dual-protocol volume for Azure NetApp Files](https://docs.microsoft.com/azure/azure-netapp-files/create-volumes-dual-protocol) document.
         * 
         * @return builder
         * 
         */
        public Builder protocols(String... protocols) {
            return protocols(List.of(protocols));
        }

        /**
         * @param resourceGroupName The name of the resource group where the NetApp Volume should be created. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName The name of the resource group where the NetApp Volume should be created. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        /**
         * @param securityStyle Volume security style, accepted values are `unix` or `ntfs`. If not provided, single-protocol volume is created defaulting to `unix` if it is `NFSv3` or `NFSv4.1` volume, if `CIFS`, it will default to `ntfs`. In a dual-protocol volume, if not provided, its value will be `ntfs`. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder securityStyle(@Nullable Output<String> securityStyle) {
            $.securityStyle = securityStyle;
            return this;
        }

        /**
         * @param securityStyle Volume security style, accepted values are `unix` or `ntfs`. If not provided, single-protocol volume is created defaulting to `unix` if it is `NFSv3` or `NFSv4.1` volume, if `CIFS`, it will default to `ntfs`. In a dual-protocol volume, if not provided, its value will be `ntfs`. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder securityStyle(String securityStyle) {
            return securityStyle(Output.of(securityStyle));
        }

        /**
         * @param serviceLevel The target performance of the file system. Valid values include `Premium`, `Standard`, or `Ultra`. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder serviceLevel(Output<String> serviceLevel) {
            $.serviceLevel = serviceLevel;
            return this;
        }

        /**
         * @param serviceLevel The target performance of the file system. Valid values include `Premium`, `Standard`, or `Ultra`. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder serviceLevel(String serviceLevel) {
            return serviceLevel(Output.of(serviceLevel));
        }

        /**
         * @param snapshotDirectoryVisible Specifies whether the .snapshot (NFS clients) or ~snapshot (SMB clients) path of a volume is visible, default value is true.
         * 
         * @return builder
         * 
         */
        public Builder snapshotDirectoryVisible(@Nullable Output<Boolean> snapshotDirectoryVisible) {
            $.snapshotDirectoryVisible = snapshotDirectoryVisible;
            return this;
        }

        /**
         * @param snapshotDirectoryVisible Specifies whether the .snapshot (NFS clients) or ~snapshot (SMB clients) path of a volume is visible, default value is true.
         * 
         * @return builder
         * 
         */
        public Builder snapshotDirectoryVisible(Boolean snapshotDirectoryVisible) {
            return snapshotDirectoryVisible(Output.of(snapshotDirectoryVisible));
        }

        /**
         * @param storageQuotaInGb The maximum Storage Quota allowed for a file system in Gigabytes.
         * 
         * @return builder
         * 
         */
        public Builder storageQuotaInGb(Output<Integer> storageQuotaInGb) {
            $.storageQuotaInGb = storageQuotaInGb;
            return this;
        }

        /**
         * @param storageQuotaInGb The maximum Storage Quota allowed for a file system in Gigabytes.
         * 
         * @return builder
         * 
         */
        public Builder storageQuotaInGb(Integer storageQuotaInGb) {
            return storageQuotaInGb(Output.of(storageQuotaInGb));
        }

        /**
         * @param subnetId The ID of the Subnet the NetApp Volume resides in, which must have the `Microsoft.NetApp/volumes` delegation. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder subnetId(Output<String> subnetId) {
            $.subnetId = subnetId;
            return this;
        }

        /**
         * @param subnetId The ID of the Subnet the NetApp Volume resides in, which must have the `Microsoft.NetApp/volumes` delegation. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder subnetId(String subnetId) {
            return subnetId(Output.of(subnetId));
        }

        /**
         * @param tags A mapping of tags to assign to the resource.
         * 
         * &gt; **Note:** It is highly recommended to use the **lifecycle** property as noted in the example since it will prevent an accidental deletion of the volume if the `protocols` argument changes to a different protocol type.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags A mapping of tags to assign to the resource.
         * 
         * &gt; **Note:** It is highly recommended to use the **lifecycle** property as noted in the example since it will prevent an accidental deletion of the volume if the `protocols` argument changes to a different protocol type.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param throughputInMibps Throughput of this volume in Mibps.
         * 
         * @return builder
         * 
         */
        public Builder throughputInMibps(@Nullable Output<Double> throughputInMibps) {
            $.throughputInMibps = throughputInMibps;
            return this;
        }

        /**
         * @param throughputInMibps Throughput of this volume in Mibps.
         * 
         * @return builder
         * 
         */
        public Builder throughputInMibps(Double throughputInMibps) {
            return throughputInMibps(Output.of(throughputInMibps));
        }

        /**
         * @param volumePath A unique file path for the volume. Used when creating mount targets. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder volumePath(Output<String> volumePath) {
            $.volumePath = volumePath;
            return this;
        }

        /**
         * @param volumePath A unique file path for the volume. Used when creating mount targets. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder volumePath(String volumePath) {
            return volumePath(Output.of(volumePath));
        }

        /**
         * @param zone Specifies the Availability Zone in which the Volume should be located. Possible values are `1`, `2` and `3`. Changing this forces a new resource to be created. This feature is currently in preview, for more information on how to enable it, please refer to [Manage availability zone volume placement for Azure NetApp Files](https://learn.microsoft.com/en-us/azure/azure-netapp-files/manage-availability-zone-volume-placement#register-the-feature).
         * 
         * @return builder
         * 
         */
        public Builder zone(@Nullable Output<String> zone) {
            $.zone = zone;
            return this;
        }

        /**
         * @param zone Specifies the Availability Zone in which the Volume should be located. Possible values are `1`, `2` and `3`. Changing this forces a new resource to be created. This feature is currently in preview, for more information on how to enable it, please refer to [Manage availability zone volume placement for Azure NetApp Files](https://learn.microsoft.com/en-us/azure/azure-netapp-files/manage-availability-zone-volume-placement#register-the-feature).
         * 
         * @return builder
         * 
         */
        public Builder zone(String zone) {
            return zone(Output.of(zone));
        }

        public VolumeArgs build() {
            if ($.accountName == null) {
                throw new MissingRequiredPropertyException("VolumeArgs", "accountName");
            }
            if ($.poolName == null) {
                throw new MissingRequiredPropertyException("VolumeArgs", "poolName");
            }
            if ($.resourceGroupName == null) {
                throw new MissingRequiredPropertyException("VolumeArgs", "resourceGroupName");
            }
            if ($.serviceLevel == null) {
                throw new MissingRequiredPropertyException("VolumeArgs", "serviceLevel");
            }
            if ($.storageQuotaInGb == null) {
                throw new MissingRequiredPropertyException("VolumeArgs", "storageQuotaInGb");
            }
            if ($.subnetId == null) {
                throw new MissingRequiredPropertyException("VolumeArgs", "subnetId");
            }
            if ($.volumePath == null) {
                throw new MissingRequiredPropertyException("VolumeArgs", "volumePath");
            }
            return $;
        }
    }

}
