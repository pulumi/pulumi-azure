// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.core;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ResourceGroupPolicyRemediationArgs extends com.pulumi.resources.ResourceArgs {

    public static final ResourceGroupPolicyRemediationArgs Empty = new ResourceGroupPolicyRemediationArgs();

    @Import(name="locationFilters")
    private @Nullable Output<List<String>> locationFilters;

    public Optional<Output<List<String>>> locationFilters() {
        return Optional.ofNullable(this.locationFilters);
    }

    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="policyAssignmentId", required=true)
    private Output<String> policyAssignmentId;

    public Output<String> policyAssignmentId() {
        return this.policyAssignmentId;
    }

    @Import(name="policyDefinitionId")
    private @Nullable Output<String> policyDefinitionId;

    public Optional<Output<String>> policyDefinitionId() {
        return Optional.ofNullable(this.policyDefinitionId);
    }

    @Import(name="resourceDiscoveryMode")
    private @Nullable Output<String> resourceDiscoveryMode;

    public Optional<Output<String>> resourceDiscoveryMode() {
        return Optional.ofNullable(this.resourceDiscoveryMode);
    }

    @Import(name="resourceGroupId", required=true)
    private Output<String> resourceGroupId;

    public Output<String> resourceGroupId() {
        return this.resourceGroupId;
    }

    private ResourceGroupPolicyRemediationArgs() {}

    private ResourceGroupPolicyRemediationArgs(ResourceGroupPolicyRemediationArgs $) {
        this.locationFilters = $.locationFilters;
        this.name = $.name;
        this.policyAssignmentId = $.policyAssignmentId;
        this.policyDefinitionId = $.policyDefinitionId;
        this.resourceDiscoveryMode = $.resourceDiscoveryMode;
        this.resourceGroupId = $.resourceGroupId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ResourceGroupPolicyRemediationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ResourceGroupPolicyRemediationArgs $;

        public Builder() {
            $ = new ResourceGroupPolicyRemediationArgs();
        }

        public Builder(ResourceGroupPolicyRemediationArgs defaults) {
            $ = new ResourceGroupPolicyRemediationArgs(Objects.requireNonNull(defaults));
        }

        public Builder locationFilters(@Nullable Output<List<String>> locationFilters) {
            $.locationFilters = locationFilters;
            return this;
        }

        public Builder locationFilters(List<String> locationFilters) {
            return locationFilters(Output.of(locationFilters));
        }

        public Builder locationFilters(String... locationFilters) {
            return locationFilters(List.of(locationFilters));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder policyAssignmentId(Output<String> policyAssignmentId) {
            $.policyAssignmentId = policyAssignmentId;
            return this;
        }

        public Builder policyAssignmentId(String policyAssignmentId) {
            return policyAssignmentId(Output.of(policyAssignmentId));
        }

        public Builder policyDefinitionId(@Nullable Output<String> policyDefinitionId) {
            $.policyDefinitionId = policyDefinitionId;
            return this;
        }

        public Builder policyDefinitionId(String policyDefinitionId) {
            return policyDefinitionId(Output.of(policyDefinitionId));
        }

        public Builder resourceDiscoveryMode(@Nullable Output<String> resourceDiscoveryMode) {
            $.resourceDiscoveryMode = resourceDiscoveryMode;
            return this;
        }

        public Builder resourceDiscoveryMode(String resourceDiscoveryMode) {
            return resourceDiscoveryMode(Output.of(resourceDiscoveryMode));
        }

        public Builder resourceGroupId(Output<String> resourceGroupId) {
            $.resourceGroupId = resourceGroupId;
            return this;
        }

        public Builder resourceGroupId(String resourceGroupId) {
            return resourceGroupId(Output.of(resourceGroupId));
        }

        public ResourceGroupPolicyRemediationArgs build() {
            $.policyAssignmentId = Objects.requireNonNull($.policyAssignmentId, "expected parameter 'policyAssignmentId' to be non-null");
            $.resourceGroupId = Objects.requireNonNull($.resourceGroupId, "expected parameter 'resourceGroupId' to be non-null");
            return $;
        }
    }

}
