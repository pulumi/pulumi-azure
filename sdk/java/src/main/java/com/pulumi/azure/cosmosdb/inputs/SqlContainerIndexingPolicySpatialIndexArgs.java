// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.cosmosdb.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SqlContainerIndexingPolicySpatialIndexArgs extends com.pulumi.resources.ResourceArgs {

    public static final SqlContainerIndexingPolicySpatialIndexArgs Empty = new SqlContainerIndexingPolicySpatialIndexArgs();

    /**
     * Path for which the indexing behaviour applies to. According to the service design, all spatial types including `LineString`, `MultiPolygon`, `Point`, and `Polygon` will be applied to the path.
     * 
     */
    @Import(name="path", required=true)
    private Output<String> path;

    /**
     * @return Path for which the indexing behaviour applies to. According to the service design, all spatial types including `LineString`, `MultiPolygon`, `Point`, and `Polygon` will be applied to the path.
     * 
     */
    public Output<String> path() {
        return this.path;
    }

    /**
     * A set of spatial types of the path.
     * 
     */
    @Import(name="types")
    private @Nullable Output<List<String>> types;

    /**
     * @return A set of spatial types of the path.
     * 
     */
    public Optional<Output<List<String>>> types() {
        return Optional.ofNullable(this.types);
    }

    private SqlContainerIndexingPolicySpatialIndexArgs() {}

    private SqlContainerIndexingPolicySpatialIndexArgs(SqlContainerIndexingPolicySpatialIndexArgs $) {
        this.path = $.path;
        this.types = $.types;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SqlContainerIndexingPolicySpatialIndexArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SqlContainerIndexingPolicySpatialIndexArgs $;

        public Builder() {
            $ = new SqlContainerIndexingPolicySpatialIndexArgs();
        }

        public Builder(SqlContainerIndexingPolicySpatialIndexArgs defaults) {
            $ = new SqlContainerIndexingPolicySpatialIndexArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param path Path for which the indexing behaviour applies to. According to the service design, all spatial types including `LineString`, `MultiPolygon`, `Point`, and `Polygon` will be applied to the path.
         * 
         * @return builder
         * 
         */
        public Builder path(Output<String> path) {
            $.path = path;
            return this;
        }

        /**
         * @param path Path for which the indexing behaviour applies to. According to the service design, all spatial types including `LineString`, `MultiPolygon`, `Point`, and `Polygon` will be applied to the path.
         * 
         * @return builder
         * 
         */
        public Builder path(String path) {
            return path(Output.of(path));
        }

        /**
         * @param types A set of spatial types of the path.
         * 
         * @return builder
         * 
         */
        public Builder types(@Nullable Output<List<String>> types) {
            $.types = types;
            return this;
        }

        /**
         * @param types A set of spatial types of the path.
         * 
         * @return builder
         * 
         */
        public Builder types(List<String> types) {
            return types(Output.of(types));
        }

        /**
         * @param types A set of spatial types of the path.
         * 
         * @return builder
         * 
         */
        public Builder types(String... types) {
            return types(List.of(types));
        }

        public SqlContainerIndexingPolicySpatialIndexArgs build() {
            if ($.path == null) {
                throw new MissingRequiredPropertyException("SqlContainerIndexingPolicySpatialIndexArgs", "path");
            }
            return $;
        }
    }

}
