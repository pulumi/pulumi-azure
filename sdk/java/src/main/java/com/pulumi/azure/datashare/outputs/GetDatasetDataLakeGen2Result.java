// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.datashare.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetDatasetDataLakeGen2Result {
    /**
     * @return The name of the Data Share Dataset.
     * 
     */
    private String displayName;
    /**
     * @return The path of the file in the data lake file system to be shared with the receiver.
     * 
     */
    private String filePath;
    /**
     * @return The name of the data lake file system to be shared with the receiver.
     * 
     */
    private String fileSystemName;
    /**
     * @return The folder path in the data lake file system to be shared with the receiver.
     * 
     */
    private String folderPath;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private String name;
    private String shareId;
    /**
     * @return The resource ID of the storage account of the data lake file system to be shared with the receiver.
     * 
     */
    private String storageAccountId;

    private GetDatasetDataLakeGen2Result() {}
    /**
     * @return The name of the Data Share Dataset.
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return The path of the file in the data lake file system to be shared with the receiver.
     * 
     */
    public String filePath() {
        return this.filePath;
    }
    /**
     * @return The name of the data lake file system to be shared with the receiver.
     * 
     */
    public String fileSystemName() {
        return this.fileSystemName;
    }
    /**
     * @return The folder path in the data lake file system to be shared with the receiver.
     * 
     */
    public String folderPath() {
        return this.folderPath;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public String name() {
        return this.name;
    }
    public String shareId() {
        return this.shareId;
    }
    /**
     * @return The resource ID of the storage account of the data lake file system to be shared with the receiver.
     * 
     */
    public String storageAccountId() {
        return this.storageAccountId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDatasetDataLakeGen2Result defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String displayName;
        private String filePath;
        private String fileSystemName;
        private String folderPath;
        private String id;
        private String name;
        private String shareId;
        private String storageAccountId;
        public Builder() {}
        public Builder(GetDatasetDataLakeGen2Result defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.displayName = defaults.displayName;
    	      this.filePath = defaults.filePath;
    	      this.fileSystemName = defaults.fileSystemName;
    	      this.folderPath = defaults.folderPath;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.shareId = defaults.shareId;
    	      this.storageAccountId = defaults.storageAccountId;
        }

        @CustomType.Setter
        public Builder displayName(String displayName) {
            if (displayName == null) {
              throw new MissingRequiredPropertyException("GetDatasetDataLakeGen2Result", "displayName");
            }
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder filePath(String filePath) {
            if (filePath == null) {
              throw new MissingRequiredPropertyException("GetDatasetDataLakeGen2Result", "filePath");
            }
            this.filePath = filePath;
            return this;
        }
        @CustomType.Setter
        public Builder fileSystemName(String fileSystemName) {
            if (fileSystemName == null) {
              throw new MissingRequiredPropertyException("GetDatasetDataLakeGen2Result", "fileSystemName");
            }
            this.fileSystemName = fileSystemName;
            return this;
        }
        @CustomType.Setter
        public Builder folderPath(String folderPath) {
            if (folderPath == null) {
              throw new MissingRequiredPropertyException("GetDatasetDataLakeGen2Result", "folderPath");
            }
            this.folderPath = folderPath;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetDatasetDataLakeGen2Result", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetDatasetDataLakeGen2Result", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder shareId(String shareId) {
            if (shareId == null) {
              throw new MissingRequiredPropertyException("GetDatasetDataLakeGen2Result", "shareId");
            }
            this.shareId = shareId;
            return this;
        }
        @CustomType.Setter
        public Builder storageAccountId(String storageAccountId) {
            if (storageAccountId == null) {
              throw new MissingRequiredPropertyException("GetDatasetDataLakeGen2Result", "storageAccountId");
            }
            this.storageAccountId = storageAccountId;
            return this;
        }
        public GetDatasetDataLakeGen2Result build() {
            final var _resultValue = new GetDatasetDataLakeGen2Result();
            _resultValue.displayName = displayName;
            _resultValue.filePath = filePath;
            _resultValue.fileSystemName = fileSystemName;
            _resultValue.folderPath = folderPath;
            _resultValue.id = id;
            _resultValue.name = name;
            _resultValue.shareId = shareId;
            _resultValue.storageAccountId = storageAccountId;
            return _resultValue;
        }
    }
}
