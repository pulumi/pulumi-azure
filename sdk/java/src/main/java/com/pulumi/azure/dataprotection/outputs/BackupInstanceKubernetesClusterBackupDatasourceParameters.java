// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.dataprotection.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class BackupInstanceKubernetesClusterBackupDatasourceParameters {
    /**
     * @return Whether to include cluster scope resources during backup. Default to `false`. Changing this forces a new resource to be created.
     * 
     */
    private @Nullable Boolean clusterScopedResourcesEnabled;
    /**
     * @return Specifies the namespaces to be excluded during backup. Changing this forces a new resource to be created.
     * 
     */
    private @Nullable List<String> excludedNamespaces;
    /**
     * @return Specifies the resource types to be excluded during backup. Changing this forces a new resource to be created.
     * 
     */
    private @Nullable List<String> excludedResourceTypes;
    /**
     * @return Specifies the namespaces to be included during backup. Changing this forces a new resource to be created.
     * 
     */
    private @Nullable List<String> includedNamespaces;
    /**
     * @return Specifies the resource types to be included during backup. Changing this forces a new resource to be created.
     * 
     */
    private @Nullable List<String> includedResourceTypes;
    /**
     * @return Specifies the resources with such label selectors to be included during backup. Changing this forces a new resource to be created.
     * 
     */
    private @Nullable List<String> labelSelectors;
    /**
     * @return Whether to take volume snapshots during backup. Default to `false`. Changing this forces a new resource to be created.
     * 
     */
    private @Nullable Boolean volumeSnapshotEnabled;

    private BackupInstanceKubernetesClusterBackupDatasourceParameters() {}
    /**
     * @return Whether to include cluster scope resources during backup. Default to `false`. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Boolean> clusterScopedResourcesEnabled() {
        return Optional.ofNullable(this.clusterScopedResourcesEnabled);
    }
    /**
     * @return Specifies the namespaces to be excluded during backup. Changing this forces a new resource to be created.
     * 
     */
    public List<String> excludedNamespaces() {
        return this.excludedNamespaces == null ? List.of() : this.excludedNamespaces;
    }
    /**
     * @return Specifies the resource types to be excluded during backup. Changing this forces a new resource to be created.
     * 
     */
    public List<String> excludedResourceTypes() {
        return this.excludedResourceTypes == null ? List.of() : this.excludedResourceTypes;
    }
    /**
     * @return Specifies the namespaces to be included during backup. Changing this forces a new resource to be created.
     * 
     */
    public List<String> includedNamespaces() {
        return this.includedNamespaces == null ? List.of() : this.includedNamespaces;
    }
    /**
     * @return Specifies the resource types to be included during backup. Changing this forces a new resource to be created.
     * 
     */
    public List<String> includedResourceTypes() {
        return this.includedResourceTypes == null ? List.of() : this.includedResourceTypes;
    }
    /**
     * @return Specifies the resources with such label selectors to be included during backup. Changing this forces a new resource to be created.
     * 
     */
    public List<String> labelSelectors() {
        return this.labelSelectors == null ? List.of() : this.labelSelectors;
    }
    /**
     * @return Whether to take volume snapshots during backup. Default to `false`. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Boolean> volumeSnapshotEnabled() {
        return Optional.ofNullable(this.volumeSnapshotEnabled);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(BackupInstanceKubernetesClusterBackupDatasourceParameters defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Boolean clusterScopedResourcesEnabled;
        private @Nullable List<String> excludedNamespaces;
        private @Nullable List<String> excludedResourceTypes;
        private @Nullable List<String> includedNamespaces;
        private @Nullable List<String> includedResourceTypes;
        private @Nullable List<String> labelSelectors;
        private @Nullable Boolean volumeSnapshotEnabled;
        public Builder() {}
        public Builder(BackupInstanceKubernetesClusterBackupDatasourceParameters defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.clusterScopedResourcesEnabled = defaults.clusterScopedResourcesEnabled;
    	      this.excludedNamespaces = defaults.excludedNamespaces;
    	      this.excludedResourceTypes = defaults.excludedResourceTypes;
    	      this.includedNamespaces = defaults.includedNamespaces;
    	      this.includedResourceTypes = defaults.includedResourceTypes;
    	      this.labelSelectors = defaults.labelSelectors;
    	      this.volumeSnapshotEnabled = defaults.volumeSnapshotEnabled;
        }

        @CustomType.Setter
        public Builder clusterScopedResourcesEnabled(@Nullable Boolean clusterScopedResourcesEnabled) {

            this.clusterScopedResourcesEnabled = clusterScopedResourcesEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder excludedNamespaces(@Nullable List<String> excludedNamespaces) {

            this.excludedNamespaces = excludedNamespaces;
            return this;
        }
        public Builder excludedNamespaces(String... excludedNamespaces) {
            return excludedNamespaces(List.of(excludedNamespaces));
        }
        @CustomType.Setter
        public Builder excludedResourceTypes(@Nullable List<String> excludedResourceTypes) {

            this.excludedResourceTypes = excludedResourceTypes;
            return this;
        }
        public Builder excludedResourceTypes(String... excludedResourceTypes) {
            return excludedResourceTypes(List.of(excludedResourceTypes));
        }
        @CustomType.Setter
        public Builder includedNamespaces(@Nullable List<String> includedNamespaces) {

            this.includedNamespaces = includedNamespaces;
            return this;
        }
        public Builder includedNamespaces(String... includedNamespaces) {
            return includedNamespaces(List.of(includedNamespaces));
        }
        @CustomType.Setter
        public Builder includedResourceTypes(@Nullable List<String> includedResourceTypes) {

            this.includedResourceTypes = includedResourceTypes;
            return this;
        }
        public Builder includedResourceTypes(String... includedResourceTypes) {
            return includedResourceTypes(List.of(includedResourceTypes));
        }
        @CustomType.Setter
        public Builder labelSelectors(@Nullable List<String> labelSelectors) {

            this.labelSelectors = labelSelectors;
            return this;
        }
        public Builder labelSelectors(String... labelSelectors) {
            return labelSelectors(List.of(labelSelectors));
        }
        @CustomType.Setter
        public Builder volumeSnapshotEnabled(@Nullable Boolean volumeSnapshotEnabled) {

            this.volumeSnapshotEnabled = volumeSnapshotEnabled;
            return this;
        }
        public BackupInstanceKubernetesClusterBackupDatasourceParameters build() {
            final var _resultValue = new BackupInstanceKubernetesClusterBackupDatasourceParameters();
            _resultValue.clusterScopedResourcesEnabled = clusterScopedResourcesEnabled;
            _resultValue.excludedNamespaces = excludedNamespaces;
            _resultValue.excludedResourceTypes = excludedResourceTypes;
            _resultValue.includedNamespaces = includedNamespaces;
            _resultValue.includedResourceTypes = includedResourceTypes;
            _resultValue.labelSelectors = labelSelectors;
            _resultValue.volumeSnapshotEnabled = volumeSnapshotEnabled;
            return _resultValue;
        }
    }
}
