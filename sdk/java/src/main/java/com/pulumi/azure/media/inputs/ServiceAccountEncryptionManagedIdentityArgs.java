// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.media.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ServiceAccountEncryptionManagedIdentityArgs extends com.pulumi.resources.ResourceArgs {

    public static final ServiceAccountEncryptionManagedIdentityArgs Empty = new ServiceAccountEncryptionManagedIdentityArgs();

    /**
     * Whether to use System Assigned Identity. Possible Values are `true` and `false`.
     * 
     */
    @Import(name="useSystemAssignedIdentity")
    private @Nullable Output<Boolean> useSystemAssignedIdentity;

    /**
     * @return Whether to use System Assigned Identity. Possible Values are `true` and `false`.
     * 
     */
    public Optional<Output<Boolean>> useSystemAssignedIdentity() {
        return Optional.ofNullable(this.useSystemAssignedIdentity);
    }

    /**
     * The ID of the User Assigned Identity. This value can only be set when `use_system_assigned_identity` is `false`
     * 
     */
    @Import(name="userAssignedIdentityId")
    private @Nullable Output<String> userAssignedIdentityId;

    /**
     * @return The ID of the User Assigned Identity. This value can only be set when `use_system_assigned_identity` is `false`
     * 
     */
    public Optional<Output<String>> userAssignedIdentityId() {
        return Optional.ofNullable(this.userAssignedIdentityId);
    }

    private ServiceAccountEncryptionManagedIdentityArgs() {}

    private ServiceAccountEncryptionManagedIdentityArgs(ServiceAccountEncryptionManagedIdentityArgs $) {
        this.useSystemAssignedIdentity = $.useSystemAssignedIdentity;
        this.userAssignedIdentityId = $.userAssignedIdentityId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ServiceAccountEncryptionManagedIdentityArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ServiceAccountEncryptionManagedIdentityArgs $;

        public Builder() {
            $ = new ServiceAccountEncryptionManagedIdentityArgs();
        }

        public Builder(ServiceAccountEncryptionManagedIdentityArgs defaults) {
            $ = new ServiceAccountEncryptionManagedIdentityArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param useSystemAssignedIdentity Whether to use System Assigned Identity. Possible Values are `true` and `false`.
         * 
         * @return builder
         * 
         */
        public Builder useSystemAssignedIdentity(@Nullable Output<Boolean> useSystemAssignedIdentity) {
            $.useSystemAssignedIdentity = useSystemAssignedIdentity;
            return this;
        }

        /**
         * @param useSystemAssignedIdentity Whether to use System Assigned Identity. Possible Values are `true` and `false`.
         * 
         * @return builder
         * 
         */
        public Builder useSystemAssignedIdentity(Boolean useSystemAssignedIdentity) {
            return useSystemAssignedIdentity(Output.of(useSystemAssignedIdentity));
        }

        /**
         * @param userAssignedIdentityId The ID of the User Assigned Identity. This value can only be set when `use_system_assigned_identity` is `false`
         * 
         * @return builder
         * 
         */
        public Builder userAssignedIdentityId(@Nullable Output<String> userAssignedIdentityId) {
            $.userAssignedIdentityId = userAssignedIdentityId;
            return this;
        }

        /**
         * @param userAssignedIdentityId The ID of the User Assigned Identity. This value can only be set when `use_system_assigned_identity` is `false`
         * 
         * @return builder
         * 
         */
        public Builder userAssignedIdentityId(String userAssignedIdentityId) {
            return userAssignedIdentityId(Output.of(userAssignedIdentityId));
        }

        public ServiceAccountEncryptionManagedIdentityArgs build() {
            return $;
        }
    }

}
