// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.hpc.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CacheDnsArgs extends com.pulumi.resources.ResourceArgs {

    public static final CacheDnsArgs Empty = new CacheDnsArgs();

    /**
     * The DNS search domain for the HPC Cache.
     * 
     */
    @Import(name="searchDomain")
    private @Nullable Output<String> searchDomain;

    /**
     * @return The DNS search domain for the HPC Cache.
     * 
     */
    public Optional<Output<String>> searchDomain() {
        return Optional.ofNullable(this.searchDomain);
    }

    /**
     * A list of DNS servers for the HPC Cache. At most three IP(s) are allowed to set.
     * 
     */
    @Import(name="servers", required=true)
    private Output<List<String>> servers;

    /**
     * @return A list of DNS servers for the HPC Cache. At most three IP(s) are allowed to set.
     * 
     */
    public Output<List<String>> servers() {
        return this.servers;
    }

    private CacheDnsArgs() {}

    private CacheDnsArgs(CacheDnsArgs $) {
        this.searchDomain = $.searchDomain;
        this.servers = $.servers;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CacheDnsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CacheDnsArgs $;

        public Builder() {
            $ = new CacheDnsArgs();
        }

        public Builder(CacheDnsArgs defaults) {
            $ = new CacheDnsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param searchDomain The DNS search domain for the HPC Cache.
         * 
         * @return builder
         * 
         */
        public Builder searchDomain(@Nullable Output<String> searchDomain) {
            $.searchDomain = searchDomain;
            return this;
        }

        /**
         * @param searchDomain The DNS search domain for the HPC Cache.
         * 
         * @return builder
         * 
         */
        public Builder searchDomain(String searchDomain) {
            return searchDomain(Output.of(searchDomain));
        }

        /**
         * @param servers A list of DNS servers for the HPC Cache. At most three IP(s) are allowed to set.
         * 
         * @return builder
         * 
         */
        public Builder servers(Output<List<String>> servers) {
            $.servers = servers;
            return this;
        }

        /**
         * @param servers A list of DNS servers for the HPC Cache. At most three IP(s) are allowed to set.
         * 
         * @return builder
         * 
         */
        public Builder servers(List<String> servers) {
            return servers(Output.of(servers));
        }

        /**
         * @param servers A list of DNS servers for the HPC Cache. At most three IP(s) are allowed to set.
         * 
         * @return builder
         * 
         */
        public Builder servers(String... servers) {
            return servers(List.of(servers));
        }

        public CacheDnsArgs build() {
            if ($.servers == null) {
                throw new MissingRequiredPropertyException("CacheDnsArgs", "servers");
            }
            return $;
        }
    }

}
