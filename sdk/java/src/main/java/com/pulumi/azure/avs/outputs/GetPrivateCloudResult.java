// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.avs.outputs;

import com.pulumi.azure.avs.outputs.GetPrivateCloudCircuit;
import com.pulumi.azure.avs.outputs.GetPrivateCloudManagementCluster;
import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetPrivateCloudResult {
    /**
     * @return A `circuit` block as defined below.
     * 
     */
    private final List<GetPrivateCloudCircuit> circuits;
    /**
     * @return The endpoint for the HCX Cloud Manager.
     * 
     */
    private final String hcxCloudManagerEndpoint;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private final String id;
    /**
     * @return Is the VMware Private Cluster connected to the internet?
     * 
     */
    private final Boolean internetConnectionEnabled;
    /**
     * @return The Azure Region where the VMware Private Cloud exists.
     * 
     */
    private final String location;
    /**
     * @return A `management_cluster` block as defined below.
     * 
     */
    private final List<GetPrivateCloudManagementCluster> managementClusters;
    /**
     * @return The network used to access vCenter Server and NSX-T Manager.
     * 
     */
    private final String managementSubnetCidr;
    private final String name;
    /**
     * @return The subnet CIDR of the VMware Private Cloud.
     * 
     */
    private final String networkSubnetCidr;
    /**
     * @return The thumbprint of the NSX-T Manager SSL certificate.
     * 
     */
    private final String nsxtCertificateThumbprint;
    /**
     * @return The endpoint for the NSX-T Data Center manager.
     * 
     */
    private final String nsxtManagerEndpoint;
    /**
     * @return The network which isused for virtual machine cold migration, cloning, and snapshot migration.
     * 
     */
    private final String provisioningSubnetCidr;
    private final String resourceGroupName;
    /**
     * @return The Name of the SKU used for this Private Cloud.
     * 
     */
    private final String skuName;
    /**
     * @return A mapping of tags assigned to the VMware Private Cloud.
     * 
     */
    private final Map<String,String> tags;
    /**
     * @return The thumbprint of the vCenter Server SSL certificate.
     * 
     */
    private final String vcenterCertificateThumbprint;
    /**
     * @return The endpoint for Virtual Center Server Appliance.
     * 
     */
    private final String vcsaEndpoint;
    /**
     * @return The network which is used for live migration of virtual machines.
     * 
     */
    private final String vmotionSubnetCidr;

    @CustomType.Constructor
    private GetPrivateCloudResult(
        @CustomType.Parameter("circuits") List<GetPrivateCloudCircuit> circuits,
        @CustomType.Parameter("hcxCloudManagerEndpoint") String hcxCloudManagerEndpoint,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("internetConnectionEnabled") Boolean internetConnectionEnabled,
        @CustomType.Parameter("location") String location,
        @CustomType.Parameter("managementClusters") List<GetPrivateCloudManagementCluster> managementClusters,
        @CustomType.Parameter("managementSubnetCidr") String managementSubnetCidr,
        @CustomType.Parameter("name") String name,
        @CustomType.Parameter("networkSubnetCidr") String networkSubnetCidr,
        @CustomType.Parameter("nsxtCertificateThumbprint") String nsxtCertificateThumbprint,
        @CustomType.Parameter("nsxtManagerEndpoint") String nsxtManagerEndpoint,
        @CustomType.Parameter("provisioningSubnetCidr") String provisioningSubnetCidr,
        @CustomType.Parameter("resourceGroupName") String resourceGroupName,
        @CustomType.Parameter("skuName") String skuName,
        @CustomType.Parameter("tags") Map<String,String> tags,
        @CustomType.Parameter("vcenterCertificateThumbprint") String vcenterCertificateThumbprint,
        @CustomType.Parameter("vcsaEndpoint") String vcsaEndpoint,
        @CustomType.Parameter("vmotionSubnetCidr") String vmotionSubnetCidr) {
        this.circuits = circuits;
        this.hcxCloudManagerEndpoint = hcxCloudManagerEndpoint;
        this.id = id;
        this.internetConnectionEnabled = internetConnectionEnabled;
        this.location = location;
        this.managementClusters = managementClusters;
        this.managementSubnetCidr = managementSubnetCidr;
        this.name = name;
        this.networkSubnetCidr = networkSubnetCidr;
        this.nsxtCertificateThumbprint = nsxtCertificateThumbprint;
        this.nsxtManagerEndpoint = nsxtManagerEndpoint;
        this.provisioningSubnetCidr = provisioningSubnetCidr;
        this.resourceGroupName = resourceGroupName;
        this.skuName = skuName;
        this.tags = tags;
        this.vcenterCertificateThumbprint = vcenterCertificateThumbprint;
        this.vcsaEndpoint = vcsaEndpoint;
        this.vmotionSubnetCidr = vmotionSubnetCidr;
    }

    /**
     * @return A `circuit` block as defined below.
     * 
     */
    public List<GetPrivateCloudCircuit> circuits() {
        return this.circuits;
    }
    /**
     * @return The endpoint for the HCX Cloud Manager.
     * 
     */
    public String hcxCloudManagerEndpoint() {
        return this.hcxCloudManagerEndpoint;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Is the VMware Private Cluster connected to the internet?
     * 
     */
    public Boolean internetConnectionEnabled() {
        return this.internetConnectionEnabled;
    }
    /**
     * @return The Azure Region where the VMware Private Cloud exists.
     * 
     */
    public String location() {
        return this.location;
    }
    /**
     * @return A `management_cluster` block as defined below.
     * 
     */
    public List<GetPrivateCloudManagementCluster> managementClusters() {
        return this.managementClusters;
    }
    /**
     * @return The network used to access vCenter Server and NSX-T Manager.
     * 
     */
    public String managementSubnetCidr() {
        return this.managementSubnetCidr;
    }
    public String name() {
        return this.name;
    }
    /**
     * @return The subnet CIDR of the VMware Private Cloud.
     * 
     */
    public String networkSubnetCidr() {
        return this.networkSubnetCidr;
    }
    /**
     * @return The thumbprint of the NSX-T Manager SSL certificate.
     * 
     */
    public String nsxtCertificateThumbprint() {
        return this.nsxtCertificateThumbprint;
    }
    /**
     * @return The endpoint for the NSX-T Data Center manager.
     * 
     */
    public String nsxtManagerEndpoint() {
        return this.nsxtManagerEndpoint;
    }
    /**
     * @return The network which isused for virtual machine cold migration, cloning, and snapshot migration.
     * 
     */
    public String provisioningSubnetCidr() {
        return this.provisioningSubnetCidr;
    }
    public String resourceGroupName() {
        return this.resourceGroupName;
    }
    /**
     * @return The Name of the SKU used for this Private Cloud.
     * 
     */
    public String skuName() {
        return this.skuName;
    }
    /**
     * @return A mapping of tags assigned to the VMware Private Cloud.
     * 
     */
    public Map<String,String> tags() {
        return this.tags;
    }
    /**
     * @return The thumbprint of the vCenter Server SSL certificate.
     * 
     */
    public String vcenterCertificateThumbprint() {
        return this.vcenterCertificateThumbprint;
    }
    /**
     * @return The endpoint for Virtual Center Server Appliance.
     * 
     */
    public String vcsaEndpoint() {
        return this.vcsaEndpoint;
    }
    /**
     * @return The network which is used for live migration of virtual machines.
     * 
     */
    public String vmotionSubnetCidr() {
        return this.vmotionSubnetCidr;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetPrivateCloudResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private List<GetPrivateCloudCircuit> circuits;
        private String hcxCloudManagerEndpoint;
        private String id;
        private Boolean internetConnectionEnabled;
        private String location;
        private List<GetPrivateCloudManagementCluster> managementClusters;
        private String managementSubnetCidr;
        private String name;
        private String networkSubnetCidr;
        private String nsxtCertificateThumbprint;
        private String nsxtManagerEndpoint;
        private String provisioningSubnetCidr;
        private String resourceGroupName;
        private String skuName;
        private Map<String,String> tags;
        private String vcenterCertificateThumbprint;
        private String vcsaEndpoint;
        private String vmotionSubnetCidr;

        public Builder() {
    	      // Empty
        }

        public Builder(GetPrivateCloudResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.circuits = defaults.circuits;
    	      this.hcxCloudManagerEndpoint = defaults.hcxCloudManagerEndpoint;
    	      this.id = defaults.id;
    	      this.internetConnectionEnabled = defaults.internetConnectionEnabled;
    	      this.location = defaults.location;
    	      this.managementClusters = defaults.managementClusters;
    	      this.managementSubnetCidr = defaults.managementSubnetCidr;
    	      this.name = defaults.name;
    	      this.networkSubnetCidr = defaults.networkSubnetCidr;
    	      this.nsxtCertificateThumbprint = defaults.nsxtCertificateThumbprint;
    	      this.nsxtManagerEndpoint = defaults.nsxtManagerEndpoint;
    	      this.provisioningSubnetCidr = defaults.provisioningSubnetCidr;
    	      this.resourceGroupName = defaults.resourceGroupName;
    	      this.skuName = defaults.skuName;
    	      this.tags = defaults.tags;
    	      this.vcenterCertificateThumbprint = defaults.vcenterCertificateThumbprint;
    	      this.vcsaEndpoint = defaults.vcsaEndpoint;
    	      this.vmotionSubnetCidr = defaults.vmotionSubnetCidr;
        }

        public Builder circuits(List<GetPrivateCloudCircuit> circuits) {
            this.circuits = Objects.requireNonNull(circuits);
            return this;
        }
        public Builder circuits(GetPrivateCloudCircuit... circuits) {
            return circuits(List.of(circuits));
        }
        public Builder hcxCloudManagerEndpoint(String hcxCloudManagerEndpoint) {
            this.hcxCloudManagerEndpoint = Objects.requireNonNull(hcxCloudManagerEndpoint);
            return this;
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder internetConnectionEnabled(Boolean internetConnectionEnabled) {
            this.internetConnectionEnabled = Objects.requireNonNull(internetConnectionEnabled);
            return this;
        }
        public Builder location(String location) {
            this.location = Objects.requireNonNull(location);
            return this;
        }
        public Builder managementClusters(List<GetPrivateCloudManagementCluster> managementClusters) {
            this.managementClusters = Objects.requireNonNull(managementClusters);
            return this;
        }
        public Builder managementClusters(GetPrivateCloudManagementCluster... managementClusters) {
            return managementClusters(List.of(managementClusters));
        }
        public Builder managementSubnetCidr(String managementSubnetCidr) {
            this.managementSubnetCidr = Objects.requireNonNull(managementSubnetCidr);
            return this;
        }
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        public Builder networkSubnetCidr(String networkSubnetCidr) {
            this.networkSubnetCidr = Objects.requireNonNull(networkSubnetCidr);
            return this;
        }
        public Builder nsxtCertificateThumbprint(String nsxtCertificateThumbprint) {
            this.nsxtCertificateThumbprint = Objects.requireNonNull(nsxtCertificateThumbprint);
            return this;
        }
        public Builder nsxtManagerEndpoint(String nsxtManagerEndpoint) {
            this.nsxtManagerEndpoint = Objects.requireNonNull(nsxtManagerEndpoint);
            return this;
        }
        public Builder provisioningSubnetCidr(String provisioningSubnetCidr) {
            this.provisioningSubnetCidr = Objects.requireNonNull(provisioningSubnetCidr);
            return this;
        }
        public Builder resourceGroupName(String resourceGroupName) {
            this.resourceGroupName = Objects.requireNonNull(resourceGroupName);
            return this;
        }
        public Builder skuName(String skuName) {
            this.skuName = Objects.requireNonNull(skuName);
            return this;
        }
        public Builder tags(Map<String,String> tags) {
            this.tags = Objects.requireNonNull(tags);
            return this;
        }
        public Builder vcenterCertificateThumbprint(String vcenterCertificateThumbprint) {
            this.vcenterCertificateThumbprint = Objects.requireNonNull(vcenterCertificateThumbprint);
            return this;
        }
        public Builder vcsaEndpoint(String vcsaEndpoint) {
            this.vcsaEndpoint = Objects.requireNonNull(vcsaEndpoint);
            return this;
        }
        public Builder vmotionSubnetCidr(String vmotionSubnetCidr) {
            this.vmotionSubnetCidr = Objects.requireNonNull(vmotionSubnetCidr);
            return this;
        }        public GetPrivateCloudResult build() {
            return new GetPrivateCloudResult(circuits, hcxCloudManagerEndpoint, id, internetConnectionEnabled, location, managementClusters, managementSubnetCidr, name, networkSubnetCidr, nsxtCertificateThumbprint, nsxtManagerEndpoint, provisioningSubnetCidr, resourceGroupName, skuName, tags, vcenterCertificateThumbprint, vcsaEndpoint, vmotionSubnetCidr);
        }
    }
}
