// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.core.outputs;

import com.pulumi.azure.core.outputs.GetResourcesResource;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class GetResourcesResult {
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private final String id;
    /**
     * @return The name of this Resource.
     * 
     */
    private final String name;
    private final @Nullable Map<String,String> requiredTags;
    private final String resourceGroupName;
    /**
     * @return One or more `resource` blocks as defined below.
     * 
     */
    private final List<GetResourcesResource> resources;
    /**
     * @return The type of this Resource. (e.g. `Microsoft.Network/virtualNetworks`).
     * 
     */
    private final String type;

    @CustomType.Constructor
    private GetResourcesResult(
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("name") String name,
        @CustomType.Parameter("requiredTags") @Nullable Map<String,String> requiredTags,
        @CustomType.Parameter("resourceGroupName") String resourceGroupName,
        @CustomType.Parameter("resources") List<GetResourcesResource> resources,
        @CustomType.Parameter("type") String type) {
        this.id = id;
        this.name = name;
        this.requiredTags = requiredTags;
        this.resourceGroupName = resourceGroupName;
        this.resources = resources;
        this.type = type;
    }

    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The name of this Resource.
     * 
     */
    public String name() {
        return this.name;
    }
    public Map<String,String> requiredTags() {
        return this.requiredTags == null ? Map.of() : this.requiredTags;
    }
    public String resourceGroupName() {
        return this.resourceGroupName;
    }
    /**
     * @return One or more `resource` blocks as defined below.
     * 
     */
    public List<GetResourcesResource> resources() {
        return this.resources;
    }
    /**
     * @return The type of this Resource. (e.g. `Microsoft.Network/virtualNetworks`).
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetResourcesResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String id;
        private String name;
        private @Nullable Map<String,String> requiredTags;
        private String resourceGroupName;
        private List<GetResourcesResource> resources;
        private String type;

        public Builder() {
    	      // Empty
        }

        public Builder(GetResourcesResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.requiredTags = defaults.requiredTags;
    	      this.resourceGroupName = defaults.resourceGroupName;
    	      this.resources = defaults.resources;
    	      this.type = defaults.type;
        }

        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        public Builder requiredTags(@Nullable Map<String,String> requiredTags) {
            this.requiredTags = requiredTags;
            return this;
        }
        public Builder resourceGroupName(String resourceGroupName) {
            this.resourceGroupName = Objects.requireNonNull(resourceGroupName);
            return this;
        }
        public Builder resources(List<GetResourcesResource> resources) {
            this.resources = Objects.requireNonNull(resources);
            return this;
        }
        public Builder resources(GetResourcesResource... resources) {
            return resources(List.of(resources));
        }
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }        public GetResourcesResult build() {
            return new GetResourcesResult(id, name, requiredTags, resourceGroupName, resources, type);
        }
    }
}
