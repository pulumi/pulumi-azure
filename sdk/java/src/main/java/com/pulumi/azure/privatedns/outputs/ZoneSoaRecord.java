// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.privatedns.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ZoneSoaRecord {
    /**
     * @return The email contact for the SOA record.
     * 
     */
    private final String email;
    /**
     * @return The expire time for the SOA record. Defaults to `2419200`.
     * 
     */
    private final @Nullable Integer expireTime;
    /**
     * @return The fully qualified domain name of the Record Set.
     * 
     */
    private final @Nullable String fqdn;
    /**
     * @return The domain name of the authoritative name server for the SOA record.
     * 
     */
    private final @Nullable String hostName;
    /**
     * @return The minimum Time To Live for the SOA record. By convention, it is used to determine the negative caching duration. Defaults to `10`.
     * 
     */
    private final @Nullable Integer minimumTtl;
    /**
     * @return The refresh time for the SOA record. Defaults to `3600`.
     * 
     */
    private final @Nullable Integer refreshTime;
    /**
     * @return The retry time for the SOA record. Defaults to `300`.
     * 
     */
    private final @Nullable Integer retryTime;
    /**
     * @return The serial number for the SOA record.
     * 
     */
    private final @Nullable Integer serialNumber;
    /**
     * @return A mapping of tags to assign to the Record Set.
     * 
     */
    private final @Nullable Map<String,String> tags;
    /**
     * @return The Time To Live of the SOA Record in seconds. Defaults to `3600`.
     * 
     */
    private final @Nullable Integer ttl;

    @CustomType.Constructor
    private ZoneSoaRecord(
        @CustomType.Parameter("email") String email,
        @CustomType.Parameter("expireTime") @Nullable Integer expireTime,
        @CustomType.Parameter("fqdn") @Nullable String fqdn,
        @CustomType.Parameter("hostName") @Nullable String hostName,
        @CustomType.Parameter("minimumTtl") @Nullable Integer minimumTtl,
        @CustomType.Parameter("refreshTime") @Nullable Integer refreshTime,
        @CustomType.Parameter("retryTime") @Nullable Integer retryTime,
        @CustomType.Parameter("serialNumber") @Nullable Integer serialNumber,
        @CustomType.Parameter("tags") @Nullable Map<String,String> tags,
        @CustomType.Parameter("ttl") @Nullable Integer ttl) {
        this.email = email;
        this.expireTime = expireTime;
        this.fqdn = fqdn;
        this.hostName = hostName;
        this.minimumTtl = minimumTtl;
        this.refreshTime = refreshTime;
        this.retryTime = retryTime;
        this.serialNumber = serialNumber;
        this.tags = tags;
        this.ttl = ttl;
    }

    /**
     * @return The email contact for the SOA record.
     * 
     */
    public String email() {
        return this.email;
    }
    /**
     * @return The expire time for the SOA record. Defaults to `2419200`.
     * 
     */
    public Optional<Integer> expireTime() {
        return Optional.ofNullable(this.expireTime);
    }
    /**
     * @return The fully qualified domain name of the Record Set.
     * 
     */
    public Optional<String> fqdn() {
        return Optional.ofNullable(this.fqdn);
    }
    /**
     * @return The domain name of the authoritative name server for the SOA record.
     * 
     */
    public Optional<String> hostName() {
        return Optional.ofNullable(this.hostName);
    }
    /**
     * @return The minimum Time To Live for the SOA record. By convention, it is used to determine the negative caching duration. Defaults to `10`.
     * 
     */
    public Optional<Integer> minimumTtl() {
        return Optional.ofNullable(this.minimumTtl);
    }
    /**
     * @return The refresh time for the SOA record. Defaults to `3600`.
     * 
     */
    public Optional<Integer> refreshTime() {
        return Optional.ofNullable(this.refreshTime);
    }
    /**
     * @return The retry time for the SOA record. Defaults to `300`.
     * 
     */
    public Optional<Integer> retryTime() {
        return Optional.ofNullable(this.retryTime);
    }
    /**
     * @return The serial number for the SOA record.
     * 
     */
    public Optional<Integer> serialNumber() {
        return Optional.ofNullable(this.serialNumber);
    }
    /**
     * @return A mapping of tags to assign to the Record Set.
     * 
     */
    public Map<String,String> tags() {
        return this.tags == null ? Map.of() : this.tags;
    }
    /**
     * @return The Time To Live of the SOA Record in seconds. Defaults to `3600`.
     * 
     */
    public Optional<Integer> ttl() {
        return Optional.ofNullable(this.ttl);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ZoneSoaRecord defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String email;
        private @Nullable Integer expireTime;
        private @Nullable String fqdn;
        private @Nullable String hostName;
        private @Nullable Integer minimumTtl;
        private @Nullable Integer refreshTime;
        private @Nullable Integer retryTime;
        private @Nullable Integer serialNumber;
        private @Nullable Map<String,String> tags;
        private @Nullable Integer ttl;

        public Builder() {
    	      // Empty
        }

        public Builder(ZoneSoaRecord defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.email = defaults.email;
    	      this.expireTime = defaults.expireTime;
    	      this.fqdn = defaults.fqdn;
    	      this.hostName = defaults.hostName;
    	      this.minimumTtl = defaults.minimumTtl;
    	      this.refreshTime = defaults.refreshTime;
    	      this.retryTime = defaults.retryTime;
    	      this.serialNumber = defaults.serialNumber;
    	      this.tags = defaults.tags;
    	      this.ttl = defaults.ttl;
        }

        public Builder email(String email) {
            this.email = Objects.requireNonNull(email);
            return this;
        }
        public Builder expireTime(@Nullable Integer expireTime) {
            this.expireTime = expireTime;
            return this;
        }
        public Builder fqdn(@Nullable String fqdn) {
            this.fqdn = fqdn;
            return this;
        }
        public Builder hostName(@Nullable String hostName) {
            this.hostName = hostName;
            return this;
        }
        public Builder minimumTtl(@Nullable Integer minimumTtl) {
            this.minimumTtl = minimumTtl;
            return this;
        }
        public Builder refreshTime(@Nullable Integer refreshTime) {
            this.refreshTime = refreshTime;
            return this;
        }
        public Builder retryTime(@Nullable Integer retryTime) {
            this.retryTime = retryTime;
            return this;
        }
        public Builder serialNumber(@Nullable Integer serialNumber) {
            this.serialNumber = serialNumber;
            return this;
        }
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = tags;
            return this;
        }
        public Builder ttl(@Nullable Integer ttl) {
            this.ttl = ttl;
            return this;
        }        public ZoneSoaRecord build() {
            return new ZoneSoaRecord(email, expireTime, fqdn, hostName, minimumTtl, refreshTime, retryTime, serialNumber, tags, ttl);
        }
    }
}
