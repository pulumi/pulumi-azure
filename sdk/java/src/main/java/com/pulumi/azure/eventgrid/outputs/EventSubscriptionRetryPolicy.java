// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.eventgrid.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.util.Objects;

@CustomType
public final class EventSubscriptionRetryPolicy {
    /**
     * @return Specifies the time to live (in minutes) for events. Supported range is `1` to `1440`. See [official documentation](https://docs.microsoft.com/azure/event-grid/manage-event-delivery#set-retry-policy) for more details.
     * 
     */
    private Integer eventTimeToLive;
    /**
     * @return Specifies the maximum number of delivery retry attempts for events.
     * 
     */
    private Integer maxDeliveryAttempts;

    private EventSubscriptionRetryPolicy() {}
    /**
     * @return Specifies the time to live (in minutes) for events. Supported range is `1` to `1440`. See [official documentation](https://docs.microsoft.com/azure/event-grid/manage-event-delivery#set-retry-policy) for more details.
     * 
     */
    public Integer eventTimeToLive() {
        return this.eventTimeToLive;
    }
    /**
     * @return Specifies the maximum number of delivery retry attempts for events.
     * 
     */
    public Integer maxDeliveryAttempts() {
        return this.maxDeliveryAttempts;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(EventSubscriptionRetryPolicy defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer eventTimeToLive;
        private Integer maxDeliveryAttempts;
        public Builder() {}
        public Builder(EventSubscriptionRetryPolicy defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.eventTimeToLive = defaults.eventTimeToLive;
    	      this.maxDeliveryAttempts = defaults.maxDeliveryAttempts;
        }

        @CustomType.Setter
        public Builder eventTimeToLive(Integer eventTimeToLive) {
            if (eventTimeToLive == null) {
              throw new MissingRequiredPropertyException("EventSubscriptionRetryPolicy", "eventTimeToLive");
            }
            this.eventTimeToLive = eventTimeToLive;
            return this;
        }
        @CustomType.Setter
        public Builder maxDeliveryAttempts(Integer maxDeliveryAttempts) {
            if (maxDeliveryAttempts == null) {
              throw new MissingRequiredPropertyException("EventSubscriptionRetryPolicy", "maxDeliveryAttempts");
            }
            this.maxDeliveryAttempts = maxDeliveryAttempts;
            return this;
        }
        public EventSubscriptionRetryPolicy build() {
            final var _resultValue = new EventSubscriptionRetryPolicy();
            _resultValue.eventTimeToLive = eventTimeToLive;
            _resultValue.maxDeliveryAttempts = maxDeliveryAttempts;
            return _resultValue;
        }
    }
}
