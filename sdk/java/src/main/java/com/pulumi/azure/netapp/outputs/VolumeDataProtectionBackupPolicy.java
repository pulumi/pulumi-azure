// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.netapp.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class VolumeDataProtectionBackupPolicy {
    /**
     * @return Resource ID of the backup policy to apply to the volume.
     * 
     */
    private String backupPolicyId;
    /**
     * @return Resource ID of the backup backup vault to associate this volume to.
     * 
     */
    private String backupVaultId;
    /**
     * @return Enables the backup policy on the volume, defaults to `true`.
     * 
     * For more information on Azure NetApp Files Backup feature please see [Understand Azure NetApp Files backup](https://learn.microsoft.com/en-us/azure/azure-netapp-files/backup-introduction)
     * 
     */
    private @Nullable Boolean policyEnabled;

    private VolumeDataProtectionBackupPolicy() {}
    /**
     * @return Resource ID of the backup policy to apply to the volume.
     * 
     */
    public String backupPolicyId() {
        return this.backupPolicyId;
    }
    /**
     * @return Resource ID of the backup backup vault to associate this volume to.
     * 
     */
    public String backupVaultId() {
        return this.backupVaultId;
    }
    /**
     * @return Enables the backup policy on the volume, defaults to `true`.
     * 
     * For more information on Azure NetApp Files Backup feature please see [Understand Azure NetApp Files backup](https://learn.microsoft.com/en-us/azure/azure-netapp-files/backup-introduction)
     * 
     */
    public Optional<Boolean> policyEnabled() {
        return Optional.ofNullable(this.policyEnabled);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(VolumeDataProtectionBackupPolicy defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String backupPolicyId;
        private String backupVaultId;
        private @Nullable Boolean policyEnabled;
        public Builder() {}
        public Builder(VolumeDataProtectionBackupPolicy defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.backupPolicyId = defaults.backupPolicyId;
    	      this.backupVaultId = defaults.backupVaultId;
    	      this.policyEnabled = defaults.policyEnabled;
        }

        @CustomType.Setter
        public Builder backupPolicyId(String backupPolicyId) {
            if (backupPolicyId == null) {
              throw new MissingRequiredPropertyException("VolumeDataProtectionBackupPolicy", "backupPolicyId");
            }
            this.backupPolicyId = backupPolicyId;
            return this;
        }
        @CustomType.Setter
        public Builder backupVaultId(String backupVaultId) {
            if (backupVaultId == null) {
              throw new MissingRequiredPropertyException("VolumeDataProtectionBackupPolicy", "backupVaultId");
            }
            this.backupVaultId = backupVaultId;
            return this;
        }
        @CustomType.Setter
        public Builder policyEnabled(@Nullable Boolean policyEnabled) {

            this.policyEnabled = policyEnabled;
            return this;
        }
        public VolumeDataProtectionBackupPolicy build() {
            final var _resultValue = new VolumeDataProtectionBackupPolicy();
            _resultValue.backupPolicyId = backupPolicyId;
            _resultValue.backupVaultId = backupVaultId;
            _resultValue.policyEnabled = policyEnabled;
            return _resultValue;
        }
    }
}
