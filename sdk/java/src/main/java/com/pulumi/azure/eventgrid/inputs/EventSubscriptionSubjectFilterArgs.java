// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.eventgrid.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class EventSubscriptionSubjectFilterArgs extends com.pulumi.resources.ResourceArgs {

    public static final EventSubscriptionSubjectFilterArgs Empty = new EventSubscriptionSubjectFilterArgs();

    /**
     * Specifies if `subject_begins_with` and `subject_ends_with` case sensitive. This value defaults to `false`.
     * 
     */
    @Import(name="caseSensitive")
    private @Nullable Output<Boolean> caseSensitive;

    /**
     * @return Specifies if `subject_begins_with` and `subject_ends_with` case sensitive. This value defaults to `false`.
     * 
     */
    public Optional<Output<Boolean>> caseSensitive() {
        return Optional.ofNullable(this.caseSensitive);
    }

    /**
     * A string to filter events for an event subscription based on a resource path prefix.
     * 
     */
    @Import(name="subjectBeginsWith")
    private @Nullable Output<String> subjectBeginsWith;

    /**
     * @return A string to filter events for an event subscription based on a resource path prefix.
     * 
     */
    public Optional<Output<String>> subjectBeginsWith() {
        return Optional.ofNullable(this.subjectBeginsWith);
    }

    /**
     * A string to filter events for an event subscription based on a resource path suffix.
     * 
     */
    @Import(name="subjectEndsWith")
    private @Nullable Output<String> subjectEndsWith;

    /**
     * @return A string to filter events for an event subscription based on a resource path suffix.
     * 
     */
    public Optional<Output<String>> subjectEndsWith() {
        return Optional.ofNullable(this.subjectEndsWith);
    }

    private EventSubscriptionSubjectFilterArgs() {}

    private EventSubscriptionSubjectFilterArgs(EventSubscriptionSubjectFilterArgs $) {
        this.caseSensitive = $.caseSensitive;
        this.subjectBeginsWith = $.subjectBeginsWith;
        this.subjectEndsWith = $.subjectEndsWith;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(EventSubscriptionSubjectFilterArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private EventSubscriptionSubjectFilterArgs $;

        public Builder() {
            $ = new EventSubscriptionSubjectFilterArgs();
        }

        public Builder(EventSubscriptionSubjectFilterArgs defaults) {
            $ = new EventSubscriptionSubjectFilterArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param caseSensitive Specifies if `subject_begins_with` and `subject_ends_with` case sensitive. This value defaults to `false`.
         * 
         * @return builder
         * 
         */
        public Builder caseSensitive(@Nullable Output<Boolean> caseSensitive) {
            $.caseSensitive = caseSensitive;
            return this;
        }

        /**
         * @param caseSensitive Specifies if `subject_begins_with` and `subject_ends_with` case sensitive. This value defaults to `false`.
         * 
         * @return builder
         * 
         */
        public Builder caseSensitive(Boolean caseSensitive) {
            return caseSensitive(Output.of(caseSensitive));
        }

        /**
         * @param subjectBeginsWith A string to filter events for an event subscription based on a resource path prefix.
         * 
         * @return builder
         * 
         */
        public Builder subjectBeginsWith(@Nullable Output<String> subjectBeginsWith) {
            $.subjectBeginsWith = subjectBeginsWith;
            return this;
        }

        /**
         * @param subjectBeginsWith A string to filter events for an event subscription based on a resource path prefix.
         * 
         * @return builder
         * 
         */
        public Builder subjectBeginsWith(String subjectBeginsWith) {
            return subjectBeginsWith(Output.of(subjectBeginsWith));
        }

        /**
         * @param subjectEndsWith A string to filter events for an event subscription based on a resource path suffix.
         * 
         * @return builder
         * 
         */
        public Builder subjectEndsWith(@Nullable Output<String> subjectEndsWith) {
            $.subjectEndsWith = subjectEndsWith;
            return this;
        }

        /**
         * @param subjectEndsWith A string to filter events for an event subscription based on a resource path suffix.
         * 
         * @return builder
         * 
         */
        public Builder subjectEndsWith(String subjectEndsWith) {
            return subjectEndsWith(Output.of(subjectEndsWith));
        }

        public EventSubscriptionSubjectFilterArgs build() {
            return $;
        }
    }

}
