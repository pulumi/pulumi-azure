// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.communication;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class EmailServiceDomainArgs extends com.pulumi.resources.ResourceArgs {

    public static final EmailServiceDomainArgs Empty = new EmailServiceDomainArgs();

    /**
     * Describes how a Domains resource is being managed. Possible values are `AzureManaged`, `CustomerManaged`, `CustomerManagedInExchangeOnline`. Changing this forces a new Email Communication Service to be created.
     * 
     */
    @Import(name="domainManagement", required=true)
    private Output<String> domainManagement;

    /**
     * @return Describes how a Domains resource is being managed. Possible values are `AzureManaged`, `CustomerManaged`, `CustomerManagedInExchangeOnline`. Changing this forces a new Email Communication Service to be created.
     * 
     */
    public Output<String> domainManagement() {
        return this.domainManagement;
    }

    /**
     * The resource ID of the Email Communication Service where the Domain belongs to. Changing this forces a new Email Communication Service to be created.
     * 
     */
    @Import(name="emailServiceId", required=true)
    private Output<String> emailServiceId;

    /**
     * @return The resource ID of the Email Communication Service where the Domain belongs to. Changing this forces a new Email Communication Service to be created.
     * 
     */
    public Output<String> emailServiceId() {
        return this.emailServiceId;
    }

    /**
     * The name of the Email Communication Service resource. If `domain_management` is `AzureManaged`, the name must be `AzureManagedDomain`. Changing this forces a new Email Communication Service to be created.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the Email Communication Service resource. If `domain_management` is `AzureManaged`, the name must be `AzureManagedDomain`. Changing this forces a new Email Communication Service to be created.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * A mapping of tags which should be assigned to the Email Communication Service.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return A mapping of tags which should be assigned to the Email Communication Service.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * Describes user engagement tracking is enabled or disabled. Defaults to `false`.
     * 
     */
    @Import(name="userEngagementTrackingEnabled")
    private @Nullable Output<Boolean> userEngagementTrackingEnabled;

    /**
     * @return Describes user engagement tracking is enabled or disabled. Defaults to `false`.
     * 
     */
    public Optional<Output<Boolean>> userEngagementTrackingEnabled() {
        return Optional.ofNullable(this.userEngagementTrackingEnabled);
    }

    private EmailServiceDomainArgs() {}

    private EmailServiceDomainArgs(EmailServiceDomainArgs $) {
        this.domainManagement = $.domainManagement;
        this.emailServiceId = $.emailServiceId;
        this.name = $.name;
        this.tags = $.tags;
        this.userEngagementTrackingEnabled = $.userEngagementTrackingEnabled;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(EmailServiceDomainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private EmailServiceDomainArgs $;

        public Builder() {
            $ = new EmailServiceDomainArgs();
        }

        public Builder(EmailServiceDomainArgs defaults) {
            $ = new EmailServiceDomainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param domainManagement Describes how a Domains resource is being managed. Possible values are `AzureManaged`, `CustomerManaged`, `CustomerManagedInExchangeOnline`. Changing this forces a new Email Communication Service to be created.
         * 
         * @return builder
         * 
         */
        public Builder domainManagement(Output<String> domainManagement) {
            $.domainManagement = domainManagement;
            return this;
        }

        /**
         * @param domainManagement Describes how a Domains resource is being managed. Possible values are `AzureManaged`, `CustomerManaged`, `CustomerManagedInExchangeOnline`. Changing this forces a new Email Communication Service to be created.
         * 
         * @return builder
         * 
         */
        public Builder domainManagement(String domainManagement) {
            return domainManagement(Output.of(domainManagement));
        }

        /**
         * @param emailServiceId The resource ID of the Email Communication Service where the Domain belongs to. Changing this forces a new Email Communication Service to be created.
         * 
         * @return builder
         * 
         */
        public Builder emailServiceId(Output<String> emailServiceId) {
            $.emailServiceId = emailServiceId;
            return this;
        }

        /**
         * @param emailServiceId The resource ID of the Email Communication Service where the Domain belongs to. Changing this forces a new Email Communication Service to be created.
         * 
         * @return builder
         * 
         */
        public Builder emailServiceId(String emailServiceId) {
            return emailServiceId(Output.of(emailServiceId));
        }

        /**
         * @param name The name of the Email Communication Service resource. If `domain_management` is `AzureManaged`, the name must be `AzureManagedDomain`. Changing this forces a new Email Communication Service to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the Email Communication Service resource. If `domain_management` is `AzureManaged`, the name must be `AzureManagedDomain`. Changing this forces a new Email Communication Service to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param tags A mapping of tags which should be assigned to the Email Communication Service.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags A mapping of tags which should be assigned to the Email Communication Service.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param userEngagementTrackingEnabled Describes user engagement tracking is enabled or disabled. Defaults to `false`.
         * 
         * @return builder
         * 
         */
        public Builder userEngagementTrackingEnabled(@Nullable Output<Boolean> userEngagementTrackingEnabled) {
            $.userEngagementTrackingEnabled = userEngagementTrackingEnabled;
            return this;
        }

        /**
         * @param userEngagementTrackingEnabled Describes user engagement tracking is enabled or disabled. Defaults to `false`.
         * 
         * @return builder
         * 
         */
        public Builder userEngagementTrackingEnabled(Boolean userEngagementTrackingEnabled) {
            return userEngagementTrackingEnabled(Output.of(userEngagementTrackingEnabled));
        }

        public EmailServiceDomainArgs build() {
            if ($.domainManagement == null) {
                throw new MissingRequiredPropertyException("EmailServiceDomainArgs", "domainManagement");
            }
            if ($.emailServiceId == null) {
                throw new MissingRequiredPropertyException("EmailServiceDomainArgs", "emailServiceId");
            }
            return $;
        }
    }

}
