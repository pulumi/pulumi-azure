// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.mobile.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class NetworkPacketCoreControlPlaneLocalDiagnosticsAccessArgs extends com.pulumi.resources.ResourceArgs {

    public static final NetworkPacketCoreControlPlaneLocalDiagnosticsAccessArgs Empty = new NetworkPacketCoreControlPlaneLocalDiagnosticsAccessArgs();

    /**
     * How to authenticate users to access local diagnostics APIs. Possible values are `AAD` and `Password`.
     * 
     */
    @Import(name="authenticationType", required=true)
    private Output<String> authenticationType;

    /**
     * @return How to authenticate users to access local diagnostics APIs. Possible values are `AAD` and `Password`.
     * 
     */
    public Output<String> authenticationType() {
        return this.authenticationType;
    }

    /**
     * The versionless certificate URL used to secure local access to packet core diagnostics over local APIs by the Kubernetes ingress.
     * 
     */
    @Import(name="httpsServerCertificateUrl")
    private @Nullable Output<String> httpsServerCertificateUrl;

    /**
     * @return The versionless certificate URL used to secure local access to packet core diagnostics over local APIs by the Kubernetes ingress.
     * 
     */
    public Optional<Output<String>> httpsServerCertificateUrl() {
        return Optional.ofNullable(this.httpsServerCertificateUrl);
    }

    private NetworkPacketCoreControlPlaneLocalDiagnosticsAccessArgs() {}

    private NetworkPacketCoreControlPlaneLocalDiagnosticsAccessArgs(NetworkPacketCoreControlPlaneLocalDiagnosticsAccessArgs $) {
        this.authenticationType = $.authenticationType;
        this.httpsServerCertificateUrl = $.httpsServerCertificateUrl;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(NetworkPacketCoreControlPlaneLocalDiagnosticsAccessArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private NetworkPacketCoreControlPlaneLocalDiagnosticsAccessArgs $;

        public Builder() {
            $ = new NetworkPacketCoreControlPlaneLocalDiagnosticsAccessArgs();
        }

        public Builder(NetworkPacketCoreControlPlaneLocalDiagnosticsAccessArgs defaults) {
            $ = new NetworkPacketCoreControlPlaneLocalDiagnosticsAccessArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param authenticationType How to authenticate users to access local diagnostics APIs. Possible values are `AAD` and `Password`.
         * 
         * @return builder
         * 
         */
        public Builder authenticationType(Output<String> authenticationType) {
            $.authenticationType = authenticationType;
            return this;
        }

        /**
         * @param authenticationType How to authenticate users to access local diagnostics APIs. Possible values are `AAD` and `Password`.
         * 
         * @return builder
         * 
         */
        public Builder authenticationType(String authenticationType) {
            return authenticationType(Output.of(authenticationType));
        }

        /**
         * @param httpsServerCertificateUrl The versionless certificate URL used to secure local access to packet core diagnostics over local APIs by the Kubernetes ingress.
         * 
         * @return builder
         * 
         */
        public Builder httpsServerCertificateUrl(@Nullable Output<String> httpsServerCertificateUrl) {
            $.httpsServerCertificateUrl = httpsServerCertificateUrl;
            return this;
        }

        /**
         * @param httpsServerCertificateUrl The versionless certificate URL used to secure local access to packet core diagnostics over local APIs by the Kubernetes ingress.
         * 
         * @return builder
         * 
         */
        public Builder httpsServerCertificateUrl(String httpsServerCertificateUrl) {
            return httpsServerCertificateUrl(Output.of(httpsServerCertificateUrl));
        }

        public NetworkPacketCoreControlPlaneLocalDiagnosticsAccessArgs build() {
            if ($.authenticationType == null) {
                throw new MissingRequiredPropertyException("NetworkPacketCoreControlPlaneLocalDiagnosticsAccessArgs", "authenticationType");
            }
            return $;
        }
    }

}
