// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.apimanagement.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetGroupResult {
    private String apiManagementName;
    /**
     * @return The description of this API Management Group.
     * 
     */
    private String description;
    /**
     * @return The display name of this API Management Group.
     * 
     */
    private String displayName;
    /**
     * @return The identifier of the external Group.
     * 
     */
    private String externalId;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private String name;
    private String resourceGroupName;
    /**
     * @return The type of this API Management Group, such as `custom` or `external`.
     * 
     */
    private String type;

    private GetGroupResult() {}
    public String apiManagementName() {
        return this.apiManagementName;
    }
    /**
     * @return The description of this API Management Group.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return The display name of this API Management Group.
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return The identifier of the external Group.
     * 
     */
    public String externalId() {
        return this.externalId;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public String name() {
        return this.name;
    }
    public String resourceGroupName() {
        return this.resourceGroupName;
    }
    /**
     * @return The type of this API Management Group, such as `custom` or `external`.
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetGroupResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String apiManagementName;
        private String description;
        private String displayName;
        private String externalId;
        private String id;
        private String name;
        private String resourceGroupName;
        private String type;
        public Builder() {}
        public Builder(GetGroupResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.apiManagementName = defaults.apiManagementName;
    	      this.description = defaults.description;
    	      this.displayName = defaults.displayName;
    	      this.externalId = defaults.externalId;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.resourceGroupName = defaults.resourceGroupName;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder apiManagementName(String apiManagementName) {
            if (apiManagementName == null) {
              throw new MissingRequiredPropertyException("GetGroupResult", "apiManagementName");
            }
            this.apiManagementName = apiManagementName;
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetGroupResult", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(String displayName) {
            if (displayName == null) {
              throw new MissingRequiredPropertyException("GetGroupResult", "displayName");
            }
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder externalId(String externalId) {
            if (externalId == null) {
              throw new MissingRequiredPropertyException("GetGroupResult", "externalId");
            }
            this.externalId = externalId;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetGroupResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetGroupResult", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder resourceGroupName(String resourceGroupName) {
            if (resourceGroupName == null) {
              throw new MissingRequiredPropertyException("GetGroupResult", "resourceGroupName");
            }
            this.resourceGroupName = resourceGroupName;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            if (type == null) {
              throw new MissingRequiredPropertyException("GetGroupResult", "type");
            }
            this.type = type;
            return this;
        }
        public GetGroupResult build() {
            final var _resultValue = new GetGroupResult();
            _resultValue.apiManagementName = apiManagementName;
            _resultValue.description = description;
            _resultValue.displayName = displayName;
            _resultValue.externalId = externalId;
            _resultValue.id = id;
            _resultValue.name = name;
            _resultValue.resourceGroupName = resourceGroupName;
            _resultValue.type = type;
            return _resultValue;
        }
    }
}
