// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.dynatrace;

import com.pulumi.azure.Utilities;
import com.pulumi.azure.dynatrace.TagRulesArgs;
import com.pulumi.azure.dynatrace.inputs.TagRulesState;
import com.pulumi.azure.dynatrace.outputs.TagRulesLogRule;
import com.pulumi.azure.dynatrace.outputs.TagRulesMetricRule;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Manages Dynatrace tag rules.
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## API Providers
 * 
 * &lt;!-- This section is generated, changes will be overwritten --&gt;
 * This resource uses the following Azure API Providers:
 * 
 * * `Dynatrace.Observability`: 2023-04-27
 * 
 * ## Import
 * 
 * Dynatrace tag rules can be imported using the `resource id`, e.g.
 * 
 * ```sh
 * $ pulumi import azure:dynatrace/tagRules:TagRules example /subscriptions/12345678-1234-9876-4563-123456789012/resourceGroups/resGroup1/providers/Dynatrace.Observability/monitors/monitor1/tagRules/tagRules1
 * ```
 * 
 */
@ResourceType(type="azure:dynatrace/tagRules:TagRules")
public class TagRules extends com.pulumi.resources.CustomResource {
    /**
     * Set of rules for sending logs for the Monitor resource. A `log_rule` block as defined below.
     * 
     */
    @Export(name="logRule", refs={TagRulesLogRule.class}, tree="[0]")
    private Output</* @Nullable */ TagRulesLogRule> logRule;

    /**
     * @return Set of rules for sending logs for the Monitor resource. A `log_rule` block as defined below.
     * 
     */
    public Output<Optional<TagRulesLogRule>> logRule() {
        return Codegen.optional(this.logRule);
    }
    /**
     * Set of rules for sending metrics for the Monitor resource. A `metric_rule` block as defined below.
     * 
     */
    @Export(name="metricRule", refs={TagRulesMetricRule.class}, tree="[0]")
    private Output</* @Nullable */ TagRulesMetricRule> metricRule;

    /**
     * @return Set of rules for sending metrics for the Monitor resource. A `metric_rule` block as defined below.
     * 
     */
    public Output<Optional<TagRulesMetricRule>> metricRule() {
        return Codegen.optional(this.metricRule);
    }
    /**
     * Name of the Dynatrace monitor. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="monitorId", refs={String.class}, tree="[0]")
    private Output<String> monitorId;

    /**
     * @return Name of the Dynatrace monitor. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> monitorId() {
        return this.monitorId;
    }
    /**
     * Name of the Dynatrace tag rules. Currently, the only supported value is `default`. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return Name of the Dynatrace tag rules. Currently, the only supported value is `default`. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public TagRules(java.lang.String name) {
        this(name, TagRulesArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public TagRules(java.lang.String name, TagRulesArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public TagRules(java.lang.String name, TagRulesArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:dynatrace/tagRules:TagRules", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private TagRules(java.lang.String name, Output<java.lang.String> id, @Nullable TagRulesState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:dynatrace/tagRules:TagRules", name, state, makeResourceOptions(options, id), false);
    }

    private static TagRulesArgs makeArgs(TagRulesArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? TagRulesArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static TagRules get(java.lang.String name, Output<java.lang.String> id, @Nullable TagRulesState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new TagRules(name, id, state, options);
    }
}
