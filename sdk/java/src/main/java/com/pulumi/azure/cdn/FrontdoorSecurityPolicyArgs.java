// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.cdn;

import com.pulumi.azure.cdn.inputs.FrontdoorSecurityPolicySecurityPoliciesArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class FrontdoorSecurityPolicyArgs extends com.pulumi.resources.ResourceArgs {

    public static final FrontdoorSecurityPolicyArgs Empty = new FrontdoorSecurityPolicyArgs();

    /**
     * The Front Door Profile Resource Id that is linked to this Front Door Security Policy. Changing this forces a new Front Door Security Policy to be created.
     * 
     */
    @Import(name="cdnFrontdoorProfileId", required=true)
    private Output<String> cdnFrontdoorProfileId;

    /**
     * @return The Front Door Profile Resource Id that is linked to this Front Door Security Policy. Changing this forces a new Front Door Security Policy to be created.
     * 
     */
    public Output<String> cdnFrontdoorProfileId() {
        return this.cdnFrontdoorProfileId;
    }

    /**
     * The name which should be used for this Front Door Security Policy. Possible values must not be an empty string. Changing this forces a new Front Door Security Policy to be created.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name which should be used for this Front Door Security Policy. Possible values must not be an empty string. Changing this forces a new Front Door Security Policy to be created.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * An `security_policies` block as defined below. Changing this forces a new Front Door Security Policy to be created.
     * 
     */
    @Import(name="securityPolicies", required=true)
    private Output<FrontdoorSecurityPolicySecurityPoliciesArgs> securityPolicies;

    /**
     * @return An `security_policies` block as defined below. Changing this forces a new Front Door Security Policy to be created.
     * 
     */
    public Output<FrontdoorSecurityPolicySecurityPoliciesArgs> securityPolicies() {
        return this.securityPolicies;
    }

    private FrontdoorSecurityPolicyArgs() {}

    private FrontdoorSecurityPolicyArgs(FrontdoorSecurityPolicyArgs $) {
        this.cdnFrontdoorProfileId = $.cdnFrontdoorProfileId;
        this.name = $.name;
        this.securityPolicies = $.securityPolicies;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FrontdoorSecurityPolicyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FrontdoorSecurityPolicyArgs $;

        public Builder() {
            $ = new FrontdoorSecurityPolicyArgs();
        }

        public Builder(FrontdoorSecurityPolicyArgs defaults) {
            $ = new FrontdoorSecurityPolicyArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param cdnFrontdoorProfileId The Front Door Profile Resource Id that is linked to this Front Door Security Policy. Changing this forces a new Front Door Security Policy to be created.
         * 
         * @return builder
         * 
         */
        public Builder cdnFrontdoorProfileId(Output<String> cdnFrontdoorProfileId) {
            $.cdnFrontdoorProfileId = cdnFrontdoorProfileId;
            return this;
        }

        /**
         * @param cdnFrontdoorProfileId The Front Door Profile Resource Id that is linked to this Front Door Security Policy. Changing this forces a new Front Door Security Policy to be created.
         * 
         * @return builder
         * 
         */
        public Builder cdnFrontdoorProfileId(String cdnFrontdoorProfileId) {
            return cdnFrontdoorProfileId(Output.of(cdnFrontdoorProfileId));
        }

        /**
         * @param name The name which should be used for this Front Door Security Policy. Possible values must not be an empty string. Changing this forces a new Front Door Security Policy to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name which should be used for this Front Door Security Policy. Possible values must not be an empty string. Changing this forces a new Front Door Security Policy to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param securityPolicies An `security_policies` block as defined below. Changing this forces a new Front Door Security Policy to be created.
         * 
         * @return builder
         * 
         */
        public Builder securityPolicies(Output<FrontdoorSecurityPolicySecurityPoliciesArgs> securityPolicies) {
            $.securityPolicies = securityPolicies;
            return this;
        }

        /**
         * @param securityPolicies An `security_policies` block as defined below. Changing this forces a new Front Door Security Policy to be created.
         * 
         * @return builder
         * 
         */
        public Builder securityPolicies(FrontdoorSecurityPolicySecurityPoliciesArgs securityPolicies) {
            return securityPolicies(Output.of(securityPolicies));
        }

        public FrontdoorSecurityPolicyArgs build() {
            if ($.cdnFrontdoorProfileId == null) {
                throw new MissingRequiredPropertyException("FrontdoorSecurityPolicyArgs", "cdnFrontdoorProfileId");
            }
            if ($.securityPolicies == null) {
                throw new MissingRequiredPropertyException("FrontdoorSecurityPolicyArgs", "securityPolicies");
            }
            return $;
        }
    }

}
