// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.appplatform.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class SpringCloudServiceMarketplaceArgs extends com.pulumi.resources.ResourceArgs {

    public static final SpringCloudServiceMarketplaceArgs Empty = new SpringCloudServiceMarketplaceArgs();

    /**
     * Specifies the plan ID of the 3rd Party Artifact that is being procured.
     * 
     */
    @Import(name="plan", required=true)
    private Output<String> plan;

    /**
     * @return Specifies the plan ID of the 3rd Party Artifact that is being procured.
     * 
     */
    public Output<String> plan() {
        return this.plan;
    }

    /**
     * Specifies the 3rd Party artifact that is being procured.
     * 
     */
    @Import(name="product", required=true)
    private Output<String> product;

    /**
     * @return Specifies the 3rd Party artifact that is being procured.
     * 
     */
    public Output<String> product() {
        return this.product;
    }

    /**
     * Specifies the publisher ID of the 3rd Party Artifact that is being procured.
     * 
     */
    @Import(name="publisher", required=true)
    private Output<String> publisher;

    /**
     * @return Specifies the publisher ID of the 3rd Party Artifact that is being procured.
     * 
     */
    public Output<String> publisher() {
        return this.publisher;
    }

    private SpringCloudServiceMarketplaceArgs() {}

    private SpringCloudServiceMarketplaceArgs(SpringCloudServiceMarketplaceArgs $) {
        this.plan = $.plan;
        this.product = $.product;
        this.publisher = $.publisher;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SpringCloudServiceMarketplaceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SpringCloudServiceMarketplaceArgs $;

        public Builder() {
            $ = new SpringCloudServiceMarketplaceArgs();
        }

        public Builder(SpringCloudServiceMarketplaceArgs defaults) {
            $ = new SpringCloudServiceMarketplaceArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param plan Specifies the plan ID of the 3rd Party Artifact that is being procured.
         * 
         * @return builder
         * 
         */
        public Builder plan(Output<String> plan) {
            $.plan = plan;
            return this;
        }

        /**
         * @param plan Specifies the plan ID of the 3rd Party Artifact that is being procured.
         * 
         * @return builder
         * 
         */
        public Builder plan(String plan) {
            return plan(Output.of(plan));
        }

        /**
         * @param product Specifies the 3rd Party artifact that is being procured.
         * 
         * @return builder
         * 
         */
        public Builder product(Output<String> product) {
            $.product = product;
            return this;
        }

        /**
         * @param product Specifies the 3rd Party artifact that is being procured.
         * 
         * @return builder
         * 
         */
        public Builder product(String product) {
            return product(Output.of(product));
        }

        /**
         * @param publisher Specifies the publisher ID of the 3rd Party Artifact that is being procured.
         * 
         * @return builder
         * 
         */
        public Builder publisher(Output<String> publisher) {
            $.publisher = publisher;
            return this;
        }

        /**
         * @param publisher Specifies the publisher ID of the 3rd Party Artifact that is being procured.
         * 
         * @return builder
         * 
         */
        public Builder publisher(String publisher) {
            return publisher(Output.of(publisher));
        }

        public SpringCloudServiceMarketplaceArgs build() {
            if ($.plan == null) {
                throw new MissingRequiredPropertyException("SpringCloudServiceMarketplaceArgs", "plan");
            }
            if ($.product == null) {
                throw new MissingRequiredPropertyException("SpringCloudServiceMarketplaceArgs", "product");
            }
            if ($.publisher == null) {
                throw new MissingRequiredPropertyException("SpringCloudServiceMarketplaceArgs", "publisher");
            }
            return $;
        }
    }

}
