// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.search;

import com.pulumi.azure.Utilities;
import com.pulumi.azure.search.ServiceArgs;
import com.pulumi.azure.search.inputs.ServiceState;
import com.pulumi.azure.search.outputs.ServiceIdentity;
import com.pulumi.azure.search.outputs.ServiceQueryKey;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Manages a Search Service.
 * 
 * ## Example Usage
 * ```java
 * package generated_program;
 * 
 * import java.util.*;
 * import java.io.*;
 * import java.nio.*;
 * import com.pulumi.*;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var exampleResourceGroup = new ResourceGroup(&#34;exampleResourceGroup&#34;, ResourceGroupArgs.builder()        
 *             .location(&#34;West Europe&#34;)
 *             .build());
 * 
 *         var exampleService = new Service(&#34;exampleService&#34;, ServiceArgs.builder()        
 *             .resourceGroupName(exampleResourceGroup.name())
 *             .location(exampleResourceGroup.location())
 *             .sku(&#34;standard&#34;)
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * Search Services can be imported using the `resource id`, e.g.
 * 
 * ```sh
 *  $ pulumi import azure:search/service:Service example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.Search/searchServices/service1
 * ```
 * 
 */
@ResourceType(type="azure:search/service:Service")
public class Service extends com.pulumi.resources.CustomResource {
    /**
     * A list of IPv4 addresses or CIDRs that are allowed access to the search service endpoint.
     * 
     */
    @Export(name="allowedIps", type=List.class, parameters={String.class})
    private Output</* @Nullable */ List<String>> allowedIps;

    /**
     * @return A list of IPv4 addresses or CIDRs that are allowed access to the search service endpoint.
     * 
     */
    public Output<Optional<List<String>>> allowedIps() {
        return Codegen.optional(this.allowedIps);
    }
    /**
     * An `identity` block as defined below.
     * 
     */
    @Export(name="identity", type=ServiceIdentity.class, parameters={})
    private Output</* @Nullable */ ServiceIdentity> identity;

    /**
     * @return An `identity` block as defined below.
     * 
     */
    public Output<Optional<ServiceIdentity>> identity() {
        return Codegen.optional(this.identity);
    }
    /**
     * The Azure Region where the Search Service should exist. Changing this forces a new Search Service to be created.
     * 
     */
    @Export(name="location", type=String.class, parameters={})
    private Output<String> location;

    /**
     * @return The Azure Region where the Search Service should exist. Changing this forces a new Search Service to be created.
     * 
     */
    public Output<String> location() {
        return this.location;
    }
    /**
     * The Name which should be used for this Search Service. Changing this forces a new Search Service to be created.
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return The Name which should be used for this Search Service. Changing this forces a new Search Service to be created.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The number of partitions which should be created.
     * 
     */
    @Export(name="partitionCount", type=Integer.class, parameters={})
    private Output<Integer> partitionCount;

    /**
     * @return The number of partitions which should be created.
     * 
     */
    public Output<Integer> partitionCount() {
        return this.partitionCount;
    }
    /**
     * The Primary Key used for Search Service Administration.
     * 
     */
    @Export(name="primaryKey", type=String.class, parameters={})
    private Output<String> primaryKey;

    /**
     * @return The Primary Key used for Search Service Administration.
     * 
     */
    public Output<String> primaryKey() {
        return this.primaryKey;
    }
    /**
     * Whether or not public network access is allowed for this resource. Defaults to `true`.
     * 
     */
    @Export(name="publicNetworkAccessEnabled", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> publicNetworkAccessEnabled;

    /**
     * @return Whether or not public network access is allowed for this resource. Defaults to `true`.
     * 
     */
    public Output<Optional<Boolean>> publicNetworkAccessEnabled() {
        return Codegen.optional(this.publicNetworkAccessEnabled);
    }
    /**
     * A `query_keys` block as defined below.
     * 
     */
    @Export(name="queryKeys", type=List.class, parameters={ServiceQueryKey.class})
    private Output<List<ServiceQueryKey>> queryKeys;

    /**
     * @return A `query_keys` block as defined below.
     * 
     */
    public Output<List<ServiceQueryKey>> queryKeys() {
        return this.queryKeys;
    }
    /**
     * The number of replica&#39;s which should be created.
     * 
     */
    @Export(name="replicaCount", type=Integer.class, parameters={})
    private Output<Integer> replicaCount;

    /**
     * @return The number of replica&#39;s which should be created.
     * 
     */
    public Output<Integer> replicaCount() {
        return this.replicaCount;
    }
    /**
     * The name of the Resource Group where the Search Service should exist. Changing this forces a new Search Service to be created.
     * 
     */
    @Export(name="resourceGroupName", type=String.class, parameters={})
    private Output<String> resourceGroupName;

    /**
     * @return The name of the Resource Group where the Search Service should exist. Changing this forces a new Search Service to be created.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }
    /**
     * The Secondary Key used for Search Service Administration.
     * 
     */
    @Export(name="secondaryKey", type=String.class, parameters={})
    private Output<String> secondaryKey;

    /**
     * @return The Secondary Key used for Search Service Administration.
     * 
     */
    public Output<String> secondaryKey() {
        return this.secondaryKey;
    }
    /**
     * The SKU which should be used for this Search Service. Possible values are `basic`, `free`, `standard`, `standard2`, `standard3`, `storage_optimized_l1` and `storage_optimized_l2`. Changing this forces a new Search Service to be created.
     * 
     */
    @Export(name="sku", type=String.class, parameters={})
    private Output<String> sku;

    /**
     * @return The SKU which should be used for this Search Service. Possible values are `basic`, `free`, `standard`, `standard2`, `standard3`, `storage_optimized_l1` and `storage_optimized_l2`. Changing this forces a new Search Service to be created.
     * 
     */
    public Output<String> sku() {
        return this.sku;
    }
    /**
     * A mapping of tags which should be assigned to the Search Service.
     * 
     */
    @Export(name="tags", type=Map.class, parameters={String.class, String.class})
    private Output</* @Nullable */ Map<String,String>> tags;

    /**
     * @return A mapping of tags which should be assigned to the Search Service.
     * 
     */
    public Output<Optional<Map<String,String>>> tags() {
        return Codegen.optional(this.tags);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Service(String name) {
        this(name, ServiceArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Service(String name, ServiceArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Service(String name, ServiceArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:search/service:Service", name, args == null ? ServiceArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private Service(String name, Output<String> id, @Nullable ServiceState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:search/service:Service", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Service get(String name, Output<String> id, @Nullable ServiceState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Service(name, id, state, options);
    }
}
