// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.network.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetSubnetResult {
    private String addressPrefix;
    /**
     * @return The address prefixes for the subnet.
     * 
     */
    private List<String> addressPrefixes;
    private Boolean enforcePrivateLinkEndpointNetworkPolicies;
    private Boolean enforcePrivateLinkServiceNetworkPolicies;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private String name;
    /**
     * @return The ID of the Network Security Group associated with the subnet.
     * 
     */
    private String networkSecurityGroupId;
    /**
     * @return Enable or Disable network policies for the private endpoint on the subnet.
     * 
     */
    private Boolean privateEndpointNetworkPoliciesEnabled;
    /**
     * @return Enable or Disable network policies for the private link service on the subnet.
     * 
     */
    private Boolean privateLinkServiceNetworkPoliciesEnabled;
    private String resourceGroupName;
    /**
     * @return The ID of the Route Table associated with this subnet.
     * 
     */
    private String routeTableId;
    /**
     * @return A list of Service Endpoints within this subnet.
     * 
     */
    private List<String> serviceEndpoints;
    private String virtualNetworkName;

    private GetSubnetResult() {}
    public String addressPrefix() {
        return this.addressPrefix;
    }
    /**
     * @return The address prefixes for the subnet.
     * 
     */
    public List<String> addressPrefixes() {
        return this.addressPrefixes;
    }
    public Boolean enforcePrivateLinkEndpointNetworkPolicies() {
        return this.enforcePrivateLinkEndpointNetworkPolicies;
    }
    public Boolean enforcePrivateLinkServiceNetworkPolicies() {
        return this.enforcePrivateLinkServiceNetworkPolicies;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public String name() {
        return this.name;
    }
    /**
     * @return The ID of the Network Security Group associated with the subnet.
     * 
     */
    public String networkSecurityGroupId() {
        return this.networkSecurityGroupId;
    }
    /**
     * @return Enable or Disable network policies for the private endpoint on the subnet.
     * 
     */
    public Boolean privateEndpointNetworkPoliciesEnabled() {
        return this.privateEndpointNetworkPoliciesEnabled;
    }
    /**
     * @return Enable or Disable network policies for the private link service on the subnet.
     * 
     */
    public Boolean privateLinkServiceNetworkPoliciesEnabled() {
        return this.privateLinkServiceNetworkPoliciesEnabled;
    }
    public String resourceGroupName() {
        return this.resourceGroupName;
    }
    /**
     * @return The ID of the Route Table associated with this subnet.
     * 
     */
    public String routeTableId() {
        return this.routeTableId;
    }
    /**
     * @return A list of Service Endpoints within this subnet.
     * 
     */
    public List<String> serviceEndpoints() {
        return this.serviceEndpoints;
    }
    public String virtualNetworkName() {
        return this.virtualNetworkName;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSubnetResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String addressPrefix;
        private List<String> addressPrefixes;
        private Boolean enforcePrivateLinkEndpointNetworkPolicies;
        private Boolean enforcePrivateLinkServiceNetworkPolicies;
        private String id;
        private String name;
        private String networkSecurityGroupId;
        private Boolean privateEndpointNetworkPoliciesEnabled;
        private Boolean privateLinkServiceNetworkPoliciesEnabled;
        private String resourceGroupName;
        private String routeTableId;
        private List<String> serviceEndpoints;
        private String virtualNetworkName;
        public Builder() {}
        public Builder(GetSubnetResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.addressPrefix = defaults.addressPrefix;
    	      this.addressPrefixes = defaults.addressPrefixes;
    	      this.enforcePrivateLinkEndpointNetworkPolicies = defaults.enforcePrivateLinkEndpointNetworkPolicies;
    	      this.enforcePrivateLinkServiceNetworkPolicies = defaults.enforcePrivateLinkServiceNetworkPolicies;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.networkSecurityGroupId = defaults.networkSecurityGroupId;
    	      this.privateEndpointNetworkPoliciesEnabled = defaults.privateEndpointNetworkPoliciesEnabled;
    	      this.privateLinkServiceNetworkPoliciesEnabled = defaults.privateLinkServiceNetworkPoliciesEnabled;
    	      this.resourceGroupName = defaults.resourceGroupName;
    	      this.routeTableId = defaults.routeTableId;
    	      this.serviceEndpoints = defaults.serviceEndpoints;
    	      this.virtualNetworkName = defaults.virtualNetworkName;
        }

        @CustomType.Setter
        public Builder addressPrefix(String addressPrefix) {
            this.addressPrefix = Objects.requireNonNull(addressPrefix);
            return this;
        }
        @CustomType.Setter
        public Builder addressPrefixes(List<String> addressPrefixes) {
            this.addressPrefixes = Objects.requireNonNull(addressPrefixes);
            return this;
        }
        public Builder addressPrefixes(String... addressPrefixes) {
            return addressPrefixes(List.of(addressPrefixes));
        }
        @CustomType.Setter
        public Builder enforcePrivateLinkEndpointNetworkPolicies(Boolean enforcePrivateLinkEndpointNetworkPolicies) {
            this.enforcePrivateLinkEndpointNetworkPolicies = Objects.requireNonNull(enforcePrivateLinkEndpointNetworkPolicies);
            return this;
        }
        @CustomType.Setter
        public Builder enforcePrivateLinkServiceNetworkPolicies(Boolean enforcePrivateLinkServiceNetworkPolicies) {
            this.enforcePrivateLinkServiceNetworkPolicies = Objects.requireNonNull(enforcePrivateLinkServiceNetworkPolicies);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder networkSecurityGroupId(String networkSecurityGroupId) {
            this.networkSecurityGroupId = Objects.requireNonNull(networkSecurityGroupId);
            return this;
        }
        @CustomType.Setter
        public Builder privateEndpointNetworkPoliciesEnabled(Boolean privateEndpointNetworkPoliciesEnabled) {
            this.privateEndpointNetworkPoliciesEnabled = Objects.requireNonNull(privateEndpointNetworkPoliciesEnabled);
            return this;
        }
        @CustomType.Setter
        public Builder privateLinkServiceNetworkPoliciesEnabled(Boolean privateLinkServiceNetworkPoliciesEnabled) {
            this.privateLinkServiceNetworkPoliciesEnabled = Objects.requireNonNull(privateLinkServiceNetworkPoliciesEnabled);
            return this;
        }
        @CustomType.Setter
        public Builder resourceGroupName(String resourceGroupName) {
            this.resourceGroupName = Objects.requireNonNull(resourceGroupName);
            return this;
        }
        @CustomType.Setter
        public Builder routeTableId(String routeTableId) {
            this.routeTableId = Objects.requireNonNull(routeTableId);
            return this;
        }
        @CustomType.Setter
        public Builder serviceEndpoints(List<String> serviceEndpoints) {
            this.serviceEndpoints = Objects.requireNonNull(serviceEndpoints);
            return this;
        }
        public Builder serviceEndpoints(String... serviceEndpoints) {
            return serviceEndpoints(List.of(serviceEndpoints));
        }
        @CustomType.Setter
        public Builder virtualNetworkName(String virtualNetworkName) {
            this.virtualNetworkName = Objects.requireNonNull(virtualNetworkName);
            return this;
        }
        public GetSubnetResult build() {
            final var o = new GetSubnetResult();
            o.addressPrefix = addressPrefix;
            o.addressPrefixes = addressPrefixes;
            o.enforcePrivateLinkEndpointNetworkPolicies = enforcePrivateLinkEndpointNetworkPolicies;
            o.enforcePrivateLinkServiceNetworkPolicies = enforcePrivateLinkServiceNetworkPolicies;
            o.id = id;
            o.name = name;
            o.networkSecurityGroupId = networkSecurityGroupId;
            o.privateEndpointNetworkPoliciesEnabled = privateEndpointNetworkPoliciesEnabled;
            o.privateLinkServiceNetworkPoliciesEnabled = privateLinkServiceNetworkPoliciesEnabled;
            o.resourceGroupName = resourceGroupName;
            o.routeTableId = routeTableId;
            o.serviceEndpoints = serviceEndpoints;
            o.virtualNetworkName = virtualNetworkName;
            return o;
        }
    }
}
