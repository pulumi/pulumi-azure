// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.core;

import com.pulumi.azure.Utilities;
import com.pulumi.azure.core.SubscriptionPolicyAssignmentArgs;
import com.pulumi.azure.core.inputs.SubscriptionPolicyAssignmentState;
import com.pulumi.azure.core.outputs.SubscriptionPolicyAssignmentIdentity;
import com.pulumi.azure.core.outputs.SubscriptionPolicyAssignmentNonComplianceMessage;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Manages a Subscription Policy Assignment.
 * 
 * ## Example Usage
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.azure.core.CoreFunctions;
 * import com.pulumi.azure.consumption.inputs.GetBudgetSubscriptionArgs;
 * import com.pulumi.azure.policy.Definition;
 * import com.pulumi.azure.policy.DefinitionArgs;
 * import com.pulumi.azure.core.SubscriptionPolicyAssignment;
 * import com.pulumi.azure.core.SubscriptionPolicyAssignmentArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         final var current = CoreFunctions.getSubscription();
 * 
 *         var exampleDefinition = new Definition(&#34;exampleDefinition&#34;, DefinitionArgs.builder()        
 *             .policyType(&#34;Custom&#34;)
 *             .mode(&#34;All&#34;)
 *             .displayName(&#34;Allowed resource types&#34;)
 *             .policyRule(&#34;&#34;&#34;
 * 	{
 *     &#34;if&#34;: {
 *       &#34;not&#34;: {
 *         &#34;field&#34;: &#34;location&#34;,
 *         &#34;equals&#34;: &#34;westeurope&#34;
 *       }
 *     },
 *     &#34;then&#34;: {
 *       &#34;effect&#34;: &#34;Deny&#34;
 *     }
 *   }
 *             &#34;&#34;&#34;)
 *             .build());
 * 
 *         var exampleSubscriptionPolicyAssignment = new SubscriptionPolicyAssignment(&#34;exampleSubscriptionPolicyAssignment&#34;, SubscriptionPolicyAssignmentArgs.builder()        
 *             .policyDefinitionId(exampleDefinition.id())
 *             .subscriptionId(current.applyValue(getBudgetSubscriptionResult -&gt; getBudgetSubscriptionResult.id()))
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * Subscription Policy Assignments can be imported using the `resource id`, e.g.
 * 
 * ```sh
 *  $ pulumi import azure:core/subscriptionPolicyAssignment:SubscriptionPolicyAssignment example /subscriptions/00000000-0000-0000-000000000000/providers/Microsoft.Authorization/policyAssignments/assignment1
 * ```
 * 
 */
@ResourceType(type="azure:core/subscriptionPolicyAssignment:SubscriptionPolicyAssignment")
public class SubscriptionPolicyAssignment extends com.pulumi.resources.CustomResource {
    /**
     * A description which should be used for this Policy Assignment.
     * 
     */
    @Export(name="description", type=String.class, parameters={})
    private Output</* @Nullable */ String> description;

    /**
     * @return A description which should be used for this Policy Assignment.
     * 
     */
    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    /**
     * The Display Name for this Policy Assignment.
     * 
     */
    @Export(name="displayName", type=String.class, parameters={})
    private Output</* @Nullable */ String> displayName;

    /**
     * @return The Display Name for this Policy Assignment.
     * 
     */
    public Output<Optional<String>> displayName() {
        return Codegen.optional(this.displayName);
    }
    /**
     * Specifies if this Policy should be enforced or not?
     * 
     */
    @Export(name="enforce", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> enforce;

    /**
     * @return Specifies if this Policy should be enforced or not?
     * 
     */
    public Output<Optional<Boolean>> enforce() {
        return Codegen.optional(this.enforce);
    }
    /**
     * An `identity` block as defined below.
     * 
     */
    @Export(name="identity", type=SubscriptionPolicyAssignmentIdentity.class, parameters={})
    private Output</* @Nullable */ SubscriptionPolicyAssignmentIdentity> identity;

    /**
     * @return An `identity` block as defined below.
     * 
     */
    public Output<Optional<SubscriptionPolicyAssignmentIdentity>> identity() {
        return Codegen.optional(this.identity);
    }
    /**
     * The Azure Region where the Policy Assignment should exist. Changing this forces a new Policy Assignment to be created.
     * 
     */
    @Export(name="location", type=String.class, parameters={})
    private Output<String> location;

    /**
     * @return The Azure Region where the Policy Assignment should exist. Changing this forces a new Policy Assignment to be created.
     * 
     */
    public Output<String> location() {
        return this.location;
    }
    /**
     * A JSON mapping of any Metadata for this Policy.
     * 
     */
    @Export(name="metadata", type=String.class, parameters={})
    private Output<String> metadata;

    /**
     * @return A JSON mapping of any Metadata for this Policy.
     * 
     */
    public Output<String> metadata() {
        return this.metadata;
    }
    /**
     * The name which should be used for this Policy Assignment. Changing this forces a new Policy Assignment to be created.
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return The name which should be used for this Policy Assignment. Changing this forces a new Policy Assignment to be created.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * One or more `non_compliance_message` blocks as defined below.
     * 
     */
    @Export(name="nonComplianceMessages", type=List.class, parameters={SubscriptionPolicyAssignmentNonComplianceMessage.class})
    private Output</* @Nullable */ List<SubscriptionPolicyAssignmentNonComplianceMessage>> nonComplianceMessages;

    /**
     * @return One or more `non_compliance_message` blocks as defined below.
     * 
     */
    public Output<Optional<List<SubscriptionPolicyAssignmentNonComplianceMessage>>> nonComplianceMessages() {
        return Codegen.optional(this.nonComplianceMessages);
    }
    /**
     * Specifies a list of Resource Scopes (for example a Subscription, or a Resource Group) within this Management Group which are excluded from this Policy.
     * 
     */
    @Export(name="notScopes", type=List.class, parameters={String.class})
    private Output</* @Nullable */ List<String>> notScopes;

    /**
     * @return Specifies a list of Resource Scopes (for example a Subscription, or a Resource Group) within this Management Group which are excluded from this Policy.
     * 
     */
    public Output<Optional<List<String>>> notScopes() {
        return Codegen.optional(this.notScopes);
    }
    /**
     * A JSON mapping of any Parameters for this Policy.
     * 
     */
    @Export(name="parameters", type=String.class, parameters={})
    private Output</* @Nullable */ String> parameters;

    /**
     * @return A JSON mapping of any Parameters for this Policy.
     * 
     */
    public Output<Optional<String>> parameters() {
        return Codegen.optional(this.parameters);
    }
    /**
     * The ID of the Policy Definition or Policy Definition Set. Changing this forces a new Policy Assignment to be created.
     * 
     */
    @Export(name="policyDefinitionId", type=String.class, parameters={})
    private Output<String> policyDefinitionId;

    /**
     * @return The ID of the Policy Definition or Policy Definition Set. Changing this forces a new Policy Assignment to be created.
     * 
     */
    public Output<String> policyDefinitionId() {
        return this.policyDefinitionId;
    }
    /**
     * The ID of the Subscription where this Policy Assignment should be created. Changing this forces a new Policy Assignment to be created.
     * 
     */
    @Export(name="subscriptionId", type=String.class, parameters={})
    private Output<String> subscriptionId;

    /**
     * @return The ID of the Subscription where this Policy Assignment should be created. Changing this forces a new Policy Assignment to be created.
     * 
     */
    public Output<String> subscriptionId() {
        return this.subscriptionId;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public SubscriptionPolicyAssignment(String name) {
        this(name, SubscriptionPolicyAssignmentArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public SubscriptionPolicyAssignment(String name, SubscriptionPolicyAssignmentArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public SubscriptionPolicyAssignment(String name, SubscriptionPolicyAssignmentArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:core/subscriptionPolicyAssignment:SubscriptionPolicyAssignment", name, args == null ? SubscriptionPolicyAssignmentArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private SubscriptionPolicyAssignment(String name, Output<String> id, @Nullable SubscriptionPolicyAssignmentState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:core/subscriptionPolicyAssignment:SubscriptionPolicyAssignment", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static SubscriptionPolicyAssignment get(String name, Output<String> id, @Nullable SubscriptionPolicyAssignmentState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new SubscriptionPolicyAssignment(name, id, state, options);
    }
}
