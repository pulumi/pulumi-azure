// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.logicapps.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class ActionHttpRunAfter {
    /**
     * @return Specifies the name of the precedent HTTP Action.
     * 
     */
    private final String actionName;
    /**
     * @return Specifies the expected result of the precedent HTTP Action, only after which the current HTTP Action will be triggered. Possible values include `Succeeded`, `Failed`, `Skipped` and `TimedOut`.
     * 
     */
    private final String actionResult;

    @CustomType.Constructor
    private ActionHttpRunAfter(
        @CustomType.Parameter("actionName") String actionName,
        @CustomType.Parameter("actionResult") String actionResult) {
        this.actionName = actionName;
        this.actionResult = actionResult;
    }

    /**
     * @return Specifies the name of the precedent HTTP Action.
     * 
     */
    public String actionName() {
        return this.actionName;
    }
    /**
     * @return Specifies the expected result of the precedent HTTP Action, only after which the current HTTP Action will be triggered. Possible values include `Succeeded`, `Failed`, `Skipped` and `TimedOut`.
     * 
     */
    public String actionResult() {
        return this.actionResult;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ActionHttpRunAfter defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String actionName;
        private String actionResult;

        public Builder() {
    	      // Empty
        }

        public Builder(ActionHttpRunAfter defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.actionName = defaults.actionName;
    	      this.actionResult = defaults.actionResult;
        }

        public Builder actionName(String actionName) {
            this.actionName = Objects.requireNonNull(actionName);
            return this;
        }
        public Builder actionResult(String actionResult) {
            this.actionResult = Objects.requireNonNull(actionResult);
            return this;
        }        public ActionHttpRunAfter build() {
            return new ActionHttpRunAfter(actionName, actionResult);
        }
    }
}
