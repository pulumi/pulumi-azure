// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.advisor.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetRecommendationsRecommendation {
    /**
     * @return The category of the recommendation.
     * 
     */
    private final String category;
    /**
     * @return The description of the issue or the opportunity identified by the recommendation.
     * 
     */
    private final String description;
    /**
     * @return The business impact of the recommendation.
     * 
     */
    private final String impact;
    /**
     * @return The name of the Advisor Recommendation.
     * 
     */
    private final String recommendationName;
    /**
     * @return The recommendation type id of the Advisor Recommendation.
     * 
     */
    private final String recommendationTypeId;
    /**
     * @return The name of the identified resource of the Advisor Recommendation.
     * 
     */
    private final String resourceName;
    /**
     * @return The type of the identified resource of the Advisor Recommendation.
     * 
     */
    private final String resourceType;
    /**
     * @return A list of Advisor Suppression names of the Advisor Recommendation.
     * 
     */
    private final List<String> suppressionNames;
    /**
     * @return The most recent time that Advisor checked the validity of the recommendation..
     * 
     */
    private final String updatedTime;

    @CustomType.Constructor
    private GetRecommendationsRecommendation(
        @CustomType.Parameter("category") String category,
        @CustomType.Parameter("description") String description,
        @CustomType.Parameter("impact") String impact,
        @CustomType.Parameter("recommendationName") String recommendationName,
        @CustomType.Parameter("recommendationTypeId") String recommendationTypeId,
        @CustomType.Parameter("resourceName") String resourceName,
        @CustomType.Parameter("resourceType") String resourceType,
        @CustomType.Parameter("suppressionNames") List<String> suppressionNames,
        @CustomType.Parameter("updatedTime") String updatedTime) {
        this.category = category;
        this.description = description;
        this.impact = impact;
        this.recommendationName = recommendationName;
        this.recommendationTypeId = recommendationTypeId;
        this.resourceName = resourceName;
        this.resourceType = resourceType;
        this.suppressionNames = suppressionNames;
        this.updatedTime = updatedTime;
    }

    /**
     * @return The category of the recommendation.
     * 
     */
    public String category() {
        return this.category;
    }
    /**
     * @return The description of the issue or the opportunity identified by the recommendation.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return The business impact of the recommendation.
     * 
     */
    public String impact() {
        return this.impact;
    }
    /**
     * @return The name of the Advisor Recommendation.
     * 
     */
    public String recommendationName() {
        return this.recommendationName;
    }
    /**
     * @return The recommendation type id of the Advisor Recommendation.
     * 
     */
    public String recommendationTypeId() {
        return this.recommendationTypeId;
    }
    /**
     * @return The name of the identified resource of the Advisor Recommendation.
     * 
     */
    public String resourceName() {
        return this.resourceName;
    }
    /**
     * @return The type of the identified resource of the Advisor Recommendation.
     * 
     */
    public String resourceType() {
        return this.resourceType;
    }
    /**
     * @return A list of Advisor Suppression names of the Advisor Recommendation.
     * 
     */
    public List<String> suppressionNames() {
        return this.suppressionNames;
    }
    /**
     * @return The most recent time that Advisor checked the validity of the recommendation..
     * 
     */
    public String updatedTime() {
        return this.updatedTime;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetRecommendationsRecommendation defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String category;
        private String description;
        private String impact;
        private String recommendationName;
        private String recommendationTypeId;
        private String resourceName;
        private String resourceType;
        private List<String> suppressionNames;
        private String updatedTime;

        public Builder() {
    	      // Empty
        }

        public Builder(GetRecommendationsRecommendation defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.category = defaults.category;
    	      this.description = defaults.description;
    	      this.impact = defaults.impact;
    	      this.recommendationName = defaults.recommendationName;
    	      this.recommendationTypeId = defaults.recommendationTypeId;
    	      this.resourceName = defaults.resourceName;
    	      this.resourceType = defaults.resourceType;
    	      this.suppressionNames = defaults.suppressionNames;
    	      this.updatedTime = defaults.updatedTime;
        }

        public Builder category(String category) {
            this.category = Objects.requireNonNull(category);
            return this;
        }
        public Builder description(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }
        public Builder impact(String impact) {
            this.impact = Objects.requireNonNull(impact);
            return this;
        }
        public Builder recommendationName(String recommendationName) {
            this.recommendationName = Objects.requireNonNull(recommendationName);
            return this;
        }
        public Builder recommendationTypeId(String recommendationTypeId) {
            this.recommendationTypeId = Objects.requireNonNull(recommendationTypeId);
            return this;
        }
        public Builder resourceName(String resourceName) {
            this.resourceName = Objects.requireNonNull(resourceName);
            return this;
        }
        public Builder resourceType(String resourceType) {
            this.resourceType = Objects.requireNonNull(resourceType);
            return this;
        }
        public Builder suppressionNames(List<String> suppressionNames) {
            this.suppressionNames = Objects.requireNonNull(suppressionNames);
            return this;
        }
        public Builder suppressionNames(String... suppressionNames) {
            return suppressionNames(List.of(suppressionNames));
        }
        public Builder updatedTime(String updatedTime) {
            this.updatedTime = Objects.requireNonNull(updatedTime);
            return this;
        }        public GetRecommendationsRecommendation build() {
            return new GetRecommendationsRecommendation(category, description, impact, recommendationName, recommendationTypeId, resourceName, resourceType, suppressionNames, updatedTime);
        }
    }
}
