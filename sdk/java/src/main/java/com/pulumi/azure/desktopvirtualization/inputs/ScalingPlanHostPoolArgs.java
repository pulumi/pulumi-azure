// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.desktopvirtualization.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;


public final class ScalingPlanHostPoolArgs extends com.pulumi.resources.ResourceArgs {

    public static final ScalingPlanHostPoolArgs Empty = new ScalingPlanHostPoolArgs();

    /**
     * The ID of the HostPool to assign the Scaling Plan to.
     * 
     */
    @Import(name="hostpoolId", required=true)
    private Output<String> hostpoolId;

    /**
     * @return The ID of the HostPool to assign the Scaling Plan to.
     * 
     */
    public Output<String> hostpoolId() {
        return this.hostpoolId;
    }

    /**
     * Specifies if the scaling plan is enabled or disabled for the HostPool.
     * 
     */
    @Import(name="scalingPlanEnabled", required=true)
    private Output<Boolean> scalingPlanEnabled;

    /**
     * @return Specifies if the scaling plan is enabled or disabled for the HostPool.
     * 
     */
    public Output<Boolean> scalingPlanEnabled() {
        return this.scalingPlanEnabled;
    }

    private ScalingPlanHostPoolArgs() {}

    private ScalingPlanHostPoolArgs(ScalingPlanHostPoolArgs $) {
        this.hostpoolId = $.hostpoolId;
        this.scalingPlanEnabled = $.scalingPlanEnabled;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ScalingPlanHostPoolArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ScalingPlanHostPoolArgs $;

        public Builder() {
            $ = new ScalingPlanHostPoolArgs();
        }

        public Builder(ScalingPlanHostPoolArgs defaults) {
            $ = new ScalingPlanHostPoolArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param hostpoolId The ID of the HostPool to assign the Scaling Plan to.
         * 
         * @return builder
         * 
         */
        public Builder hostpoolId(Output<String> hostpoolId) {
            $.hostpoolId = hostpoolId;
            return this;
        }

        /**
         * @param hostpoolId The ID of the HostPool to assign the Scaling Plan to.
         * 
         * @return builder
         * 
         */
        public Builder hostpoolId(String hostpoolId) {
            return hostpoolId(Output.of(hostpoolId));
        }

        /**
         * @param scalingPlanEnabled Specifies if the scaling plan is enabled or disabled for the HostPool.
         * 
         * @return builder
         * 
         */
        public Builder scalingPlanEnabled(Output<Boolean> scalingPlanEnabled) {
            $.scalingPlanEnabled = scalingPlanEnabled;
            return this;
        }

        /**
         * @param scalingPlanEnabled Specifies if the scaling plan is enabled or disabled for the HostPool.
         * 
         * @return builder
         * 
         */
        public Builder scalingPlanEnabled(Boolean scalingPlanEnabled) {
            return scalingPlanEnabled(Output.of(scalingPlanEnabled));
        }

        public ScalingPlanHostPoolArgs build() {
            if ($.hostpoolId == null) {
                throw new MissingRequiredPropertyException("ScalingPlanHostPoolArgs", "hostpoolId");
            }
            if ($.scalingPlanEnabled == null) {
                throw new MissingRequiredPropertyException("ScalingPlanHostPoolArgs", "scalingPlanEnabled");
            }
            return $;
        }
    }

}
