// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.network.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class VnpGatewayNatRuleInternalMappingArgs extends com.pulumi.resources.ResourceArgs {

    public static final VnpGatewayNatRuleInternalMappingArgs Empty = new VnpGatewayNatRuleInternalMappingArgs();

    /**
     * The string CIDR representing the address space for the VPN Gateway Nat Rule internal mapping.
     * 
     */
    @Import(name="addressSpace", required=true)
    private Output<String> addressSpace;

    /**
     * @return The string CIDR representing the address space for the VPN Gateway Nat Rule internal mapping.
     * 
     */
    public Output<String> addressSpace() {
        return this.addressSpace;
    }

    /**
     * The single port range for the VPN Gateway Nat Rule internal mapping.
     * 
     */
    @Import(name="portRange")
    private @Nullable Output<String> portRange;

    /**
     * @return The single port range for the VPN Gateway Nat Rule internal mapping.
     * 
     */
    public Optional<Output<String>> portRange() {
        return Optional.ofNullable(this.portRange);
    }

    private VnpGatewayNatRuleInternalMappingArgs() {}

    private VnpGatewayNatRuleInternalMappingArgs(VnpGatewayNatRuleInternalMappingArgs $) {
        this.addressSpace = $.addressSpace;
        this.portRange = $.portRange;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VnpGatewayNatRuleInternalMappingArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VnpGatewayNatRuleInternalMappingArgs $;

        public Builder() {
            $ = new VnpGatewayNatRuleInternalMappingArgs();
        }

        public Builder(VnpGatewayNatRuleInternalMappingArgs defaults) {
            $ = new VnpGatewayNatRuleInternalMappingArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param addressSpace The string CIDR representing the address space for the VPN Gateway Nat Rule internal mapping.
         * 
         * @return builder
         * 
         */
        public Builder addressSpace(Output<String> addressSpace) {
            $.addressSpace = addressSpace;
            return this;
        }

        /**
         * @param addressSpace The string CIDR representing the address space for the VPN Gateway Nat Rule internal mapping.
         * 
         * @return builder
         * 
         */
        public Builder addressSpace(String addressSpace) {
            return addressSpace(Output.of(addressSpace));
        }

        /**
         * @param portRange The single port range for the VPN Gateway Nat Rule internal mapping.
         * 
         * @return builder
         * 
         */
        public Builder portRange(@Nullable Output<String> portRange) {
            $.portRange = portRange;
            return this;
        }

        /**
         * @param portRange The single port range for the VPN Gateway Nat Rule internal mapping.
         * 
         * @return builder
         * 
         */
        public Builder portRange(String portRange) {
            return portRange(Output.of(portRange));
        }

        public VnpGatewayNatRuleInternalMappingArgs build() {
            if ($.addressSpace == null) {
                throw new MissingRequiredPropertyException("VnpGatewayNatRuleInternalMappingArgs", "addressSpace");
            }
            return $;
        }
    }

}
