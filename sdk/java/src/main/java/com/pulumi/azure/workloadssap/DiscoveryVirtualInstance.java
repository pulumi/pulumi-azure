// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.workloadssap;

import com.pulumi.azure.Utilities;
import com.pulumi.azure.workloadssap.DiscoveryVirtualInstanceArgs;
import com.pulumi.azure.workloadssap.inputs.DiscoveryVirtualInstanceState;
import com.pulumi.azure.workloadssap.outputs.DiscoveryVirtualInstanceIdentity;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Manages an SAP Discovery Virtual Instance.
 * 
 * &gt; **Note:** Before using this resource, it&#39;s required to submit the request of registering the Resource Provider with Azure CLI `az provider register --namespace &#34;Microsoft.Workloads&#34;`. The Resource Provider can take a while to register, you can check the status by running `az provider show --namespace &#34;Microsoft.Workloads&#34; --query &#34;registrationState&#34;`. Once this outputs &#34;Registered&#34; the Resource Provider is available for use.
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.azure.core.ResourceGroup;
 * import com.pulumi.azure.core.ResourceGroupArgs;
 * import com.pulumi.azure.workloadssap.DiscoveryVirtualInstance;
 * import com.pulumi.azure.workloadssap.DiscoveryVirtualInstanceArgs;
 * import com.pulumi.azure.workloadssap.inputs.DiscoveryVirtualInstanceIdentityArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new ResourceGroup("example", ResourceGroupArgs.builder()        
 *             .name("example-sapvis")
 *             .location("West Europe")
 *             .build());
 * 
 *         var exampleDiscoveryVirtualInstance = new DiscoveryVirtualInstance("exampleDiscoveryVirtualInstance", DiscoveryVirtualInstanceArgs.builder()        
 *             .name("X01")
 *             .resourceGroupName(example.name())
 *             .location(example.location())
 *             .environment("NonProd")
 *             .sapProduct("S4HANA")
 *             .centralServerVirtualMachineId("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/exampleRG/providers/Microsoft.Compute/virtualMachines/csvm1")
 *             .managedStorageAccountName("managedsa")
 *             .identity(DiscoveryVirtualInstanceIdentityArgs.builder()
 *                 .type("UserAssigned")
 *                 .identityIds("/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/exampleRG/providers/Microsoft.ManagedIdentity/userAssignedIdentities/uai1")
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * SAP Discovery Virtual Instances can be imported using the `resource id`, e.g.
 * 
 * ```sh
 * $ pulumi import azure:workloadssap/discoveryVirtualInstance:DiscoveryVirtualInstance example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.Workloads/sapVirtualInstances/vis1
 * ```
 * 
 */
@ResourceType(type="azure:workloadssap/discoveryVirtualInstance:DiscoveryVirtualInstance")
public class DiscoveryVirtualInstance extends com.pulumi.resources.CustomResource {
    /**
     * The ID of the Virtual Machine of the Central Server. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="centralServerVirtualMachineId", refs={String.class}, tree="[0]")
    private Output<String> centralServerVirtualMachineId;

    /**
     * @return The ID of the Virtual Machine of the Central Server. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> centralServerVirtualMachineId() {
        return this.centralServerVirtualMachineId;
    }
    /**
     * The environment type for the SAP Discovery Virtual Instance. Possible values are `NonProd` and `Prod`. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="environment", refs={String.class}, tree="[0]")
    private Output<String> environment;

    /**
     * @return The environment type for the SAP Discovery Virtual Instance. Possible values are `NonProd` and `Prod`. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> environment() {
        return this.environment;
    }
    /**
     * An `identity` block as defined below.
     * 
     */
    @Export(name="identity", refs={DiscoveryVirtualInstanceIdentity.class}, tree="[0]")
    private Output</* @Nullable */ DiscoveryVirtualInstanceIdentity> identity;

    /**
     * @return An `identity` block as defined below.
     * 
     */
    public Output<Optional<DiscoveryVirtualInstanceIdentity>> identity() {
        return Codegen.optional(this.identity);
    }
    /**
     * The Azure Region where the SAP Discovery Virtual Instance should exist. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="location", refs={String.class}, tree="[0]")
    private Output<String> location;

    /**
     * @return The Azure Region where the SAP Discovery Virtual Instance should exist. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> location() {
        return this.location;
    }
    /**
     * The name of the managed Resource Group for the SAP Discovery Virtual Instance. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="managedResourceGroupName", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> managedResourceGroupName;

    /**
     * @return The name of the managed Resource Group for the SAP Discovery Virtual Instance. Changing this forces a new resource to be created.
     * 
     */
    public Output<Optional<String>> managedResourceGroupName() {
        return Codegen.optional(this.managedResourceGroupName);
    }
    /**
     * The name of the custom Storage Account created by the service in the managed Resource Group. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="managedStorageAccountName", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> managedStorageAccountName;

    /**
     * @return The name of the custom Storage Account created by the service in the managed Resource Group. Changing this forces a new resource to be created.
     * 
     */
    public Output<Optional<String>> managedStorageAccountName() {
        return Codegen.optional(this.managedStorageAccountName);
    }
    /**
     * Specifies the name of the SAP Discovery Virtual Instance. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return Specifies the name of the SAP Discovery Virtual Instance. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The name of the Resource Group where the SAP Discovery Virtual Instance should exist. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="resourceGroupName", refs={String.class}, tree="[0]")
    private Output<String> resourceGroupName;

    /**
     * @return The name of the Resource Group where the SAP Discovery Virtual Instance should exist. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }
    /**
     * The SAP Product type for the SAP Discovery Virtual Instance. Possible values are `ECC`, `Other` and `S4HANA`. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="sapProduct", refs={String.class}, tree="[0]")
    private Output<String> sapProduct;

    /**
     * @return The SAP Product type for the SAP Discovery Virtual Instance. Possible values are `ECC`, `Other` and `S4HANA`. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> sapProduct() {
        return this.sapProduct;
    }
    /**
     * A mapping of tags which should be assigned to the SAP Discovery Virtual Instance.
     * 
     */
    @Export(name="tags", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output</* @Nullable */ Map<String,String>> tags;

    /**
     * @return A mapping of tags which should be assigned to the SAP Discovery Virtual Instance.
     * 
     */
    public Output<Optional<Map<String,String>>> tags() {
        return Codegen.optional(this.tags);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public DiscoveryVirtualInstance(String name) {
        this(name, DiscoveryVirtualInstanceArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public DiscoveryVirtualInstance(String name, DiscoveryVirtualInstanceArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public DiscoveryVirtualInstance(String name, DiscoveryVirtualInstanceArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:workloadssap/discoveryVirtualInstance:DiscoveryVirtualInstance", name, args == null ? DiscoveryVirtualInstanceArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private DiscoveryVirtualInstance(String name, Output<String> id, @Nullable DiscoveryVirtualInstanceState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:workloadssap/discoveryVirtualInstance:DiscoveryVirtualInstance", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static DiscoveryVirtualInstance get(String name, Output<String> id, @Nullable DiscoveryVirtualInstanceState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new DiscoveryVirtualInstance(name, id, state, options);
    }
}
