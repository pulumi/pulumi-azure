// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.mssql.inputs;

import com.pulumi.azure.mssql.inputs.VirtualMachineAutoBackupManualScheduleArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class VirtualMachineAutoBackupArgs extends com.pulumi.resources.ResourceArgs {

    public static final VirtualMachineAutoBackupArgs Empty = new VirtualMachineAutoBackupArgs();

    /**
     * @deprecated
     * `encryption_enabled` has been deprecated and will be removed in v5.0 of the AzureRM Provider. Encryption is enabled when `encryption_password` is set; otherwise disabled.
     * 
     */
    @Deprecated /* `encryption_enabled` has been deprecated and will be removed in v5.0 of the AzureRM Provider. Encryption is enabled when `encryption_password` is set; otherwise disabled. */
    @Import(name="encryptionEnabled")
    private @Nullable Output<Boolean> encryptionEnabled;

    /**
     * @deprecated
     * `encryption_enabled` has been deprecated and will be removed in v5.0 of the AzureRM Provider. Encryption is enabled when `encryption_password` is set; otherwise disabled.
     * 
     */
    @Deprecated /* `encryption_enabled` has been deprecated and will be removed in v5.0 of the AzureRM Provider. Encryption is enabled when `encryption_password` is set; otherwise disabled. */
    public Optional<Output<Boolean>> encryptionEnabled() {
        return Optional.ofNullable(this.encryptionEnabled);
    }

    /**
     * Encryption password to use. Setting a password will enable encryption.
     * 
     */
    @Import(name="encryptionPassword")
    private @Nullable Output<String> encryptionPassword;

    /**
     * @return Encryption password to use. Setting a password will enable encryption.
     * 
     */
    public Optional<Output<String>> encryptionPassword() {
        return Optional.ofNullable(this.encryptionPassword);
    }

    /**
     * A `manual_schedule` block as documented below. When this block is present, the schedule type is set to `Manual`. Without this block, the schedule type is set to `Automated`.
     * 
     */
    @Import(name="manualSchedule")
    private @Nullable Output<VirtualMachineAutoBackupManualScheduleArgs> manualSchedule;

    /**
     * @return A `manual_schedule` block as documented below. When this block is present, the schedule type is set to `Manual`. Without this block, the schedule type is set to `Automated`.
     * 
     */
    public Optional<Output<VirtualMachineAutoBackupManualScheduleArgs>> manualSchedule() {
        return Optional.ofNullable(this.manualSchedule);
    }

    /**
     * Retention period of backups, in days. Valid values are from `1` to `30`.
     * 
     */
    @Import(name="retentionPeriodInDays", required=true)
    private Output<Integer> retentionPeriodInDays;

    /**
     * @return Retention period of backups, in days. Valid values are from `1` to `30`.
     * 
     */
    public Output<Integer> retentionPeriodInDays() {
        return this.retentionPeriodInDays;
    }

    /**
     * Access key for the storage account where backups will be kept.
     * 
     */
    @Import(name="storageAccountAccessKey", required=true)
    private Output<String> storageAccountAccessKey;

    /**
     * @return Access key for the storage account where backups will be kept.
     * 
     */
    public Output<String> storageAccountAccessKey() {
        return this.storageAccountAccessKey;
    }

    /**
     * Blob endpoint for the storage account where backups will be kept.
     * 
     */
    @Import(name="storageBlobEndpoint", required=true)
    private Output<String> storageBlobEndpoint;

    /**
     * @return Blob endpoint for the storage account where backups will be kept.
     * 
     */
    public Output<String> storageBlobEndpoint() {
        return this.storageBlobEndpoint;
    }

    /**
     * Include or exclude system databases from auto backup.
     * 
     */
    @Import(name="systemDatabasesBackupEnabled")
    private @Nullable Output<Boolean> systemDatabasesBackupEnabled;

    /**
     * @return Include or exclude system databases from auto backup.
     * 
     */
    public Optional<Output<Boolean>> systemDatabasesBackupEnabled() {
        return Optional.ofNullable(this.systemDatabasesBackupEnabled);
    }

    private VirtualMachineAutoBackupArgs() {}

    private VirtualMachineAutoBackupArgs(VirtualMachineAutoBackupArgs $) {
        this.encryptionEnabled = $.encryptionEnabled;
        this.encryptionPassword = $.encryptionPassword;
        this.manualSchedule = $.manualSchedule;
        this.retentionPeriodInDays = $.retentionPeriodInDays;
        this.storageAccountAccessKey = $.storageAccountAccessKey;
        this.storageBlobEndpoint = $.storageBlobEndpoint;
        this.systemDatabasesBackupEnabled = $.systemDatabasesBackupEnabled;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VirtualMachineAutoBackupArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VirtualMachineAutoBackupArgs $;

        public Builder() {
            $ = new VirtualMachineAutoBackupArgs();
        }

        public Builder(VirtualMachineAutoBackupArgs defaults) {
            $ = new VirtualMachineAutoBackupArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @return builder
         * 
         * @deprecated
         * `encryption_enabled` has been deprecated and will be removed in v5.0 of the AzureRM Provider. Encryption is enabled when `encryption_password` is set; otherwise disabled.
         * 
         */
        @Deprecated /* `encryption_enabled` has been deprecated and will be removed in v5.0 of the AzureRM Provider. Encryption is enabled when `encryption_password` is set; otherwise disabled. */
        public Builder encryptionEnabled(@Nullable Output<Boolean> encryptionEnabled) {
            $.encryptionEnabled = encryptionEnabled;
            return this;
        }

        /**
         * @return builder
         * 
         * @deprecated
         * `encryption_enabled` has been deprecated and will be removed in v5.0 of the AzureRM Provider. Encryption is enabled when `encryption_password` is set; otherwise disabled.
         * 
         */
        @Deprecated /* `encryption_enabled` has been deprecated and will be removed in v5.0 of the AzureRM Provider. Encryption is enabled when `encryption_password` is set; otherwise disabled. */
        public Builder encryptionEnabled(Boolean encryptionEnabled) {
            return encryptionEnabled(Output.of(encryptionEnabled));
        }

        /**
         * @param encryptionPassword Encryption password to use. Setting a password will enable encryption.
         * 
         * @return builder
         * 
         */
        public Builder encryptionPassword(@Nullable Output<String> encryptionPassword) {
            $.encryptionPassword = encryptionPassword;
            return this;
        }

        /**
         * @param encryptionPassword Encryption password to use. Setting a password will enable encryption.
         * 
         * @return builder
         * 
         */
        public Builder encryptionPassword(String encryptionPassword) {
            return encryptionPassword(Output.of(encryptionPassword));
        }

        /**
         * @param manualSchedule A `manual_schedule` block as documented below. When this block is present, the schedule type is set to `Manual`. Without this block, the schedule type is set to `Automated`.
         * 
         * @return builder
         * 
         */
        public Builder manualSchedule(@Nullable Output<VirtualMachineAutoBackupManualScheduleArgs> manualSchedule) {
            $.manualSchedule = manualSchedule;
            return this;
        }

        /**
         * @param manualSchedule A `manual_schedule` block as documented below. When this block is present, the schedule type is set to `Manual`. Without this block, the schedule type is set to `Automated`.
         * 
         * @return builder
         * 
         */
        public Builder manualSchedule(VirtualMachineAutoBackupManualScheduleArgs manualSchedule) {
            return manualSchedule(Output.of(manualSchedule));
        }

        /**
         * @param retentionPeriodInDays Retention period of backups, in days. Valid values are from `1` to `30`.
         * 
         * @return builder
         * 
         */
        public Builder retentionPeriodInDays(Output<Integer> retentionPeriodInDays) {
            $.retentionPeriodInDays = retentionPeriodInDays;
            return this;
        }

        /**
         * @param retentionPeriodInDays Retention period of backups, in days. Valid values are from `1` to `30`.
         * 
         * @return builder
         * 
         */
        public Builder retentionPeriodInDays(Integer retentionPeriodInDays) {
            return retentionPeriodInDays(Output.of(retentionPeriodInDays));
        }

        /**
         * @param storageAccountAccessKey Access key for the storage account where backups will be kept.
         * 
         * @return builder
         * 
         */
        public Builder storageAccountAccessKey(Output<String> storageAccountAccessKey) {
            $.storageAccountAccessKey = storageAccountAccessKey;
            return this;
        }

        /**
         * @param storageAccountAccessKey Access key for the storage account where backups will be kept.
         * 
         * @return builder
         * 
         */
        public Builder storageAccountAccessKey(String storageAccountAccessKey) {
            return storageAccountAccessKey(Output.of(storageAccountAccessKey));
        }

        /**
         * @param storageBlobEndpoint Blob endpoint for the storage account where backups will be kept.
         * 
         * @return builder
         * 
         */
        public Builder storageBlobEndpoint(Output<String> storageBlobEndpoint) {
            $.storageBlobEndpoint = storageBlobEndpoint;
            return this;
        }

        /**
         * @param storageBlobEndpoint Blob endpoint for the storage account where backups will be kept.
         * 
         * @return builder
         * 
         */
        public Builder storageBlobEndpoint(String storageBlobEndpoint) {
            return storageBlobEndpoint(Output.of(storageBlobEndpoint));
        }

        /**
         * @param systemDatabasesBackupEnabled Include or exclude system databases from auto backup.
         * 
         * @return builder
         * 
         */
        public Builder systemDatabasesBackupEnabled(@Nullable Output<Boolean> systemDatabasesBackupEnabled) {
            $.systemDatabasesBackupEnabled = systemDatabasesBackupEnabled;
            return this;
        }

        /**
         * @param systemDatabasesBackupEnabled Include or exclude system databases from auto backup.
         * 
         * @return builder
         * 
         */
        public Builder systemDatabasesBackupEnabled(Boolean systemDatabasesBackupEnabled) {
            return systemDatabasesBackupEnabled(Output.of(systemDatabasesBackupEnabled));
        }

        public VirtualMachineAutoBackupArgs build() {
            if ($.retentionPeriodInDays == null) {
                throw new MissingRequiredPropertyException("VirtualMachineAutoBackupArgs", "retentionPeriodInDays");
            }
            if ($.storageAccountAccessKey == null) {
                throw new MissingRequiredPropertyException("VirtualMachineAutoBackupArgs", "storageAccountAccessKey");
            }
            if ($.storageBlobEndpoint == null) {
                throw new MissingRequiredPropertyException("VirtualMachineAutoBackupArgs", "storageBlobEndpoint");
            }
            return $;
        }
    }

}
