// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.devcenter.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GalleryState extends com.pulumi.resources.ResourceArgs {

    public static final GalleryState Empty = new GalleryState();

    /**
     * Specifies the ID of the Dev Center within which this Dev Center Gallery should exist. Changing this forces a new Dev Center Gallery to be created.
     * 
     */
    @Import(name="devCenterId")
    private @Nullable Output<String> devCenterId;

    /**
     * @return Specifies the ID of the Dev Center within which this Dev Center Gallery should exist. Changing this forces a new Dev Center Gallery to be created.
     * 
     */
    public Optional<Output<String>> devCenterId() {
        return Optional.ofNullable(this.devCenterId);
    }

    /**
     * Specifies the name of this Dev Center Gallery. Changing this forces a new Dev Center Gallery to be created.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Specifies the name of this Dev Center Gallery. Changing this forces a new Dev Center Gallery to be created.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The ID of the Shared Gallery which should be connected to the Dev Center Gallery. Changing this forces a new Dev Center Gallery to be created.
     * 
     */
    @Import(name="sharedGalleryId")
    private @Nullable Output<String> sharedGalleryId;

    /**
     * @return The ID of the Shared Gallery which should be connected to the Dev Center Gallery. Changing this forces a new Dev Center Gallery to be created.
     * 
     */
    public Optional<Output<String>> sharedGalleryId() {
        return Optional.ofNullable(this.sharedGalleryId);
    }

    private GalleryState() {}

    private GalleryState(GalleryState $) {
        this.devCenterId = $.devCenterId;
        this.name = $.name;
        this.sharedGalleryId = $.sharedGalleryId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GalleryState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GalleryState $;

        public Builder() {
            $ = new GalleryState();
        }

        public Builder(GalleryState defaults) {
            $ = new GalleryState(Objects.requireNonNull(defaults));
        }

        /**
         * @param devCenterId Specifies the ID of the Dev Center within which this Dev Center Gallery should exist. Changing this forces a new Dev Center Gallery to be created.
         * 
         * @return builder
         * 
         */
        public Builder devCenterId(@Nullable Output<String> devCenterId) {
            $.devCenterId = devCenterId;
            return this;
        }

        /**
         * @param devCenterId Specifies the ID of the Dev Center within which this Dev Center Gallery should exist. Changing this forces a new Dev Center Gallery to be created.
         * 
         * @return builder
         * 
         */
        public Builder devCenterId(String devCenterId) {
            return devCenterId(Output.of(devCenterId));
        }

        /**
         * @param name Specifies the name of this Dev Center Gallery. Changing this forces a new Dev Center Gallery to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Specifies the name of this Dev Center Gallery. Changing this forces a new Dev Center Gallery to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param sharedGalleryId The ID of the Shared Gallery which should be connected to the Dev Center Gallery. Changing this forces a new Dev Center Gallery to be created.
         * 
         * @return builder
         * 
         */
        public Builder sharedGalleryId(@Nullable Output<String> sharedGalleryId) {
            $.sharedGalleryId = sharedGalleryId;
            return this;
        }

        /**
         * @param sharedGalleryId The ID of the Shared Gallery which should be connected to the Dev Center Gallery. Changing this forces a new Dev Center Gallery to be created.
         * 
         * @return builder
         * 
         */
        public Builder sharedGalleryId(String sharedGalleryId) {
            return sharedGalleryId(Output.of(sharedGalleryId));
        }

        public GalleryState build() {
            return $;
        }
    }

}
