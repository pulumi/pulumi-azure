// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.streamanalytics;

import com.pulumi.azure.Utilities;
import com.pulumi.azure.streamanalytics.StreamInputEventHubArgs;
import com.pulumi.azure.streamanalytics.inputs.StreamInputEventHubState;
import com.pulumi.azure.streamanalytics.outputs.StreamInputEventHubSerialization;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * &gt; **Note:** This resource creates a Stream Input of type `Microsoft.ServiceBus/EventHub`, to create a Stream Input of type `Microsoft.EventHub/EventHub` please use the resource azurerm_stream_analytics_stream_input_eventhub_v2.
 * 
 * Manages a Stream Analytics Stream Input EventHub.
 * 
 * ## Example Usage
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.azure.core.ResourceGroup;
 * import com.pulumi.azure.core.ResourceGroupArgs;
 * import com.pulumi.azure.streamanalytics.StreamanalyticsFunctions;
 * import com.pulumi.azure.streamanalytics.inputs.GetJobArgs;
 * import com.pulumi.azure.eventhub.EventHubNamespace;
 * import com.pulumi.azure.eventhub.EventHubNamespaceArgs;
 * import com.pulumi.azure.eventhub.EventHub;
 * import com.pulumi.azure.eventhub.EventHubArgs;
 * import com.pulumi.azure.eventhub.ConsumerGroup;
 * import com.pulumi.azure.eventhub.ConsumerGroupArgs;
 * import com.pulumi.azure.streamanalytics.StreamInputEventHub;
 * import com.pulumi.azure.streamanalytics.StreamInputEventHubArgs;
 * import com.pulumi.azure.streamanalytics.inputs.StreamInputEventHubSerializationArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var exampleResourceGroup = new ResourceGroup(&#34;exampleResourceGroup&#34;, ResourceGroupArgs.builder()        
 *             .location(&#34;West Europe&#34;)
 *             .build());
 * 
 *         final var exampleJob = StreamanalyticsFunctions.getJob(GetJobArgs.builder()
 *             .name(&#34;example-job&#34;)
 *             .resourceGroupName(exampleResourceGroup.name())
 *             .build());
 * 
 *         var exampleEventHubNamespace = new EventHubNamespace(&#34;exampleEventHubNamespace&#34;, EventHubNamespaceArgs.builder()        
 *             .location(exampleResourceGroup.location())
 *             .resourceGroupName(exampleResourceGroup.name())
 *             .sku(&#34;Standard&#34;)
 *             .capacity(1)
 *             .build());
 * 
 *         var exampleEventHub = new EventHub(&#34;exampleEventHub&#34;, EventHubArgs.builder()        
 *             .namespaceName(exampleEventHubNamespace.name())
 *             .resourceGroupName(exampleResourceGroup.name())
 *             .partitionCount(2)
 *             .messageRetention(1)
 *             .build());
 * 
 *         var exampleConsumerGroup = new ConsumerGroup(&#34;exampleConsumerGroup&#34;, ConsumerGroupArgs.builder()        
 *             .namespaceName(exampleEventHubNamespace.name())
 *             .eventhubName(exampleEventHub.name())
 *             .resourceGroupName(exampleResourceGroup.name())
 *             .build());
 * 
 *         var exampleStreamInputEventHub = new StreamInputEventHub(&#34;exampleStreamInputEventHub&#34;, StreamInputEventHubArgs.builder()        
 *             .streamAnalyticsJobName(exampleJob.applyValue(getJobResult -&gt; getJobResult).applyValue(exampleJob -&gt; exampleJob.applyValue(getJobResult -&gt; getJobResult.name())))
 *             .resourceGroupName(exampleJob.applyValue(getJobResult -&gt; getJobResult).applyValue(exampleJob -&gt; exampleJob.applyValue(getJobResult -&gt; getJobResult.resourceGroupName())))
 *             .eventhubConsumerGroupName(exampleConsumerGroup.name())
 *             .eventhubName(exampleEventHub.name())
 *             .servicebusNamespace(exampleEventHubNamespace.name())
 *             .sharedAccessPolicyKey(exampleEventHubNamespace.defaultPrimaryKey())
 *             .sharedAccessPolicyName(&#34;RootManageSharedAccessKey&#34;)
 *             .serialization(StreamInputEventHubSerializationArgs.builder()
 *                 .type(&#34;Json&#34;)
 *                 .encoding(&#34;UTF8&#34;)
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * Stream Analytics Stream Input EventHub&#39;s can be imported using the `resource id`, e.g.
 * 
 * ```sh
 *  $ pulumi import azure:streamanalytics/streamInputEventHub:StreamInputEventHub example /subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/group1/providers/Microsoft.StreamAnalytics/streamingjobs/job1/inputs/input1
 * ```
 * 
 */
@ResourceType(type="azure:streamanalytics/streamInputEventHub:StreamInputEventHub")
public class StreamInputEventHub extends com.pulumi.resources.CustomResource {
    /**
     * The authentication mode for the Stream Output. Possible values are `Msi` and `ConnectionString`. Defaults to `ConnectionString`.
     * 
     */
    @Export(name="authenticationMode", type=String.class, parameters={})
    private Output</* @Nullable */ String> authenticationMode;

    /**
     * @return The authentication mode for the Stream Output. Possible values are `Msi` and `ConnectionString`. Defaults to `ConnectionString`.
     * 
     */
    public Output<Optional<String>> authenticationMode() {
        return Codegen.optional(this.authenticationMode);
    }
    /**
     * The name of an Event Hub Consumer Group that should be used to read events from the Event Hub. Specifying distinct consumer group names for multiple inputs allows each of those inputs to receive the same events from the Event Hub. If not set the input will use the Event Hub&#39;s default consumer group.
     * 
     */
    @Export(name="eventhubConsumerGroupName", type=String.class, parameters={})
    private Output</* @Nullable */ String> eventhubConsumerGroupName;

    /**
     * @return The name of an Event Hub Consumer Group that should be used to read events from the Event Hub. Specifying distinct consumer group names for multiple inputs allows each of those inputs to receive the same events from the Event Hub. If not set the input will use the Event Hub&#39;s default consumer group.
     * 
     */
    public Output<Optional<String>> eventhubConsumerGroupName() {
        return Codegen.optional(this.eventhubConsumerGroupName);
    }
    /**
     * The name of the Event Hub.
     * 
     */
    @Export(name="eventhubName", type=String.class, parameters={})
    private Output<String> eventhubName;

    /**
     * @return The name of the Event Hub.
     * 
     */
    public Output<String> eventhubName() {
        return this.eventhubName;
    }
    /**
     * The name of the Stream Input EventHub. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return The name of the Stream Input EventHub. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The property the input Event Hub has been partitioned by.
     * 
     */
    @Export(name="partitionKey", type=String.class, parameters={})
    private Output</* @Nullable */ String> partitionKey;

    /**
     * @return The property the input Event Hub has been partitioned by.
     * 
     */
    public Output<Optional<String>> partitionKey() {
        return Codegen.optional(this.partitionKey);
    }
    /**
     * The name of the Resource Group where the Stream Analytics Job exists. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="resourceGroupName", type=String.class, parameters={})
    private Output<String> resourceGroupName;

    /**
     * @return The name of the Resource Group where the Stream Analytics Job exists. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }
    /**
     * A `serialization` block as defined below.
     * 
     */
    @Export(name="serialization", type=StreamInputEventHubSerialization.class, parameters={})
    private Output<StreamInputEventHubSerialization> serialization;

    /**
     * @return A `serialization` block as defined below.
     * 
     */
    public Output<StreamInputEventHubSerialization> serialization() {
        return this.serialization;
    }
    /**
     * The namespace that is associated with the desired Event Hub, Service Bus Queue, Service Bus Topic, etc.
     * 
     */
    @Export(name="servicebusNamespace", type=String.class, parameters={})
    private Output<String> servicebusNamespace;

    /**
     * @return The namespace that is associated with the desired Event Hub, Service Bus Queue, Service Bus Topic, etc.
     * 
     */
    public Output<String> servicebusNamespace() {
        return this.servicebusNamespace;
    }
    /**
     * The shared access policy key for the specified shared access policy.
     * 
     */
    @Export(name="sharedAccessPolicyKey", type=String.class, parameters={})
    private Output</* @Nullable */ String> sharedAccessPolicyKey;

    /**
     * @return The shared access policy key for the specified shared access policy.
     * 
     */
    public Output<Optional<String>> sharedAccessPolicyKey() {
        return Codegen.optional(this.sharedAccessPolicyKey);
    }
    /**
     * The shared access policy name for the Event Hub, Service Bus Queue, Service Bus Topic, etc.
     * 
     */
    @Export(name="sharedAccessPolicyName", type=String.class, parameters={})
    private Output</* @Nullable */ String> sharedAccessPolicyName;

    /**
     * @return The shared access policy name for the Event Hub, Service Bus Queue, Service Bus Topic, etc.
     * 
     */
    public Output<Optional<String>> sharedAccessPolicyName() {
        return Codegen.optional(this.sharedAccessPolicyName);
    }
    /**
     * The name of the Stream Analytics Job. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="streamAnalyticsJobName", type=String.class, parameters={})
    private Output<String> streamAnalyticsJobName;

    /**
     * @return The name of the Stream Analytics Job. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> streamAnalyticsJobName() {
        return this.streamAnalyticsJobName;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public StreamInputEventHub(String name) {
        this(name, StreamInputEventHubArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public StreamInputEventHub(String name, StreamInputEventHubArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public StreamInputEventHub(String name, StreamInputEventHubArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:streamanalytics/streamInputEventHub:StreamInputEventHub", name, args == null ? StreamInputEventHubArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private StreamInputEventHub(String name, Output<String> id, @Nullable StreamInputEventHubState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:streamanalytics/streamInputEventHub:StreamInputEventHub", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .additionalSecretOutputs(List.of(
                "sharedAccessPolicyKey"
            ))
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static StreamInputEventHub get(String name, Output<String> id, @Nullable StreamInputEventHubState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new StreamInputEventHub(name, id, state, options);
    }
}
