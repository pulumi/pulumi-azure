// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.machinelearning.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class WorkspaceServerlessCompute {
    /**
     * @return Should serverless compute nodes deployed in a custom Virtual Network have public IP addresses enabled for a workspace with private endpoint? Defaults to `false`.
     * 
     * &gt; **Note:** `publicIpEnabled` cannot be updated from `true` to `false` when `subnetId` is not set. `publicIpEnabled` must be set to `true` if `subnetId` is not set and when `publicNetworkAccessEnabled` is `false`.
     * 
     */
    private @Nullable Boolean publicIpEnabled;
    /**
     * @return The ID of an existing Virtual Network Subnet in which the serverless compute nodes should be deployed to.
     * 
     */
    private @Nullable String subnetId;

    private WorkspaceServerlessCompute() {}
    /**
     * @return Should serverless compute nodes deployed in a custom Virtual Network have public IP addresses enabled for a workspace with private endpoint? Defaults to `false`.
     * 
     * &gt; **Note:** `publicIpEnabled` cannot be updated from `true` to `false` when `subnetId` is not set. `publicIpEnabled` must be set to `true` if `subnetId` is not set and when `publicNetworkAccessEnabled` is `false`.
     * 
     */
    public Optional<Boolean> publicIpEnabled() {
        return Optional.ofNullable(this.publicIpEnabled);
    }
    /**
     * @return The ID of an existing Virtual Network Subnet in which the serverless compute nodes should be deployed to.
     * 
     */
    public Optional<String> subnetId() {
        return Optional.ofNullable(this.subnetId);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(WorkspaceServerlessCompute defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Boolean publicIpEnabled;
        private @Nullable String subnetId;
        public Builder() {}
        public Builder(WorkspaceServerlessCompute defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.publicIpEnabled = defaults.publicIpEnabled;
    	      this.subnetId = defaults.subnetId;
        }

        @CustomType.Setter
        public Builder publicIpEnabled(@Nullable Boolean publicIpEnabled) {

            this.publicIpEnabled = publicIpEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder subnetId(@Nullable String subnetId) {

            this.subnetId = subnetId;
            return this;
        }
        public WorkspaceServerlessCompute build() {
            final var _resultValue = new WorkspaceServerlessCompute();
            _resultValue.publicIpEnabled = publicIpEnabled;
            _resultValue.subnetId = subnetId;
            return _resultValue;
        }
    }
}
