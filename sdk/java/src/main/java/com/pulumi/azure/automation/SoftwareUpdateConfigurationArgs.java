// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.automation;

import com.pulumi.azure.automation.inputs.SoftwareUpdateConfigurationLinuxArgs;
import com.pulumi.azure.automation.inputs.SoftwareUpdateConfigurationPostTaskArgs;
import com.pulumi.azure.automation.inputs.SoftwareUpdateConfigurationPreTaskArgs;
import com.pulumi.azure.automation.inputs.SoftwareUpdateConfigurationScheduleArgs;
import com.pulumi.azure.automation.inputs.SoftwareUpdateConfigurationTargetArgs;
import com.pulumi.azure.automation.inputs.SoftwareUpdateConfigurationWindowArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SoftwareUpdateConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final SoftwareUpdateConfigurationArgs Empty = new SoftwareUpdateConfigurationArgs();

    /**
     * The ID of Automation Account to manage this Source Control. Changing this forces a new Automation Source Control to be created.
     * 
     */
    @Import(name="automationAccountId", required=true)
    private Output<String> automationAccountId;

    /**
     * @return The ID of Automation Account to manage this Source Control. Changing this forces a new Automation Source Control to be created.
     * 
     */
    public Output<String> automationAccountId() {
        return this.automationAccountId;
    }

    /**
     * Maximum time allowed for the software update configuration run. using format `PT[n]H[n]M[n]S` as per ISO8601.
     * 
     */
    @Import(name="duration")
    private @Nullable Output<String> duration;

    /**
     * @return Maximum time allowed for the software update configuration run. using format `PT[n]H[n]M[n]S` as per ISO8601.
     * 
     */
    public Optional<Output<String>> duration() {
        return Optional.ofNullable(this.duration);
    }

    /**
     * One or more `linux` blocks as defined below.
     * 
     */
    @Import(name="linuxes")
    private @Nullable Output<List<SoftwareUpdateConfigurationLinuxArgs>> linuxes;

    /**
     * @return One or more `linux` blocks as defined below.
     * 
     */
    public Optional<Output<List<SoftwareUpdateConfigurationLinuxArgs>>> linuxes() {
        return Optional.ofNullable(this.linuxes);
    }

    /**
     * The name which should be used for this Automation. Changing this forces a new Automation to be created.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name which should be used for this Automation. Changing this forces a new Automation to be created.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Specifies a list of names of non-azure machines for the software update configuration.
     * 
     */
    @Import(name="nonAzureComputerNames")
    private @Nullable Output<List<String>> nonAzureComputerNames;

    /**
     * @return Specifies a list of names of non-azure machines for the software update configuration.
     * 
     */
    public Optional<Output<List<String>>> nonAzureComputerNames() {
        return Optional.ofNullable(this.nonAzureComputerNames);
    }

    /**
     * The Operating system of target machines. Possible values are `Windows` and `Linux`.
     * 
     */
    @Import(name="operatingSystem", required=true)
    private Output<String> operatingSystem;

    /**
     * @return The Operating system of target machines. Possible values are `Windows` and `Linux`.
     * 
     */
    public Output<String> operatingSystem() {
        return this.operatingSystem;
    }

    /**
     * One or more `post_task` blocks as defined below.
     * 
     */
    @Import(name="postTasks")
    private @Nullable Output<List<SoftwareUpdateConfigurationPostTaskArgs>> postTasks;

    /**
     * @return One or more `post_task` blocks as defined below.
     * 
     */
    public Optional<Output<List<SoftwareUpdateConfigurationPostTaskArgs>>> postTasks() {
        return Optional.ofNullable(this.postTasks);
    }

    /**
     * One or more `pre_task` blocks as defined below.
     * 
     */
    @Import(name="preTasks")
    private @Nullable Output<List<SoftwareUpdateConfigurationPreTaskArgs>> preTasks;

    /**
     * @return One or more `pre_task` blocks as defined below.
     * 
     */
    public Optional<Output<List<SoftwareUpdateConfigurationPreTaskArgs>>> preTasks() {
        return Optional.ofNullable(this.preTasks);
    }

    /**
     * One or more `schedule` blocks as defined below.
     * 
     */
    @Import(name="schedules")
    private @Nullable Output<List<SoftwareUpdateConfigurationScheduleArgs>> schedules;

    /**
     * @return One or more `schedule` blocks as defined below.
     * 
     */
    public Optional<Output<List<SoftwareUpdateConfigurationScheduleArgs>>> schedules() {
        return Optional.ofNullable(this.schedules);
    }

    /**
     * One or more `target` blocks as defined below.
     * 
     */
    @Import(name="target")
    private @Nullable Output<SoftwareUpdateConfigurationTargetArgs> target;

    /**
     * @return One or more `target` blocks as defined below.
     * 
     */
    public Optional<Output<SoftwareUpdateConfigurationTargetArgs>> target() {
        return Optional.ofNullable(this.target);
    }

    /**
     * Specifies a list of azure resource Ids of azure virtual machines.
     * 
     */
    @Import(name="virtualMachineIds")
    private @Nullable Output<List<String>> virtualMachineIds;

    /**
     * @return Specifies a list of azure resource Ids of azure virtual machines.
     * 
     */
    public Optional<Output<List<String>>> virtualMachineIds() {
        return Optional.ofNullable(this.virtualMachineIds);
    }

    /**
     * One or more `windows` blocks as defined below.
     * 
     */
    @Import(name="windows")
    private @Nullable Output<List<SoftwareUpdateConfigurationWindowArgs>> windows;

    /**
     * @return One or more `windows` blocks as defined below.
     * 
     */
    public Optional<Output<List<SoftwareUpdateConfigurationWindowArgs>>> windows() {
        return Optional.ofNullable(this.windows);
    }

    private SoftwareUpdateConfigurationArgs() {}

    private SoftwareUpdateConfigurationArgs(SoftwareUpdateConfigurationArgs $) {
        this.automationAccountId = $.automationAccountId;
        this.duration = $.duration;
        this.linuxes = $.linuxes;
        this.name = $.name;
        this.nonAzureComputerNames = $.nonAzureComputerNames;
        this.operatingSystem = $.operatingSystem;
        this.postTasks = $.postTasks;
        this.preTasks = $.preTasks;
        this.schedules = $.schedules;
        this.target = $.target;
        this.virtualMachineIds = $.virtualMachineIds;
        this.windows = $.windows;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SoftwareUpdateConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SoftwareUpdateConfigurationArgs $;

        public Builder() {
            $ = new SoftwareUpdateConfigurationArgs();
        }

        public Builder(SoftwareUpdateConfigurationArgs defaults) {
            $ = new SoftwareUpdateConfigurationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param automationAccountId The ID of Automation Account to manage this Source Control. Changing this forces a new Automation Source Control to be created.
         * 
         * @return builder
         * 
         */
        public Builder automationAccountId(Output<String> automationAccountId) {
            $.automationAccountId = automationAccountId;
            return this;
        }

        /**
         * @param automationAccountId The ID of Automation Account to manage this Source Control. Changing this forces a new Automation Source Control to be created.
         * 
         * @return builder
         * 
         */
        public Builder automationAccountId(String automationAccountId) {
            return automationAccountId(Output.of(automationAccountId));
        }

        /**
         * @param duration Maximum time allowed for the software update configuration run. using format `PT[n]H[n]M[n]S` as per ISO8601.
         * 
         * @return builder
         * 
         */
        public Builder duration(@Nullable Output<String> duration) {
            $.duration = duration;
            return this;
        }

        /**
         * @param duration Maximum time allowed for the software update configuration run. using format `PT[n]H[n]M[n]S` as per ISO8601.
         * 
         * @return builder
         * 
         */
        public Builder duration(String duration) {
            return duration(Output.of(duration));
        }

        /**
         * @param linuxes One or more `linux` blocks as defined below.
         * 
         * @return builder
         * 
         */
        public Builder linuxes(@Nullable Output<List<SoftwareUpdateConfigurationLinuxArgs>> linuxes) {
            $.linuxes = linuxes;
            return this;
        }

        /**
         * @param linuxes One or more `linux` blocks as defined below.
         * 
         * @return builder
         * 
         */
        public Builder linuxes(List<SoftwareUpdateConfigurationLinuxArgs> linuxes) {
            return linuxes(Output.of(linuxes));
        }

        /**
         * @param linuxes One or more `linux` blocks as defined below.
         * 
         * @return builder
         * 
         */
        public Builder linuxes(SoftwareUpdateConfigurationLinuxArgs... linuxes) {
            return linuxes(List.of(linuxes));
        }

        /**
         * @param name The name which should be used for this Automation. Changing this forces a new Automation to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name which should be used for this Automation. Changing this forces a new Automation to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param nonAzureComputerNames Specifies a list of names of non-azure machines for the software update configuration.
         * 
         * @return builder
         * 
         */
        public Builder nonAzureComputerNames(@Nullable Output<List<String>> nonAzureComputerNames) {
            $.nonAzureComputerNames = nonAzureComputerNames;
            return this;
        }

        /**
         * @param nonAzureComputerNames Specifies a list of names of non-azure machines for the software update configuration.
         * 
         * @return builder
         * 
         */
        public Builder nonAzureComputerNames(List<String> nonAzureComputerNames) {
            return nonAzureComputerNames(Output.of(nonAzureComputerNames));
        }

        /**
         * @param nonAzureComputerNames Specifies a list of names of non-azure machines for the software update configuration.
         * 
         * @return builder
         * 
         */
        public Builder nonAzureComputerNames(String... nonAzureComputerNames) {
            return nonAzureComputerNames(List.of(nonAzureComputerNames));
        }

        /**
         * @param operatingSystem The Operating system of target machines. Possible values are `Windows` and `Linux`.
         * 
         * @return builder
         * 
         */
        public Builder operatingSystem(Output<String> operatingSystem) {
            $.operatingSystem = operatingSystem;
            return this;
        }

        /**
         * @param operatingSystem The Operating system of target machines. Possible values are `Windows` and `Linux`.
         * 
         * @return builder
         * 
         */
        public Builder operatingSystem(String operatingSystem) {
            return operatingSystem(Output.of(operatingSystem));
        }

        /**
         * @param postTasks One or more `post_task` blocks as defined below.
         * 
         * @return builder
         * 
         */
        public Builder postTasks(@Nullable Output<List<SoftwareUpdateConfigurationPostTaskArgs>> postTasks) {
            $.postTasks = postTasks;
            return this;
        }

        /**
         * @param postTasks One or more `post_task` blocks as defined below.
         * 
         * @return builder
         * 
         */
        public Builder postTasks(List<SoftwareUpdateConfigurationPostTaskArgs> postTasks) {
            return postTasks(Output.of(postTasks));
        }

        /**
         * @param postTasks One or more `post_task` blocks as defined below.
         * 
         * @return builder
         * 
         */
        public Builder postTasks(SoftwareUpdateConfigurationPostTaskArgs... postTasks) {
            return postTasks(List.of(postTasks));
        }

        /**
         * @param preTasks One or more `pre_task` blocks as defined below.
         * 
         * @return builder
         * 
         */
        public Builder preTasks(@Nullable Output<List<SoftwareUpdateConfigurationPreTaskArgs>> preTasks) {
            $.preTasks = preTasks;
            return this;
        }

        /**
         * @param preTasks One or more `pre_task` blocks as defined below.
         * 
         * @return builder
         * 
         */
        public Builder preTasks(List<SoftwareUpdateConfigurationPreTaskArgs> preTasks) {
            return preTasks(Output.of(preTasks));
        }

        /**
         * @param preTasks One or more `pre_task` blocks as defined below.
         * 
         * @return builder
         * 
         */
        public Builder preTasks(SoftwareUpdateConfigurationPreTaskArgs... preTasks) {
            return preTasks(List.of(preTasks));
        }

        /**
         * @param schedules One or more `schedule` blocks as defined below.
         * 
         * @return builder
         * 
         */
        public Builder schedules(@Nullable Output<List<SoftwareUpdateConfigurationScheduleArgs>> schedules) {
            $.schedules = schedules;
            return this;
        }

        /**
         * @param schedules One or more `schedule` blocks as defined below.
         * 
         * @return builder
         * 
         */
        public Builder schedules(List<SoftwareUpdateConfigurationScheduleArgs> schedules) {
            return schedules(Output.of(schedules));
        }

        /**
         * @param schedules One or more `schedule` blocks as defined below.
         * 
         * @return builder
         * 
         */
        public Builder schedules(SoftwareUpdateConfigurationScheduleArgs... schedules) {
            return schedules(List.of(schedules));
        }

        /**
         * @param target One or more `target` blocks as defined below.
         * 
         * @return builder
         * 
         */
        public Builder target(@Nullable Output<SoftwareUpdateConfigurationTargetArgs> target) {
            $.target = target;
            return this;
        }

        /**
         * @param target One or more `target` blocks as defined below.
         * 
         * @return builder
         * 
         */
        public Builder target(SoftwareUpdateConfigurationTargetArgs target) {
            return target(Output.of(target));
        }

        /**
         * @param virtualMachineIds Specifies a list of azure resource Ids of azure virtual machines.
         * 
         * @return builder
         * 
         */
        public Builder virtualMachineIds(@Nullable Output<List<String>> virtualMachineIds) {
            $.virtualMachineIds = virtualMachineIds;
            return this;
        }

        /**
         * @param virtualMachineIds Specifies a list of azure resource Ids of azure virtual machines.
         * 
         * @return builder
         * 
         */
        public Builder virtualMachineIds(List<String> virtualMachineIds) {
            return virtualMachineIds(Output.of(virtualMachineIds));
        }

        /**
         * @param virtualMachineIds Specifies a list of azure resource Ids of azure virtual machines.
         * 
         * @return builder
         * 
         */
        public Builder virtualMachineIds(String... virtualMachineIds) {
            return virtualMachineIds(List.of(virtualMachineIds));
        }

        /**
         * @param windows One or more `windows` blocks as defined below.
         * 
         * @return builder
         * 
         */
        public Builder windows(@Nullable Output<List<SoftwareUpdateConfigurationWindowArgs>> windows) {
            $.windows = windows;
            return this;
        }

        /**
         * @param windows One or more `windows` blocks as defined below.
         * 
         * @return builder
         * 
         */
        public Builder windows(List<SoftwareUpdateConfigurationWindowArgs> windows) {
            return windows(Output.of(windows));
        }

        /**
         * @param windows One or more `windows` blocks as defined below.
         * 
         * @return builder
         * 
         */
        public Builder windows(SoftwareUpdateConfigurationWindowArgs... windows) {
            return windows(List.of(windows));
        }

        public SoftwareUpdateConfigurationArgs build() {
            $.automationAccountId = Objects.requireNonNull($.automationAccountId, "expected parameter 'automationAccountId' to be non-null");
            $.operatingSystem = Objects.requireNonNull($.operatingSystem, "expected parameter 'operatingSystem' to be non-null");
            return $;
        }
    }

}
