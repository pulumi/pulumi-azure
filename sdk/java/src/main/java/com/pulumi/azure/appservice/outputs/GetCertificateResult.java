// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.appservice.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class GetCertificateResult {
    /**
     * @return The expiration date for the certificate.
     * 
     */
    private final String expirationDate;
    /**
     * @return The friendly name of the certificate.
     * 
     */
    private final String friendlyName;
    /**
     * @return List of host names the certificate applies to.
     * 
     */
    private final List<String> hostNames;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private final String id;
    /**
     * @return The issue date for the certificate.
     * 
     */
    private final String issueDate;
    /**
     * @return The name of the certificate issuer.
     * 
     */
    private final String issuer;
    private final String location;
    private final String name;
    private final String resourceGroupName;
    /**
     * @return The subject name of the certificate.
     * 
     */
    private final String subjectName;
    private final @Nullable Map<String,String> tags;
    /**
     * @return The thumbprint for the certificate.
     * 
     */
    private final String thumbprint;

    @CustomType.Constructor
    private GetCertificateResult(
        @CustomType.Parameter("expirationDate") String expirationDate,
        @CustomType.Parameter("friendlyName") String friendlyName,
        @CustomType.Parameter("hostNames") List<String> hostNames,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("issueDate") String issueDate,
        @CustomType.Parameter("issuer") String issuer,
        @CustomType.Parameter("location") String location,
        @CustomType.Parameter("name") String name,
        @CustomType.Parameter("resourceGroupName") String resourceGroupName,
        @CustomType.Parameter("subjectName") String subjectName,
        @CustomType.Parameter("tags") @Nullable Map<String,String> tags,
        @CustomType.Parameter("thumbprint") String thumbprint) {
        this.expirationDate = expirationDate;
        this.friendlyName = friendlyName;
        this.hostNames = hostNames;
        this.id = id;
        this.issueDate = issueDate;
        this.issuer = issuer;
        this.location = location;
        this.name = name;
        this.resourceGroupName = resourceGroupName;
        this.subjectName = subjectName;
        this.tags = tags;
        this.thumbprint = thumbprint;
    }

    /**
     * @return The expiration date for the certificate.
     * 
     */
    public String expirationDate() {
        return this.expirationDate;
    }
    /**
     * @return The friendly name of the certificate.
     * 
     */
    public String friendlyName() {
        return this.friendlyName;
    }
    /**
     * @return List of host names the certificate applies to.
     * 
     */
    public List<String> hostNames() {
        return this.hostNames;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The issue date for the certificate.
     * 
     */
    public String issueDate() {
        return this.issueDate;
    }
    /**
     * @return The name of the certificate issuer.
     * 
     */
    public String issuer() {
        return this.issuer;
    }
    public String location() {
        return this.location;
    }
    public String name() {
        return this.name;
    }
    public String resourceGroupName() {
        return this.resourceGroupName;
    }
    /**
     * @return The subject name of the certificate.
     * 
     */
    public String subjectName() {
        return this.subjectName;
    }
    public Map<String,String> tags() {
        return this.tags == null ? Map.of() : this.tags;
    }
    /**
     * @return The thumbprint for the certificate.
     * 
     */
    public String thumbprint() {
        return this.thumbprint;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetCertificateResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String expirationDate;
        private String friendlyName;
        private List<String> hostNames;
        private String id;
        private String issueDate;
        private String issuer;
        private String location;
        private String name;
        private String resourceGroupName;
        private String subjectName;
        private @Nullable Map<String,String> tags;
        private String thumbprint;

        public Builder() {
    	      // Empty
        }

        public Builder(GetCertificateResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.expirationDate = defaults.expirationDate;
    	      this.friendlyName = defaults.friendlyName;
    	      this.hostNames = defaults.hostNames;
    	      this.id = defaults.id;
    	      this.issueDate = defaults.issueDate;
    	      this.issuer = defaults.issuer;
    	      this.location = defaults.location;
    	      this.name = defaults.name;
    	      this.resourceGroupName = defaults.resourceGroupName;
    	      this.subjectName = defaults.subjectName;
    	      this.tags = defaults.tags;
    	      this.thumbprint = defaults.thumbprint;
        }

        public Builder expirationDate(String expirationDate) {
            this.expirationDate = Objects.requireNonNull(expirationDate);
            return this;
        }
        public Builder friendlyName(String friendlyName) {
            this.friendlyName = Objects.requireNonNull(friendlyName);
            return this;
        }
        public Builder hostNames(List<String> hostNames) {
            this.hostNames = Objects.requireNonNull(hostNames);
            return this;
        }
        public Builder hostNames(String... hostNames) {
            return hostNames(List.of(hostNames));
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder issueDate(String issueDate) {
            this.issueDate = Objects.requireNonNull(issueDate);
            return this;
        }
        public Builder issuer(String issuer) {
            this.issuer = Objects.requireNonNull(issuer);
            return this;
        }
        public Builder location(String location) {
            this.location = Objects.requireNonNull(location);
            return this;
        }
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        public Builder resourceGroupName(String resourceGroupName) {
            this.resourceGroupName = Objects.requireNonNull(resourceGroupName);
            return this;
        }
        public Builder subjectName(String subjectName) {
            this.subjectName = Objects.requireNonNull(subjectName);
            return this;
        }
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = tags;
            return this;
        }
        public Builder thumbprint(String thumbprint) {
            this.thumbprint = Objects.requireNonNull(thumbprint);
            return this;
        }        public GetCertificateResult build() {
            return new GetCertificateResult(expirationDate, friendlyName, hostNames, id, issueDate, issuer, location, name, resourceGroupName, subjectName, tags, thumbprint);
        }
    }
}
