// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.storage;

import com.pulumi.azure.Utilities;
import com.pulumi.azure.storage.EncryptionScopeArgs;
import com.pulumi.azure.storage.inputs.EncryptionScopeState;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Manages a Storage Encryption Scope.
 * 
 * &gt; **Note:** Storage Encryption Scopes are in Preview [more information can be found here](https://docs.microsoft.com/azure/storage/blobs/encryption-scope-manage).
 * 
 * ## Example Usage
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.azure.core.ResourceGroup;
 * import com.pulumi.azure.core.ResourceGroupArgs;
 * import com.pulumi.azure.storage.Account;
 * import com.pulumi.azure.storage.AccountArgs;
 * import com.pulumi.azure.storage.inputs.AccountIdentityArgs;
 * import com.pulumi.azure.storage.EncryptionScope;
 * import com.pulumi.azure.storage.EncryptionScopeArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var exampleResourceGroup = new ResourceGroup(&#34;exampleResourceGroup&#34;, ResourceGroupArgs.builder()        
 *             .location(&#34;West Europe&#34;)
 *             .build());
 * 
 *         var exampleAccount = new Account(&#34;exampleAccount&#34;, AccountArgs.builder()        
 *             .resourceGroupName(exampleResourceGroup.name())
 *             .location(exampleResourceGroup.location())
 *             .accountTier(&#34;Standard&#34;)
 *             .accountReplicationType(&#34;LRS&#34;)
 *             .identity(AccountIdentityArgs.builder()
 *                 .type(&#34;SystemAssigned&#34;)
 *                 .build())
 *             .build());
 * 
 *         var exampleEncryptionScope = new EncryptionScope(&#34;exampleEncryptionScope&#34;, EncryptionScopeArgs.builder()        
 *             .storageAccountId(exampleAccount.id())
 *             .source(&#34;Microsoft.Storage&#34;)
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * Storage Encryption Scopes can be imported using the `resource id`, e.g.
 * 
 * ```sh
 *  $ pulumi import azure:storage/encryptionScope:EncryptionScope example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.Storage/storageAccounts/account1/encryptionScopes/scope1
 * ```
 * 
 */
@ResourceType(type="azure:storage/encryptionScope:EncryptionScope")
public class EncryptionScope extends com.pulumi.resources.CustomResource {
    /**
     * Is a secondary layer of encryption with Platform Managed Keys for data applied? Changing this forces a new resource to be created.
     * 
     */
    @Export(name="infrastructureEncryptionRequired", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> infrastructureEncryptionRequired;

    /**
     * @return Is a secondary layer of encryption with Platform Managed Keys for data applied? Changing this forces a new resource to be created.
     * 
     */
    public Output<Optional<Boolean>> infrastructureEncryptionRequired() {
        return Codegen.optional(this.infrastructureEncryptionRequired);
    }
    /**
     * The ID of the Key Vault Key. Required when `source` is `Microsoft.KeyVault`.
     * 
     */
    @Export(name="keyVaultKeyId", type=String.class, parameters={})
    private Output</* @Nullable */ String> keyVaultKeyId;

    /**
     * @return The ID of the Key Vault Key. Required when `source` is `Microsoft.KeyVault`.
     * 
     */
    public Output<Optional<String>> keyVaultKeyId() {
        return Codegen.optional(this.keyVaultKeyId);
    }
    /**
     * The name which should be used for this Storage Encryption Scope. Changing this forces a new Storage Encryption Scope to be created.
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return The name which should be used for this Storage Encryption Scope. Changing this forces a new Storage Encryption Scope to be created.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The source of the Storage Encryption Scope. Possible values are `Microsoft.KeyVault` and `Microsoft.Storage`.
     * 
     */
    @Export(name="source", type=String.class, parameters={})
    private Output<String> source;

    /**
     * @return The source of the Storage Encryption Scope. Possible values are `Microsoft.KeyVault` and `Microsoft.Storage`.
     * 
     */
    public Output<String> source() {
        return this.source;
    }
    /**
     * The ID of the Storage Account where this Storage Encryption Scope is created. Changing this forces a new Storage Encryption Scope to be created.
     * 
     */
    @Export(name="storageAccountId", type=String.class, parameters={})
    private Output<String> storageAccountId;

    /**
     * @return The ID of the Storage Account where this Storage Encryption Scope is created. Changing this forces a new Storage Encryption Scope to be created.
     * 
     */
    public Output<String> storageAccountId() {
        return this.storageAccountId;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public EncryptionScope(String name) {
        this(name, EncryptionScopeArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public EncryptionScope(String name, EncryptionScopeArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public EncryptionScope(String name, EncryptionScopeArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:storage/encryptionScope:EncryptionScope", name, args == null ? EncryptionScopeArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private EncryptionScope(String name, Output<String> id, @Nullable EncryptionScopeState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:storage/encryptionScope:EncryptionScope", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static EncryptionScope get(String name, Output<String> id, @Nullable EncryptionScopeState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new EncryptionScope(name, id, state, options);
    }
}
