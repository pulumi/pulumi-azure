// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.eventhub.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class EventGridTopicInboundIpRuleArgs extends com.pulumi.resources.ResourceArgs {

    public static final EventGridTopicInboundIpRuleArgs Empty = new EventGridTopicInboundIpRuleArgs();

    /**
     * The action to take when the rule is matched. Possible values are `Allow`. Defaults to `Allow`.
     * 
     */
    @Import(name="action")
    private @Nullable Output<String> action;

    /**
     * @return The action to take when the rule is matched. Possible values are `Allow`. Defaults to `Allow`.
     * 
     */
    public Optional<Output<String>> action() {
        return Optional.ofNullable(this.action);
    }

    /**
     * The IP mask (CIDR) to match on.
     * 
     */
    @Import(name="ipMask", required=true)
    private Output<String> ipMask;

    /**
     * @return The IP mask (CIDR) to match on.
     * 
     */
    public Output<String> ipMask() {
        return this.ipMask;
    }

    private EventGridTopicInboundIpRuleArgs() {}

    private EventGridTopicInboundIpRuleArgs(EventGridTopicInboundIpRuleArgs $) {
        this.action = $.action;
        this.ipMask = $.ipMask;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(EventGridTopicInboundIpRuleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private EventGridTopicInboundIpRuleArgs $;

        public Builder() {
            $ = new EventGridTopicInboundIpRuleArgs();
        }

        public Builder(EventGridTopicInboundIpRuleArgs defaults) {
            $ = new EventGridTopicInboundIpRuleArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param action The action to take when the rule is matched. Possible values are `Allow`. Defaults to `Allow`.
         * 
         * @return builder
         * 
         */
        public Builder action(@Nullable Output<String> action) {
            $.action = action;
            return this;
        }

        /**
         * @param action The action to take when the rule is matched. Possible values are `Allow`. Defaults to `Allow`.
         * 
         * @return builder
         * 
         */
        public Builder action(String action) {
            return action(Output.of(action));
        }

        /**
         * @param ipMask The IP mask (CIDR) to match on.
         * 
         * @return builder
         * 
         */
        public Builder ipMask(Output<String> ipMask) {
            $.ipMask = ipMask;
            return this;
        }

        /**
         * @param ipMask The IP mask (CIDR) to match on.
         * 
         * @return builder
         * 
         */
        public Builder ipMask(String ipMask) {
            return ipMask(Output.of(ipMask));
        }

        public EventGridTopicInboundIpRuleArgs build() {
            $.ipMask = Objects.requireNonNull($.ipMask, "expected parameter 'ipMask' to be non-null");
            return $;
        }
    }

}
