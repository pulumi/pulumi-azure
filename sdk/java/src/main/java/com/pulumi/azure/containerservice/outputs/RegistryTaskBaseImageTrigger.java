// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.containerservice.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class RegistryTaskBaseImageTrigger {
    /**
     * @return Should the trigger be enabled? Defaults to `true`.
     * 
     */
    private @Nullable Boolean enabled;
    /**
     * @return The name which should be used for this trigger.
     * 
     */
    private String name;
    /**
     * @return The type of the trigger. Possible values are `All` and `Runtime`.
     * 
     */
    private String type;
    /**
     * @return The endpoint URL for receiving the trigger.
     * 
     */
    private @Nullable String updateTriggerEndpoint;
    /**
     * @return Type of payload body for the trigger. Possible values are `Default` and `Token`.
     * 
     */
    private @Nullable String updateTriggerPayloadType;

    private RegistryTaskBaseImageTrigger() {}
    /**
     * @return Should the trigger be enabled? Defaults to `true`.
     * 
     */
    public Optional<Boolean> enabled() {
        return Optional.ofNullable(this.enabled);
    }
    /**
     * @return The name which should be used for this trigger.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The type of the trigger. Possible values are `All` and `Runtime`.
     * 
     */
    public String type() {
        return this.type;
    }
    /**
     * @return The endpoint URL for receiving the trigger.
     * 
     */
    public Optional<String> updateTriggerEndpoint() {
        return Optional.ofNullable(this.updateTriggerEndpoint);
    }
    /**
     * @return Type of payload body for the trigger. Possible values are `Default` and `Token`.
     * 
     */
    public Optional<String> updateTriggerPayloadType() {
        return Optional.ofNullable(this.updateTriggerPayloadType);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(RegistryTaskBaseImageTrigger defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Boolean enabled;
        private String name;
        private String type;
        private @Nullable String updateTriggerEndpoint;
        private @Nullable String updateTriggerPayloadType;
        public Builder() {}
        public Builder(RegistryTaskBaseImageTrigger defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.enabled = defaults.enabled;
    	      this.name = defaults.name;
    	      this.type = defaults.type;
    	      this.updateTriggerEndpoint = defaults.updateTriggerEndpoint;
    	      this.updateTriggerPayloadType = defaults.updateTriggerPayloadType;
        }

        @CustomType.Setter
        public Builder enabled(@Nullable Boolean enabled) {

            this.enabled = enabled;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("RegistryTaskBaseImageTrigger", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            if (type == null) {
              throw new MissingRequiredPropertyException("RegistryTaskBaseImageTrigger", "type");
            }
            this.type = type;
            return this;
        }
        @CustomType.Setter
        public Builder updateTriggerEndpoint(@Nullable String updateTriggerEndpoint) {

            this.updateTriggerEndpoint = updateTriggerEndpoint;
            return this;
        }
        @CustomType.Setter
        public Builder updateTriggerPayloadType(@Nullable String updateTriggerPayloadType) {

            this.updateTriggerPayloadType = updateTriggerPayloadType;
            return this;
        }
        public RegistryTaskBaseImageTrigger build() {
            final var _resultValue = new RegistryTaskBaseImageTrigger();
            _resultValue.enabled = enabled;
            _resultValue.name = name;
            _resultValue.type = type;
            _resultValue.updateTriggerEndpoint = updateTriggerEndpoint;
            _resultValue.updateTriggerPayloadType = updateTriggerPayloadType;
            return _resultValue;
        }
    }
}
