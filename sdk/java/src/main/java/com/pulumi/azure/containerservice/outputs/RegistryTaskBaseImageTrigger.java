// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.containerservice.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class RegistryTaskBaseImageTrigger {
    /**
     * @return Should the trigger be enabled? Defaults to `true`.
     * 
     */
    private final @Nullable Boolean enabled;
    /**
     * @return The name which should be used for this trigger.
     * 
     */
    private final String name;
    /**
     * @return The type of the trigger. Possible values are `All` and `Runtime`.
     * 
     */
    private final String type;
    /**
     * @return The endpoint URL for receiving the trigger.
     * 
     */
    private final @Nullable String updateTriggerEndpoint;
    /**
     * @return Type of payload body for the trigger. Possible values are `Default` and `Token`.
     * 
     */
    private final @Nullable String updateTriggerPayloadType;

    @CustomType.Constructor
    private RegistryTaskBaseImageTrigger(
        @CustomType.Parameter("enabled") @Nullable Boolean enabled,
        @CustomType.Parameter("name") String name,
        @CustomType.Parameter("type") String type,
        @CustomType.Parameter("updateTriggerEndpoint") @Nullable String updateTriggerEndpoint,
        @CustomType.Parameter("updateTriggerPayloadType") @Nullable String updateTriggerPayloadType) {
        this.enabled = enabled;
        this.name = name;
        this.type = type;
        this.updateTriggerEndpoint = updateTriggerEndpoint;
        this.updateTriggerPayloadType = updateTriggerPayloadType;
    }

    /**
     * @return Should the trigger be enabled? Defaults to `true`.
     * 
     */
    public Optional<Boolean> enabled() {
        return Optional.ofNullable(this.enabled);
    }
    /**
     * @return The name which should be used for this trigger.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The type of the trigger. Possible values are `All` and `Runtime`.
     * 
     */
    public String type() {
        return this.type;
    }
    /**
     * @return The endpoint URL for receiving the trigger.
     * 
     */
    public Optional<String> updateTriggerEndpoint() {
        return Optional.ofNullable(this.updateTriggerEndpoint);
    }
    /**
     * @return Type of payload body for the trigger. Possible values are `Default` and `Token`.
     * 
     */
    public Optional<String> updateTriggerPayloadType() {
        return Optional.ofNullable(this.updateTriggerPayloadType);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(RegistryTaskBaseImageTrigger defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Boolean enabled;
        private String name;
        private String type;
        private @Nullable String updateTriggerEndpoint;
        private @Nullable String updateTriggerPayloadType;

        public Builder() {
    	      // Empty
        }

        public Builder(RegistryTaskBaseImageTrigger defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.enabled = defaults.enabled;
    	      this.name = defaults.name;
    	      this.type = defaults.type;
    	      this.updateTriggerEndpoint = defaults.updateTriggerEndpoint;
    	      this.updateTriggerPayloadType = defaults.updateTriggerPayloadType;
        }

        public Builder enabled(@Nullable Boolean enabled) {
            this.enabled = enabled;
            return this;
        }
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        public Builder updateTriggerEndpoint(@Nullable String updateTriggerEndpoint) {
            this.updateTriggerEndpoint = updateTriggerEndpoint;
            return this;
        }
        public Builder updateTriggerPayloadType(@Nullable String updateTriggerPayloadType) {
            this.updateTriggerPayloadType = updateTriggerPayloadType;
            return this;
        }        public RegistryTaskBaseImageTrigger build() {
            return new RegistryTaskBaseImageTrigger(enabled, name, type, updateTriggerEndpoint, updateTriggerPayloadType);
        }
    }
}
