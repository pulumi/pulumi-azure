// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.storage.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class TableAclAccessPolicyArgs extends com.pulumi.resources.ResourceArgs {

    public static final TableAclAccessPolicyArgs Empty = new TableAclAccessPolicyArgs();

    /**
     * The ISO8061 UTC time at which this Access Policy should be valid until.
     * 
     */
    @Import(name="expiry", required=true)
    private Output<String> expiry;

    /**
     * @return The ISO8061 UTC time at which this Access Policy should be valid until.
     * 
     */
    public Output<String> expiry() {
        return this.expiry;
    }

    /**
     * The permissions which should associated with this Shared Identifier.
     * 
     */
    @Import(name="permissions", required=true)
    private Output<String> permissions;

    /**
     * @return The permissions which should associated with this Shared Identifier.
     * 
     */
    public Output<String> permissions() {
        return this.permissions;
    }

    /**
     * The ISO8061 UTC time at which this Access Policy should be valid from.
     * 
     */
    @Import(name="start", required=true)
    private Output<String> start;

    /**
     * @return The ISO8061 UTC time at which this Access Policy should be valid from.
     * 
     */
    public Output<String> start() {
        return this.start;
    }

    private TableAclAccessPolicyArgs() {}

    private TableAclAccessPolicyArgs(TableAclAccessPolicyArgs $) {
        this.expiry = $.expiry;
        this.permissions = $.permissions;
        this.start = $.start;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TableAclAccessPolicyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TableAclAccessPolicyArgs $;

        public Builder() {
            $ = new TableAclAccessPolicyArgs();
        }

        public Builder(TableAclAccessPolicyArgs defaults) {
            $ = new TableAclAccessPolicyArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param expiry The ISO8061 UTC time at which this Access Policy should be valid until.
         * 
         * @return builder
         * 
         */
        public Builder expiry(Output<String> expiry) {
            $.expiry = expiry;
            return this;
        }

        /**
         * @param expiry The ISO8061 UTC time at which this Access Policy should be valid until.
         * 
         * @return builder
         * 
         */
        public Builder expiry(String expiry) {
            return expiry(Output.of(expiry));
        }

        /**
         * @param permissions The permissions which should associated with this Shared Identifier.
         * 
         * @return builder
         * 
         */
        public Builder permissions(Output<String> permissions) {
            $.permissions = permissions;
            return this;
        }

        /**
         * @param permissions The permissions which should associated with this Shared Identifier.
         * 
         * @return builder
         * 
         */
        public Builder permissions(String permissions) {
            return permissions(Output.of(permissions));
        }

        /**
         * @param start The ISO8061 UTC time at which this Access Policy should be valid from.
         * 
         * @return builder
         * 
         */
        public Builder start(Output<String> start) {
            $.start = start;
            return this;
        }

        /**
         * @param start The ISO8061 UTC time at which this Access Policy should be valid from.
         * 
         * @return builder
         * 
         */
        public Builder start(String start) {
            return start(Output.of(start));
        }

        public TableAclAccessPolicyArgs build() {
            if ($.expiry == null) {
                throw new MissingRequiredPropertyException("TableAclAccessPolicyArgs", "expiry");
            }
            if ($.permissions == null) {
                throw new MissingRequiredPropertyException("TableAclAccessPolicyArgs", "permissions");
            }
            if ($.start == null) {
                throw new MissingRequiredPropertyException("TableAclAccessPolicyArgs", "start");
            }
            return $;
        }
    }

}
