// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.containerapp.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AppIngressTrafficWeightArgs extends com.pulumi.resources.ResourceArgs {

    public static final AppIngressTrafficWeightArgs Empty = new AppIngressTrafficWeightArgs();

    /**
     * The label to apply to the revision as a name prefix for routing traffic.
     * 
     */
    @Import(name="label")
    private @Nullable Output<String> label;

    /**
     * @return The label to apply to the revision as a name prefix for routing traffic.
     * 
     */
    public Optional<Output<String>> label() {
        return Optional.ofNullable(this.label);
    }

    /**
     * This traffic Weight applies to the latest stable Container Revision. At most only one `traffic_weight` block can have the `latest_revision` set to `true`.
     * 
     */
    @Import(name="latestRevision")
    private @Nullable Output<Boolean> latestRevision;

    /**
     * @return This traffic Weight applies to the latest stable Container Revision. At most only one `traffic_weight` block can have the `latest_revision` set to `true`.
     * 
     */
    public Optional<Output<Boolean>> latestRevision() {
        return Optional.ofNullable(this.latestRevision);
    }

    /**
     * The percentage of traffic which should be sent this revision.
     * 
     * &gt; **Note:** The cumulative values for `weight` must equal 100 exactly and explicitly, no default weights are assumed.
     * 
     */
    @Import(name="percentage", required=true)
    private Output<Integer> percentage;

    /**
     * @return The percentage of traffic which should be sent this revision.
     * 
     * &gt; **Note:** The cumulative values for `weight` must equal 100 exactly and explicitly, no default weights are assumed.
     * 
     */
    public Output<Integer> percentage() {
        return this.percentage;
    }

    /**
     * The suffix string to which this `traffic_weight` applies.
     * 
     * &gt; **Note:** `latest_revision` conflicts with `revision_suffix`, which means you shall either set `latest_revision` to `true` or specify `revision_suffix`. Especially for creation, there shall only be one `traffic_weight`, with the `latest_revision` set to `true`, and leave the `revision_suffix` empty.
     * 
     */
    @Import(name="revisionSuffix")
    private @Nullable Output<String> revisionSuffix;

    /**
     * @return The suffix string to which this `traffic_weight` applies.
     * 
     * &gt; **Note:** `latest_revision` conflicts with `revision_suffix`, which means you shall either set `latest_revision` to `true` or specify `revision_suffix`. Especially for creation, there shall only be one `traffic_weight`, with the `latest_revision` set to `true`, and leave the `revision_suffix` empty.
     * 
     */
    public Optional<Output<String>> revisionSuffix() {
        return Optional.ofNullable(this.revisionSuffix);
    }

    private AppIngressTrafficWeightArgs() {}

    private AppIngressTrafficWeightArgs(AppIngressTrafficWeightArgs $) {
        this.label = $.label;
        this.latestRevision = $.latestRevision;
        this.percentage = $.percentage;
        this.revisionSuffix = $.revisionSuffix;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AppIngressTrafficWeightArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AppIngressTrafficWeightArgs $;

        public Builder() {
            $ = new AppIngressTrafficWeightArgs();
        }

        public Builder(AppIngressTrafficWeightArgs defaults) {
            $ = new AppIngressTrafficWeightArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param label The label to apply to the revision as a name prefix for routing traffic.
         * 
         * @return builder
         * 
         */
        public Builder label(@Nullable Output<String> label) {
            $.label = label;
            return this;
        }

        /**
         * @param label The label to apply to the revision as a name prefix for routing traffic.
         * 
         * @return builder
         * 
         */
        public Builder label(String label) {
            return label(Output.of(label));
        }

        /**
         * @param latestRevision This traffic Weight applies to the latest stable Container Revision. At most only one `traffic_weight` block can have the `latest_revision` set to `true`.
         * 
         * @return builder
         * 
         */
        public Builder latestRevision(@Nullable Output<Boolean> latestRevision) {
            $.latestRevision = latestRevision;
            return this;
        }

        /**
         * @param latestRevision This traffic Weight applies to the latest stable Container Revision. At most only one `traffic_weight` block can have the `latest_revision` set to `true`.
         * 
         * @return builder
         * 
         */
        public Builder latestRevision(Boolean latestRevision) {
            return latestRevision(Output.of(latestRevision));
        }

        /**
         * @param percentage The percentage of traffic which should be sent this revision.
         * 
         * &gt; **Note:** The cumulative values for `weight` must equal 100 exactly and explicitly, no default weights are assumed.
         * 
         * @return builder
         * 
         */
        public Builder percentage(Output<Integer> percentage) {
            $.percentage = percentage;
            return this;
        }

        /**
         * @param percentage The percentage of traffic which should be sent this revision.
         * 
         * &gt; **Note:** The cumulative values for `weight` must equal 100 exactly and explicitly, no default weights are assumed.
         * 
         * @return builder
         * 
         */
        public Builder percentage(Integer percentage) {
            return percentage(Output.of(percentage));
        }

        /**
         * @param revisionSuffix The suffix string to which this `traffic_weight` applies.
         * 
         * &gt; **Note:** `latest_revision` conflicts with `revision_suffix`, which means you shall either set `latest_revision` to `true` or specify `revision_suffix`. Especially for creation, there shall only be one `traffic_weight`, with the `latest_revision` set to `true`, and leave the `revision_suffix` empty.
         * 
         * @return builder
         * 
         */
        public Builder revisionSuffix(@Nullable Output<String> revisionSuffix) {
            $.revisionSuffix = revisionSuffix;
            return this;
        }

        /**
         * @param revisionSuffix The suffix string to which this `traffic_weight` applies.
         * 
         * &gt; **Note:** `latest_revision` conflicts with `revision_suffix`, which means you shall either set `latest_revision` to `true` or specify `revision_suffix`. Especially for creation, there shall only be one `traffic_weight`, with the `latest_revision` set to `true`, and leave the `revision_suffix` empty.
         * 
         * @return builder
         * 
         */
        public Builder revisionSuffix(String revisionSuffix) {
            return revisionSuffix(Output.of(revisionSuffix));
        }

        public AppIngressTrafficWeightArgs build() {
            if ($.percentage == null) {
                throw new MissingRequiredPropertyException("AppIngressTrafficWeightArgs", "percentage");
            }
            return $;
        }
    }

}
