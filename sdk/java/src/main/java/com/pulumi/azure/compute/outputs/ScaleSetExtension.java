// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.compute.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ScaleSetExtension {
    /**
     * @return Specifies whether or not to use the latest minor version available.
     * 
     */
    private @Nullable Boolean autoUpgradeMinorVersion;
    /**
     * @return Specifies the name of the extension.
     * 
     */
    private String name;
    /**
     * @return The protected_settings passed to the extension, like settings, these are specified as a JSON object in a string.
     * 
     */
    private @Nullable String protectedSettings;
    /**
     * @return Specifies a dependency array of extensions required to be executed before, the array stores the name of each extension.
     * 
     */
    private @Nullable List<String> provisionAfterExtensions;
    /**
     * @return The publisher of the extension, available publishers can be found by using the Azure CLI.
     * 
     */
    private String publisher;
    /**
     * @return The settings passed to the extension, these are specified as a JSON object in a string.
     * 
     */
    private @Nullable String settings;
    /**
     * @return The type of extension, available types for a publisher can be found using the Azure CLI.
     * 
     */
    private String type;
    /**
     * @return Specifies the version of the extension to use, available versions can be found using the Azure CLI.
     * 
     */
    private String typeHandlerVersion;

    private ScaleSetExtension() {}
    /**
     * @return Specifies whether or not to use the latest minor version available.
     * 
     */
    public Optional<Boolean> autoUpgradeMinorVersion() {
        return Optional.ofNullable(this.autoUpgradeMinorVersion);
    }
    /**
     * @return Specifies the name of the extension.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The protected_settings passed to the extension, like settings, these are specified as a JSON object in a string.
     * 
     */
    public Optional<String> protectedSettings() {
        return Optional.ofNullable(this.protectedSettings);
    }
    /**
     * @return Specifies a dependency array of extensions required to be executed before, the array stores the name of each extension.
     * 
     */
    public List<String> provisionAfterExtensions() {
        return this.provisionAfterExtensions == null ? List.of() : this.provisionAfterExtensions;
    }
    /**
     * @return The publisher of the extension, available publishers can be found by using the Azure CLI.
     * 
     */
    public String publisher() {
        return this.publisher;
    }
    /**
     * @return The settings passed to the extension, these are specified as a JSON object in a string.
     * 
     */
    public Optional<String> settings() {
        return Optional.ofNullable(this.settings);
    }
    /**
     * @return The type of extension, available types for a publisher can be found using the Azure CLI.
     * 
     */
    public String type() {
        return this.type;
    }
    /**
     * @return Specifies the version of the extension to use, available versions can be found using the Azure CLI.
     * 
     */
    public String typeHandlerVersion() {
        return this.typeHandlerVersion;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ScaleSetExtension defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Boolean autoUpgradeMinorVersion;
        private String name;
        private @Nullable String protectedSettings;
        private @Nullable List<String> provisionAfterExtensions;
        private String publisher;
        private @Nullable String settings;
        private String type;
        private String typeHandlerVersion;
        public Builder() {}
        public Builder(ScaleSetExtension defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.autoUpgradeMinorVersion = defaults.autoUpgradeMinorVersion;
    	      this.name = defaults.name;
    	      this.protectedSettings = defaults.protectedSettings;
    	      this.provisionAfterExtensions = defaults.provisionAfterExtensions;
    	      this.publisher = defaults.publisher;
    	      this.settings = defaults.settings;
    	      this.type = defaults.type;
    	      this.typeHandlerVersion = defaults.typeHandlerVersion;
        }

        @CustomType.Setter
        public Builder autoUpgradeMinorVersion(@Nullable Boolean autoUpgradeMinorVersion) {

            this.autoUpgradeMinorVersion = autoUpgradeMinorVersion;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("ScaleSetExtension", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder protectedSettings(@Nullable String protectedSettings) {

            this.protectedSettings = protectedSettings;
            return this;
        }
        @CustomType.Setter
        public Builder provisionAfterExtensions(@Nullable List<String> provisionAfterExtensions) {

            this.provisionAfterExtensions = provisionAfterExtensions;
            return this;
        }
        public Builder provisionAfterExtensions(String... provisionAfterExtensions) {
            return provisionAfterExtensions(List.of(provisionAfterExtensions));
        }
        @CustomType.Setter
        public Builder publisher(String publisher) {
            if (publisher == null) {
              throw new MissingRequiredPropertyException("ScaleSetExtension", "publisher");
            }
            this.publisher = publisher;
            return this;
        }
        @CustomType.Setter
        public Builder settings(@Nullable String settings) {

            this.settings = settings;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            if (type == null) {
              throw new MissingRequiredPropertyException("ScaleSetExtension", "type");
            }
            this.type = type;
            return this;
        }
        @CustomType.Setter
        public Builder typeHandlerVersion(String typeHandlerVersion) {
            if (typeHandlerVersion == null) {
              throw new MissingRequiredPropertyException("ScaleSetExtension", "typeHandlerVersion");
            }
            this.typeHandlerVersion = typeHandlerVersion;
            return this;
        }
        public ScaleSetExtension build() {
            final var _resultValue = new ScaleSetExtension();
            _resultValue.autoUpgradeMinorVersion = autoUpgradeMinorVersion;
            _resultValue.name = name;
            _resultValue.protectedSettings = protectedSettings;
            _resultValue.provisionAfterExtensions = provisionAfterExtensions;
            _resultValue.publisher = publisher;
            _resultValue.settings = settings;
            _resultValue.type = type;
            _resultValue.typeHandlerVersion = typeHandlerVersion;
            return _resultValue;
        }
    }
}
