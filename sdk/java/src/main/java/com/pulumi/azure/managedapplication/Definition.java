// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.managedapplication;

import com.pulumi.azure.Utilities;
import com.pulumi.azure.managedapplication.DefinitionArgs;
import com.pulumi.azure.managedapplication.inputs.DefinitionState;
import com.pulumi.azure.managedapplication.outputs.DefinitionAuthorization;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Manages a Managed Application Definition.
 * 
 * ## Example Usage
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.azure.core.CoreFunctions;
 * import com.pulumi.azure.core.ResourceGroup;
 * import com.pulumi.azure.core.ResourceGroupArgs;
 * import com.pulumi.azure.managedapplication.Definition;
 * import com.pulumi.azure.managedapplication.DefinitionArgs;
 * import com.pulumi.azure.managedapplication.inputs.DefinitionAuthorizationArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         final var current = CoreFunctions.getClientConfig();
 * 
 *         var exampleResourceGroup = new ResourceGroup(&#34;exampleResourceGroup&#34;, ResourceGroupArgs.builder()        
 *             .location(&#34;West Europe&#34;)
 *             .build());
 * 
 *         var exampleDefinition = new Definition(&#34;exampleDefinition&#34;, DefinitionArgs.builder()        
 *             .location(exampleResourceGroup.location())
 *             .resourceGroupName(exampleResourceGroup.name())
 *             .lockLevel(&#34;ReadOnly&#34;)
 *             .packageFileUri(&#34;https://github.com/Azure/azure-managedapp-samples/raw/master/Managed Application Sample Packages/201-managed-storage-account/managedstorage.zip&#34;)
 *             .displayName(&#34;TestManagedApplicationDefinition&#34;)
 *             .description(&#34;Test Managed Application Definition&#34;)
 *             .authorizations(DefinitionAuthorizationArgs.builder()
 *                 .servicePrincipalId(current.applyValue(getClientConfigResult -&gt; getClientConfigResult.objectId()))
 *                 .roleDefinitionId(&#34;a094b430-dad3-424d-ae58-13f72fd72591&#34;)
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * Managed Application Definition can be imported using the `resource id`, e.g.
 * 
 * ```sh
 *  $ pulumi import azure:managedapplication/definition:Definition example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.Solutions/applicationDefinitions/appDefinition1
 * ```
 * 
 */
@ResourceType(type="azure:managedapplication/definition:Definition")
public class Definition extends com.pulumi.resources.CustomResource {
    /**
     * One or more `authorization` block defined below.
     * 
     */
    @Export(name="authorizations", type=List.class, parameters={DefinitionAuthorization.class})
    private Output</* @Nullable */ List<DefinitionAuthorization>> authorizations;

    /**
     * @return One or more `authorization` block defined below.
     * 
     */
    public Output<Optional<List<DefinitionAuthorization>>> authorizations() {
        return Codegen.optional(this.authorizations);
    }
    /**
     * Specifies the `createUiDefinition` JSON for the backing template with `Microsoft.Solutions/applications` resource.
     * 
     */
    @Export(name="createUiDefinition", type=String.class, parameters={})
    private Output</* @Nullable */ String> createUiDefinition;

    /**
     * @return Specifies the `createUiDefinition` JSON for the backing template with `Microsoft.Solutions/applications` resource.
     * 
     */
    public Output<Optional<String>> createUiDefinition() {
        return Codegen.optional(this.createUiDefinition);
    }
    /**
     * Specifies the managed application definition description.
     * 
     */
    @Export(name="description", type=String.class, parameters={})
    private Output</* @Nullable */ String> description;

    /**
     * @return Specifies the managed application definition description.
     * 
     */
    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    /**
     * Specifies the managed application definition display name.
     * 
     */
    @Export(name="displayName", type=String.class, parameters={})
    private Output<String> displayName;

    /**
     * @return Specifies the managed application definition display name.
     * 
     */
    public Output<String> displayName() {
        return this.displayName;
    }
    /**
     * Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="location", type=String.class, parameters={})
    private Output<String> location;

    /**
     * @return Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> location() {
        return this.location;
    }
    /**
     * Specifies the managed application lock level. Valid values include `CanNotDelete`, `None`, `ReadOnly`. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="lockLevel", type=String.class, parameters={})
    private Output<String> lockLevel;

    /**
     * @return Specifies the managed application lock level. Valid values include `CanNotDelete`, `None`, `ReadOnly`. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> lockLevel() {
        return this.lockLevel;
    }
    /**
     * Specifies the inline main template JSON which has resources to be provisioned.
     * 
     */
    @Export(name="mainTemplate", type=String.class, parameters={})
    private Output</* @Nullable */ String> mainTemplate;

    /**
     * @return Specifies the inline main template JSON which has resources to be provisioned.
     * 
     */
    public Output<Optional<String>> mainTemplate() {
        return Codegen.optional(this.mainTemplate);
    }
    /**
     * Specifies the name of the Managed Application Definition. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return Specifies the name of the Managed Application Definition. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Is the package enabled? Defaults to `true`.
     * 
     */
    @Export(name="packageEnabled", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> packageEnabled;

    /**
     * @return Is the package enabled? Defaults to `true`.
     * 
     */
    public Output<Optional<Boolean>> packageEnabled() {
        return Codegen.optional(this.packageEnabled);
    }
    /**
     * Specifies the managed application definition package file Uri.
     * 
     */
    @Export(name="packageFileUri", type=String.class, parameters={})
    private Output</* @Nullable */ String> packageFileUri;

    /**
     * @return Specifies the managed application definition package file Uri.
     * 
     */
    public Output<Optional<String>> packageFileUri() {
        return Codegen.optional(this.packageFileUri);
    }
    /**
     * The name of the Resource Group where the Managed Application Definition should exist. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="resourceGroupName", type=String.class, parameters={})
    private Output<String> resourceGroupName;

    /**
     * @return The name of the Resource Group where the Managed Application Definition should exist. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }
    /**
     * A mapping of tags to assign to the resource.
     * 
     */
    @Export(name="tags", type=Map.class, parameters={String.class, String.class})
    private Output</* @Nullable */ Map<String,String>> tags;

    /**
     * @return A mapping of tags to assign to the resource.
     * 
     */
    public Output<Optional<Map<String,String>>> tags() {
        return Codegen.optional(this.tags);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Definition(String name) {
        this(name, DefinitionArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Definition(String name, DefinitionArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Definition(String name, DefinitionArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:managedapplication/definition:Definition", name, args == null ? DefinitionArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private Definition(String name, Output<String> id, @Nullable DefinitionState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:managedapplication/definition:Definition", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Definition get(String name, Output<String> id, @Nullable DefinitionState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Definition(name, id, state, options);
    }
}
