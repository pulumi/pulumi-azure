// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.containerservice.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetKubernetesClusterKeyManagementService {
    /**
     * @return Identifier of Azure Key Vault key. See [key identifier format](https://learn.microsoft.com/en-us/azure/key-vault/general/about-keys-secrets-certificates#vault-name-and-object-name) for more details.
     * 
     */
    private String keyVaultKeyId;
    /**
     * @return Network access of the key vault. The possible values are `Public` and `Private`. `Public` means the key vault allows public access from all networks. `Private` means the key vault disables public access and enables private link.
     * 
     */
    private String keyVaultNetworkAccess;

    private GetKubernetesClusterKeyManagementService() {}
    /**
     * @return Identifier of Azure Key Vault key. See [key identifier format](https://learn.microsoft.com/en-us/azure/key-vault/general/about-keys-secrets-certificates#vault-name-and-object-name) for more details.
     * 
     */
    public String keyVaultKeyId() {
        return this.keyVaultKeyId;
    }
    /**
     * @return Network access of the key vault. The possible values are `Public` and `Private`. `Public` means the key vault allows public access from all networks. `Private` means the key vault disables public access and enables private link.
     * 
     */
    public String keyVaultNetworkAccess() {
        return this.keyVaultNetworkAccess;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetKubernetesClusterKeyManagementService defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String keyVaultKeyId;
        private String keyVaultNetworkAccess;
        public Builder() {}
        public Builder(GetKubernetesClusterKeyManagementService defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.keyVaultKeyId = defaults.keyVaultKeyId;
    	      this.keyVaultNetworkAccess = defaults.keyVaultNetworkAccess;
        }

        @CustomType.Setter
        public Builder keyVaultKeyId(String keyVaultKeyId) {
            if (keyVaultKeyId == null) {
              throw new MissingRequiredPropertyException("GetKubernetesClusterKeyManagementService", "keyVaultKeyId");
            }
            this.keyVaultKeyId = keyVaultKeyId;
            return this;
        }
        @CustomType.Setter
        public Builder keyVaultNetworkAccess(String keyVaultNetworkAccess) {
            if (keyVaultNetworkAccess == null) {
              throw new MissingRequiredPropertyException("GetKubernetesClusterKeyManagementService", "keyVaultNetworkAccess");
            }
            this.keyVaultNetworkAccess = keyVaultNetworkAccess;
            return this;
        }
        public GetKubernetesClusterKeyManagementService build() {
            final var _resultValue = new GetKubernetesClusterKeyManagementService();
            _resultValue.keyVaultKeyId = keyVaultKeyId;
            _resultValue.keyVaultNetworkAccess = keyVaultNetworkAccess;
            return _resultValue;
        }
    }
}
