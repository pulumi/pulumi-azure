// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.compute.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class LinuxVirtualMachineScaleSetTerminateNotificationArgs extends com.pulumi.resources.ResourceArgs {

    public static final LinuxVirtualMachineScaleSetTerminateNotificationArgs Empty = new LinuxVirtualMachineScaleSetTerminateNotificationArgs();

    /**
     * Should the terminate notification be enabled on this Virtual Machine Scale Set? Defaults to `false`.
     * 
     */
    @Import(name="enabled", required=true)
    private Output<Boolean> enabled;

    /**
     * @return Should the terminate notification be enabled on this Virtual Machine Scale Set? Defaults to `false`.
     * 
     */
    public Output<Boolean> enabled() {
        return this.enabled;
    }

    /**
     * Length of time (in minutes, between 5 and 15) a notification to be sent to the VM on the instance metadata server till the VM gets deleted. The time duration should be specified in ISO 8601 format.
     * 
     */
    @Import(name="timeout")
    private @Nullable Output<String> timeout;

    /**
     * @return Length of time (in minutes, between 5 and 15) a notification to be sent to the VM on the instance metadata server till the VM gets deleted. The time duration should be specified in ISO 8601 format.
     * 
     */
    public Optional<Output<String>> timeout() {
        return Optional.ofNullable(this.timeout);
    }

    private LinuxVirtualMachineScaleSetTerminateNotificationArgs() {}

    private LinuxVirtualMachineScaleSetTerminateNotificationArgs(LinuxVirtualMachineScaleSetTerminateNotificationArgs $) {
        this.enabled = $.enabled;
        this.timeout = $.timeout;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(LinuxVirtualMachineScaleSetTerminateNotificationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private LinuxVirtualMachineScaleSetTerminateNotificationArgs $;

        public Builder() {
            $ = new LinuxVirtualMachineScaleSetTerminateNotificationArgs();
        }

        public Builder(LinuxVirtualMachineScaleSetTerminateNotificationArgs defaults) {
            $ = new LinuxVirtualMachineScaleSetTerminateNotificationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param enabled Should the terminate notification be enabled on this Virtual Machine Scale Set? Defaults to `false`.
         * 
         * @return builder
         * 
         */
        public Builder enabled(Output<Boolean> enabled) {
            $.enabled = enabled;
            return this;
        }

        /**
         * @param enabled Should the terminate notification be enabled on this Virtual Machine Scale Set? Defaults to `false`.
         * 
         * @return builder
         * 
         */
        public Builder enabled(Boolean enabled) {
            return enabled(Output.of(enabled));
        }

        /**
         * @param timeout Length of time (in minutes, between 5 and 15) a notification to be sent to the VM on the instance metadata server till the VM gets deleted. The time duration should be specified in ISO 8601 format.
         * 
         * @return builder
         * 
         */
        public Builder timeout(@Nullable Output<String> timeout) {
            $.timeout = timeout;
            return this;
        }

        /**
         * @param timeout Length of time (in minutes, between 5 and 15) a notification to be sent to the VM on the instance metadata server till the VM gets deleted. The time duration should be specified in ISO 8601 format.
         * 
         * @return builder
         * 
         */
        public Builder timeout(String timeout) {
            return timeout(Output.of(timeout));
        }

        public LinuxVirtualMachineScaleSetTerminateNotificationArgs build() {
            $.enabled = Objects.requireNonNull($.enabled, "expected parameter 'enabled' to be non-null");
            return $;
        }
    }

}
