// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.monitoring.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetActionGroupEventHubReceiver extends com.pulumi.resources.InvokeArgs {

    public static final GetActionGroupEventHubReceiver Empty = new GetActionGroupEventHubReceiver();

    /**
     * The resource ID of the respective Event Hub.
     * 
     */
    @Import(name="eventHubId", required=true)
    private String eventHubId;

    /**
     * @return The resource ID of the respective Event Hub.
     * 
     */
    public String eventHubId() {
        return this.eventHubId;
    }

    /**
     * Specifies the name of the Action Group.
     * 
     */
    @Import(name="name", required=true)
    private String name;

    /**
     * @return Specifies the name of the Action Group.
     * 
     */
    public String name() {
        return this.name;
    }

    /**
     * The Tenant ID for the subscription containing this Event Hub.
     * 
     */
    @Import(name="tenantId", required=true)
    private String tenantId;

    /**
     * @return The Tenant ID for the subscription containing this Event Hub.
     * 
     */
    public String tenantId() {
        return this.tenantId;
    }

    /**
     * Indicates whether to use common alert schema.
     * 
     */
    @Import(name="useCommonAlertSchema")
    private @Nullable Boolean useCommonAlertSchema;

    /**
     * @return Indicates whether to use common alert schema.
     * 
     */
    public Optional<Boolean> useCommonAlertSchema() {
        return Optional.ofNullable(this.useCommonAlertSchema);
    }

    private GetActionGroupEventHubReceiver() {}

    private GetActionGroupEventHubReceiver(GetActionGroupEventHubReceiver $) {
        this.eventHubId = $.eventHubId;
        this.name = $.name;
        this.tenantId = $.tenantId;
        this.useCommonAlertSchema = $.useCommonAlertSchema;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetActionGroupEventHubReceiver defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetActionGroupEventHubReceiver $;

        public Builder() {
            $ = new GetActionGroupEventHubReceiver();
        }

        public Builder(GetActionGroupEventHubReceiver defaults) {
            $ = new GetActionGroupEventHubReceiver(Objects.requireNonNull(defaults));
        }

        /**
         * @param eventHubId The resource ID of the respective Event Hub.
         * 
         * @return builder
         * 
         */
        public Builder eventHubId(String eventHubId) {
            $.eventHubId = eventHubId;
            return this;
        }

        /**
         * @param name Specifies the name of the Action Group.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            $.name = name;
            return this;
        }

        /**
         * @param tenantId The Tenant ID for the subscription containing this Event Hub.
         * 
         * @return builder
         * 
         */
        public Builder tenantId(String tenantId) {
            $.tenantId = tenantId;
            return this;
        }

        /**
         * @param useCommonAlertSchema Indicates whether to use common alert schema.
         * 
         * @return builder
         * 
         */
        public Builder useCommonAlertSchema(@Nullable Boolean useCommonAlertSchema) {
            $.useCommonAlertSchema = useCommonAlertSchema;
            return this;
        }

        public GetActionGroupEventHubReceiver build() {
            $.eventHubId = Objects.requireNonNull($.eventHubId, "expected parameter 'eventHubId' to be non-null");
            $.name = Objects.requireNonNull($.name, "expected parameter 'name' to be non-null");
            $.tenantId = Objects.requireNonNull($.tenantId, "expected parameter 'tenantId' to be non-null");
            return $;
        }
    }

}
