// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.siterecovery.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class ReplicatedVMManagedDiskTargetDiskEncryptionKeyEncryptionKeyArgs extends com.pulumi.resources.ResourceArgs {

    public static final ReplicatedVMManagedDiskTargetDiskEncryptionKeyEncryptionKeyArgs Empty = new ReplicatedVMManagedDiskTargetDiskEncryptionKeyEncryptionKeyArgs();

    /**
     * The URL to the Key Vault Key used as the Key Encryption Key that the Managed Disk will be associated with. This can be found as `id` on the `azure.keyvault.Key` resource. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="keyUrl", required=true)
    private Output<String> keyUrl;

    /**
     * @return The URL to the Key Vault Key used as the Key Encryption Key that the Managed Disk will be associated with. This can be found as `id` on the `azure.keyvault.Key` resource. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> keyUrl() {
        return this.keyUrl;
    }

    /**
     * The ID of the Key Vault. This can be found as `id` on the `azure.keyvault.KeyVault` resource. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="vaultId", required=true)
    private Output<String> vaultId;

    /**
     * @return The ID of the Key Vault. This can be found as `id` on the `azure.keyvault.KeyVault` resource. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> vaultId() {
        return this.vaultId;
    }

    private ReplicatedVMManagedDiskTargetDiskEncryptionKeyEncryptionKeyArgs() {}

    private ReplicatedVMManagedDiskTargetDiskEncryptionKeyEncryptionKeyArgs(ReplicatedVMManagedDiskTargetDiskEncryptionKeyEncryptionKeyArgs $) {
        this.keyUrl = $.keyUrl;
        this.vaultId = $.vaultId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ReplicatedVMManagedDiskTargetDiskEncryptionKeyEncryptionKeyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ReplicatedVMManagedDiskTargetDiskEncryptionKeyEncryptionKeyArgs $;

        public Builder() {
            $ = new ReplicatedVMManagedDiskTargetDiskEncryptionKeyEncryptionKeyArgs();
        }

        public Builder(ReplicatedVMManagedDiskTargetDiskEncryptionKeyEncryptionKeyArgs defaults) {
            $ = new ReplicatedVMManagedDiskTargetDiskEncryptionKeyEncryptionKeyArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param keyUrl The URL to the Key Vault Key used as the Key Encryption Key that the Managed Disk will be associated with. This can be found as `id` on the `azure.keyvault.Key` resource. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder keyUrl(Output<String> keyUrl) {
            $.keyUrl = keyUrl;
            return this;
        }

        /**
         * @param keyUrl The URL to the Key Vault Key used as the Key Encryption Key that the Managed Disk will be associated with. This can be found as `id` on the `azure.keyvault.Key` resource. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder keyUrl(String keyUrl) {
            return keyUrl(Output.of(keyUrl));
        }

        /**
         * @param vaultId The ID of the Key Vault. This can be found as `id` on the `azure.keyvault.KeyVault` resource. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder vaultId(Output<String> vaultId) {
            $.vaultId = vaultId;
            return this;
        }

        /**
         * @param vaultId The ID of the Key Vault. This can be found as `id` on the `azure.keyvault.KeyVault` resource. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder vaultId(String vaultId) {
            return vaultId(Output.of(vaultId));
        }

        public ReplicatedVMManagedDiskTargetDiskEncryptionKeyEncryptionKeyArgs build() {
            if ($.keyUrl == null) {
                throw new MissingRequiredPropertyException("ReplicatedVMManagedDiskTargetDiskEncryptionKeyEncryptionKeyArgs", "keyUrl");
            }
            if ($.vaultId == null) {
                throw new MissingRequiredPropertyException("ReplicatedVMManagedDiskTargetDiskEncryptionKeyEncryptionKeyArgs", "vaultId");
            }
            return $;
        }
    }

}
