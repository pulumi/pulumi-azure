// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.privatedns.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetResolverVirtualNetworkLinkResult {
    private String dnsForwardingRulesetId;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return The metadata attached to the Private DNS Resolver Virtual Network Link.
     * 
     */
    private Map<String,String> metadata;
    private String name;
    /**
     * @return The ID of the Virtual Network that is linked to the Private DNS Resolver Virtual Network Link.
     * 
     */
    private String virtualNetworkId;

    private GetResolverVirtualNetworkLinkResult() {}
    public String dnsForwardingRulesetId() {
        return this.dnsForwardingRulesetId;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The metadata attached to the Private DNS Resolver Virtual Network Link.
     * 
     */
    public Map<String,String> metadata() {
        return this.metadata;
    }
    public String name() {
        return this.name;
    }
    /**
     * @return The ID of the Virtual Network that is linked to the Private DNS Resolver Virtual Network Link.
     * 
     */
    public String virtualNetworkId() {
        return this.virtualNetworkId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetResolverVirtualNetworkLinkResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String dnsForwardingRulesetId;
        private String id;
        private Map<String,String> metadata;
        private String name;
        private String virtualNetworkId;
        public Builder() {}
        public Builder(GetResolverVirtualNetworkLinkResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.dnsForwardingRulesetId = defaults.dnsForwardingRulesetId;
    	      this.id = defaults.id;
    	      this.metadata = defaults.metadata;
    	      this.name = defaults.name;
    	      this.virtualNetworkId = defaults.virtualNetworkId;
        }

        @CustomType.Setter
        public Builder dnsForwardingRulesetId(String dnsForwardingRulesetId) {
            if (dnsForwardingRulesetId == null) {
              throw new MissingRequiredPropertyException("GetResolverVirtualNetworkLinkResult", "dnsForwardingRulesetId");
            }
            this.dnsForwardingRulesetId = dnsForwardingRulesetId;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetResolverVirtualNetworkLinkResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder metadata(Map<String,String> metadata) {
            if (metadata == null) {
              throw new MissingRequiredPropertyException("GetResolverVirtualNetworkLinkResult", "metadata");
            }
            this.metadata = metadata;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetResolverVirtualNetworkLinkResult", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder virtualNetworkId(String virtualNetworkId) {
            if (virtualNetworkId == null) {
              throw new MissingRequiredPropertyException("GetResolverVirtualNetworkLinkResult", "virtualNetworkId");
            }
            this.virtualNetworkId = virtualNetworkId;
            return this;
        }
        public GetResolverVirtualNetworkLinkResult build() {
            final var _resultValue = new GetResolverVirtualNetworkLinkResult();
            _resultValue.dnsForwardingRulesetId = dnsForwardingRulesetId;
            _resultValue.id = id;
            _resultValue.metadata = metadata;
            _resultValue.name = name;
            _resultValue.virtualNetworkId = virtualNetworkId;
            return _resultValue;
        }
    }
}
