// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.sentinel.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class AlertRuleNrtEventGroupingArgs extends com.pulumi.resources.ResourceArgs {

    public static final AlertRuleNrtEventGroupingArgs Empty = new AlertRuleNrtEventGroupingArgs();

    /**
     * The aggregation type of grouping the events. Possible values are `AlertPerResult` and `SingleAlert`.
     * 
     */
    @Import(name="aggregationMethod", required=true)
    private Output<String> aggregationMethod;

    /**
     * @return The aggregation type of grouping the events. Possible values are `AlertPerResult` and `SingleAlert`.
     * 
     */
    public Output<String> aggregationMethod() {
        return this.aggregationMethod;
    }

    private AlertRuleNrtEventGroupingArgs() {}

    private AlertRuleNrtEventGroupingArgs(AlertRuleNrtEventGroupingArgs $) {
        this.aggregationMethod = $.aggregationMethod;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AlertRuleNrtEventGroupingArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AlertRuleNrtEventGroupingArgs $;

        public Builder() {
            $ = new AlertRuleNrtEventGroupingArgs();
        }

        public Builder(AlertRuleNrtEventGroupingArgs defaults) {
            $ = new AlertRuleNrtEventGroupingArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param aggregationMethod The aggregation type of grouping the events. Possible values are `AlertPerResult` and `SingleAlert`.
         * 
         * @return builder
         * 
         */
        public Builder aggregationMethod(Output<String> aggregationMethod) {
            $.aggregationMethod = aggregationMethod;
            return this;
        }

        /**
         * @param aggregationMethod The aggregation type of grouping the events. Possible values are `AlertPerResult` and `SingleAlert`.
         * 
         * @return builder
         * 
         */
        public Builder aggregationMethod(String aggregationMethod) {
            return aggregationMethod(Output.of(aggregationMethod));
        }

        public AlertRuleNrtEventGroupingArgs build() {
            if ($.aggregationMethod == null) {
                throw new MissingRequiredPropertyException("AlertRuleNrtEventGroupingArgs", "aggregationMethod");
            }
            return $;
        }
    }

}
