// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.redis;

import com.pulumi.azure.Utilities;
import com.pulumi.azure.redis.CacheAccessPolicyAssignmentArgs;
import com.pulumi.azure.redis.inputs.CacheAccessPolicyAssignmentState;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import javax.annotation.Nullable;

/**
 * Manages a Redis Cache Access Policy Assignment
 * 
 * ## Example Usage
 * 
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.azure.core.CoreFunctions;
 * import com.pulumi.azure.core.ResourceGroup;
 * import com.pulumi.azure.core.ResourceGroupArgs;
 * import com.pulumi.azure.redis.Cache;
 * import com.pulumi.azure.redis.CacheArgs;
 * import com.pulumi.azure.redis.inputs.CacheRedisConfigurationArgs;
 * import com.pulumi.azure.redis.CacheAccessPolicyAssignment;
 * import com.pulumi.azure.redis.CacheAccessPolicyAssignmentArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         final var test = CoreFunctions.getClientConfig(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference);
 * 
 *         var example = new ResourceGroup("example", ResourceGroupArgs.builder()
 *             .name("example-resources")
 *             .location("East US")
 *             .build());
 * 
 *         var exampleCache = new Cache("exampleCache", CacheArgs.builder()
 *             .name("example")
 *             .location(example.location())
 *             .resourceGroupName(example.name())
 *             .capacity(1)
 *             .family("P")
 *             .skuName("Premium")
 *             .enableNonSslPort(false)
 *             .redisConfiguration(CacheRedisConfigurationArgs.builder()
 *                 .maxmemoryReserved(2)
 *                 .maxmemoryDelta(2)
 *                 .maxmemoryPolicy("allkeys-lru")
 *                 .build())
 *             .build());
 * 
 *         var exampleCacheAccessPolicyAssignment = new CacheAccessPolicyAssignment("exampleCacheAccessPolicyAssignment", CacheAccessPolicyAssignmentArgs.builder()
 *             .name("example")
 *             .redisCacheId(exampleCache.id())
 *             .accessPolicyName("Data Contributor")
 *             .objectId(test.objectId())
 *             .objectIdAlias("ServicePrincipal")
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * 
 * ## API Providers
 * 
 * &lt;!-- This section is generated, changes will be overwritten --&gt;
 * This resource uses the following Azure API Providers:
 * 
 * * `Microsoft.Cache` - 2024-11-01
 * 
 * ## Import
 * 
 * Redis Cache Policy Assignment can be imported using the `resource id`, e.g.
 * 
 * ```sh
 * $ pulumi import azure:redis/cacheAccessPolicyAssignment:CacheAccessPolicyAssignment example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.Cache/redis/cache1/accessPolicyAssignments/assignment1
 * ```
 * 
 */
@ResourceType(type="azure:redis/cacheAccessPolicyAssignment:CacheAccessPolicyAssignment")
public class CacheAccessPolicyAssignment extends com.pulumi.resources.CustomResource {
    /**
     * The name of the Access Policy to be assigned. Changing this forces a new Redis Cache Access Policy Assignment to be created.
     * 
     */
    @Export(name="accessPolicyName", refs={String.class}, tree="[0]")
    private Output<String> accessPolicyName;

    /**
     * @return The name of the Access Policy to be assigned. Changing this forces a new Redis Cache Access Policy Assignment to be created.
     * 
     */
    public Output<String> accessPolicyName() {
        return this.accessPolicyName;
    }
    /**
     * The name of the Redis Cache Access Policy Assignment. Changing this forces a new Redis Cache Access Policy Assignment to be created.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The name of the Redis Cache Access Policy Assignment. Changing this forces a new Redis Cache Access Policy Assignment to be created.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The principal ID to be assigned the Access Policy. Changing this forces a new Redis Cache Access Policy Assignment to be created.
     * 
     */
    @Export(name="objectId", refs={String.class}, tree="[0]")
    private Output<String> objectId;

    /**
     * @return The principal ID to be assigned the Access Policy. Changing this forces a new Redis Cache Access Policy Assignment to be created.
     * 
     */
    public Output<String> objectId() {
        return this.objectId;
    }
    /**
     * The alias of the principal ID. User-friendly name for object ID. Also represents username for token based authentication. Changing this forces a new Redis Cache Access Policy Assignment to be created.
     * 
     */
    @Export(name="objectIdAlias", refs={String.class}, tree="[0]")
    private Output<String> objectIdAlias;

    /**
     * @return The alias of the principal ID. User-friendly name for object ID. Also represents username for token based authentication. Changing this forces a new Redis Cache Access Policy Assignment to be created.
     * 
     */
    public Output<String> objectIdAlias() {
        return this.objectIdAlias;
    }
    /**
     * The ID of the Redis Cache. Changing this forces a new Redis Cache Access Policy Assignment to be created.
     * 
     */
    @Export(name="redisCacheId", refs={String.class}, tree="[0]")
    private Output<String> redisCacheId;

    /**
     * @return The ID of the Redis Cache. Changing this forces a new Redis Cache Access Policy Assignment to be created.
     * 
     */
    public Output<String> redisCacheId() {
        return this.redisCacheId;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public CacheAccessPolicyAssignment(java.lang.String name) {
        this(name, CacheAccessPolicyAssignmentArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public CacheAccessPolicyAssignment(java.lang.String name, CacheAccessPolicyAssignmentArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public CacheAccessPolicyAssignment(java.lang.String name, CacheAccessPolicyAssignmentArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:redis/cacheAccessPolicyAssignment:CacheAccessPolicyAssignment", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private CacheAccessPolicyAssignment(java.lang.String name, Output<java.lang.String> id, @Nullable CacheAccessPolicyAssignmentState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:redis/cacheAccessPolicyAssignment:CacheAccessPolicyAssignment", name, state, makeResourceOptions(options, id), false);
    }

    private static CacheAccessPolicyAssignmentArgs makeArgs(CacheAccessPolicyAssignmentArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? CacheAccessPolicyAssignmentArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static CacheAccessPolicyAssignment get(java.lang.String name, Output<java.lang.String> id, @Nullable CacheAccessPolicyAssignmentState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new CacheAccessPolicyAssignment(name, id, state, options);
    }
}
