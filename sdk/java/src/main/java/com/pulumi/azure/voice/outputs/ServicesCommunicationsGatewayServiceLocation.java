// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.voice.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class ServicesCommunicationsGatewayServiceLocation {
    /**
     * @return Specifies the allowed source IP address or CIDR ranges for media.
     * 
     */
    private @Nullable List<String> allowedMediaSourceAddressPrefixes;
    /**
     * @return Specifies the allowed source IP address or CIDR ranges for signaling.
     * 
     */
    private @Nullable List<String> allowedSignalingSourceAddressPrefixes;
    /**
     * @return IP address to use to contact the ESRP from this region.
     * 
     * !&gt; **NOTE:** The `esrp_addresses` must be specified for each `service_location` when the`e911_type` is set to `DirectToEsrp`.  The `esrp_addresses` must not be specified for each `service_location` when the`e911_type` is set to `Standard`.
     * 
     */
    private @Nullable List<String> esrpAddresses;
    /**
     * @return Specifies the region in which the resources needed for Teams Calling will be deployed.
     * 
     */
    private String location;
    /**
     * @return IP address to use to contact the operator network from this region.
     * 
     */
    private List<String> operatorAddresses;

    private ServicesCommunicationsGatewayServiceLocation() {}
    /**
     * @return Specifies the allowed source IP address or CIDR ranges for media.
     * 
     */
    public List<String> allowedMediaSourceAddressPrefixes() {
        return this.allowedMediaSourceAddressPrefixes == null ? List.of() : this.allowedMediaSourceAddressPrefixes;
    }
    /**
     * @return Specifies the allowed source IP address or CIDR ranges for signaling.
     * 
     */
    public List<String> allowedSignalingSourceAddressPrefixes() {
        return this.allowedSignalingSourceAddressPrefixes == null ? List.of() : this.allowedSignalingSourceAddressPrefixes;
    }
    /**
     * @return IP address to use to contact the ESRP from this region.
     * 
     * !&gt; **NOTE:** The `esrp_addresses` must be specified for each `service_location` when the`e911_type` is set to `DirectToEsrp`.  The `esrp_addresses` must not be specified for each `service_location` when the`e911_type` is set to `Standard`.
     * 
     */
    public List<String> esrpAddresses() {
        return this.esrpAddresses == null ? List.of() : this.esrpAddresses;
    }
    /**
     * @return Specifies the region in which the resources needed for Teams Calling will be deployed.
     * 
     */
    public String location() {
        return this.location;
    }
    /**
     * @return IP address to use to contact the operator network from this region.
     * 
     */
    public List<String> operatorAddresses() {
        return this.operatorAddresses;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ServicesCommunicationsGatewayServiceLocation defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<String> allowedMediaSourceAddressPrefixes;
        private @Nullable List<String> allowedSignalingSourceAddressPrefixes;
        private @Nullable List<String> esrpAddresses;
        private String location;
        private List<String> operatorAddresses;
        public Builder() {}
        public Builder(ServicesCommunicationsGatewayServiceLocation defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.allowedMediaSourceAddressPrefixes = defaults.allowedMediaSourceAddressPrefixes;
    	      this.allowedSignalingSourceAddressPrefixes = defaults.allowedSignalingSourceAddressPrefixes;
    	      this.esrpAddresses = defaults.esrpAddresses;
    	      this.location = defaults.location;
    	      this.operatorAddresses = defaults.operatorAddresses;
        }

        @CustomType.Setter
        public Builder allowedMediaSourceAddressPrefixes(@Nullable List<String> allowedMediaSourceAddressPrefixes) {

            this.allowedMediaSourceAddressPrefixes = allowedMediaSourceAddressPrefixes;
            return this;
        }
        public Builder allowedMediaSourceAddressPrefixes(String... allowedMediaSourceAddressPrefixes) {
            return allowedMediaSourceAddressPrefixes(List.of(allowedMediaSourceAddressPrefixes));
        }
        @CustomType.Setter
        public Builder allowedSignalingSourceAddressPrefixes(@Nullable List<String> allowedSignalingSourceAddressPrefixes) {

            this.allowedSignalingSourceAddressPrefixes = allowedSignalingSourceAddressPrefixes;
            return this;
        }
        public Builder allowedSignalingSourceAddressPrefixes(String... allowedSignalingSourceAddressPrefixes) {
            return allowedSignalingSourceAddressPrefixes(List.of(allowedSignalingSourceAddressPrefixes));
        }
        @CustomType.Setter
        public Builder esrpAddresses(@Nullable List<String> esrpAddresses) {

            this.esrpAddresses = esrpAddresses;
            return this;
        }
        public Builder esrpAddresses(String... esrpAddresses) {
            return esrpAddresses(List.of(esrpAddresses));
        }
        @CustomType.Setter
        public Builder location(String location) {
            if (location == null) {
              throw new MissingRequiredPropertyException("ServicesCommunicationsGatewayServiceLocation", "location");
            }
            this.location = location;
            return this;
        }
        @CustomType.Setter
        public Builder operatorAddresses(List<String> operatorAddresses) {
            if (operatorAddresses == null) {
              throw new MissingRequiredPropertyException("ServicesCommunicationsGatewayServiceLocation", "operatorAddresses");
            }
            this.operatorAddresses = operatorAddresses;
            return this;
        }
        public Builder operatorAddresses(String... operatorAddresses) {
            return operatorAddresses(List.of(operatorAddresses));
        }
        public ServicesCommunicationsGatewayServiceLocation build() {
            final var _resultValue = new ServicesCommunicationsGatewayServiceLocation();
            _resultValue.allowedMediaSourceAddressPrefixes = allowedMediaSourceAddressPrefixes;
            _resultValue.allowedSignalingSourceAddressPrefixes = allowedSignalingSourceAddressPrefixes;
            _resultValue.esrpAddresses = esrpAddresses;
            _resultValue.location = location;
            _resultValue.operatorAddresses = operatorAddresses;
            return _resultValue;
        }
    }
}
