// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.eventhub.outputs;

import com.pulumi.azure.eventhub.outputs.EventHubNamespaceNetworkRulesetsIpRule;
import com.pulumi.azure.eventhub.outputs.EventHubNamespaceNetworkRulesetsVirtualNetworkRule;
import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class EventHubNamespaceNetworkRulesets {
    /**
     * @return The default action to take when a rule is not matched. Possible values are `Allow` and `Deny`. Defaults to `Deny`.
     * 
     */
    private final String defaultAction;
    /**
     * @return One or more `ip_rule` blocks as defined below.
     * 
     */
    private final @Nullable List<EventHubNamespaceNetworkRulesetsIpRule> ipRules;
    /**
     * @return Whether Trusted Microsoft Services are allowed to bypass firewall.
     * 
     */
    private final @Nullable Boolean trustedServiceAccessEnabled;
    /**
     * @return One or more `virtual_network_rule` blocks as defined below.
     * 
     */
    private final @Nullable List<EventHubNamespaceNetworkRulesetsVirtualNetworkRule> virtualNetworkRules;

    @CustomType.Constructor
    private EventHubNamespaceNetworkRulesets(
        @CustomType.Parameter("defaultAction") String defaultAction,
        @CustomType.Parameter("ipRules") @Nullable List<EventHubNamespaceNetworkRulesetsIpRule> ipRules,
        @CustomType.Parameter("trustedServiceAccessEnabled") @Nullable Boolean trustedServiceAccessEnabled,
        @CustomType.Parameter("virtualNetworkRules") @Nullable List<EventHubNamespaceNetworkRulesetsVirtualNetworkRule> virtualNetworkRules) {
        this.defaultAction = defaultAction;
        this.ipRules = ipRules;
        this.trustedServiceAccessEnabled = trustedServiceAccessEnabled;
        this.virtualNetworkRules = virtualNetworkRules;
    }

    /**
     * @return The default action to take when a rule is not matched. Possible values are `Allow` and `Deny`. Defaults to `Deny`.
     * 
     */
    public String defaultAction() {
        return this.defaultAction;
    }
    /**
     * @return One or more `ip_rule` blocks as defined below.
     * 
     */
    public List<EventHubNamespaceNetworkRulesetsIpRule> ipRules() {
        return this.ipRules == null ? List.of() : this.ipRules;
    }
    /**
     * @return Whether Trusted Microsoft Services are allowed to bypass firewall.
     * 
     */
    public Optional<Boolean> trustedServiceAccessEnabled() {
        return Optional.ofNullable(this.trustedServiceAccessEnabled);
    }
    /**
     * @return One or more `virtual_network_rule` blocks as defined below.
     * 
     */
    public List<EventHubNamespaceNetworkRulesetsVirtualNetworkRule> virtualNetworkRules() {
        return this.virtualNetworkRules == null ? List.of() : this.virtualNetworkRules;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(EventHubNamespaceNetworkRulesets defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String defaultAction;
        private @Nullable List<EventHubNamespaceNetworkRulesetsIpRule> ipRules;
        private @Nullable Boolean trustedServiceAccessEnabled;
        private @Nullable List<EventHubNamespaceNetworkRulesetsVirtualNetworkRule> virtualNetworkRules;

        public Builder() {
    	      // Empty
        }

        public Builder(EventHubNamespaceNetworkRulesets defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.defaultAction = defaults.defaultAction;
    	      this.ipRules = defaults.ipRules;
    	      this.trustedServiceAccessEnabled = defaults.trustedServiceAccessEnabled;
    	      this.virtualNetworkRules = defaults.virtualNetworkRules;
        }

        public Builder defaultAction(String defaultAction) {
            this.defaultAction = Objects.requireNonNull(defaultAction);
            return this;
        }
        public Builder ipRules(@Nullable List<EventHubNamespaceNetworkRulesetsIpRule> ipRules) {
            this.ipRules = ipRules;
            return this;
        }
        public Builder ipRules(EventHubNamespaceNetworkRulesetsIpRule... ipRules) {
            return ipRules(List.of(ipRules));
        }
        public Builder trustedServiceAccessEnabled(@Nullable Boolean trustedServiceAccessEnabled) {
            this.trustedServiceAccessEnabled = trustedServiceAccessEnabled;
            return this;
        }
        public Builder virtualNetworkRules(@Nullable List<EventHubNamespaceNetworkRulesetsVirtualNetworkRule> virtualNetworkRules) {
            this.virtualNetworkRules = virtualNetworkRules;
            return this;
        }
        public Builder virtualNetworkRules(EventHubNamespaceNetworkRulesetsVirtualNetworkRule... virtualNetworkRules) {
            return virtualNetworkRules(List.of(virtualNetworkRules));
        }        public EventHubNamespaceNetworkRulesets build() {
            return new EventHubNamespaceNetworkRulesets(defaultAction, ipRules, trustedServiceAccessEnabled, virtualNetworkRules);
        }
    }
}
