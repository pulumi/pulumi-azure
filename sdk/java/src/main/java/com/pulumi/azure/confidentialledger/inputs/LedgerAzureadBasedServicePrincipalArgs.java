// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.confidentialledger.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class LedgerAzureadBasedServicePrincipalArgs extends com.pulumi.resources.ResourceArgs {

    public static final LedgerAzureadBasedServicePrincipalArgs Empty = new LedgerAzureadBasedServicePrincipalArgs();

    /**
     * Specifies the Ledger Role to grant this AzureAD Service Principal. Possible values are `Administrator`, `Contributor` and `Reader`.
     * 
     */
    @Import(name="ledgerRoleName", required=true)
    private Output<String> ledgerRoleName;

    /**
     * @return Specifies the Ledger Role to grant this AzureAD Service Principal. Possible values are `Administrator`, `Contributor` and `Reader`.
     * 
     */
    public Output<String> ledgerRoleName() {
        return this.ledgerRoleName;
    }

    /**
     * Specifies the Principal ID of the AzureAD Service Principal.
     * 
     */
    @Import(name="principalId", required=true)
    private Output<String> principalId;

    /**
     * @return Specifies the Principal ID of the AzureAD Service Principal.
     * 
     */
    public Output<String> principalId() {
        return this.principalId;
    }

    /**
     * Specifies the Tenant ID for this AzureAD Service Principal.
     * 
     */
    @Import(name="tenantId", required=true)
    private Output<String> tenantId;

    /**
     * @return Specifies the Tenant ID for this AzureAD Service Principal.
     * 
     */
    public Output<String> tenantId() {
        return this.tenantId;
    }

    private LedgerAzureadBasedServicePrincipalArgs() {}

    private LedgerAzureadBasedServicePrincipalArgs(LedgerAzureadBasedServicePrincipalArgs $) {
        this.ledgerRoleName = $.ledgerRoleName;
        this.principalId = $.principalId;
        this.tenantId = $.tenantId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(LedgerAzureadBasedServicePrincipalArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private LedgerAzureadBasedServicePrincipalArgs $;

        public Builder() {
            $ = new LedgerAzureadBasedServicePrincipalArgs();
        }

        public Builder(LedgerAzureadBasedServicePrincipalArgs defaults) {
            $ = new LedgerAzureadBasedServicePrincipalArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param ledgerRoleName Specifies the Ledger Role to grant this AzureAD Service Principal. Possible values are `Administrator`, `Contributor` and `Reader`.
         * 
         * @return builder
         * 
         */
        public Builder ledgerRoleName(Output<String> ledgerRoleName) {
            $.ledgerRoleName = ledgerRoleName;
            return this;
        }

        /**
         * @param ledgerRoleName Specifies the Ledger Role to grant this AzureAD Service Principal. Possible values are `Administrator`, `Contributor` and `Reader`.
         * 
         * @return builder
         * 
         */
        public Builder ledgerRoleName(String ledgerRoleName) {
            return ledgerRoleName(Output.of(ledgerRoleName));
        }

        /**
         * @param principalId Specifies the Principal ID of the AzureAD Service Principal.
         * 
         * @return builder
         * 
         */
        public Builder principalId(Output<String> principalId) {
            $.principalId = principalId;
            return this;
        }

        /**
         * @param principalId Specifies the Principal ID of the AzureAD Service Principal.
         * 
         * @return builder
         * 
         */
        public Builder principalId(String principalId) {
            return principalId(Output.of(principalId));
        }

        /**
         * @param tenantId Specifies the Tenant ID for this AzureAD Service Principal.
         * 
         * @return builder
         * 
         */
        public Builder tenantId(Output<String> tenantId) {
            $.tenantId = tenantId;
            return this;
        }

        /**
         * @param tenantId Specifies the Tenant ID for this AzureAD Service Principal.
         * 
         * @return builder
         * 
         */
        public Builder tenantId(String tenantId) {
            return tenantId(Output.of(tenantId));
        }

        public LedgerAzureadBasedServicePrincipalArgs build() {
            if ($.ledgerRoleName == null) {
                throw new MissingRequiredPropertyException("LedgerAzureadBasedServicePrincipalArgs", "ledgerRoleName");
            }
            if ($.principalId == null) {
                throw new MissingRequiredPropertyException("LedgerAzureadBasedServicePrincipalArgs", "principalId");
            }
            if ($.tenantId == null) {
                throw new MissingRequiredPropertyException("LedgerAzureadBasedServicePrincipalArgs", "tenantId");
            }
            return $;
        }
    }

}
