// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.paloalto.inputs;

import com.pulumi.azure.paloalto.inputs.NextGenerationFirewallVirtualNetworkPanoramaNetworkProfileVnetConfigurationArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class NextGenerationFirewallVirtualNetworkPanoramaNetworkProfileArgs extends com.pulumi.resources.ResourceArgs {

    public static final NextGenerationFirewallVirtualNetworkPanoramaNetworkProfileArgs Empty = new NextGenerationFirewallVirtualNetworkPanoramaNetworkProfileArgs();

    /**
     * Specifies a list of Azure Public IP Address IDs that can be used for Egress (Source) Network Address Translation.
     * 
     */
    @Import(name="egressNatIpAddressIds")
    private @Nullable Output<List<String>> egressNatIpAddressIds;

    /**
     * @return Specifies a list of Azure Public IP Address IDs that can be used for Egress (Source) Network Address Translation.
     * 
     */
    public Optional<Output<List<String>>> egressNatIpAddressIds() {
        return Optional.ofNullable(this.egressNatIpAddressIds);
    }

    @Import(name="egressNatIpAddresses")
    private @Nullable Output<List<String>> egressNatIpAddresses;

    public Optional<Output<List<String>>> egressNatIpAddresses() {
        return Optional.ofNullable(this.egressNatIpAddresses);
    }

    /**
     * Specifies a list of Azure Public IP Address IDs.
     * 
     */
    @Import(name="publicIpAddressIds", required=true)
    private Output<List<String>> publicIpAddressIds;

    /**
     * @return Specifies a list of Azure Public IP Address IDs.
     * 
     */
    public Output<List<String>> publicIpAddressIds() {
        return this.publicIpAddressIds;
    }

    @Import(name="publicIpAddresses")
    private @Nullable Output<List<String>> publicIpAddresses;

    public Optional<Output<List<String>>> publicIpAddresses() {
        return Optional.ofNullable(this.publicIpAddresses);
    }

    /**
     * Specifies a list of trusted ranges to use for the Network.
     * 
     */
    @Import(name="trustedAddressRanges")
    private @Nullable Output<List<String>> trustedAddressRanges;

    /**
     * @return Specifies a list of trusted ranges to use for the Network.
     * 
     */
    public Optional<Output<List<String>>> trustedAddressRanges() {
        return Optional.ofNullable(this.trustedAddressRanges);
    }

    /**
     * A `vnet_configuration` block as defined below.
     * 
     */
    @Import(name="vnetConfiguration", required=true)
    private Output<NextGenerationFirewallVirtualNetworkPanoramaNetworkProfileVnetConfigurationArgs> vnetConfiguration;

    /**
     * @return A `vnet_configuration` block as defined below.
     * 
     */
    public Output<NextGenerationFirewallVirtualNetworkPanoramaNetworkProfileVnetConfigurationArgs> vnetConfiguration() {
        return this.vnetConfiguration;
    }

    private NextGenerationFirewallVirtualNetworkPanoramaNetworkProfileArgs() {}

    private NextGenerationFirewallVirtualNetworkPanoramaNetworkProfileArgs(NextGenerationFirewallVirtualNetworkPanoramaNetworkProfileArgs $) {
        this.egressNatIpAddressIds = $.egressNatIpAddressIds;
        this.egressNatIpAddresses = $.egressNatIpAddresses;
        this.publicIpAddressIds = $.publicIpAddressIds;
        this.publicIpAddresses = $.publicIpAddresses;
        this.trustedAddressRanges = $.trustedAddressRanges;
        this.vnetConfiguration = $.vnetConfiguration;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(NextGenerationFirewallVirtualNetworkPanoramaNetworkProfileArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private NextGenerationFirewallVirtualNetworkPanoramaNetworkProfileArgs $;

        public Builder() {
            $ = new NextGenerationFirewallVirtualNetworkPanoramaNetworkProfileArgs();
        }

        public Builder(NextGenerationFirewallVirtualNetworkPanoramaNetworkProfileArgs defaults) {
            $ = new NextGenerationFirewallVirtualNetworkPanoramaNetworkProfileArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param egressNatIpAddressIds Specifies a list of Azure Public IP Address IDs that can be used for Egress (Source) Network Address Translation.
         * 
         * @return builder
         * 
         */
        public Builder egressNatIpAddressIds(@Nullable Output<List<String>> egressNatIpAddressIds) {
            $.egressNatIpAddressIds = egressNatIpAddressIds;
            return this;
        }

        /**
         * @param egressNatIpAddressIds Specifies a list of Azure Public IP Address IDs that can be used for Egress (Source) Network Address Translation.
         * 
         * @return builder
         * 
         */
        public Builder egressNatIpAddressIds(List<String> egressNatIpAddressIds) {
            return egressNatIpAddressIds(Output.of(egressNatIpAddressIds));
        }

        /**
         * @param egressNatIpAddressIds Specifies a list of Azure Public IP Address IDs that can be used for Egress (Source) Network Address Translation.
         * 
         * @return builder
         * 
         */
        public Builder egressNatIpAddressIds(String... egressNatIpAddressIds) {
            return egressNatIpAddressIds(List.of(egressNatIpAddressIds));
        }

        public Builder egressNatIpAddresses(@Nullable Output<List<String>> egressNatIpAddresses) {
            $.egressNatIpAddresses = egressNatIpAddresses;
            return this;
        }

        public Builder egressNatIpAddresses(List<String> egressNatIpAddresses) {
            return egressNatIpAddresses(Output.of(egressNatIpAddresses));
        }

        public Builder egressNatIpAddresses(String... egressNatIpAddresses) {
            return egressNatIpAddresses(List.of(egressNatIpAddresses));
        }

        /**
         * @param publicIpAddressIds Specifies a list of Azure Public IP Address IDs.
         * 
         * @return builder
         * 
         */
        public Builder publicIpAddressIds(Output<List<String>> publicIpAddressIds) {
            $.publicIpAddressIds = publicIpAddressIds;
            return this;
        }

        /**
         * @param publicIpAddressIds Specifies a list of Azure Public IP Address IDs.
         * 
         * @return builder
         * 
         */
        public Builder publicIpAddressIds(List<String> publicIpAddressIds) {
            return publicIpAddressIds(Output.of(publicIpAddressIds));
        }

        /**
         * @param publicIpAddressIds Specifies a list of Azure Public IP Address IDs.
         * 
         * @return builder
         * 
         */
        public Builder publicIpAddressIds(String... publicIpAddressIds) {
            return publicIpAddressIds(List.of(publicIpAddressIds));
        }

        public Builder publicIpAddresses(@Nullable Output<List<String>> publicIpAddresses) {
            $.publicIpAddresses = publicIpAddresses;
            return this;
        }

        public Builder publicIpAddresses(List<String> publicIpAddresses) {
            return publicIpAddresses(Output.of(publicIpAddresses));
        }

        public Builder publicIpAddresses(String... publicIpAddresses) {
            return publicIpAddresses(List.of(publicIpAddresses));
        }

        /**
         * @param trustedAddressRanges Specifies a list of trusted ranges to use for the Network.
         * 
         * @return builder
         * 
         */
        public Builder trustedAddressRanges(@Nullable Output<List<String>> trustedAddressRanges) {
            $.trustedAddressRanges = trustedAddressRanges;
            return this;
        }

        /**
         * @param trustedAddressRanges Specifies a list of trusted ranges to use for the Network.
         * 
         * @return builder
         * 
         */
        public Builder trustedAddressRanges(List<String> trustedAddressRanges) {
            return trustedAddressRanges(Output.of(trustedAddressRanges));
        }

        /**
         * @param trustedAddressRanges Specifies a list of trusted ranges to use for the Network.
         * 
         * @return builder
         * 
         */
        public Builder trustedAddressRanges(String... trustedAddressRanges) {
            return trustedAddressRanges(List.of(trustedAddressRanges));
        }

        /**
         * @param vnetConfiguration A `vnet_configuration` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder vnetConfiguration(Output<NextGenerationFirewallVirtualNetworkPanoramaNetworkProfileVnetConfigurationArgs> vnetConfiguration) {
            $.vnetConfiguration = vnetConfiguration;
            return this;
        }

        /**
         * @param vnetConfiguration A `vnet_configuration` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder vnetConfiguration(NextGenerationFirewallVirtualNetworkPanoramaNetworkProfileVnetConfigurationArgs vnetConfiguration) {
            return vnetConfiguration(Output.of(vnetConfiguration));
        }

        public NextGenerationFirewallVirtualNetworkPanoramaNetworkProfileArgs build() {
            if ($.publicIpAddressIds == null) {
                throw new MissingRequiredPropertyException("NextGenerationFirewallVirtualNetworkPanoramaNetworkProfileArgs", "publicIpAddressIds");
            }
            if ($.vnetConfiguration == null) {
                throw new MissingRequiredPropertyException("NextGenerationFirewallVirtualNetworkPanoramaNetworkProfileArgs", "vnetConfiguration");
            }
            return $;
        }
    }

}
