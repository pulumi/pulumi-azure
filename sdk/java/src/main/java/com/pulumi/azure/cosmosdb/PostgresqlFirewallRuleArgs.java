// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.cosmosdb;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class PostgresqlFirewallRuleArgs extends com.pulumi.resources.ResourceArgs {

    public static final PostgresqlFirewallRuleArgs Empty = new PostgresqlFirewallRuleArgs();

    /**
     * The resource ID of the Azure Cosmos DB for PostgreSQL Cluster. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="clusterId", required=true)
    private Output<String> clusterId;

    /**
     * @return The resource ID of the Azure Cosmos DB for PostgreSQL Cluster. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> clusterId() {
        return this.clusterId;
    }

    /**
     * The end IP address of the Azure Cosmos DB for PostgreSQL Firewall Rule.
     * 
     */
    @Import(name="endIpAddress", required=true)
    private Output<String> endIpAddress;

    /**
     * @return The end IP address of the Azure Cosmos DB for PostgreSQL Firewall Rule.
     * 
     */
    public Output<String> endIpAddress() {
        return this.endIpAddress;
    }

    /**
     * The name which should be used for the Azure Cosmos DB for PostgreSQL Firewall Rule. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name which should be used for the Azure Cosmos DB for PostgreSQL Firewall Rule. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The start IP address of the Azure Cosmos DB for PostgreSQL Firewall Rule.
     * 
     */
    @Import(name="startIpAddress", required=true)
    private Output<String> startIpAddress;

    /**
     * @return The start IP address of the Azure Cosmos DB for PostgreSQL Firewall Rule.
     * 
     */
    public Output<String> startIpAddress() {
        return this.startIpAddress;
    }

    private PostgresqlFirewallRuleArgs() {}

    private PostgresqlFirewallRuleArgs(PostgresqlFirewallRuleArgs $) {
        this.clusterId = $.clusterId;
        this.endIpAddress = $.endIpAddress;
        this.name = $.name;
        this.startIpAddress = $.startIpAddress;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PostgresqlFirewallRuleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PostgresqlFirewallRuleArgs $;

        public Builder() {
            $ = new PostgresqlFirewallRuleArgs();
        }

        public Builder(PostgresqlFirewallRuleArgs defaults) {
            $ = new PostgresqlFirewallRuleArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param clusterId The resource ID of the Azure Cosmos DB for PostgreSQL Cluster. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder clusterId(Output<String> clusterId) {
            $.clusterId = clusterId;
            return this;
        }

        /**
         * @param clusterId The resource ID of the Azure Cosmos DB for PostgreSQL Cluster. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder clusterId(String clusterId) {
            return clusterId(Output.of(clusterId));
        }

        /**
         * @param endIpAddress The end IP address of the Azure Cosmos DB for PostgreSQL Firewall Rule.
         * 
         * @return builder
         * 
         */
        public Builder endIpAddress(Output<String> endIpAddress) {
            $.endIpAddress = endIpAddress;
            return this;
        }

        /**
         * @param endIpAddress The end IP address of the Azure Cosmos DB for PostgreSQL Firewall Rule.
         * 
         * @return builder
         * 
         */
        public Builder endIpAddress(String endIpAddress) {
            return endIpAddress(Output.of(endIpAddress));
        }

        /**
         * @param name The name which should be used for the Azure Cosmos DB for PostgreSQL Firewall Rule. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name which should be used for the Azure Cosmos DB for PostgreSQL Firewall Rule. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param startIpAddress The start IP address of the Azure Cosmos DB for PostgreSQL Firewall Rule.
         * 
         * @return builder
         * 
         */
        public Builder startIpAddress(Output<String> startIpAddress) {
            $.startIpAddress = startIpAddress;
            return this;
        }

        /**
         * @param startIpAddress The start IP address of the Azure Cosmos DB for PostgreSQL Firewall Rule.
         * 
         * @return builder
         * 
         */
        public Builder startIpAddress(String startIpAddress) {
            return startIpAddress(Output.of(startIpAddress));
        }

        public PostgresqlFirewallRuleArgs build() {
            if ($.clusterId == null) {
                throw new MissingRequiredPropertyException("PostgresqlFirewallRuleArgs", "clusterId");
            }
            if ($.endIpAddress == null) {
                throw new MissingRequiredPropertyException("PostgresqlFirewallRuleArgs", "endIpAddress");
            }
            if ($.startIpAddress == null) {
                throw new MissingRequiredPropertyException("PostgresqlFirewallRuleArgs", "startIpAddress");
            }
            return $;
        }
    }

}
