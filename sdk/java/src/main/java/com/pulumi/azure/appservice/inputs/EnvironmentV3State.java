// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.appservice.inputs;

import com.pulumi.azure.appservice.inputs.EnvironmentV3ClusterSettingArgs;
import com.pulumi.azure.appservice.inputs.EnvironmentV3InboundNetworkDependencyArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class EnvironmentV3State extends com.pulumi.resources.ResourceArgs {

    public static final EnvironmentV3State Empty = new EnvironmentV3State();

    /**
     * Should new Private Endpoint Connections be allowed. Defaults to `true`.
     * 
     */
    @Import(name="allowNewPrivateEndpointConnections")
    private @Nullable Output<Boolean> allowNewPrivateEndpointConnections;

    /**
     * @return Should new Private Endpoint Connections be allowed. Defaults to `true`.
     * 
     */
    public Optional<Output<Boolean>> allowNewPrivateEndpointConnections() {
        return Optional.ofNullable(this.allowNewPrivateEndpointConnections);
    }

    /**
     * Zero or more `cluster_setting` blocks as defined below.
     * 
     */
    @Import(name="clusterSettings")
    private @Nullable Output<List<EnvironmentV3ClusterSettingArgs>> clusterSettings;

    /**
     * @return Zero or more `cluster_setting` blocks as defined below.
     * 
     */
    public Optional<Output<List<EnvironmentV3ClusterSettingArgs>>> clusterSettings() {
        return Optional.ofNullable(this.clusterSettings);
    }

    /**
     * This ASEv3 should use dedicated Hosts. Possible values are `2`. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="dedicatedHostCount")
    private @Nullable Output<Integer> dedicatedHostCount;

    /**
     * @return This ASEv3 should use dedicated Hosts. Possible values are `2`. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<Integer>> dedicatedHostCount() {
        return Optional.ofNullable(this.dedicatedHostCount);
    }

    /**
     * the DNS suffix for this App Service Environment V3.
     * 
     */
    @Import(name="dnsSuffix")
    private @Nullable Output<String> dnsSuffix;

    /**
     * @return the DNS suffix for this App Service Environment V3.
     * 
     */
    public Optional<Output<String>> dnsSuffix() {
        return Optional.ofNullable(this.dnsSuffix);
    }

    /**
     * The external inbound IP addresses of the App Service Environment V3.
     * 
     */
    @Import(name="externalInboundIpAddresses")
    private @Nullable Output<List<String>> externalInboundIpAddresses;

    /**
     * @return The external inbound IP addresses of the App Service Environment V3.
     * 
     */
    public Optional<Output<List<String>>> externalInboundIpAddresses() {
        return Optional.ofNullable(this.externalInboundIpAddresses);
    }

    /**
     * An `inbound_network_dependencies` block as defined below.
     * 
     */
    @Import(name="inboundNetworkDependencies")
    private @Nullable Output<List<EnvironmentV3InboundNetworkDependencyArgs>> inboundNetworkDependencies;

    /**
     * @return An `inbound_network_dependencies` block as defined below.
     * 
     */
    public Optional<Output<List<EnvironmentV3InboundNetworkDependencyArgs>>> inboundNetworkDependencies() {
        return Optional.ofNullable(this.inboundNetworkDependencies);
    }

    /**
     * The internal inbound IP addresses of the App Service Environment V3.
     * 
     */
    @Import(name="internalInboundIpAddresses")
    private @Nullable Output<List<String>> internalInboundIpAddresses;

    /**
     * @return The internal inbound IP addresses of the App Service Environment V3.
     * 
     */
    public Optional<Output<List<String>>> internalInboundIpAddresses() {
        return Optional.ofNullable(this.internalInboundIpAddresses);
    }

    /**
     * Specifies which endpoints to serve internally in the Virtual Network for the App Service Environment. Possible values are `None` (for an External VIP Type), and `&#34;Web, Publishing&#34;` (for an Internal VIP Type). Defaults to `None`. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="internalLoadBalancingMode")
    private @Nullable Output<String> internalLoadBalancingMode;

    /**
     * @return Specifies which endpoints to serve internally in the Virtual Network for the App Service Environment. Possible values are `None` (for an External VIP Type), and `&#34;Web, Publishing&#34;` (for an Internal VIP Type). Defaults to `None`. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> internalLoadBalancingMode() {
        return Optional.ofNullable(this.internalLoadBalancingMode);
    }

    /**
     * The number of IP SSL addresses reserved for the App Service Environment V3.
     * 
     */
    @Import(name="ipSslAddressCount")
    private @Nullable Output<Integer> ipSslAddressCount;

    /**
     * @return The number of IP SSL addresses reserved for the App Service Environment V3.
     * 
     */
    public Optional<Output<Integer>> ipSslAddressCount() {
        return Optional.ofNullable(this.ipSslAddressCount);
    }

    /**
     * Outbound addresses of Linux based Apps in this App Service Environment V3
     * 
     */
    @Import(name="linuxOutboundIpAddresses")
    private @Nullable Output<List<String>> linuxOutboundIpAddresses;

    /**
     * @return Outbound addresses of Linux based Apps in this App Service Environment V3
     * 
     */
    public Optional<Output<List<String>>> linuxOutboundIpAddresses() {
        return Optional.ofNullable(this.linuxOutboundIpAddresses);
    }

    /**
     * The location where the App Service Environment exists.
     * 
     */
    @Import(name="location")
    private @Nullable Output<String> location;

    /**
     * @return The location where the App Service Environment exists.
     * 
     */
    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * The name of the App Service Environment. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the App Service Environment. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Pricing tier for the front end instances.
     * 
     */
    @Import(name="pricingTier")
    private @Nullable Output<String> pricingTier;

    /**
     * @return Pricing tier for the front end instances.
     * 
     */
    public Optional<Output<String>> pricingTier() {
        return Optional.ofNullable(this.pricingTier);
    }

    /**
     * The name of the Resource Group where the App Service Environment exists. Defaults to the Resource Group of the Subnet (specified by `subnet_id`). Changing this forces a new resource to be created.
     * 
     */
    @Import(name="resourceGroupName")
    private @Nullable Output<String> resourceGroupName;

    /**
     * @return The name of the Resource Group where the App Service Environment exists. Defaults to the Resource Group of the Subnet (specified by `subnet_id`). Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> resourceGroupName() {
        return Optional.ofNullable(this.resourceGroupName);
    }

    /**
     * The ID of the Subnet which the App Service Environment should be connected to. Changing this forces a new resource to be created.
     * 
     * &gt; **NOTE** a /24 or larger CIDR is required. Once associated with an ASE, this size cannot be changed.
     * 
     * &gt; **NOTE:** This Subnet requires a delegation to `Microsoft.Web/hostingEnvironments` as detailed in the example above.
     * 
     */
    @Import(name="subnetId")
    private @Nullable Output<String> subnetId;

    /**
     * @return The ID of the Subnet which the App Service Environment should be connected to. Changing this forces a new resource to be created.
     * 
     * &gt; **NOTE** a /24 or larger CIDR is required. Once associated with an ASE, this size cannot be changed.
     * 
     * &gt; **NOTE:** This Subnet requires a delegation to `Microsoft.Web/hostingEnvironments` as detailed in the example above.
     * 
     */
    public Optional<Output<String>> subnetId() {
        return Optional.ofNullable(this.subnetId);
    }

    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * Outbound addresses of Windows based Apps in this App Service Environment V3.
     * 
     */
    @Import(name="windowsOutboundIpAddresses")
    private @Nullable Output<List<String>> windowsOutboundIpAddresses;

    /**
     * @return Outbound addresses of Windows based Apps in this App Service Environment V3.
     * 
     */
    public Optional<Output<List<String>>> windowsOutboundIpAddresses() {
        return Optional.ofNullable(this.windowsOutboundIpAddresses);
    }

    /**
     * Set to `true` to deploy the ASEv3 with availability zones supported. Zonal ASEs can be deployed in some regions, you can refer to [Availability Zone support for App Service Environments](https://docs.microsoft.com/azure/app-service/environment/zone-redundancy). You can only set either `dedicated_host_count` or `zone_redundant` but not both. Changing this forces a new resource to be created.
     * 
     * &gt; **NOTE:** Setting this value will provision 2 Physical Hosts for your App Service Environment V3, this is done at additional cost, please be aware of the pricing commitment in the [General Availability Notes](https://techcommunity.microsoft.com/t5/apps-on-azure/announcing-app-service-environment-v3-ga/ba-p/2517990)
     * 
     */
    @Import(name="zoneRedundant")
    private @Nullable Output<Boolean> zoneRedundant;

    /**
     * @return Set to `true` to deploy the ASEv3 with availability zones supported. Zonal ASEs can be deployed in some regions, you can refer to [Availability Zone support for App Service Environments](https://docs.microsoft.com/azure/app-service/environment/zone-redundancy). You can only set either `dedicated_host_count` or `zone_redundant` but not both. Changing this forces a new resource to be created.
     * 
     * &gt; **NOTE:** Setting this value will provision 2 Physical Hosts for your App Service Environment V3, this is done at additional cost, please be aware of the pricing commitment in the [General Availability Notes](https://techcommunity.microsoft.com/t5/apps-on-azure/announcing-app-service-environment-v3-ga/ba-p/2517990)
     * 
     */
    public Optional<Output<Boolean>> zoneRedundant() {
        return Optional.ofNullable(this.zoneRedundant);
    }

    private EnvironmentV3State() {}

    private EnvironmentV3State(EnvironmentV3State $) {
        this.allowNewPrivateEndpointConnections = $.allowNewPrivateEndpointConnections;
        this.clusterSettings = $.clusterSettings;
        this.dedicatedHostCount = $.dedicatedHostCount;
        this.dnsSuffix = $.dnsSuffix;
        this.externalInboundIpAddresses = $.externalInboundIpAddresses;
        this.inboundNetworkDependencies = $.inboundNetworkDependencies;
        this.internalInboundIpAddresses = $.internalInboundIpAddresses;
        this.internalLoadBalancingMode = $.internalLoadBalancingMode;
        this.ipSslAddressCount = $.ipSslAddressCount;
        this.linuxOutboundIpAddresses = $.linuxOutboundIpAddresses;
        this.location = $.location;
        this.name = $.name;
        this.pricingTier = $.pricingTier;
        this.resourceGroupName = $.resourceGroupName;
        this.subnetId = $.subnetId;
        this.tags = $.tags;
        this.windowsOutboundIpAddresses = $.windowsOutboundIpAddresses;
        this.zoneRedundant = $.zoneRedundant;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(EnvironmentV3State defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private EnvironmentV3State $;

        public Builder() {
            $ = new EnvironmentV3State();
        }

        public Builder(EnvironmentV3State defaults) {
            $ = new EnvironmentV3State(Objects.requireNonNull(defaults));
        }

        /**
         * @param allowNewPrivateEndpointConnections Should new Private Endpoint Connections be allowed. Defaults to `true`.
         * 
         * @return builder
         * 
         */
        public Builder allowNewPrivateEndpointConnections(@Nullable Output<Boolean> allowNewPrivateEndpointConnections) {
            $.allowNewPrivateEndpointConnections = allowNewPrivateEndpointConnections;
            return this;
        }

        /**
         * @param allowNewPrivateEndpointConnections Should new Private Endpoint Connections be allowed. Defaults to `true`.
         * 
         * @return builder
         * 
         */
        public Builder allowNewPrivateEndpointConnections(Boolean allowNewPrivateEndpointConnections) {
            return allowNewPrivateEndpointConnections(Output.of(allowNewPrivateEndpointConnections));
        }

        /**
         * @param clusterSettings Zero or more `cluster_setting` blocks as defined below.
         * 
         * @return builder
         * 
         */
        public Builder clusterSettings(@Nullable Output<List<EnvironmentV3ClusterSettingArgs>> clusterSettings) {
            $.clusterSettings = clusterSettings;
            return this;
        }

        /**
         * @param clusterSettings Zero or more `cluster_setting` blocks as defined below.
         * 
         * @return builder
         * 
         */
        public Builder clusterSettings(List<EnvironmentV3ClusterSettingArgs> clusterSettings) {
            return clusterSettings(Output.of(clusterSettings));
        }

        /**
         * @param clusterSettings Zero or more `cluster_setting` blocks as defined below.
         * 
         * @return builder
         * 
         */
        public Builder clusterSettings(EnvironmentV3ClusterSettingArgs... clusterSettings) {
            return clusterSettings(List.of(clusterSettings));
        }

        /**
         * @param dedicatedHostCount This ASEv3 should use dedicated Hosts. Possible values are `2`. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder dedicatedHostCount(@Nullable Output<Integer> dedicatedHostCount) {
            $.dedicatedHostCount = dedicatedHostCount;
            return this;
        }

        /**
         * @param dedicatedHostCount This ASEv3 should use dedicated Hosts. Possible values are `2`. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder dedicatedHostCount(Integer dedicatedHostCount) {
            return dedicatedHostCount(Output.of(dedicatedHostCount));
        }

        /**
         * @param dnsSuffix the DNS suffix for this App Service Environment V3.
         * 
         * @return builder
         * 
         */
        public Builder dnsSuffix(@Nullable Output<String> dnsSuffix) {
            $.dnsSuffix = dnsSuffix;
            return this;
        }

        /**
         * @param dnsSuffix the DNS suffix for this App Service Environment V3.
         * 
         * @return builder
         * 
         */
        public Builder dnsSuffix(String dnsSuffix) {
            return dnsSuffix(Output.of(dnsSuffix));
        }

        /**
         * @param externalInboundIpAddresses The external inbound IP addresses of the App Service Environment V3.
         * 
         * @return builder
         * 
         */
        public Builder externalInboundIpAddresses(@Nullable Output<List<String>> externalInboundIpAddresses) {
            $.externalInboundIpAddresses = externalInboundIpAddresses;
            return this;
        }

        /**
         * @param externalInboundIpAddresses The external inbound IP addresses of the App Service Environment V3.
         * 
         * @return builder
         * 
         */
        public Builder externalInboundIpAddresses(List<String> externalInboundIpAddresses) {
            return externalInboundIpAddresses(Output.of(externalInboundIpAddresses));
        }

        /**
         * @param externalInboundIpAddresses The external inbound IP addresses of the App Service Environment V3.
         * 
         * @return builder
         * 
         */
        public Builder externalInboundIpAddresses(String... externalInboundIpAddresses) {
            return externalInboundIpAddresses(List.of(externalInboundIpAddresses));
        }

        /**
         * @param inboundNetworkDependencies An `inbound_network_dependencies` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder inboundNetworkDependencies(@Nullable Output<List<EnvironmentV3InboundNetworkDependencyArgs>> inboundNetworkDependencies) {
            $.inboundNetworkDependencies = inboundNetworkDependencies;
            return this;
        }

        /**
         * @param inboundNetworkDependencies An `inbound_network_dependencies` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder inboundNetworkDependencies(List<EnvironmentV3InboundNetworkDependencyArgs> inboundNetworkDependencies) {
            return inboundNetworkDependencies(Output.of(inboundNetworkDependencies));
        }

        /**
         * @param inboundNetworkDependencies An `inbound_network_dependencies` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder inboundNetworkDependencies(EnvironmentV3InboundNetworkDependencyArgs... inboundNetworkDependencies) {
            return inboundNetworkDependencies(List.of(inboundNetworkDependencies));
        }

        /**
         * @param internalInboundIpAddresses The internal inbound IP addresses of the App Service Environment V3.
         * 
         * @return builder
         * 
         */
        public Builder internalInboundIpAddresses(@Nullable Output<List<String>> internalInboundIpAddresses) {
            $.internalInboundIpAddresses = internalInboundIpAddresses;
            return this;
        }

        /**
         * @param internalInboundIpAddresses The internal inbound IP addresses of the App Service Environment V3.
         * 
         * @return builder
         * 
         */
        public Builder internalInboundIpAddresses(List<String> internalInboundIpAddresses) {
            return internalInboundIpAddresses(Output.of(internalInboundIpAddresses));
        }

        /**
         * @param internalInboundIpAddresses The internal inbound IP addresses of the App Service Environment V3.
         * 
         * @return builder
         * 
         */
        public Builder internalInboundIpAddresses(String... internalInboundIpAddresses) {
            return internalInboundIpAddresses(List.of(internalInboundIpAddresses));
        }

        /**
         * @param internalLoadBalancingMode Specifies which endpoints to serve internally in the Virtual Network for the App Service Environment. Possible values are `None` (for an External VIP Type), and `&#34;Web, Publishing&#34;` (for an Internal VIP Type). Defaults to `None`. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder internalLoadBalancingMode(@Nullable Output<String> internalLoadBalancingMode) {
            $.internalLoadBalancingMode = internalLoadBalancingMode;
            return this;
        }

        /**
         * @param internalLoadBalancingMode Specifies which endpoints to serve internally in the Virtual Network for the App Service Environment. Possible values are `None` (for an External VIP Type), and `&#34;Web, Publishing&#34;` (for an Internal VIP Type). Defaults to `None`. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder internalLoadBalancingMode(String internalLoadBalancingMode) {
            return internalLoadBalancingMode(Output.of(internalLoadBalancingMode));
        }

        /**
         * @param ipSslAddressCount The number of IP SSL addresses reserved for the App Service Environment V3.
         * 
         * @return builder
         * 
         */
        public Builder ipSslAddressCount(@Nullable Output<Integer> ipSslAddressCount) {
            $.ipSslAddressCount = ipSslAddressCount;
            return this;
        }

        /**
         * @param ipSslAddressCount The number of IP SSL addresses reserved for the App Service Environment V3.
         * 
         * @return builder
         * 
         */
        public Builder ipSslAddressCount(Integer ipSslAddressCount) {
            return ipSslAddressCount(Output.of(ipSslAddressCount));
        }

        /**
         * @param linuxOutboundIpAddresses Outbound addresses of Linux based Apps in this App Service Environment V3
         * 
         * @return builder
         * 
         */
        public Builder linuxOutboundIpAddresses(@Nullable Output<List<String>> linuxOutboundIpAddresses) {
            $.linuxOutboundIpAddresses = linuxOutboundIpAddresses;
            return this;
        }

        /**
         * @param linuxOutboundIpAddresses Outbound addresses of Linux based Apps in this App Service Environment V3
         * 
         * @return builder
         * 
         */
        public Builder linuxOutboundIpAddresses(List<String> linuxOutboundIpAddresses) {
            return linuxOutboundIpAddresses(Output.of(linuxOutboundIpAddresses));
        }

        /**
         * @param linuxOutboundIpAddresses Outbound addresses of Linux based Apps in this App Service Environment V3
         * 
         * @return builder
         * 
         */
        public Builder linuxOutboundIpAddresses(String... linuxOutboundIpAddresses) {
            return linuxOutboundIpAddresses(List.of(linuxOutboundIpAddresses));
        }

        /**
         * @param location The location where the App Service Environment exists.
         * 
         * @return builder
         * 
         */
        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location The location where the App Service Environment exists.
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param name The name of the App Service Environment. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the App Service Environment. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param pricingTier Pricing tier for the front end instances.
         * 
         * @return builder
         * 
         */
        public Builder pricingTier(@Nullable Output<String> pricingTier) {
            $.pricingTier = pricingTier;
            return this;
        }

        /**
         * @param pricingTier Pricing tier for the front end instances.
         * 
         * @return builder
         * 
         */
        public Builder pricingTier(String pricingTier) {
            return pricingTier(Output.of(pricingTier));
        }

        /**
         * @param resourceGroupName The name of the Resource Group where the App Service Environment exists. Defaults to the Resource Group of the Subnet (specified by `subnet_id`). Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(@Nullable Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName The name of the Resource Group where the App Service Environment exists. Defaults to the Resource Group of the Subnet (specified by `subnet_id`). Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        /**
         * @param subnetId The ID of the Subnet which the App Service Environment should be connected to. Changing this forces a new resource to be created.
         * 
         * &gt; **NOTE** a /24 or larger CIDR is required. Once associated with an ASE, this size cannot be changed.
         * 
         * &gt; **NOTE:** This Subnet requires a delegation to `Microsoft.Web/hostingEnvironments` as detailed in the example above.
         * 
         * @return builder
         * 
         */
        public Builder subnetId(@Nullable Output<String> subnetId) {
            $.subnetId = subnetId;
            return this;
        }

        /**
         * @param subnetId The ID of the Subnet which the App Service Environment should be connected to. Changing this forces a new resource to be created.
         * 
         * &gt; **NOTE** a /24 or larger CIDR is required. Once associated with an ASE, this size cannot be changed.
         * 
         * &gt; **NOTE:** This Subnet requires a delegation to `Microsoft.Web/hostingEnvironments` as detailed in the example above.
         * 
         * @return builder
         * 
         */
        public Builder subnetId(String subnetId) {
            return subnetId(Output.of(subnetId));
        }

        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param windowsOutboundIpAddresses Outbound addresses of Windows based Apps in this App Service Environment V3.
         * 
         * @return builder
         * 
         */
        public Builder windowsOutboundIpAddresses(@Nullable Output<List<String>> windowsOutboundIpAddresses) {
            $.windowsOutboundIpAddresses = windowsOutboundIpAddresses;
            return this;
        }

        /**
         * @param windowsOutboundIpAddresses Outbound addresses of Windows based Apps in this App Service Environment V3.
         * 
         * @return builder
         * 
         */
        public Builder windowsOutboundIpAddresses(List<String> windowsOutboundIpAddresses) {
            return windowsOutboundIpAddresses(Output.of(windowsOutboundIpAddresses));
        }

        /**
         * @param windowsOutboundIpAddresses Outbound addresses of Windows based Apps in this App Service Environment V3.
         * 
         * @return builder
         * 
         */
        public Builder windowsOutboundIpAddresses(String... windowsOutboundIpAddresses) {
            return windowsOutboundIpAddresses(List.of(windowsOutboundIpAddresses));
        }

        /**
         * @param zoneRedundant Set to `true` to deploy the ASEv3 with availability zones supported. Zonal ASEs can be deployed in some regions, you can refer to [Availability Zone support for App Service Environments](https://docs.microsoft.com/azure/app-service/environment/zone-redundancy). You can only set either `dedicated_host_count` or `zone_redundant` but not both. Changing this forces a new resource to be created.
         * 
         * &gt; **NOTE:** Setting this value will provision 2 Physical Hosts for your App Service Environment V3, this is done at additional cost, please be aware of the pricing commitment in the [General Availability Notes](https://techcommunity.microsoft.com/t5/apps-on-azure/announcing-app-service-environment-v3-ga/ba-p/2517990)
         * 
         * @return builder
         * 
         */
        public Builder zoneRedundant(@Nullable Output<Boolean> zoneRedundant) {
            $.zoneRedundant = zoneRedundant;
            return this;
        }

        /**
         * @param zoneRedundant Set to `true` to deploy the ASEv3 with availability zones supported. Zonal ASEs can be deployed in some regions, you can refer to [Availability Zone support for App Service Environments](https://docs.microsoft.com/azure/app-service/environment/zone-redundancy). You can only set either `dedicated_host_count` or `zone_redundant` but not both. Changing this forces a new resource to be created.
         * 
         * &gt; **NOTE:** Setting this value will provision 2 Physical Hosts for your App Service Environment V3, this is done at additional cost, please be aware of the pricing commitment in the [General Availability Notes](https://techcommunity.microsoft.com/t5/apps-on-azure/announcing-app-service-environment-v3-ga/ba-p/2517990)
         * 
         * @return builder
         * 
         */
        public Builder zoneRedundant(Boolean zoneRedundant) {
            return zoneRedundant(Output.of(zoneRedundant));
        }

        public EnvironmentV3State build() {
            return $;
        }
    }

}
