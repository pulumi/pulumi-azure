// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.appplatform;

import com.pulumi.azure.Utilities;
import com.pulumi.azure.appplatform.SpringCloudJavaDeploymentArgs;
import com.pulumi.azure.appplatform.inputs.SpringCloudJavaDeploymentState;
import com.pulumi.azure.appplatform.outputs.SpringCloudJavaDeploymentQuota;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Manages an Azure Spring Cloud Deployment with a Java runtime.
 * 
 * &gt; **NOTE:** This resource is applicable only for Spring Cloud Service with basic and standard tier.
 * 
 * ## Example Usage
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.azure.core.ResourceGroup;
 * import com.pulumi.azure.core.ResourceGroupArgs;
 * import com.pulumi.azure.appplatform.SpringCloudService;
 * import com.pulumi.azure.appplatform.SpringCloudServiceArgs;
 * import com.pulumi.azure.appplatform.SpringCloudApp;
 * import com.pulumi.azure.appplatform.SpringCloudAppArgs;
 * import com.pulumi.azure.appplatform.inputs.SpringCloudAppIdentityArgs;
 * import com.pulumi.azure.appplatform.SpringCloudJavaDeployment;
 * import com.pulumi.azure.appplatform.SpringCloudJavaDeploymentArgs;
 * import com.pulumi.azure.appplatform.inputs.SpringCloudJavaDeploymentQuotaArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var exampleResourceGroup = new ResourceGroup(&#34;exampleResourceGroup&#34;, ResourceGroupArgs.builder()        
 *             .location(&#34;West Europe&#34;)
 *             .build());
 * 
 *         var exampleSpringCloudService = new SpringCloudService(&#34;exampleSpringCloudService&#34;, SpringCloudServiceArgs.builder()        
 *             .resourceGroupName(exampleResourceGroup.name())
 *             .location(exampleResourceGroup.location())
 *             .build());
 * 
 *         var exampleSpringCloudApp = new SpringCloudApp(&#34;exampleSpringCloudApp&#34;, SpringCloudAppArgs.builder()        
 *             .resourceGroupName(exampleResourceGroup.name())
 *             .serviceName(exampleSpringCloudService.name())
 *             .identity(SpringCloudAppIdentityArgs.builder()
 *                 .type(&#34;SystemAssigned&#34;)
 *                 .build())
 *             .build());
 * 
 *         var exampleSpringCloudJavaDeployment = new SpringCloudJavaDeployment(&#34;exampleSpringCloudJavaDeployment&#34;, SpringCloudJavaDeploymentArgs.builder()        
 *             .springCloudAppId(exampleSpringCloudApp.id())
 *             .instanceCount(2)
 *             .jvmOptions(&#34;-XX:+PrintGC&#34;)
 *             .quota(SpringCloudJavaDeploymentQuotaArgs.builder()
 *                 .cpu(&#34;2&#34;)
 *                 .memory(&#34;4Gi&#34;)
 *                 .build())
 *             .runtimeVersion(&#34;Java_11&#34;)
 *             .environmentVariables(Map.ofEntries(
 *                 Map.entry(&#34;Foo&#34;, &#34;Bar&#34;),
 *                 Map.entry(&#34;Env&#34;, &#34;Staging&#34;)
 *             ))
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * Spring Cloud Deployment can be imported using the `resource id`, e.g.
 * 
 * ```sh
 *  $ pulumi import azure:appplatform/springCloudJavaDeployment:SpringCloudJavaDeployment example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resourcegroup1/providers/Microsoft.AppPlatform/spring/service1/apps/app1/deployments/deploy1
 * ```
 * 
 */
@ResourceType(type="azure:appplatform/springCloudJavaDeployment:SpringCloudJavaDeployment")
public class SpringCloudJavaDeployment extends com.pulumi.resources.CustomResource {
    /**
     * Specifies the environment variables of the Spring Cloud Deployment as a map of key-value pairs.
     * 
     */
    @Export(name="environmentVariables", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output</* @Nullable */ Map<String,String>> environmentVariables;

    /**
     * @return Specifies the environment variables of the Spring Cloud Deployment as a map of key-value pairs.
     * 
     */
    public Output<Optional<Map<String,String>>> environmentVariables() {
        return Codegen.optional(this.environmentVariables);
    }
    /**
     * Specifies the required instance count of the Spring Cloud Deployment. Possible Values are between `1` and `500`. Defaults to `1` if not specified.
     * 
     */
    @Export(name="instanceCount", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> instanceCount;

    /**
     * @return Specifies the required instance count of the Spring Cloud Deployment. Possible Values are between `1` and `500`. Defaults to `1` if not specified.
     * 
     */
    public Output<Optional<Integer>> instanceCount() {
        return Codegen.optional(this.instanceCount);
    }
    /**
     * Specifies the jvm option of the Spring Cloud Deployment.
     * 
     */
    @Export(name="jvmOptions", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> jvmOptions;

    /**
     * @return Specifies the jvm option of the Spring Cloud Deployment.
     * 
     */
    public Output<Optional<String>> jvmOptions() {
        return Codegen.optional(this.jvmOptions);
    }
    /**
     * Specifies the name of the Spring Cloud Deployment. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return Specifies the name of the Spring Cloud Deployment. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * A `quota` block as defined below.
     * 
     */
    @Export(name="quota", refs={SpringCloudJavaDeploymentQuota.class}, tree="[0]")
    private Output<SpringCloudJavaDeploymentQuota> quota;

    /**
     * @return A `quota` block as defined below.
     * 
     */
    public Output<SpringCloudJavaDeploymentQuota> quota() {
        return this.quota;
    }
    /**
     * Specifies the runtime version of the Spring Cloud Deployment. Possible Values are `Java_8`, `Java_11` and `Java_17`. Defaults to `Java_8`.
     * 
     */
    @Export(name="runtimeVersion", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> runtimeVersion;

    /**
     * @return Specifies the runtime version of the Spring Cloud Deployment. Possible Values are `Java_8`, `Java_11` and `Java_17`. Defaults to `Java_8`.
     * 
     */
    public Output<Optional<String>> runtimeVersion() {
        return Codegen.optional(this.runtimeVersion);
    }
    /**
     * Specifies the id of the Spring Cloud Application in which to create the Deployment. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="springCloudAppId", refs={String.class}, tree="[0]")
    private Output<String> springCloudAppId;

    /**
     * @return Specifies the id of the Spring Cloud Application in which to create the Deployment. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> springCloudAppId() {
        return this.springCloudAppId;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public SpringCloudJavaDeployment(String name) {
        this(name, SpringCloudJavaDeploymentArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public SpringCloudJavaDeployment(String name, SpringCloudJavaDeploymentArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public SpringCloudJavaDeployment(String name, SpringCloudJavaDeploymentArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:appplatform/springCloudJavaDeployment:SpringCloudJavaDeployment", name, args == null ? SpringCloudJavaDeploymentArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private SpringCloudJavaDeployment(String name, Output<String> id, @Nullable SpringCloudJavaDeploymentState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:appplatform/springCloudJavaDeployment:SpringCloudJavaDeployment", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static SpringCloudJavaDeployment get(String name, Output<String> id, @Nullable SpringCloudJavaDeploymentState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new SpringCloudJavaDeployment(name, id, state, options);
    }
}
