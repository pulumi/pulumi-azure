// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.batch.outputs;

import com.pulumi.azure.batch.outputs.PoolStartTaskContainerRegistry;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class PoolStartTaskContainer {
    /**
     * @return The image to use to create the container in which the task will run. This is the full image reference, as would be specified to &#34;docker pull&#34;. If no tag is provided as part of the image name, the tag &#34;:latest&#34; is used as a default.
     * 
     */
    private String imageName;
    /**
     * @return The `container_registries` block defined as below.
     * 
     */
    private @Nullable List<PoolStartTaskContainerRegistry> registries;
    /**
     * @return Additional options to the container create command. These additional options are supplied as arguments to the &#34;docker create&#34; command, in addition to those controlled by the Batch Service.
     * 
     */
    private @Nullable String runOptions;
    /**
     * @return A flag to indicate where the container task working directory is. Possible values are `TaskWorkingDirectory` and `ContainerImageDefault`.
     * 
     */
    private @Nullable String workingDirectory;

    private PoolStartTaskContainer() {}
    /**
     * @return The image to use to create the container in which the task will run. This is the full image reference, as would be specified to &#34;docker pull&#34;. If no tag is provided as part of the image name, the tag &#34;:latest&#34; is used as a default.
     * 
     */
    public String imageName() {
        return this.imageName;
    }
    /**
     * @return The `container_registries` block defined as below.
     * 
     */
    public List<PoolStartTaskContainerRegistry> registries() {
        return this.registries == null ? List.of() : this.registries;
    }
    /**
     * @return Additional options to the container create command. These additional options are supplied as arguments to the &#34;docker create&#34; command, in addition to those controlled by the Batch Service.
     * 
     */
    public Optional<String> runOptions() {
        return Optional.ofNullable(this.runOptions);
    }
    /**
     * @return A flag to indicate where the container task working directory is. Possible values are `TaskWorkingDirectory` and `ContainerImageDefault`.
     * 
     */
    public Optional<String> workingDirectory() {
        return Optional.ofNullable(this.workingDirectory);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(PoolStartTaskContainer defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String imageName;
        private @Nullable List<PoolStartTaskContainerRegistry> registries;
        private @Nullable String runOptions;
        private @Nullable String workingDirectory;
        public Builder() {}
        public Builder(PoolStartTaskContainer defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.imageName = defaults.imageName;
    	      this.registries = defaults.registries;
    	      this.runOptions = defaults.runOptions;
    	      this.workingDirectory = defaults.workingDirectory;
        }

        @CustomType.Setter
        public Builder imageName(String imageName) {
            this.imageName = Objects.requireNonNull(imageName);
            return this;
        }
        @CustomType.Setter
        public Builder registries(@Nullable List<PoolStartTaskContainerRegistry> registries) {
            this.registries = registries;
            return this;
        }
        public Builder registries(PoolStartTaskContainerRegistry... registries) {
            return registries(List.of(registries));
        }
        @CustomType.Setter
        public Builder runOptions(@Nullable String runOptions) {
            this.runOptions = runOptions;
            return this;
        }
        @CustomType.Setter
        public Builder workingDirectory(@Nullable String workingDirectory) {
            this.workingDirectory = workingDirectory;
            return this;
        }
        public PoolStartTaskContainer build() {
            final var _resultValue = new PoolStartTaskContainer();
            _resultValue.imageName = imageName;
            _resultValue.registries = registries;
            _resultValue.runOptions = runOptions;
            _resultValue.workingDirectory = workingDirectory;
            return _resultValue;
        }
    }
}
