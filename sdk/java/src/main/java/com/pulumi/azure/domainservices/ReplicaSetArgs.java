// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.domainservices;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ReplicaSetArgs extends com.pulumi.resources.ResourceArgs {

    public static final ReplicaSetArgs Empty = new ReplicaSetArgs();

    /**
     * The ID of the Domain Service for which to create this Replica Set. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="domainServiceId", required=true)
    private Output<String> domainServiceId;

    /**
     * @return The ID of the Domain Service for which to create this Replica Set. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> domainServiceId() {
        return this.domainServiceId;
    }

    /**
     * The Azure location where this Replica Set should exist. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="location")
    private @Nullable Output<String> location;

    /**
     * @return The Azure location where this Replica Set should exist. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * The ID of the subnet in which to place this Replica Set. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="subnetId", required=true)
    private Output<String> subnetId;

    /**
     * @return The ID of the subnet in which to place this Replica Set. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> subnetId() {
        return this.subnetId;
    }

    private ReplicaSetArgs() {}

    private ReplicaSetArgs(ReplicaSetArgs $) {
        this.domainServiceId = $.domainServiceId;
        this.location = $.location;
        this.subnetId = $.subnetId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ReplicaSetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ReplicaSetArgs $;

        public Builder() {
            $ = new ReplicaSetArgs();
        }

        public Builder(ReplicaSetArgs defaults) {
            $ = new ReplicaSetArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param domainServiceId The ID of the Domain Service for which to create this Replica Set. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder domainServiceId(Output<String> domainServiceId) {
            $.domainServiceId = domainServiceId;
            return this;
        }

        /**
         * @param domainServiceId The ID of the Domain Service for which to create this Replica Set. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder domainServiceId(String domainServiceId) {
            return domainServiceId(Output.of(domainServiceId));
        }

        /**
         * @param location The Azure location where this Replica Set should exist. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location The Azure location where this Replica Set should exist. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param subnetId The ID of the subnet in which to place this Replica Set. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder subnetId(Output<String> subnetId) {
            $.subnetId = subnetId;
            return this;
        }

        /**
         * @param subnetId The ID of the subnet in which to place this Replica Set. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder subnetId(String subnetId) {
            return subnetId(Output.of(subnetId));
        }

        public ReplicaSetArgs build() {
            if ($.domainServiceId == null) {
                throw new MissingRequiredPropertyException("ReplicaSetArgs", "domainServiceId");
            }
            if ($.subnetId == null) {
                throw new MissingRequiredPropertyException("ReplicaSetArgs", "subnetId");
            }
            return $;
        }
    }

}
