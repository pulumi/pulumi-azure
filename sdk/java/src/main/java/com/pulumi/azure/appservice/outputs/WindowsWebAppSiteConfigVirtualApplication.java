// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.appservice.outputs;

import com.pulumi.azure.appservice.outputs.WindowsWebAppSiteConfigVirtualApplicationVirtualDirectory;
import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class WindowsWebAppSiteConfigVirtualApplication {
    /**
     * @return The physical path for the Virtual Application.
     * 
     */
    private final String physicalPath;
    /**
     * @return Should pre-loading be enabled. Defaults to `false`.
     * 
     */
    private final Boolean preload;
    /**
     * @return One or more `virtual_directory` blocks as defined below.
     * 
     */
    private final @Nullable List<WindowsWebAppSiteConfigVirtualApplicationVirtualDirectory> virtualDirectories;
    /**
     * @return The Virtual Path for the Virtual Application.
     * 
     */
    private final String virtualPath;

    @CustomType.Constructor
    private WindowsWebAppSiteConfigVirtualApplication(
        @CustomType.Parameter("physicalPath") String physicalPath,
        @CustomType.Parameter("preload") Boolean preload,
        @CustomType.Parameter("virtualDirectories") @Nullable List<WindowsWebAppSiteConfigVirtualApplicationVirtualDirectory> virtualDirectories,
        @CustomType.Parameter("virtualPath") String virtualPath) {
        this.physicalPath = physicalPath;
        this.preload = preload;
        this.virtualDirectories = virtualDirectories;
        this.virtualPath = virtualPath;
    }

    /**
     * @return The physical path for the Virtual Application.
     * 
     */
    public String physicalPath() {
        return this.physicalPath;
    }
    /**
     * @return Should pre-loading be enabled. Defaults to `false`.
     * 
     */
    public Boolean preload() {
        return this.preload;
    }
    /**
     * @return One or more `virtual_directory` blocks as defined below.
     * 
     */
    public List<WindowsWebAppSiteConfigVirtualApplicationVirtualDirectory> virtualDirectories() {
        return this.virtualDirectories == null ? List.of() : this.virtualDirectories;
    }
    /**
     * @return The Virtual Path for the Virtual Application.
     * 
     */
    public String virtualPath() {
        return this.virtualPath;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(WindowsWebAppSiteConfigVirtualApplication defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String physicalPath;
        private Boolean preload;
        private @Nullable List<WindowsWebAppSiteConfigVirtualApplicationVirtualDirectory> virtualDirectories;
        private String virtualPath;

        public Builder() {
    	      // Empty
        }

        public Builder(WindowsWebAppSiteConfigVirtualApplication defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.physicalPath = defaults.physicalPath;
    	      this.preload = defaults.preload;
    	      this.virtualDirectories = defaults.virtualDirectories;
    	      this.virtualPath = defaults.virtualPath;
        }

        public Builder physicalPath(String physicalPath) {
            this.physicalPath = Objects.requireNonNull(physicalPath);
            return this;
        }
        public Builder preload(Boolean preload) {
            this.preload = Objects.requireNonNull(preload);
            return this;
        }
        public Builder virtualDirectories(@Nullable List<WindowsWebAppSiteConfigVirtualApplicationVirtualDirectory> virtualDirectories) {
            this.virtualDirectories = virtualDirectories;
            return this;
        }
        public Builder virtualDirectories(WindowsWebAppSiteConfigVirtualApplicationVirtualDirectory... virtualDirectories) {
            return virtualDirectories(List.of(virtualDirectories));
        }
        public Builder virtualPath(String virtualPath) {
            this.virtualPath = Objects.requireNonNull(virtualPath);
            return this;
        }        public WindowsWebAppSiteConfigVirtualApplication build() {
            return new WindowsWebAppSiteConfigVirtualApplication(physicalPath, preload, virtualDirectories, virtualPath);
        }
    }
}
