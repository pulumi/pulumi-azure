// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.postgresql.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class FlexibleServerVirtualEndpointState extends com.pulumi.resources.ResourceArgs {

    public static final FlexibleServerVirtualEndpointState Empty = new FlexibleServerVirtualEndpointState();

    /**
     * The name of the Virtual Endpoint
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the Virtual Endpoint
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The Resource ID of the *Replica* Postgres Flexible Server this should be associated with
     * 
     */
    @Import(name="replicaServerId")
    private @Nullable Output<String> replicaServerId;

    /**
     * @return The Resource ID of the *Replica* Postgres Flexible Server this should be associated with
     * 
     */
    public Optional<Output<String>> replicaServerId() {
        return Optional.ofNullable(this.replicaServerId);
    }

    /**
     * The Resource ID of the *Source* Postgres Flexible Server this should be associated with.
     * 
     */
    @Import(name="sourceServerId")
    private @Nullable Output<String> sourceServerId;

    /**
     * @return The Resource ID of the *Source* Postgres Flexible Server this should be associated with.
     * 
     */
    public Optional<Output<String>> sourceServerId() {
        return Optional.ofNullable(this.sourceServerId);
    }

    /**
     * The type of Virtual Endpoint. Currently only `ReadWrite` is supported.
     * 
     */
    @Import(name="type")
    private @Nullable Output<String> type;

    /**
     * @return The type of Virtual Endpoint. Currently only `ReadWrite` is supported.
     * 
     */
    public Optional<Output<String>> type() {
        return Optional.ofNullable(this.type);
    }

    private FlexibleServerVirtualEndpointState() {}

    private FlexibleServerVirtualEndpointState(FlexibleServerVirtualEndpointState $) {
        this.name = $.name;
        this.replicaServerId = $.replicaServerId;
        this.sourceServerId = $.sourceServerId;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FlexibleServerVirtualEndpointState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FlexibleServerVirtualEndpointState $;

        public Builder() {
            $ = new FlexibleServerVirtualEndpointState();
        }

        public Builder(FlexibleServerVirtualEndpointState defaults) {
            $ = new FlexibleServerVirtualEndpointState(Objects.requireNonNull(defaults));
        }

        /**
         * @param name The name of the Virtual Endpoint
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the Virtual Endpoint
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param replicaServerId The Resource ID of the *Replica* Postgres Flexible Server this should be associated with
         * 
         * @return builder
         * 
         */
        public Builder replicaServerId(@Nullable Output<String> replicaServerId) {
            $.replicaServerId = replicaServerId;
            return this;
        }

        /**
         * @param replicaServerId The Resource ID of the *Replica* Postgres Flexible Server this should be associated with
         * 
         * @return builder
         * 
         */
        public Builder replicaServerId(String replicaServerId) {
            return replicaServerId(Output.of(replicaServerId));
        }

        /**
         * @param sourceServerId The Resource ID of the *Source* Postgres Flexible Server this should be associated with.
         * 
         * @return builder
         * 
         */
        public Builder sourceServerId(@Nullable Output<String> sourceServerId) {
            $.sourceServerId = sourceServerId;
            return this;
        }

        /**
         * @param sourceServerId The Resource ID of the *Source* Postgres Flexible Server this should be associated with.
         * 
         * @return builder
         * 
         */
        public Builder sourceServerId(String sourceServerId) {
            return sourceServerId(Output.of(sourceServerId));
        }

        /**
         * @param type The type of Virtual Endpoint. Currently only `ReadWrite` is supported.
         * 
         * @return builder
         * 
         */
        public Builder type(@Nullable Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type The type of Virtual Endpoint. Currently only `ReadWrite` is supported.
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        public FlexibleServerVirtualEndpointState build() {
            return $;
        }
    }

}
