// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.containerservice.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GroupImageRegistryCredential {
    /**
     * @return The password with which to connect to the registry. Changing this forces a new resource to be created.
     * 
     */
    private @Nullable String password;
    /**
     * @return The address to use to connect to the registry without protocol (&#34;https&#34;/&#34;http&#34;). For example: &#34;myacr.acr.io&#34;. Changing this forces a new resource to be created.
     * 
     */
    private String server;
    /**
     * @return The identity ID for the private registry. Changing this forces a new resource to be created.
     * 
     */
    private @Nullable String userAssignedIdentityId;
    /**
     * @return The username with which to connect to the registry. Changing this forces a new resource to be created.
     * 
     */
    private @Nullable String username;

    private GroupImageRegistryCredential() {}
    /**
     * @return The password with which to connect to the registry. Changing this forces a new resource to be created.
     * 
     */
    public Optional<String> password() {
        return Optional.ofNullable(this.password);
    }
    /**
     * @return The address to use to connect to the registry without protocol (&#34;https&#34;/&#34;http&#34;). For example: &#34;myacr.acr.io&#34;. Changing this forces a new resource to be created.
     * 
     */
    public String server() {
        return this.server;
    }
    /**
     * @return The identity ID for the private registry. Changing this forces a new resource to be created.
     * 
     */
    public Optional<String> userAssignedIdentityId() {
        return Optional.ofNullable(this.userAssignedIdentityId);
    }
    /**
     * @return The username with which to connect to the registry. Changing this forces a new resource to be created.
     * 
     */
    public Optional<String> username() {
        return Optional.ofNullable(this.username);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GroupImageRegistryCredential defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String password;
        private String server;
        private @Nullable String userAssignedIdentityId;
        private @Nullable String username;
        public Builder() {}
        public Builder(GroupImageRegistryCredential defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.password = defaults.password;
    	      this.server = defaults.server;
    	      this.userAssignedIdentityId = defaults.userAssignedIdentityId;
    	      this.username = defaults.username;
        }

        @CustomType.Setter
        public Builder password(@Nullable String password) {

            this.password = password;
            return this;
        }
        @CustomType.Setter
        public Builder server(String server) {
            if (server == null) {
              throw new MissingRequiredPropertyException("GroupImageRegistryCredential", "server");
            }
            this.server = server;
            return this;
        }
        @CustomType.Setter
        public Builder userAssignedIdentityId(@Nullable String userAssignedIdentityId) {

            this.userAssignedIdentityId = userAssignedIdentityId;
            return this;
        }
        @CustomType.Setter
        public Builder username(@Nullable String username) {

            this.username = username;
            return this;
        }
        public GroupImageRegistryCredential build() {
            final var _resultValue = new GroupImageRegistryCredential();
            _resultValue.password = password;
            _resultValue.server = server;
            _resultValue.userAssignedIdentityId = userAssignedIdentityId;
            _resultValue.username = username;
            return _resultValue;
        }
    }
}
