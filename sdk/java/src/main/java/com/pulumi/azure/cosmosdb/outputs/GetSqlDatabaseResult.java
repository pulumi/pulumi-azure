// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.cosmosdb.outputs;

import com.pulumi.azure.cosmosdb.outputs.GetSqlDatabaseAutoscaleSetting;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetSqlDatabaseResult {
    private String accountName;
    /**
     * @return An `autoscale_settings` block as defined below.
     * 
     */
    private List<GetSqlDatabaseAutoscaleSetting> autoscaleSettings;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private String name;
    private String resourceGroupName;
    /**
     * @return The throughput of SQL database (RU/s).
     * 
     */
    private Integer throughput;

    private GetSqlDatabaseResult() {}
    public String accountName() {
        return this.accountName;
    }
    /**
     * @return An `autoscale_settings` block as defined below.
     * 
     */
    public List<GetSqlDatabaseAutoscaleSetting> autoscaleSettings() {
        return this.autoscaleSettings;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public String name() {
        return this.name;
    }
    public String resourceGroupName() {
        return this.resourceGroupName;
    }
    /**
     * @return The throughput of SQL database (RU/s).
     * 
     */
    public Integer throughput() {
        return this.throughput;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSqlDatabaseResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String accountName;
        private List<GetSqlDatabaseAutoscaleSetting> autoscaleSettings;
        private String id;
        private String name;
        private String resourceGroupName;
        private Integer throughput;
        public Builder() {}
        public Builder(GetSqlDatabaseResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accountName = defaults.accountName;
    	      this.autoscaleSettings = defaults.autoscaleSettings;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.resourceGroupName = defaults.resourceGroupName;
    	      this.throughput = defaults.throughput;
        }

        @CustomType.Setter
        public Builder accountName(String accountName) {
            if (accountName == null) {
              throw new MissingRequiredPropertyException("GetSqlDatabaseResult", "accountName");
            }
            this.accountName = accountName;
            return this;
        }
        @CustomType.Setter
        public Builder autoscaleSettings(List<GetSqlDatabaseAutoscaleSetting> autoscaleSettings) {
            if (autoscaleSettings == null) {
              throw new MissingRequiredPropertyException("GetSqlDatabaseResult", "autoscaleSettings");
            }
            this.autoscaleSettings = autoscaleSettings;
            return this;
        }
        public Builder autoscaleSettings(GetSqlDatabaseAutoscaleSetting... autoscaleSettings) {
            return autoscaleSettings(List.of(autoscaleSettings));
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetSqlDatabaseResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetSqlDatabaseResult", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder resourceGroupName(String resourceGroupName) {
            if (resourceGroupName == null) {
              throw new MissingRequiredPropertyException("GetSqlDatabaseResult", "resourceGroupName");
            }
            this.resourceGroupName = resourceGroupName;
            return this;
        }
        @CustomType.Setter
        public Builder throughput(Integer throughput) {
            if (throughput == null) {
              throw new MissingRequiredPropertyException("GetSqlDatabaseResult", "throughput");
            }
            this.throughput = throughput;
            return this;
        }
        public GetSqlDatabaseResult build() {
            final var _resultValue = new GetSqlDatabaseResult();
            _resultValue.accountName = accountName;
            _resultValue.autoscaleSettings = autoscaleSettings;
            _resultValue.id = id;
            _resultValue.name = name;
            _resultValue.resourceGroupName = resourceGroupName;
            _resultValue.throughput = throughput;
            return _resultValue;
        }
    }
}
