// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.compute.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.util.Objects;


public final class LinuxVirtualMachineScaleSetAutomaticOsUpgradePolicyArgs extends com.pulumi.resources.ResourceArgs {

    public static final LinuxVirtualMachineScaleSetAutomaticOsUpgradePolicyArgs Empty = new LinuxVirtualMachineScaleSetAutomaticOsUpgradePolicyArgs();

    /**
     * Should automatic rollbacks be disabled?
     * 
     */
    @Import(name="disableAutomaticRollback", required=true)
    private Output<Boolean> disableAutomaticRollback;

    /**
     * @return Should automatic rollbacks be disabled?
     * 
     */
    public Output<Boolean> disableAutomaticRollback() {
        return this.disableAutomaticRollback;
    }

    /**
     * Should OS Upgrades automatically be applied to Scale Set instances in a rolling fashion when a newer version of the OS Image becomes available?
     * 
     */
    @Import(name="enableAutomaticOsUpgrade", required=true)
    private Output<Boolean> enableAutomaticOsUpgrade;

    /**
     * @return Should OS Upgrades automatically be applied to Scale Set instances in a rolling fashion when a newer version of the OS Image becomes available?
     * 
     */
    public Output<Boolean> enableAutomaticOsUpgrade() {
        return this.enableAutomaticOsUpgrade;
    }

    private LinuxVirtualMachineScaleSetAutomaticOsUpgradePolicyArgs() {}

    private LinuxVirtualMachineScaleSetAutomaticOsUpgradePolicyArgs(LinuxVirtualMachineScaleSetAutomaticOsUpgradePolicyArgs $) {
        this.disableAutomaticRollback = $.disableAutomaticRollback;
        this.enableAutomaticOsUpgrade = $.enableAutomaticOsUpgrade;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(LinuxVirtualMachineScaleSetAutomaticOsUpgradePolicyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private LinuxVirtualMachineScaleSetAutomaticOsUpgradePolicyArgs $;

        public Builder() {
            $ = new LinuxVirtualMachineScaleSetAutomaticOsUpgradePolicyArgs();
        }

        public Builder(LinuxVirtualMachineScaleSetAutomaticOsUpgradePolicyArgs defaults) {
            $ = new LinuxVirtualMachineScaleSetAutomaticOsUpgradePolicyArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param disableAutomaticRollback Should automatic rollbacks be disabled?
         * 
         * @return builder
         * 
         */
        public Builder disableAutomaticRollback(Output<Boolean> disableAutomaticRollback) {
            $.disableAutomaticRollback = disableAutomaticRollback;
            return this;
        }

        /**
         * @param disableAutomaticRollback Should automatic rollbacks be disabled?
         * 
         * @return builder
         * 
         */
        public Builder disableAutomaticRollback(Boolean disableAutomaticRollback) {
            return disableAutomaticRollback(Output.of(disableAutomaticRollback));
        }

        /**
         * @param enableAutomaticOsUpgrade Should OS Upgrades automatically be applied to Scale Set instances in a rolling fashion when a newer version of the OS Image becomes available?
         * 
         * @return builder
         * 
         */
        public Builder enableAutomaticOsUpgrade(Output<Boolean> enableAutomaticOsUpgrade) {
            $.enableAutomaticOsUpgrade = enableAutomaticOsUpgrade;
            return this;
        }

        /**
         * @param enableAutomaticOsUpgrade Should OS Upgrades automatically be applied to Scale Set instances in a rolling fashion when a newer version of the OS Image becomes available?
         * 
         * @return builder
         * 
         */
        public Builder enableAutomaticOsUpgrade(Boolean enableAutomaticOsUpgrade) {
            return enableAutomaticOsUpgrade(Output.of(enableAutomaticOsUpgrade));
        }

        public LinuxVirtualMachineScaleSetAutomaticOsUpgradePolicyArgs build() {
            if ($.disableAutomaticRollback == null) {
                throw new MissingRequiredPropertyException("LinuxVirtualMachineScaleSetAutomaticOsUpgradePolicyArgs", "disableAutomaticRollback");
            }
            if ($.enableAutomaticOsUpgrade == null) {
                throw new MissingRequiredPropertyException("LinuxVirtualMachineScaleSetAutomaticOsUpgradePolicyArgs", "enableAutomaticOsUpgrade");
            }
            return $;
        }
    }

}
