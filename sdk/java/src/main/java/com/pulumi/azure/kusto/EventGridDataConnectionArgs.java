// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.kusto;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class EventGridDataConnectionArgs extends com.pulumi.resources.ResourceArgs {

    public static final EventGridDataConnectionArgs Empty = new EventGridDataConnectionArgs();

    /**
     * Specifies the blob storage event type that needs to be processed. Possible
     * Values are `Microsoft.Storage.BlobCreated` and `Microsoft.Storage.BlobRenamed`. Defaults
     * to `Microsoft.Storage.BlobCreated`.
     * 
     */
    @Import(name="blobStorageEventType")
    private @Nullable Output<String> blobStorageEventType;

    /**
     * @return Specifies the blob storage event type that needs to be processed. Possible
     * Values are `Microsoft.Storage.BlobCreated` and `Microsoft.Storage.BlobRenamed`. Defaults
     * to `Microsoft.Storage.BlobCreated`.
     * 
     */
    public Optional<Output<String>> blobStorageEventType() {
        return Optional.ofNullable(this.blobStorageEventType);
    }

    /**
     * Specifies the name of the Kusto Cluster this data connection will be added to. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="clusterName", required=true)
    private Output<String> clusterName;

    /**
     * @return Specifies the name of the Kusto Cluster this data connection will be added to. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> clusterName() {
        return this.clusterName;
    }

    /**
     * Specifies the data format of the EventHub messages. Allowed values: `AVRO`, `CSV`, `JSON`, `MULTIJSON`, `PSV`, `RAW`, `SCSV`, `SINGLEJSON`, `SOHSV`, `TSV` and `TXT`
     * 
     */
    @Import(name="dataFormat")
    private @Nullable Output<String> dataFormat;

    /**
     * @return Specifies the data format of the EventHub messages. Allowed values: `AVRO`, `CSV`, `JSON`, `MULTIJSON`, `PSV`, `RAW`, `SCSV`, `SINGLEJSON`, `SOHSV`, `TSV` and `TXT`
     * 
     */
    public Optional<Output<String>> dataFormat() {
        return Optional.ofNullable(this.dataFormat);
    }

    /**
     * Specifies the name of the Kusto Database this data connection will be added to. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="databaseName", required=true)
    private Output<String> databaseName;

    /**
     * @return Specifies the name of the Kusto Database this data connection will be added to. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> databaseName() {
        return this.databaseName;
    }

    /**
     * Specifies the Event Hub consumer group this data connection will use for
     * ingestion. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="eventhubConsumerGroupName", required=true)
    private Output<String> eventhubConsumerGroupName;

    /**
     * @return Specifies the Event Hub consumer group this data connection will use for
     * ingestion. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> eventhubConsumerGroupName() {
        return this.eventhubConsumerGroupName;
    }

    /**
     * Specifies the resource id of the Event Hub this data connection will use for ingestion.
     * Changing this forces a new resource to be created.
     * 
     */
    @Import(name="eventhubId", required=true)
    private Output<String> eventhubId;

    /**
     * @return Specifies the resource id of the Event Hub this data connection will use for ingestion.
     * Changing this forces a new resource to be created.
     * 
     */
    public Output<String> eventhubId() {
        return this.eventhubId;
    }

    /**
     * The location where the Kusto Database should be created. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="location")
    private @Nullable Output<String> location;

    /**
     * @return The location where the Kusto Database should be created. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * Specifies the mapping rule used for the message ingestion. Mapping rule must exist before resource is created.
     * 
     */
    @Import(name="mappingRuleName")
    private @Nullable Output<String> mappingRuleName;

    /**
     * @return Specifies the mapping rule used for the message ingestion. Mapping rule must exist before resource is created.
     * 
     */
    public Optional<Output<String>> mappingRuleName() {
        return Optional.ofNullable(this.mappingRuleName);
    }

    /**
     * The name of the Kusto Event Grid Data Connection to create. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the Kusto Event Grid Data Connection to create. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Specifies the Resource Group where the Kusto Database should exist. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    /**
     * @return Specifies the Resource Group where the Kusto Database should exist. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * is the first record of every file ignored? Defaults to `false`.
     * 
     */
    @Import(name="skipFirstRecord")
    private @Nullable Output<Boolean> skipFirstRecord;

    /**
     * @return is the first record of every file ignored? Defaults to `false`.
     * 
     */
    public Optional<Output<Boolean>> skipFirstRecord() {
        return Optional.ofNullable(this.skipFirstRecord);
    }

    /**
     * Specifies the resource id of the Storage Account this data connection will use for ingestion. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="storageAccountId", required=true)
    private Output<String> storageAccountId;

    /**
     * @return Specifies the resource id of the Storage Account this data connection will use for ingestion. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> storageAccountId() {
        return this.storageAccountId;
    }

    /**
     * Specifies the target table name used for the message ingestion. Table must exist before resource is created.
     * 
     */
    @Import(name="tableName")
    private @Nullable Output<String> tableName;

    /**
     * @return Specifies the target table name used for the message ingestion. Table must exist before resource is created.
     * 
     */
    public Optional<Output<String>> tableName() {
        return Optional.ofNullable(this.tableName);
    }

    private EventGridDataConnectionArgs() {}

    private EventGridDataConnectionArgs(EventGridDataConnectionArgs $) {
        this.blobStorageEventType = $.blobStorageEventType;
        this.clusterName = $.clusterName;
        this.dataFormat = $.dataFormat;
        this.databaseName = $.databaseName;
        this.eventhubConsumerGroupName = $.eventhubConsumerGroupName;
        this.eventhubId = $.eventhubId;
        this.location = $.location;
        this.mappingRuleName = $.mappingRuleName;
        this.name = $.name;
        this.resourceGroupName = $.resourceGroupName;
        this.skipFirstRecord = $.skipFirstRecord;
        this.storageAccountId = $.storageAccountId;
        this.tableName = $.tableName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(EventGridDataConnectionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private EventGridDataConnectionArgs $;

        public Builder() {
            $ = new EventGridDataConnectionArgs();
        }

        public Builder(EventGridDataConnectionArgs defaults) {
            $ = new EventGridDataConnectionArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param blobStorageEventType Specifies the blob storage event type that needs to be processed. Possible
         * Values are `Microsoft.Storage.BlobCreated` and `Microsoft.Storage.BlobRenamed`. Defaults
         * to `Microsoft.Storage.BlobCreated`.
         * 
         * @return builder
         * 
         */
        public Builder blobStorageEventType(@Nullable Output<String> blobStorageEventType) {
            $.blobStorageEventType = blobStorageEventType;
            return this;
        }

        /**
         * @param blobStorageEventType Specifies the blob storage event type that needs to be processed. Possible
         * Values are `Microsoft.Storage.BlobCreated` and `Microsoft.Storage.BlobRenamed`. Defaults
         * to `Microsoft.Storage.BlobCreated`.
         * 
         * @return builder
         * 
         */
        public Builder blobStorageEventType(String blobStorageEventType) {
            return blobStorageEventType(Output.of(blobStorageEventType));
        }

        /**
         * @param clusterName Specifies the name of the Kusto Cluster this data connection will be added to. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder clusterName(Output<String> clusterName) {
            $.clusterName = clusterName;
            return this;
        }

        /**
         * @param clusterName Specifies the name of the Kusto Cluster this data connection will be added to. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder clusterName(String clusterName) {
            return clusterName(Output.of(clusterName));
        }

        /**
         * @param dataFormat Specifies the data format of the EventHub messages. Allowed values: `AVRO`, `CSV`, `JSON`, `MULTIJSON`, `PSV`, `RAW`, `SCSV`, `SINGLEJSON`, `SOHSV`, `TSV` and `TXT`
         * 
         * @return builder
         * 
         */
        public Builder dataFormat(@Nullable Output<String> dataFormat) {
            $.dataFormat = dataFormat;
            return this;
        }

        /**
         * @param dataFormat Specifies the data format of the EventHub messages. Allowed values: `AVRO`, `CSV`, `JSON`, `MULTIJSON`, `PSV`, `RAW`, `SCSV`, `SINGLEJSON`, `SOHSV`, `TSV` and `TXT`
         * 
         * @return builder
         * 
         */
        public Builder dataFormat(String dataFormat) {
            return dataFormat(Output.of(dataFormat));
        }

        /**
         * @param databaseName Specifies the name of the Kusto Database this data connection will be added to. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder databaseName(Output<String> databaseName) {
            $.databaseName = databaseName;
            return this;
        }

        /**
         * @param databaseName Specifies the name of the Kusto Database this data connection will be added to. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder databaseName(String databaseName) {
            return databaseName(Output.of(databaseName));
        }

        /**
         * @param eventhubConsumerGroupName Specifies the Event Hub consumer group this data connection will use for
         * ingestion. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder eventhubConsumerGroupName(Output<String> eventhubConsumerGroupName) {
            $.eventhubConsumerGroupName = eventhubConsumerGroupName;
            return this;
        }

        /**
         * @param eventhubConsumerGroupName Specifies the Event Hub consumer group this data connection will use for
         * ingestion. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder eventhubConsumerGroupName(String eventhubConsumerGroupName) {
            return eventhubConsumerGroupName(Output.of(eventhubConsumerGroupName));
        }

        /**
         * @param eventhubId Specifies the resource id of the Event Hub this data connection will use for ingestion.
         * Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder eventhubId(Output<String> eventhubId) {
            $.eventhubId = eventhubId;
            return this;
        }

        /**
         * @param eventhubId Specifies the resource id of the Event Hub this data connection will use for ingestion.
         * Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder eventhubId(String eventhubId) {
            return eventhubId(Output.of(eventhubId));
        }

        /**
         * @param location The location where the Kusto Database should be created. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location The location where the Kusto Database should be created. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param mappingRuleName Specifies the mapping rule used for the message ingestion. Mapping rule must exist before resource is created.
         * 
         * @return builder
         * 
         */
        public Builder mappingRuleName(@Nullable Output<String> mappingRuleName) {
            $.mappingRuleName = mappingRuleName;
            return this;
        }

        /**
         * @param mappingRuleName Specifies the mapping rule used for the message ingestion. Mapping rule must exist before resource is created.
         * 
         * @return builder
         * 
         */
        public Builder mappingRuleName(String mappingRuleName) {
            return mappingRuleName(Output.of(mappingRuleName));
        }

        /**
         * @param name The name of the Kusto Event Grid Data Connection to create. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the Kusto Event Grid Data Connection to create. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param resourceGroupName Specifies the Resource Group where the Kusto Database should exist. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName Specifies the Resource Group where the Kusto Database should exist. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        /**
         * @param skipFirstRecord is the first record of every file ignored? Defaults to `false`.
         * 
         * @return builder
         * 
         */
        public Builder skipFirstRecord(@Nullable Output<Boolean> skipFirstRecord) {
            $.skipFirstRecord = skipFirstRecord;
            return this;
        }

        /**
         * @param skipFirstRecord is the first record of every file ignored? Defaults to `false`.
         * 
         * @return builder
         * 
         */
        public Builder skipFirstRecord(Boolean skipFirstRecord) {
            return skipFirstRecord(Output.of(skipFirstRecord));
        }

        /**
         * @param storageAccountId Specifies the resource id of the Storage Account this data connection will use for ingestion. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder storageAccountId(Output<String> storageAccountId) {
            $.storageAccountId = storageAccountId;
            return this;
        }

        /**
         * @param storageAccountId Specifies the resource id of the Storage Account this data connection will use for ingestion. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder storageAccountId(String storageAccountId) {
            return storageAccountId(Output.of(storageAccountId));
        }

        /**
         * @param tableName Specifies the target table name used for the message ingestion. Table must exist before resource is created.
         * 
         * @return builder
         * 
         */
        public Builder tableName(@Nullable Output<String> tableName) {
            $.tableName = tableName;
            return this;
        }

        /**
         * @param tableName Specifies the target table name used for the message ingestion. Table must exist before resource is created.
         * 
         * @return builder
         * 
         */
        public Builder tableName(String tableName) {
            return tableName(Output.of(tableName));
        }

        public EventGridDataConnectionArgs build() {
            $.clusterName = Objects.requireNonNull($.clusterName, "expected parameter 'clusterName' to be non-null");
            $.databaseName = Objects.requireNonNull($.databaseName, "expected parameter 'databaseName' to be non-null");
            $.eventhubConsumerGroupName = Objects.requireNonNull($.eventhubConsumerGroupName, "expected parameter 'eventhubConsumerGroupName' to be non-null");
            $.eventhubId = Objects.requireNonNull($.eventhubId, "expected parameter 'eventhubId' to be non-null");
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            $.storageAccountId = Objects.requireNonNull($.storageAccountId, "expected parameter 'storageAccountId' to be non-null");
            return $;
        }
    }

}
