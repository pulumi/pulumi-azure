// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.network;

import com.pulumi.azure.network.inputs.NetworkInterfaceIpConfigurationArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class NetworkInterfaceArgs extends com.pulumi.resources.ResourceArgs {

    public static final NetworkInterfaceArgs Empty = new NetworkInterfaceArgs();

    /**
     * A list of IP Addresses defining the DNS Servers which should be used for this Network Interface.
     * 
     */
    @Import(name="dnsServers")
    private @Nullable Output<List<String>> dnsServers;

    /**
     * @return A list of IP Addresses defining the DNS Servers which should be used for this Network Interface.
     * 
     */
    public Optional<Output<List<String>>> dnsServers() {
        return Optional.ofNullable(this.dnsServers);
    }

    /**
     * Specifies the Edge Zone within the Azure Region where this Network Interface should exist. Changing this forces a new Network Interface to be created.
     * 
     */
    @Import(name="edgeZone")
    private @Nullable Output<String> edgeZone;

    /**
     * @return Specifies the Edge Zone within the Azure Region where this Network Interface should exist. Changing this forces a new Network Interface to be created.
     * 
     */
    public Optional<Output<String>> edgeZone() {
        return Optional.ofNullable(this.edgeZone);
    }

    /**
     * Should Accelerated Networking be enabled? Defaults to `false`.
     * 
     */
    @Import(name="enableAcceleratedNetworking")
    private @Nullable Output<Boolean> enableAcceleratedNetworking;

    /**
     * @return Should Accelerated Networking be enabled? Defaults to `false`.
     * 
     */
    public Optional<Output<Boolean>> enableAcceleratedNetworking() {
        return Optional.ofNullable(this.enableAcceleratedNetworking);
    }

    /**
     * Should IP Forwarding be enabled? Defaults to `false`.
     * 
     */
    @Import(name="enableIpForwarding")
    private @Nullable Output<Boolean> enableIpForwarding;

    /**
     * @return Should IP Forwarding be enabled? Defaults to `false`.
     * 
     */
    public Optional<Output<Boolean>> enableIpForwarding() {
        return Optional.ofNullable(this.enableIpForwarding);
    }

    /**
     * The (relative) DNS Name used for internal communications between Virtual Machines in the same Virtual Network.
     * 
     */
    @Import(name="internalDnsNameLabel")
    private @Nullable Output<String> internalDnsNameLabel;

    /**
     * @return The (relative) DNS Name used for internal communications between Virtual Machines in the same Virtual Network.
     * 
     */
    public Optional<Output<String>> internalDnsNameLabel() {
        return Optional.ofNullable(this.internalDnsNameLabel);
    }

    /**
     * One or more `ip_configuration` blocks as defined below.
     * 
     */
    @Import(name="ipConfigurations", required=true)
    private Output<List<NetworkInterfaceIpConfigurationArgs>> ipConfigurations;

    /**
     * @return One or more `ip_configuration` blocks as defined below.
     * 
     */
    public Output<List<NetworkInterfaceIpConfigurationArgs>> ipConfigurations() {
        return this.ipConfigurations;
    }

    /**
     * The location where the Network Interface should exist. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="location")
    private @Nullable Output<String> location;

    /**
     * @return The location where the Network Interface should exist. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * The name of the Network Interface. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the Network Interface. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The name of the Resource Group in which to create the Network Interface. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    /**
     * @return The name of the Resource Group in which to create the Network Interface. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * A mapping of tags to assign to the resource.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return A mapping of tags to assign to the resource.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private NetworkInterfaceArgs() {}

    private NetworkInterfaceArgs(NetworkInterfaceArgs $) {
        this.dnsServers = $.dnsServers;
        this.edgeZone = $.edgeZone;
        this.enableAcceleratedNetworking = $.enableAcceleratedNetworking;
        this.enableIpForwarding = $.enableIpForwarding;
        this.internalDnsNameLabel = $.internalDnsNameLabel;
        this.ipConfigurations = $.ipConfigurations;
        this.location = $.location;
        this.name = $.name;
        this.resourceGroupName = $.resourceGroupName;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(NetworkInterfaceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private NetworkInterfaceArgs $;

        public Builder() {
            $ = new NetworkInterfaceArgs();
        }

        public Builder(NetworkInterfaceArgs defaults) {
            $ = new NetworkInterfaceArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param dnsServers A list of IP Addresses defining the DNS Servers which should be used for this Network Interface.
         * 
         * @return builder
         * 
         */
        public Builder dnsServers(@Nullable Output<List<String>> dnsServers) {
            $.dnsServers = dnsServers;
            return this;
        }

        /**
         * @param dnsServers A list of IP Addresses defining the DNS Servers which should be used for this Network Interface.
         * 
         * @return builder
         * 
         */
        public Builder dnsServers(List<String> dnsServers) {
            return dnsServers(Output.of(dnsServers));
        }

        /**
         * @param dnsServers A list of IP Addresses defining the DNS Servers which should be used for this Network Interface.
         * 
         * @return builder
         * 
         */
        public Builder dnsServers(String... dnsServers) {
            return dnsServers(List.of(dnsServers));
        }

        /**
         * @param edgeZone Specifies the Edge Zone within the Azure Region where this Network Interface should exist. Changing this forces a new Network Interface to be created.
         * 
         * @return builder
         * 
         */
        public Builder edgeZone(@Nullable Output<String> edgeZone) {
            $.edgeZone = edgeZone;
            return this;
        }

        /**
         * @param edgeZone Specifies the Edge Zone within the Azure Region where this Network Interface should exist. Changing this forces a new Network Interface to be created.
         * 
         * @return builder
         * 
         */
        public Builder edgeZone(String edgeZone) {
            return edgeZone(Output.of(edgeZone));
        }

        /**
         * @param enableAcceleratedNetworking Should Accelerated Networking be enabled? Defaults to `false`.
         * 
         * @return builder
         * 
         */
        public Builder enableAcceleratedNetworking(@Nullable Output<Boolean> enableAcceleratedNetworking) {
            $.enableAcceleratedNetworking = enableAcceleratedNetworking;
            return this;
        }

        /**
         * @param enableAcceleratedNetworking Should Accelerated Networking be enabled? Defaults to `false`.
         * 
         * @return builder
         * 
         */
        public Builder enableAcceleratedNetworking(Boolean enableAcceleratedNetworking) {
            return enableAcceleratedNetworking(Output.of(enableAcceleratedNetworking));
        }

        /**
         * @param enableIpForwarding Should IP Forwarding be enabled? Defaults to `false`.
         * 
         * @return builder
         * 
         */
        public Builder enableIpForwarding(@Nullable Output<Boolean> enableIpForwarding) {
            $.enableIpForwarding = enableIpForwarding;
            return this;
        }

        /**
         * @param enableIpForwarding Should IP Forwarding be enabled? Defaults to `false`.
         * 
         * @return builder
         * 
         */
        public Builder enableIpForwarding(Boolean enableIpForwarding) {
            return enableIpForwarding(Output.of(enableIpForwarding));
        }

        /**
         * @param internalDnsNameLabel The (relative) DNS Name used for internal communications between Virtual Machines in the same Virtual Network.
         * 
         * @return builder
         * 
         */
        public Builder internalDnsNameLabel(@Nullable Output<String> internalDnsNameLabel) {
            $.internalDnsNameLabel = internalDnsNameLabel;
            return this;
        }

        /**
         * @param internalDnsNameLabel The (relative) DNS Name used for internal communications between Virtual Machines in the same Virtual Network.
         * 
         * @return builder
         * 
         */
        public Builder internalDnsNameLabel(String internalDnsNameLabel) {
            return internalDnsNameLabel(Output.of(internalDnsNameLabel));
        }

        /**
         * @param ipConfigurations One or more `ip_configuration` blocks as defined below.
         * 
         * @return builder
         * 
         */
        public Builder ipConfigurations(Output<List<NetworkInterfaceIpConfigurationArgs>> ipConfigurations) {
            $.ipConfigurations = ipConfigurations;
            return this;
        }

        /**
         * @param ipConfigurations One or more `ip_configuration` blocks as defined below.
         * 
         * @return builder
         * 
         */
        public Builder ipConfigurations(List<NetworkInterfaceIpConfigurationArgs> ipConfigurations) {
            return ipConfigurations(Output.of(ipConfigurations));
        }

        /**
         * @param ipConfigurations One or more `ip_configuration` blocks as defined below.
         * 
         * @return builder
         * 
         */
        public Builder ipConfigurations(NetworkInterfaceIpConfigurationArgs... ipConfigurations) {
            return ipConfigurations(List.of(ipConfigurations));
        }

        /**
         * @param location The location where the Network Interface should exist. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location The location where the Network Interface should exist. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param name The name of the Network Interface. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the Network Interface. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param resourceGroupName The name of the Resource Group in which to create the Network Interface. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName The name of the Resource Group in which to create the Network Interface. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        /**
         * @param tags A mapping of tags to assign to the resource.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags A mapping of tags to assign to the resource.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public NetworkInterfaceArgs build() {
            $.ipConfigurations = Objects.requireNonNull($.ipConfigurations, "expected parameter 'ipConfigurations' to be non-null");
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            return $;
        }
    }

}
