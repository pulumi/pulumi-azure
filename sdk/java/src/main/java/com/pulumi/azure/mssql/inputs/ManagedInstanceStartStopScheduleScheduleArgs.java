// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.mssql.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class ManagedInstanceStartStopScheduleScheduleArgs extends com.pulumi.resources.ResourceArgs {

    public static final ManagedInstanceStartStopScheduleScheduleArgs Empty = new ManagedInstanceStartStopScheduleScheduleArgs();

    /**
     * Start day of the schedule. Possible values are `Monday`, `Tuesday`, `Wednesday`, `Thursday`, `Friday`, `Saturday`, `Sunday`.
     * 
     */
    @Import(name="startDay", required=true)
    private Output<String> startDay;

    /**
     * @return Start day of the schedule. Possible values are `Monday`, `Tuesday`, `Wednesday`, `Thursday`, `Friday`, `Saturday`, `Sunday`.
     * 
     */
    public Output<String> startDay() {
        return this.startDay;
    }

    /**
     * Start time of the schedule in 24-hour format (e.g., `08:00`).
     * 
     */
    @Import(name="startTime", required=true)
    private Output<String> startTime;

    /**
     * @return Start time of the schedule in 24-hour format (e.g., `08:00`).
     * 
     */
    public Output<String> startTime() {
        return this.startTime;
    }

    /**
     * Stop day of the schedule. Possible values are `Monday`, `Tuesday`, `Wednesday`, `Thursday`, `Friday`, `Saturday`, `Sunday`.
     * 
     */
    @Import(name="stopDay", required=true)
    private Output<String> stopDay;

    /**
     * @return Stop day of the schedule. Possible values are `Monday`, `Tuesday`, `Wednesday`, `Thursday`, `Friday`, `Saturday`, `Sunday`.
     * 
     */
    public Output<String> stopDay() {
        return this.stopDay;
    }

    /**
     * Stop time of the schedule in 24-hour format (e.g., `17:00`).
     * 
     */
    @Import(name="stopTime", required=true)
    private Output<String> stopTime;

    /**
     * @return Stop time of the schedule in 24-hour format (e.g., `17:00`).
     * 
     */
    public Output<String> stopTime() {
        return this.stopTime;
    }

    private ManagedInstanceStartStopScheduleScheduleArgs() {}

    private ManagedInstanceStartStopScheduleScheduleArgs(ManagedInstanceStartStopScheduleScheduleArgs $) {
        this.startDay = $.startDay;
        this.startTime = $.startTime;
        this.stopDay = $.stopDay;
        this.stopTime = $.stopTime;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ManagedInstanceStartStopScheduleScheduleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ManagedInstanceStartStopScheduleScheduleArgs $;

        public Builder() {
            $ = new ManagedInstanceStartStopScheduleScheduleArgs();
        }

        public Builder(ManagedInstanceStartStopScheduleScheduleArgs defaults) {
            $ = new ManagedInstanceStartStopScheduleScheduleArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param startDay Start day of the schedule. Possible values are `Monday`, `Tuesday`, `Wednesday`, `Thursday`, `Friday`, `Saturday`, `Sunday`.
         * 
         * @return builder
         * 
         */
        public Builder startDay(Output<String> startDay) {
            $.startDay = startDay;
            return this;
        }

        /**
         * @param startDay Start day of the schedule. Possible values are `Monday`, `Tuesday`, `Wednesday`, `Thursday`, `Friday`, `Saturday`, `Sunday`.
         * 
         * @return builder
         * 
         */
        public Builder startDay(String startDay) {
            return startDay(Output.of(startDay));
        }

        /**
         * @param startTime Start time of the schedule in 24-hour format (e.g., `08:00`).
         * 
         * @return builder
         * 
         */
        public Builder startTime(Output<String> startTime) {
            $.startTime = startTime;
            return this;
        }

        /**
         * @param startTime Start time of the schedule in 24-hour format (e.g., `08:00`).
         * 
         * @return builder
         * 
         */
        public Builder startTime(String startTime) {
            return startTime(Output.of(startTime));
        }

        /**
         * @param stopDay Stop day of the schedule. Possible values are `Monday`, `Tuesday`, `Wednesday`, `Thursday`, `Friday`, `Saturday`, `Sunday`.
         * 
         * @return builder
         * 
         */
        public Builder stopDay(Output<String> stopDay) {
            $.stopDay = stopDay;
            return this;
        }

        /**
         * @param stopDay Stop day of the schedule. Possible values are `Monday`, `Tuesday`, `Wednesday`, `Thursday`, `Friday`, `Saturday`, `Sunday`.
         * 
         * @return builder
         * 
         */
        public Builder stopDay(String stopDay) {
            return stopDay(Output.of(stopDay));
        }

        /**
         * @param stopTime Stop time of the schedule in 24-hour format (e.g., `17:00`).
         * 
         * @return builder
         * 
         */
        public Builder stopTime(Output<String> stopTime) {
            $.stopTime = stopTime;
            return this;
        }

        /**
         * @param stopTime Stop time of the schedule in 24-hour format (e.g., `17:00`).
         * 
         * @return builder
         * 
         */
        public Builder stopTime(String stopTime) {
            return stopTime(Output.of(stopTime));
        }

        public ManagedInstanceStartStopScheduleScheduleArgs build() {
            if ($.startDay == null) {
                throw new MissingRequiredPropertyException("ManagedInstanceStartStopScheduleScheduleArgs", "startDay");
            }
            if ($.startTime == null) {
                throw new MissingRequiredPropertyException("ManagedInstanceStartStopScheduleScheduleArgs", "startTime");
            }
            if ($.stopDay == null) {
                throw new MissingRequiredPropertyException("ManagedInstanceStartStopScheduleScheduleArgs", "stopDay");
            }
            if ($.stopTime == null) {
                throw new MissingRequiredPropertyException("ManagedInstanceStartStopScheduleScheduleArgs", "stopTime");
            }
            return $;
        }
    }

}
