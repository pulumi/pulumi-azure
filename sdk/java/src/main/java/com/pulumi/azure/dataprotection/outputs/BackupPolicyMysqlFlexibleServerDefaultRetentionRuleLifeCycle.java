// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.dataprotection.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class BackupPolicyMysqlFlexibleServerDefaultRetentionRuleLifeCycle {
    /**
     * @return The type of data store. The only possible value is `VaultStore`. Changing this forces a new resource to be created.
     * 
     */
    private String dataStoreType;
    /**
     * @return The retention duration up to which the backups are to be retained in the data stores. It should follow `ISO 8601` duration format. Changing this forces a new resource to be created.
     * 
     */
    private String duration;

    private BackupPolicyMysqlFlexibleServerDefaultRetentionRuleLifeCycle() {}
    /**
     * @return The type of data store. The only possible value is `VaultStore`. Changing this forces a new resource to be created.
     * 
     */
    public String dataStoreType() {
        return this.dataStoreType;
    }
    /**
     * @return The retention duration up to which the backups are to be retained in the data stores. It should follow `ISO 8601` duration format. Changing this forces a new resource to be created.
     * 
     */
    public String duration() {
        return this.duration;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(BackupPolicyMysqlFlexibleServerDefaultRetentionRuleLifeCycle defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String dataStoreType;
        private String duration;
        public Builder() {}
        public Builder(BackupPolicyMysqlFlexibleServerDefaultRetentionRuleLifeCycle defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.dataStoreType = defaults.dataStoreType;
    	      this.duration = defaults.duration;
        }

        @CustomType.Setter
        public Builder dataStoreType(String dataStoreType) {
            if (dataStoreType == null) {
              throw new MissingRequiredPropertyException("BackupPolicyMysqlFlexibleServerDefaultRetentionRuleLifeCycle", "dataStoreType");
            }
            this.dataStoreType = dataStoreType;
            return this;
        }
        @CustomType.Setter
        public Builder duration(String duration) {
            if (duration == null) {
              throw new MissingRequiredPropertyException("BackupPolicyMysqlFlexibleServerDefaultRetentionRuleLifeCycle", "duration");
            }
            this.duration = duration;
            return this;
        }
        public BackupPolicyMysqlFlexibleServerDefaultRetentionRuleLifeCycle build() {
            final var _resultValue = new BackupPolicyMysqlFlexibleServerDefaultRetentionRuleLifeCycle();
            _resultValue.dataStoreType = dataStoreType;
            _resultValue.duration = duration;
            return _resultValue;
        }
    }
}
