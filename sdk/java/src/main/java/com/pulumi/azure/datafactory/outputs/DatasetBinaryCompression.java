// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.datafactory.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class DatasetBinaryCompression {
    /**
     * @return The level of compression. Possible values are `Fastest` and `Optimal`.
     * 
     */
    private @Nullable String level;
    /**
     * @return The type of compression used during transport. Possible values are `BZip2`, `Deflate`, `GZip`, `Tar`, `TarGZip` and `ZipDeflate`.
     * 
     */
    private String type;

    private DatasetBinaryCompression() {}
    /**
     * @return The level of compression. Possible values are `Fastest` and `Optimal`.
     * 
     */
    public Optional<String> level() {
        return Optional.ofNullable(this.level);
    }
    /**
     * @return The type of compression used during transport. Possible values are `BZip2`, `Deflate`, `GZip`, `Tar`, `TarGZip` and `ZipDeflate`.
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DatasetBinaryCompression defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String level;
        private String type;
        public Builder() {}
        public Builder(DatasetBinaryCompression defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.level = defaults.level;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder level(@Nullable String level) {

            this.level = level;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            if (type == null) {
              throw new MissingRequiredPropertyException("DatasetBinaryCompression", "type");
            }
            this.type = type;
            return this;
        }
        public DatasetBinaryCompression build() {
            final var _resultValue = new DatasetBinaryCompression();
            _resultValue.level = level;
            _resultValue.type = type;
            return _resultValue;
        }
    }
}
