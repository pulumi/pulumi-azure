// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.fluidrelay.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class ServerCustomerManagedKeyArgs extends com.pulumi.resources.ResourceArgs {

    public static final ServerCustomerManagedKeyArgs Empty = new ServerCustomerManagedKeyArgs();

    /**
     * The Key Vault Key Id that will be used to encrypt the Fluid Relay Server.
     * 
     */
    @Import(name="keyVaultKeyId", required=true)
    private Output<String> keyVaultKeyId;

    /**
     * @return The Key Vault Key Id that will be used to encrypt the Fluid Relay Server.
     * 
     */
    public Output<String> keyVaultKeyId() {
        return this.keyVaultKeyId;
    }

    /**
     * The User Assigned Managed Identity ID to be used for accessing the Customer Managed Key for encryption.
     * 
     */
    @Import(name="userAssignedIdentityId", required=true)
    private Output<String> userAssignedIdentityId;

    /**
     * @return The User Assigned Managed Identity ID to be used for accessing the Customer Managed Key for encryption.
     * 
     */
    public Output<String> userAssignedIdentityId() {
        return this.userAssignedIdentityId;
    }

    private ServerCustomerManagedKeyArgs() {}

    private ServerCustomerManagedKeyArgs(ServerCustomerManagedKeyArgs $) {
        this.keyVaultKeyId = $.keyVaultKeyId;
        this.userAssignedIdentityId = $.userAssignedIdentityId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ServerCustomerManagedKeyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ServerCustomerManagedKeyArgs $;

        public Builder() {
            $ = new ServerCustomerManagedKeyArgs();
        }

        public Builder(ServerCustomerManagedKeyArgs defaults) {
            $ = new ServerCustomerManagedKeyArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param keyVaultKeyId The Key Vault Key Id that will be used to encrypt the Fluid Relay Server.
         * 
         * @return builder
         * 
         */
        public Builder keyVaultKeyId(Output<String> keyVaultKeyId) {
            $.keyVaultKeyId = keyVaultKeyId;
            return this;
        }

        /**
         * @param keyVaultKeyId The Key Vault Key Id that will be used to encrypt the Fluid Relay Server.
         * 
         * @return builder
         * 
         */
        public Builder keyVaultKeyId(String keyVaultKeyId) {
            return keyVaultKeyId(Output.of(keyVaultKeyId));
        }

        /**
         * @param userAssignedIdentityId The User Assigned Managed Identity ID to be used for accessing the Customer Managed Key for encryption.
         * 
         * @return builder
         * 
         */
        public Builder userAssignedIdentityId(Output<String> userAssignedIdentityId) {
            $.userAssignedIdentityId = userAssignedIdentityId;
            return this;
        }

        /**
         * @param userAssignedIdentityId The User Assigned Managed Identity ID to be used for accessing the Customer Managed Key for encryption.
         * 
         * @return builder
         * 
         */
        public Builder userAssignedIdentityId(String userAssignedIdentityId) {
            return userAssignedIdentityId(Output.of(userAssignedIdentityId));
        }

        public ServerCustomerManagedKeyArgs build() {
            if ($.keyVaultKeyId == null) {
                throw new MissingRequiredPropertyException("ServerCustomerManagedKeyArgs", "keyVaultKeyId");
            }
            if ($.userAssignedIdentityId == null) {
                throw new MissingRequiredPropertyException("ServerCustomerManagedKeyArgs", "userAssignedIdentityId");
            }
            return $;
        }
    }

}
