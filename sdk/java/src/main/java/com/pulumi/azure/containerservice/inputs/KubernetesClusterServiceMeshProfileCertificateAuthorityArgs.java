// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.containerservice.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class KubernetesClusterServiceMeshProfileCertificateAuthorityArgs extends com.pulumi.resources.ResourceArgs {

    public static final KubernetesClusterServiceMeshProfileCertificateAuthorityArgs Empty = new KubernetesClusterServiceMeshProfileCertificateAuthorityArgs();

    /**
     * The certificate chain object name in Azure Key Vault.
     * 
     */
    @Import(name="certChainObjectName", required=true)
    private Output<String> certChainObjectName;

    /**
     * @return The certificate chain object name in Azure Key Vault.
     * 
     */
    public Output<String> certChainObjectName() {
        return this.certChainObjectName;
    }

    /**
     * The intermediate certificate object name in Azure Key Vault.
     * 
     */
    @Import(name="certObjectName", required=true)
    private Output<String> certObjectName;

    /**
     * @return The intermediate certificate object name in Azure Key Vault.
     * 
     */
    public Output<String> certObjectName() {
        return this.certObjectName;
    }

    /**
     * The intermediate certificate private key object name in Azure Key Vault.
     * 
     * &gt; **Note:** For more information on [Istio-based service mesh add-on with plug-in CA certificates and how to generate these certificates](https://learn.microsoft.com/en-us/azure/aks/istio-plugin-ca),
     * 
     */
    @Import(name="keyObjectName", required=true)
    private Output<String> keyObjectName;

    /**
     * @return The intermediate certificate private key object name in Azure Key Vault.
     * 
     * &gt; **Note:** For more information on [Istio-based service mesh add-on with plug-in CA certificates and how to generate these certificates](https://learn.microsoft.com/en-us/azure/aks/istio-plugin-ca),
     * 
     */
    public Output<String> keyObjectName() {
        return this.keyObjectName;
    }

    /**
     * The resource ID of the Key Vault.
     * 
     */
    @Import(name="keyVaultId", required=true)
    private Output<String> keyVaultId;

    /**
     * @return The resource ID of the Key Vault.
     * 
     */
    public Output<String> keyVaultId() {
        return this.keyVaultId;
    }

    /**
     * The root certificate object name in Azure Key Vault.
     * 
     */
    @Import(name="rootCertObjectName", required=true)
    private Output<String> rootCertObjectName;

    /**
     * @return The root certificate object name in Azure Key Vault.
     * 
     */
    public Output<String> rootCertObjectName() {
        return this.rootCertObjectName;
    }

    private KubernetesClusterServiceMeshProfileCertificateAuthorityArgs() {}

    private KubernetesClusterServiceMeshProfileCertificateAuthorityArgs(KubernetesClusterServiceMeshProfileCertificateAuthorityArgs $) {
        this.certChainObjectName = $.certChainObjectName;
        this.certObjectName = $.certObjectName;
        this.keyObjectName = $.keyObjectName;
        this.keyVaultId = $.keyVaultId;
        this.rootCertObjectName = $.rootCertObjectName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(KubernetesClusterServiceMeshProfileCertificateAuthorityArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private KubernetesClusterServiceMeshProfileCertificateAuthorityArgs $;

        public Builder() {
            $ = new KubernetesClusterServiceMeshProfileCertificateAuthorityArgs();
        }

        public Builder(KubernetesClusterServiceMeshProfileCertificateAuthorityArgs defaults) {
            $ = new KubernetesClusterServiceMeshProfileCertificateAuthorityArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param certChainObjectName The certificate chain object name in Azure Key Vault.
         * 
         * @return builder
         * 
         */
        public Builder certChainObjectName(Output<String> certChainObjectName) {
            $.certChainObjectName = certChainObjectName;
            return this;
        }

        /**
         * @param certChainObjectName The certificate chain object name in Azure Key Vault.
         * 
         * @return builder
         * 
         */
        public Builder certChainObjectName(String certChainObjectName) {
            return certChainObjectName(Output.of(certChainObjectName));
        }

        /**
         * @param certObjectName The intermediate certificate object name in Azure Key Vault.
         * 
         * @return builder
         * 
         */
        public Builder certObjectName(Output<String> certObjectName) {
            $.certObjectName = certObjectName;
            return this;
        }

        /**
         * @param certObjectName The intermediate certificate object name in Azure Key Vault.
         * 
         * @return builder
         * 
         */
        public Builder certObjectName(String certObjectName) {
            return certObjectName(Output.of(certObjectName));
        }

        /**
         * @param keyObjectName The intermediate certificate private key object name in Azure Key Vault.
         * 
         * &gt; **Note:** For more information on [Istio-based service mesh add-on with plug-in CA certificates and how to generate these certificates](https://learn.microsoft.com/en-us/azure/aks/istio-plugin-ca),
         * 
         * @return builder
         * 
         */
        public Builder keyObjectName(Output<String> keyObjectName) {
            $.keyObjectName = keyObjectName;
            return this;
        }

        /**
         * @param keyObjectName The intermediate certificate private key object name in Azure Key Vault.
         * 
         * &gt; **Note:** For more information on [Istio-based service mesh add-on with plug-in CA certificates and how to generate these certificates](https://learn.microsoft.com/en-us/azure/aks/istio-plugin-ca),
         * 
         * @return builder
         * 
         */
        public Builder keyObjectName(String keyObjectName) {
            return keyObjectName(Output.of(keyObjectName));
        }

        /**
         * @param keyVaultId The resource ID of the Key Vault.
         * 
         * @return builder
         * 
         */
        public Builder keyVaultId(Output<String> keyVaultId) {
            $.keyVaultId = keyVaultId;
            return this;
        }

        /**
         * @param keyVaultId The resource ID of the Key Vault.
         * 
         * @return builder
         * 
         */
        public Builder keyVaultId(String keyVaultId) {
            return keyVaultId(Output.of(keyVaultId));
        }

        /**
         * @param rootCertObjectName The root certificate object name in Azure Key Vault.
         * 
         * @return builder
         * 
         */
        public Builder rootCertObjectName(Output<String> rootCertObjectName) {
            $.rootCertObjectName = rootCertObjectName;
            return this;
        }

        /**
         * @param rootCertObjectName The root certificate object name in Azure Key Vault.
         * 
         * @return builder
         * 
         */
        public Builder rootCertObjectName(String rootCertObjectName) {
            return rootCertObjectName(Output.of(rootCertObjectName));
        }

        public KubernetesClusterServiceMeshProfileCertificateAuthorityArgs build() {
            if ($.certChainObjectName == null) {
                throw new MissingRequiredPropertyException("KubernetesClusterServiceMeshProfileCertificateAuthorityArgs", "certChainObjectName");
            }
            if ($.certObjectName == null) {
                throw new MissingRequiredPropertyException("KubernetesClusterServiceMeshProfileCertificateAuthorityArgs", "certObjectName");
            }
            if ($.keyObjectName == null) {
                throw new MissingRequiredPropertyException("KubernetesClusterServiceMeshProfileCertificateAuthorityArgs", "keyObjectName");
            }
            if ($.keyVaultId == null) {
                throw new MissingRequiredPropertyException("KubernetesClusterServiceMeshProfileCertificateAuthorityArgs", "keyVaultId");
            }
            if ($.rootCertObjectName == null) {
                throw new MissingRequiredPropertyException("KubernetesClusterServiceMeshProfileCertificateAuthorityArgs", "rootCertObjectName");
            }
            return $;
        }
    }

}
