// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.healthcare.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetServiceAuthenticationConfiguration {
    /**
     * @return The intended audience to receive authentication tokens for the service.
     * 
     */
    private String audience;
    /**
     * @return The Azure Active Directory (tenant) that serves as the authentication authority to access the service.
     * 
     */
    private String authority;
    /**
     * @return Is the &#39;SMART on FHIR&#39; option for mobile and web implementations enabled?
     * 
     */
    private Boolean smartProxyEnabled;

    private GetServiceAuthenticationConfiguration() {}
    /**
     * @return The intended audience to receive authentication tokens for the service.
     * 
     */
    public String audience() {
        return this.audience;
    }
    /**
     * @return The Azure Active Directory (tenant) that serves as the authentication authority to access the service.
     * 
     */
    public String authority() {
        return this.authority;
    }
    /**
     * @return Is the &#39;SMART on FHIR&#39; option for mobile and web implementations enabled?
     * 
     */
    public Boolean smartProxyEnabled() {
        return this.smartProxyEnabled;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetServiceAuthenticationConfiguration defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String audience;
        private String authority;
        private Boolean smartProxyEnabled;
        public Builder() {}
        public Builder(GetServiceAuthenticationConfiguration defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.audience = defaults.audience;
    	      this.authority = defaults.authority;
    	      this.smartProxyEnabled = defaults.smartProxyEnabled;
        }

        @CustomType.Setter
        public Builder audience(String audience) {
            if (audience == null) {
              throw new MissingRequiredPropertyException("GetServiceAuthenticationConfiguration", "audience");
            }
            this.audience = audience;
            return this;
        }
        @CustomType.Setter
        public Builder authority(String authority) {
            if (authority == null) {
              throw new MissingRequiredPropertyException("GetServiceAuthenticationConfiguration", "authority");
            }
            this.authority = authority;
            return this;
        }
        @CustomType.Setter
        public Builder smartProxyEnabled(Boolean smartProxyEnabled) {
            if (smartProxyEnabled == null) {
              throw new MissingRequiredPropertyException("GetServiceAuthenticationConfiguration", "smartProxyEnabled");
            }
            this.smartProxyEnabled = smartProxyEnabled;
            return this;
        }
        public GetServiceAuthenticationConfiguration build() {
            final var _resultValue = new GetServiceAuthenticationConfiguration();
            _resultValue.audience = audience;
            _resultValue.authority = authority;
            _resultValue.smartProxyEnabled = smartProxyEnabled;
            return _resultValue;
        }
    }
}
