// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.appservice;

import com.pulumi.azure.Utilities;
import com.pulumi.azure.appservice.AppFlexConsumptionArgs;
import com.pulumi.azure.appservice.inputs.AppFlexConsumptionState;
import com.pulumi.azure.appservice.outputs.AppFlexConsumptionAlwaysReady;
import com.pulumi.azure.appservice.outputs.AppFlexConsumptionAuthSettings;
import com.pulumi.azure.appservice.outputs.AppFlexConsumptionAuthSettingsV2;
import com.pulumi.azure.appservice.outputs.AppFlexConsumptionConnectionString;
import com.pulumi.azure.appservice.outputs.AppFlexConsumptionIdentity;
import com.pulumi.azure.appservice.outputs.AppFlexConsumptionSiteConfig;
import com.pulumi.azure.appservice.outputs.AppFlexConsumptionSiteCredential;
import com.pulumi.azure.appservice.outputs.AppFlexConsumptionStickySettings;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Manages a Function App Running on a Flex Consumption Plan.
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.azure.core.ResourceGroup;
 * import com.pulumi.azure.core.ResourceGroupArgs;
 * import com.pulumi.azure.storage.Account;
 * import com.pulumi.azure.storage.AccountArgs;
 * import com.pulumi.azure.storage.Container;
 * import com.pulumi.azure.storage.ContainerArgs;
 * import com.pulumi.azure.appservice.ServicePlan;
 * import com.pulumi.azure.appservice.ServicePlanArgs;
 * import com.pulumi.azure.appservice.AppFlexConsumption;
 * import com.pulumi.azure.appservice.AppFlexConsumptionArgs;
 * import com.pulumi.azure.appservice.inputs.AppFlexConsumptionSiteConfigArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new ResourceGroup("example", ResourceGroupArgs.builder()
 *             .name("example-resources")
 *             .location("West Europe")
 *             .build());
 * 
 *         var exampleAccount = new Account("exampleAccount", AccountArgs.builder()
 *             .name("examplelinuxfunctionappsa")
 *             .resourceGroupName(example.name())
 *             .location(example.location())
 *             .accountTier("Standard")
 *             .accountReplicationType("LRS")
 *             .build());
 * 
 *         var exampleContainer = new Container("exampleContainer", ContainerArgs.builder()
 *             .name("example-flexcontainer")
 *             .storageAccountId(exampleAccount.id())
 *             .containerAccessType("private")
 *             .build());
 * 
 *         var exampleServicePlan = new ServicePlan("exampleServicePlan", ServicePlanArgs.builder()
 *             .name("example-app-service-plan")
 *             .resourceGroupName(example.name())
 *             .location(example.location())
 *             .skuName("FC1")
 *             .osType("Linux")
 *             .build());
 * 
 *         var exampleAppFlexConsumption = new AppFlexConsumption("exampleAppFlexConsumption", AppFlexConsumptionArgs.builder()
 *             .name("example-linux-function-app")
 *             .resourceGroupName(example.name())
 *             .location(example.location())
 *             .servicePlanId(exampleServicePlan.id())
 *             .storageContainerType("blobContainer")
 *             .storageContainerEndpoint(Output.tuple(exampleAccount.primaryBlobEndpoint(), exampleContainer.name()).applyValue(values -> {
 *                 var primaryBlobEndpoint = values.t1;
 *                 var name = values.t2;
 *                 return String.format("%s%s", primaryBlobEndpoint,name);
 *             }))
 *             .storageAuthenticationType("StorageAccountConnectionString")
 *             .storageAccessKey(exampleAccount.primaryAccessKey())
 *             .runtimeName("node")
 *             .runtimeVersion("20")
 *             .maximumInstanceCount(50)
 *             .instanceMemoryInMb(2048)
 *             .siteConfig(AppFlexConsumptionSiteConfigArgs.builder()
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## API Providers
 * 
 * &lt;!-- This section is generated, changes will be overwritten --&gt;
 * This resource uses the following Azure API Providers:
 * 
 * * `Microsoft.Web`: 2023-12-01, 2023-01-01
 * 
 * ## Import
 * 
 * The Function Apps can be imported using the `resource id`, e.g.
 * 
 * ```sh
 * $ pulumi import azure:appservice/appFlexConsumption:AppFlexConsumption example /subscriptions/12345678-1234-9876-4563-123456789012/resourceGroups/resGroup1/providers/Microsoft.Web/sites/site1
 * ```
 * 
 */
@ResourceType(type="azure:appservice/appFlexConsumption:AppFlexConsumption")
public class AppFlexConsumption extends com.pulumi.resources.CustomResource {
    /**
     * One or more `always_ready` blocks as defined below.
     * 
     */
    @Export(name="alwaysReadies", refs={List.class,AppFlexConsumptionAlwaysReady.class}, tree="[0,1]")
    private Output</* @Nullable */ List<AppFlexConsumptionAlwaysReady>> alwaysReadies;

    /**
     * @return One or more `always_ready` blocks as defined below.
     * 
     */
    public Output<Optional<List<AppFlexConsumptionAlwaysReady>>> alwaysReadies() {
        return Codegen.optional(this.alwaysReadies);
    }
    /**
     * A map of key-value pairs for [App
     * Settings](https://docs.microsoft.com/en-us/azure/azure-functions/functions-app-settings) and custom values.
     * 
     */
    @Export(name="appSettings", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output</* @Nullable */ Map<String,String>> appSettings;

    /**
     * @return A map of key-value pairs for [App
     * Settings](https://docs.microsoft.com/en-us/azure/azure-functions/functions-app-settings) and custom values.
     * 
     */
    public Output<Optional<Map<String,String>>> appSettings() {
        return Codegen.optional(this.appSettings);
    }
    /**
     * A `auth_settings` block as defined below.
     * 
     */
    @Export(name="authSettings", refs={AppFlexConsumptionAuthSettings.class}, tree="[0]")
    private Output</* @Nullable */ AppFlexConsumptionAuthSettings> authSettings;

    /**
     * @return A `auth_settings` block as defined below.
     * 
     */
    public Output<Optional<AppFlexConsumptionAuthSettings>> authSettings() {
        return Codegen.optional(this.authSettings);
    }
    /**
     * An `auth_settings_v2` block as defined below.
     * 
     */
    @Export(name="authSettingsV2", refs={AppFlexConsumptionAuthSettingsV2.class}, tree="[0]")
    private Output</* @Nullable */ AppFlexConsumptionAuthSettingsV2> authSettingsV2;

    /**
     * @return An `auth_settings_v2` block as defined below.
     * 
     */
    public Output<Optional<AppFlexConsumptionAuthSettingsV2>> authSettingsV2() {
        return Codegen.optional(this.authSettingsV2);
    }
    /**
     * Should the function app use Client Certificates.
     * 
     */
    @Export(name="clientCertificateEnabled", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> clientCertificateEnabled;

    /**
     * @return Should the function app use Client Certificates.
     * 
     */
    public Output<Optional<Boolean>> clientCertificateEnabled() {
        return Codegen.optional(this.clientCertificateEnabled);
    }
    /**
     * Paths to exclude when using client certificates, separated by ;
     * 
     */
    @Export(name="clientCertificateExclusionPaths", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> clientCertificateExclusionPaths;

    /**
     * @return Paths to exclude when using client certificates, separated by ;
     * 
     */
    public Output<Optional<String>> clientCertificateExclusionPaths() {
        return Codegen.optional(this.clientCertificateExclusionPaths);
    }
    /**
     * The mode of the Function App&#39;s client certificates requirement for incoming requests. Possible values are `Required`, `Optional`, and `OptionalInteractiveUser`. Defaults to `Optional`.
     * 
     */
    @Export(name="clientCertificateMode", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> clientCertificateMode;

    /**
     * @return The mode of the Function App&#39;s client certificates requirement for incoming requests. Possible values are `Required`, `Optional`, and `OptionalInteractiveUser`. Defaults to `Optional`.
     * 
     */
    public Output<Optional<String>> clientCertificateMode() {
        return Codegen.optional(this.clientCertificateMode);
    }
    /**
     * One or more `connection_string` blocks as defined below.
     * 
     */
    @Export(name="connectionStrings", refs={List.class,AppFlexConsumptionConnectionString.class}, tree="[0,1]")
    private Output</* @Nullable */ List<AppFlexConsumptionConnectionString>> connectionStrings;

    /**
     * @return One or more `connection_string` blocks as defined below.
     * 
     */
    public Output<Optional<List<AppFlexConsumptionConnectionString>>> connectionStrings() {
        return Codegen.optional(this.connectionStrings);
    }
    /**
     * The identifier used by App Service to perform domain ownership verification via DNS TXT record.
     * 
     */
    @Export(name="customDomainVerificationId", refs={String.class}, tree="[0]")
    private Output<String> customDomainVerificationId;

    /**
     * @return The identifier used by App Service to perform domain ownership verification via DNS TXT record.
     * 
     */
    public Output<String> customDomainVerificationId() {
        return this.customDomainVerificationId;
    }
    /**
     * The default hostname of the Linux Function App.
     * 
     */
    @Export(name="defaultHostname", refs={String.class}, tree="[0]")
    private Output<String> defaultHostname;

    /**
     * @return The default hostname of the Linux Function App.
     * 
     */
    public Output<String> defaultHostname() {
        return this.defaultHostname;
    }
    /**
     * Is the Function App enabled? Defaults to `true`.
     * 
     */
    @Export(name="enabled", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> enabled;

    /**
     * @return Is the Function App enabled? Defaults to `true`.
     * 
     */
    public Output<Optional<Boolean>> enabled() {
        return Codegen.optional(this.enabled);
    }
    /**
     * The ID of the App Service Environment used by Function App.
     * 
     */
    @Export(name="hostingEnvironmentId", refs={String.class}, tree="[0]")
    private Output<String> hostingEnvironmentId;

    /**
     * @return The ID of the App Service Environment used by Function App.
     * 
     */
    public Output<String> hostingEnvironmentId() {
        return this.hostingEnvironmentId;
    }
    /**
     * A `identity` block as defined below.
     * 
     */
    @Export(name="identity", refs={AppFlexConsumptionIdentity.class}, tree="[0]")
    private Output</* @Nullable */ AppFlexConsumptionIdentity> identity;

    /**
     * @return A `identity` block as defined below.
     * 
     */
    public Output<Optional<AppFlexConsumptionIdentity>> identity() {
        return Codegen.optional(this.identity);
    }
    /**
     * The memory size of the instances on which your app runs. The [currently supported values](https://learn.microsoft.com/en-us/azure/azure-functions/flex-consumption-plan#instance-memory) are `2048` or `4096`.
     * 
     */
    @Export(name="instanceMemoryInMb", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> instanceMemoryInMb;

    /**
     * @return The memory size of the instances on which your app runs. The [currently supported values](https://learn.microsoft.com/en-us/azure/azure-functions/flex-consumption-plan#instance-memory) are `2048` or `4096`.
     * 
     */
    public Output<Optional<Integer>> instanceMemoryInMb() {
        return Codegen.optional(this.instanceMemoryInMb);
    }
    /**
     * The Kind value for this Linux Function App.
     * 
     */
    @Export(name="kind", refs={String.class}, tree="[0]")
    private Output<String> kind;

    /**
     * @return The Kind value for this Linux Function App.
     * 
     */
    public Output<String> kind() {
        return this.kind;
    }
    /**
     * The Azure Region where the Function App should exist. Changing this forces a new Function App to be created.
     * 
     */
    @Export(name="location", refs={String.class}, tree="[0]")
    private Output<String> location;

    /**
     * @return The Azure Region where the Function App should exist. Changing this forces a new Function App to be created.
     * 
     */
    public Output<String> location() {
        return this.location;
    }
    /**
     * The number of workers this function app can scale out to.
     * 
     */
    @Export(name="maximumInstanceCount", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> maximumInstanceCount;

    /**
     * @return The number of workers this function app can scale out to.
     * 
     */
    public Output<Optional<Integer>> maximumInstanceCount() {
        return Codegen.optional(this.maximumInstanceCount);
    }
    /**
     * The name which should be used for this Function App. Changing this forces a new Function App to be created. Limit the function name to 32 characters to avoid naming collisions. For more information about [Function App naming rule](https://docs.microsoft.com/en-us/azure/azure-resource-manager/management/resource-name-rules#microsoftweb) and [Host ID Collisions](https://github.com/Azure/azure-functions-host/wiki/Host-IDs#host-id-collisions)
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The name which should be used for this Function App. Changing this forces a new Function App to be created. Limit the function name to 32 characters to avoid naming collisions. For more information about [Function App naming rule](https://docs.microsoft.com/en-us/azure/azure-resource-manager/management/resource-name-rules#microsoftweb) and [Host ID Collisions](https://github.com/Azure/azure-functions-host/wiki/Host-IDs#host-id-collisions)
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * A list of outbound IP addresses. For example `[&#34;52.23.25.3&#34;, &#34;52.143.43.12&#34;]`
     * 
     */
    @Export(name="outboundIpAddressLists", refs={List.class,String.class}, tree="[0,1]")
    private Output<List<String>> outboundIpAddressLists;

    /**
     * @return A list of outbound IP addresses. For example `[&#34;52.23.25.3&#34;, &#34;52.143.43.12&#34;]`
     * 
     */
    public Output<List<String>> outboundIpAddressLists() {
        return this.outboundIpAddressLists;
    }
    /**
     * A comma separated list of outbound IP addresses as a string. For example `52.23.25.3,52.143.43.12`.
     * 
     */
    @Export(name="outboundIpAddresses", refs={String.class}, tree="[0]")
    private Output<String> outboundIpAddresses;

    /**
     * @return A comma separated list of outbound IP addresses as a string. For example `52.23.25.3,52.143.43.12`.
     * 
     */
    public Output<String> outboundIpAddresses() {
        return this.outboundIpAddresses;
    }
    /**
     * A list of possible outbound IP addresses, not all of which are necessarily in use. This is a superset of `outbound_ip_address_list`. For example `[&#34;52.23.25.3&#34;, &#34;52.143.43.12&#34;]`.
     * 
     */
    @Export(name="possibleOutboundIpAddressLists", refs={List.class,String.class}, tree="[0,1]")
    private Output<List<String>> possibleOutboundIpAddressLists;

    /**
     * @return A list of possible outbound IP addresses, not all of which are necessarily in use. This is a superset of `outbound_ip_address_list`. For example `[&#34;52.23.25.3&#34;, &#34;52.143.43.12&#34;]`.
     * 
     */
    public Output<List<String>> possibleOutboundIpAddressLists() {
        return this.possibleOutboundIpAddressLists;
    }
    /**
     * A comma separated list of possible outbound IP addresses as a string. For example `52.23.25.3,52.143.43.12,52.143.43.17`. This is a superset of `outbound_ip_addresses`.
     * 
     */
    @Export(name="possibleOutboundIpAddresses", refs={String.class}, tree="[0]")
    private Output<String> possibleOutboundIpAddresses;

    /**
     * @return A comma separated list of possible outbound IP addresses as a string. For example `52.23.25.3,52.143.43.12,52.143.43.17`. This is a superset of `outbound_ip_addresses`.
     * 
     */
    public Output<String> possibleOutboundIpAddresses() {
        return this.possibleOutboundIpAddresses;
    }
    /**
     * Should public network access be enabled for the Function App. Defaults to `true`.
     * 
     */
    @Export(name="publicNetworkAccessEnabled", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> publicNetworkAccessEnabled;

    /**
     * @return Should public network access be enabled for the Function App. Defaults to `true`.
     * 
     */
    public Output<Optional<Boolean>> publicNetworkAccessEnabled() {
        return Codegen.optional(this.publicNetworkAccessEnabled);
    }
    /**
     * The name of the Resource Group where the Function App should exist. Changing this forces a new Linux Function App to be created.
     * 
     */
    @Export(name="resourceGroupName", refs={String.class}, tree="[0]")
    private Output<String> resourceGroupName;

    /**
     * @return The name of the Resource Group where the Function App should exist. Changing this forces a new Linux Function App to be created.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }
    /**
     * The Runtime of the Linux Function App. Possible values are `node`, `dotnet-isolated`, `powershell`, `python`, `java` and `custom`.
     * 
     */
    @Export(name="runtimeName", refs={String.class}, tree="[0]")
    private Output<String> runtimeName;

    /**
     * @return The Runtime of the Linux Function App. Possible values are `node`, `dotnet-isolated`, `powershell`, `python`, `java` and `custom`.
     * 
     */
    public Output<String> runtimeName() {
        return this.runtimeName;
    }
    /**
     * The Runtime version of the Linux Function App. The values are diff from different runtime version. The supported values are `8.0`, `9.0` for `dotnet-isolated`, `20` for `node`, `3.10`, `3.11` for `python`, `11`, `17` for `java`, `7.4` for `powershell`.
     * 
     */
    @Export(name="runtimeVersion", refs={String.class}, tree="[0]")
    private Output<String> runtimeVersion;

    /**
     * @return The Runtime version of the Linux Function App. The values are diff from different runtime version. The supported values are `8.0`, `9.0` for `dotnet-isolated`, `20` for `node`, `3.10`, `3.11` for `python`, `11`, `17` for `java`, `7.4` for `powershell`.
     * 
     */
    public Output<String> runtimeVersion() {
        return this.runtimeVersion;
    }
    /**
     * The ID of the App Service Plan within which to create this Function App. Changing this forces a new Linux Function App to be created.
     * 
     */
    @Export(name="servicePlanId", refs={String.class}, tree="[0]")
    private Output<String> servicePlanId;

    /**
     * @return The ID of the App Service Plan within which to create this Function App. Changing this forces a new Linux Function App to be created.
     * 
     */
    public Output<String> servicePlanId() {
        return this.servicePlanId;
    }
    /**
     * A `site_config` block as defined below.
     * 
     */
    @Export(name="siteConfig", refs={AppFlexConsumptionSiteConfig.class}, tree="[0]")
    private Output<AppFlexConsumptionSiteConfig> siteConfig;

    /**
     * @return A `site_config` block as defined below.
     * 
     */
    public Output<AppFlexConsumptionSiteConfig> siteConfig() {
        return this.siteConfig;
    }
    /**
     * A `site_credential` block as defined below.
     * 
     */
    @Export(name="siteCredentials", refs={List.class,AppFlexConsumptionSiteCredential.class}, tree="[0,1]")
    private Output<List<AppFlexConsumptionSiteCredential>> siteCredentials;

    /**
     * @return A `site_credential` block as defined below.
     * 
     */
    public Output<List<AppFlexConsumptionSiteCredential>> siteCredentials() {
        return this.siteCredentials;
    }
    /**
     * A `sticky_settings` block as defined below.
     * 
     */
    @Export(name="stickySettings", refs={AppFlexConsumptionStickySettings.class}, tree="[0]")
    private Output</* @Nullable */ AppFlexConsumptionStickySettings> stickySettings;

    /**
     * @return A `sticky_settings` block as defined below.
     * 
     */
    public Output<Optional<AppFlexConsumptionStickySettings>> stickySettings() {
        return Codegen.optional(this.stickySettings);
    }
    /**
     * The access key which will be used to access the backend storage account for the Function App.
     * 
     * &gt; **Note:** The `storage_access_key` must be specified when `storage_authentication_type` is set to `StorageAccountConnectionString`.
     * 
     */
    @Export(name="storageAccessKey", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> storageAccessKey;

    /**
     * @return The access key which will be used to access the backend storage account for the Function App.
     * 
     * &gt; **Note:** The `storage_access_key` must be specified when `storage_authentication_type` is set to `StorageAccountConnectionString`.
     * 
     */
    public Output<Optional<String>> storageAccessKey() {
        return Codegen.optional(this.storageAccessKey);
    }
    /**
     * The authentication type which will be used to access the backend storage account for the Function App. Possible values are `StorageAccountConnectionString`, `SystemAssignedIdentity`, and `UserAssignedIdentity`.
     * 
     */
    @Export(name="storageAuthenticationType", refs={String.class}, tree="[0]")
    private Output<String> storageAuthenticationType;

    /**
     * @return The authentication type which will be used to access the backend storage account for the Function App. Possible values are `StorageAccountConnectionString`, `SystemAssignedIdentity`, and `UserAssignedIdentity`.
     * 
     */
    public Output<String> storageAuthenticationType() {
        return this.storageAuthenticationType;
    }
    /**
     * The backend storage container endpoint which will be used by this Function App.
     * 
     */
    @Export(name="storageContainerEndpoint", refs={String.class}, tree="[0]")
    private Output<String> storageContainerEndpoint;

    /**
     * @return The backend storage container endpoint which will be used by this Function App.
     * 
     */
    public Output<String> storageContainerEndpoint() {
        return this.storageContainerEndpoint;
    }
    /**
     * The storage container type used for the Function App. The current supported type is `blobContainer`.
     * 
     */
    @Export(name="storageContainerType", refs={String.class}, tree="[0]")
    private Output<String> storageContainerType;

    /**
     * @return The storage container type used for the Function App. The current supported type is `blobContainer`.
     * 
     */
    public Output<String> storageContainerType() {
        return this.storageContainerType;
    }
    /**
     * The user assigned Managed Identity to access the storage account. Conflicts with `storage_access_key`.
     * 
     * &gt; **Note:** The `storage_user_assigned_identity_id` must be specified when `storage_authentication_type` is set to `UserAssignedIdentity`.
     * 
     */
    @Export(name="storageUserAssignedIdentityId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> storageUserAssignedIdentityId;

    /**
     * @return The user assigned Managed Identity to access the storage account. Conflicts with `storage_access_key`.
     * 
     * &gt; **Note:** The `storage_user_assigned_identity_id` must be specified when `storage_authentication_type` is set to `UserAssignedIdentity`.
     * 
     */
    public Output<Optional<String>> storageUserAssignedIdentityId() {
        return Codegen.optional(this.storageUserAssignedIdentityId);
    }
    /**
     * A mapping of tags which should be assigned to the Linux Function App.
     * 
     */
    @Export(name="tags", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output</* @Nullable */ Map<String,String>> tags;

    /**
     * @return A mapping of tags which should be assigned to the Linux Function App.
     * 
     */
    public Output<Optional<Map<String,String>>> tags() {
        return Codegen.optional(this.tags);
    }
    @Export(name="virtualNetworkSubnetId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> virtualNetworkSubnetId;

    public Output<Optional<String>> virtualNetworkSubnetId() {
        return Codegen.optional(this.virtualNetworkSubnetId);
    }
    /**
     * Should the default WebDeploy Basic Authentication publishing credentials enabled. Defaults to `true`.
     * 
     * &gt; **Note:** Setting this value to true will disable the ability to use `zip_deploy_file` which currently relies on the default publishing profile.
     * 
     */
    @Export(name="webdeployPublishBasicAuthenticationEnabled", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> webdeployPublishBasicAuthenticationEnabled;

    /**
     * @return Should the default WebDeploy Basic Authentication publishing credentials enabled. Defaults to `true`.
     * 
     * &gt; **Note:** Setting this value to true will disable the ability to use `zip_deploy_file` which currently relies on the default publishing profile.
     * 
     */
    public Output<Optional<Boolean>> webdeployPublishBasicAuthenticationEnabled() {
        return Codegen.optional(this.webdeployPublishBasicAuthenticationEnabled);
    }
    /**
     * The local path and filename of the Zip packaged application to deploy to this Linux Function App.
     * 
     * &gt; **Note:** Using this value requires either `WEBSITE_RUN_FROM_PACKAGE=1` or `SCM_DO_BUILD_DURING_DEPLOYMENT=true` to be set on the App in `app_settings`. Refer to the [Azure docs](https://learn.microsoft.com/en-us/azure/azure-functions/functions-deployment-technologies) for further details.
     * 
     */
    @Export(name="zipDeployFile", refs={String.class}, tree="[0]")
    private Output<String> zipDeployFile;

    /**
     * @return The local path and filename of the Zip packaged application to deploy to this Linux Function App.
     * 
     * &gt; **Note:** Using this value requires either `WEBSITE_RUN_FROM_PACKAGE=1` or `SCM_DO_BUILD_DURING_DEPLOYMENT=true` to be set on the App in `app_settings`. Refer to the [Azure docs](https://learn.microsoft.com/en-us/azure/azure-functions/functions-deployment-technologies) for further details.
     * 
     */
    public Output<String> zipDeployFile() {
        return this.zipDeployFile;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public AppFlexConsumption(java.lang.String name) {
        this(name, AppFlexConsumptionArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public AppFlexConsumption(java.lang.String name, AppFlexConsumptionArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public AppFlexConsumption(java.lang.String name, AppFlexConsumptionArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:appservice/appFlexConsumption:AppFlexConsumption", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private AppFlexConsumption(java.lang.String name, Output<java.lang.String> id, @Nullable AppFlexConsumptionState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:appservice/appFlexConsumption:AppFlexConsumption", name, state, makeResourceOptions(options, id), false);
    }

    private static AppFlexConsumptionArgs makeArgs(AppFlexConsumptionArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? AppFlexConsumptionArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .additionalSecretOutputs(List.of(
                "customDomainVerificationId",
                "siteCredentials"
            ))
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static AppFlexConsumption get(java.lang.String name, Output<java.lang.String> id, @Nullable AppFlexConsumptionState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new AppFlexConsumption(name, id, state, options);
    }
}
