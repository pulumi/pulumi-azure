// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.network;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class PublicIpArgs extends com.pulumi.resources.ResourceArgs {

    public static final PublicIpArgs Empty = new PublicIpArgs();

    /**
     * Defines the allocation method for this IP address. Possible values are `Static` or `Dynamic`.
     * 
     */
    @Import(name="allocationMethod", required=true)
    private Output<String> allocationMethod;

    /**
     * @return Defines the allocation method for this IP address. Possible values are `Static` or `Dynamic`.
     * 
     */
    public Output<String> allocationMethod() {
        return this.allocationMethod;
    }

    /**
     * Label for the Domain Name. Will be used to make up the FQDN.  If a domain name label is specified, an A DNS record is created for the public IP in the Microsoft Azure DNS system.
     * 
     */
    @Import(name="domainNameLabel")
    private @Nullable Output<String> domainNameLabel;

    /**
     * @return Label for the Domain Name. Will be used to make up the FQDN.  If a domain name label is specified, an A DNS record is created for the public IP in the Microsoft Azure DNS system.
     * 
     */
    public Optional<Output<String>> domainNameLabel() {
        return Optional.ofNullable(this.domainNameLabel);
    }

    /**
     * Specifies the Edge Zone within the Azure Region where this Public IP should exist. Changing this forces a new Public IP to be created.
     * 
     */
    @Import(name="edgeZone")
    private @Nullable Output<String> edgeZone;

    /**
     * @return Specifies the Edge Zone within the Azure Region where this Public IP should exist. Changing this forces a new Public IP to be created.
     * 
     */
    public Optional<Output<String>> edgeZone() {
        return Optional.ofNullable(this.edgeZone);
    }

    /**
     * Specifies the timeout for the TCP idle connection. The value can be set between 4 and 30 minutes.
     * 
     */
    @Import(name="idleTimeoutInMinutes")
    private @Nullable Output<Integer> idleTimeoutInMinutes;

    /**
     * @return Specifies the timeout for the TCP idle connection. The value can be set between 4 and 30 minutes.
     * 
     */
    public Optional<Output<Integer>> idleTimeoutInMinutes() {
        return Optional.ofNullable(this.idleTimeoutInMinutes);
    }

    /**
     * A mapping of IP tags to assign to the public IP.
     * 
     */
    @Import(name="ipTags")
    private @Nullable Output<Map<String,String>> ipTags;

    /**
     * @return A mapping of IP tags to assign to the public IP.
     * 
     */
    public Optional<Output<Map<String,String>>> ipTags() {
        return Optional.ofNullable(this.ipTags);
    }

    /**
     * The IP Version to use, IPv6 or IPv4.
     * 
     */
    @Import(name="ipVersion")
    private @Nullable Output<String> ipVersion;

    /**
     * @return The IP Version to use, IPv6 or IPv4.
     * 
     */
    public Optional<Output<String>> ipVersion() {
        return Optional.ofNullable(this.ipVersion);
    }

    /**
     * Specifies the supported Azure location where the Public IP should exist. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="location")
    private @Nullable Output<String> location;

    /**
     * @return Specifies the supported Azure location where the Public IP should exist. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * Specifies the name of the Public IP. Changing this forces a new Public IP to be created.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Specifies the name of the Public IP. Changing this forces a new Public IP to be created.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * If specified then public IP address allocated will be provided from the public IP prefix resource.
     * 
     */
    @Import(name="publicIpPrefixId")
    private @Nullable Output<String> publicIpPrefixId;

    /**
     * @return If specified then public IP address allocated will be provided from the public IP prefix resource.
     * 
     */
    public Optional<Output<String>> publicIpPrefixId() {
        return Optional.ofNullable(this.publicIpPrefixId);
    }

    /**
     * The name of the Resource Group where this Public IP should exist. Changing this forces a new Public IP to be created.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    /**
     * @return The name of the Resource Group where this Public IP should exist. Changing this forces a new Public IP to be created.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * A fully qualified domain name that resolves to this public IP address. If the reverseFqdn is specified, then a PTR DNS record is created pointing from the IP address in the in-addr.arpa domain to the reverse FQDN.
     * 
     */
    @Import(name="reverseFqdn")
    private @Nullable Output<String> reverseFqdn;

    /**
     * @return A fully qualified domain name that resolves to this public IP address. If the reverseFqdn is specified, then a PTR DNS record is created pointing from the IP address in the in-addr.arpa domain to the reverse FQDN.
     * 
     */
    public Optional<Output<String>> reverseFqdn() {
        return Optional.ofNullable(this.reverseFqdn);
    }

    /**
     * The SKU of the Public IP. Accepted values are `Basic` and `Standard`. Defaults to `Basic`.
     * 
     */
    @Import(name="sku")
    private @Nullable Output<String> sku;

    /**
     * @return The SKU of the Public IP. Accepted values are `Basic` and `Standard`. Defaults to `Basic`.
     * 
     */
    public Optional<Output<String>> sku() {
        return Optional.ofNullable(this.sku);
    }

    /**
     * The SKU Tier that should be used for the Public IP. Possible values are `Regional` and `Global`. Defaults to `Regional`.
     * 
     */
    @Import(name="skuTier")
    private @Nullable Output<String> skuTier;

    /**
     * @return The SKU Tier that should be used for the Public IP. Possible values are `Regional` and `Global`. Defaults to `Regional`.
     * 
     */
    public Optional<Output<String>> skuTier() {
        return Optional.ofNullable(this.skuTier);
    }

    /**
     * A mapping of tags to assign to the resource.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return A mapping of tags to assign to the resource.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * A collection containing the availability zone to allocate the Public IP in.
     * 
     */
    @Import(name="zones")
    private @Nullable Output<List<String>> zones;

    /**
     * @return A collection containing the availability zone to allocate the Public IP in.
     * 
     */
    public Optional<Output<List<String>>> zones() {
        return Optional.ofNullable(this.zones);
    }

    private PublicIpArgs() {}

    private PublicIpArgs(PublicIpArgs $) {
        this.allocationMethod = $.allocationMethod;
        this.domainNameLabel = $.domainNameLabel;
        this.edgeZone = $.edgeZone;
        this.idleTimeoutInMinutes = $.idleTimeoutInMinutes;
        this.ipTags = $.ipTags;
        this.ipVersion = $.ipVersion;
        this.location = $.location;
        this.name = $.name;
        this.publicIpPrefixId = $.publicIpPrefixId;
        this.resourceGroupName = $.resourceGroupName;
        this.reverseFqdn = $.reverseFqdn;
        this.sku = $.sku;
        this.skuTier = $.skuTier;
        this.tags = $.tags;
        this.zones = $.zones;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PublicIpArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PublicIpArgs $;

        public Builder() {
            $ = new PublicIpArgs();
        }

        public Builder(PublicIpArgs defaults) {
            $ = new PublicIpArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param allocationMethod Defines the allocation method for this IP address. Possible values are `Static` or `Dynamic`.
         * 
         * @return builder
         * 
         */
        public Builder allocationMethod(Output<String> allocationMethod) {
            $.allocationMethod = allocationMethod;
            return this;
        }

        /**
         * @param allocationMethod Defines the allocation method for this IP address. Possible values are `Static` or `Dynamic`.
         * 
         * @return builder
         * 
         */
        public Builder allocationMethod(String allocationMethod) {
            return allocationMethod(Output.of(allocationMethod));
        }

        /**
         * @param domainNameLabel Label for the Domain Name. Will be used to make up the FQDN.  If a domain name label is specified, an A DNS record is created for the public IP in the Microsoft Azure DNS system.
         * 
         * @return builder
         * 
         */
        public Builder domainNameLabel(@Nullable Output<String> domainNameLabel) {
            $.domainNameLabel = domainNameLabel;
            return this;
        }

        /**
         * @param domainNameLabel Label for the Domain Name. Will be used to make up the FQDN.  If a domain name label is specified, an A DNS record is created for the public IP in the Microsoft Azure DNS system.
         * 
         * @return builder
         * 
         */
        public Builder domainNameLabel(String domainNameLabel) {
            return domainNameLabel(Output.of(domainNameLabel));
        }

        /**
         * @param edgeZone Specifies the Edge Zone within the Azure Region where this Public IP should exist. Changing this forces a new Public IP to be created.
         * 
         * @return builder
         * 
         */
        public Builder edgeZone(@Nullable Output<String> edgeZone) {
            $.edgeZone = edgeZone;
            return this;
        }

        /**
         * @param edgeZone Specifies the Edge Zone within the Azure Region where this Public IP should exist. Changing this forces a new Public IP to be created.
         * 
         * @return builder
         * 
         */
        public Builder edgeZone(String edgeZone) {
            return edgeZone(Output.of(edgeZone));
        }

        /**
         * @param idleTimeoutInMinutes Specifies the timeout for the TCP idle connection. The value can be set between 4 and 30 minutes.
         * 
         * @return builder
         * 
         */
        public Builder idleTimeoutInMinutes(@Nullable Output<Integer> idleTimeoutInMinutes) {
            $.idleTimeoutInMinutes = idleTimeoutInMinutes;
            return this;
        }

        /**
         * @param idleTimeoutInMinutes Specifies the timeout for the TCP idle connection. The value can be set between 4 and 30 minutes.
         * 
         * @return builder
         * 
         */
        public Builder idleTimeoutInMinutes(Integer idleTimeoutInMinutes) {
            return idleTimeoutInMinutes(Output.of(idleTimeoutInMinutes));
        }

        /**
         * @param ipTags A mapping of IP tags to assign to the public IP.
         * 
         * @return builder
         * 
         */
        public Builder ipTags(@Nullable Output<Map<String,String>> ipTags) {
            $.ipTags = ipTags;
            return this;
        }

        /**
         * @param ipTags A mapping of IP tags to assign to the public IP.
         * 
         * @return builder
         * 
         */
        public Builder ipTags(Map<String,String> ipTags) {
            return ipTags(Output.of(ipTags));
        }

        /**
         * @param ipVersion The IP Version to use, IPv6 or IPv4.
         * 
         * @return builder
         * 
         */
        public Builder ipVersion(@Nullable Output<String> ipVersion) {
            $.ipVersion = ipVersion;
            return this;
        }

        /**
         * @param ipVersion The IP Version to use, IPv6 or IPv4.
         * 
         * @return builder
         * 
         */
        public Builder ipVersion(String ipVersion) {
            return ipVersion(Output.of(ipVersion));
        }

        /**
         * @param location Specifies the supported Azure location where the Public IP should exist. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location Specifies the supported Azure location where the Public IP should exist. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param name Specifies the name of the Public IP. Changing this forces a new Public IP to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Specifies the name of the Public IP. Changing this forces a new Public IP to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param publicIpPrefixId If specified then public IP address allocated will be provided from the public IP prefix resource.
         * 
         * @return builder
         * 
         */
        public Builder publicIpPrefixId(@Nullable Output<String> publicIpPrefixId) {
            $.publicIpPrefixId = publicIpPrefixId;
            return this;
        }

        /**
         * @param publicIpPrefixId If specified then public IP address allocated will be provided from the public IP prefix resource.
         * 
         * @return builder
         * 
         */
        public Builder publicIpPrefixId(String publicIpPrefixId) {
            return publicIpPrefixId(Output.of(publicIpPrefixId));
        }

        /**
         * @param resourceGroupName The name of the Resource Group where this Public IP should exist. Changing this forces a new Public IP to be created.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName The name of the Resource Group where this Public IP should exist. Changing this forces a new Public IP to be created.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        /**
         * @param reverseFqdn A fully qualified domain name that resolves to this public IP address. If the reverseFqdn is specified, then a PTR DNS record is created pointing from the IP address in the in-addr.arpa domain to the reverse FQDN.
         * 
         * @return builder
         * 
         */
        public Builder reverseFqdn(@Nullable Output<String> reverseFqdn) {
            $.reverseFqdn = reverseFqdn;
            return this;
        }

        /**
         * @param reverseFqdn A fully qualified domain name that resolves to this public IP address. If the reverseFqdn is specified, then a PTR DNS record is created pointing from the IP address in the in-addr.arpa domain to the reverse FQDN.
         * 
         * @return builder
         * 
         */
        public Builder reverseFqdn(String reverseFqdn) {
            return reverseFqdn(Output.of(reverseFqdn));
        }

        /**
         * @param sku The SKU of the Public IP. Accepted values are `Basic` and `Standard`. Defaults to `Basic`.
         * 
         * @return builder
         * 
         */
        public Builder sku(@Nullable Output<String> sku) {
            $.sku = sku;
            return this;
        }

        /**
         * @param sku The SKU of the Public IP. Accepted values are `Basic` and `Standard`. Defaults to `Basic`.
         * 
         * @return builder
         * 
         */
        public Builder sku(String sku) {
            return sku(Output.of(sku));
        }

        /**
         * @param skuTier The SKU Tier that should be used for the Public IP. Possible values are `Regional` and `Global`. Defaults to `Regional`.
         * 
         * @return builder
         * 
         */
        public Builder skuTier(@Nullable Output<String> skuTier) {
            $.skuTier = skuTier;
            return this;
        }

        /**
         * @param skuTier The SKU Tier that should be used for the Public IP. Possible values are `Regional` and `Global`. Defaults to `Regional`.
         * 
         * @return builder
         * 
         */
        public Builder skuTier(String skuTier) {
            return skuTier(Output.of(skuTier));
        }

        /**
         * @param tags A mapping of tags to assign to the resource.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags A mapping of tags to assign to the resource.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param zones A collection containing the availability zone to allocate the Public IP in.
         * 
         * @return builder
         * 
         */
        public Builder zones(@Nullable Output<List<String>> zones) {
            $.zones = zones;
            return this;
        }

        /**
         * @param zones A collection containing the availability zone to allocate the Public IP in.
         * 
         * @return builder
         * 
         */
        public Builder zones(List<String> zones) {
            return zones(Output.of(zones));
        }

        /**
         * @param zones A collection containing the availability zone to allocate the Public IP in.
         * 
         * @return builder
         * 
         */
        public Builder zones(String... zones) {
            return zones(List.of(zones));
        }

        public PublicIpArgs build() {
            $.allocationMethod = Objects.requireNonNull($.allocationMethod, "expected parameter 'allocationMethod' to be non-null");
            $.resourceGroupName = Objects.requireNonNull($.resourceGroupName, "expected parameter 'resourceGroupName' to be non-null");
            return $;
        }
    }

}
