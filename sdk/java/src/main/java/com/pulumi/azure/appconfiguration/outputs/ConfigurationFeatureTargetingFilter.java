// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.appconfiguration.outputs;

import com.pulumi.azure.appconfiguration.outputs.ConfigurationFeatureTargetingFilterGroup;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class ConfigurationFeatureTargetingFilter {
    /**
     * @return A number representing the percentage of the entire user base.
     * 
     */
    private Integer defaultRolloutPercentage;
    /**
     * @return One or more `groups` blocks as defined below.
     * 
     */
    private @Nullable List<ConfigurationFeatureTargetingFilterGroup> groups;
    /**
     * @return A list of users to target for this feature.
     * 
     */
    private @Nullable List<String> users;

    private ConfigurationFeatureTargetingFilter() {}
    /**
     * @return A number representing the percentage of the entire user base.
     * 
     */
    public Integer defaultRolloutPercentage() {
        return this.defaultRolloutPercentage;
    }
    /**
     * @return One or more `groups` blocks as defined below.
     * 
     */
    public List<ConfigurationFeatureTargetingFilterGroup> groups() {
        return this.groups == null ? List.of() : this.groups;
    }
    /**
     * @return A list of users to target for this feature.
     * 
     */
    public List<String> users() {
        return this.users == null ? List.of() : this.users;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ConfigurationFeatureTargetingFilter defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer defaultRolloutPercentage;
        private @Nullable List<ConfigurationFeatureTargetingFilterGroup> groups;
        private @Nullable List<String> users;
        public Builder() {}
        public Builder(ConfigurationFeatureTargetingFilter defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.defaultRolloutPercentage = defaults.defaultRolloutPercentage;
    	      this.groups = defaults.groups;
    	      this.users = defaults.users;
        }

        @CustomType.Setter
        public Builder defaultRolloutPercentage(Integer defaultRolloutPercentage) {
            if (defaultRolloutPercentage == null) {
              throw new MissingRequiredPropertyException("ConfigurationFeatureTargetingFilter", "defaultRolloutPercentage");
            }
            this.defaultRolloutPercentage = defaultRolloutPercentage;
            return this;
        }
        @CustomType.Setter
        public Builder groups(@Nullable List<ConfigurationFeatureTargetingFilterGroup> groups) {

            this.groups = groups;
            return this;
        }
        public Builder groups(ConfigurationFeatureTargetingFilterGroup... groups) {
            return groups(List.of(groups));
        }
        @CustomType.Setter
        public Builder users(@Nullable List<String> users) {

            this.users = users;
            return this;
        }
        public Builder users(String... users) {
            return users(List.of(users));
        }
        public ConfigurationFeatureTargetingFilter build() {
            final var _resultValue = new ConfigurationFeatureTargetingFilter();
            _resultValue.defaultRolloutPercentage = defaultRolloutPercentage;
            _resultValue.groups = groups;
            _resultValue.users = users;
            return _resultValue;
        }
    }
}
