// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.network.inputs;

import com.pulumi.azure.network.inputs.NetworkPacketCaptureFilterArgs;
import com.pulumi.azure.network.inputs.NetworkPacketCaptureStorageLocationArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class NetworkPacketCaptureState extends com.pulumi.resources.ResourceArgs {

    public static final NetworkPacketCaptureState Empty = new NetworkPacketCaptureState();

    /**
     * One or more `filter` blocks as defined below. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="filters")
    private @Nullable Output<List<NetworkPacketCaptureFilterArgs>> filters;

    /**
     * @return One or more `filter` blocks as defined below. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<List<NetworkPacketCaptureFilterArgs>>> filters() {
        return Optional.ofNullable(this.filters);
    }

    /**
     * The number of bytes captured per packet. The remaining bytes are truncated. Defaults to `0` (Entire Packet Captured). Changing this forces a new resource to be created.
     * 
     */
    @Import(name="maximumBytesPerPacket")
    private @Nullable Output<Integer> maximumBytesPerPacket;

    /**
     * @return The number of bytes captured per packet. The remaining bytes are truncated. Defaults to `0` (Entire Packet Captured). Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<Integer>> maximumBytesPerPacket() {
        return Optional.ofNullable(this.maximumBytesPerPacket);
    }

    /**
     * Maximum size of the capture in Bytes. Defaults to `1073741824` (1GB). Changing this forces a new resource to be created.
     * 
     */
    @Import(name="maximumBytesPerSession")
    private @Nullable Output<Integer> maximumBytesPerSession;

    /**
     * @return Maximum size of the capture in Bytes. Defaults to `1073741824` (1GB). Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<Integer>> maximumBytesPerSession() {
        return Optional.ofNullable(this.maximumBytesPerSession);
    }

    /**
     * The maximum duration of the capture session in seconds. Defaults to `18000` (5 hours). Changing this forces a new resource to be created.
     * 
     */
    @Import(name="maximumCaptureDuration")
    private @Nullable Output<Integer> maximumCaptureDuration;

    /**
     * @return The maximum duration of the capture session in seconds. Defaults to `18000` (5 hours). Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<Integer>> maximumCaptureDuration() {
        return Optional.ofNullable(this.maximumCaptureDuration);
    }

    /**
     * The name to use for this Network Packet Capture. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name to use for this Network Packet Capture. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The name of the Network Watcher. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="networkWatcherName")
    private @Nullable Output<String> networkWatcherName;

    /**
     * @return The name of the Network Watcher. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> networkWatcherName() {
        return Optional.ofNullable(this.networkWatcherName);
    }

    /**
     * The name of the resource group in which the Network Watcher exists. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="resourceGroupName")
    private @Nullable Output<String> resourceGroupName;

    /**
     * @return The name of the resource group in which the Network Watcher exists. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> resourceGroupName() {
        return Optional.ofNullable(this.resourceGroupName);
    }

    /**
     * A `storage_location` block as defined below. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="storageLocation")
    private @Nullable Output<NetworkPacketCaptureStorageLocationArgs> storageLocation;

    /**
     * @return A `storage_location` block as defined below. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<NetworkPacketCaptureStorageLocationArgs>> storageLocation() {
        return Optional.ofNullable(this.storageLocation);
    }

    /**
     * The ID of the Resource to capture packets from. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="targetResourceId")
    private @Nullable Output<String> targetResourceId;

    /**
     * @return The ID of the Resource to capture packets from. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> targetResourceId() {
        return Optional.ofNullable(this.targetResourceId);
    }

    private NetworkPacketCaptureState() {}

    private NetworkPacketCaptureState(NetworkPacketCaptureState $) {
        this.filters = $.filters;
        this.maximumBytesPerPacket = $.maximumBytesPerPacket;
        this.maximumBytesPerSession = $.maximumBytesPerSession;
        this.maximumCaptureDuration = $.maximumCaptureDuration;
        this.name = $.name;
        this.networkWatcherName = $.networkWatcherName;
        this.resourceGroupName = $.resourceGroupName;
        this.storageLocation = $.storageLocation;
        this.targetResourceId = $.targetResourceId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(NetworkPacketCaptureState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private NetworkPacketCaptureState $;

        public Builder() {
            $ = new NetworkPacketCaptureState();
        }

        public Builder(NetworkPacketCaptureState defaults) {
            $ = new NetworkPacketCaptureState(Objects.requireNonNull(defaults));
        }

        /**
         * @param filters One or more `filter` blocks as defined below. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder filters(@Nullable Output<List<NetworkPacketCaptureFilterArgs>> filters) {
            $.filters = filters;
            return this;
        }

        /**
         * @param filters One or more `filter` blocks as defined below. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder filters(List<NetworkPacketCaptureFilterArgs> filters) {
            return filters(Output.of(filters));
        }

        /**
         * @param filters One or more `filter` blocks as defined below. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder filters(NetworkPacketCaptureFilterArgs... filters) {
            return filters(List.of(filters));
        }

        /**
         * @param maximumBytesPerPacket The number of bytes captured per packet. The remaining bytes are truncated. Defaults to `0` (Entire Packet Captured). Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder maximumBytesPerPacket(@Nullable Output<Integer> maximumBytesPerPacket) {
            $.maximumBytesPerPacket = maximumBytesPerPacket;
            return this;
        }

        /**
         * @param maximumBytesPerPacket The number of bytes captured per packet. The remaining bytes are truncated. Defaults to `0` (Entire Packet Captured). Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder maximumBytesPerPacket(Integer maximumBytesPerPacket) {
            return maximumBytesPerPacket(Output.of(maximumBytesPerPacket));
        }

        /**
         * @param maximumBytesPerSession Maximum size of the capture in Bytes. Defaults to `1073741824` (1GB). Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder maximumBytesPerSession(@Nullable Output<Integer> maximumBytesPerSession) {
            $.maximumBytesPerSession = maximumBytesPerSession;
            return this;
        }

        /**
         * @param maximumBytesPerSession Maximum size of the capture in Bytes. Defaults to `1073741824` (1GB). Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder maximumBytesPerSession(Integer maximumBytesPerSession) {
            return maximumBytesPerSession(Output.of(maximumBytesPerSession));
        }

        /**
         * @param maximumCaptureDuration The maximum duration of the capture session in seconds. Defaults to `18000` (5 hours). Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder maximumCaptureDuration(@Nullable Output<Integer> maximumCaptureDuration) {
            $.maximumCaptureDuration = maximumCaptureDuration;
            return this;
        }

        /**
         * @param maximumCaptureDuration The maximum duration of the capture session in seconds. Defaults to `18000` (5 hours). Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder maximumCaptureDuration(Integer maximumCaptureDuration) {
            return maximumCaptureDuration(Output.of(maximumCaptureDuration));
        }

        /**
         * @param name The name to use for this Network Packet Capture. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name to use for this Network Packet Capture. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param networkWatcherName The name of the Network Watcher. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder networkWatcherName(@Nullable Output<String> networkWatcherName) {
            $.networkWatcherName = networkWatcherName;
            return this;
        }

        /**
         * @param networkWatcherName The name of the Network Watcher. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder networkWatcherName(String networkWatcherName) {
            return networkWatcherName(Output.of(networkWatcherName));
        }

        /**
         * @param resourceGroupName The name of the resource group in which the Network Watcher exists. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(@Nullable Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName The name of the resource group in which the Network Watcher exists. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        /**
         * @param storageLocation A `storage_location` block as defined below. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder storageLocation(@Nullable Output<NetworkPacketCaptureStorageLocationArgs> storageLocation) {
            $.storageLocation = storageLocation;
            return this;
        }

        /**
         * @param storageLocation A `storage_location` block as defined below. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder storageLocation(NetworkPacketCaptureStorageLocationArgs storageLocation) {
            return storageLocation(Output.of(storageLocation));
        }

        /**
         * @param targetResourceId The ID of the Resource to capture packets from. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder targetResourceId(@Nullable Output<String> targetResourceId) {
            $.targetResourceId = targetResourceId;
            return this;
        }

        /**
         * @param targetResourceId The ID of the Resource to capture packets from. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder targetResourceId(String targetResourceId) {
            return targetResourceId(Output.of(targetResourceId));
        }

        public NetworkPacketCaptureState build() {
            return $;
        }
    }

}
