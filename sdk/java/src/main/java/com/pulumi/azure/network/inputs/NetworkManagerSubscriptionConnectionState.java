// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.network.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class NetworkManagerSubscriptionConnectionState extends com.pulumi.resources.ResourceArgs {

    public static final NetworkManagerSubscriptionConnectionState Empty = new NetworkManagerSubscriptionConnectionState();

    /**
     * The Connection state of the Network Manager Subscription Connection.
     * 
     */
    @Import(name="connectionState")
    private @Nullable Output<String> connectionState;

    /**
     * @return The Connection state of the Network Manager Subscription Connection.
     * 
     */
    public Optional<Output<String>> connectionState() {
        return Optional.ofNullable(this.connectionState);
    }

    /**
     * A description of the Network Manager Subscription Connection.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return A description of the Network Manager Subscription Connection.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Specifies the name which should be used for this Network Subscription Network Manager Connection. Changing this forces a new Network Subscription Network Manager Connection to be created.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Specifies the name which should be used for this Network Subscription Network Manager Connection. Changing this forces a new Network Subscription Network Manager Connection to be created.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Specifies the ID of the Network Manager which the Subscription is connected to.
     * 
     */
    @Import(name="networkManagerId")
    private @Nullable Output<String> networkManagerId;

    /**
     * @return Specifies the ID of the Network Manager which the Subscription is connected to.
     * 
     */
    public Optional<Output<String>> networkManagerId() {
        return Optional.ofNullable(this.networkManagerId);
    }

    /**
     * Specifies the ID of the target Subscription. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="subscriptionId")
    private @Nullable Output<String> subscriptionId;

    /**
     * @return Specifies the ID of the target Subscription. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> subscriptionId() {
        return Optional.ofNullable(this.subscriptionId);
    }

    private NetworkManagerSubscriptionConnectionState() {}

    private NetworkManagerSubscriptionConnectionState(NetworkManagerSubscriptionConnectionState $) {
        this.connectionState = $.connectionState;
        this.description = $.description;
        this.name = $.name;
        this.networkManagerId = $.networkManagerId;
        this.subscriptionId = $.subscriptionId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(NetworkManagerSubscriptionConnectionState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private NetworkManagerSubscriptionConnectionState $;

        public Builder() {
            $ = new NetworkManagerSubscriptionConnectionState();
        }

        public Builder(NetworkManagerSubscriptionConnectionState defaults) {
            $ = new NetworkManagerSubscriptionConnectionState(Objects.requireNonNull(defaults));
        }

        /**
         * @param connectionState The Connection state of the Network Manager Subscription Connection.
         * 
         * @return builder
         * 
         */
        public Builder connectionState(@Nullable Output<String> connectionState) {
            $.connectionState = connectionState;
            return this;
        }

        /**
         * @param connectionState The Connection state of the Network Manager Subscription Connection.
         * 
         * @return builder
         * 
         */
        public Builder connectionState(String connectionState) {
            return connectionState(Output.of(connectionState));
        }

        /**
         * @param description A description of the Network Manager Subscription Connection.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description A description of the Network Manager Subscription Connection.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param name Specifies the name which should be used for this Network Subscription Network Manager Connection. Changing this forces a new Network Subscription Network Manager Connection to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Specifies the name which should be used for this Network Subscription Network Manager Connection. Changing this forces a new Network Subscription Network Manager Connection to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param networkManagerId Specifies the ID of the Network Manager which the Subscription is connected to.
         * 
         * @return builder
         * 
         */
        public Builder networkManagerId(@Nullable Output<String> networkManagerId) {
            $.networkManagerId = networkManagerId;
            return this;
        }

        /**
         * @param networkManagerId Specifies the ID of the Network Manager which the Subscription is connected to.
         * 
         * @return builder
         * 
         */
        public Builder networkManagerId(String networkManagerId) {
            return networkManagerId(Output.of(networkManagerId));
        }

        /**
         * @param subscriptionId Specifies the ID of the target Subscription. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder subscriptionId(@Nullable Output<String> subscriptionId) {
            $.subscriptionId = subscriptionId;
            return this;
        }

        /**
         * @param subscriptionId Specifies the ID of the target Subscription. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder subscriptionId(String subscriptionId) {
            return subscriptionId(Output.of(subscriptionId));
        }

        public NetworkManagerSubscriptionConnectionState build() {
            return $;
        }
    }

}
