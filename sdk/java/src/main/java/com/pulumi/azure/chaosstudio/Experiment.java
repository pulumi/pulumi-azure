// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.chaosstudio;

import com.pulumi.azure.Utilities;
import com.pulumi.azure.chaosstudio.ExperimentArgs;
import com.pulumi.azure.chaosstudio.inputs.ExperimentState;
import com.pulumi.azure.chaosstudio.outputs.ExperimentIdentity;
import com.pulumi.azure.chaosstudio.outputs.ExperimentSelector;
import com.pulumi.azure.chaosstudio.outputs.ExperimentStep;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Manages a Chaos Studio Experiment.
 * 
 * ## Example Usage
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.azure.core.ResourceGroup;
 * import com.pulumi.azure.core.ResourceGroupArgs;
 * import com.pulumi.azure.authorization.UserAssignedIdentity;
 * import com.pulumi.azure.authorization.UserAssignedIdentityArgs;
 * import com.pulumi.azure.network.VirtualNetwork;
 * import com.pulumi.azure.network.VirtualNetworkArgs;
 * import com.pulumi.azure.network.Subnet;
 * import com.pulumi.azure.network.SubnetArgs;
 * import com.pulumi.azure.network.NetworkInterface;
 * import com.pulumi.azure.network.NetworkInterfaceArgs;
 * import com.pulumi.azure.network.inputs.NetworkInterfaceIpConfigurationArgs;
 * import com.pulumi.azure.compute.LinuxVirtualMachine;
 * import com.pulumi.azure.compute.LinuxVirtualMachineArgs;
 * import com.pulumi.azure.compute.inputs.LinuxVirtualMachineOsDiskArgs;
 * import com.pulumi.azure.compute.inputs.LinuxVirtualMachineSourceImageReferenceArgs;
 * import com.pulumi.azure.chaosstudio.Target;
 * import com.pulumi.azure.chaosstudio.TargetArgs;
 * import com.pulumi.azure.chaosstudio.Capability;
 * import com.pulumi.azure.chaosstudio.CapabilityArgs;
 * import com.pulumi.azure.chaosstudio.Experiment;
 * import com.pulumi.azure.chaosstudio.ExperimentArgs;
 * import com.pulumi.azure.chaosstudio.inputs.ExperimentIdentityArgs;
 * import com.pulumi.azure.chaosstudio.inputs.ExperimentSelectorArgs;
 * import com.pulumi.azure.chaosstudio.inputs.ExperimentStepArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new ResourceGroup(&#34;example&#34;, ResourceGroupArgs.builder()        
 *             .name(&#34;example&#34;)
 *             .location(&#34;westeurope&#34;)
 *             .build());
 * 
 *         var exampleUserAssignedIdentity = new UserAssignedIdentity(&#34;exampleUserAssignedIdentity&#34;, UserAssignedIdentityArgs.builder()        
 *             .resourceGroupName(example.name())
 *             .location(example.location())
 *             .name(&#34;example&#34;)
 *             .build());
 * 
 *         var exampleVirtualNetwork = new VirtualNetwork(&#34;exampleVirtualNetwork&#34;, VirtualNetworkArgs.builder()        
 *             .name(&#34;example&#34;)
 *             .addressSpaces(&#34;10.0.0.0/16&#34;)
 *             .location(example.location())
 *             .resourceGroupName(example.name())
 *             .build());
 * 
 *         var exampleSubnet = new Subnet(&#34;exampleSubnet&#34;, SubnetArgs.builder()        
 *             .name(&#34;internal&#34;)
 *             .resourceGroupName(example.name())
 *             .virtualNetworkName(exampleVirtualNetwork.name())
 *             .addressPrefixes(&#34;10.0.2.0/24&#34;)
 *             .build());
 * 
 *         var exampleNetworkInterface = new NetworkInterface(&#34;exampleNetworkInterface&#34;, NetworkInterfaceArgs.builder()        
 *             .name(&#34;example&#34;)
 *             .location(example.location())
 *             .resourceGroupName(example.name())
 *             .ipConfigurations(NetworkInterfaceIpConfigurationArgs.builder()
 *                 .name(&#34;example&#34;)
 *                 .subnetId(exampleSubnet.id())
 *                 .privateIpAddressAllocation(&#34;Dynamic&#34;)
 *                 .build())
 *             .build());
 * 
 *         var exampleLinuxVirtualMachine = new LinuxVirtualMachine(&#34;exampleLinuxVirtualMachine&#34;, LinuxVirtualMachineArgs.builder()        
 *             .name(&#34;example&#34;)
 *             .resourceGroupName(example.name())
 *             .location(example.location())
 *             .size(&#34;Standard_F2&#34;)
 *             .adminUsername(&#34;adminuser&#34;)
 *             .adminPassword(&#34;example&#34;)
 *             .disablePasswordAuthentication(false)
 *             .networkInterfaceIds(exampleNetworkInterface.id())
 *             .osDisk(LinuxVirtualMachineOsDiskArgs.builder()
 *                 .caching(&#34;ReadWrite&#34;)
 *                 .storageAccountType(&#34;Standard_LRS&#34;)
 *                 .build())
 *             .sourceImageReference(LinuxVirtualMachineSourceImageReferenceArgs.builder()
 *                 .publisher(&#34;Canonical&#34;)
 *                 .offer(&#34;0001-com-ubuntu-server-jammy&#34;)
 *                 .sku(&#34;22_04-lts&#34;)
 *                 .version(&#34;latest&#34;)
 *                 .build())
 *             .build());
 * 
 *         var exampleTarget = new Target(&#34;exampleTarget&#34;, TargetArgs.builder()        
 *             .location(example.location())
 *             .targetResourceId(exampleLinuxVirtualMachine.id())
 *             .targetType(&#34;Microsoft-VirtualMachine&#34;)
 *             .build());
 * 
 *         var exampleCapability = new Capability(&#34;exampleCapability&#34;, CapabilityArgs.builder()        
 *             .chaosStudioTargetId(exampleTarget.id())
 *             .capabilityType(&#34;Shutdown-1.0&#34;)
 *             .build());
 * 
 *         var exampleExperiment = new Experiment(&#34;exampleExperiment&#34;, ExperimentArgs.builder()        
 *             .location(example.location())
 *             .name(&#34;example&#34;)
 *             .resourceGroupName(example.name())
 *             .identity(ExperimentIdentityArgs.builder()
 *                 .type(&#34;SystemAssigned&#34;)
 *                 .build())
 *             .selectors(ExperimentSelectorArgs.builder()
 *                 .name(&#34;Selector1&#34;)
 *                 .chaosStudioTargetIds(exampleTarget.id())
 *                 .build())
 *             .steps(ExperimentStepArgs.builder()
 *                 .name(&#34;example&#34;)
 *                 .branches(ExperimentStepBranchArgs.builder()
 *                     .name(&#34;example&#34;)
 *                     .actions(ExperimentStepBranchActionArgs.builder()
 *                         .urn(exampleCapability.capabilityUrn())
 *                         .selectorName(&#34;Selector1&#34;)
 *                         .parameters(Map.of(&#34;abruptShutdown&#34;, &#34;false&#34;))
 *                         .actionType(&#34;continuous&#34;)
 *                         .duration(&#34;PT10M&#34;)
 *                         .build())
 *                     .build())
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * Chaos Studio Experiments can be imported using the `resource id`, e.g.
 * 
 * ```sh
 * $ pulumi import azure:chaosstudio/experiment:Experiment example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.Chaos/experiments/experiment1
 * ```
 * 
 */
@ResourceType(type="azure:chaosstudio/experiment:Experiment")
public class Experiment extends com.pulumi.resources.CustomResource {
    /**
     * A `identity` block as defined below.
     * 
     */
    @Export(name="identity", refs={ExperimentIdentity.class}, tree="[0]")
    private Output</* @Nullable */ ExperimentIdentity> identity;

    /**
     * @return A `identity` block as defined below.
     * 
     */
    public Output<Optional<ExperimentIdentity>> identity() {
        return Codegen.optional(this.identity);
    }
    /**
     * The Azure Region where the Chaos Studio Experiment should exist. Changing this forces a new Chaos Studio Experiment to be created.
     * 
     */
    @Export(name="location", refs={String.class}, tree="[0]")
    private Output<String> location;

    /**
     * @return The Azure Region where the Chaos Studio Experiment should exist. Changing this forces a new Chaos Studio Experiment to be created.
     * 
     */
    public Output<String> location() {
        return this.location;
    }
    /**
     * The name which should be used for this Chaos Studio Experiment. Changing this forces a new Chaos Studio Experiment to be created.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The name which should be used for this Chaos Studio Experiment. Changing this forces a new Chaos Studio Experiment to be created.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The name of the Resource Group where the Chaos Studio Experiment should exist. Changing this forces a new Chaos Studio Experiment to be created.
     * 
     */
    @Export(name="resourceGroupName", refs={String.class}, tree="[0]")
    private Output<String> resourceGroupName;

    /**
     * @return The name of the Resource Group where the Chaos Studio Experiment should exist. Changing this forces a new Chaos Studio Experiment to be created.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }
    /**
     * One or more `selectors` blocks as defined below.
     * 
     */
    @Export(name="selectors", refs={List.class,ExperimentSelector.class}, tree="[0,1]")
    private Output<List<ExperimentSelector>> selectors;

    /**
     * @return One or more `selectors` blocks as defined below.
     * 
     */
    public Output<List<ExperimentSelector>> selectors() {
        return this.selectors;
    }
    /**
     * One or more `steps` blocks as defined below.
     * 
     */
    @Export(name="steps", refs={List.class,ExperimentStep.class}, tree="[0,1]")
    private Output<List<ExperimentStep>> steps;

    /**
     * @return One or more `steps` blocks as defined below.
     * 
     */
    public Output<List<ExperimentStep>> steps() {
        return this.steps;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Experiment(String name) {
        this(name, ExperimentArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Experiment(String name, ExperimentArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Experiment(String name, ExperimentArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:chaosstudio/experiment:Experiment", name, args == null ? ExperimentArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private Experiment(String name, Output<String> id, @Nullable ExperimentState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:chaosstudio/experiment:Experiment", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Experiment get(String name, Output<String> id, @Nullable ExperimentState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Experiment(name, id, state, options);
    }
}
