// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.compute.inputs;

import com.pulumi.azure.compute.inputs.ScaleSetStandbyPoolElasticityProfileArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ScaleSetStandbyPoolState extends com.pulumi.resources.ResourceArgs {

    public static final ScaleSetStandbyPoolState Empty = new ScaleSetStandbyPoolState();

    /**
     * Specifies the fully qualified resource ID of a virtual machine scale set the pool is attached to.
     * 
     */
    @Import(name="attachedVirtualMachineScaleSetId")
    private @Nullable Output<String> attachedVirtualMachineScaleSetId;

    /**
     * @return Specifies the fully qualified resource ID of a virtual machine scale set the pool is attached to.
     * 
     */
    public Optional<Output<String>> attachedVirtualMachineScaleSetId() {
        return Optional.ofNullable(this.attachedVirtualMachineScaleSetId);
    }

    /**
     * An `elasticity_profile` block as defined below.
     * 
     */
    @Import(name="elasticityProfile")
    private @Nullable Output<ScaleSetStandbyPoolElasticityProfileArgs> elasticityProfile;

    /**
     * @return An `elasticity_profile` block as defined below.
     * 
     */
    public Optional<Output<ScaleSetStandbyPoolElasticityProfileArgs>> elasticityProfile() {
        return Optional.ofNullable(this.elasticityProfile);
    }

    /**
     * Specifies the Azure Region where the Standby Pool should exist. Changing this forces a new Standby Pool to be created.
     * 
     */
    @Import(name="location")
    private @Nullable Output<String> location;

    /**
     * @return Specifies the Azure Region where the Standby Pool should exist. Changing this forces a new Standby Pool to be created.
     * 
     */
    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * Specifies the name which should be used for this Standby Pool. Changing this forces a new Standby Pool to be created.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Specifies the name which should be used for this Standby Pool. Changing this forces a new Standby Pool to be created.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Specifies the name of the Resource Group where the Standby Pool should exist. Changing this forces a new Standby Pool to be created.
     * 
     */
    @Import(name="resourceGroupName")
    private @Nullable Output<String> resourceGroupName;

    /**
     * @return Specifies the name of the Resource Group where the Standby Pool should exist. Changing this forces a new Standby Pool to be created.
     * 
     */
    public Optional<Output<String>> resourceGroupName() {
        return Optional.ofNullable(this.resourceGroupName);
    }

    /**
     * A mapping of tags which should be assigned to the Standby Pool.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return A mapping of tags which should be assigned to the Standby Pool.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * Specifies the desired state of virtual machines in the pool. Possible values are `Running` and `Deallocated`.
     * 
     */
    @Import(name="virtualMachineState")
    private @Nullable Output<String> virtualMachineState;

    /**
     * @return Specifies the desired state of virtual machines in the pool. Possible values are `Running` and `Deallocated`.
     * 
     */
    public Optional<Output<String>> virtualMachineState() {
        return Optional.ofNullable(this.virtualMachineState);
    }

    private ScaleSetStandbyPoolState() {}

    private ScaleSetStandbyPoolState(ScaleSetStandbyPoolState $) {
        this.attachedVirtualMachineScaleSetId = $.attachedVirtualMachineScaleSetId;
        this.elasticityProfile = $.elasticityProfile;
        this.location = $.location;
        this.name = $.name;
        this.resourceGroupName = $.resourceGroupName;
        this.tags = $.tags;
        this.virtualMachineState = $.virtualMachineState;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ScaleSetStandbyPoolState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ScaleSetStandbyPoolState $;

        public Builder() {
            $ = new ScaleSetStandbyPoolState();
        }

        public Builder(ScaleSetStandbyPoolState defaults) {
            $ = new ScaleSetStandbyPoolState(Objects.requireNonNull(defaults));
        }

        /**
         * @param attachedVirtualMachineScaleSetId Specifies the fully qualified resource ID of a virtual machine scale set the pool is attached to.
         * 
         * @return builder
         * 
         */
        public Builder attachedVirtualMachineScaleSetId(@Nullable Output<String> attachedVirtualMachineScaleSetId) {
            $.attachedVirtualMachineScaleSetId = attachedVirtualMachineScaleSetId;
            return this;
        }

        /**
         * @param attachedVirtualMachineScaleSetId Specifies the fully qualified resource ID of a virtual machine scale set the pool is attached to.
         * 
         * @return builder
         * 
         */
        public Builder attachedVirtualMachineScaleSetId(String attachedVirtualMachineScaleSetId) {
            return attachedVirtualMachineScaleSetId(Output.of(attachedVirtualMachineScaleSetId));
        }

        /**
         * @param elasticityProfile An `elasticity_profile` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder elasticityProfile(@Nullable Output<ScaleSetStandbyPoolElasticityProfileArgs> elasticityProfile) {
            $.elasticityProfile = elasticityProfile;
            return this;
        }

        /**
         * @param elasticityProfile An `elasticity_profile` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder elasticityProfile(ScaleSetStandbyPoolElasticityProfileArgs elasticityProfile) {
            return elasticityProfile(Output.of(elasticityProfile));
        }

        /**
         * @param location Specifies the Azure Region where the Standby Pool should exist. Changing this forces a new Standby Pool to be created.
         * 
         * @return builder
         * 
         */
        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location Specifies the Azure Region where the Standby Pool should exist. Changing this forces a new Standby Pool to be created.
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param name Specifies the name which should be used for this Standby Pool. Changing this forces a new Standby Pool to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Specifies the name which should be used for this Standby Pool. Changing this forces a new Standby Pool to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param resourceGroupName Specifies the name of the Resource Group where the Standby Pool should exist. Changing this forces a new Standby Pool to be created.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(@Nullable Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName Specifies the name of the Resource Group where the Standby Pool should exist. Changing this forces a new Standby Pool to be created.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        /**
         * @param tags A mapping of tags which should be assigned to the Standby Pool.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags A mapping of tags which should be assigned to the Standby Pool.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param virtualMachineState Specifies the desired state of virtual machines in the pool. Possible values are `Running` and `Deallocated`.
         * 
         * @return builder
         * 
         */
        public Builder virtualMachineState(@Nullable Output<String> virtualMachineState) {
            $.virtualMachineState = virtualMachineState;
            return this;
        }

        /**
         * @param virtualMachineState Specifies the desired state of virtual machines in the pool. Possible values are `Running` and `Deallocated`.
         * 
         * @return builder
         * 
         */
        public Builder virtualMachineState(String virtualMachineState) {
            return virtualMachineState(Output.of(virtualMachineState));
        }

        public ScaleSetStandbyPoolState build() {
            return $;
        }
    }

}
