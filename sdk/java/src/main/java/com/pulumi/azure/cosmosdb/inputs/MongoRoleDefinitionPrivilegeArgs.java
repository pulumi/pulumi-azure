// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.cosmosdb.inputs;

import com.pulumi.azure.cosmosdb.inputs.MongoRoleDefinitionPrivilegeResourceArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class MongoRoleDefinitionPrivilegeArgs extends com.pulumi.resources.ResourceArgs {

    public static final MongoRoleDefinitionPrivilegeArgs Empty = new MongoRoleDefinitionPrivilegeArgs();

    /**
     * A list of actions that are allowed.
     * 
     */
    @Import(name="actions", required=true)
    private Output<List<String>> actions;

    /**
     * @return A list of actions that are allowed.
     * 
     */
    public Output<List<String>> actions() {
        return this.actions;
    }

    /**
     * A `resource` block as defined below.
     * 
     */
    @Import(name="resource", required=true)
    private Output<MongoRoleDefinitionPrivilegeResourceArgs> resource;

    /**
     * @return A `resource` block as defined below.
     * 
     */
    public Output<MongoRoleDefinitionPrivilegeResourceArgs> resource() {
        return this.resource;
    }

    private MongoRoleDefinitionPrivilegeArgs() {}

    private MongoRoleDefinitionPrivilegeArgs(MongoRoleDefinitionPrivilegeArgs $) {
        this.actions = $.actions;
        this.resource = $.resource;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(MongoRoleDefinitionPrivilegeArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private MongoRoleDefinitionPrivilegeArgs $;

        public Builder() {
            $ = new MongoRoleDefinitionPrivilegeArgs();
        }

        public Builder(MongoRoleDefinitionPrivilegeArgs defaults) {
            $ = new MongoRoleDefinitionPrivilegeArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param actions A list of actions that are allowed.
         * 
         * @return builder
         * 
         */
        public Builder actions(Output<List<String>> actions) {
            $.actions = actions;
            return this;
        }

        /**
         * @param actions A list of actions that are allowed.
         * 
         * @return builder
         * 
         */
        public Builder actions(List<String> actions) {
            return actions(Output.of(actions));
        }

        /**
         * @param actions A list of actions that are allowed.
         * 
         * @return builder
         * 
         */
        public Builder actions(String... actions) {
            return actions(List.of(actions));
        }

        /**
         * @param resource A `resource` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder resource(Output<MongoRoleDefinitionPrivilegeResourceArgs> resource) {
            $.resource = resource;
            return this;
        }

        /**
         * @param resource A `resource` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder resource(MongoRoleDefinitionPrivilegeResourceArgs resource) {
            return resource(Output.of(resource));
        }

        public MongoRoleDefinitionPrivilegeArgs build() {
            if ($.actions == null) {
                throw new MissingRequiredPropertyException("MongoRoleDefinitionPrivilegeArgs", "actions");
            }
            if ($.resource == null) {
                throw new MissingRequiredPropertyException("MongoRoleDefinitionPrivilegeArgs", "resource");
            }
            return $;
        }
    }

}
