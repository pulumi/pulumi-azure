// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.compute.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class LinuxVirtualMachineScaleSetScaleInArgs extends com.pulumi.resources.ResourceArgs {

    public static final LinuxVirtualMachineScaleSetScaleInArgs Empty = new LinuxVirtualMachineScaleSetScaleInArgs();

    /**
     * Should the virtual machines chosen for removal be force deleted when the virtual machine scale set is being scaled-in? Possible values are `true` or `false`. Defaults to `false`.
     * 
     */
    @Import(name="forceDeletionEnabled")
    private @Nullable Output<Boolean> forceDeletionEnabled;

    /**
     * @return Should the virtual machines chosen for removal be force deleted when the virtual machine scale set is being scaled-in? Possible values are `true` or `false`. Defaults to `false`.
     * 
     */
    public Optional<Output<Boolean>> forceDeletionEnabled() {
        return Optional.ofNullable(this.forceDeletionEnabled);
    }

    /**
     * The scale-in policy rule that decides which virtual machines are chosen for removal when a Virtual Machine Scale Set is scaled in. Possible values for the scale-in policy rules are `Default`, `NewestVM` and `OldestVM`, defaults to `Default`. For more information about scale in policy, please [refer to this doc](https://docs.microsoft.com/azure/virtual-machine-scale-sets/virtual-machine-scale-sets-scale-in-policy).
     * 
     */
    @Import(name="rule")
    private @Nullable Output<String> rule;

    /**
     * @return The scale-in policy rule that decides which virtual machines are chosen for removal when a Virtual Machine Scale Set is scaled in. Possible values for the scale-in policy rules are `Default`, `NewestVM` and `OldestVM`, defaults to `Default`. For more information about scale in policy, please [refer to this doc](https://docs.microsoft.com/azure/virtual-machine-scale-sets/virtual-machine-scale-sets-scale-in-policy).
     * 
     */
    public Optional<Output<String>> rule() {
        return Optional.ofNullable(this.rule);
    }

    private LinuxVirtualMachineScaleSetScaleInArgs() {}

    private LinuxVirtualMachineScaleSetScaleInArgs(LinuxVirtualMachineScaleSetScaleInArgs $) {
        this.forceDeletionEnabled = $.forceDeletionEnabled;
        this.rule = $.rule;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(LinuxVirtualMachineScaleSetScaleInArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private LinuxVirtualMachineScaleSetScaleInArgs $;

        public Builder() {
            $ = new LinuxVirtualMachineScaleSetScaleInArgs();
        }

        public Builder(LinuxVirtualMachineScaleSetScaleInArgs defaults) {
            $ = new LinuxVirtualMachineScaleSetScaleInArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param forceDeletionEnabled Should the virtual machines chosen for removal be force deleted when the virtual machine scale set is being scaled-in? Possible values are `true` or `false`. Defaults to `false`.
         * 
         * @return builder
         * 
         */
        public Builder forceDeletionEnabled(@Nullable Output<Boolean> forceDeletionEnabled) {
            $.forceDeletionEnabled = forceDeletionEnabled;
            return this;
        }

        /**
         * @param forceDeletionEnabled Should the virtual machines chosen for removal be force deleted when the virtual machine scale set is being scaled-in? Possible values are `true` or `false`. Defaults to `false`.
         * 
         * @return builder
         * 
         */
        public Builder forceDeletionEnabled(Boolean forceDeletionEnabled) {
            return forceDeletionEnabled(Output.of(forceDeletionEnabled));
        }

        /**
         * @param rule The scale-in policy rule that decides which virtual machines are chosen for removal when a Virtual Machine Scale Set is scaled in. Possible values for the scale-in policy rules are `Default`, `NewestVM` and `OldestVM`, defaults to `Default`. For more information about scale in policy, please [refer to this doc](https://docs.microsoft.com/azure/virtual-machine-scale-sets/virtual-machine-scale-sets-scale-in-policy).
         * 
         * @return builder
         * 
         */
        public Builder rule(@Nullable Output<String> rule) {
            $.rule = rule;
            return this;
        }

        /**
         * @param rule The scale-in policy rule that decides which virtual machines are chosen for removal when a Virtual Machine Scale Set is scaled in. Possible values for the scale-in policy rules are `Default`, `NewestVM` and `OldestVM`, defaults to `Default`. For more information about scale in policy, please [refer to this doc](https://docs.microsoft.com/azure/virtual-machine-scale-sets/virtual-machine-scale-sets-scale-in-policy).
         * 
         * @return builder
         * 
         */
        public Builder rule(String rule) {
            return rule(Output.of(rule));
        }

        public LinuxVirtualMachineScaleSetScaleInArgs build() {
            return $;
        }
    }

}
