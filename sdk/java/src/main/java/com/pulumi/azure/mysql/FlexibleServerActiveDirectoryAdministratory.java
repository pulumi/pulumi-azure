// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.mysql;

import com.pulumi.azure.Utilities;
import com.pulumi.azure.mysql.FlexibleServerActiveDirectoryAdministratoryArgs;
import com.pulumi.azure.mysql.inputs.FlexibleServerActiveDirectoryAdministratoryState;
import com.pulumi.core.Alias;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;

/**
 * Manages an Active Directory administrator on a MySQL Flexible Server
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.azure.core.CoreFunctions;
 * import com.pulumi.azure.core.ResourceGroup;
 * import com.pulumi.azure.core.ResourceGroupArgs;
 * import com.pulumi.azure.authorization.UserAssignedIdentity;
 * import com.pulumi.azure.authorization.UserAssignedIdentityArgs;
 * import com.pulumi.azure.mysql.FlexibleServer;
 * import com.pulumi.azure.mysql.FlexibleServerArgs;
 * import com.pulumi.azure.mysql.inputs.FlexibleServerIdentityArgs;
 * import com.pulumi.azure.mysql.FlexibleServerActiveDirectoryAdministratory;
 * import com.pulumi.azure.mysql.FlexibleServerActiveDirectoryAdministratoryArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         final var current = CoreFunctions.getClientConfig(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference);
 * 
 *         var example = new ResourceGroup("example", ResourceGroupArgs.builder()
 *             .name("example-resources")
 *             .location("West Europe")
 *             .build());
 * 
 *         var exampleUserAssignedIdentity = new UserAssignedIdentity("exampleUserAssignedIdentity", UserAssignedIdentityArgs.builder()
 *             .name("exampleUAI")
 *             .resourceGroupName(example.name())
 *             .location(example.location())
 *             .build());
 * 
 *         var exampleFlexibleServer = new FlexibleServer("exampleFlexibleServer", FlexibleServerArgs.builder()
 *             .name("example-mysqlfs")
 *             .resourceGroupName(example.name())
 *             .location(example.location())
 *             .administratorLogin("_admin_Terraform_892123456789312")
 *             .administratorPassword("QAZwsx123")
 *             .skuName("B_Standard_B1ms")
 *             .zone("2")
 *             .identity(FlexibleServerIdentityArgs.builder()
 *                 .type("UserAssigned")
 *                 .identityIds(exampleUserAssignedIdentity.id())
 *                 .build())
 *             .build());
 * 
 *         var exampleFlexibleServerActiveDirectoryAdministratory = new FlexibleServerActiveDirectoryAdministratory("exampleFlexibleServerActiveDirectoryAdministratory", FlexibleServerActiveDirectoryAdministratoryArgs.builder()
 *             .serverId(exampleFlexibleServer.id())
 *             .identityId(exampleUserAssignedIdentity.id())
 *             .login("sqladmin")
 *             .objectId(current.clientId())
 *             .tenantId(current.tenantId())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## API Providers
 * 
 * &lt;!-- This section is generated, changes will be overwritten --&gt;
 * This resource uses the following Azure API Providers:
 * 
 * * `Microsoft.DBforMySQL`: 2023-12-30
 * 
 * ## Import
 * 
 * A MySQL Flexible Server Active Directory Administrator can be imported using the `resource id`, e.g.
 * 
 * ```sh
 * $ pulumi import azure:mysql/flexibleServerActiveDirectoryAdministratory:FlexibleServerActiveDirectoryAdministratory example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resourceGroup1/providers/Microsoft.DBforMySQL/flexibleServers/server1/administrators/ActiveDirectory
 * ```
 * 
 */
@ResourceType(type="azure:mysql/flexibleServerActiveDirectoryAdministratory:FlexibleServerActiveDirectoryAdministratory")
public class FlexibleServerActiveDirectoryAdministratory extends com.pulumi.resources.CustomResource {
    /**
     * The resource ID of the identity used for AAD Authentication.
     * 
     */
    @Export(name="identityId", refs={String.class}, tree="[0]")
    private Output<String> identityId;

    /**
     * @return The resource ID of the identity used for AAD Authentication.
     * 
     */
    public Output<String> identityId() {
        return this.identityId;
    }
    /**
     * The login name of the principal to set as the server administrator
     * 
     */
    @Export(name="login", refs={String.class}, tree="[0]")
    private Output<String> login;

    /**
     * @return The login name of the principal to set as the server administrator
     * 
     */
    public Output<String> login() {
        return this.login;
    }
    /**
     * The ID of the principal to set as the server administrator. For a managed identity this should be the Client ID of the identity.
     * 
     */
    @Export(name="objectId", refs={String.class}, tree="[0]")
    private Output<String> objectId;

    /**
     * @return The ID of the principal to set as the server administrator. For a managed identity this should be the Client ID of the identity.
     * 
     */
    public Output<String> objectId() {
        return this.objectId;
    }
    /**
     * The resource ID of the MySQL Flexible Server. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="serverId", refs={String.class}, tree="[0]")
    private Output<String> serverId;

    /**
     * @return The resource ID of the MySQL Flexible Server. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> serverId() {
        return this.serverId;
    }
    /**
     * The Azure Tenant ID.
     * 
     */
    @Export(name="tenantId", refs={String.class}, tree="[0]")
    private Output<String> tenantId;

    /**
     * @return The Azure Tenant ID.
     * 
     */
    public Output<String> tenantId() {
        return this.tenantId;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public FlexibleServerActiveDirectoryAdministratory(java.lang.String name) {
        this(name, FlexibleServerActiveDirectoryAdministratoryArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public FlexibleServerActiveDirectoryAdministratory(java.lang.String name, FlexibleServerActiveDirectoryAdministratoryArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public FlexibleServerActiveDirectoryAdministratory(java.lang.String name, FlexibleServerActiveDirectoryAdministratoryArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:mysql/flexibleServerActiveDirectoryAdministratory:FlexibleServerActiveDirectoryAdministratory", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private FlexibleServerActiveDirectoryAdministratory(java.lang.String name, Output<java.lang.String> id, @Nullable FlexibleServerActiveDirectoryAdministratoryState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:mysql/flexibleServerActiveDirectoryAdministratory:FlexibleServerActiveDirectoryAdministratory", name, state, makeResourceOptions(options, id), false);
    }

    private static FlexibleServerActiveDirectoryAdministratoryArgs makeArgs(FlexibleServerActiveDirectoryAdministratoryArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? FlexibleServerActiveDirectoryAdministratoryArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .aliases(List.of(
                Output.of(Alias.builder().type("azure:mysql/flexibleServerActiveDirectoryAdministrator:FlexibleServerActiveDirectoryAdministrator").build())
            ))
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static FlexibleServerActiveDirectoryAdministratory get(java.lang.String name, Output<java.lang.String> id, @Nullable FlexibleServerActiveDirectoryAdministratoryState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new FlexibleServerActiveDirectoryAdministratory(name, id, state, options);
    }
}
