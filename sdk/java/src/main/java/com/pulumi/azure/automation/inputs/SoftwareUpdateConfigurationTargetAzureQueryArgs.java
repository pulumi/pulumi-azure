// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.automation.inputs;

import com.pulumi.azure.automation.inputs.SoftwareUpdateConfigurationTargetAzureQueryTagArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SoftwareUpdateConfigurationTargetAzureQueryArgs extends com.pulumi.resources.ResourceArgs {

    public static final SoftwareUpdateConfigurationTargetAzureQueryArgs Empty = new SoftwareUpdateConfigurationTargetAzureQueryArgs();

    /**
     * Specifies a list of locations to scope the query to.
     * 
     */
    @Import(name="locations")
    private @Nullable Output<List<String>> locations;

    /**
     * @return Specifies a list of locations to scope the query to.
     * 
     */
    public Optional<Output<List<String>>> locations() {
        return Optional.ofNullable(this.locations);
    }

    /**
     * Specifies a list of Subscription or Resource Group ARM Ids to query.
     * 
     */
    @Import(name="scopes")
    private @Nullable Output<List<String>> scopes;

    /**
     * @return Specifies a list of Subscription or Resource Group ARM Ids to query.
     * 
     */
    public Optional<Output<List<String>>> scopes() {
        return Optional.ofNullable(this.scopes);
    }

    /**
     * Specifies how the specified tags to filter VMs. Possible values are `Any` and `All`.
     * 
     */
    @Import(name="tagFilter")
    private @Nullable Output<String> tagFilter;

    /**
     * @return Specifies how the specified tags to filter VMs. Possible values are `Any` and `All`.
     * 
     */
    public Optional<Output<String>> tagFilter() {
        return Optional.ofNullable(this.tagFilter);
    }

    /**
     * A mapping of tags used for query filter. One or more `tags` block as defined below.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<List<SoftwareUpdateConfigurationTargetAzureQueryTagArgs>> tags;

    /**
     * @return A mapping of tags used for query filter. One or more `tags` block as defined below.
     * 
     */
    public Optional<Output<List<SoftwareUpdateConfigurationTargetAzureQueryTagArgs>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private SoftwareUpdateConfigurationTargetAzureQueryArgs() {}

    private SoftwareUpdateConfigurationTargetAzureQueryArgs(SoftwareUpdateConfigurationTargetAzureQueryArgs $) {
        this.locations = $.locations;
        this.scopes = $.scopes;
        this.tagFilter = $.tagFilter;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SoftwareUpdateConfigurationTargetAzureQueryArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SoftwareUpdateConfigurationTargetAzureQueryArgs $;

        public Builder() {
            $ = new SoftwareUpdateConfigurationTargetAzureQueryArgs();
        }

        public Builder(SoftwareUpdateConfigurationTargetAzureQueryArgs defaults) {
            $ = new SoftwareUpdateConfigurationTargetAzureQueryArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param locations Specifies a list of locations to scope the query to.
         * 
         * @return builder
         * 
         */
        public Builder locations(@Nullable Output<List<String>> locations) {
            $.locations = locations;
            return this;
        }

        /**
         * @param locations Specifies a list of locations to scope the query to.
         * 
         * @return builder
         * 
         */
        public Builder locations(List<String> locations) {
            return locations(Output.of(locations));
        }

        /**
         * @param locations Specifies a list of locations to scope the query to.
         * 
         * @return builder
         * 
         */
        public Builder locations(String... locations) {
            return locations(List.of(locations));
        }

        /**
         * @param scopes Specifies a list of Subscription or Resource Group ARM Ids to query.
         * 
         * @return builder
         * 
         */
        public Builder scopes(@Nullable Output<List<String>> scopes) {
            $.scopes = scopes;
            return this;
        }

        /**
         * @param scopes Specifies a list of Subscription or Resource Group ARM Ids to query.
         * 
         * @return builder
         * 
         */
        public Builder scopes(List<String> scopes) {
            return scopes(Output.of(scopes));
        }

        /**
         * @param scopes Specifies a list of Subscription or Resource Group ARM Ids to query.
         * 
         * @return builder
         * 
         */
        public Builder scopes(String... scopes) {
            return scopes(List.of(scopes));
        }

        /**
         * @param tagFilter Specifies how the specified tags to filter VMs. Possible values are `Any` and `All`.
         * 
         * @return builder
         * 
         */
        public Builder tagFilter(@Nullable Output<String> tagFilter) {
            $.tagFilter = tagFilter;
            return this;
        }

        /**
         * @param tagFilter Specifies how the specified tags to filter VMs. Possible values are `Any` and `All`.
         * 
         * @return builder
         * 
         */
        public Builder tagFilter(String tagFilter) {
            return tagFilter(Output.of(tagFilter));
        }

        /**
         * @param tags A mapping of tags used for query filter. One or more `tags` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<List<SoftwareUpdateConfigurationTargetAzureQueryTagArgs>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags A mapping of tags used for query filter. One or more `tags` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder tags(List<SoftwareUpdateConfigurationTargetAzureQueryTagArgs> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param tags A mapping of tags used for query filter. One or more `tags` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder tags(SoftwareUpdateConfigurationTargetAzureQueryTagArgs... tags) {
            return tags(List.of(tags));
        }

        public SoftwareUpdateConfigurationTargetAzureQueryArgs build() {
            return $;
        }
    }

}
