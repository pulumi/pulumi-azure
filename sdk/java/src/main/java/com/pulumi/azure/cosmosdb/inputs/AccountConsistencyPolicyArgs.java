// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.cosmosdb.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AccountConsistencyPolicyArgs extends com.pulumi.resources.ResourceArgs {

    public static final AccountConsistencyPolicyArgs Empty = new AccountConsistencyPolicyArgs();

    /**
     * The Consistency Level to use for this CosmosDB Account - can be either `BoundedStaleness`, `Eventual`, `Session`, `Strong` or `ConsistentPrefix`.
     * 
     */
    @Import(name="consistencyLevel", required=true)
    private Output<String> consistencyLevel;

    /**
     * @return The Consistency Level to use for this CosmosDB Account - can be either `BoundedStaleness`, `Eventual`, `Session`, `Strong` or `ConsistentPrefix`.
     * 
     */
    public Output<String> consistencyLevel() {
        return this.consistencyLevel;
    }

    /**
     * When used with the Bounded Staleness consistency level, this value represents the time amount of staleness (in seconds) tolerated. The accepted range for this value is `5` - `86400` (1 day). Defaults to `5`. Required when `consistency_level` is set to `BoundedStaleness`.
     * 
     */
    @Import(name="maxIntervalInSeconds")
    private @Nullable Output<Integer> maxIntervalInSeconds;

    /**
     * @return When used with the Bounded Staleness consistency level, this value represents the time amount of staleness (in seconds) tolerated. The accepted range for this value is `5` - `86400` (1 day). Defaults to `5`. Required when `consistency_level` is set to `BoundedStaleness`.
     * 
     */
    public Optional<Output<Integer>> maxIntervalInSeconds() {
        return Optional.ofNullable(this.maxIntervalInSeconds);
    }

    /**
     * When used with the Bounded Staleness consistency level, this value represents the number of stale requests tolerated. The accepted range for this value is `10` – `2147483647`. Defaults to `100`. Required when `consistency_level` is set to `BoundedStaleness`.
     * 
     * &gt; **Note:** `max_interval_in_seconds` and `max_staleness_prefix` can only be set to custom values when `consistency_level` is set to `BoundedStaleness` - otherwise they will return the default values shown above.
     * 
     */
    @Import(name="maxStalenessPrefix")
    private @Nullable Output<Integer> maxStalenessPrefix;

    /**
     * @return When used with the Bounded Staleness consistency level, this value represents the number of stale requests tolerated. The accepted range for this value is `10` – `2147483647`. Defaults to `100`. Required when `consistency_level` is set to `BoundedStaleness`.
     * 
     * &gt; **Note:** `max_interval_in_seconds` and `max_staleness_prefix` can only be set to custom values when `consistency_level` is set to `BoundedStaleness` - otherwise they will return the default values shown above.
     * 
     */
    public Optional<Output<Integer>> maxStalenessPrefix() {
        return Optional.ofNullable(this.maxStalenessPrefix);
    }

    private AccountConsistencyPolicyArgs() {}

    private AccountConsistencyPolicyArgs(AccountConsistencyPolicyArgs $) {
        this.consistencyLevel = $.consistencyLevel;
        this.maxIntervalInSeconds = $.maxIntervalInSeconds;
        this.maxStalenessPrefix = $.maxStalenessPrefix;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AccountConsistencyPolicyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AccountConsistencyPolicyArgs $;

        public Builder() {
            $ = new AccountConsistencyPolicyArgs();
        }

        public Builder(AccountConsistencyPolicyArgs defaults) {
            $ = new AccountConsistencyPolicyArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param consistencyLevel The Consistency Level to use for this CosmosDB Account - can be either `BoundedStaleness`, `Eventual`, `Session`, `Strong` or `ConsistentPrefix`.
         * 
         * @return builder
         * 
         */
        public Builder consistencyLevel(Output<String> consistencyLevel) {
            $.consistencyLevel = consistencyLevel;
            return this;
        }

        /**
         * @param consistencyLevel The Consistency Level to use for this CosmosDB Account - can be either `BoundedStaleness`, `Eventual`, `Session`, `Strong` or `ConsistentPrefix`.
         * 
         * @return builder
         * 
         */
        public Builder consistencyLevel(String consistencyLevel) {
            return consistencyLevel(Output.of(consistencyLevel));
        }

        /**
         * @param maxIntervalInSeconds When used with the Bounded Staleness consistency level, this value represents the time amount of staleness (in seconds) tolerated. The accepted range for this value is `5` - `86400` (1 day). Defaults to `5`. Required when `consistency_level` is set to `BoundedStaleness`.
         * 
         * @return builder
         * 
         */
        public Builder maxIntervalInSeconds(@Nullable Output<Integer> maxIntervalInSeconds) {
            $.maxIntervalInSeconds = maxIntervalInSeconds;
            return this;
        }

        /**
         * @param maxIntervalInSeconds When used with the Bounded Staleness consistency level, this value represents the time amount of staleness (in seconds) tolerated. The accepted range for this value is `5` - `86400` (1 day). Defaults to `5`. Required when `consistency_level` is set to `BoundedStaleness`.
         * 
         * @return builder
         * 
         */
        public Builder maxIntervalInSeconds(Integer maxIntervalInSeconds) {
            return maxIntervalInSeconds(Output.of(maxIntervalInSeconds));
        }

        /**
         * @param maxStalenessPrefix When used with the Bounded Staleness consistency level, this value represents the number of stale requests tolerated. The accepted range for this value is `10` – `2147483647`. Defaults to `100`. Required when `consistency_level` is set to `BoundedStaleness`.
         * 
         * &gt; **Note:** `max_interval_in_seconds` and `max_staleness_prefix` can only be set to custom values when `consistency_level` is set to `BoundedStaleness` - otherwise they will return the default values shown above.
         * 
         * @return builder
         * 
         */
        public Builder maxStalenessPrefix(@Nullable Output<Integer> maxStalenessPrefix) {
            $.maxStalenessPrefix = maxStalenessPrefix;
            return this;
        }

        /**
         * @param maxStalenessPrefix When used with the Bounded Staleness consistency level, this value represents the number of stale requests tolerated. The accepted range for this value is `10` – `2147483647`. Defaults to `100`. Required when `consistency_level` is set to `BoundedStaleness`.
         * 
         * &gt; **Note:** `max_interval_in_seconds` and `max_staleness_prefix` can only be set to custom values when `consistency_level` is set to `BoundedStaleness` - otherwise they will return the default values shown above.
         * 
         * @return builder
         * 
         */
        public Builder maxStalenessPrefix(Integer maxStalenessPrefix) {
            return maxStalenessPrefix(Output.of(maxStalenessPrefix));
        }

        public AccountConsistencyPolicyArgs build() {
            if ($.consistencyLevel == null) {
                throw new MissingRequiredPropertyException("AccountConsistencyPolicyArgs", "consistencyLevel");
            }
            return $;
        }
    }

}
