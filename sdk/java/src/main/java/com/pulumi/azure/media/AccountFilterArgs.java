// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.media;

import com.pulumi.azure.media.inputs.AccountFilterPresentationTimeRangeArgs;
import com.pulumi.azure.media.inputs.AccountFilterTrackSelectionArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AccountFilterArgs extends com.pulumi.resources.ResourceArgs {

    public static final AccountFilterArgs Empty = new AccountFilterArgs();

    @Import(name="firstQualityBitrate")
    private @Nullable Output<Integer> firstQualityBitrate;

    public Optional<Output<Integer>> firstQualityBitrate() {
        return Optional.ofNullable(this.firstQualityBitrate);
    }

    @Import(name="mediaServicesAccountName", required=true)
    private Output<String> mediaServicesAccountName;

    public Output<String> mediaServicesAccountName() {
        return this.mediaServicesAccountName;
    }

    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="presentationTimeRange")
    private @Nullable Output<AccountFilterPresentationTimeRangeArgs> presentationTimeRange;

    public Optional<Output<AccountFilterPresentationTimeRangeArgs>> presentationTimeRange() {
        return Optional.ofNullable(this.presentationTimeRange);
    }

    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    @Import(name="trackSelections")
    private @Nullable Output<List<AccountFilterTrackSelectionArgs>> trackSelections;

    public Optional<Output<List<AccountFilterTrackSelectionArgs>>> trackSelections() {
        return Optional.ofNullable(this.trackSelections);
    }

    private AccountFilterArgs() {}

    private AccountFilterArgs(AccountFilterArgs $) {
        this.firstQualityBitrate = $.firstQualityBitrate;
        this.mediaServicesAccountName = $.mediaServicesAccountName;
        this.name = $.name;
        this.presentationTimeRange = $.presentationTimeRange;
        this.resourceGroupName = $.resourceGroupName;
        this.trackSelections = $.trackSelections;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AccountFilterArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AccountFilterArgs $;

        public Builder() {
            $ = new AccountFilterArgs();
        }

        public Builder(AccountFilterArgs defaults) {
            $ = new AccountFilterArgs(Objects.requireNonNull(defaults));
        }

        public Builder firstQualityBitrate(@Nullable Output<Integer> firstQualityBitrate) {
            $.firstQualityBitrate = firstQualityBitrate;
            return this;
        }

        public Builder firstQualityBitrate(Integer firstQualityBitrate) {
            return firstQualityBitrate(Output.of(firstQualityBitrate));
        }

        public Builder mediaServicesAccountName(Output<String> mediaServicesAccountName) {
            $.mediaServicesAccountName = mediaServicesAccountName;
            return this;
        }

        public Builder mediaServicesAccountName(String mediaServicesAccountName) {
            return mediaServicesAccountName(Output.of(mediaServicesAccountName));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder presentationTimeRange(@Nullable Output<AccountFilterPresentationTimeRangeArgs> presentationTimeRange) {
            $.presentationTimeRange = presentationTimeRange;
            return this;
        }

        public Builder presentationTimeRange(AccountFilterPresentationTimeRangeArgs presentationTimeRange) {
            return presentationTimeRange(Output.of(presentationTimeRange));
        }

        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        public Builder trackSelections(@Nullable Output<List<AccountFilterTrackSelectionArgs>> trackSelections) {
            $.trackSelections = trackSelections;
            return this;
        }

        public Builder trackSelections(List<AccountFilterTrackSelectionArgs> trackSelections) {
            return trackSelections(Output.of(trackSelections));
        }

        public Builder trackSelections(AccountFilterTrackSelectionArgs... trackSelections) {
            return trackSelections(List.of(trackSelections));
        }

        public AccountFilterArgs build() {
            if ($.mediaServicesAccountName == null) {
                throw new MissingRequiredPropertyException("AccountFilterArgs", "mediaServicesAccountName");
            }
            if ($.resourceGroupName == null) {
                throw new MissingRequiredPropertyException("AccountFilterArgs", "resourceGroupName");
            }
            return $;
        }
    }

}
