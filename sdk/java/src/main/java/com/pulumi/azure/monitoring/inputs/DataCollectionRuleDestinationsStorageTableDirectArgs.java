// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.monitoring.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class DataCollectionRuleDestinationsStorageTableDirectArgs extends com.pulumi.resources.ResourceArgs {

    public static final DataCollectionRuleDestinationsStorageTableDirectArgs Empty = new DataCollectionRuleDestinationsStorageTableDirectArgs();

    /**
     * The name which should be used for this destination. This name should be unique across all destinations regardless of type within the Data Collection Rule.
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    /**
     * @return The name which should be used for this destination. This name should be unique across all destinations regardless of type within the Data Collection Rule.
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    /**
     * The resource ID of the Storage Account.
     * 
     */
    @Import(name="storageAccountId", required=true)
    private Output<String> storageAccountId;

    /**
     * @return The resource ID of the Storage Account.
     * 
     */
    public Output<String> storageAccountId() {
        return this.storageAccountId;
    }

    /**
     * The Storage Table name.
     * 
     */
    @Import(name="tableName", required=true)
    private Output<String> tableName;

    /**
     * @return The Storage Table name.
     * 
     */
    public Output<String> tableName() {
        return this.tableName;
    }

    private DataCollectionRuleDestinationsStorageTableDirectArgs() {}

    private DataCollectionRuleDestinationsStorageTableDirectArgs(DataCollectionRuleDestinationsStorageTableDirectArgs $) {
        this.name = $.name;
        this.storageAccountId = $.storageAccountId;
        this.tableName = $.tableName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DataCollectionRuleDestinationsStorageTableDirectArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DataCollectionRuleDestinationsStorageTableDirectArgs $;

        public Builder() {
            $ = new DataCollectionRuleDestinationsStorageTableDirectArgs();
        }

        public Builder(DataCollectionRuleDestinationsStorageTableDirectArgs defaults) {
            $ = new DataCollectionRuleDestinationsStorageTableDirectArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param name The name which should be used for this destination. This name should be unique across all destinations regardless of type within the Data Collection Rule.
         * 
         * @return builder
         * 
         */
        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name which should be used for this destination. This name should be unique across all destinations regardless of type within the Data Collection Rule.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param storageAccountId The resource ID of the Storage Account.
         * 
         * @return builder
         * 
         */
        public Builder storageAccountId(Output<String> storageAccountId) {
            $.storageAccountId = storageAccountId;
            return this;
        }

        /**
         * @param storageAccountId The resource ID of the Storage Account.
         * 
         * @return builder
         * 
         */
        public Builder storageAccountId(String storageAccountId) {
            return storageAccountId(Output.of(storageAccountId));
        }

        /**
         * @param tableName The Storage Table name.
         * 
         * @return builder
         * 
         */
        public Builder tableName(Output<String> tableName) {
            $.tableName = tableName;
            return this;
        }

        /**
         * @param tableName The Storage Table name.
         * 
         * @return builder
         * 
         */
        public Builder tableName(String tableName) {
            return tableName(Output.of(tableName));
        }

        public DataCollectionRuleDestinationsStorageTableDirectArgs build() {
            if ($.name == null) {
                throw new MissingRequiredPropertyException("DataCollectionRuleDestinationsStorageTableDirectArgs", "name");
            }
            if ($.storageAccountId == null) {
                throw new MissingRequiredPropertyException("DataCollectionRuleDestinationsStorageTableDirectArgs", "storageAccountId");
            }
            if ($.tableName == null) {
                throw new MissingRequiredPropertyException("DataCollectionRuleDestinationsStorageTableDirectArgs", "tableName");
            }
            return $;
        }
    }

}
