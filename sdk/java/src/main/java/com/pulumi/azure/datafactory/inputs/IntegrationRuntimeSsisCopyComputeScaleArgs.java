// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.datafactory.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class IntegrationRuntimeSsisCopyComputeScaleArgs extends com.pulumi.resources.ResourceArgs {

    public static final IntegrationRuntimeSsisCopyComputeScaleArgs Empty = new IntegrationRuntimeSsisCopyComputeScaleArgs();

    /**
     * Specifies the data integration unit number setting reserved for copy activity execution. Supported values are multiples of `4` in range 4-256.
     * 
     */
    @Import(name="dataIntegrationUnit")
    private @Nullable Output<Integer> dataIntegrationUnit;

    /**
     * @return Specifies the data integration unit number setting reserved for copy activity execution. Supported values are multiples of `4` in range 4-256.
     * 
     */
    public Optional<Output<Integer>> dataIntegrationUnit() {
        return Optional.ofNullable(this.dataIntegrationUnit);
    }

    /**
     * Specifies the time to live (in minutes) setting of integration runtime which will execute copy activity. Possible values are at least `5`.
     * 
     */
    @Import(name="timeToLive")
    private @Nullable Output<Integer> timeToLive;

    /**
     * @return Specifies the time to live (in minutes) setting of integration runtime which will execute copy activity. Possible values are at least `5`.
     * 
     */
    public Optional<Output<Integer>> timeToLive() {
        return Optional.ofNullable(this.timeToLive);
    }

    private IntegrationRuntimeSsisCopyComputeScaleArgs() {}

    private IntegrationRuntimeSsisCopyComputeScaleArgs(IntegrationRuntimeSsisCopyComputeScaleArgs $) {
        this.dataIntegrationUnit = $.dataIntegrationUnit;
        this.timeToLive = $.timeToLive;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(IntegrationRuntimeSsisCopyComputeScaleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private IntegrationRuntimeSsisCopyComputeScaleArgs $;

        public Builder() {
            $ = new IntegrationRuntimeSsisCopyComputeScaleArgs();
        }

        public Builder(IntegrationRuntimeSsisCopyComputeScaleArgs defaults) {
            $ = new IntegrationRuntimeSsisCopyComputeScaleArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param dataIntegrationUnit Specifies the data integration unit number setting reserved for copy activity execution. Supported values are multiples of `4` in range 4-256.
         * 
         * @return builder
         * 
         */
        public Builder dataIntegrationUnit(@Nullable Output<Integer> dataIntegrationUnit) {
            $.dataIntegrationUnit = dataIntegrationUnit;
            return this;
        }

        /**
         * @param dataIntegrationUnit Specifies the data integration unit number setting reserved for copy activity execution. Supported values are multiples of `4` in range 4-256.
         * 
         * @return builder
         * 
         */
        public Builder dataIntegrationUnit(Integer dataIntegrationUnit) {
            return dataIntegrationUnit(Output.of(dataIntegrationUnit));
        }

        /**
         * @param timeToLive Specifies the time to live (in minutes) setting of integration runtime which will execute copy activity. Possible values are at least `5`.
         * 
         * @return builder
         * 
         */
        public Builder timeToLive(@Nullable Output<Integer> timeToLive) {
            $.timeToLive = timeToLive;
            return this;
        }

        /**
         * @param timeToLive Specifies the time to live (in minutes) setting of integration runtime which will execute copy activity. Possible values are at least `5`.
         * 
         * @return builder
         * 
         */
        public Builder timeToLive(Integer timeToLive) {
            return timeToLive(Output.of(timeToLive));
        }

        public IntegrationRuntimeSsisCopyComputeScaleArgs build() {
            return $;
        }
    }

}
