// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.maintenance.outputs;

import com.pulumi.azure.maintenance.outputs.GetPublicConfigurationsConfig;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetPublicConfigurationsResult {
    /**
     * @return A `configs` block as defined below.
     * 
     */
    private final List<GetPublicConfigurationsConfig> configs;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private final String id;
    /**
     * @return The Azure location of the Public Maintenance Configuration.
     * 
     */
    private final @Nullable String location;
    /**
     * @return The rate at which a maintenance window is expected to recur.
     * 
     */
    private final @Nullable String recurEvery;
    private final @Nullable String scope;

    @CustomType.Constructor
    private GetPublicConfigurationsResult(
        @CustomType.Parameter("configs") List<GetPublicConfigurationsConfig> configs,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("location") @Nullable String location,
        @CustomType.Parameter("recurEvery") @Nullable String recurEvery,
        @CustomType.Parameter("scope") @Nullable String scope) {
        this.configs = configs;
        this.id = id;
        this.location = location;
        this.recurEvery = recurEvery;
        this.scope = scope;
    }

    /**
     * @return A `configs` block as defined below.
     * 
     */
    public List<GetPublicConfigurationsConfig> configs() {
        return this.configs;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The Azure location of the Public Maintenance Configuration.
     * 
     */
    public Optional<String> location() {
        return Optional.ofNullable(this.location);
    }
    /**
     * @return The rate at which a maintenance window is expected to recur.
     * 
     */
    public Optional<String> recurEvery() {
        return Optional.ofNullable(this.recurEvery);
    }
    public Optional<String> scope() {
        return Optional.ofNullable(this.scope);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetPublicConfigurationsResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private List<GetPublicConfigurationsConfig> configs;
        private String id;
        private @Nullable String location;
        private @Nullable String recurEvery;
        private @Nullable String scope;

        public Builder() {
    	      // Empty
        }

        public Builder(GetPublicConfigurationsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.configs = defaults.configs;
    	      this.id = defaults.id;
    	      this.location = defaults.location;
    	      this.recurEvery = defaults.recurEvery;
    	      this.scope = defaults.scope;
        }

        public Builder configs(List<GetPublicConfigurationsConfig> configs) {
            this.configs = Objects.requireNonNull(configs);
            return this;
        }
        public Builder configs(GetPublicConfigurationsConfig... configs) {
            return configs(List.of(configs));
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder location(@Nullable String location) {
            this.location = location;
            return this;
        }
        public Builder recurEvery(@Nullable String recurEvery) {
            this.recurEvery = recurEvery;
            return this;
        }
        public Builder scope(@Nullable String scope) {
            this.scope = scope;
            return this;
        }        public GetPublicConfigurationsResult build() {
            return new GetPublicConfigurationsResult(configs, id, location, recurEvery, scope);
        }
    }
}
