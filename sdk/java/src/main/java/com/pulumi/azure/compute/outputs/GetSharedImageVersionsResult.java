// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.compute.outputs;

import com.pulumi.azure.compute.outputs.GetSharedImageVersionsImage;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class GetSharedImageVersionsResult {
    private String galleryName;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private String imageName;
    /**
     * @return An `images` block as defined below:
     * 
     */
    private List<GetSharedImageVersionsImage> images;
    private String resourceGroupName;
    private @Nullable Map<String,String> tagsFilter;

    private GetSharedImageVersionsResult() {}
    public String galleryName() {
        return this.galleryName;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public String imageName() {
        return this.imageName;
    }
    /**
     * @return An `images` block as defined below:
     * 
     */
    public List<GetSharedImageVersionsImage> images() {
        return this.images;
    }
    public String resourceGroupName() {
        return this.resourceGroupName;
    }
    public Map<String,String> tagsFilter() {
        return this.tagsFilter == null ? Map.of() : this.tagsFilter;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSharedImageVersionsResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String galleryName;
        private String id;
        private String imageName;
        private List<GetSharedImageVersionsImage> images;
        private String resourceGroupName;
        private @Nullable Map<String,String> tagsFilter;
        public Builder() {}
        public Builder(GetSharedImageVersionsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.galleryName = defaults.galleryName;
    	      this.id = defaults.id;
    	      this.imageName = defaults.imageName;
    	      this.images = defaults.images;
    	      this.resourceGroupName = defaults.resourceGroupName;
    	      this.tagsFilter = defaults.tagsFilter;
        }

        @CustomType.Setter
        public Builder galleryName(String galleryName) {
            if (galleryName == null) {
              throw new MissingRequiredPropertyException("GetSharedImageVersionsResult", "galleryName");
            }
            this.galleryName = galleryName;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetSharedImageVersionsResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder imageName(String imageName) {
            if (imageName == null) {
              throw new MissingRequiredPropertyException("GetSharedImageVersionsResult", "imageName");
            }
            this.imageName = imageName;
            return this;
        }
        @CustomType.Setter
        public Builder images(List<GetSharedImageVersionsImage> images) {
            if (images == null) {
              throw new MissingRequiredPropertyException("GetSharedImageVersionsResult", "images");
            }
            this.images = images;
            return this;
        }
        public Builder images(GetSharedImageVersionsImage... images) {
            return images(List.of(images));
        }
        @CustomType.Setter
        public Builder resourceGroupName(String resourceGroupName) {
            if (resourceGroupName == null) {
              throw new MissingRequiredPropertyException("GetSharedImageVersionsResult", "resourceGroupName");
            }
            this.resourceGroupName = resourceGroupName;
            return this;
        }
        @CustomType.Setter
        public Builder tagsFilter(@Nullable Map<String,String> tagsFilter) {

            this.tagsFilter = tagsFilter;
            return this;
        }
        public GetSharedImageVersionsResult build() {
            final var _resultValue = new GetSharedImageVersionsResult();
            _resultValue.galleryName = galleryName;
            _resultValue.id = id;
            _resultValue.imageName = imageName;
            _resultValue.images = images;
            _resultValue.resourceGroupName = resourceGroupName;
            _resultValue.tagsFilter = tagsFilter;
            return _resultValue;
        }
    }
}
