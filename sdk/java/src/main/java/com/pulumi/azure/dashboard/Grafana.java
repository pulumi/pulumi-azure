// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.dashboard;

import com.pulumi.azure.Utilities;
import com.pulumi.azure.dashboard.GrafanaArgs;
import com.pulumi.azure.dashboard.inputs.GrafanaState;
import com.pulumi.azure.dashboard.outputs.GrafanaAzureMonitorWorkspaceIntegration;
import com.pulumi.azure.dashboard.outputs.GrafanaIdentity;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Manages a Dashboard Grafana.
 * 
 * ## Example Usage
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.azure.core.ResourceGroup;
 * import com.pulumi.azure.core.ResourceGroupArgs;
 * import com.pulumi.azure.dashboard.Grafana;
 * import com.pulumi.azure.dashboard.GrafanaArgs;
 * import com.pulumi.azure.dashboard.inputs.GrafanaIdentityArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var exampleResourceGroup = new ResourceGroup(&#34;exampleResourceGroup&#34;, ResourceGroupArgs.builder()        
 *             .location(&#34;West Europe&#34;)
 *             .build());
 * 
 *         var exampleGrafana = new Grafana(&#34;exampleGrafana&#34;, GrafanaArgs.builder()        
 *             .resourceGroupName(exampleResourceGroup.name())
 *             .location(&#34;West Europe&#34;)
 *             .apiKeyEnabled(true)
 *             .deterministicOutboundIpEnabled(true)
 *             .publicNetworkAccessEnabled(false)
 *             .identity(GrafanaIdentityArgs.builder()
 *                 .type(&#34;SystemAssigned&#34;)
 *                 .build())
 *             .tags(Map.of(&#34;key&#34;, &#34;value&#34;))
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * Dashboard Grafana can be imported using the `resource id`, e.g.
 * 
 * ```sh
 *  $ pulumi import azure:dashboard/grafana:Grafana example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resourceGroup1/providers/Microsoft.Dashboard/grafana/workspace1
 * ```
 * 
 */
@ResourceType(type="azure:dashboard/grafana:Grafana")
public class Grafana extends com.pulumi.resources.CustomResource {
    /**
     * Whether to enable the api key setting of the Grafana instance. Defaults to `false`.
     * 
     */
    @Export(name="apiKeyEnabled", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> apiKeyEnabled;

    /**
     * @return Whether to enable the api key setting of the Grafana instance. Defaults to `false`.
     * 
     */
    public Output<Optional<Boolean>> apiKeyEnabled() {
        return Codegen.optional(this.apiKeyEnabled);
    }
    /**
     * Scope for dns deterministic name hash calculation. The only possible value is `TenantReuse`. Defaults to `TenantReuse`.
     * 
     */
    @Export(name="autoGeneratedDomainNameLabelScope", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> autoGeneratedDomainNameLabelScope;

    /**
     * @return Scope for dns deterministic name hash calculation. The only possible value is `TenantReuse`. Defaults to `TenantReuse`.
     * 
     */
    public Output<Optional<String>> autoGeneratedDomainNameLabelScope() {
        return Codegen.optional(this.autoGeneratedDomainNameLabelScope);
    }
    /**
     * A `azure_monitor_workspace_integrations` block as defined below.
     * 
     */
    @Export(name="azureMonitorWorkspaceIntegrations", refs={List.class,GrafanaAzureMonitorWorkspaceIntegration.class}, tree="[0,1]")
    private Output</* @Nullable */ List<GrafanaAzureMonitorWorkspaceIntegration>> azureMonitorWorkspaceIntegrations;

    /**
     * @return A `azure_monitor_workspace_integrations` block as defined below.
     * 
     */
    public Output<Optional<List<GrafanaAzureMonitorWorkspaceIntegration>>> azureMonitorWorkspaceIntegrations() {
        return Codegen.optional(this.azureMonitorWorkspaceIntegrations);
    }
    /**
     * Whether to enable the Grafana instance to use deterministic outbound IPs. Defaults to `false`.
     * 
     */
    @Export(name="deterministicOutboundIpEnabled", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> deterministicOutboundIpEnabled;

    /**
     * @return Whether to enable the Grafana instance to use deterministic outbound IPs. Defaults to `false`.
     * 
     */
    public Output<Optional<Boolean>> deterministicOutboundIpEnabled() {
        return Codegen.optional(this.deterministicOutboundIpEnabled);
    }
    /**
     * The endpoint of the Grafana instance.
     * 
     */
    @Export(name="endpoint", refs={String.class}, tree="[0]")
    private Output<String> endpoint;

    /**
     * @return The endpoint of the Grafana instance.
     * 
     */
    public Output<String> endpoint() {
        return this.endpoint;
    }
    /**
     * Which major version of Grafana to deploy. Defaults to `9`. Possible values are `9`, `10`. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="grafanaMajorVersion", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> grafanaMajorVersion;

    /**
     * @return Which major version of Grafana to deploy. Defaults to `9`. Possible values are `9`, `10`. Changing this forces a new resource to be created.
     * 
     */
    public Output<Optional<String>> grafanaMajorVersion() {
        return Codegen.optional(this.grafanaMajorVersion);
    }
    /**
     * The full Grafana software semantic version deployed.
     * 
     */
    @Export(name="grafanaVersion", refs={String.class}, tree="[0]")
    private Output<String> grafanaVersion;

    /**
     * @return The full Grafana software semantic version deployed.
     * 
     */
    public Output<String> grafanaVersion() {
        return this.grafanaVersion;
    }
    /**
     * An `identity` block as defined below. Changing this forces a new Dashboard Grafana to be created.
     * 
     */
    @Export(name="identity", refs={GrafanaIdentity.class}, tree="[0]")
    private Output</* @Nullable */ GrafanaIdentity> identity;

    /**
     * @return An `identity` block as defined below. Changing this forces a new Dashboard Grafana to be created.
     * 
     */
    public Output<Optional<GrafanaIdentity>> identity() {
        return Codegen.optional(this.identity);
    }
    /**
     * Specifies the Azure Region where the Dashboard Grafana should exist. Changing this forces a new Dashboard Grafana to be created.
     * 
     */
    @Export(name="location", refs={String.class}, tree="[0]")
    private Output<String> location;

    /**
     * @return Specifies the Azure Region where the Dashboard Grafana should exist. Changing this forces a new Dashboard Grafana to be created.
     * 
     */
    public Output<String> location() {
        return this.location;
    }
    /**
     * Specifies the name which should be used for this Dashboard Grafana. Changing this forces a new Dashboard Grafana to be created.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return Specifies the name which should be used for this Dashboard Grafana. Changing this forces a new Dashboard Grafana to be created.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * List of outbound IPs if deterministicOutboundIP is enabled.
     * 
     */
    @Export(name="outboundIps", refs={List.class,String.class}, tree="[0,1]")
    private Output<List<String>> outboundIps;

    /**
     * @return List of outbound IPs if deterministicOutboundIP is enabled.
     * 
     */
    public Output<List<String>> outboundIps() {
        return this.outboundIps;
    }
    /**
     * Whether to enable traffic over the public interface. Defaults to `true`.
     * 
     */
    @Export(name="publicNetworkAccessEnabled", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> publicNetworkAccessEnabled;

    /**
     * @return Whether to enable traffic over the public interface. Defaults to `true`.
     * 
     */
    public Output<Optional<Boolean>> publicNetworkAccessEnabled() {
        return Codegen.optional(this.publicNetworkAccessEnabled);
    }
    /**
     * Specifies the name of the Resource Group where the Dashboard Grafana should exist. Changing this forces a new Dashboard Grafana to be created.
     * 
     */
    @Export(name="resourceGroupName", refs={String.class}, tree="[0]")
    private Output<String> resourceGroupName;

    /**
     * @return Specifies the name of the Resource Group where the Dashboard Grafana should exist. Changing this forces a new Dashboard Grafana to be created.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }
    /**
     * The name of the SKU used for the Grafana instance. Possible values are `Standard` and `Essential`. Defaults to `Standard`. Changing this forces a new Dashboard Grafana to be created.
     * 
     */
    @Export(name="sku", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> sku;

    /**
     * @return The name of the SKU used for the Grafana instance. Possible values are `Standard` and `Essential`. Defaults to `Standard`. Changing this forces a new Dashboard Grafana to be created.
     * 
     */
    public Output<Optional<String>> sku() {
        return Codegen.optional(this.sku);
    }
    /**
     * A mapping of tags which should be assigned to the Dashboard Grafana.
     * 
     */
    @Export(name="tags", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output</* @Nullable */ Map<String,String>> tags;

    /**
     * @return A mapping of tags which should be assigned to the Dashboard Grafana.
     * 
     */
    public Output<Optional<Map<String,String>>> tags() {
        return Codegen.optional(this.tags);
    }
    /**
     * Whether to enable the zone redundancy setting of the Grafana instance. Defaults to `false`. Changing this forces a new Dashboard Grafana to be created.
     * 
     */
    @Export(name="zoneRedundancyEnabled", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> zoneRedundancyEnabled;

    /**
     * @return Whether to enable the zone redundancy setting of the Grafana instance. Defaults to `false`. Changing this forces a new Dashboard Grafana to be created.
     * 
     */
    public Output<Optional<Boolean>> zoneRedundancyEnabled() {
        return Codegen.optional(this.zoneRedundancyEnabled);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Grafana(String name) {
        this(name, GrafanaArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Grafana(String name, GrafanaArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Grafana(String name, GrafanaArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:dashboard/grafana:Grafana", name, args == null ? GrafanaArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private Grafana(String name, Output<String> id, @Nullable GrafanaState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:dashboard/grafana:Grafana", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Grafana get(String name, Output<String> id, @Nullable GrafanaState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Grafana(name, id, state, options);
    }
}
