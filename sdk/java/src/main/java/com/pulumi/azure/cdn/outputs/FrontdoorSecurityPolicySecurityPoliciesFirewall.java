// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.cdn.outputs;

import com.pulumi.azure.cdn.outputs.FrontdoorSecurityPolicySecurityPoliciesFirewallAssociation;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class FrontdoorSecurityPolicySecurityPoliciesFirewall {
    /**
     * @return An `association` block as defined below. Changing this forces a new Front Door Security Policy to be created.
     * 
     */
    private FrontdoorSecurityPolicySecurityPoliciesFirewallAssociation association;
    /**
     * @return The Resource Id of the Front Door Firewall Policy that should be linked to this Front Door Security Policy. Changing this forces a new Front Door Security Policy to be created.
     * 
     */
    private String cdnFrontdoorFirewallPolicyId;

    private FrontdoorSecurityPolicySecurityPoliciesFirewall() {}
    /**
     * @return An `association` block as defined below. Changing this forces a new Front Door Security Policy to be created.
     * 
     */
    public FrontdoorSecurityPolicySecurityPoliciesFirewallAssociation association() {
        return this.association;
    }
    /**
     * @return The Resource Id of the Front Door Firewall Policy that should be linked to this Front Door Security Policy. Changing this forces a new Front Door Security Policy to be created.
     * 
     */
    public String cdnFrontdoorFirewallPolicyId() {
        return this.cdnFrontdoorFirewallPolicyId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(FrontdoorSecurityPolicySecurityPoliciesFirewall defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private FrontdoorSecurityPolicySecurityPoliciesFirewallAssociation association;
        private String cdnFrontdoorFirewallPolicyId;
        public Builder() {}
        public Builder(FrontdoorSecurityPolicySecurityPoliciesFirewall defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.association = defaults.association;
    	      this.cdnFrontdoorFirewallPolicyId = defaults.cdnFrontdoorFirewallPolicyId;
        }

        @CustomType.Setter
        public Builder association(FrontdoorSecurityPolicySecurityPoliciesFirewallAssociation association) {
            if (association == null) {
              throw new MissingRequiredPropertyException("FrontdoorSecurityPolicySecurityPoliciesFirewall", "association");
            }
            this.association = association;
            return this;
        }
        @CustomType.Setter
        public Builder cdnFrontdoorFirewallPolicyId(String cdnFrontdoorFirewallPolicyId) {
            if (cdnFrontdoorFirewallPolicyId == null) {
              throw new MissingRequiredPropertyException("FrontdoorSecurityPolicySecurityPoliciesFirewall", "cdnFrontdoorFirewallPolicyId");
            }
            this.cdnFrontdoorFirewallPolicyId = cdnFrontdoorFirewallPolicyId;
            return this;
        }
        public FrontdoorSecurityPolicySecurityPoliciesFirewall build() {
            final var _resultValue = new FrontdoorSecurityPolicySecurityPoliciesFirewall();
            _resultValue.association = association;
            _resultValue.cdnFrontdoorFirewallPolicyId = cdnFrontdoorFirewallPolicyId;
            return _resultValue;
        }
    }
}
