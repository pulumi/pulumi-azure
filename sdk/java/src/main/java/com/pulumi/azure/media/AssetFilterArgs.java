// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.media;

import com.pulumi.azure.media.inputs.AssetFilterPresentationTimeRangeArgs;
import com.pulumi.azure.media.inputs.AssetFilterTrackSelectionArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AssetFilterArgs extends com.pulumi.resources.ResourceArgs {

    public static final AssetFilterArgs Empty = new AssetFilterArgs();

    /**
     * The Asset ID for which the Asset Filter should be created. Changing this forces a new Asset Filter to be created.
     * 
     */
    @Import(name="assetId", required=true)
    private Output<String> assetId;

    /**
     * @return The Asset ID for which the Asset Filter should be created. Changing this forces a new Asset Filter to be created.
     * 
     */
    public Output<String> assetId() {
        return this.assetId;
    }

    /**
     * The first quality bitrate. Sets the first video track to appear in the Live Streaming playlist to allow HLS native players to start downloading from this quality level at the beginning.
     * 
     */
    @Import(name="firstQualityBitrate")
    private @Nullable Output<Integer> firstQualityBitrate;

    /**
     * @return The first quality bitrate. Sets the first video track to appear in the Live Streaming playlist to allow HLS native players to start downloading from this quality level at the beginning.
     * 
     */
    public Optional<Output<Integer>> firstQualityBitrate() {
        return Optional.ofNullable(this.firstQualityBitrate);
    }

    /**
     * The name which should be used for this Asset Filter. Changing this forces a new Asset Filter to be created.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name which should be used for this Asset Filter. Changing this forces a new Asset Filter to be created.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * A `presentation_time_range` block as defined below.
     * 
     */
    @Import(name="presentationTimeRange")
    private @Nullable Output<AssetFilterPresentationTimeRangeArgs> presentationTimeRange;

    /**
     * @return A `presentation_time_range` block as defined below.
     * 
     */
    public Optional<Output<AssetFilterPresentationTimeRangeArgs>> presentationTimeRange() {
        return Optional.ofNullable(this.presentationTimeRange);
    }

    /**
     * One or more `track_selection` blocks as defined below.
     * 
     */
    @Import(name="trackSelections")
    private @Nullable Output<List<AssetFilterTrackSelectionArgs>> trackSelections;

    /**
     * @return One or more `track_selection` blocks as defined below.
     * 
     */
    public Optional<Output<List<AssetFilterTrackSelectionArgs>>> trackSelections() {
        return Optional.ofNullable(this.trackSelections);
    }

    private AssetFilterArgs() {}

    private AssetFilterArgs(AssetFilterArgs $) {
        this.assetId = $.assetId;
        this.firstQualityBitrate = $.firstQualityBitrate;
        this.name = $.name;
        this.presentationTimeRange = $.presentationTimeRange;
        this.trackSelections = $.trackSelections;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AssetFilterArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AssetFilterArgs $;

        public Builder() {
            $ = new AssetFilterArgs();
        }

        public Builder(AssetFilterArgs defaults) {
            $ = new AssetFilterArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param assetId The Asset ID for which the Asset Filter should be created. Changing this forces a new Asset Filter to be created.
         * 
         * @return builder
         * 
         */
        public Builder assetId(Output<String> assetId) {
            $.assetId = assetId;
            return this;
        }

        /**
         * @param assetId The Asset ID for which the Asset Filter should be created. Changing this forces a new Asset Filter to be created.
         * 
         * @return builder
         * 
         */
        public Builder assetId(String assetId) {
            return assetId(Output.of(assetId));
        }

        /**
         * @param firstQualityBitrate The first quality bitrate. Sets the first video track to appear in the Live Streaming playlist to allow HLS native players to start downloading from this quality level at the beginning.
         * 
         * @return builder
         * 
         */
        public Builder firstQualityBitrate(@Nullable Output<Integer> firstQualityBitrate) {
            $.firstQualityBitrate = firstQualityBitrate;
            return this;
        }

        /**
         * @param firstQualityBitrate The first quality bitrate. Sets the first video track to appear in the Live Streaming playlist to allow HLS native players to start downloading from this quality level at the beginning.
         * 
         * @return builder
         * 
         */
        public Builder firstQualityBitrate(Integer firstQualityBitrate) {
            return firstQualityBitrate(Output.of(firstQualityBitrate));
        }

        /**
         * @param name The name which should be used for this Asset Filter. Changing this forces a new Asset Filter to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name which should be used for this Asset Filter. Changing this forces a new Asset Filter to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param presentationTimeRange A `presentation_time_range` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder presentationTimeRange(@Nullable Output<AssetFilterPresentationTimeRangeArgs> presentationTimeRange) {
            $.presentationTimeRange = presentationTimeRange;
            return this;
        }

        /**
         * @param presentationTimeRange A `presentation_time_range` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder presentationTimeRange(AssetFilterPresentationTimeRangeArgs presentationTimeRange) {
            return presentationTimeRange(Output.of(presentationTimeRange));
        }

        /**
         * @param trackSelections One or more `track_selection` blocks as defined below.
         * 
         * @return builder
         * 
         */
        public Builder trackSelections(@Nullable Output<List<AssetFilterTrackSelectionArgs>> trackSelections) {
            $.trackSelections = trackSelections;
            return this;
        }

        /**
         * @param trackSelections One or more `track_selection` blocks as defined below.
         * 
         * @return builder
         * 
         */
        public Builder trackSelections(List<AssetFilterTrackSelectionArgs> trackSelections) {
            return trackSelections(Output.of(trackSelections));
        }

        /**
         * @param trackSelections One or more `track_selection` blocks as defined below.
         * 
         * @return builder
         * 
         */
        public Builder trackSelections(AssetFilterTrackSelectionArgs... trackSelections) {
            return trackSelections(List.of(trackSelections));
        }

        public AssetFilterArgs build() {
            if ($.assetId == null) {
                throw new MissingRequiredPropertyException("AssetFilterArgs", "assetId");
            }
            return $;
        }
    }

}
