// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.keyvault;

import com.pulumi.azure.Utilities;
import com.pulumi.azure.keyvault.SecretArgs;
import com.pulumi.azure.keyvault.inputs.SecretState;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Manages a Key Vault Secret.
 * 
 * ## Example Usage
 * 
 * ## Import
 * 
 * Key Vault Secrets which are Enabled can be imported using the `resource id`, e.g.
 * 
 * ```sh
 *  $ pulumi import azure:keyvault/secret:Secret example &#34;https://example-keyvault.vault.azure.net/secrets/example/fdf067c93bbb4b22bff4d8b7a9a56217&#34;
 * ```
 * 
 */
@ResourceType(type="azure:keyvault/secret:Secret")
public class Secret extends com.pulumi.resources.CustomResource {
    /**
     * Specifies the content type for the Key Vault Secret.
     * 
     */
    @Export(name="contentType", type=String.class, parameters={})
    private Output</* @Nullable */ String> contentType;

    /**
     * @return Specifies the content type for the Key Vault Secret.
     * 
     */
    public Output<Optional<String>> contentType() {
        return Codegen.optional(this.contentType);
    }
    /**
     * Expiration UTC datetime (Y-m-d&#39;T&#39;H:M:S&#39;Z&#39;).
     * 
     */
    @Export(name="expirationDate", type=String.class, parameters={})
    private Output</* @Nullable */ String> expirationDate;

    /**
     * @return Expiration UTC datetime (Y-m-d&#39;T&#39;H:M:S&#39;Z&#39;).
     * 
     */
    public Output<Optional<String>> expirationDate() {
        return Codegen.optional(this.expirationDate);
    }
    /**
     * The ID of the Key Vault where the Secret should be created.
     * 
     */
    @Export(name="keyVaultId", type=String.class, parameters={})
    private Output<String> keyVaultId;

    /**
     * @return The ID of the Key Vault where the Secret should be created.
     * 
     */
    public Output<String> keyVaultId() {
        return this.keyVaultId;
    }
    /**
     * Specifies the name of the Key Vault Secret. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return Specifies the name of the Key Vault Secret. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Key not usable before the provided UTC datetime (Y-m-d&#39;T&#39;H:M:S&#39;Z&#39;).
     * 
     */
    @Export(name="notBeforeDate", type=String.class, parameters={})
    private Output</* @Nullable */ String> notBeforeDate;

    /**
     * @return Key not usable before the provided UTC datetime (Y-m-d&#39;T&#39;H:M:S&#39;Z&#39;).
     * 
     */
    public Output<Optional<String>> notBeforeDate() {
        return Codegen.optional(this.notBeforeDate);
    }
    /**
     * The (Versioned) ID for this Key Vault Secret. This property points to a specific version of a Key Vault Secret, as such using this won&#39;t auto-rotate values if used in other Azure Services.
     * 
     */
    @Export(name="resourceId", type=String.class, parameters={})
    private Output<String> resourceId;

    /**
     * @return The (Versioned) ID for this Key Vault Secret. This property points to a specific version of a Key Vault Secret, as such using this won&#39;t auto-rotate values if used in other Azure Services.
     * 
     */
    public Output<String> resourceId() {
        return this.resourceId;
    }
    /**
     * The Versionless ID of the Key Vault Secret. This property allows other Azure Services (that support it) to auto-rotate their value when the Key Vault Secret is updated.
     * 
     */
    @Export(name="resourceVersionlessId", type=String.class, parameters={})
    private Output<String> resourceVersionlessId;

    /**
     * @return The Versionless ID of the Key Vault Secret. This property allows other Azure Services (that support it) to auto-rotate their value when the Key Vault Secret is updated.
     * 
     */
    public Output<String> resourceVersionlessId() {
        return this.resourceVersionlessId;
    }
    /**
     * A mapping of tags to assign to the resource.
     * 
     */
    @Export(name="tags", type=Map.class, parameters={String.class, String.class})
    private Output</* @Nullable */ Map<String,String>> tags;

    /**
     * @return A mapping of tags to assign to the resource.
     * 
     */
    public Output<Optional<Map<String,String>>> tags() {
        return Codegen.optional(this.tags);
    }
    /**
     * Specifies the value of the Key Vault Secret.
     * 
     */
    @Export(name="value", type=String.class, parameters={})
    private Output<String> value;

    /**
     * @return Specifies the value of the Key Vault Secret.
     * 
     */
    public Output<String> value() {
        return this.value;
    }
    /**
     * The current version of the Key Vault Secret.
     * 
     */
    @Export(name="version", type=String.class, parameters={})
    private Output<String> version;

    /**
     * @return The current version of the Key Vault Secret.
     * 
     */
    public Output<String> version() {
        return this.version;
    }
    /**
     * The Base ID of the Key Vault Secret.
     * 
     */
    @Export(name="versionlessId", type=String.class, parameters={})
    private Output<String> versionlessId;

    /**
     * @return The Base ID of the Key Vault Secret.
     * 
     */
    public Output<String> versionlessId() {
        return this.versionlessId;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Secret(String name) {
        this(name, SecretArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Secret(String name, SecretArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Secret(String name, SecretArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:keyvault/secret:Secret", name, args == null ? SecretArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private Secret(String name, Output<String> id, @Nullable SecretState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:keyvault/secret:Secret", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Secret get(String name, Output<String> id, @Nullable SecretState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Secret(name, id, state, options);
    }
}
