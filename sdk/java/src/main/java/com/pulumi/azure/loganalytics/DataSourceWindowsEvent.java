// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.loganalytics;

import com.pulumi.azure.Utilities;
import com.pulumi.azure.loganalytics.DataSourceWindowsEventArgs;
import com.pulumi.azure.loganalytics.inputs.DataSourceWindowsEventState;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;

/**
 * Manages a Log Analytics Windows Event DataSource.
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.azure.core.ResourceGroup;
 * import com.pulumi.azure.core.ResourceGroupArgs;
 * import com.pulumi.azure.operationalinsights.AnalyticsWorkspace;
 * import com.pulumi.azure.operationalinsights.AnalyticsWorkspaceArgs;
 * import com.pulumi.azure.loganalytics.DataSourceWindowsEvent;
 * import com.pulumi.azure.loganalytics.DataSourceWindowsEventArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new ResourceGroup("example", ResourceGroupArgs.builder()
 *             .name("example-resources")
 *             .location("West Europe")
 *             .build());
 * 
 *         var exampleAnalyticsWorkspace = new AnalyticsWorkspace("exampleAnalyticsWorkspace", AnalyticsWorkspaceArgs.builder()
 *             .name("example-law")
 *             .location(example.location())
 *             .resourceGroupName(example.name())
 *             .sku("PerGB2018")
 *             .build());
 * 
 *         var exampleDataSourceWindowsEvent = new DataSourceWindowsEvent("exampleDataSourceWindowsEvent", DataSourceWindowsEventArgs.builder()
 *             .name("example-lad-wpc")
 *             .resourceGroupName(example.name())
 *             .workspaceName(exampleAnalyticsWorkspace.name())
 *             .eventLogName("Application")
 *             .eventTypes("Error")
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * Log Analytics Windows Event DataSources can be imported using the `resource id`, e.g.
 * 
 * ```sh
 * $ pulumi import azure:loganalytics/dataSourceWindowsEvent:DataSourceWindowsEvent example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.OperationalInsights/workspaces/workspace1/dataSources/datasource1
 * ```
 * 
 */
@ResourceType(type="azure:loganalytics/dataSourceWindowsEvent:DataSourceWindowsEvent")
public class DataSourceWindowsEvent extends com.pulumi.resources.CustomResource {
    /**
     * Specifies the name of the Windows Event Log to collect events from.
     * 
     */
    @Export(name="eventLogName", refs={String.class}, tree="[0]")
    private Output<String> eventLogName;

    /**
     * @return Specifies the name of the Windows Event Log to collect events from.
     * 
     */
    public Output<String> eventLogName() {
        return this.eventLogName;
    }
    /**
     * Specifies an array of event types applied to the specified event log. Possible values include `Error`, `Warning` and `Information`.
     * 
     */
    @Export(name="eventTypes", refs={List.class,String.class}, tree="[0,1]")
    private Output<List<String>> eventTypes;

    /**
     * @return Specifies an array of event types applied to the specified event log. Possible values include `Error`, `Warning` and `Information`.
     * 
     */
    public Output<List<String>> eventTypes() {
        return this.eventTypes;
    }
    /**
     * The name which should be used for this Log Analytics Windows Event DataSource. Changing this forces a new Log Analytics Windows Event DataSource to be created.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The name which should be used for this Log Analytics Windows Event DataSource. Changing this forces a new Log Analytics Windows Event DataSource to be created.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The name of the Resource Group where the Log Analytics Windows Event DataSource should exist. Changing this forces a new Log Analytics Windows Event DataSource to be created.
     * 
     */
    @Export(name="resourceGroupName", refs={String.class}, tree="[0]")
    private Output<String> resourceGroupName;

    /**
     * @return The name of the Resource Group where the Log Analytics Windows Event DataSource should exist. Changing this forces a new Log Analytics Windows Event DataSource to be created.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }
    /**
     * The name of the Log Analytics Workspace where the Log Analytics Windows Event DataSource should exist. Changing this forces a new Log Analytics Windows Event DataSource to be created.
     * 
     */
    @Export(name="workspaceName", refs={String.class}, tree="[0]")
    private Output<String> workspaceName;

    /**
     * @return The name of the Log Analytics Workspace where the Log Analytics Windows Event DataSource should exist. Changing this forces a new Log Analytics Windows Event DataSource to be created.
     * 
     */
    public Output<String> workspaceName() {
        return this.workspaceName;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public DataSourceWindowsEvent(java.lang.String name) {
        this(name, DataSourceWindowsEventArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public DataSourceWindowsEvent(java.lang.String name, DataSourceWindowsEventArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public DataSourceWindowsEvent(java.lang.String name, DataSourceWindowsEventArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:loganalytics/dataSourceWindowsEvent:DataSourceWindowsEvent", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private DataSourceWindowsEvent(java.lang.String name, Output<java.lang.String> id, @Nullable DataSourceWindowsEventState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:loganalytics/dataSourceWindowsEvent:DataSourceWindowsEvent", name, state, makeResourceOptions(options, id), false);
    }

    private static DataSourceWindowsEventArgs makeArgs(DataSourceWindowsEventArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? DataSourceWindowsEventArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static DataSourceWindowsEvent get(java.lang.String name, Output<java.lang.String> id, @Nullable DataSourceWindowsEventState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new DataSourceWindowsEvent(name, id, state, options);
    }
}
