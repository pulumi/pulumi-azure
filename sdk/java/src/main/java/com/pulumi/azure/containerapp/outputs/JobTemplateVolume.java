// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.containerapp.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class JobTemplateVolume {
    /**
     * @return Mount options used while mounting the AzureFile. Must be a comma-separated string e.g. `dir_mode=0751,file_mode=0751`.
     * 
     */
    private @Nullable String mountOptions;
    /**
     * @return The name of the volume.
     * 
     */
    private String name;
    /**
     * @return The name of the storage to use for the volume.
     * 
     */
    private @Nullable String storageName;
    /**
     * @return The type of storage to use for the volume. Possible values are `AzureFile`, `EmptyDir` and `Secret`.
     * 
     */
    private @Nullable String storageType;

    private JobTemplateVolume() {}
    /**
     * @return Mount options used while mounting the AzureFile. Must be a comma-separated string e.g. `dir_mode=0751,file_mode=0751`.
     * 
     */
    public Optional<String> mountOptions() {
        return Optional.ofNullable(this.mountOptions);
    }
    /**
     * @return The name of the volume.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The name of the storage to use for the volume.
     * 
     */
    public Optional<String> storageName() {
        return Optional.ofNullable(this.storageName);
    }
    /**
     * @return The type of storage to use for the volume. Possible values are `AzureFile`, `EmptyDir` and `Secret`.
     * 
     */
    public Optional<String> storageType() {
        return Optional.ofNullable(this.storageType);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(JobTemplateVolume defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String mountOptions;
        private String name;
        private @Nullable String storageName;
        private @Nullable String storageType;
        public Builder() {}
        public Builder(JobTemplateVolume defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.mountOptions = defaults.mountOptions;
    	      this.name = defaults.name;
    	      this.storageName = defaults.storageName;
    	      this.storageType = defaults.storageType;
        }

        @CustomType.Setter
        public Builder mountOptions(@Nullable String mountOptions) {

            this.mountOptions = mountOptions;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("JobTemplateVolume", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder storageName(@Nullable String storageName) {

            this.storageName = storageName;
            return this;
        }
        @CustomType.Setter
        public Builder storageType(@Nullable String storageType) {

            this.storageType = storageType;
            return this;
        }
        public JobTemplateVolume build() {
            final var _resultValue = new JobTemplateVolume();
            _resultValue.mountOptions = mountOptions;
            _resultValue.name = name;
            _resultValue.storageName = storageName;
            _resultValue.storageType = storageType;
            return _resultValue;
        }
    }
}
