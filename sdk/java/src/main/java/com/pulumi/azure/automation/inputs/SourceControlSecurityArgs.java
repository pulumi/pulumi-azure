// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.automation.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SourceControlSecurityArgs extends com.pulumi.resources.ResourceArgs {

    public static final SourceControlSecurityArgs Empty = new SourceControlSecurityArgs();

    /**
     * The refresh token of specified rpeo.
     * 
     */
    @Import(name="refreshToken")
    private @Nullable Output<String> refreshToken;

    /**
     * @return The refresh token of specified rpeo.
     * 
     */
    public Optional<Output<String>> refreshToken() {
        return Optional.ofNullable(this.refreshToken);
    }

    /**
     * The access token of specified repo.
     * 
     */
    @Import(name="token", required=true)
    private Output<String> token;

    /**
     * @return The access token of specified repo.
     * 
     */
    public Output<String> token() {
        return this.token;
    }

    /**
     * Specify the token type, possible values are `PersonalAccessToken` and `Oauth`.
     * 
     */
    @Import(name="tokenType", required=true)
    private Output<String> tokenType;

    /**
     * @return Specify the token type, possible values are `PersonalAccessToken` and `Oauth`.
     * 
     */
    public Output<String> tokenType() {
        return this.tokenType;
    }

    private SourceControlSecurityArgs() {}

    private SourceControlSecurityArgs(SourceControlSecurityArgs $) {
        this.refreshToken = $.refreshToken;
        this.token = $.token;
        this.tokenType = $.tokenType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SourceControlSecurityArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SourceControlSecurityArgs $;

        public Builder() {
            $ = new SourceControlSecurityArgs();
        }

        public Builder(SourceControlSecurityArgs defaults) {
            $ = new SourceControlSecurityArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param refreshToken The refresh token of specified rpeo.
         * 
         * @return builder
         * 
         */
        public Builder refreshToken(@Nullable Output<String> refreshToken) {
            $.refreshToken = refreshToken;
            return this;
        }

        /**
         * @param refreshToken The refresh token of specified rpeo.
         * 
         * @return builder
         * 
         */
        public Builder refreshToken(String refreshToken) {
            return refreshToken(Output.of(refreshToken));
        }

        /**
         * @param token The access token of specified repo.
         * 
         * @return builder
         * 
         */
        public Builder token(Output<String> token) {
            $.token = token;
            return this;
        }

        /**
         * @param token The access token of specified repo.
         * 
         * @return builder
         * 
         */
        public Builder token(String token) {
            return token(Output.of(token));
        }

        /**
         * @param tokenType Specify the token type, possible values are `PersonalAccessToken` and `Oauth`.
         * 
         * @return builder
         * 
         */
        public Builder tokenType(Output<String> tokenType) {
            $.tokenType = tokenType;
            return this;
        }

        /**
         * @param tokenType Specify the token type, possible values are `PersonalAccessToken` and `Oauth`.
         * 
         * @return builder
         * 
         */
        public Builder tokenType(String tokenType) {
            return tokenType(Output.of(tokenType));
        }

        public SourceControlSecurityArgs build() {
            if ($.token == null) {
                throw new MissingRequiredPropertyException("SourceControlSecurityArgs", "token");
            }
            if ($.tokenType == null) {
                throw new MissingRequiredPropertyException("SourceControlSecurityArgs", "tokenType");
            }
            return $;
        }
    }

}
