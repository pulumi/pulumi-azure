// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.healthcare;

import com.pulumi.azure.Utilities;
import com.pulumi.azure.healthcare.DicomServiceArgs;
import com.pulumi.azure.healthcare.inputs.DicomServiceState;
import com.pulumi.azure.healthcare.outputs.DicomServiceAuthentication;
import com.pulumi.azure.healthcare.outputs.DicomServiceCors;
import com.pulumi.azure.healthcare.outputs.DicomServiceIdentity;
import com.pulumi.azure.healthcare.outputs.DicomServicePrivateEndpoint;
import com.pulumi.azure.healthcare.outputs.DicomServiceStorage;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Manages a Healthcare DICOM Service
 * 
 * ## Example Usage
 * 
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.azure.healthcare.Workspace;
 * import com.pulumi.azure.healthcare.WorkspaceArgs;
 * import com.pulumi.azure.healthcare.DicomService;
 * import com.pulumi.azure.healthcare.DicomServiceArgs;
 * import com.pulumi.azure.healthcare.inputs.DicomServiceIdentityArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var test = new Workspace("test", WorkspaceArgs.builder()
 *             .name("tfexworkspace")
 *             .resourceGroupName("tfex-resource_group")
 *             .location("east us")
 *             .build());
 * 
 *         var testDicomService = new DicomService("testDicomService", DicomServiceArgs.builder()
 *             .name("tfexDicom")
 *             .workspaceId(test.id())
 *             .location("east us")
 *             .identity(DicomServiceIdentityArgs.builder()
 *                 .type("SystemAssigned")
 *                 .build())
 *             .tags(Map.of("environment", "None"))
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * 
 * ## API Providers
 * 
 * &lt;!-- This section is generated, changes will be overwritten --&gt;
 * This resource uses the following Azure API Providers:
 * 
 * * `Microsoft.HealthcareApis` - 2024-03-31
 * 
 * ## Import
 * 
 * Healthcare DICOM Service can be imported using the resource`id`, e.g.
 * 
 * ```sh
 * $ pulumi import azure:healthcare/dicomService:DicomService example /subscriptions/12345678-1234-9876-4563-123456789012/resourceGroups/group1/providers/Microsoft.HealthcareApis/workspaces/workspace1/dicomServices/service1
 * ```
 * 
 */
@ResourceType(type="azure:healthcare/dicomService:DicomService")
public class DicomService extends com.pulumi.resources.CustomResource {
    /**
     * The `authentication` block as defined below.
     * 
     */
    @Export(name="authentications", refs={List.class,DicomServiceAuthentication.class}, tree="[0,1]")
    private Output<List<DicomServiceAuthentication>> authentications;

    /**
     * @return The `authentication` block as defined below.
     * 
     */
    public Output<List<DicomServiceAuthentication>> authentications() {
        return this.authentications;
    }
    /**
     * A `cors` block as defined below.
     * 
     */
    @Export(name="cors", refs={DicomServiceCors.class}, tree="[0]")
    private Output<DicomServiceCors> cors;

    /**
     * @return A `cors` block as defined below.
     * 
     */
    public Output<DicomServiceCors> cors() {
        return this.cors;
    }
    /**
     * If data partitions are enabled or not. Defaults to `false`. Changing this forces a new Healthcare DICOM Service to be created.
     * 
     */
    @Export(name="dataPartitionsEnabled", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> dataPartitionsEnabled;

    /**
     * @return If data partitions are enabled or not. Defaults to `false`. Changing this forces a new Healthcare DICOM Service to be created.
     * 
     */
    public Output<Optional<Boolean>> dataPartitionsEnabled() {
        return Codegen.optional(this.dataPartitionsEnabled);
    }
    /**
     * The URL of the key to use for encryption as part of the customer-managed key encryption settings. For more details, refer to the [Azure Customer-Managed Keys Overview](https://learn.microsoft.com/en-us/azure/storage/common/customer-managed-keys-overview).
     * 
     */
    @Export(name="encryptionKeyUrl", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> encryptionKeyUrl;

    /**
     * @return The URL of the key to use for encryption as part of the customer-managed key encryption settings. For more details, refer to the [Azure Customer-Managed Keys Overview](https://learn.microsoft.com/en-us/azure/storage/common/customer-managed-keys-overview).
     * 
     */
    public Output<Optional<String>> encryptionKeyUrl() {
        return Codegen.optional(this.encryptionKeyUrl);
    }
    /**
     * An `identity` block as defined below.
     * 
     */
    @Export(name="identity", refs={DicomServiceIdentity.class}, tree="[0]")
    private Output</* @Nullable */ DicomServiceIdentity> identity;

    /**
     * @return An `identity` block as defined below.
     * 
     */
    public Output<Optional<DicomServiceIdentity>> identity() {
        return Codegen.optional(this.identity);
    }
    /**
     * Specifies the Azure Region where the Healthcare DICOM Service should be created. Changing this forces a new Healthcare DICOM Service to be created.
     * 
     */
    @Export(name="location", refs={String.class}, tree="[0]")
    private Output<String> location;

    /**
     * @return Specifies the Azure Region where the Healthcare DICOM Service should be created. Changing this forces a new Healthcare DICOM Service to be created.
     * 
     */
    public Output<String> location() {
        return this.location;
    }
    /**
     * Specifies the name of the Healthcare DICOM Service. Changing this forces a new Healthcare DICOM Service to be created.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return Specifies the name of the Healthcare DICOM Service. Changing this forces a new Healthcare DICOM Service to be created.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    @Export(name="privateEndpoints", refs={List.class,DicomServicePrivateEndpoint.class}, tree="[0,1]")
    private Output<List<DicomServicePrivateEndpoint>> privateEndpoints;

    public Output<List<DicomServicePrivateEndpoint>> privateEndpoints() {
        return this.privateEndpoints;
    }
    /**
     * Whether to enabled public networks when data plane traffic coming from public networks while private endpoint is enabled. Defaults to `true`.
     * 
     */
    @Export(name="publicNetworkAccessEnabled", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> publicNetworkAccessEnabled;

    /**
     * @return Whether to enabled public networks when data plane traffic coming from public networks while private endpoint is enabled. Defaults to `true`.
     * 
     */
    public Output<Optional<Boolean>> publicNetworkAccessEnabled() {
        return Codegen.optional(this.publicNetworkAccessEnabled);
    }
    /**
     * The url of the Healthcare DICOM Services.
     * 
     */
    @Export(name="serviceUrl", refs={String.class}, tree="[0]")
    private Output<String> serviceUrl;

    /**
     * @return The url of the Healthcare DICOM Services.
     * 
     */
    public Output<String> serviceUrl() {
        return this.serviceUrl;
    }
    /**
     * A `storage` block as defined below.
     * 
     */
    @Export(name="storage", refs={DicomServiceStorage.class}, tree="[0]")
    private Output<DicomServiceStorage> storage;

    /**
     * @return A `storage` block as defined below.
     * 
     */
    public Output<DicomServiceStorage> storage() {
        return this.storage;
    }
    /**
     * A mapping of tags to assign to the Healthcare DICOM Service.
     * 
     */
    @Export(name="tags", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output</* @Nullable */ Map<String,String>> tags;

    /**
     * @return A mapping of tags to assign to the Healthcare DICOM Service.
     * 
     */
    public Output<Optional<Map<String,String>>> tags() {
        return Codegen.optional(this.tags);
    }
    /**
     * Specifies the ID of the Healthcare Workspace where the Healthcare DICOM Service should exist. Changing this forces a new Healthcare DICOM Service to be created.
     * 
     */
    @Export(name="workspaceId", refs={String.class}, tree="[0]")
    private Output<String> workspaceId;

    /**
     * @return Specifies the ID of the Healthcare Workspace where the Healthcare DICOM Service should exist. Changing this forces a new Healthcare DICOM Service to be created.
     * 
     */
    public Output<String> workspaceId() {
        return this.workspaceId;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public DicomService(java.lang.String name) {
        this(name, DicomServiceArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public DicomService(java.lang.String name, DicomServiceArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public DicomService(java.lang.String name, DicomServiceArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:healthcare/dicomService:DicomService", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private DicomService(java.lang.String name, Output<java.lang.String> id, @Nullable DicomServiceState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:healthcare/dicomService:DicomService", name, state, makeResourceOptions(options, id), false);
    }

    private static DicomServiceArgs makeArgs(DicomServiceArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? DicomServiceArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static DicomService get(java.lang.String name, Output<java.lang.String> id, @Nullable DicomServiceState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new DicomService(name, id, state, options);
    }
}
