// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.datafactory.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class TriggerSchedulePipelineArgs extends com.pulumi.resources.ResourceArgs {

    public static final TriggerSchedulePipelineArgs Empty = new TriggerSchedulePipelineArgs();

    /**
     * Reference pipeline name.
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    /**
     * @return Reference pipeline name.
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    /**
     * The pipeline parameters that the trigger will act upon.
     * 
     */
    @Import(name="parameters")
    private @Nullable Output<Map<String,String>> parameters;

    /**
     * @return The pipeline parameters that the trigger will act upon.
     * 
     */
    public Optional<Output<Map<String,String>>> parameters() {
        return Optional.ofNullable(this.parameters);
    }

    private TriggerSchedulePipelineArgs() {}

    private TriggerSchedulePipelineArgs(TriggerSchedulePipelineArgs $) {
        this.name = $.name;
        this.parameters = $.parameters;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TriggerSchedulePipelineArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TriggerSchedulePipelineArgs $;

        public Builder() {
            $ = new TriggerSchedulePipelineArgs();
        }

        public Builder(TriggerSchedulePipelineArgs defaults) {
            $ = new TriggerSchedulePipelineArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param name Reference pipeline name.
         * 
         * @return builder
         * 
         */
        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Reference pipeline name.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param parameters The pipeline parameters that the trigger will act upon.
         * 
         * @return builder
         * 
         */
        public Builder parameters(@Nullable Output<Map<String,String>> parameters) {
            $.parameters = parameters;
            return this;
        }

        /**
         * @param parameters The pipeline parameters that the trigger will act upon.
         * 
         * @return builder
         * 
         */
        public Builder parameters(Map<String,String> parameters) {
            return parameters(Output.of(parameters));
        }

        public TriggerSchedulePipelineArgs build() {
            if ($.name == null) {
                throw new MissingRequiredPropertyException("TriggerSchedulePipelineArgs", "name");
            }
            return $;
        }
    }

}
