// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.keyvault;

import com.pulumi.azure.Utilities;
import com.pulumi.azure.keyvault.CertificateContactsArgs;
import com.pulumi.azure.keyvault.inputs.CertificateContactsState;
import com.pulumi.azure.keyvault.outputs.CertificateContactsContact;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;

/**
 * Manages Key Vault Certificate Contacts.
 * 
 * ## Disclaimers
 * 
 * &gt; **Note:** It&#39;s possible to define Key Vault Certificate Contacts both within the `azure.keyvault.KeyVault` resource via the `contact` block and by using the `azure.keyvault.CertificateContacts` resource. However it&#39;s not possible to use both methods to manage Certificate Contacts within a KeyVault, since there&#39;ll be conflicts.
 * 
 * ## Example Usage
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.azure.core.CoreFunctions;
 * import com.pulumi.azure.core.ResourceGroup;
 * import com.pulumi.azure.core.ResourceGroupArgs;
 * import com.pulumi.azure.keyvault.KeyVault;
 * import com.pulumi.azure.keyvault.KeyVaultArgs;
 * import com.pulumi.azure.keyvault.AccessPolicy;
 * import com.pulumi.azure.keyvault.AccessPolicyArgs;
 * import com.pulumi.azure.keyvault.CertificateContacts;
 * import com.pulumi.azure.keyvault.CertificateContactsArgs;
 * import com.pulumi.azure.keyvault.inputs.CertificateContactsContactArgs;
 * import com.pulumi.resources.CustomResourceOptions;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         final var current = CoreFunctions.getClientConfig();
 * 
 *         var exampleResourceGroup = new ResourceGroup(&#34;exampleResourceGroup&#34;, ResourceGroupArgs.builder()        
 *             .location(&#34;West Europe&#34;)
 *             .build());
 * 
 *         var exampleKeyVault = new KeyVault(&#34;exampleKeyVault&#34;, KeyVaultArgs.builder()        
 *             .location(exampleResourceGroup.location())
 *             .resourceGroupName(exampleResourceGroup.name())
 *             .tenantId(current.applyValue(getClientConfigResult -&gt; getClientConfigResult.tenantId()))
 *             .skuName(&#34;premium&#34;)
 *             .build());
 * 
 *         var exampleAccessPolicy = new AccessPolicy(&#34;exampleAccessPolicy&#34;, AccessPolicyArgs.builder()        
 *             .keyVaultId(exampleKeyVault.id())
 *             .tenantId(current.applyValue(getClientConfigResult -&gt; getClientConfigResult.tenantId()))
 *             .objectId(current.applyValue(getClientConfigResult -&gt; getClientConfigResult.objectId()))
 *             .certificatePermissions(&#34;ManageContacts&#34;)
 *             .keyPermissions(&#34;Create&#34;)
 *             .secretPermissions(&#34;Set&#34;)
 *             .build());
 * 
 *         var exampleCertificateContacts = new CertificateContacts(&#34;exampleCertificateContacts&#34;, CertificateContactsArgs.builder()        
 *             .keyVaultId(azurerm_key_vault.test().id())
 *             .contacts(            
 *                 CertificateContactsContactArgs.builder()
 *                     .email(&#34;example@example.com&#34;)
 *                     .name(&#34;example&#34;)
 *                     .phone(&#34;01234567890&#34;)
 *                     .build(),
 *                 CertificateContactsContactArgs.builder()
 *                     .email(&#34;example2@example.com&#34;)
 *                     .build())
 *             .build(), CustomResourceOptions.builder()
 *                 .dependsOn(exampleAccessPolicy)
 *                 .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * Key Vault Certificate Contacts can be imported using the `resource id`, e.g.
 * 
 * ```sh
 *  $ pulumi import azure:keyvault/certificateContacts:CertificateContacts example https://example-keyvault.vault.azure.net/certificates/contacts
 * ```
 * 
 */
@ResourceType(type="azure:keyvault/certificateContacts:CertificateContacts")
public class CertificateContacts extends com.pulumi.resources.CustomResource {
    /**
     * One or more `contact` blocks as defined below.
     * 
     */
    @Export(name="contacts", refs={List.class,CertificateContactsContact.class}, tree="[0,1]")
    private Output<List<CertificateContactsContact>> contacts;

    /**
     * @return One or more `contact` blocks as defined below.
     * 
     */
    public Output<List<CertificateContactsContact>> contacts() {
        return this.contacts;
    }
    /**
     * The ID of the Key Vault. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="keyVaultId", refs={String.class}, tree="[0]")
    private Output<String> keyVaultId;

    /**
     * @return The ID of the Key Vault. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> keyVaultId() {
        return this.keyVaultId;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public CertificateContacts(String name) {
        this(name, CertificateContactsArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public CertificateContacts(String name, CertificateContactsArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public CertificateContacts(String name, CertificateContactsArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:keyvault/certificateContacts:CertificateContacts", name, args == null ? CertificateContactsArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private CertificateContacts(String name, Output<String> id, @Nullable CertificateContactsState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:keyvault/certificateContacts:CertificateContacts", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static CertificateContacts get(String name, Output<String> id, @Nullable CertificateContactsState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new CertificateContacts(name, id, state, options);
    }
}
