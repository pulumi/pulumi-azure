// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.cdn.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class FrontdoorOriginPrivateLink {
    /**
     * @return Specifies the location where the Private Link resource should exist. Changing this forces a new resource to be created.
     * 
     */
    private String location;
    /**
     * @return The ID of the Azure Resource to connect to via the Private Link.
     * 
     * &gt; **Note:** the `private_link_target_id` property must specify the Resource ID of the Private Link Service when using Load Balancer as an Origin.
     * 
     */
    private String privateLinkTargetId;
    /**
     * @return Specifies the request message that will be submitted to the `private_link_target_id` when requesting the private link endpoint connection. Values must be between `1` and `140` characters in length. Defaults to `Access request for CDN FrontDoor Private Link Origin`.
     * 
     */
    private @Nullable String requestMessage;
    /**
     * @return Specifies the type of target for this Private Link Endpoint. Possible values are `blob`, `blob_secondary`, `web` and `sites`.
     * 
     * &gt; **NOTE:** `target_type` cannot be specified when using a Load Balancer as an Origin.
     * 
     */
    private @Nullable String targetType;

    private FrontdoorOriginPrivateLink() {}
    /**
     * @return Specifies the location where the Private Link resource should exist. Changing this forces a new resource to be created.
     * 
     */
    public String location() {
        return this.location;
    }
    /**
     * @return The ID of the Azure Resource to connect to via the Private Link.
     * 
     * &gt; **Note:** the `private_link_target_id` property must specify the Resource ID of the Private Link Service when using Load Balancer as an Origin.
     * 
     */
    public String privateLinkTargetId() {
        return this.privateLinkTargetId;
    }
    /**
     * @return Specifies the request message that will be submitted to the `private_link_target_id` when requesting the private link endpoint connection. Values must be between `1` and `140` characters in length. Defaults to `Access request for CDN FrontDoor Private Link Origin`.
     * 
     */
    public Optional<String> requestMessage() {
        return Optional.ofNullable(this.requestMessage);
    }
    /**
     * @return Specifies the type of target for this Private Link Endpoint. Possible values are `blob`, `blob_secondary`, `web` and `sites`.
     * 
     * &gt; **NOTE:** `target_type` cannot be specified when using a Load Balancer as an Origin.
     * 
     */
    public Optional<String> targetType() {
        return Optional.ofNullable(this.targetType);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(FrontdoorOriginPrivateLink defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String location;
        private String privateLinkTargetId;
        private @Nullable String requestMessage;
        private @Nullable String targetType;
        public Builder() {}
        public Builder(FrontdoorOriginPrivateLink defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.location = defaults.location;
    	      this.privateLinkTargetId = defaults.privateLinkTargetId;
    	      this.requestMessage = defaults.requestMessage;
    	      this.targetType = defaults.targetType;
        }

        @CustomType.Setter
        public Builder location(String location) {
            if (location == null) {
              throw new MissingRequiredPropertyException("FrontdoorOriginPrivateLink", "location");
            }
            this.location = location;
            return this;
        }
        @CustomType.Setter
        public Builder privateLinkTargetId(String privateLinkTargetId) {
            if (privateLinkTargetId == null) {
              throw new MissingRequiredPropertyException("FrontdoorOriginPrivateLink", "privateLinkTargetId");
            }
            this.privateLinkTargetId = privateLinkTargetId;
            return this;
        }
        @CustomType.Setter
        public Builder requestMessage(@Nullable String requestMessage) {

            this.requestMessage = requestMessage;
            return this;
        }
        @CustomType.Setter
        public Builder targetType(@Nullable String targetType) {

            this.targetType = targetType;
            return this;
        }
        public FrontdoorOriginPrivateLink build() {
            final var _resultValue = new FrontdoorOriginPrivateLink();
            _resultValue.location = location;
            _resultValue.privateLinkTargetId = privateLinkTargetId;
            _resultValue.requestMessage = requestMessage;
            _resultValue.targetType = targetType;
            return _resultValue;
        }
    }
}
