// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.monitoring.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class ActionGroupItsmReceiver {
    /**
     * @return The unique connection identifier of the ITSM connection.
     * 
     */
    private String connectionId;
    /**
     * @return The name of the ITSM receiver.
     * 
     */
    private String name;
    /**
     * @return The region of the workspace.
     * 
     * &gt; **NOTE** `ticket_configuration` should be JSON blob with `PayloadRevision` and `WorkItemType` keys (e.g., `ticket_configuration=&#34;{\&#34;PayloadRevision\&#34;:0,\&#34;WorkItemType\&#34;:\&#34;Incident\&#34;}&#34;`), and `ticket_configuration=&#34;{}&#34;` will return an error, see more at this [REST API issue](https://github.com/Azure/azure-rest-api-specs/issues/20488)
     * 
     */
    private String region;
    /**
     * @return A JSON blob for the configurations of the ITSM action. CreateMultipleWorkItems option will be part of this blob as well.
     * 
     */
    private String ticketConfiguration;
    /**
     * @return The Azure Log Analytics workspace ID where this connection is defined. Format is `&lt;subscription id&gt;|&lt;workspace id&gt;`, for example `00000000-0000-0000-0000-000000000000|00000000-0000-0000-0000-000000000000`.
     * 
     */
    private String workspaceId;

    private ActionGroupItsmReceiver() {}
    /**
     * @return The unique connection identifier of the ITSM connection.
     * 
     */
    public String connectionId() {
        return this.connectionId;
    }
    /**
     * @return The name of the ITSM receiver.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The region of the workspace.
     * 
     * &gt; **NOTE** `ticket_configuration` should be JSON blob with `PayloadRevision` and `WorkItemType` keys (e.g., `ticket_configuration=&#34;{\&#34;PayloadRevision\&#34;:0,\&#34;WorkItemType\&#34;:\&#34;Incident\&#34;}&#34;`), and `ticket_configuration=&#34;{}&#34;` will return an error, see more at this [REST API issue](https://github.com/Azure/azure-rest-api-specs/issues/20488)
     * 
     */
    public String region() {
        return this.region;
    }
    /**
     * @return A JSON blob for the configurations of the ITSM action. CreateMultipleWorkItems option will be part of this blob as well.
     * 
     */
    public String ticketConfiguration() {
        return this.ticketConfiguration;
    }
    /**
     * @return The Azure Log Analytics workspace ID where this connection is defined. Format is `&lt;subscription id&gt;|&lt;workspace id&gt;`, for example `00000000-0000-0000-0000-000000000000|00000000-0000-0000-0000-000000000000`.
     * 
     */
    public String workspaceId() {
        return this.workspaceId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ActionGroupItsmReceiver defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String connectionId;
        private String name;
        private String region;
        private String ticketConfiguration;
        private String workspaceId;
        public Builder() {}
        public Builder(ActionGroupItsmReceiver defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.connectionId = defaults.connectionId;
    	      this.name = defaults.name;
    	      this.region = defaults.region;
    	      this.ticketConfiguration = defaults.ticketConfiguration;
    	      this.workspaceId = defaults.workspaceId;
        }

        @CustomType.Setter
        public Builder connectionId(String connectionId) {
            if (connectionId == null) {
              throw new MissingRequiredPropertyException("ActionGroupItsmReceiver", "connectionId");
            }
            this.connectionId = connectionId;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("ActionGroupItsmReceiver", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder region(String region) {
            if (region == null) {
              throw new MissingRequiredPropertyException("ActionGroupItsmReceiver", "region");
            }
            this.region = region;
            return this;
        }
        @CustomType.Setter
        public Builder ticketConfiguration(String ticketConfiguration) {
            if (ticketConfiguration == null) {
              throw new MissingRequiredPropertyException("ActionGroupItsmReceiver", "ticketConfiguration");
            }
            this.ticketConfiguration = ticketConfiguration;
            return this;
        }
        @CustomType.Setter
        public Builder workspaceId(String workspaceId) {
            if (workspaceId == null) {
              throw new MissingRequiredPropertyException("ActionGroupItsmReceiver", "workspaceId");
            }
            this.workspaceId = workspaceId;
            return this;
        }
        public ActionGroupItsmReceiver build() {
            final var _resultValue = new ActionGroupItsmReceiver();
            _resultValue.connectionId = connectionId;
            _resultValue.name = name;
            _resultValue.region = region;
            _resultValue.ticketConfiguration = ticketConfiguration;
            _resultValue.workspaceId = workspaceId;
            return _resultValue;
        }
    }
}
