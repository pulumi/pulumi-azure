// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.automation.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DscConfigurationState extends com.pulumi.resources.ResourceArgs {

    public static final DscConfigurationState Empty = new DscConfigurationState();

    /**
     * The name of the automation account in which the DSC Configuration is created. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="automationAccountName")
    private @Nullable Output<String> automationAccountName;

    /**
     * @return The name of the automation account in which the DSC Configuration is created. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> automationAccountName() {
        return Optional.ofNullable(this.automationAccountName);
    }

    /**
     * The PowerShell DSC Configuration script.
     * 
     */
    @Import(name="contentEmbedded")
    private @Nullable Output<String> contentEmbedded;

    /**
     * @return The PowerShell DSC Configuration script.
     * 
     */
    public Optional<Output<String>> contentEmbedded() {
        return Optional.ofNullable(this.contentEmbedded);
    }

    /**
     * Description to go with DSC Configuration.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return Description to go with DSC Configuration.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Must be the same location as the Automation Account.
     * 
     */
    @Import(name="location")
    private @Nullable Output<String> location;

    /**
     * @return Must be the same location as the Automation Account.
     * 
     */
    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * Verbose log option.
     * 
     */
    @Import(name="logVerbose")
    private @Nullable Output<Boolean> logVerbose;

    /**
     * @return Verbose log option.
     * 
     */
    public Optional<Output<Boolean>> logVerbose() {
        return Optional.ofNullable(this.logVerbose);
    }

    /**
     * Specifies the name of the DSC Configuration. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Specifies the name of the DSC Configuration. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The name of the resource group in which the DSC Configuration is created. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="resourceGroupName")
    private @Nullable Output<String> resourceGroupName;

    /**
     * @return The name of the resource group in which the DSC Configuration is created. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> resourceGroupName() {
        return Optional.ofNullable(this.resourceGroupName);
    }

    @Import(name="state")
    private @Nullable Output<String> state;

    public Optional<Output<String>> state() {
        return Optional.ofNullable(this.state);
    }

    /**
     * A mapping of tags to assign to the resource.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return A mapping of tags to assign to the resource.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private DscConfigurationState() {}

    private DscConfigurationState(DscConfigurationState $) {
        this.automationAccountName = $.automationAccountName;
        this.contentEmbedded = $.contentEmbedded;
        this.description = $.description;
        this.location = $.location;
        this.logVerbose = $.logVerbose;
        this.name = $.name;
        this.resourceGroupName = $.resourceGroupName;
        this.state = $.state;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DscConfigurationState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DscConfigurationState $;

        public Builder() {
            $ = new DscConfigurationState();
        }

        public Builder(DscConfigurationState defaults) {
            $ = new DscConfigurationState(Objects.requireNonNull(defaults));
        }

        /**
         * @param automationAccountName The name of the automation account in which the DSC Configuration is created. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder automationAccountName(@Nullable Output<String> automationAccountName) {
            $.automationAccountName = automationAccountName;
            return this;
        }

        /**
         * @param automationAccountName The name of the automation account in which the DSC Configuration is created. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder automationAccountName(String automationAccountName) {
            return automationAccountName(Output.of(automationAccountName));
        }

        /**
         * @param contentEmbedded The PowerShell DSC Configuration script.
         * 
         * @return builder
         * 
         */
        public Builder contentEmbedded(@Nullable Output<String> contentEmbedded) {
            $.contentEmbedded = contentEmbedded;
            return this;
        }

        /**
         * @param contentEmbedded The PowerShell DSC Configuration script.
         * 
         * @return builder
         * 
         */
        public Builder contentEmbedded(String contentEmbedded) {
            return contentEmbedded(Output.of(contentEmbedded));
        }

        /**
         * @param description Description to go with DSC Configuration.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description Description to go with DSC Configuration.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param location Must be the same location as the Automation Account.
         * 
         * @return builder
         * 
         */
        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location Must be the same location as the Automation Account.
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param logVerbose Verbose log option.
         * 
         * @return builder
         * 
         */
        public Builder logVerbose(@Nullable Output<Boolean> logVerbose) {
            $.logVerbose = logVerbose;
            return this;
        }

        /**
         * @param logVerbose Verbose log option.
         * 
         * @return builder
         * 
         */
        public Builder logVerbose(Boolean logVerbose) {
            return logVerbose(Output.of(logVerbose));
        }

        /**
         * @param name Specifies the name of the DSC Configuration. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Specifies the name of the DSC Configuration. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param resourceGroupName The name of the resource group in which the DSC Configuration is created. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(@Nullable Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName The name of the resource group in which the DSC Configuration is created. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        public Builder state(@Nullable Output<String> state) {
            $.state = state;
            return this;
        }

        public Builder state(String state) {
            return state(Output.of(state));
        }

        /**
         * @param tags A mapping of tags to assign to the resource.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags A mapping of tags to assign to the resource.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public DscConfigurationState build() {
            return $;
        }
    }

}
