// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.healthcare.outputs;

import com.pulumi.azure.healthcare.outputs.GetFhirServiceAuthentication;
import com.pulumi.azure.healthcare.outputs.GetFhirServiceCor;
import com.pulumi.azure.healthcare.outputs.GetFhirServiceIdentity;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class GetFhirServiceResult {
    /**
     * @return The list of the access policies of the service instance.
     * 
     */
    private final List<String> accessPolicyObjectIds;
    /**
     * @return The `authentication` block as defined below.
     * 
     */
    private final List<GetFhirServiceAuthentication> authentications;
    /**
     * @return The name of the storage account which the operation configuration information is exported to.
     * 
     */
    private final String configurationExportStorageAccountName;
    /**
     * @return The list of azure container registry settings used for convert data operation of the service instance.
     * 
     */
    private final List<String> containerRegistryLoginServerUrls;
    /**
     * @return The `cors` block as defined below.
     * 
     */
    private final List<GetFhirServiceCor> cors;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private final String id;
    /**
     * @return The `identity` block as defined below.
     * 
     */
    private final List<GetFhirServiceIdentity> identities;
    /**
     * @return The kind of the Healthcare FHIR Service.
     * 
     */
    private final String kind;
    /**
     * @return The Azure Region where the Healthcare FHIR Service is located.
     * 
     */
    private final String location;
    private final String name;
    /**
     * @return The map of tags assigned to the Healthcare FHIR Service.
     * 
     */
    private final @Nullable Map<String,String> tags;
    private final String workspaceId;

    @CustomType.Constructor
    private GetFhirServiceResult(
        @CustomType.Parameter("accessPolicyObjectIds") List<String> accessPolicyObjectIds,
        @CustomType.Parameter("authentications") List<GetFhirServiceAuthentication> authentications,
        @CustomType.Parameter("configurationExportStorageAccountName") String configurationExportStorageAccountName,
        @CustomType.Parameter("containerRegistryLoginServerUrls") List<String> containerRegistryLoginServerUrls,
        @CustomType.Parameter("cors") List<GetFhirServiceCor> cors,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("identities") List<GetFhirServiceIdentity> identities,
        @CustomType.Parameter("kind") String kind,
        @CustomType.Parameter("location") String location,
        @CustomType.Parameter("name") String name,
        @CustomType.Parameter("tags") @Nullable Map<String,String> tags,
        @CustomType.Parameter("workspaceId") String workspaceId) {
        this.accessPolicyObjectIds = accessPolicyObjectIds;
        this.authentications = authentications;
        this.configurationExportStorageAccountName = configurationExportStorageAccountName;
        this.containerRegistryLoginServerUrls = containerRegistryLoginServerUrls;
        this.cors = cors;
        this.id = id;
        this.identities = identities;
        this.kind = kind;
        this.location = location;
        this.name = name;
        this.tags = tags;
        this.workspaceId = workspaceId;
    }

    /**
     * @return The list of the access policies of the service instance.
     * 
     */
    public List<String> accessPolicyObjectIds() {
        return this.accessPolicyObjectIds;
    }
    /**
     * @return The `authentication` block as defined below.
     * 
     */
    public List<GetFhirServiceAuthentication> authentications() {
        return this.authentications;
    }
    /**
     * @return The name of the storage account which the operation configuration information is exported to.
     * 
     */
    public String configurationExportStorageAccountName() {
        return this.configurationExportStorageAccountName;
    }
    /**
     * @return The list of azure container registry settings used for convert data operation of the service instance.
     * 
     */
    public List<String> containerRegistryLoginServerUrls() {
        return this.containerRegistryLoginServerUrls;
    }
    /**
     * @return The `cors` block as defined below.
     * 
     */
    public List<GetFhirServiceCor> cors() {
        return this.cors;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The `identity` block as defined below.
     * 
     */
    public List<GetFhirServiceIdentity> identities() {
        return this.identities;
    }
    /**
     * @return The kind of the Healthcare FHIR Service.
     * 
     */
    public String kind() {
        return this.kind;
    }
    /**
     * @return The Azure Region where the Healthcare FHIR Service is located.
     * 
     */
    public String location() {
        return this.location;
    }
    public String name() {
        return this.name;
    }
    /**
     * @return The map of tags assigned to the Healthcare FHIR Service.
     * 
     */
    public Map<String,String> tags() {
        return this.tags == null ? Map.of() : this.tags;
    }
    public String workspaceId() {
        return this.workspaceId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetFhirServiceResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private List<String> accessPolicyObjectIds;
        private List<GetFhirServiceAuthentication> authentications;
        private String configurationExportStorageAccountName;
        private List<String> containerRegistryLoginServerUrls;
        private List<GetFhirServiceCor> cors;
        private String id;
        private List<GetFhirServiceIdentity> identities;
        private String kind;
        private String location;
        private String name;
        private @Nullable Map<String,String> tags;
        private String workspaceId;

        public Builder() {
    	      // Empty
        }

        public Builder(GetFhirServiceResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accessPolicyObjectIds = defaults.accessPolicyObjectIds;
    	      this.authentications = defaults.authentications;
    	      this.configurationExportStorageAccountName = defaults.configurationExportStorageAccountName;
    	      this.containerRegistryLoginServerUrls = defaults.containerRegistryLoginServerUrls;
    	      this.cors = defaults.cors;
    	      this.id = defaults.id;
    	      this.identities = defaults.identities;
    	      this.kind = defaults.kind;
    	      this.location = defaults.location;
    	      this.name = defaults.name;
    	      this.tags = defaults.tags;
    	      this.workspaceId = defaults.workspaceId;
        }

        public Builder accessPolicyObjectIds(List<String> accessPolicyObjectIds) {
            this.accessPolicyObjectIds = Objects.requireNonNull(accessPolicyObjectIds);
            return this;
        }
        public Builder accessPolicyObjectIds(String... accessPolicyObjectIds) {
            return accessPolicyObjectIds(List.of(accessPolicyObjectIds));
        }
        public Builder authentications(List<GetFhirServiceAuthentication> authentications) {
            this.authentications = Objects.requireNonNull(authentications);
            return this;
        }
        public Builder authentications(GetFhirServiceAuthentication... authentications) {
            return authentications(List.of(authentications));
        }
        public Builder configurationExportStorageAccountName(String configurationExportStorageAccountName) {
            this.configurationExportStorageAccountName = Objects.requireNonNull(configurationExportStorageAccountName);
            return this;
        }
        public Builder containerRegistryLoginServerUrls(List<String> containerRegistryLoginServerUrls) {
            this.containerRegistryLoginServerUrls = Objects.requireNonNull(containerRegistryLoginServerUrls);
            return this;
        }
        public Builder containerRegistryLoginServerUrls(String... containerRegistryLoginServerUrls) {
            return containerRegistryLoginServerUrls(List.of(containerRegistryLoginServerUrls));
        }
        public Builder cors(List<GetFhirServiceCor> cors) {
            this.cors = Objects.requireNonNull(cors);
            return this;
        }
        public Builder cors(GetFhirServiceCor... cors) {
            return cors(List.of(cors));
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder identities(List<GetFhirServiceIdentity> identities) {
            this.identities = Objects.requireNonNull(identities);
            return this;
        }
        public Builder identities(GetFhirServiceIdentity... identities) {
            return identities(List.of(identities));
        }
        public Builder kind(String kind) {
            this.kind = Objects.requireNonNull(kind);
            return this;
        }
        public Builder location(String location) {
            this.location = Objects.requireNonNull(location);
            return this;
        }
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        public Builder tags(@Nullable Map<String,String> tags) {
            this.tags = tags;
            return this;
        }
        public Builder workspaceId(String workspaceId) {
            this.workspaceId = Objects.requireNonNull(workspaceId);
            return this;
        }        public GetFhirServiceResult build() {
            return new GetFhirServiceResult(accessPolicyObjectIds, authentications, configurationExportStorageAccountName, containerRegistryLoginServerUrls, cors, id, identities, kind, location, name, tags, workspaceId);
        }
    }
}
