// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.signalr;

import com.pulumi.azure.Utilities;
import com.pulumi.azure.signalr.ServiceArgs;
import com.pulumi.azure.signalr.inputs.ServiceState;
import com.pulumi.azure.signalr.outputs.ServiceCor;
import com.pulumi.azure.signalr.outputs.ServiceLiveTrace;
import com.pulumi.azure.signalr.outputs.ServiceSku;
import com.pulumi.azure.signalr.outputs.ServiceUpstreamEndpoint;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Manages an Azure SignalR service.
 * 
 * ## Example Usage
 * ```java
 * package generated_program;
 * 
 * import java.util.*;
 * import java.io.*;
 * import java.nio.*;
 * import com.pulumi.*;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var exampleResourceGroup = new ResourceGroup(&#34;exampleResourceGroup&#34;, ResourceGroupArgs.builder()        
 *             .location(&#34;West US&#34;)
 *             .build());
 * 
 *         var exampleService = new Service(&#34;exampleService&#34;, ServiceArgs.builder()        
 *             .location(exampleResourceGroup.location())
 *             .resourceGroupName(exampleResourceGroup.name())
 *             .sku(ServiceSkuArgs.builder()
 *                 .name(&#34;Free_F1&#34;)
 *                 .capacity(1)
 *                 .build())
 *             .cors(ServiceCorArgs.builder()
 *                 .allowedOrigins(&#34;http://www.example.com&#34;)
 *                 .build())
 *             .connectivityLogsEnabled(true)
 *             .messagingLogsEnabled(true)
 *             .serviceMode(&#34;Default&#34;)
 *             .upstreamEndpoints(ServiceUpstreamEndpointArgs.builder()
 *                 .categoryPatterns(                
 *                     &#34;connections&#34;,
 *                     &#34;messages&#34;)
 *                 .eventPatterns(&#34;*&#34;)
 *                 .hubPatterns(&#34;hub1&#34;)
 *                 .urlTemplate(&#34;http://foo.com&#34;)
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * SignalR services can be imported using the `resource id`, e.g.
 * 
 * ```sh
 *  $ pulumi import azure:signalr/service:Service example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/terraform-signalr/providers/Microsoft.SignalRService/signalR/tfex-signalr
 * ```
 * 
 */
@ResourceType(type="azure:signalr/service:Service")
public class Service extends com.pulumi.resources.CustomResource {
    /**
     * Specifies if Connectivity Logs are enabled or not. Defaults to `false`.
     * 
     */
    @Export(name="connectivityLogsEnabled", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> connectivityLogsEnabled;

    /**
     * @return Specifies if Connectivity Logs are enabled or not. Defaults to `false`.
     * 
     */
    public Output<Optional<Boolean>> connectivityLogsEnabled() {
        return Codegen.optional(this.connectivityLogsEnabled);
    }
    /**
     * A `cors` block as documented below.
     * 
     */
    @Export(name="cors", type=List.class, parameters={ServiceCor.class})
    private Output<List<ServiceCor>> cors;

    /**
     * @return A `cors` block as documented below.
     * 
     */
    public Output<List<ServiceCor>> cors() {
        return this.cors;
    }
    /**
     * The FQDN of the SignalR service.
     * 
     */
    @Export(name="hostname", type=String.class, parameters={})
    private Output<String> hostname;

    /**
     * @return The FQDN of the SignalR service.
     * 
     */
    public Output<String> hostname() {
        return this.hostname;
    }
    /**
     * The publicly accessible IP of the SignalR service.
     * 
     */
    @Export(name="ipAddress", type=String.class, parameters={})
    private Output<String> ipAddress;

    /**
     * @return The publicly accessible IP of the SignalR service.
     * 
     */
    public Output<String> ipAddress() {
        return this.ipAddress;
    }
    /**
     * A `live_trace` block as defined below.
     * 
     */
    @Export(name="liveTrace", type=ServiceLiveTrace.class, parameters={})
    private Output</* @Nullable */ ServiceLiveTrace> liveTrace;

    /**
     * @return A `live_trace` block as defined below.
     * 
     */
    public Output<Optional<ServiceLiveTrace>> liveTrace() {
        return Codegen.optional(this.liveTrace);
    }
    /**
     * Specifies if Live Trace is enabled or not. Defaults to `false`.
     * 
     * @deprecated
     * `live_trace_enabled` has been deprecated in favor of `live_trace` and will be removed in 4.0.
     * 
     */
    @Deprecated /* `live_trace_enabled` has been deprecated in favor of `live_trace` and will be removed in 4.0. */
    @Export(name="liveTraceEnabled", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> liveTraceEnabled;

    /**
     * @return Specifies if Live Trace is enabled or not. Defaults to `false`.
     * 
     */
    public Output<Optional<Boolean>> liveTraceEnabled() {
        return Codegen.optional(this.liveTraceEnabled);
    }
    /**
     * Specifies the supported Azure location where the SignalR service exists. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="location", type=String.class, parameters={})
    private Output<String> location;

    /**
     * @return Specifies the supported Azure location where the SignalR service exists. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> location() {
        return this.location;
    }
    /**
     * Specifies if Messaging Logs are enabled or not. Defaults to `false`.
     * 
     */
    @Export(name="messagingLogsEnabled", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> messagingLogsEnabled;

    /**
     * @return Specifies if Messaging Logs are enabled or not. Defaults to `false`.
     * 
     */
    public Output<Optional<Boolean>> messagingLogsEnabled() {
        return Codegen.optional(this.messagingLogsEnabled);
    }
    /**
     * The name of the SignalR service. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return The name of the SignalR service. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The primary access key for the SignalR service.
     * 
     */
    @Export(name="primaryAccessKey", type=String.class, parameters={})
    private Output<String> primaryAccessKey;

    /**
     * @return The primary access key for the SignalR service.
     * 
     */
    public Output<String> primaryAccessKey() {
        return this.primaryAccessKey;
    }
    /**
     * The primary connection string for the SignalR service.
     * 
     */
    @Export(name="primaryConnectionString", type=String.class, parameters={})
    private Output<String> primaryConnectionString;

    /**
     * @return The primary connection string for the SignalR service.
     * 
     */
    public Output<String> primaryConnectionString() {
        return this.primaryConnectionString;
    }
    /**
     * The publicly accessible port of the SignalR service which is designed for browser/client use.
     * 
     */
    @Export(name="publicPort", type=Integer.class, parameters={})
    private Output<Integer> publicPort;

    /**
     * @return The publicly accessible port of the SignalR service which is designed for browser/client use.
     * 
     */
    public Output<Integer> publicPort() {
        return this.publicPort;
    }
    /**
     * The name of the resource group in which to create the SignalR service. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="resourceGroupName", type=String.class, parameters={})
    private Output<String> resourceGroupName;

    /**
     * @return The name of the resource group in which to create the SignalR service. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }
    /**
     * The secondary access key for the SignalR service.
     * 
     */
    @Export(name="secondaryAccessKey", type=String.class, parameters={})
    private Output<String> secondaryAccessKey;

    /**
     * @return The secondary access key for the SignalR service.
     * 
     */
    public Output<String> secondaryAccessKey() {
        return this.secondaryAccessKey;
    }
    /**
     * The secondary connection string for the SignalR service.
     * 
     */
    @Export(name="secondaryConnectionString", type=String.class, parameters={})
    private Output<String> secondaryConnectionString;

    /**
     * @return The secondary connection string for the SignalR service.
     * 
     */
    public Output<String> secondaryConnectionString() {
        return this.secondaryConnectionString;
    }
    /**
     * The publicly accessible port of the SignalR service which is designed for customer server side use.
     * 
     */
    @Export(name="serverPort", type=Integer.class, parameters={})
    private Output<Integer> serverPort;

    /**
     * @return The publicly accessible port of the SignalR service which is designed for customer server side use.
     * 
     */
    public Output<Integer> serverPort() {
        return this.serverPort;
    }
    /**
     * Specifies the service mode. Possible values are `Classic`, `Default` and `Serverless`. Defaults to `Default`.
     * 
     */
    @Export(name="serviceMode", type=String.class, parameters={})
    private Output</* @Nullable */ String> serviceMode;

    /**
     * @return Specifies the service mode. Possible values are `Classic`, `Default` and `Serverless`. Defaults to `Default`.
     * 
     */
    public Output<Optional<String>> serviceMode() {
        return Codegen.optional(this.serviceMode);
    }
    /**
     * A `sku` block as documented below.
     * 
     */
    @Export(name="sku", type=ServiceSku.class, parameters={})
    private Output<ServiceSku> sku;

    /**
     * @return A `sku` block as documented below.
     * 
     */
    public Output<ServiceSku> sku() {
        return this.sku;
    }
    /**
     * A mapping of tags to assign to the resource.
     * 
     */
    @Export(name="tags", type=Map.class, parameters={String.class, String.class})
    private Output</* @Nullable */ Map<String,String>> tags;

    /**
     * @return A mapping of tags to assign to the resource.
     * 
     */
    public Output<Optional<Map<String,String>>> tags() {
        return Codegen.optional(this.tags);
    }
    /**
     * An `upstream_endpoint` block as documented below. Using this block requires the SignalR service to be Serverless. When creating multiple blocks they will be processed in the order they are defined in.
     * 
     */
    @Export(name="upstreamEndpoints", type=List.class, parameters={ServiceUpstreamEndpoint.class})
    private Output</* @Nullable */ List<ServiceUpstreamEndpoint>> upstreamEndpoints;

    /**
     * @return An `upstream_endpoint` block as documented below. Using this block requires the SignalR service to be Serverless. When creating multiple blocks they will be processed in the order they are defined in.
     * 
     */
    public Output<Optional<List<ServiceUpstreamEndpoint>>> upstreamEndpoints() {
        return Codegen.optional(this.upstreamEndpoints);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Service(String name) {
        this(name, ServiceArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Service(String name, ServiceArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Service(String name, ServiceArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:signalr/service:Service", name, args == null ? ServiceArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private Service(String name, Output<String> id, @Nullable ServiceState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:signalr/service:Service", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Service get(String name, Output<String> id, @Nullable ServiceState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Service(name, id, state, options);
    }
}
