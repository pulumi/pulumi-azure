// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.datafactory.inputs;

import com.pulumi.azure.datafactory.inputs.IntegrationRuntimeSelfHostedRbacAuthorizationArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class IntegrationRuntimeSelfHostedState extends com.pulumi.resources.ResourceArgs {

    public static final IntegrationRuntimeSelfHostedState Empty = new IntegrationRuntimeSelfHostedState();

    /**
     * The Data Factory ID in which to associate the Linked Service with. Changing this forces a new resource.
     * 
     */
    @Import(name="dataFactoryId")
    private @Nullable Output<String> dataFactoryId;

    /**
     * @return The Data Factory ID in which to associate the Linked Service with. Changing this forces a new resource.
     * 
     */
    public Optional<Output<String>> dataFactoryId() {
        return Optional.ofNullable(this.dataFactoryId);
    }

    /**
     * Integration runtime description.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return Integration runtime description.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * The name which should be used for this Data Factory. Changing this forces a new Data Factory Self-hosted Integration Runtime to be created.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name which should be used for this Data Factory. Changing this forces a new Data Factory Self-hosted Integration Runtime to be created.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The primary integration runtime authentication key.
     * 
     */
    @Import(name="primaryAuthorizationKey")
    private @Nullable Output<String> primaryAuthorizationKey;

    /**
     * @return The primary integration runtime authentication key.
     * 
     */
    public Optional<Output<String>> primaryAuthorizationKey() {
        return Optional.ofNullable(this.primaryAuthorizationKey);
    }

    /**
     * A `rbac_authorization` block as defined below.
     * 
     */
    @Import(name="rbacAuthorizations")
    private @Nullable Output<List<IntegrationRuntimeSelfHostedRbacAuthorizationArgs>> rbacAuthorizations;

    /**
     * @return A `rbac_authorization` block as defined below.
     * 
     */
    public Optional<Output<List<IntegrationRuntimeSelfHostedRbacAuthorizationArgs>>> rbacAuthorizations() {
        return Optional.ofNullable(this.rbacAuthorizations);
    }

    /**
     * The secondary integration runtime authentication key.
     * 
     */
    @Import(name="secondaryAuthorizationKey")
    private @Nullable Output<String> secondaryAuthorizationKey;

    /**
     * @return The secondary integration runtime authentication key.
     * 
     */
    public Optional<Output<String>> secondaryAuthorizationKey() {
        return Optional.ofNullable(this.secondaryAuthorizationKey);
    }

    private IntegrationRuntimeSelfHostedState() {}

    private IntegrationRuntimeSelfHostedState(IntegrationRuntimeSelfHostedState $) {
        this.dataFactoryId = $.dataFactoryId;
        this.description = $.description;
        this.name = $.name;
        this.primaryAuthorizationKey = $.primaryAuthorizationKey;
        this.rbacAuthorizations = $.rbacAuthorizations;
        this.secondaryAuthorizationKey = $.secondaryAuthorizationKey;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(IntegrationRuntimeSelfHostedState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private IntegrationRuntimeSelfHostedState $;

        public Builder() {
            $ = new IntegrationRuntimeSelfHostedState();
        }

        public Builder(IntegrationRuntimeSelfHostedState defaults) {
            $ = new IntegrationRuntimeSelfHostedState(Objects.requireNonNull(defaults));
        }

        /**
         * @param dataFactoryId The Data Factory ID in which to associate the Linked Service with. Changing this forces a new resource.
         * 
         * @return builder
         * 
         */
        public Builder dataFactoryId(@Nullable Output<String> dataFactoryId) {
            $.dataFactoryId = dataFactoryId;
            return this;
        }

        /**
         * @param dataFactoryId The Data Factory ID in which to associate the Linked Service with. Changing this forces a new resource.
         * 
         * @return builder
         * 
         */
        public Builder dataFactoryId(String dataFactoryId) {
            return dataFactoryId(Output.of(dataFactoryId));
        }

        /**
         * @param description Integration runtime description.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description Integration runtime description.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param name The name which should be used for this Data Factory. Changing this forces a new Data Factory Self-hosted Integration Runtime to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name which should be used for this Data Factory. Changing this forces a new Data Factory Self-hosted Integration Runtime to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param primaryAuthorizationKey The primary integration runtime authentication key.
         * 
         * @return builder
         * 
         */
        public Builder primaryAuthorizationKey(@Nullable Output<String> primaryAuthorizationKey) {
            $.primaryAuthorizationKey = primaryAuthorizationKey;
            return this;
        }

        /**
         * @param primaryAuthorizationKey The primary integration runtime authentication key.
         * 
         * @return builder
         * 
         */
        public Builder primaryAuthorizationKey(String primaryAuthorizationKey) {
            return primaryAuthorizationKey(Output.of(primaryAuthorizationKey));
        }

        /**
         * @param rbacAuthorizations A `rbac_authorization` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder rbacAuthorizations(@Nullable Output<List<IntegrationRuntimeSelfHostedRbacAuthorizationArgs>> rbacAuthorizations) {
            $.rbacAuthorizations = rbacAuthorizations;
            return this;
        }

        /**
         * @param rbacAuthorizations A `rbac_authorization` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder rbacAuthorizations(List<IntegrationRuntimeSelfHostedRbacAuthorizationArgs> rbacAuthorizations) {
            return rbacAuthorizations(Output.of(rbacAuthorizations));
        }

        /**
         * @param rbacAuthorizations A `rbac_authorization` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder rbacAuthorizations(IntegrationRuntimeSelfHostedRbacAuthorizationArgs... rbacAuthorizations) {
            return rbacAuthorizations(List.of(rbacAuthorizations));
        }

        /**
         * @param secondaryAuthorizationKey The secondary integration runtime authentication key.
         * 
         * @return builder
         * 
         */
        public Builder secondaryAuthorizationKey(@Nullable Output<String> secondaryAuthorizationKey) {
            $.secondaryAuthorizationKey = secondaryAuthorizationKey;
            return this;
        }

        /**
         * @param secondaryAuthorizationKey The secondary integration runtime authentication key.
         * 
         * @return builder
         * 
         */
        public Builder secondaryAuthorizationKey(String secondaryAuthorizationKey) {
            return secondaryAuthorizationKey(Output.of(secondaryAuthorizationKey));
        }

        public IntegrationRuntimeSelfHostedState build() {
            return $;
        }
    }

}
