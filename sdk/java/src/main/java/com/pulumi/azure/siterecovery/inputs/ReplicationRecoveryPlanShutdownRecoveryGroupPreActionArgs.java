// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.siterecovery.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ReplicationRecoveryPlanShutdownRecoveryGroupPreActionArgs extends com.pulumi.resources.ResourceArgs {

    public static final ReplicationRecoveryPlanShutdownRecoveryGroupPreActionArgs Empty = new ReplicationRecoveryPlanShutdownRecoveryGroupPreActionArgs();

    /**
     * The fabric location of runbook or script. Possible values are `Primary` and `Recovery`. It must not be specified when `type` is `ManualActionDetails`.
     * 
     * &gt; **NOTE:** This is required when `type` is set to `AutomationRunbookActionDetails` or `ScriptActionDetails`.
     * 
     */
    @Import(name="fabricLocation")
    private @Nullable Output<String> fabricLocation;

    /**
     * @return The fabric location of runbook or script. Possible values are `Primary` and `Recovery`. It must not be specified when `type` is `ManualActionDetails`.
     * 
     * &gt; **NOTE:** This is required when `type` is set to `AutomationRunbookActionDetails` or `ScriptActionDetails`.
     * 
     */
    public Optional<Output<String>> fabricLocation() {
        return Optional.ofNullable(this.fabricLocation);
    }

    /**
     * Directions of fail over. Possible values are `PrimaryToRecovery` and `RecoveryToPrimary`
     * 
     */
    @Import(name="failOverDirections", required=true)
    private Output<List<String>> failOverDirections;

    /**
     * @return Directions of fail over. Possible values are `PrimaryToRecovery` and `RecoveryToPrimary`
     * 
     */
    public Output<List<String>> failOverDirections() {
        return this.failOverDirections;
    }

    /**
     * Types of fail over. Possible values are `TestFailover`, `PlannedFailover` and `UnplannedFailover`
     * 
     */
    @Import(name="failOverTypes", required=true)
    private Output<List<String>> failOverTypes;

    /**
     * @return Types of fail over. Possible values are `TestFailover`, `PlannedFailover` and `UnplannedFailover`
     * 
     */
    public Output<List<String>> failOverTypes() {
        return this.failOverTypes;
    }

    /**
     * Instructions of manual action.
     * 
     * &gt; **NOTE:** This property is required when `type` is set to `ManualActionDetails`.
     * 
     */
    @Import(name="manualActionInstruction")
    private @Nullable Output<String> manualActionInstruction;

    /**
     * @return Instructions of manual action.
     * 
     * &gt; **NOTE:** This property is required when `type` is set to `ManualActionDetails`.
     * 
     */
    public Optional<Output<String>> manualActionInstruction() {
        return Optional.ofNullable(this.manualActionInstruction);
    }

    /**
     * The name of the Replication Plan. The name can contain only letters, numbers, and hyphens. It should start with a letter and end with a letter or a number. Can be a maximum of 63 characters. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    /**
     * @return The name of the Replication Plan. The name can contain only letters, numbers, and hyphens. It should start with a letter and end with a letter or a number. Can be a maximum of 63 characters. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    /**
     * Id of runbook.
     * 
     * &gt; **NOTE:** This property is required when `type` is set to `AutomationRunbookActionDetails`.
     * 
     */
    @Import(name="runbookId")
    private @Nullable Output<String> runbookId;

    /**
     * @return Id of runbook.
     * 
     * &gt; **NOTE:** This property is required when `type` is set to `AutomationRunbookActionDetails`.
     * 
     */
    public Optional<Output<String>> runbookId() {
        return Optional.ofNullable(this.runbookId);
    }

    /**
     * Path of action script.
     * 
     * &gt; **NOTE:** This property is required when `type` is set to `ScriptActionDetails`.
     * 
     */
    @Import(name="scriptPath")
    private @Nullable Output<String> scriptPath;

    /**
     * @return Path of action script.
     * 
     * &gt; **NOTE:** This property is required when `type` is set to `ScriptActionDetails`.
     * 
     */
    public Optional<Output<String>> scriptPath() {
        return Optional.ofNullable(this.scriptPath);
    }

    /**
     * Type of the action detail. Possible values are `AutomationRunbookActionDetails`, `ManualActionDetails` and `ScriptActionDetails`.
     * 
     */
    @Import(name="type", required=true)
    private Output<String> type;

    /**
     * @return Type of the action detail. Possible values are `AutomationRunbookActionDetails`, `ManualActionDetails` and `ScriptActionDetails`.
     * 
     */
    public Output<String> type() {
        return this.type;
    }

    private ReplicationRecoveryPlanShutdownRecoveryGroupPreActionArgs() {}

    private ReplicationRecoveryPlanShutdownRecoveryGroupPreActionArgs(ReplicationRecoveryPlanShutdownRecoveryGroupPreActionArgs $) {
        this.fabricLocation = $.fabricLocation;
        this.failOverDirections = $.failOverDirections;
        this.failOverTypes = $.failOverTypes;
        this.manualActionInstruction = $.manualActionInstruction;
        this.name = $.name;
        this.runbookId = $.runbookId;
        this.scriptPath = $.scriptPath;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ReplicationRecoveryPlanShutdownRecoveryGroupPreActionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ReplicationRecoveryPlanShutdownRecoveryGroupPreActionArgs $;

        public Builder() {
            $ = new ReplicationRecoveryPlanShutdownRecoveryGroupPreActionArgs();
        }

        public Builder(ReplicationRecoveryPlanShutdownRecoveryGroupPreActionArgs defaults) {
            $ = new ReplicationRecoveryPlanShutdownRecoveryGroupPreActionArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param fabricLocation The fabric location of runbook or script. Possible values are `Primary` and `Recovery`. It must not be specified when `type` is `ManualActionDetails`.
         * 
         * &gt; **NOTE:** This is required when `type` is set to `AutomationRunbookActionDetails` or `ScriptActionDetails`.
         * 
         * @return builder
         * 
         */
        public Builder fabricLocation(@Nullable Output<String> fabricLocation) {
            $.fabricLocation = fabricLocation;
            return this;
        }

        /**
         * @param fabricLocation The fabric location of runbook or script. Possible values are `Primary` and `Recovery`. It must not be specified when `type` is `ManualActionDetails`.
         * 
         * &gt; **NOTE:** This is required when `type` is set to `AutomationRunbookActionDetails` or `ScriptActionDetails`.
         * 
         * @return builder
         * 
         */
        public Builder fabricLocation(String fabricLocation) {
            return fabricLocation(Output.of(fabricLocation));
        }

        /**
         * @param failOverDirections Directions of fail over. Possible values are `PrimaryToRecovery` and `RecoveryToPrimary`
         * 
         * @return builder
         * 
         */
        public Builder failOverDirections(Output<List<String>> failOverDirections) {
            $.failOverDirections = failOverDirections;
            return this;
        }

        /**
         * @param failOverDirections Directions of fail over. Possible values are `PrimaryToRecovery` and `RecoveryToPrimary`
         * 
         * @return builder
         * 
         */
        public Builder failOverDirections(List<String> failOverDirections) {
            return failOverDirections(Output.of(failOverDirections));
        }

        /**
         * @param failOverDirections Directions of fail over. Possible values are `PrimaryToRecovery` and `RecoveryToPrimary`
         * 
         * @return builder
         * 
         */
        public Builder failOverDirections(String... failOverDirections) {
            return failOverDirections(List.of(failOverDirections));
        }

        /**
         * @param failOverTypes Types of fail over. Possible values are `TestFailover`, `PlannedFailover` and `UnplannedFailover`
         * 
         * @return builder
         * 
         */
        public Builder failOverTypes(Output<List<String>> failOverTypes) {
            $.failOverTypes = failOverTypes;
            return this;
        }

        /**
         * @param failOverTypes Types of fail over. Possible values are `TestFailover`, `PlannedFailover` and `UnplannedFailover`
         * 
         * @return builder
         * 
         */
        public Builder failOverTypes(List<String> failOverTypes) {
            return failOverTypes(Output.of(failOverTypes));
        }

        /**
         * @param failOverTypes Types of fail over. Possible values are `TestFailover`, `PlannedFailover` and `UnplannedFailover`
         * 
         * @return builder
         * 
         */
        public Builder failOverTypes(String... failOverTypes) {
            return failOverTypes(List.of(failOverTypes));
        }

        /**
         * @param manualActionInstruction Instructions of manual action.
         * 
         * &gt; **NOTE:** This property is required when `type` is set to `ManualActionDetails`.
         * 
         * @return builder
         * 
         */
        public Builder manualActionInstruction(@Nullable Output<String> manualActionInstruction) {
            $.manualActionInstruction = manualActionInstruction;
            return this;
        }

        /**
         * @param manualActionInstruction Instructions of manual action.
         * 
         * &gt; **NOTE:** This property is required when `type` is set to `ManualActionDetails`.
         * 
         * @return builder
         * 
         */
        public Builder manualActionInstruction(String manualActionInstruction) {
            return manualActionInstruction(Output.of(manualActionInstruction));
        }

        /**
         * @param name The name of the Replication Plan. The name can contain only letters, numbers, and hyphens. It should start with a letter and end with a letter or a number. Can be a maximum of 63 characters. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the Replication Plan. The name can contain only letters, numbers, and hyphens. It should start with a letter and end with a letter or a number. Can be a maximum of 63 characters. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param runbookId Id of runbook.
         * 
         * &gt; **NOTE:** This property is required when `type` is set to `AutomationRunbookActionDetails`.
         * 
         * @return builder
         * 
         */
        public Builder runbookId(@Nullable Output<String> runbookId) {
            $.runbookId = runbookId;
            return this;
        }

        /**
         * @param runbookId Id of runbook.
         * 
         * &gt; **NOTE:** This property is required when `type` is set to `AutomationRunbookActionDetails`.
         * 
         * @return builder
         * 
         */
        public Builder runbookId(String runbookId) {
            return runbookId(Output.of(runbookId));
        }

        /**
         * @param scriptPath Path of action script.
         * 
         * &gt; **NOTE:** This property is required when `type` is set to `ScriptActionDetails`.
         * 
         * @return builder
         * 
         */
        public Builder scriptPath(@Nullable Output<String> scriptPath) {
            $.scriptPath = scriptPath;
            return this;
        }

        /**
         * @param scriptPath Path of action script.
         * 
         * &gt; **NOTE:** This property is required when `type` is set to `ScriptActionDetails`.
         * 
         * @return builder
         * 
         */
        public Builder scriptPath(String scriptPath) {
            return scriptPath(Output.of(scriptPath));
        }

        /**
         * @param type Type of the action detail. Possible values are `AutomationRunbookActionDetails`, `ManualActionDetails` and `ScriptActionDetails`.
         * 
         * @return builder
         * 
         */
        public Builder type(Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type Type of the action detail. Possible values are `AutomationRunbookActionDetails`, `ManualActionDetails` and `ScriptActionDetails`.
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        public ReplicationRecoveryPlanShutdownRecoveryGroupPreActionArgs build() {
            if ($.failOverDirections == null) {
                throw new MissingRequiredPropertyException("ReplicationRecoveryPlanShutdownRecoveryGroupPreActionArgs", "failOverDirections");
            }
            if ($.failOverTypes == null) {
                throw new MissingRequiredPropertyException("ReplicationRecoveryPlanShutdownRecoveryGroupPreActionArgs", "failOverTypes");
            }
            if ($.name == null) {
                throw new MissingRequiredPropertyException("ReplicationRecoveryPlanShutdownRecoveryGroupPreActionArgs", "name");
            }
            if ($.type == null) {
                throw new MissingRequiredPropertyException("ReplicationRecoveryPlanShutdownRecoveryGroupPreActionArgs", "type");
            }
            return $;
        }
    }

}
