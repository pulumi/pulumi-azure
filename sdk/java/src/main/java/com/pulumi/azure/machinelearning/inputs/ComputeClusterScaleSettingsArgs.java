// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.machinelearning.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;


public final class ComputeClusterScaleSettingsArgs extends com.pulumi.resources.ResourceArgs {

    public static final ComputeClusterScaleSettingsArgs Empty = new ComputeClusterScaleSettingsArgs();

    /**
     * Maximum node count. Changing this forces a new Machine Learning Compute Cluster to be created.
     * 
     */
    @Import(name="maxNodeCount", required=true)
    private Output<Integer> maxNodeCount;

    /**
     * @return Maximum node count. Changing this forces a new Machine Learning Compute Cluster to be created.
     * 
     */
    public Output<Integer> maxNodeCount() {
        return this.maxNodeCount;
    }

    /**
     * Minimal node count. Changing this forces a new Machine Learning Compute Cluster to be created.
     * 
     */
    @Import(name="minNodeCount", required=true)
    private Output<Integer> minNodeCount;

    /**
     * @return Minimal node count. Changing this forces a new Machine Learning Compute Cluster to be created.
     * 
     */
    public Output<Integer> minNodeCount() {
        return this.minNodeCount;
    }

    /**
     * Node Idle Time Before Scale Down: defines the time until the compute is shutdown when it has gone into Idle state. Is defined according to W3C XML schema standard for duration. Changing this forces a new Machine Learning Compute Cluster to be created.
     * 
     */
    @Import(name="scaleDownNodesAfterIdleDuration", required=true)
    private Output<String> scaleDownNodesAfterIdleDuration;

    /**
     * @return Node Idle Time Before Scale Down: defines the time until the compute is shutdown when it has gone into Idle state. Is defined according to W3C XML schema standard for duration. Changing this forces a new Machine Learning Compute Cluster to be created.
     * 
     */
    public Output<String> scaleDownNodesAfterIdleDuration() {
        return this.scaleDownNodesAfterIdleDuration;
    }

    private ComputeClusterScaleSettingsArgs() {}

    private ComputeClusterScaleSettingsArgs(ComputeClusterScaleSettingsArgs $) {
        this.maxNodeCount = $.maxNodeCount;
        this.minNodeCount = $.minNodeCount;
        this.scaleDownNodesAfterIdleDuration = $.scaleDownNodesAfterIdleDuration;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ComputeClusterScaleSettingsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ComputeClusterScaleSettingsArgs $;

        public Builder() {
            $ = new ComputeClusterScaleSettingsArgs();
        }

        public Builder(ComputeClusterScaleSettingsArgs defaults) {
            $ = new ComputeClusterScaleSettingsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param maxNodeCount Maximum node count. Changing this forces a new Machine Learning Compute Cluster to be created.
         * 
         * @return builder
         * 
         */
        public Builder maxNodeCount(Output<Integer> maxNodeCount) {
            $.maxNodeCount = maxNodeCount;
            return this;
        }

        /**
         * @param maxNodeCount Maximum node count. Changing this forces a new Machine Learning Compute Cluster to be created.
         * 
         * @return builder
         * 
         */
        public Builder maxNodeCount(Integer maxNodeCount) {
            return maxNodeCount(Output.of(maxNodeCount));
        }

        /**
         * @param minNodeCount Minimal node count. Changing this forces a new Machine Learning Compute Cluster to be created.
         * 
         * @return builder
         * 
         */
        public Builder minNodeCount(Output<Integer> minNodeCount) {
            $.minNodeCount = minNodeCount;
            return this;
        }

        /**
         * @param minNodeCount Minimal node count. Changing this forces a new Machine Learning Compute Cluster to be created.
         * 
         * @return builder
         * 
         */
        public Builder minNodeCount(Integer minNodeCount) {
            return minNodeCount(Output.of(minNodeCount));
        }

        /**
         * @param scaleDownNodesAfterIdleDuration Node Idle Time Before Scale Down: defines the time until the compute is shutdown when it has gone into Idle state. Is defined according to W3C XML schema standard for duration. Changing this forces a new Machine Learning Compute Cluster to be created.
         * 
         * @return builder
         * 
         */
        public Builder scaleDownNodesAfterIdleDuration(Output<String> scaleDownNodesAfterIdleDuration) {
            $.scaleDownNodesAfterIdleDuration = scaleDownNodesAfterIdleDuration;
            return this;
        }

        /**
         * @param scaleDownNodesAfterIdleDuration Node Idle Time Before Scale Down: defines the time until the compute is shutdown when it has gone into Idle state. Is defined according to W3C XML schema standard for duration. Changing this forces a new Machine Learning Compute Cluster to be created.
         * 
         * @return builder
         * 
         */
        public Builder scaleDownNodesAfterIdleDuration(String scaleDownNodesAfterIdleDuration) {
            return scaleDownNodesAfterIdleDuration(Output.of(scaleDownNodesAfterIdleDuration));
        }

        public ComputeClusterScaleSettingsArgs build() {
            if ($.maxNodeCount == null) {
                throw new MissingRequiredPropertyException("ComputeClusterScaleSettingsArgs", "maxNodeCount");
            }
            if ($.minNodeCount == null) {
                throw new MissingRequiredPropertyException("ComputeClusterScaleSettingsArgs", "minNodeCount");
            }
            if ($.scaleDownNodesAfterIdleDuration == null) {
                throw new MissingRequiredPropertyException("ComputeClusterScaleSettingsArgs", "scaleDownNodesAfterIdleDuration");
            }
            return $;
        }
    }

}
