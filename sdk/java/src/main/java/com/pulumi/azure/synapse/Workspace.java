// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.synapse;

import com.pulumi.azure.Utilities;
import com.pulumi.azure.synapse.WorkspaceArgs;
import com.pulumi.azure.synapse.inputs.WorkspaceState;
import com.pulumi.azure.synapse.outputs.WorkspaceAadAdmin;
import com.pulumi.azure.synapse.outputs.WorkspaceAzureDevopsRepo;
import com.pulumi.azure.synapse.outputs.WorkspaceCustomerManagedKey;
import com.pulumi.azure.synapse.outputs.WorkspaceGithubRepo;
import com.pulumi.azure.synapse.outputs.WorkspaceIdentity;
import com.pulumi.azure.synapse.outputs.WorkspaceSqlAadAdmin;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Manages a Synapse Workspace.
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.azure.core.ResourceGroup;
 * import com.pulumi.azure.core.ResourceGroupArgs;
 * import com.pulumi.azure.storage.Account;
 * import com.pulumi.azure.storage.AccountArgs;
 * import com.pulumi.azure.storage.DataLakeGen2Filesystem;
 * import com.pulumi.azure.storage.DataLakeGen2FilesystemArgs;
 * import com.pulumi.azure.synapse.Workspace;
 * import com.pulumi.azure.synapse.WorkspaceArgs;
 * import com.pulumi.azure.synapse.inputs.WorkspaceIdentityArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new ResourceGroup("example", ResourceGroupArgs.builder()
 *             .name("example-resources")
 *             .location("West Europe")
 *             .build());
 * 
 *         var exampleAccount = new Account("exampleAccount", AccountArgs.builder()
 *             .name("examplestorageacc")
 *             .resourceGroupName(example.name())
 *             .location(example.location())
 *             .accountTier("Standard")
 *             .accountReplicationType("LRS")
 *             .accountKind("StorageV2")
 *             .isHnsEnabled("true")
 *             .build());
 * 
 *         var exampleDataLakeGen2Filesystem = new DataLakeGen2Filesystem("exampleDataLakeGen2Filesystem", DataLakeGen2FilesystemArgs.builder()
 *             .name("example")
 *             .storageAccountId(exampleAccount.id())
 *             .build());
 * 
 *         var exampleWorkspace = new Workspace("exampleWorkspace", WorkspaceArgs.builder()
 *             .name("example")
 *             .resourceGroupName(example.name())
 *             .location(example.location())
 *             .storageDataLakeGen2FilesystemId(exampleDataLakeGen2Filesystem.id())
 *             .sqlAdministratorLogin("sqladminuser")
 *             .sqlAdministratorLoginPassword("H{@literal @}Sh1CoR3!")
 *             .identity(WorkspaceIdentityArgs.builder()
 *                 .type("SystemAssigned")
 *                 .build())
 *             .tags(Map.of("Env", "production"))
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ### Creating A Workspace With Customer Managed Key And Azure AD Admin
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.azure.core.CoreFunctions;
 * import com.pulumi.azure.core.ResourceGroup;
 * import com.pulumi.azure.core.ResourceGroupArgs;
 * import com.pulumi.azure.storage.Account;
 * import com.pulumi.azure.storage.AccountArgs;
 * import com.pulumi.azure.storage.DataLakeGen2Filesystem;
 * import com.pulumi.azure.storage.DataLakeGen2FilesystemArgs;
 * import com.pulumi.azure.keyvault.KeyVault;
 * import com.pulumi.azure.keyvault.KeyVaultArgs;
 * import com.pulumi.azure.keyvault.AccessPolicy;
 * import com.pulumi.azure.keyvault.AccessPolicyArgs;
 * import com.pulumi.azure.keyvault.Key;
 * import com.pulumi.azure.keyvault.KeyArgs;
 * import com.pulumi.azure.synapse.Workspace;
 * import com.pulumi.azure.synapse.WorkspaceArgs;
 * import com.pulumi.azure.synapse.inputs.WorkspaceCustomerManagedKeyArgs;
 * import com.pulumi.azure.synapse.inputs.WorkspaceIdentityArgs;
 * import com.pulumi.azure.synapse.WorkspaceKey;
 * import com.pulumi.azure.synapse.WorkspaceKeyArgs;
 * import com.pulumi.azure.synapse.WorkspaceAadAdmin;
 * import com.pulumi.azure.synapse.WorkspaceAadAdminArgs;
 * import com.pulumi.resources.CustomResourceOptions;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         final var current = CoreFunctions.getClientConfig();
 * 
 *         var example = new ResourceGroup("example", ResourceGroupArgs.builder()
 *             .name("example-resources")
 *             .location("West Europe")
 *             .build());
 * 
 *         var exampleAccount = new Account("exampleAccount", AccountArgs.builder()
 *             .name("examplestorageacc")
 *             .resourceGroupName(example.name())
 *             .location(example.location())
 *             .accountTier("Standard")
 *             .accountReplicationType("LRS")
 *             .accountKind("StorageV2")
 *             .isHnsEnabled("true")
 *             .build());
 * 
 *         var exampleDataLakeGen2Filesystem = new DataLakeGen2Filesystem("exampleDataLakeGen2Filesystem", DataLakeGen2FilesystemArgs.builder()
 *             .name("example")
 *             .storageAccountId(exampleAccount.id())
 *             .build());
 * 
 *         var exampleKeyVault = new KeyVault("exampleKeyVault", KeyVaultArgs.builder()
 *             .name("example")
 *             .location(example.location())
 *             .resourceGroupName(example.name())
 *             .tenantId(current.applyValue(getClientConfigResult -> getClientConfigResult.tenantId()))
 *             .skuName("standard")
 *             .purgeProtectionEnabled(true)
 *             .build());
 * 
 *         var deployer = new AccessPolicy("deployer", AccessPolicyArgs.builder()
 *             .keyVaultId(exampleKeyVault.id())
 *             .tenantId(current.applyValue(getClientConfigResult -> getClientConfigResult.tenantId()))
 *             .objectId(current.applyValue(getClientConfigResult -> getClientConfigResult.objectId()))
 *             .keyPermissions(            
 *                 "Create",
 *                 "Get",
 *                 "Delete",
 *                 "Purge",
 *                 "GetRotationPolicy")
 *             .build());
 * 
 *         var exampleKey = new Key("exampleKey", KeyArgs.builder()
 *             .name("workspaceencryptionkey")
 *             .keyVaultId(exampleKeyVault.id())
 *             .keyType("RSA")
 *             .keySize(2048)
 *             .keyOpts(            
 *                 "unwrapKey",
 *                 "wrapKey")
 *             .build(), CustomResourceOptions.builder()
 *                 .dependsOn(deployer)
 *                 .build());
 * 
 *         var exampleWorkspace = new Workspace("exampleWorkspace", WorkspaceArgs.builder()
 *             .name("example")
 *             .resourceGroupName(example.name())
 *             .location(example.location())
 *             .storageDataLakeGen2FilesystemId(exampleDataLakeGen2Filesystem.id())
 *             .sqlAdministratorLogin("sqladminuser")
 *             .sqlAdministratorLoginPassword("H{@literal @}Sh1CoR3!")
 *             .customerManagedKey(WorkspaceCustomerManagedKeyArgs.builder()
 *                 .keyVersionlessId(exampleKey.versionlessId())
 *                 .keyName("enckey")
 *                 .build())
 *             .identity(WorkspaceIdentityArgs.builder()
 *                 .type("SystemAssigned")
 *                 .build())
 *             .tags(Map.of("Env", "production"))
 *             .build());
 * 
 *         var workspacePolicy = new AccessPolicy("workspacePolicy", AccessPolicyArgs.builder()
 *             .keyVaultId(exampleKeyVault.id())
 *             .tenantId(exampleWorkspace.identity().applyValue(identity -> identity.tenantId()))
 *             .objectId(exampleWorkspace.identity().applyValue(identity -> identity.principalId()))
 *             .keyPermissions(            
 *                 "Get",
 *                 "WrapKey",
 *                 "UnwrapKey")
 *             .build());
 * 
 *         var exampleWorkspaceKey = new WorkspaceKey("exampleWorkspaceKey", WorkspaceKeyArgs.builder()
 *             .customerManagedKeyVersionlessId(exampleKey.versionlessId())
 *             .synapseWorkspaceId(exampleWorkspace.id())
 *             .active(true)
 *             .customerManagedKeyName("enckey")
 *             .build(), CustomResourceOptions.builder()
 *                 .dependsOn(workspacePolicy)
 *                 .build());
 * 
 *         var exampleWorkspaceAadAdmin = new WorkspaceAadAdmin("exampleWorkspaceAadAdmin", WorkspaceAadAdminArgs.builder()
 *             .synapseWorkspaceId(exampleWorkspace.id())
 *             .login("AzureAD Admin")
 *             .objectId("00000000-0000-0000-0000-000000000000")
 *             .tenantId("00000000-0000-0000-0000-000000000000")
 *             .build(), CustomResourceOptions.builder()
 *                 .dependsOn(exampleWorkspaceKey)
 *                 .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * Synapse Workspace can be imported using the `resource id`, e.g.
 * 
 * ```sh
 * $ pulumi import azure:synapse/workspace:Workspace example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.Synapse/workspaces/workspace1
 * ```
 * 
 */
@ResourceType(type="azure:synapse/workspace:Workspace")
public class Workspace extends com.pulumi.resources.CustomResource {
    /**
     * @deprecated
     * The `aad_admin` block has been superseded by the `azure.synapse.WorkspaceAadAdmin` resource and will be removed in v4.0 of the AzureRM Provider.
     * 
     */
    @Deprecated /* The `aad_admin` block has been superseded by the `azure.synapse.WorkspaceAadAdmin` resource and will be removed in v4.0 of the AzureRM Provider. */
    @Export(name="aadAdmin", refs={WorkspaceAadAdmin.class}, tree="[0]")
    private Output<WorkspaceAadAdmin> aadAdmin;

    public Output<WorkspaceAadAdmin> aadAdmin() {
        return this.aadAdmin;
    }
    /**
     * An `azure_devops_repo` block as defined below.
     * 
     */
    @Export(name="azureDevopsRepo", refs={WorkspaceAzureDevopsRepo.class}, tree="[0]")
    private Output</* @Nullable */ WorkspaceAzureDevopsRepo> azureDevopsRepo;

    /**
     * @return An `azure_devops_repo` block as defined below.
     * 
     */
    public Output<Optional<WorkspaceAzureDevopsRepo>> azureDevopsRepo() {
        return Codegen.optional(this.azureDevopsRepo);
    }
    /**
     * Is Azure Active Directory Authentication the only way to authenticate with resources inside this synapse Workspace. Defaults to `false`.
     * 
     */
    @Export(name="azureadAuthenticationOnly", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> azureadAuthenticationOnly;

    /**
     * @return Is Azure Active Directory Authentication the only way to authenticate with resources inside this synapse Workspace. Defaults to `false`.
     * 
     */
    public Output<Optional<Boolean>> azureadAuthenticationOnly() {
        return Codegen.optional(this.azureadAuthenticationOnly);
    }
    /**
     * Subnet ID used for computes in workspace Changing this forces a new resource to be created.
     * 
     */
    @Export(name="computeSubnetId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> computeSubnetId;

    /**
     * @return Subnet ID used for computes in workspace Changing this forces a new resource to be created.
     * 
     */
    public Output<Optional<String>> computeSubnetId() {
        return Codegen.optional(this.computeSubnetId);
    }
    /**
     * A list of Connectivity endpoints for this Synapse Workspace.
     * 
     */
    @Export(name="connectivityEndpoints", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output<Map<String,String>> connectivityEndpoints;

    /**
     * @return A list of Connectivity endpoints for this Synapse Workspace.
     * 
     */
    public Output<Map<String,String>> connectivityEndpoints() {
        return this.connectivityEndpoints;
    }
    /**
     * A `customer_managed_key` block as defined below.
     * 
     */
    @Export(name="customerManagedKey", refs={WorkspaceCustomerManagedKey.class}, tree="[0]")
    private Output</* @Nullable */ WorkspaceCustomerManagedKey> customerManagedKey;

    /**
     * @return A `customer_managed_key` block as defined below.
     * 
     */
    public Output<Optional<WorkspaceCustomerManagedKey>> customerManagedKey() {
        return Codegen.optional(this.customerManagedKey);
    }
    /**
     * Is data exfiltration protection enabled in this workspace? If set to `true`, `managed_virtual_network_enabled` must also be set to `true`. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="dataExfiltrationProtectionEnabled", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> dataExfiltrationProtectionEnabled;

    /**
     * @return Is data exfiltration protection enabled in this workspace? If set to `true`, `managed_virtual_network_enabled` must also be set to `true`. Changing this forces a new resource to be created.
     * 
     */
    public Output<Optional<Boolean>> dataExfiltrationProtectionEnabled() {
        return Codegen.optional(this.dataExfiltrationProtectionEnabled);
    }
    /**
     * A `github_repo` block as defined below.
     * 
     */
    @Export(name="githubRepo", refs={WorkspaceGithubRepo.class}, tree="[0]")
    private Output</* @Nullable */ WorkspaceGithubRepo> githubRepo;

    /**
     * @return A `github_repo` block as defined below.
     * 
     */
    public Output<Optional<WorkspaceGithubRepo>> githubRepo() {
        return Codegen.optional(this.githubRepo);
    }
    /**
     * An `identity` block as defined below.
     * 
     */
    @Export(name="identity", refs={WorkspaceIdentity.class}, tree="[0]")
    private Output</* @Nullable */ WorkspaceIdentity> identity;

    /**
     * @return An `identity` block as defined below.
     * 
     */
    public Output<Optional<WorkspaceIdentity>> identity() {
        return Codegen.optional(this.identity);
    }
    /**
     * Allowed AAD Tenant Ids For Linking.
     * 
     */
    @Export(name="linkingAllowedForAadTenantIds", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> linkingAllowedForAadTenantIds;

    /**
     * @return Allowed AAD Tenant Ids For Linking.
     * 
     */
    public Output<Optional<List<String>>> linkingAllowedForAadTenantIds() {
        return Codegen.optional(this.linkingAllowedForAadTenantIds);
    }
    /**
     * Specifies the Azure Region where the synapse Workspace should exist. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="location", refs={String.class}, tree="[0]")
    private Output<String> location;

    /**
     * @return Specifies the Azure Region where the synapse Workspace should exist. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> location() {
        return this.location;
    }
    /**
     * Workspace managed resource group. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="managedResourceGroupName", refs={String.class}, tree="[0]")
    private Output<String> managedResourceGroupName;

    /**
     * @return Workspace managed resource group. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> managedResourceGroupName() {
        return this.managedResourceGroupName;
    }
    /**
     * Is Virtual Network enabled for all computes in this workspace? Changing this forces a new resource to be created.
     * 
     */
    @Export(name="managedVirtualNetworkEnabled", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> managedVirtualNetworkEnabled;

    /**
     * @return Is Virtual Network enabled for all computes in this workspace? Changing this forces a new resource to be created.
     * 
     */
    public Output<Optional<Boolean>> managedVirtualNetworkEnabled() {
        return Codegen.optional(this.managedVirtualNetworkEnabled);
    }
    /**
     * Specifies the name which should be used for this synapse Workspace. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return Specifies the name which should be used for this synapse Workspace. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Whether public network access is allowed for the Cognitive Account. Defaults to `true`.
     * 
     */
    @Export(name="publicNetworkAccessEnabled", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> publicNetworkAccessEnabled;

    /**
     * @return Whether public network access is allowed for the Cognitive Account. Defaults to `true`.
     * 
     */
    public Output<Optional<Boolean>> publicNetworkAccessEnabled() {
        return Codegen.optional(this.publicNetworkAccessEnabled);
    }
    /**
     * The ID of purview account.
     * 
     */
    @Export(name="purviewId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> purviewId;

    /**
     * @return The ID of purview account.
     * 
     */
    public Output<Optional<String>> purviewId() {
        return Codegen.optional(this.purviewId);
    }
    /**
     * Specifies the name of the Resource Group where the synapse Workspace should exist. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="resourceGroupName", refs={String.class}, tree="[0]")
    private Output<String> resourceGroupName;

    /**
     * @return Specifies the name of the Resource Group where the synapse Workspace should exist. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }
    /**
     * @deprecated
     * The `sql_aad_admin` block has been superseded by the `azure.synapse.WorkspaceSqlAadAdmin` resource and will be removed in v4.0 of the AzureRM Provider.
     * 
     */
    @Deprecated /* The `sql_aad_admin` block has been superseded by the `azure.synapse.WorkspaceSqlAadAdmin` resource and will be removed in v4.0 of the AzureRM Provider. */
    @Export(name="sqlAadAdmin", refs={WorkspaceSqlAadAdmin.class}, tree="[0]")
    private Output<WorkspaceSqlAadAdmin> sqlAadAdmin;

    public Output<WorkspaceSqlAadAdmin> sqlAadAdmin() {
        return this.sqlAadAdmin;
    }
    /**
     * Specifies The login name of the SQL administrator. Changing this forces a new resource to be created. If this is not provided `aad_admin` or `customer_managed_key` must be provided.
     * 
     */
    @Export(name="sqlAdministratorLogin", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> sqlAdministratorLogin;

    /**
     * @return Specifies The login name of the SQL administrator. Changing this forces a new resource to be created. If this is not provided `aad_admin` or `customer_managed_key` must be provided.
     * 
     */
    public Output<Optional<String>> sqlAdministratorLogin() {
        return Codegen.optional(this.sqlAdministratorLogin);
    }
    /**
     * The Password associated with the `sql_administrator_login` for the SQL administrator. If this is not provided `aad_admin` or `customer_managed_key` must be provided.
     * 
     */
    @Export(name="sqlAdministratorLoginPassword", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> sqlAdministratorLoginPassword;

    /**
     * @return The Password associated with the `sql_administrator_login` for the SQL administrator. If this is not provided `aad_admin` or `customer_managed_key` must be provided.
     * 
     */
    public Output<Optional<String>> sqlAdministratorLoginPassword() {
        return Codegen.optional(this.sqlAdministratorLoginPassword);
    }
    /**
     * Are pipelines (running as workspace&#39;s system assigned identity) allowed to access SQL pools?
     * 
     */
    @Export(name="sqlIdentityControlEnabled", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> sqlIdentityControlEnabled;

    /**
     * @return Are pipelines (running as workspace&#39;s system assigned identity) allowed to access SQL pools?
     * 
     */
    public Output<Optional<Boolean>> sqlIdentityControlEnabled() {
        return Codegen.optional(this.sqlIdentityControlEnabled);
    }
    /**
     * Specifies the ID of storage data lake gen2 filesystem resource. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="storageDataLakeGen2FilesystemId", refs={String.class}, tree="[0]")
    private Output<String> storageDataLakeGen2FilesystemId;

    /**
     * @return Specifies the ID of storage data lake gen2 filesystem resource. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> storageDataLakeGen2FilesystemId() {
        return this.storageDataLakeGen2FilesystemId;
    }
    /**
     * A mapping of tags which should be assigned to the Synapse Workspace.
     * 
     */
    @Export(name="tags", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output</* @Nullable */ Map<String,String>> tags;

    /**
     * @return A mapping of tags which should be assigned to the Synapse Workspace.
     * 
     */
    public Output<Optional<Map<String,String>>> tags() {
        return Codegen.optional(this.tags);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Workspace(String name) {
        this(name, WorkspaceArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Workspace(String name, WorkspaceArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Workspace(String name, WorkspaceArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:synapse/workspace:Workspace", name, args == null ? WorkspaceArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private Workspace(String name, Output<String> id, @Nullable WorkspaceState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:synapse/workspace:Workspace", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .additionalSecretOutputs(List.of(
                "sqlAdministratorLoginPassword"
            ))
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Workspace get(String name, Output<String> id, @Nullable WorkspaceState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Workspace(name, id, state, options);
    }
}
