// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.synapse;

import com.pulumi.azure.Utilities;
import com.pulumi.azure.synapse.WorkspaceArgs;
import com.pulumi.azure.synapse.inputs.WorkspaceState;
import com.pulumi.azure.synapse.outputs.WorkspaceAadAdmin;
import com.pulumi.azure.synapse.outputs.WorkspaceAzureDevopsRepo;
import com.pulumi.azure.synapse.outputs.WorkspaceCustomerManagedKey;
import com.pulumi.azure.synapse.outputs.WorkspaceGithubRepo;
import com.pulumi.azure.synapse.outputs.WorkspaceIdentity;
import com.pulumi.azure.synapse.outputs.WorkspaceSqlAadAdmin;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Manages a Synapse Workspace.
 * 
 * ## Example Usage
 * ```java
 * package generated_program;
 * 
 * import java.util.*;
 * import java.io.*;
 * import java.nio.*;
 * import com.pulumi.*;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var exampleResourceGroup = new ResourceGroup(&#34;exampleResourceGroup&#34;, ResourceGroupArgs.builder()        
 *             .location(&#34;West Europe&#34;)
 *             .build());
 * 
 *         var exampleAccount = new Account(&#34;exampleAccount&#34;, AccountArgs.builder()        
 *             .resourceGroupName(exampleResourceGroup.name())
 *             .location(exampleResourceGroup.location())
 *             .accountTier(&#34;Standard&#34;)
 *             .accountReplicationType(&#34;LRS&#34;)
 *             .accountKind(&#34;StorageV2&#34;)
 *             .isHnsEnabled(&#34;true&#34;)
 *             .build());
 * 
 *         var exampleDataLakeGen2Filesystem = new DataLakeGen2Filesystem(&#34;exampleDataLakeGen2Filesystem&#34;, DataLakeGen2FilesystemArgs.builder()        
 *             .storageAccountId(exampleAccount.id())
 *             .build());
 * 
 *         var exampleWorkspace = new Workspace(&#34;exampleWorkspace&#34;, WorkspaceArgs.builder()        
 *             .resourceGroupName(exampleResourceGroup.name())
 *             .location(exampleResourceGroup.location())
 *             .storageDataLakeGen2FilesystemId(exampleDataLakeGen2Filesystem.id())
 *             .sqlAdministratorLogin(&#34;sqladminuser&#34;)
 *             .sqlAdministratorLoginPassword(&#34;H@Sh1CoR3!&#34;)
 *             .aadAdmin(WorkspaceAadAdminArgs.builder()
 *                 .login(&#34;AzureAD Admin&#34;)
 *                 .objectId(&#34;00000000-0000-0000-0000-000000000000&#34;)
 *                 .tenantId(&#34;00000000-0000-0000-0000-000000000000&#34;)
 *                 .build())
 *             .identity(WorkspaceIdentityArgs.builder()
 *                 .type(&#34;SystemAssigned&#34;)
 *                 .build())
 *             .tags(Map.of(&#34;Env&#34;, &#34;production&#34;))
 *             .build());
 * 
 *     }
 * }
 * ```
 * ### Creating A Workspace With Customer Managed Key And Azure AD Admin
 * ```java
 * package generated_program;
 * 
 * import java.util.*;
 * import java.io.*;
 * import java.nio.*;
 * import com.pulumi.*;
 * import com.pulumi.resources.CustomResourceOptions;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         final var current = Output.of(CoreFunctions.getClientConfig());
 * 
 *         var exampleResourceGroup = new ResourceGroup(&#34;exampleResourceGroup&#34;, ResourceGroupArgs.builder()        
 *             .location(&#34;West Europe&#34;)
 *             .build());
 * 
 *         var exampleAccount = new Account(&#34;exampleAccount&#34;, AccountArgs.builder()        
 *             .resourceGroupName(exampleResourceGroup.name())
 *             .location(exampleResourceGroup.location())
 *             .accountTier(&#34;Standard&#34;)
 *             .accountReplicationType(&#34;LRS&#34;)
 *             .accountKind(&#34;StorageV2&#34;)
 *             .isHnsEnabled(&#34;true&#34;)
 *             .build());
 * 
 *         var exampleDataLakeGen2Filesystem = new DataLakeGen2Filesystem(&#34;exampleDataLakeGen2Filesystem&#34;, DataLakeGen2FilesystemArgs.builder()        
 *             .storageAccountId(exampleAccount.id())
 *             .build());
 * 
 *         var exampleKeyVault = new KeyVault(&#34;exampleKeyVault&#34;, KeyVaultArgs.builder()        
 *             .location(exampleResourceGroup.location())
 *             .resourceGroupName(exampleResourceGroup.name())
 *             .tenantId(current.apply(getClientConfigResult -&gt; getClientConfigResult.tenantId()))
 *             .skuName(&#34;standard&#34;)
 *             .purgeProtectionEnabled(true)
 *             .build());
 * 
 *         var deployer = new AccessPolicy(&#34;deployer&#34;, AccessPolicyArgs.builder()        
 *             .keyVaultId(exampleKeyVault.id())
 *             .tenantId(current.apply(getClientConfigResult -&gt; getClientConfigResult.tenantId()))
 *             .objectId(current.apply(getClientConfigResult -&gt; getClientConfigResult.objectId()))
 *             .keyPermissions(            
 *                 &#34;Create&#34;,
 *                 &#34;Get&#34;,
 *                 &#34;Delete&#34;,
 *                 &#34;Purge&#34;)
 *             .build());
 * 
 *         var exampleKey = new Key(&#34;exampleKey&#34;, KeyArgs.builder()        
 *             .keyVaultId(exampleKeyVault.id())
 *             .keyType(&#34;RSA&#34;)
 *             .keySize(2048)
 *             .keyOpts(            
 *                 &#34;unwrapKey&#34;,
 *                 &#34;wrapKey&#34;)
 *             .build(), CustomResourceOptions.builder()
 *                 .dependsOn(deployer)
 *                 .build());
 * 
 *         var exampleWorkspace = new Workspace(&#34;exampleWorkspace&#34;, WorkspaceArgs.builder()        
 *             .resourceGroupName(exampleResourceGroup.name())
 *             .location(exampleResourceGroup.location())
 *             .storageDataLakeGen2FilesystemId(exampleDataLakeGen2Filesystem.id())
 *             .sqlAdministratorLogin(&#34;sqladminuser&#34;)
 *             .sqlAdministratorLoginPassword(&#34;H@Sh1CoR3!&#34;)
 *             .customerManagedKey(WorkspaceCustomerManagedKeyArgs.builder()
 *                 .keyVersionlessId(exampleKey.versionlessId())
 *                 .keyName(&#34;enckey&#34;)
 *                 .build())
 *             .identity(WorkspaceIdentityArgs.builder()
 *                 .type(&#34;SystemAssigned&#34;)
 *                 .build())
 *             .tags(Map.of(&#34;Env&#34;, &#34;production&#34;))
 *             .build());
 * 
 *         var workspacePolicy = new AccessPolicy(&#34;workspacePolicy&#34;, AccessPolicyArgs.builder()        
 *             .keyVaultId(exampleKeyVault.id())
 *             .tenantId(exampleWorkspace.identity().apply(identity -&gt; identity.tenantId()))
 *             .objectId(exampleWorkspace.identity().apply(identity -&gt; identity.principalId()))
 *             .keyPermissions(            
 *                 &#34;Get&#34;,
 *                 &#34;WrapKey&#34;,
 *                 &#34;UnwrapKey&#34;)
 *             .build());
 * 
 *         var exampleWorkspaceKey = new WorkspaceKey(&#34;exampleWorkspaceKey&#34;, WorkspaceKeyArgs.builder()        
 *             .customerManagedKeyVersionlessId(exampleKey.versionlessId())
 *             .synapseWorkspaceId(exampleWorkspace.id())
 *             .active(true)
 *             .customerManagedKeyName(&#34;enckey&#34;)
 *             .build(), CustomResourceOptions.builder()
 *                 .dependsOn(workspacePolicy)
 *                 .build());
 * 
 *         var exampleWorkspaceAadAdmin = new WorkspaceAadAdmin(&#34;exampleWorkspaceAadAdmin&#34;, WorkspaceAadAdminArgs.builder()        
 *             .synapseWorkspaceId(exampleWorkspace.id())
 *             .login(&#34;AzureAD Admin&#34;)
 *             .objectId(&#34;00000000-0000-0000-0000-000000000000&#34;)
 *             .tenantId(&#34;00000000-0000-0000-0000-000000000000&#34;)
 *             .build(), CustomResourceOptions.builder()
 *                 .dependsOn(exampleWorkspaceKey)
 *                 .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * Synapse Workspace can be imported using the `resource id`, e.g.
 * 
 * ```sh
 *  $ pulumi import azure:synapse/workspace:Workspace example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.Synapse/workspaces/workspace1
 * ```
 * 
 */
@ResourceType(type="azure:synapse/workspace:Workspace")
public class Workspace extends com.pulumi.resources.CustomResource {
    /**
     * An `aad_admin` block as defined below. Conflicts with `customer_managed_key`.
     * 
     */
    @Export(name="aadAdmin", type=WorkspaceAadAdmin.class, parameters={})
    private Output<WorkspaceAadAdmin> aadAdmin;

    /**
     * @return An `aad_admin` block as defined below. Conflicts with `customer_managed_key`.
     * 
     */
    public Output<WorkspaceAadAdmin> aadAdmin() {
        return this.aadAdmin;
    }
    /**
     * An `azure_devops_repo` block as defined below.
     * 
     */
    @Export(name="azureDevopsRepo", type=WorkspaceAzureDevopsRepo.class, parameters={})
    private Output</* @Nullable */ WorkspaceAzureDevopsRepo> azureDevopsRepo;

    /**
     * @return An `azure_devops_repo` block as defined below.
     * 
     */
    public Output<Optional<WorkspaceAzureDevopsRepo>> azureDevopsRepo() {
        return Codegen.optional(this.azureDevopsRepo);
    }
    /**
     * Subnet ID used for computes in workspace
     * 
     */
    @Export(name="computeSubnetId", type=String.class, parameters={})
    private Output</* @Nullable */ String> computeSubnetId;

    /**
     * @return Subnet ID used for computes in workspace
     * 
     */
    public Output<Optional<String>> computeSubnetId() {
        return Codegen.optional(this.computeSubnetId);
    }
    /**
     * A list of Connectivity endpoints for this Synapse Workspace.
     * 
     */
    @Export(name="connectivityEndpoints", type=Map.class, parameters={String.class, String.class})
    private Output<Map<String,String>> connectivityEndpoints;

    /**
     * @return A list of Connectivity endpoints for this Synapse Workspace.
     * 
     */
    public Output<Map<String,String>> connectivityEndpoints() {
        return this.connectivityEndpoints;
    }
    /**
     * A `customer_managed_key` block as defined below. Conflicts with `aad_admin`.
     * 
     */
    @Export(name="customerManagedKey", type=WorkspaceCustomerManagedKey.class, parameters={})
    private Output</* @Nullable */ WorkspaceCustomerManagedKey> customerManagedKey;

    /**
     * @return A `customer_managed_key` block as defined below. Conflicts with `aad_admin`.
     * 
     */
    public Output<Optional<WorkspaceCustomerManagedKey>> customerManagedKey() {
        return Codegen.optional(this.customerManagedKey);
    }
    /**
     * Is data exfiltration protection enabled in this workspace? If set to `true`, `managed_virtual_network_enabled` must also be set to `true`. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="dataExfiltrationProtectionEnabled", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> dataExfiltrationProtectionEnabled;

    /**
     * @return Is data exfiltration protection enabled in this workspace? If set to `true`, `managed_virtual_network_enabled` must also be set to `true`. Changing this forces a new resource to be created.
     * 
     */
    public Output<Optional<Boolean>> dataExfiltrationProtectionEnabled() {
        return Codegen.optional(this.dataExfiltrationProtectionEnabled);
    }
    /**
     * A `github_repo` block as defined below.
     * 
     */
    @Export(name="githubRepo", type=WorkspaceGithubRepo.class, parameters={})
    private Output</* @Nullable */ WorkspaceGithubRepo> githubRepo;

    /**
     * @return A `github_repo` block as defined below.
     * 
     */
    public Output<Optional<WorkspaceGithubRepo>> githubRepo() {
        return Codegen.optional(this.githubRepo);
    }
    /**
     * An `identity` block as defined below.
     * 
     */
    @Export(name="identity", type=WorkspaceIdentity.class, parameters={})
    private Output<WorkspaceIdentity> identity;

    /**
     * @return An `identity` block as defined below.
     * 
     */
    public Output<WorkspaceIdentity> identity() {
        return this.identity;
    }
    /**
     * Allowed AAD Tenant Ids For Linking.
     * 
     */
    @Export(name="linkingAllowedForAadTenantIds", type=List.class, parameters={String.class})
    private Output</* @Nullable */ List<String>> linkingAllowedForAadTenantIds;

    /**
     * @return Allowed AAD Tenant Ids For Linking.
     * 
     */
    public Output<Optional<List<String>>> linkingAllowedForAadTenantIds() {
        return Codegen.optional(this.linkingAllowedForAadTenantIds);
    }
    /**
     * Specifies the Azure Region where the synapse Workspace should exist. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="location", type=String.class, parameters={})
    private Output<String> location;

    /**
     * @return Specifies the Azure Region where the synapse Workspace should exist. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> location() {
        return this.location;
    }
    /**
     * Workspace managed resource group.
     * 
     */
    @Export(name="managedResourceGroupName", type=String.class, parameters={})
    private Output<String> managedResourceGroupName;

    /**
     * @return Workspace managed resource group.
     * 
     */
    public Output<String> managedResourceGroupName() {
        return this.managedResourceGroupName;
    }
    /**
     * Is Virtual Network enabled for all computes in this workspace? Defaults to `false`. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="managedVirtualNetworkEnabled", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> managedVirtualNetworkEnabled;

    /**
     * @return Is Virtual Network enabled for all computes in this workspace? Defaults to `false`. Changing this forces a new resource to be created.
     * 
     */
    public Output<Optional<Boolean>> managedVirtualNetworkEnabled() {
        return Codegen.optional(this.managedVirtualNetworkEnabled);
    }
    /**
     * Specifies the name which should be used for this synapse Workspace. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return Specifies the name which should be used for this synapse Workspace. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Whether public network access is allowed for the Cognitive Account. Defaults to `true`.
     * 
     */
    @Export(name="publicNetworkAccessEnabled", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> publicNetworkAccessEnabled;

    /**
     * @return Whether public network access is allowed for the Cognitive Account. Defaults to `true`.
     * 
     */
    public Output<Optional<Boolean>> publicNetworkAccessEnabled() {
        return Codegen.optional(this.publicNetworkAccessEnabled);
    }
    /**
     * The ID of purview account.
     * 
     */
    @Export(name="purviewId", type=String.class, parameters={})
    private Output</* @Nullable */ String> purviewId;

    /**
     * @return The ID of purview account.
     * 
     */
    public Output<Optional<String>> purviewId() {
        return Codegen.optional(this.purviewId);
    }
    /**
     * Specifies the name of the Resource Group where the synapse Workspace should exist. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="resourceGroupName", type=String.class, parameters={})
    private Output<String> resourceGroupName;

    /**
     * @return Specifies the name of the Resource Group where the synapse Workspace should exist. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }
    /**
     * An `sql_aad_admin` block as defined below.
     * 
     */
    @Export(name="sqlAadAdmin", type=WorkspaceSqlAadAdmin.class, parameters={})
    private Output<WorkspaceSqlAadAdmin> sqlAadAdmin;

    /**
     * @return An `sql_aad_admin` block as defined below.
     * 
     */
    public Output<WorkspaceSqlAadAdmin> sqlAadAdmin() {
        return this.sqlAadAdmin;
    }
    /**
     * Specifies The login name of the SQL administrator. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="sqlAdministratorLogin", type=String.class, parameters={})
    private Output<String> sqlAdministratorLogin;

    /**
     * @return Specifies The login name of the SQL administrator. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> sqlAdministratorLogin() {
        return this.sqlAdministratorLogin;
    }
    /**
     * The Password associated with the `sql_administrator_login` for the SQL administrator.
     * 
     */
    @Export(name="sqlAdministratorLoginPassword", type=String.class, parameters={})
    private Output<String> sqlAdministratorLoginPassword;

    /**
     * @return The Password associated with the `sql_administrator_login` for the SQL administrator.
     * 
     */
    public Output<String> sqlAdministratorLoginPassword() {
        return this.sqlAdministratorLoginPassword;
    }
    /**
     * Are pipelines (running as workspace&#39;s system assigned identity) allowed to access SQL pools?
     * 
     */
    @Export(name="sqlIdentityControlEnabled", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> sqlIdentityControlEnabled;

    /**
     * @return Are pipelines (running as workspace&#39;s system assigned identity) allowed to access SQL pools?
     * 
     */
    public Output<Optional<Boolean>> sqlIdentityControlEnabled() {
        return Codegen.optional(this.sqlIdentityControlEnabled);
    }
    /**
     * Specifies the ID of storage data lake gen2 filesystem resource. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="storageDataLakeGen2FilesystemId", type=String.class, parameters={})
    private Output<String> storageDataLakeGen2FilesystemId;

    /**
     * @return Specifies the ID of storage data lake gen2 filesystem resource. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> storageDataLakeGen2FilesystemId() {
        return this.storageDataLakeGen2FilesystemId;
    }
    /**
     * A mapping of tags which should be assigned to the Synapse Workspace.
     * 
     */
    @Export(name="tags", type=Map.class, parameters={String.class, String.class})
    private Output</* @Nullable */ Map<String,String>> tags;

    /**
     * @return A mapping of tags which should be assigned to the Synapse Workspace.
     * 
     */
    public Output<Optional<Map<String,String>>> tags() {
        return Codegen.optional(this.tags);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Workspace(String name) {
        this(name, WorkspaceArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Workspace(String name, WorkspaceArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Workspace(String name, WorkspaceArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:synapse/workspace:Workspace", name, args == null ? WorkspaceArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private Workspace(String name, Output<String> id, @Nullable WorkspaceState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:synapse/workspace:Workspace", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Workspace get(String name, Output<String> id, @Nullable WorkspaceState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Workspace(name, id, state, options);
    }
}
