// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.mssql;

import com.pulumi.azure.mssql.inputs.ManagedInstanceStartStopScheduleScheduleArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ManagedInstanceStartStopScheduleArgs extends com.pulumi.resources.ResourceArgs {

    public static final ManagedInstanceStartStopScheduleArgs Empty = new ManagedInstanceStartStopScheduleArgs();

    /**
     * Specifies the description of the schedule.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return Specifies the description of the schedule.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Specifies the ID of the Managed Instance. Changing this forces a new Sql Start Stop Managed Instance Schedule to be created.
     * 
     */
    @Import(name="managedInstanceId", required=true)
    private Output<String> managedInstanceId;

    /**
     * @return Specifies the ID of the Managed Instance. Changing this forces a new Sql Start Stop Managed Instance Schedule to be created.
     * 
     */
    public Output<String> managedInstanceId() {
        return this.managedInstanceId;
    }

    /**
     * A `schedule` block as defined below.
     * 
     */
    @Import(name="schedules", required=true)
    private Output<List<ManagedInstanceStartStopScheduleScheduleArgs>> schedules;

    /**
     * @return A `schedule` block as defined below.
     * 
     */
    public Output<List<ManagedInstanceStartStopScheduleScheduleArgs>> schedules() {
        return this.schedules;
    }

    /**
     * Specifies the time zone of the schedule. Defaults to `UTC`.
     * 
     */
    @Import(name="timezoneId")
    private @Nullable Output<String> timezoneId;

    /**
     * @return Specifies the time zone of the schedule. Defaults to `UTC`.
     * 
     */
    public Optional<Output<String>> timezoneId() {
        return Optional.ofNullable(this.timezoneId);
    }

    private ManagedInstanceStartStopScheduleArgs() {}

    private ManagedInstanceStartStopScheduleArgs(ManagedInstanceStartStopScheduleArgs $) {
        this.description = $.description;
        this.managedInstanceId = $.managedInstanceId;
        this.schedules = $.schedules;
        this.timezoneId = $.timezoneId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ManagedInstanceStartStopScheduleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ManagedInstanceStartStopScheduleArgs $;

        public Builder() {
            $ = new ManagedInstanceStartStopScheduleArgs();
        }

        public Builder(ManagedInstanceStartStopScheduleArgs defaults) {
            $ = new ManagedInstanceStartStopScheduleArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param description Specifies the description of the schedule.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description Specifies the description of the schedule.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param managedInstanceId Specifies the ID of the Managed Instance. Changing this forces a new Sql Start Stop Managed Instance Schedule to be created.
         * 
         * @return builder
         * 
         */
        public Builder managedInstanceId(Output<String> managedInstanceId) {
            $.managedInstanceId = managedInstanceId;
            return this;
        }

        /**
         * @param managedInstanceId Specifies the ID of the Managed Instance. Changing this forces a new Sql Start Stop Managed Instance Schedule to be created.
         * 
         * @return builder
         * 
         */
        public Builder managedInstanceId(String managedInstanceId) {
            return managedInstanceId(Output.of(managedInstanceId));
        }

        /**
         * @param schedules A `schedule` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder schedules(Output<List<ManagedInstanceStartStopScheduleScheduleArgs>> schedules) {
            $.schedules = schedules;
            return this;
        }

        /**
         * @param schedules A `schedule` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder schedules(List<ManagedInstanceStartStopScheduleScheduleArgs> schedules) {
            return schedules(Output.of(schedules));
        }

        /**
         * @param schedules A `schedule` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder schedules(ManagedInstanceStartStopScheduleScheduleArgs... schedules) {
            return schedules(List.of(schedules));
        }

        /**
         * @param timezoneId Specifies the time zone of the schedule. Defaults to `UTC`.
         * 
         * @return builder
         * 
         */
        public Builder timezoneId(@Nullable Output<String> timezoneId) {
            $.timezoneId = timezoneId;
            return this;
        }

        /**
         * @param timezoneId Specifies the time zone of the schedule. Defaults to `UTC`.
         * 
         * @return builder
         * 
         */
        public Builder timezoneId(String timezoneId) {
            return timezoneId(Output.of(timezoneId));
        }

        public ManagedInstanceStartStopScheduleArgs build() {
            if ($.managedInstanceId == null) {
                throw new MissingRequiredPropertyException("ManagedInstanceStartStopScheduleArgs", "managedInstanceId");
            }
            if ($.schedules == null) {
                throw new MissingRequiredPropertyException("ManagedInstanceStartStopScheduleArgs", "schedules");
            }
            return $;
        }
    }

}
