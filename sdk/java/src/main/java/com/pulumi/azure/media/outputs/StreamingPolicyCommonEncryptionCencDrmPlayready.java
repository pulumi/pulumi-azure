// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.media.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class StreamingPolicyCommonEncryptionCencDrmPlayready {
    /**
     * @return Custom attributes for PlayReady. Changing this forces a new Streaming Policy to be created.
     * 
     */
    private final @Nullable String customAttributes;
    /**
     * @return Template for the URL of the custom service delivering licenses to end user players. Not required when using Azure Media Services for issuing licenses. The template supports replaceable tokens that the service will update at runtime with the value specific to the request. The currently supported token values are `{AlternativeMediaId}`, which is replaced with the value of `StreamingLocatorId.AlternativeMediaId`, and `{ContentKeyId}`, which is replaced with the value of identifier of the key being requested. Changing this forces a new Streaming Policy to be created.
     * 
     */
    private final @Nullable String customLicenseAcquisitionUrlTemplate;

    @CustomType.Constructor
    private StreamingPolicyCommonEncryptionCencDrmPlayready(
        @CustomType.Parameter("customAttributes") @Nullable String customAttributes,
        @CustomType.Parameter("customLicenseAcquisitionUrlTemplate") @Nullable String customLicenseAcquisitionUrlTemplate) {
        this.customAttributes = customAttributes;
        this.customLicenseAcquisitionUrlTemplate = customLicenseAcquisitionUrlTemplate;
    }

    /**
     * @return Custom attributes for PlayReady. Changing this forces a new Streaming Policy to be created.
     * 
     */
    public Optional<String> customAttributes() {
        return Optional.ofNullable(this.customAttributes);
    }
    /**
     * @return Template for the URL of the custom service delivering licenses to end user players. Not required when using Azure Media Services for issuing licenses. The template supports replaceable tokens that the service will update at runtime with the value specific to the request. The currently supported token values are `{AlternativeMediaId}`, which is replaced with the value of `StreamingLocatorId.AlternativeMediaId`, and `{ContentKeyId}`, which is replaced with the value of identifier of the key being requested. Changing this forces a new Streaming Policy to be created.
     * 
     */
    public Optional<String> customLicenseAcquisitionUrlTemplate() {
        return Optional.ofNullable(this.customLicenseAcquisitionUrlTemplate);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(StreamingPolicyCommonEncryptionCencDrmPlayready defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String customAttributes;
        private @Nullable String customLicenseAcquisitionUrlTemplate;

        public Builder() {
    	      // Empty
        }

        public Builder(StreamingPolicyCommonEncryptionCencDrmPlayready defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.customAttributes = defaults.customAttributes;
    	      this.customLicenseAcquisitionUrlTemplate = defaults.customLicenseAcquisitionUrlTemplate;
        }

        public Builder customAttributes(@Nullable String customAttributes) {
            this.customAttributes = customAttributes;
            return this;
        }
        public Builder customLicenseAcquisitionUrlTemplate(@Nullable String customLicenseAcquisitionUrlTemplate) {
            this.customLicenseAcquisitionUrlTemplate = customLicenseAcquisitionUrlTemplate;
            return this;
        }        public StreamingPolicyCommonEncryptionCencDrmPlayready build() {
            return new StreamingPolicyCommonEncryptionCencDrmPlayready(customAttributes, customLicenseAcquisitionUrlTemplate);
        }
    }
}
