// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.automation.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class AccountEncryption {
    /**
     * @return The source of the encryption key. Possible values are `Microsoft.Keyvault` and `Microsoft.Storage`.
     * 
     */
    private final @Nullable String keySource;
    /**
     * @return The ID of the Key Vault Key which should be used to Encrypt the data in this Automation Account.
     * 
     */
    private final String keyVaultKeyId;
    /**
     * @return The User Assigned Managed Identity ID to be used for accessing the Customer Managed Key for encryption.
     * 
     */
    private final @Nullable String userAssignedIdentityId;

    @CustomType.Constructor
    private AccountEncryption(
        @CustomType.Parameter("keySource") @Nullable String keySource,
        @CustomType.Parameter("keyVaultKeyId") String keyVaultKeyId,
        @CustomType.Parameter("userAssignedIdentityId") @Nullable String userAssignedIdentityId) {
        this.keySource = keySource;
        this.keyVaultKeyId = keyVaultKeyId;
        this.userAssignedIdentityId = userAssignedIdentityId;
    }

    /**
     * @return The source of the encryption key. Possible values are `Microsoft.Keyvault` and `Microsoft.Storage`.
     * 
     */
    public Optional<String> keySource() {
        return Optional.ofNullable(this.keySource);
    }
    /**
     * @return The ID of the Key Vault Key which should be used to Encrypt the data in this Automation Account.
     * 
     */
    public String keyVaultKeyId() {
        return this.keyVaultKeyId;
    }
    /**
     * @return The User Assigned Managed Identity ID to be used for accessing the Customer Managed Key for encryption.
     * 
     */
    public Optional<String> userAssignedIdentityId() {
        return Optional.ofNullable(this.userAssignedIdentityId);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AccountEncryption defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String keySource;
        private String keyVaultKeyId;
        private @Nullable String userAssignedIdentityId;

        public Builder() {
    	      // Empty
        }

        public Builder(AccountEncryption defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.keySource = defaults.keySource;
    	      this.keyVaultKeyId = defaults.keyVaultKeyId;
    	      this.userAssignedIdentityId = defaults.userAssignedIdentityId;
        }

        public Builder keySource(@Nullable String keySource) {
            this.keySource = keySource;
            return this;
        }
        public Builder keyVaultKeyId(String keyVaultKeyId) {
            this.keyVaultKeyId = Objects.requireNonNull(keyVaultKeyId);
            return this;
        }
        public Builder userAssignedIdentityId(@Nullable String userAssignedIdentityId) {
            this.userAssignedIdentityId = userAssignedIdentityId;
            return this;
        }        public AccountEncryption build() {
            return new AccountEncryption(keySource, keyVaultKeyId, userAssignedIdentityId);
        }
    }
}
