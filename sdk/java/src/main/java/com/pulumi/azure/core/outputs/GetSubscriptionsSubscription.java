// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.core.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetSubscriptionsSubscription {
    /**
     * @return The subscription display name.
     * 
     */
    private String displayName;
    /**
     * @return The ID of this subscription.
     * 
     */
    private String id;
    /**
     * @return The subscription location placement ID.
     * 
     */
    private String locationPlacementId;
    /**
     * @return The subscription quota ID.
     * 
     */
    private String quotaId;
    /**
     * @return The subscription spending limit.
     * 
     */
    private String spendingLimit;
    /**
     * @return The subscription state. Possible values are Enabled, Warned, PastDue, Disabled, and Deleted.
     * 
     */
    private String state;
    /**
     * @return The subscription GUID.
     * 
     */
    private String subscriptionId;
    /**
     * @return A mapping of tags assigned to the resource.
     * 
     */
    private Map<String,String> tags;
    /**
     * @return The subscription tenant ID.
     * 
     */
    private String tenantId;

    private GetSubscriptionsSubscription() {}
    /**
     * @return The subscription display name.
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return The ID of this subscription.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The subscription location placement ID.
     * 
     */
    public String locationPlacementId() {
        return this.locationPlacementId;
    }
    /**
     * @return The subscription quota ID.
     * 
     */
    public String quotaId() {
        return this.quotaId;
    }
    /**
     * @return The subscription spending limit.
     * 
     */
    public String spendingLimit() {
        return this.spendingLimit;
    }
    /**
     * @return The subscription state. Possible values are Enabled, Warned, PastDue, Disabled, and Deleted.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return The subscription GUID.
     * 
     */
    public String subscriptionId() {
        return this.subscriptionId;
    }
    /**
     * @return A mapping of tags assigned to the resource.
     * 
     */
    public Map<String,String> tags() {
        return this.tags;
    }
    /**
     * @return The subscription tenant ID.
     * 
     */
    public String tenantId() {
        return this.tenantId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSubscriptionsSubscription defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String displayName;
        private String id;
        private String locationPlacementId;
        private String quotaId;
        private String spendingLimit;
        private String state;
        private String subscriptionId;
        private Map<String,String> tags;
        private String tenantId;
        public Builder() {}
        public Builder(GetSubscriptionsSubscription defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.displayName = defaults.displayName;
    	      this.id = defaults.id;
    	      this.locationPlacementId = defaults.locationPlacementId;
    	      this.quotaId = defaults.quotaId;
    	      this.spendingLimit = defaults.spendingLimit;
    	      this.state = defaults.state;
    	      this.subscriptionId = defaults.subscriptionId;
    	      this.tags = defaults.tags;
    	      this.tenantId = defaults.tenantId;
        }

        @CustomType.Setter
        public Builder displayName(String displayName) {
            if (displayName == null) {
              throw new MissingRequiredPropertyException("GetSubscriptionsSubscription", "displayName");
            }
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetSubscriptionsSubscription", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder locationPlacementId(String locationPlacementId) {
            if (locationPlacementId == null) {
              throw new MissingRequiredPropertyException("GetSubscriptionsSubscription", "locationPlacementId");
            }
            this.locationPlacementId = locationPlacementId;
            return this;
        }
        @CustomType.Setter
        public Builder quotaId(String quotaId) {
            if (quotaId == null) {
              throw new MissingRequiredPropertyException("GetSubscriptionsSubscription", "quotaId");
            }
            this.quotaId = quotaId;
            return this;
        }
        @CustomType.Setter
        public Builder spendingLimit(String spendingLimit) {
            if (spendingLimit == null) {
              throw new MissingRequiredPropertyException("GetSubscriptionsSubscription", "spendingLimit");
            }
            this.spendingLimit = spendingLimit;
            return this;
        }
        @CustomType.Setter
        public Builder state(String state) {
            if (state == null) {
              throw new MissingRequiredPropertyException("GetSubscriptionsSubscription", "state");
            }
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder subscriptionId(String subscriptionId) {
            if (subscriptionId == null) {
              throw new MissingRequiredPropertyException("GetSubscriptionsSubscription", "subscriptionId");
            }
            this.subscriptionId = subscriptionId;
            return this;
        }
        @CustomType.Setter
        public Builder tags(Map<String,String> tags) {
            if (tags == null) {
              throw new MissingRequiredPropertyException("GetSubscriptionsSubscription", "tags");
            }
            this.tags = tags;
            return this;
        }
        @CustomType.Setter
        public Builder tenantId(String tenantId) {
            if (tenantId == null) {
              throw new MissingRequiredPropertyException("GetSubscriptionsSubscription", "tenantId");
            }
            this.tenantId = tenantId;
            return this;
        }
        public GetSubscriptionsSubscription build() {
            final var _resultValue = new GetSubscriptionsSubscription();
            _resultValue.displayName = displayName;
            _resultValue.id = id;
            _resultValue.locationPlacementId = locationPlacementId;
            _resultValue.quotaId = quotaId;
            _resultValue.spendingLimit = spendingLimit;
            _resultValue.state = state;
            _resultValue.subscriptionId = subscriptionId;
            _resultValue.tags = tags;
            _resultValue.tenantId = tenantId;
            return _resultValue;
        }
    }
}
