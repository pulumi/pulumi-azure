// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.backup.outputs;

import com.pulumi.azure.backup.outputs.PolicyFileShareBackupHourly;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class PolicyFileShareBackup {
    /**
     * @return Sets the backup frequency. Possible values are `Daily` and `Hourly`.
     * 
     * &gt; **NOTE:** This argument is made available for consistency with VM backup policies and to allow for potential future support of weekly backups
     * 
     */
    private String frequency;
    /**
     * @return A `hourly` block defined as below. This is required when `frequency` is set to `Hourly`.
     * 
     */
    private @Nullable PolicyFileShareBackupHourly hourly;
    /**
     * @return The time of day to perform the backup in 24-hour format. Times must be either on the hour or half hour (e.g. 12:00, 12:30, 13:00, etc.)
     * 
     * &gt; **NOTE:** `time` is required when `frequency` is set to `Daily`.
     * 
     */
    private @Nullable String time;

    private PolicyFileShareBackup() {}
    /**
     * @return Sets the backup frequency. Possible values are `Daily` and `Hourly`.
     * 
     * &gt; **NOTE:** This argument is made available for consistency with VM backup policies and to allow for potential future support of weekly backups
     * 
     */
    public String frequency() {
        return this.frequency;
    }
    /**
     * @return A `hourly` block defined as below. This is required when `frequency` is set to `Hourly`.
     * 
     */
    public Optional<PolicyFileShareBackupHourly> hourly() {
        return Optional.ofNullable(this.hourly);
    }
    /**
     * @return The time of day to perform the backup in 24-hour format. Times must be either on the hour or half hour (e.g. 12:00, 12:30, 13:00, etc.)
     * 
     * &gt; **NOTE:** `time` is required when `frequency` is set to `Daily`.
     * 
     */
    public Optional<String> time() {
        return Optional.ofNullable(this.time);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(PolicyFileShareBackup defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String frequency;
        private @Nullable PolicyFileShareBackupHourly hourly;
        private @Nullable String time;
        public Builder() {}
        public Builder(PolicyFileShareBackup defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.frequency = defaults.frequency;
    	      this.hourly = defaults.hourly;
    	      this.time = defaults.time;
        }

        @CustomType.Setter
        public Builder frequency(String frequency) {
            if (frequency == null) {
              throw new MissingRequiredPropertyException("PolicyFileShareBackup", "frequency");
            }
            this.frequency = frequency;
            return this;
        }
        @CustomType.Setter
        public Builder hourly(@Nullable PolicyFileShareBackupHourly hourly) {

            this.hourly = hourly;
            return this;
        }
        @CustomType.Setter
        public Builder time(@Nullable String time) {

            this.time = time;
            return this;
        }
        public PolicyFileShareBackup build() {
            final var _resultValue = new PolicyFileShareBackup();
            _resultValue.frequency = frequency;
            _resultValue.hourly = hourly;
            _resultValue.time = time;
            return _resultValue;
        }
    }
}
