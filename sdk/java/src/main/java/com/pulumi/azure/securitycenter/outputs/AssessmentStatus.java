// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.securitycenter.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class AssessmentStatus {
    /**
     * @return Specifies the cause of the assessment status.
     * 
     */
    private @Nullable String cause;
    /**
     * @return Specifies the programmatic code of the assessment status. Possible values are `Healthy`, `Unhealthy` and `NotApplicable`.
     * 
     */
    private String code;
    /**
     * @return Specifies the human readable description of the assessment status.
     * 
     */
    private @Nullable String description;

    private AssessmentStatus() {}
    /**
     * @return Specifies the cause of the assessment status.
     * 
     */
    public Optional<String> cause() {
        return Optional.ofNullable(this.cause);
    }
    /**
     * @return Specifies the programmatic code of the assessment status. Possible values are `Healthy`, `Unhealthy` and `NotApplicable`.
     * 
     */
    public String code() {
        return this.code;
    }
    /**
     * @return Specifies the human readable description of the assessment status.
     * 
     */
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AssessmentStatus defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String cause;
        private String code;
        private @Nullable String description;
        public Builder() {}
        public Builder(AssessmentStatus defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.cause = defaults.cause;
    	      this.code = defaults.code;
    	      this.description = defaults.description;
        }

        @CustomType.Setter
        public Builder cause(@Nullable String cause) {

            this.cause = cause;
            return this;
        }
        @CustomType.Setter
        public Builder code(String code) {
            if (code == null) {
              throw new MissingRequiredPropertyException("AssessmentStatus", "code");
            }
            this.code = code;
            return this;
        }
        @CustomType.Setter
        public Builder description(@Nullable String description) {

            this.description = description;
            return this;
        }
        public AssessmentStatus build() {
            final var _resultValue = new AssessmentStatus();
            _resultValue.cause = cause;
            _resultValue.code = code;
            _resultValue.description = description;
            return _resultValue;
        }
    }
}
