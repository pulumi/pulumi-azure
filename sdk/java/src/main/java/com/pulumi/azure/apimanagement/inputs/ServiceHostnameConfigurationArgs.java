// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.apimanagement.inputs;

import com.pulumi.azure.apimanagement.inputs.ServiceHostnameConfigurationDeveloperPortalArgs;
import com.pulumi.azure.apimanagement.inputs.ServiceHostnameConfigurationManagementArgs;
import com.pulumi.azure.apimanagement.inputs.ServiceHostnameConfigurationPortalArgs;
import com.pulumi.azure.apimanagement.inputs.ServiceHostnameConfigurationProxyArgs;
import com.pulumi.azure.apimanagement.inputs.ServiceHostnameConfigurationScmArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ServiceHostnameConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final ServiceHostnameConfigurationArgs Empty = new ServiceHostnameConfigurationArgs();

    /**
     * One or more `developer_portal` blocks as documented below.
     * 
     */
    @Import(name="developerPortals")
    private @Nullable Output<List<ServiceHostnameConfigurationDeveloperPortalArgs>> developerPortals;

    /**
     * @return One or more `developer_portal` blocks as documented below.
     * 
     */
    public Optional<Output<List<ServiceHostnameConfigurationDeveloperPortalArgs>>> developerPortals() {
        return Optional.ofNullable(this.developerPortals);
    }

    /**
     * One or more `management` blocks as documented below.
     * 
     */
    @Import(name="managements")
    private @Nullable Output<List<ServiceHostnameConfigurationManagementArgs>> managements;

    /**
     * @return One or more `management` blocks as documented below.
     * 
     */
    public Optional<Output<List<ServiceHostnameConfigurationManagementArgs>>> managements() {
        return Optional.ofNullable(this.managements);
    }

    /**
     * One or more `portal` blocks as documented below.
     * 
     */
    @Import(name="portals")
    private @Nullable Output<List<ServiceHostnameConfigurationPortalArgs>> portals;

    /**
     * @return One or more `portal` blocks as documented below.
     * 
     */
    public Optional<Output<List<ServiceHostnameConfigurationPortalArgs>>> portals() {
        return Optional.ofNullable(this.portals);
    }

    /**
     * One or more `proxy` blocks as documented below.
     * 
     */
    @Import(name="proxies")
    private @Nullable Output<List<ServiceHostnameConfigurationProxyArgs>> proxies;

    /**
     * @return One or more `proxy` blocks as documented below.
     * 
     */
    public Optional<Output<List<ServiceHostnameConfigurationProxyArgs>>> proxies() {
        return Optional.ofNullable(this.proxies);
    }

    /**
     * One or more `scm` blocks as documented below.
     * 
     */
    @Import(name="scms")
    private @Nullable Output<List<ServiceHostnameConfigurationScmArgs>> scms;

    /**
     * @return One or more `scm` blocks as documented below.
     * 
     */
    public Optional<Output<List<ServiceHostnameConfigurationScmArgs>>> scms() {
        return Optional.ofNullable(this.scms);
    }

    private ServiceHostnameConfigurationArgs() {}

    private ServiceHostnameConfigurationArgs(ServiceHostnameConfigurationArgs $) {
        this.developerPortals = $.developerPortals;
        this.managements = $.managements;
        this.portals = $.portals;
        this.proxies = $.proxies;
        this.scms = $.scms;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ServiceHostnameConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ServiceHostnameConfigurationArgs $;

        public Builder() {
            $ = new ServiceHostnameConfigurationArgs();
        }

        public Builder(ServiceHostnameConfigurationArgs defaults) {
            $ = new ServiceHostnameConfigurationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param developerPortals One or more `developer_portal` blocks as documented below.
         * 
         * @return builder
         * 
         */
        public Builder developerPortals(@Nullable Output<List<ServiceHostnameConfigurationDeveloperPortalArgs>> developerPortals) {
            $.developerPortals = developerPortals;
            return this;
        }

        /**
         * @param developerPortals One or more `developer_portal` blocks as documented below.
         * 
         * @return builder
         * 
         */
        public Builder developerPortals(List<ServiceHostnameConfigurationDeveloperPortalArgs> developerPortals) {
            return developerPortals(Output.of(developerPortals));
        }

        /**
         * @param developerPortals One or more `developer_portal` blocks as documented below.
         * 
         * @return builder
         * 
         */
        public Builder developerPortals(ServiceHostnameConfigurationDeveloperPortalArgs... developerPortals) {
            return developerPortals(List.of(developerPortals));
        }

        /**
         * @param managements One or more `management` blocks as documented below.
         * 
         * @return builder
         * 
         */
        public Builder managements(@Nullable Output<List<ServiceHostnameConfigurationManagementArgs>> managements) {
            $.managements = managements;
            return this;
        }

        /**
         * @param managements One or more `management` blocks as documented below.
         * 
         * @return builder
         * 
         */
        public Builder managements(List<ServiceHostnameConfigurationManagementArgs> managements) {
            return managements(Output.of(managements));
        }

        /**
         * @param managements One or more `management` blocks as documented below.
         * 
         * @return builder
         * 
         */
        public Builder managements(ServiceHostnameConfigurationManagementArgs... managements) {
            return managements(List.of(managements));
        }

        /**
         * @param portals One or more `portal` blocks as documented below.
         * 
         * @return builder
         * 
         */
        public Builder portals(@Nullable Output<List<ServiceHostnameConfigurationPortalArgs>> portals) {
            $.portals = portals;
            return this;
        }

        /**
         * @param portals One or more `portal` blocks as documented below.
         * 
         * @return builder
         * 
         */
        public Builder portals(List<ServiceHostnameConfigurationPortalArgs> portals) {
            return portals(Output.of(portals));
        }

        /**
         * @param portals One or more `portal` blocks as documented below.
         * 
         * @return builder
         * 
         */
        public Builder portals(ServiceHostnameConfigurationPortalArgs... portals) {
            return portals(List.of(portals));
        }

        /**
         * @param proxies One or more `proxy` blocks as documented below.
         * 
         * @return builder
         * 
         */
        public Builder proxies(@Nullable Output<List<ServiceHostnameConfigurationProxyArgs>> proxies) {
            $.proxies = proxies;
            return this;
        }

        /**
         * @param proxies One or more `proxy` blocks as documented below.
         * 
         * @return builder
         * 
         */
        public Builder proxies(List<ServiceHostnameConfigurationProxyArgs> proxies) {
            return proxies(Output.of(proxies));
        }

        /**
         * @param proxies One or more `proxy` blocks as documented below.
         * 
         * @return builder
         * 
         */
        public Builder proxies(ServiceHostnameConfigurationProxyArgs... proxies) {
            return proxies(List.of(proxies));
        }

        /**
         * @param scms One or more `scm` blocks as documented below.
         * 
         * @return builder
         * 
         */
        public Builder scms(@Nullable Output<List<ServiceHostnameConfigurationScmArgs>> scms) {
            $.scms = scms;
            return this;
        }

        /**
         * @param scms One or more `scm` blocks as documented below.
         * 
         * @return builder
         * 
         */
        public Builder scms(List<ServiceHostnameConfigurationScmArgs> scms) {
            return scms(Output.of(scms));
        }

        /**
         * @param scms One or more `scm` blocks as documented below.
         * 
         * @return builder
         * 
         */
        public Builder scms(ServiceHostnameConfigurationScmArgs... scms) {
            return scms(List.of(scms));
        }

        public ServiceHostnameConfigurationArgs build() {
            return $;
        }
    }

}
