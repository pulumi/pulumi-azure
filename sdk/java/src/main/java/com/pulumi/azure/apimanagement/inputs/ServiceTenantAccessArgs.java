// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.apimanagement.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ServiceTenantAccessArgs extends com.pulumi.resources.ResourceArgs {

    public static final ServiceTenantAccessArgs Empty = new ServiceTenantAccessArgs();

    /**
     * Should the access to the management API be enabled?
     * 
     */
    @Import(name="enabled", required=true)
    private Output<Boolean> enabled;

    /**
     * @return Should the access to the management API be enabled?
     * 
     */
    public Output<Boolean> enabled() {
        return this.enabled;
    }

    /**
     * Primary access key for the tenant access information contract.
     * 
     */
    @Import(name="primaryKey")
    private @Nullable Output<String> primaryKey;

    /**
     * @return Primary access key for the tenant access information contract.
     * 
     */
    public Optional<Output<String>> primaryKey() {
        return Optional.ofNullable(this.primaryKey);
    }

    /**
     * Secondary access key for the tenant access information contract.
     * 
     */
    @Import(name="secondaryKey")
    private @Nullable Output<String> secondaryKey;

    /**
     * @return Secondary access key for the tenant access information contract.
     * 
     */
    public Optional<Output<String>> secondaryKey() {
        return Optional.ofNullable(this.secondaryKey);
    }

    /**
     * The identifier for the tenant access information contract.
     * 
     */
    @Import(name="tenantId")
    private @Nullable Output<String> tenantId;

    /**
     * @return The identifier for the tenant access information contract.
     * 
     */
    public Optional<Output<String>> tenantId() {
        return Optional.ofNullable(this.tenantId);
    }

    private ServiceTenantAccessArgs() {}

    private ServiceTenantAccessArgs(ServiceTenantAccessArgs $) {
        this.enabled = $.enabled;
        this.primaryKey = $.primaryKey;
        this.secondaryKey = $.secondaryKey;
        this.tenantId = $.tenantId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ServiceTenantAccessArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ServiceTenantAccessArgs $;

        public Builder() {
            $ = new ServiceTenantAccessArgs();
        }

        public Builder(ServiceTenantAccessArgs defaults) {
            $ = new ServiceTenantAccessArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param enabled Should the access to the management API be enabled?
         * 
         * @return builder
         * 
         */
        public Builder enabled(Output<Boolean> enabled) {
            $.enabled = enabled;
            return this;
        }

        /**
         * @param enabled Should the access to the management API be enabled?
         * 
         * @return builder
         * 
         */
        public Builder enabled(Boolean enabled) {
            return enabled(Output.of(enabled));
        }

        /**
         * @param primaryKey Primary access key for the tenant access information contract.
         * 
         * @return builder
         * 
         */
        public Builder primaryKey(@Nullable Output<String> primaryKey) {
            $.primaryKey = primaryKey;
            return this;
        }

        /**
         * @param primaryKey Primary access key for the tenant access information contract.
         * 
         * @return builder
         * 
         */
        public Builder primaryKey(String primaryKey) {
            return primaryKey(Output.of(primaryKey));
        }

        /**
         * @param secondaryKey Secondary access key for the tenant access information contract.
         * 
         * @return builder
         * 
         */
        public Builder secondaryKey(@Nullable Output<String> secondaryKey) {
            $.secondaryKey = secondaryKey;
            return this;
        }

        /**
         * @param secondaryKey Secondary access key for the tenant access information contract.
         * 
         * @return builder
         * 
         */
        public Builder secondaryKey(String secondaryKey) {
            return secondaryKey(Output.of(secondaryKey));
        }

        /**
         * @param tenantId The identifier for the tenant access information contract.
         * 
         * @return builder
         * 
         */
        public Builder tenantId(@Nullable Output<String> tenantId) {
            $.tenantId = tenantId;
            return this;
        }

        /**
         * @param tenantId The identifier for the tenant access information contract.
         * 
         * @return builder
         * 
         */
        public Builder tenantId(String tenantId) {
            return tenantId(Output.of(tenantId));
        }

        public ServiceTenantAccessArgs build() {
            if ($.enabled == null) {
                throw new MissingRequiredPropertyException("ServiceTenantAccessArgs", "enabled");
            }
            return $;
        }
    }

}
