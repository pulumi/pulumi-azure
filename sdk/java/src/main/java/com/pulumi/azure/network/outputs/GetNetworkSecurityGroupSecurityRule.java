// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.network.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class GetNetworkSecurityGroupSecurityRule {
    /**
     * @return Is network traffic is allowed or denied?
     * 
     */
    private String access;
    /**
     * @return The description for this rule.
     * 
     */
    private String description;
    /**
     * @return CIDR or destination IP range or * to match any IP.
     * 
     */
    private String destinationAddressPrefix;
    /**
     * @return A list of CIDRs or destination IP ranges.
     * 
     */
    private List<String> destinationAddressPrefixes;
    /**
     * @return A List of destination Application Security Group IDs
     * 
     */
    private @Nullable List<String> destinationApplicationSecurityGroupIds;
    /**
     * @return The Destination Port or Range.
     * 
     */
    private String destinationPortRange;
    private List<String> destinationPortRanges;
    /**
     * @return The direction specifies if rule will be evaluated on incoming or outgoing traffic.
     * 
     */
    private String direction;
    /**
     * @return Specifies the Name of the Network Security Group.
     * 
     */
    private String name;
    /**
     * @return The priority of the rule
     * 
     */
    private Integer priority;
    /**
     * @return The network protocol this rule applies to.
     * 
     */
    private String protocol;
    /**
     * @return CIDR or source IP range or * to match any IP.
     * 
     */
    private String sourceAddressPrefix;
    /**
     * @return A list of CIDRs or source IP ranges.
     * 
     */
    private List<String> sourceAddressPrefixes;
    /**
     * @return A List of source Application Security Group IDs
     * 
     */
    private @Nullable List<String> sourceApplicationSecurityGroupIds;
    /**
     * @return The Source Port or Range.
     * 
     */
    private String sourcePortRange;
    private List<String> sourcePortRanges;

    private GetNetworkSecurityGroupSecurityRule() {}
    /**
     * @return Is network traffic is allowed or denied?
     * 
     */
    public String access() {
        return this.access;
    }
    /**
     * @return The description for this rule.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return CIDR or destination IP range or * to match any IP.
     * 
     */
    public String destinationAddressPrefix() {
        return this.destinationAddressPrefix;
    }
    /**
     * @return A list of CIDRs or destination IP ranges.
     * 
     */
    public List<String> destinationAddressPrefixes() {
        return this.destinationAddressPrefixes;
    }
    /**
     * @return A List of destination Application Security Group IDs
     * 
     */
    public List<String> destinationApplicationSecurityGroupIds() {
        return this.destinationApplicationSecurityGroupIds == null ? List.of() : this.destinationApplicationSecurityGroupIds;
    }
    /**
     * @return The Destination Port or Range.
     * 
     */
    public String destinationPortRange() {
        return this.destinationPortRange;
    }
    public List<String> destinationPortRanges() {
        return this.destinationPortRanges;
    }
    /**
     * @return The direction specifies if rule will be evaluated on incoming or outgoing traffic.
     * 
     */
    public String direction() {
        return this.direction;
    }
    /**
     * @return Specifies the Name of the Network Security Group.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The priority of the rule
     * 
     */
    public Integer priority() {
        return this.priority;
    }
    /**
     * @return The network protocol this rule applies to.
     * 
     */
    public String protocol() {
        return this.protocol;
    }
    /**
     * @return CIDR or source IP range or * to match any IP.
     * 
     */
    public String sourceAddressPrefix() {
        return this.sourceAddressPrefix;
    }
    /**
     * @return A list of CIDRs or source IP ranges.
     * 
     */
    public List<String> sourceAddressPrefixes() {
        return this.sourceAddressPrefixes;
    }
    /**
     * @return A List of source Application Security Group IDs
     * 
     */
    public List<String> sourceApplicationSecurityGroupIds() {
        return this.sourceApplicationSecurityGroupIds == null ? List.of() : this.sourceApplicationSecurityGroupIds;
    }
    /**
     * @return The Source Port or Range.
     * 
     */
    public String sourcePortRange() {
        return this.sourcePortRange;
    }
    public List<String> sourcePortRanges() {
        return this.sourcePortRanges;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetNetworkSecurityGroupSecurityRule defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String access;
        private String description;
        private String destinationAddressPrefix;
        private List<String> destinationAddressPrefixes;
        private @Nullable List<String> destinationApplicationSecurityGroupIds;
        private String destinationPortRange;
        private List<String> destinationPortRanges;
        private String direction;
        private String name;
        private Integer priority;
        private String protocol;
        private String sourceAddressPrefix;
        private List<String> sourceAddressPrefixes;
        private @Nullable List<String> sourceApplicationSecurityGroupIds;
        private String sourcePortRange;
        private List<String> sourcePortRanges;
        public Builder() {}
        public Builder(GetNetworkSecurityGroupSecurityRule defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.access = defaults.access;
    	      this.description = defaults.description;
    	      this.destinationAddressPrefix = defaults.destinationAddressPrefix;
    	      this.destinationAddressPrefixes = defaults.destinationAddressPrefixes;
    	      this.destinationApplicationSecurityGroupIds = defaults.destinationApplicationSecurityGroupIds;
    	      this.destinationPortRange = defaults.destinationPortRange;
    	      this.destinationPortRanges = defaults.destinationPortRanges;
    	      this.direction = defaults.direction;
    	      this.name = defaults.name;
    	      this.priority = defaults.priority;
    	      this.protocol = defaults.protocol;
    	      this.sourceAddressPrefix = defaults.sourceAddressPrefix;
    	      this.sourceAddressPrefixes = defaults.sourceAddressPrefixes;
    	      this.sourceApplicationSecurityGroupIds = defaults.sourceApplicationSecurityGroupIds;
    	      this.sourcePortRange = defaults.sourcePortRange;
    	      this.sourcePortRanges = defaults.sourcePortRanges;
        }

        @CustomType.Setter
        public Builder access(String access) {
            if (access == null) {
              throw new MissingRequiredPropertyException("GetNetworkSecurityGroupSecurityRule", "access");
            }
            this.access = access;
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetNetworkSecurityGroupSecurityRule", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder destinationAddressPrefix(String destinationAddressPrefix) {
            if (destinationAddressPrefix == null) {
              throw new MissingRequiredPropertyException("GetNetworkSecurityGroupSecurityRule", "destinationAddressPrefix");
            }
            this.destinationAddressPrefix = destinationAddressPrefix;
            return this;
        }
        @CustomType.Setter
        public Builder destinationAddressPrefixes(List<String> destinationAddressPrefixes) {
            if (destinationAddressPrefixes == null) {
              throw new MissingRequiredPropertyException("GetNetworkSecurityGroupSecurityRule", "destinationAddressPrefixes");
            }
            this.destinationAddressPrefixes = destinationAddressPrefixes;
            return this;
        }
        public Builder destinationAddressPrefixes(String... destinationAddressPrefixes) {
            return destinationAddressPrefixes(List.of(destinationAddressPrefixes));
        }
        @CustomType.Setter
        public Builder destinationApplicationSecurityGroupIds(@Nullable List<String> destinationApplicationSecurityGroupIds) {

            this.destinationApplicationSecurityGroupIds = destinationApplicationSecurityGroupIds;
            return this;
        }
        public Builder destinationApplicationSecurityGroupIds(String... destinationApplicationSecurityGroupIds) {
            return destinationApplicationSecurityGroupIds(List.of(destinationApplicationSecurityGroupIds));
        }
        @CustomType.Setter
        public Builder destinationPortRange(String destinationPortRange) {
            if (destinationPortRange == null) {
              throw new MissingRequiredPropertyException("GetNetworkSecurityGroupSecurityRule", "destinationPortRange");
            }
            this.destinationPortRange = destinationPortRange;
            return this;
        }
        @CustomType.Setter
        public Builder destinationPortRanges(List<String> destinationPortRanges) {
            if (destinationPortRanges == null) {
              throw new MissingRequiredPropertyException("GetNetworkSecurityGroupSecurityRule", "destinationPortRanges");
            }
            this.destinationPortRanges = destinationPortRanges;
            return this;
        }
        public Builder destinationPortRanges(String... destinationPortRanges) {
            return destinationPortRanges(List.of(destinationPortRanges));
        }
        @CustomType.Setter
        public Builder direction(String direction) {
            if (direction == null) {
              throw new MissingRequiredPropertyException("GetNetworkSecurityGroupSecurityRule", "direction");
            }
            this.direction = direction;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetNetworkSecurityGroupSecurityRule", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder priority(Integer priority) {
            if (priority == null) {
              throw new MissingRequiredPropertyException("GetNetworkSecurityGroupSecurityRule", "priority");
            }
            this.priority = priority;
            return this;
        }
        @CustomType.Setter
        public Builder protocol(String protocol) {
            if (protocol == null) {
              throw new MissingRequiredPropertyException("GetNetworkSecurityGroupSecurityRule", "protocol");
            }
            this.protocol = protocol;
            return this;
        }
        @CustomType.Setter
        public Builder sourceAddressPrefix(String sourceAddressPrefix) {
            if (sourceAddressPrefix == null) {
              throw new MissingRequiredPropertyException("GetNetworkSecurityGroupSecurityRule", "sourceAddressPrefix");
            }
            this.sourceAddressPrefix = sourceAddressPrefix;
            return this;
        }
        @CustomType.Setter
        public Builder sourceAddressPrefixes(List<String> sourceAddressPrefixes) {
            if (sourceAddressPrefixes == null) {
              throw new MissingRequiredPropertyException("GetNetworkSecurityGroupSecurityRule", "sourceAddressPrefixes");
            }
            this.sourceAddressPrefixes = sourceAddressPrefixes;
            return this;
        }
        public Builder sourceAddressPrefixes(String... sourceAddressPrefixes) {
            return sourceAddressPrefixes(List.of(sourceAddressPrefixes));
        }
        @CustomType.Setter
        public Builder sourceApplicationSecurityGroupIds(@Nullable List<String> sourceApplicationSecurityGroupIds) {

            this.sourceApplicationSecurityGroupIds = sourceApplicationSecurityGroupIds;
            return this;
        }
        public Builder sourceApplicationSecurityGroupIds(String... sourceApplicationSecurityGroupIds) {
            return sourceApplicationSecurityGroupIds(List.of(sourceApplicationSecurityGroupIds));
        }
        @CustomType.Setter
        public Builder sourcePortRange(String sourcePortRange) {
            if (sourcePortRange == null) {
              throw new MissingRequiredPropertyException("GetNetworkSecurityGroupSecurityRule", "sourcePortRange");
            }
            this.sourcePortRange = sourcePortRange;
            return this;
        }
        @CustomType.Setter
        public Builder sourcePortRanges(List<String> sourcePortRanges) {
            if (sourcePortRanges == null) {
              throw new MissingRequiredPropertyException("GetNetworkSecurityGroupSecurityRule", "sourcePortRanges");
            }
            this.sourcePortRanges = sourcePortRanges;
            return this;
        }
        public Builder sourcePortRanges(String... sourcePortRanges) {
            return sourcePortRanges(List.of(sourcePortRanges));
        }
        public GetNetworkSecurityGroupSecurityRule build() {
            final var _resultValue = new GetNetworkSecurityGroupSecurityRule();
            _resultValue.access = access;
            _resultValue.description = description;
            _resultValue.destinationAddressPrefix = destinationAddressPrefix;
            _resultValue.destinationAddressPrefixes = destinationAddressPrefixes;
            _resultValue.destinationApplicationSecurityGroupIds = destinationApplicationSecurityGroupIds;
            _resultValue.destinationPortRange = destinationPortRange;
            _resultValue.destinationPortRanges = destinationPortRanges;
            _resultValue.direction = direction;
            _resultValue.name = name;
            _resultValue.priority = priority;
            _resultValue.protocol = protocol;
            _resultValue.sourceAddressPrefix = sourceAddressPrefix;
            _resultValue.sourceAddressPrefixes = sourceAddressPrefixes;
            _resultValue.sourceApplicationSecurityGroupIds = sourceApplicationSecurityGroupIds;
            _resultValue.sourcePortRange = sourcePortRange;
            _resultValue.sourcePortRanges = sourcePortRanges;
            return _resultValue;
        }
    }
}
