// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.containerservice.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetKubernetesServiceVersionsResult {
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private @Nullable Boolean includePreview;
    /**
     * @return The most recent version available. If `include_preview == false`, this is the most recent non-preview version available.
     * 
     */
    private String latestVersion;
    private String location;
    private @Nullable String versionPrefix;
    /**
     * @return The list of all supported versions.
     * 
     */
    private List<String> versions;

    private GetKubernetesServiceVersionsResult() {}
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public Optional<Boolean> includePreview() {
        return Optional.ofNullable(this.includePreview);
    }
    /**
     * @return The most recent version available. If `include_preview == false`, this is the most recent non-preview version available.
     * 
     */
    public String latestVersion() {
        return this.latestVersion;
    }
    public String location() {
        return this.location;
    }
    public Optional<String> versionPrefix() {
        return Optional.ofNullable(this.versionPrefix);
    }
    /**
     * @return The list of all supported versions.
     * 
     */
    public List<String> versions() {
        return this.versions;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetKubernetesServiceVersionsResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String id;
        private @Nullable Boolean includePreview;
        private String latestVersion;
        private String location;
        private @Nullable String versionPrefix;
        private List<String> versions;
        public Builder() {}
        public Builder(GetKubernetesServiceVersionsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.id = defaults.id;
    	      this.includePreview = defaults.includePreview;
    	      this.latestVersion = defaults.latestVersion;
    	      this.location = defaults.location;
    	      this.versionPrefix = defaults.versionPrefix;
    	      this.versions = defaults.versions;
        }

        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetKubernetesServiceVersionsResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder includePreview(@Nullable Boolean includePreview) {

            this.includePreview = includePreview;
            return this;
        }
        @CustomType.Setter
        public Builder latestVersion(String latestVersion) {
            if (latestVersion == null) {
              throw new MissingRequiredPropertyException("GetKubernetesServiceVersionsResult", "latestVersion");
            }
            this.latestVersion = latestVersion;
            return this;
        }
        @CustomType.Setter
        public Builder location(String location) {
            if (location == null) {
              throw new MissingRequiredPropertyException("GetKubernetesServiceVersionsResult", "location");
            }
            this.location = location;
            return this;
        }
        @CustomType.Setter
        public Builder versionPrefix(@Nullable String versionPrefix) {

            this.versionPrefix = versionPrefix;
            return this;
        }
        @CustomType.Setter
        public Builder versions(List<String> versions) {
            if (versions == null) {
              throw new MissingRequiredPropertyException("GetKubernetesServiceVersionsResult", "versions");
            }
            this.versions = versions;
            return this;
        }
        public Builder versions(String... versions) {
            return versions(List.of(versions));
        }
        public GetKubernetesServiceVersionsResult build() {
            final var _resultValue = new GetKubernetesServiceVersionsResult();
            _resultValue.id = id;
            _resultValue.includePreview = includePreview;
            _resultValue.latestVersion = latestVersion;
            _resultValue.location = location;
            _resultValue.versionPrefix = versionPrefix;
            _resultValue.versions = versions;
            return _resultValue;
        }
    }
}
