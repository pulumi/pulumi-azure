// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.mssql.inputs;

import com.pulumi.azure.mssql.inputs.DatabaseVulnerabilityAssessmentRuleBaselineBaselineResultArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DatabaseVulnerabilityAssessmentRuleBaselineState extends com.pulumi.resources.ResourceArgs {

    public static final DatabaseVulnerabilityAssessmentRuleBaselineState Empty = new DatabaseVulnerabilityAssessmentRuleBaselineState();

    /**
     * The name of the vulnerability assessment rule baseline. Valid options are `default` and `master`. `default` implies a baseline on a database level rule and `master` for server level rule. Defaults to `default`. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="baselineName")
    private @Nullable Output<String> baselineName;

    /**
     * @return The name of the vulnerability assessment rule baseline. Valid options are `default` and `master`. `default` implies a baseline on a database level rule and `master` for server level rule. Defaults to `default`. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> baselineName() {
        return Optional.ofNullable(this.baselineName);
    }

    /**
     * A `baseline_result` block as documented below. Multiple blocks can be defined.
     * 
     */
    @Import(name="baselineResults")
    private @Nullable Output<List<DatabaseVulnerabilityAssessmentRuleBaselineBaselineResultArgs>> baselineResults;

    /**
     * @return A `baseline_result` block as documented below. Multiple blocks can be defined.
     * 
     */
    public Optional<Output<List<DatabaseVulnerabilityAssessmentRuleBaselineBaselineResultArgs>>> baselineResults() {
        return Optional.ofNullable(this.baselineResults);
    }

    /**
     * Specifies the name of the MS SQL Database. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="databaseName")
    private @Nullable Output<String> databaseName;

    /**
     * @return Specifies the name of the MS SQL Database. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> databaseName() {
        return Optional.ofNullable(this.databaseName);
    }

    /**
     * The vulnerability assessment rule ID. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="ruleId")
    private @Nullable Output<String> ruleId;

    /**
     * @return The vulnerability assessment rule ID. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> ruleId() {
        return Optional.ofNullable(this.ruleId);
    }

    /**
     * The Vulnerability Assessment ID of the MS SQL Server. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="serverVulnerabilityAssessmentId")
    private @Nullable Output<String> serverVulnerabilityAssessmentId;

    /**
     * @return The Vulnerability Assessment ID of the MS SQL Server. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> serverVulnerabilityAssessmentId() {
        return Optional.ofNullable(this.serverVulnerabilityAssessmentId);
    }

    private DatabaseVulnerabilityAssessmentRuleBaselineState() {}

    private DatabaseVulnerabilityAssessmentRuleBaselineState(DatabaseVulnerabilityAssessmentRuleBaselineState $) {
        this.baselineName = $.baselineName;
        this.baselineResults = $.baselineResults;
        this.databaseName = $.databaseName;
        this.ruleId = $.ruleId;
        this.serverVulnerabilityAssessmentId = $.serverVulnerabilityAssessmentId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DatabaseVulnerabilityAssessmentRuleBaselineState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DatabaseVulnerabilityAssessmentRuleBaselineState $;

        public Builder() {
            $ = new DatabaseVulnerabilityAssessmentRuleBaselineState();
        }

        public Builder(DatabaseVulnerabilityAssessmentRuleBaselineState defaults) {
            $ = new DatabaseVulnerabilityAssessmentRuleBaselineState(Objects.requireNonNull(defaults));
        }

        /**
         * @param baselineName The name of the vulnerability assessment rule baseline. Valid options are `default` and `master`. `default` implies a baseline on a database level rule and `master` for server level rule. Defaults to `default`. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder baselineName(@Nullable Output<String> baselineName) {
            $.baselineName = baselineName;
            return this;
        }

        /**
         * @param baselineName The name of the vulnerability assessment rule baseline. Valid options are `default` and `master`. `default` implies a baseline on a database level rule and `master` for server level rule. Defaults to `default`. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder baselineName(String baselineName) {
            return baselineName(Output.of(baselineName));
        }

        /**
         * @param baselineResults A `baseline_result` block as documented below. Multiple blocks can be defined.
         * 
         * @return builder
         * 
         */
        public Builder baselineResults(@Nullable Output<List<DatabaseVulnerabilityAssessmentRuleBaselineBaselineResultArgs>> baselineResults) {
            $.baselineResults = baselineResults;
            return this;
        }

        /**
         * @param baselineResults A `baseline_result` block as documented below. Multiple blocks can be defined.
         * 
         * @return builder
         * 
         */
        public Builder baselineResults(List<DatabaseVulnerabilityAssessmentRuleBaselineBaselineResultArgs> baselineResults) {
            return baselineResults(Output.of(baselineResults));
        }

        /**
         * @param baselineResults A `baseline_result` block as documented below. Multiple blocks can be defined.
         * 
         * @return builder
         * 
         */
        public Builder baselineResults(DatabaseVulnerabilityAssessmentRuleBaselineBaselineResultArgs... baselineResults) {
            return baselineResults(List.of(baselineResults));
        }

        /**
         * @param databaseName Specifies the name of the MS SQL Database. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder databaseName(@Nullable Output<String> databaseName) {
            $.databaseName = databaseName;
            return this;
        }

        /**
         * @param databaseName Specifies the name of the MS SQL Database. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder databaseName(String databaseName) {
            return databaseName(Output.of(databaseName));
        }

        /**
         * @param ruleId The vulnerability assessment rule ID. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder ruleId(@Nullable Output<String> ruleId) {
            $.ruleId = ruleId;
            return this;
        }

        /**
         * @param ruleId The vulnerability assessment rule ID. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder ruleId(String ruleId) {
            return ruleId(Output.of(ruleId));
        }

        /**
         * @param serverVulnerabilityAssessmentId The Vulnerability Assessment ID of the MS SQL Server. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder serverVulnerabilityAssessmentId(@Nullable Output<String> serverVulnerabilityAssessmentId) {
            $.serverVulnerabilityAssessmentId = serverVulnerabilityAssessmentId;
            return this;
        }

        /**
         * @param serverVulnerabilityAssessmentId The Vulnerability Assessment ID of the MS SQL Server. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder serverVulnerabilityAssessmentId(String serverVulnerabilityAssessmentId) {
            return serverVulnerabilityAssessmentId(Output.of(serverVulnerabilityAssessmentId));
        }

        public DatabaseVulnerabilityAssessmentRuleBaselineState build() {
            return $;
        }
    }

}
