// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.appplatform;

import com.pulumi.azure.Utilities;
import com.pulumi.azure.appplatform.SpringCloudDynatraceApplicationPerformanceMonitoringArgs;
import com.pulumi.azure.appplatform.inputs.SpringCloudDynatraceApplicationPerformanceMonitoringState;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * &gt; **NOTE:** This resource is only applicable for Spring Cloud Service enterprise tier
 * 
 * Manages a Spring Cloud Application Performance Monitoring resource for Dynatrace.
 * 
 * ## Example Usage
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.azure.core.ResourceGroup;
 * import com.pulumi.azure.core.ResourceGroupArgs;
 * import com.pulumi.azure.appplatform.SpringCloudService;
 * import com.pulumi.azure.appplatform.SpringCloudServiceArgs;
 * import com.pulumi.azure.appplatform.SpringCloudDynatraceApplicationPerformanceMonitoring;
 * import com.pulumi.azure.appplatform.SpringCloudDynatraceApplicationPerformanceMonitoringArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var exampleResourceGroup = new ResourceGroup(&#34;exampleResourceGroup&#34;, ResourceGroupArgs.builder()        
 *             .location(&#34;West Europe&#34;)
 *             .build());
 * 
 *         var exampleSpringCloudService = new SpringCloudService(&#34;exampleSpringCloudService&#34;, SpringCloudServiceArgs.builder()        
 *             .location(exampleResourceGroup.location())
 *             .resourceGroupName(exampleResourceGroup.name())
 *             .skuName(&#34;E0&#34;)
 *             .build());
 * 
 *         var exampleSpringCloudDynatraceApplicationPerformanceMonitoring = new SpringCloudDynatraceApplicationPerformanceMonitoring(&#34;exampleSpringCloudDynatraceApplicationPerformanceMonitoring&#34;, SpringCloudDynatraceApplicationPerformanceMonitoringArgs.builder()        
 *             .springCloudServiceId(exampleSpringCloudService.id())
 *             .globallyEnabled(true)
 *             .apiUrl(&#34;https://example-api-url.com&#34;)
 *             .apiToken(&#34;dt0s01.AAAAAAAAAAAAAAAAAAAAAAAA.BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB&#34;)
 *             .environmentId(&#34;example-environment-id&#34;)
 *             .tenant(&#34;example-tenant&#34;)
 *             .tenantToken(&#34;dt0s01.AAAAAAAAAAAAAAAAAAAAAAAA.BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB&#34;)
 *             .connectionPoint(&#34;https://example.live.dynatrace.com:443&#34;)
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * Spring Cloud Application Performance Monitoring resource for Dynatrace can be imported using the `resource id`, e.g.
 * 
 * ```sh
 *  $ pulumi import azure:appplatform/springCloudDynatraceApplicationPerformanceMonitoring:SpringCloudDynatraceApplicationPerformanceMonitoring example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/mygroup1/providers/Microsoft.AppPlatform/spring/service1/apms/apm1
 * ```
 * 
 */
@ResourceType(type="azure:appplatform/springCloudDynatraceApplicationPerformanceMonitoring:SpringCloudDynatraceApplicationPerformanceMonitoring")
public class SpringCloudDynatraceApplicationPerformanceMonitoring extends com.pulumi.resources.CustomResource {
    /**
     * Specifies the API token of the Dynatrace environment.
     * 
     */
    @Export(name="apiToken", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> apiToken;

    /**
     * @return Specifies the API token of the Dynatrace environment.
     * 
     */
    public Output<Optional<String>> apiToken() {
        return Codegen.optional(this.apiToken);
    }
    /**
     * Specifies the API Url of the Dynatrace environment.
     * 
     */
    @Export(name="apiUrl", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> apiUrl;

    /**
     * @return Specifies the API Url of the Dynatrace environment.
     * 
     */
    public Output<Optional<String>> apiUrl() {
        return Codegen.optional(this.apiUrl);
    }
    /**
     * Specifies the endpoint to connect to the Dynatrace environment.
     * 
     */
    @Export(name="connectionPoint", refs={String.class}, tree="[0]")
    private Output<String> connectionPoint;

    /**
     * @return Specifies the endpoint to connect to the Dynatrace environment.
     * 
     */
    public Output<String> connectionPoint() {
        return this.connectionPoint;
    }
    /**
     * Specifies the Dynatrace environment ID.
     * 
     */
    @Export(name="environmentId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> environmentId;

    /**
     * @return Specifies the Dynatrace environment ID.
     * 
     */
    public Output<Optional<String>> environmentId() {
        return Codegen.optional(this.environmentId);
    }
    /**
     * Specifies whether the Spring Cloud Application Performance Monitoring resource for Application Insights is enabled globally. Defaults to `false`.
     * 
     */
    @Export(name="globallyEnabled", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> globallyEnabled;

    /**
     * @return Specifies whether the Spring Cloud Application Performance Monitoring resource for Application Insights is enabled globally. Defaults to `false`.
     * 
     */
    public Output<Optional<Boolean>> globallyEnabled() {
        return Codegen.optional(this.globallyEnabled);
    }
    /**
     * The name which should be used for this Spring Cloud Application Performance Monitoring resource for Dynatrace. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The name which should be used for this Spring Cloud Application Performance Monitoring resource for Dynatrace. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The ID of the Spring Cloud Service. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="springCloudServiceId", refs={String.class}, tree="[0]")
    private Output<String> springCloudServiceId;

    /**
     * @return The ID of the Spring Cloud Service. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> springCloudServiceId() {
        return this.springCloudServiceId;
    }
    /**
     * Specifies the Dynatrace tenant.
     * 
     */
    @Export(name="tenant", refs={String.class}, tree="[0]")
    private Output<String> tenant;

    /**
     * @return Specifies the Dynatrace tenant.
     * 
     */
    public Output<String> tenant() {
        return this.tenant;
    }
    /**
     * Specifies the internal token that is used for authentication when OneAgent connects to the Dynatrace cluster to send data.
     * 
     */
    @Export(name="tenantToken", refs={String.class}, tree="[0]")
    private Output<String> tenantToken;

    /**
     * @return Specifies the internal token that is used for authentication when OneAgent connects to the Dynatrace cluster to send data.
     * 
     */
    public Output<String> tenantToken() {
        return this.tenantToken;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public SpringCloudDynatraceApplicationPerformanceMonitoring(String name) {
        this(name, SpringCloudDynatraceApplicationPerformanceMonitoringArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public SpringCloudDynatraceApplicationPerformanceMonitoring(String name, SpringCloudDynatraceApplicationPerformanceMonitoringArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public SpringCloudDynatraceApplicationPerformanceMonitoring(String name, SpringCloudDynatraceApplicationPerformanceMonitoringArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:appplatform/springCloudDynatraceApplicationPerformanceMonitoring:SpringCloudDynatraceApplicationPerformanceMonitoring", name, args == null ? SpringCloudDynatraceApplicationPerformanceMonitoringArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private SpringCloudDynatraceApplicationPerformanceMonitoring(String name, Output<String> id, @Nullable SpringCloudDynatraceApplicationPerformanceMonitoringState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:appplatform/springCloudDynatraceApplicationPerformanceMonitoring:SpringCloudDynatraceApplicationPerformanceMonitoring", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .additionalSecretOutputs(List.of(
                "apiToken",
                "tenant",
                "tenantToken"
            ))
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static SpringCloudDynatraceApplicationPerformanceMonitoring get(String name, Output<String> id, @Nullable SpringCloudDynatraceApplicationPerformanceMonitoringState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new SpringCloudDynatraceApplicationPerformanceMonitoring(name, id, state, options);
    }
}
