// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.apimanagement.inputs;

import com.pulumi.azure.apimanagement.inputs.BackendServiceFabricClusterServerX509NameArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class BackendServiceFabricClusterArgs extends com.pulumi.resources.ResourceArgs {

    public static final BackendServiceFabricClusterArgs Empty = new BackendServiceFabricClusterArgs();

    /**
     * The client certificate resource id for the management endpoint.
     * 
     * &gt; **Note:** At least one of `client_certificate_thumbprint`, and `client_certificate_id` must be set.
     * 
     */
    @Import(name="clientCertificateId")
    private @Nullable Output<String> clientCertificateId;

    /**
     * @return The client certificate resource id for the management endpoint.
     * 
     * &gt; **Note:** At least one of `client_certificate_thumbprint`, and `client_certificate_id` must be set.
     * 
     */
    public Optional<Output<String>> clientCertificateId() {
        return Optional.ofNullable(this.clientCertificateId);
    }

    /**
     * The client certificate thumbprint for the management endpoint.
     * 
     */
    @Import(name="clientCertificateThumbprint")
    private @Nullable Output<String> clientCertificateThumbprint;

    /**
     * @return The client certificate thumbprint for the management endpoint.
     * 
     */
    public Optional<Output<String>> clientCertificateThumbprint() {
        return Optional.ofNullable(this.clientCertificateThumbprint);
    }

    /**
     * A list of cluster management endpoints.
     * 
     */
    @Import(name="managementEndpoints", required=true)
    private Output<List<String>> managementEndpoints;

    /**
     * @return A list of cluster management endpoints.
     * 
     */
    public Output<List<String>> managementEndpoints() {
        return this.managementEndpoints;
    }

    /**
     * The maximum number of retries when attempting resolve the partition.
     * 
     */
    @Import(name="maxPartitionResolutionRetries", required=true)
    private Output<Integer> maxPartitionResolutionRetries;

    /**
     * @return The maximum number of retries when attempting resolve the partition.
     * 
     */
    public Output<Integer> maxPartitionResolutionRetries() {
        return this.maxPartitionResolutionRetries;
    }

    /**
     * A list of thumbprints of the server certificates of the Service Fabric cluster.
     * 
     */
    @Import(name="serverCertificateThumbprints")
    private @Nullable Output<List<String>> serverCertificateThumbprints;

    /**
     * @return A list of thumbprints of the server certificates of the Service Fabric cluster.
     * 
     */
    public Optional<Output<List<String>>> serverCertificateThumbprints() {
        return Optional.ofNullable(this.serverCertificateThumbprints);
    }

    /**
     * One or more `server_x509_name` blocks as documented below.
     * 
     */
    @Import(name="serverX509Names")
    private @Nullable Output<List<BackendServiceFabricClusterServerX509NameArgs>> serverX509Names;

    /**
     * @return One or more `server_x509_name` blocks as documented below.
     * 
     */
    public Optional<Output<List<BackendServiceFabricClusterServerX509NameArgs>>> serverX509Names() {
        return Optional.ofNullable(this.serverX509Names);
    }

    private BackendServiceFabricClusterArgs() {}

    private BackendServiceFabricClusterArgs(BackendServiceFabricClusterArgs $) {
        this.clientCertificateId = $.clientCertificateId;
        this.clientCertificateThumbprint = $.clientCertificateThumbprint;
        this.managementEndpoints = $.managementEndpoints;
        this.maxPartitionResolutionRetries = $.maxPartitionResolutionRetries;
        this.serverCertificateThumbprints = $.serverCertificateThumbprints;
        this.serverX509Names = $.serverX509Names;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BackendServiceFabricClusterArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BackendServiceFabricClusterArgs $;

        public Builder() {
            $ = new BackendServiceFabricClusterArgs();
        }

        public Builder(BackendServiceFabricClusterArgs defaults) {
            $ = new BackendServiceFabricClusterArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param clientCertificateId The client certificate resource id for the management endpoint.
         * 
         * &gt; **Note:** At least one of `client_certificate_thumbprint`, and `client_certificate_id` must be set.
         * 
         * @return builder
         * 
         */
        public Builder clientCertificateId(@Nullable Output<String> clientCertificateId) {
            $.clientCertificateId = clientCertificateId;
            return this;
        }

        /**
         * @param clientCertificateId The client certificate resource id for the management endpoint.
         * 
         * &gt; **Note:** At least one of `client_certificate_thumbprint`, and `client_certificate_id` must be set.
         * 
         * @return builder
         * 
         */
        public Builder clientCertificateId(String clientCertificateId) {
            return clientCertificateId(Output.of(clientCertificateId));
        }

        /**
         * @param clientCertificateThumbprint The client certificate thumbprint for the management endpoint.
         * 
         * @return builder
         * 
         */
        public Builder clientCertificateThumbprint(@Nullable Output<String> clientCertificateThumbprint) {
            $.clientCertificateThumbprint = clientCertificateThumbprint;
            return this;
        }

        /**
         * @param clientCertificateThumbprint The client certificate thumbprint for the management endpoint.
         * 
         * @return builder
         * 
         */
        public Builder clientCertificateThumbprint(String clientCertificateThumbprint) {
            return clientCertificateThumbprint(Output.of(clientCertificateThumbprint));
        }

        /**
         * @param managementEndpoints A list of cluster management endpoints.
         * 
         * @return builder
         * 
         */
        public Builder managementEndpoints(Output<List<String>> managementEndpoints) {
            $.managementEndpoints = managementEndpoints;
            return this;
        }

        /**
         * @param managementEndpoints A list of cluster management endpoints.
         * 
         * @return builder
         * 
         */
        public Builder managementEndpoints(List<String> managementEndpoints) {
            return managementEndpoints(Output.of(managementEndpoints));
        }

        /**
         * @param managementEndpoints A list of cluster management endpoints.
         * 
         * @return builder
         * 
         */
        public Builder managementEndpoints(String... managementEndpoints) {
            return managementEndpoints(List.of(managementEndpoints));
        }

        /**
         * @param maxPartitionResolutionRetries The maximum number of retries when attempting resolve the partition.
         * 
         * @return builder
         * 
         */
        public Builder maxPartitionResolutionRetries(Output<Integer> maxPartitionResolutionRetries) {
            $.maxPartitionResolutionRetries = maxPartitionResolutionRetries;
            return this;
        }

        /**
         * @param maxPartitionResolutionRetries The maximum number of retries when attempting resolve the partition.
         * 
         * @return builder
         * 
         */
        public Builder maxPartitionResolutionRetries(Integer maxPartitionResolutionRetries) {
            return maxPartitionResolutionRetries(Output.of(maxPartitionResolutionRetries));
        }

        /**
         * @param serverCertificateThumbprints A list of thumbprints of the server certificates of the Service Fabric cluster.
         * 
         * @return builder
         * 
         */
        public Builder serverCertificateThumbprints(@Nullable Output<List<String>> serverCertificateThumbprints) {
            $.serverCertificateThumbprints = serverCertificateThumbprints;
            return this;
        }

        /**
         * @param serverCertificateThumbprints A list of thumbprints of the server certificates of the Service Fabric cluster.
         * 
         * @return builder
         * 
         */
        public Builder serverCertificateThumbprints(List<String> serverCertificateThumbprints) {
            return serverCertificateThumbprints(Output.of(serverCertificateThumbprints));
        }

        /**
         * @param serverCertificateThumbprints A list of thumbprints of the server certificates of the Service Fabric cluster.
         * 
         * @return builder
         * 
         */
        public Builder serverCertificateThumbprints(String... serverCertificateThumbprints) {
            return serverCertificateThumbprints(List.of(serverCertificateThumbprints));
        }

        /**
         * @param serverX509Names One or more `server_x509_name` blocks as documented below.
         * 
         * @return builder
         * 
         */
        public Builder serverX509Names(@Nullable Output<List<BackendServiceFabricClusterServerX509NameArgs>> serverX509Names) {
            $.serverX509Names = serverX509Names;
            return this;
        }

        /**
         * @param serverX509Names One or more `server_x509_name` blocks as documented below.
         * 
         * @return builder
         * 
         */
        public Builder serverX509Names(List<BackendServiceFabricClusterServerX509NameArgs> serverX509Names) {
            return serverX509Names(Output.of(serverX509Names));
        }

        /**
         * @param serverX509Names One or more `server_x509_name` blocks as documented below.
         * 
         * @return builder
         * 
         */
        public Builder serverX509Names(BackendServiceFabricClusterServerX509NameArgs... serverX509Names) {
            return serverX509Names(List.of(serverX509Names));
        }

        public BackendServiceFabricClusterArgs build() {
            if ($.managementEndpoints == null) {
                throw new MissingRequiredPropertyException("BackendServiceFabricClusterArgs", "managementEndpoints");
            }
            if ($.maxPartitionResolutionRetries == null) {
                throw new MissingRequiredPropertyException("BackendServiceFabricClusterArgs", "maxPartitionResolutionRetries");
            }
            return $;
        }
    }

}
