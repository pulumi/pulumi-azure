// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.network.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class FirewallPolicyRuleCollectionGroupNatRuleCollectionRule {
    /**
     * @return The description which should be used for this rule.
     * 
     */
    private @Nullable String description;
    /**
     * @return The destination IP address (including CIDR).
     * 
     */
    private @Nullable String destinationAddress;
    /**
     * @return Specifies a list of destination ports. Only one destination port is supported in a NAT rule.
     * 
     */
    private @Nullable String destinationPorts;
    /**
     * @return The name which should be used for this Firewall Policy Rule Collection Group. Changing this forces a new Firewall Policy Rule Collection Group to be created.
     * 
     */
    private String name;
    /**
     * @return One or more `protocols` blocks as defined below.
     * 
     */
    private List<String> protocols;
    /**
     * @return Specifies a list of source IP addresses (including CIDR, IP range and `*`).
     * 
     */
    private @Nullable List<String> sourceAddresses;
    /**
     * @return Specifies a list of source IP groups.
     * 
     */
    private @Nullable List<String> sourceIpGroups;
    /**
     * @return Specifies the translated address.
     * 
     */
    private @Nullable String translatedAddress;
    /**
     * @return Specifies the translated FQDN.
     * 
     * &gt; **NOTE:** Exactly one of `translated_address` and `translated_fqdn` should be set.
     * 
     */
    private @Nullable String translatedFqdn;
    /**
     * @return Specifies the translated port.
     * 
     */
    private Integer translatedPort;

    private FirewallPolicyRuleCollectionGroupNatRuleCollectionRule() {}
    /**
     * @return The description which should be used for this rule.
     * 
     */
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }
    /**
     * @return The destination IP address (including CIDR).
     * 
     */
    public Optional<String> destinationAddress() {
        return Optional.ofNullable(this.destinationAddress);
    }
    /**
     * @return Specifies a list of destination ports. Only one destination port is supported in a NAT rule.
     * 
     */
    public Optional<String> destinationPorts() {
        return Optional.ofNullable(this.destinationPorts);
    }
    /**
     * @return The name which should be used for this Firewall Policy Rule Collection Group. Changing this forces a new Firewall Policy Rule Collection Group to be created.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return One or more `protocols` blocks as defined below.
     * 
     */
    public List<String> protocols() {
        return this.protocols;
    }
    /**
     * @return Specifies a list of source IP addresses (including CIDR, IP range and `*`).
     * 
     */
    public List<String> sourceAddresses() {
        return this.sourceAddresses == null ? List.of() : this.sourceAddresses;
    }
    /**
     * @return Specifies a list of source IP groups.
     * 
     */
    public List<String> sourceIpGroups() {
        return this.sourceIpGroups == null ? List.of() : this.sourceIpGroups;
    }
    /**
     * @return Specifies the translated address.
     * 
     */
    public Optional<String> translatedAddress() {
        return Optional.ofNullable(this.translatedAddress);
    }
    /**
     * @return Specifies the translated FQDN.
     * 
     * &gt; **NOTE:** Exactly one of `translated_address` and `translated_fqdn` should be set.
     * 
     */
    public Optional<String> translatedFqdn() {
        return Optional.ofNullable(this.translatedFqdn);
    }
    /**
     * @return Specifies the translated port.
     * 
     */
    public Integer translatedPort() {
        return this.translatedPort;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(FirewallPolicyRuleCollectionGroupNatRuleCollectionRule defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String description;
        private @Nullable String destinationAddress;
        private @Nullable String destinationPorts;
        private String name;
        private List<String> protocols;
        private @Nullable List<String> sourceAddresses;
        private @Nullable List<String> sourceIpGroups;
        private @Nullable String translatedAddress;
        private @Nullable String translatedFqdn;
        private Integer translatedPort;
        public Builder() {}
        public Builder(FirewallPolicyRuleCollectionGroupNatRuleCollectionRule defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.description = defaults.description;
    	      this.destinationAddress = defaults.destinationAddress;
    	      this.destinationPorts = defaults.destinationPorts;
    	      this.name = defaults.name;
    	      this.protocols = defaults.protocols;
    	      this.sourceAddresses = defaults.sourceAddresses;
    	      this.sourceIpGroups = defaults.sourceIpGroups;
    	      this.translatedAddress = defaults.translatedAddress;
    	      this.translatedFqdn = defaults.translatedFqdn;
    	      this.translatedPort = defaults.translatedPort;
        }

        @CustomType.Setter
        public Builder description(@Nullable String description) {

            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder destinationAddress(@Nullable String destinationAddress) {

            this.destinationAddress = destinationAddress;
            return this;
        }
        @CustomType.Setter
        public Builder destinationPorts(@Nullable String destinationPorts) {

            this.destinationPorts = destinationPorts;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("FirewallPolicyRuleCollectionGroupNatRuleCollectionRule", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder protocols(List<String> protocols) {
            if (protocols == null) {
              throw new MissingRequiredPropertyException("FirewallPolicyRuleCollectionGroupNatRuleCollectionRule", "protocols");
            }
            this.protocols = protocols;
            return this;
        }
        public Builder protocols(String... protocols) {
            return protocols(List.of(protocols));
        }
        @CustomType.Setter
        public Builder sourceAddresses(@Nullable List<String> sourceAddresses) {

            this.sourceAddresses = sourceAddresses;
            return this;
        }
        public Builder sourceAddresses(String... sourceAddresses) {
            return sourceAddresses(List.of(sourceAddresses));
        }
        @CustomType.Setter
        public Builder sourceIpGroups(@Nullable List<String> sourceIpGroups) {

            this.sourceIpGroups = sourceIpGroups;
            return this;
        }
        public Builder sourceIpGroups(String... sourceIpGroups) {
            return sourceIpGroups(List.of(sourceIpGroups));
        }
        @CustomType.Setter
        public Builder translatedAddress(@Nullable String translatedAddress) {

            this.translatedAddress = translatedAddress;
            return this;
        }
        @CustomType.Setter
        public Builder translatedFqdn(@Nullable String translatedFqdn) {

            this.translatedFqdn = translatedFqdn;
            return this;
        }
        @CustomType.Setter
        public Builder translatedPort(Integer translatedPort) {
            if (translatedPort == null) {
              throw new MissingRequiredPropertyException("FirewallPolicyRuleCollectionGroupNatRuleCollectionRule", "translatedPort");
            }
            this.translatedPort = translatedPort;
            return this;
        }
        public FirewallPolicyRuleCollectionGroupNatRuleCollectionRule build() {
            final var _resultValue = new FirewallPolicyRuleCollectionGroupNatRuleCollectionRule();
            _resultValue.description = description;
            _resultValue.destinationAddress = destinationAddress;
            _resultValue.destinationPorts = destinationPorts;
            _resultValue.name = name;
            _resultValue.protocols = protocols;
            _resultValue.sourceAddresses = sourceAddresses;
            _resultValue.sourceIpGroups = sourceIpGroups;
            _resultValue.translatedAddress = translatedAddress;
            _resultValue.translatedFqdn = translatedFqdn;
            _resultValue.translatedPort = translatedPort;
            return _resultValue;
        }
    }
}
