// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.network.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetApplicationGatewaySslProfileSslPolicy {
    /**
     * @return A List of accepted cipher suites.
     * 
     */
    private List<String> cipherSuites;
    /**
     * @return A list of SSL Protocols which are disabled on this Application Gateway.
     * 
     */
    private List<String> disabledProtocols;
    /**
     * @return The minimum TLS version.
     * 
     */
    private String minProtocolVersion;
    /**
     * @return The Name of the Policy.
     * 
     */
    private String policyName;
    /**
     * @return The Type of the Policy.
     * 
     */
    private String policyType;

    private GetApplicationGatewaySslProfileSslPolicy() {}
    /**
     * @return A List of accepted cipher suites.
     * 
     */
    public List<String> cipherSuites() {
        return this.cipherSuites;
    }
    /**
     * @return A list of SSL Protocols which are disabled on this Application Gateway.
     * 
     */
    public List<String> disabledProtocols() {
        return this.disabledProtocols;
    }
    /**
     * @return The minimum TLS version.
     * 
     */
    public String minProtocolVersion() {
        return this.minProtocolVersion;
    }
    /**
     * @return The Name of the Policy.
     * 
     */
    public String policyName() {
        return this.policyName;
    }
    /**
     * @return The Type of the Policy.
     * 
     */
    public String policyType() {
        return this.policyType;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetApplicationGatewaySslProfileSslPolicy defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<String> cipherSuites;
        private List<String> disabledProtocols;
        private String minProtocolVersion;
        private String policyName;
        private String policyType;
        public Builder() {}
        public Builder(GetApplicationGatewaySslProfileSslPolicy defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.cipherSuites = defaults.cipherSuites;
    	      this.disabledProtocols = defaults.disabledProtocols;
    	      this.minProtocolVersion = defaults.minProtocolVersion;
    	      this.policyName = defaults.policyName;
    	      this.policyType = defaults.policyType;
        }

        @CustomType.Setter
        public Builder cipherSuites(List<String> cipherSuites) {
            this.cipherSuites = Objects.requireNonNull(cipherSuites);
            return this;
        }
        public Builder cipherSuites(String... cipherSuites) {
            return cipherSuites(List.of(cipherSuites));
        }
        @CustomType.Setter
        public Builder disabledProtocols(List<String> disabledProtocols) {
            this.disabledProtocols = Objects.requireNonNull(disabledProtocols);
            return this;
        }
        public Builder disabledProtocols(String... disabledProtocols) {
            return disabledProtocols(List.of(disabledProtocols));
        }
        @CustomType.Setter
        public Builder minProtocolVersion(String minProtocolVersion) {
            this.minProtocolVersion = Objects.requireNonNull(minProtocolVersion);
            return this;
        }
        @CustomType.Setter
        public Builder policyName(String policyName) {
            this.policyName = Objects.requireNonNull(policyName);
            return this;
        }
        @CustomType.Setter
        public Builder policyType(String policyType) {
            this.policyType = Objects.requireNonNull(policyType);
            return this;
        }
        public GetApplicationGatewaySslProfileSslPolicy build() {
            final var _resultValue = new GetApplicationGatewaySslProfileSslPolicy();
            _resultValue.cipherSuites = cipherSuites;
            _resultValue.disabledProtocols = disabledProtocols;
            _resultValue.minProtocolVersion = minProtocolVersion;
            _resultValue.policyName = policyName;
            _resultValue.policyType = policyType;
            return _resultValue;
        }
    }
}
