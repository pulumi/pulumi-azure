// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.appservice;

import com.pulumi.azure.Utilities;
import com.pulumi.azure.appservice.FunctionAppArgs;
import com.pulumi.azure.appservice.inputs.FunctionAppState;
import com.pulumi.azure.appservice.outputs.FunctionAppAuthSettings;
import com.pulumi.azure.appservice.outputs.FunctionAppConnectionString;
import com.pulumi.azure.appservice.outputs.FunctionAppIdentity;
import com.pulumi.azure.appservice.outputs.FunctionAppSiteConfig;
import com.pulumi.azure.appservice.outputs.FunctionAppSiteCredential;
import com.pulumi.azure.appservice.outputs.FunctionAppSourceControl;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * ## Import
 * 
 * Function Apps can be imported using the `resource id`, e.g.
 * 
 * ```sh
 *  $ pulumi import azure:appservice/functionApp:FunctionApp functionapp1 /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/mygroup1/providers/Microsoft.Web/sites/functionapp1
 * ```
 * 
 */
@ResourceType(type="azure:appservice/functionApp:FunctionApp")
public class FunctionApp extends com.pulumi.resources.CustomResource {
    /**
     * The ID of the App Service Plan within which to create this Function App.
     * 
     */
    @Export(name="appServicePlanId", type=String.class, parameters={})
    private Output<String> appServicePlanId;

    /**
     * @return The ID of the App Service Plan within which to create this Function App.
     * 
     */
    public Output<String> appServicePlanId() {
        return this.appServicePlanId;
    }
    /**
     * A map of key-value pairs for [App Settings](https://docs.microsoft.com/azure/azure-functions/functions-app-settings) and custom values.
     * 
     */
    @Export(name="appSettings", type=Map.class, parameters={String.class, String.class})
    private Output<Map<String,String>> appSettings;

    /**
     * @return A map of key-value pairs for [App Settings](https://docs.microsoft.com/azure/azure-functions/functions-app-settings) and custom values.
     * 
     */
    public Output<Map<String,String>> appSettings() {
        return this.appSettings;
    }
    /**
     * A `auth_settings` block as defined below.
     * 
     */
    @Export(name="authSettings", type=FunctionAppAuthSettings.class, parameters={})
    private Output<FunctionAppAuthSettings> authSettings;

    /**
     * @return A `auth_settings` block as defined below.
     * 
     */
    public Output<FunctionAppAuthSettings> authSettings() {
        return this.authSettings;
    }
    /**
     * The mode of the Function App&#39;s client certificates requirement for incoming requests. Possible values are `Required` and `Optional`.
     * 
     */
    @Export(name="clientCertMode", type=String.class, parameters={})
    private Output</* @Nullable */ String> clientCertMode;

    /**
     * @return The mode of the Function App&#39;s client certificates requirement for incoming requests. Possible values are `Required` and `Optional`.
     * 
     */
    public Output<Optional<String>> clientCertMode() {
        return Codegen.optional(this.clientCertMode);
    }
    /**
     * An `connection_string` block as defined below.
     * 
     */
    @Export(name="connectionStrings", type=List.class, parameters={FunctionAppConnectionString.class})
    private Output<List<FunctionAppConnectionString>> connectionStrings;

    /**
     * @return An `connection_string` block as defined below.
     * 
     */
    public Output<List<FunctionAppConnectionString>> connectionStrings() {
        return this.connectionStrings;
    }
    /**
     * An identifier used by App Service to perform domain ownership verification via DNS TXT record.
     * 
     */
    @Export(name="customDomainVerificationId", type=String.class, parameters={})
    private Output<String> customDomainVerificationId;

    /**
     * @return An identifier used by App Service to perform domain ownership verification via DNS TXT record.
     * 
     */
    public Output<String> customDomainVerificationId() {
        return this.customDomainVerificationId;
    }
    /**
     * The amount of memory in gigabyte-seconds that your application is allowed to consume per day. Setting this value only affects function apps under the consumption plan. Defaults to `0`.
     * 
     */
    @Export(name="dailyMemoryTimeQuota", type=Integer.class, parameters={})
    private Output</* @Nullable */ Integer> dailyMemoryTimeQuota;

    /**
     * @return The amount of memory in gigabyte-seconds that your application is allowed to consume per day. Setting this value only affects function apps under the consumption plan. Defaults to `0`.
     * 
     */
    public Output<Optional<Integer>> dailyMemoryTimeQuota() {
        return Codegen.optional(this.dailyMemoryTimeQuota);
    }
    /**
     * The default hostname associated with the Function App - such as `mysite.azurewebsites.net`
     * 
     */
    @Export(name="defaultHostname", type=String.class, parameters={})
    private Output<String> defaultHostname;

    /**
     * @return The default hostname associated with the Function App - such as `mysite.azurewebsites.net`
     * 
     */
    public Output<String> defaultHostname() {
        return this.defaultHostname;
    }
    /**
     * Should the built-in logging of this Function App be enabled? Defaults to `true`.
     * 
     */
    @Export(name="enableBuiltinLogging", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> enableBuiltinLogging;

    /**
     * @return Should the built-in logging of this Function App be enabled? Defaults to `true`.
     * 
     */
    public Output<Optional<Boolean>> enableBuiltinLogging() {
        return Codegen.optional(this.enableBuiltinLogging);
    }
    /**
     * Is the Function App enabled?
     * 
     */
    @Export(name="enabled", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> enabled;

    /**
     * @return Is the Function App enabled?
     * 
     */
    public Output<Optional<Boolean>> enabled() {
        return Codegen.optional(this.enabled);
    }
    /**
     * Can the Function App only be accessed via HTTPS? Defaults to `false`.
     * 
     */
    @Export(name="httpsOnly", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> httpsOnly;

    /**
     * @return Can the Function App only be accessed via HTTPS? Defaults to `false`.
     * 
     */
    public Output<Optional<Boolean>> httpsOnly() {
        return Codegen.optional(this.httpsOnly);
    }
    /**
     * An `identity` block as defined below.
     * 
     */
    @Export(name="identity", type=FunctionAppIdentity.class, parameters={})
    private Output</* @Nullable */ FunctionAppIdentity> identity;

    /**
     * @return An `identity` block as defined below.
     * 
     */
    public Output<Optional<FunctionAppIdentity>> identity() {
        return Codegen.optional(this.identity);
    }
    /**
     * The User Assigned Identity Id used for looking up KeyVault secrets. The identity must be assigned to the application. See [Access vaults with a user-assigned identity](https://docs.microsoft.com/azure/app-service/app-service-key-vault-references#access-vaults-with-a-user-assigned-identity) for more information.
     * 
     */
    @Export(name="keyVaultReferenceIdentityId", type=String.class, parameters={})
    private Output<String> keyVaultReferenceIdentityId;

    /**
     * @return The User Assigned Identity Id used for looking up KeyVault secrets. The identity must be assigned to the application. See [Access vaults with a user-assigned identity](https://docs.microsoft.com/azure/app-service/app-service-key-vault-references#access-vaults-with-a-user-assigned-identity) for more information.
     * 
     */
    public Output<String> keyVaultReferenceIdentityId() {
        return this.keyVaultReferenceIdentityId;
    }
    /**
     * The Function App kind - such as `functionapp,linux,container`
     * 
     */
    @Export(name="kind", type=String.class, parameters={})
    private Output<String> kind;

    /**
     * @return The Function App kind - such as `functionapp,linux,container`
     * 
     */
    public Output<String> kind() {
        return this.kind;
    }
    /**
     * Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="location", type=String.class, parameters={})
    private Output<String> location;

    /**
     * @return Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> location() {
        return this.location;
    }
    /**
     * Specifies the name of the Function App. Changing this forces a new resource to be created. Limit the function name to 32 characters to avoid naming collisions. For more information about [Function App naming rule](https://docs.microsoft.com/azure/azure-resource-manager/management/resource-name-rules#microsoftweb)
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return Specifies the name of the Function App. Changing this forces a new resource to be created. Limit the function name to 32 characters to avoid naming collisions. For more information about [Function App naming rule](https://docs.microsoft.com/azure/azure-resource-manager/management/resource-name-rules#microsoftweb)
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * A string indicating the Operating System type for this function app.
     * 
     */
    @Export(name="osType", type=String.class, parameters={})
    private Output</* @Nullable */ String> osType;

    /**
     * @return A string indicating the Operating System type for this function app.
     * 
     */
    public Output<Optional<String>> osType() {
        return Codegen.optional(this.osType);
    }
    /**
     * A comma separated list of outbound IP addresses - such as `52.23.25.3,52.143.43.12`
     * 
     */
    @Export(name="outboundIpAddresses", type=String.class, parameters={})
    private Output<String> outboundIpAddresses;

    /**
     * @return A comma separated list of outbound IP addresses - such as `52.23.25.3,52.143.43.12`
     * 
     */
    public Output<String> outboundIpAddresses() {
        return this.outboundIpAddresses;
    }
    /**
     * A comma separated list of outbound IP addresses - such as `52.23.25.3,52.143.43.12,52.143.43.17` - not all of which are necessarily in use. Superset of `outbound_ip_addresses`.
     * 
     */
    @Export(name="possibleOutboundIpAddresses", type=String.class, parameters={})
    private Output<String> possibleOutboundIpAddresses;

    /**
     * @return A comma separated list of outbound IP addresses - such as `52.23.25.3,52.143.43.12,52.143.43.17` - not all of which are necessarily in use. Superset of `outbound_ip_addresses`.
     * 
     */
    public Output<String> possibleOutboundIpAddresses() {
        return this.possibleOutboundIpAddresses;
    }
    /**
     * The name of the resource group in which to create the Function App.
     * 
     */
    @Export(name="resourceGroupName", type=String.class, parameters={})
    private Output<String> resourceGroupName;

    /**
     * @return The name of the resource group in which to create the Function App.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }
    /**
     * A `site_config` object as defined below.
     * 
     */
    @Export(name="siteConfig", type=FunctionAppSiteConfig.class, parameters={})
    private Output<FunctionAppSiteConfig> siteConfig;

    /**
     * @return A `site_config` object as defined below.
     * 
     */
    public Output<FunctionAppSiteConfig> siteConfig() {
        return this.siteConfig;
    }
    /**
     * A `site_credential` block as defined below, which contains the site-level credentials used to publish to this App Service.
     * 
     */
    @Export(name="siteCredentials", type=List.class, parameters={FunctionAppSiteCredential.class})
    private Output<List<FunctionAppSiteCredential>> siteCredentials;

    /**
     * @return A `site_credential` block as defined below, which contains the site-level credentials used to publish to this App Service.
     * 
     */
    public Output<List<FunctionAppSiteCredential>> siteCredentials() {
        return this.siteCredentials;
    }
    /**
     * A `source_control` block, as defined below.
     * 
     */
    @Export(name="sourceControl", type=FunctionAppSourceControl.class, parameters={})
    private Output<FunctionAppSourceControl> sourceControl;

    /**
     * @return A `source_control` block, as defined below.
     * 
     */
    public Output<FunctionAppSourceControl> sourceControl() {
        return this.sourceControl;
    }
    /**
     * The access key which will be used to access the backend storage account for the Function App.
     * 
     */
    @Export(name="storageAccountAccessKey", type=String.class, parameters={})
    private Output<String> storageAccountAccessKey;

    /**
     * @return The access key which will be used to access the backend storage account for the Function App.
     * 
     */
    public Output<String> storageAccountAccessKey() {
        return this.storageAccountAccessKey;
    }
    /**
     * The backend storage account name which will be used by this Function App (such as the dashboard, logs).
     * 
     */
    @Export(name="storageAccountName", type=String.class, parameters={})
    private Output<String> storageAccountName;

    /**
     * @return The backend storage account name which will be used by this Function App (such as the dashboard, logs).
     * 
     */
    public Output<String> storageAccountName() {
        return this.storageAccountName;
    }
    /**
     * A mapping of tags to assign to the resource.
     * 
     */
    @Export(name="tags", type=Map.class, parameters={String.class, String.class})
    private Output</* @Nullable */ Map<String,String>> tags;

    /**
     * @return A mapping of tags to assign to the resource.
     * 
     */
    public Output<Optional<Map<String,String>>> tags() {
        return Codegen.optional(this.tags);
    }
    /**
     * The runtime version associated with the Function App. Defaults to `~1`.
     * 
     */
    @Export(name="version", type=String.class, parameters={})
    private Output</* @Nullable */ String> version;

    /**
     * @return The runtime version associated with the Function App. Defaults to `~1`.
     * 
     */
    public Output<Optional<String>> version() {
        return Codegen.optional(this.version);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public FunctionApp(String name) {
        this(name, FunctionAppArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public FunctionApp(String name, FunctionAppArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public FunctionApp(String name, FunctionAppArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:appservice/functionApp:FunctionApp", name, args == null ? FunctionAppArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private FunctionApp(String name, Output<String> id, @Nullable FunctionAppState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:appservice/functionApp:FunctionApp", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static FunctionApp get(String name, Output<String> id, @Nullable FunctionAppState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new FunctionApp(name, id, state, options);
    }
}
