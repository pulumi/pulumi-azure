// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.nginx.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class GetCertificatePlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetCertificatePlainArgs Empty = new GetCertificatePlainArgs();

    /**
     * The name of this Nginx Certificate.
     * 
     */
    @Import(name="name", required=true)
    private String name;

    /**
     * @return The name of this Nginx Certificate.
     * 
     */
    public String name() {
        return this.name;
    }

    /**
     * The ID of the Nginx Deployment that this certificate is associated with.
     * 
     */
    @Import(name="nginxDeploymentId", required=true)
    private String nginxDeploymentId;

    /**
     * @return The ID of the Nginx Deployment that this certificate is associated with.
     * 
     */
    public String nginxDeploymentId() {
        return this.nginxDeploymentId;
    }

    private GetCertificatePlainArgs() {}

    private GetCertificatePlainArgs(GetCertificatePlainArgs $) {
        this.name = $.name;
        this.nginxDeploymentId = $.nginxDeploymentId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetCertificatePlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetCertificatePlainArgs $;

        public Builder() {
            $ = new GetCertificatePlainArgs();
        }

        public Builder(GetCertificatePlainArgs defaults) {
            $ = new GetCertificatePlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param name The name of this Nginx Certificate.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            $.name = name;
            return this;
        }

        /**
         * @param nginxDeploymentId The ID of the Nginx Deployment that this certificate is associated with.
         * 
         * @return builder
         * 
         */
        public Builder nginxDeploymentId(String nginxDeploymentId) {
            $.nginxDeploymentId = nginxDeploymentId;
            return this;
        }

        public GetCertificatePlainArgs build() {
            if ($.name == null) {
                throw new MissingRequiredPropertyException("GetCertificatePlainArgs", "name");
            }
            if ($.nginxDeploymentId == null) {
                throw new MissingRequiredPropertyException("GetCertificatePlainArgs", "nginxDeploymentId");
            }
            return $;
        }
    }

}
