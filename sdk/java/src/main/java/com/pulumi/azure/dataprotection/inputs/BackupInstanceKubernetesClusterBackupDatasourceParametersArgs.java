// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.dataprotection.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class BackupInstanceKubernetesClusterBackupDatasourceParametersArgs extends com.pulumi.resources.ResourceArgs {

    public static final BackupInstanceKubernetesClusterBackupDatasourceParametersArgs Empty = new BackupInstanceKubernetesClusterBackupDatasourceParametersArgs();

    /**
     * Whether to include cluster scope resources during backup. Default to `false`. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="clusterScopedResourcesEnabled")
    private @Nullable Output<Boolean> clusterScopedResourcesEnabled;

    /**
     * @return Whether to include cluster scope resources during backup. Default to `false`. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<Boolean>> clusterScopedResourcesEnabled() {
        return Optional.ofNullable(this.clusterScopedResourcesEnabled);
    }

    /**
     * Specifies the namespaces to be excluded during backup. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="excludedNamespaces")
    private @Nullable Output<List<String>> excludedNamespaces;

    /**
     * @return Specifies the namespaces to be excluded during backup. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<List<String>>> excludedNamespaces() {
        return Optional.ofNullable(this.excludedNamespaces);
    }

    /**
     * Specifies the resource types to be excluded during backup. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="excludedResourceTypes")
    private @Nullable Output<List<String>> excludedResourceTypes;

    /**
     * @return Specifies the resource types to be excluded during backup. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<List<String>>> excludedResourceTypes() {
        return Optional.ofNullable(this.excludedResourceTypes);
    }

    /**
     * Specifies the namespaces to be included during backup. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="includedNamespaces")
    private @Nullable Output<List<String>> includedNamespaces;

    /**
     * @return Specifies the namespaces to be included during backup. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<List<String>>> includedNamespaces() {
        return Optional.ofNullable(this.includedNamespaces);
    }

    /**
     * Specifies the resource types to be included during backup. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="includedResourceTypes")
    private @Nullable Output<List<String>> includedResourceTypes;

    /**
     * @return Specifies the resource types to be included during backup. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<List<String>>> includedResourceTypes() {
        return Optional.ofNullable(this.includedResourceTypes);
    }

    /**
     * Specifies the resources with such label selectors to be included during backup. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="labelSelectors")
    private @Nullable Output<List<String>> labelSelectors;

    /**
     * @return Specifies the resources with such label selectors to be included during backup. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<List<String>>> labelSelectors() {
        return Optional.ofNullable(this.labelSelectors);
    }

    /**
     * Whether to take volume snapshots during backup. Default to `false`. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="volumeSnapshotEnabled")
    private @Nullable Output<Boolean> volumeSnapshotEnabled;

    /**
     * @return Whether to take volume snapshots during backup. Default to `false`. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<Boolean>> volumeSnapshotEnabled() {
        return Optional.ofNullable(this.volumeSnapshotEnabled);
    }

    private BackupInstanceKubernetesClusterBackupDatasourceParametersArgs() {}

    private BackupInstanceKubernetesClusterBackupDatasourceParametersArgs(BackupInstanceKubernetesClusterBackupDatasourceParametersArgs $) {
        this.clusterScopedResourcesEnabled = $.clusterScopedResourcesEnabled;
        this.excludedNamespaces = $.excludedNamespaces;
        this.excludedResourceTypes = $.excludedResourceTypes;
        this.includedNamespaces = $.includedNamespaces;
        this.includedResourceTypes = $.includedResourceTypes;
        this.labelSelectors = $.labelSelectors;
        this.volumeSnapshotEnabled = $.volumeSnapshotEnabled;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BackupInstanceKubernetesClusterBackupDatasourceParametersArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BackupInstanceKubernetesClusterBackupDatasourceParametersArgs $;

        public Builder() {
            $ = new BackupInstanceKubernetesClusterBackupDatasourceParametersArgs();
        }

        public Builder(BackupInstanceKubernetesClusterBackupDatasourceParametersArgs defaults) {
            $ = new BackupInstanceKubernetesClusterBackupDatasourceParametersArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param clusterScopedResourcesEnabled Whether to include cluster scope resources during backup. Default to `false`. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder clusterScopedResourcesEnabled(@Nullable Output<Boolean> clusterScopedResourcesEnabled) {
            $.clusterScopedResourcesEnabled = clusterScopedResourcesEnabled;
            return this;
        }

        /**
         * @param clusterScopedResourcesEnabled Whether to include cluster scope resources during backup. Default to `false`. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder clusterScopedResourcesEnabled(Boolean clusterScopedResourcesEnabled) {
            return clusterScopedResourcesEnabled(Output.of(clusterScopedResourcesEnabled));
        }

        /**
         * @param excludedNamespaces Specifies the namespaces to be excluded during backup. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder excludedNamespaces(@Nullable Output<List<String>> excludedNamespaces) {
            $.excludedNamespaces = excludedNamespaces;
            return this;
        }

        /**
         * @param excludedNamespaces Specifies the namespaces to be excluded during backup. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder excludedNamespaces(List<String> excludedNamespaces) {
            return excludedNamespaces(Output.of(excludedNamespaces));
        }

        /**
         * @param excludedNamespaces Specifies the namespaces to be excluded during backup. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder excludedNamespaces(String... excludedNamespaces) {
            return excludedNamespaces(List.of(excludedNamespaces));
        }

        /**
         * @param excludedResourceTypes Specifies the resource types to be excluded during backup. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder excludedResourceTypes(@Nullable Output<List<String>> excludedResourceTypes) {
            $.excludedResourceTypes = excludedResourceTypes;
            return this;
        }

        /**
         * @param excludedResourceTypes Specifies the resource types to be excluded during backup. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder excludedResourceTypes(List<String> excludedResourceTypes) {
            return excludedResourceTypes(Output.of(excludedResourceTypes));
        }

        /**
         * @param excludedResourceTypes Specifies the resource types to be excluded during backup. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder excludedResourceTypes(String... excludedResourceTypes) {
            return excludedResourceTypes(List.of(excludedResourceTypes));
        }

        /**
         * @param includedNamespaces Specifies the namespaces to be included during backup. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder includedNamespaces(@Nullable Output<List<String>> includedNamespaces) {
            $.includedNamespaces = includedNamespaces;
            return this;
        }

        /**
         * @param includedNamespaces Specifies the namespaces to be included during backup. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder includedNamespaces(List<String> includedNamespaces) {
            return includedNamespaces(Output.of(includedNamespaces));
        }

        /**
         * @param includedNamespaces Specifies the namespaces to be included during backup. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder includedNamespaces(String... includedNamespaces) {
            return includedNamespaces(List.of(includedNamespaces));
        }

        /**
         * @param includedResourceTypes Specifies the resource types to be included during backup. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder includedResourceTypes(@Nullable Output<List<String>> includedResourceTypes) {
            $.includedResourceTypes = includedResourceTypes;
            return this;
        }

        /**
         * @param includedResourceTypes Specifies the resource types to be included during backup. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder includedResourceTypes(List<String> includedResourceTypes) {
            return includedResourceTypes(Output.of(includedResourceTypes));
        }

        /**
         * @param includedResourceTypes Specifies the resource types to be included during backup. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder includedResourceTypes(String... includedResourceTypes) {
            return includedResourceTypes(List.of(includedResourceTypes));
        }

        /**
         * @param labelSelectors Specifies the resources with such label selectors to be included during backup. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder labelSelectors(@Nullable Output<List<String>> labelSelectors) {
            $.labelSelectors = labelSelectors;
            return this;
        }

        /**
         * @param labelSelectors Specifies the resources with such label selectors to be included during backup. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder labelSelectors(List<String> labelSelectors) {
            return labelSelectors(Output.of(labelSelectors));
        }

        /**
         * @param labelSelectors Specifies the resources with such label selectors to be included during backup. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder labelSelectors(String... labelSelectors) {
            return labelSelectors(List.of(labelSelectors));
        }

        /**
         * @param volumeSnapshotEnabled Whether to take volume snapshots during backup. Default to `false`. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder volumeSnapshotEnabled(@Nullable Output<Boolean> volumeSnapshotEnabled) {
            $.volumeSnapshotEnabled = volumeSnapshotEnabled;
            return this;
        }

        /**
         * @param volumeSnapshotEnabled Whether to take volume snapshots during backup. Default to `false`. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder volumeSnapshotEnabled(Boolean volumeSnapshotEnabled) {
            return volumeSnapshotEnabled(Output.of(volumeSnapshotEnabled));
        }

        public BackupInstanceKubernetesClusterBackupDatasourceParametersArgs build() {
            return $;
        }
    }

}
