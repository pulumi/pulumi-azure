// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.maintenance.outputs;

import com.pulumi.azure.maintenance.outputs.AssignmentDynamicScopeFilterTag;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class AssignmentDynamicScopeFilter {
    /**
     * @return Specifies a list of locations to scope the query to.
     * 
     */
    private @Nullable List<String> locations;
    /**
     * @return Specifies a list of allowed operating systems.
     * 
     */
    private @Nullable List<String> osTypes;
    /**
     * @return Specifies a list of allowed resource groups.
     * 
     */
    private @Nullable List<String> resourceGroups;
    /**
     * @return Specifies a list of allowed resources.
     * 
     */
    private @Nullable List<String> resourceTypes;
    /**
     * @return Filter VMs by `Any` or `All` specified tags. Defaults to `Any`.
     * 
     */
    private @Nullable String tagFilter;
    /**
     * @return A mapping of tags for the VM
     * 
     */
    private @Nullable List<AssignmentDynamicScopeFilterTag> tags;

    private AssignmentDynamicScopeFilter() {}
    /**
     * @return Specifies a list of locations to scope the query to.
     * 
     */
    public List<String> locations() {
        return this.locations == null ? List.of() : this.locations;
    }
    /**
     * @return Specifies a list of allowed operating systems.
     * 
     */
    public List<String> osTypes() {
        return this.osTypes == null ? List.of() : this.osTypes;
    }
    /**
     * @return Specifies a list of allowed resource groups.
     * 
     */
    public List<String> resourceGroups() {
        return this.resourceGroups == null ? List.of() : this.resourceGroups;
    }
    /**
     * @return Specifies a list of allowed resources.
     * 
     */
    public List<String> resourceTypes() {
        return this.resourceTypes == null ? List.of() : this.resourceTypes;
    }
    /**
     * @return Filter VMs by `Any` or `All` specified tags. Defaults to `Any`.
     * 
     */
    public Optional<String> tagFilter() {
        return Optional.ofNullable(this.tagFilter);
    }
    /**
     * @return A mapping of tags for the VM
     * 
     */
    public List<AssignmentDynamicScopeFilterTag> tags() {
        return this.tags == null ? List.of() : this.tags;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AssignmentDynamicScopeFilter defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<String> locations;
        private @Nullable List<String> osTypes;
        private @Nullable List<String> resourceGroups;
        private @Nullable List<String> resourceTypes;
        private @Nullable String tagFilter;
        private @Nullable List<AssignmentDynamicScopeFilterTag> tags;
        public Builder() {}
        public Builder(AssignmentDynamicScopeFilter defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.locations = defaults.locations;
    	      this.osTypes = defaults.osTypes;
    	      this.resourceGroups = defaults.resourceGroups;
    	      this.resourceTypes = defaults.resourceTypes;
    	      this.tagFilter = defaults.tagFilter;
    	      this.tags = defaults.tags;
        }

        @CustomType.Setter
        public Builder locations(@Nullable List<String> locations) {

            this.locations = locations;
            return this;
        }
        public Builder locations(String... locations) {
            return locations(List.of(locations));
        }
        @CustomType.Setter
        public Builder osTypes(@Nullable List<String> osTypes) {

            this.osTypes = osTypes;
            return this;
        }
        public Builder osTypes(String... osTypes) {
            return osTypes(List.of(osTypes));
        }
        @CustomType.Setter
        public Builder resourceGroups(@Nullable List<String> resourceGroups) {

            this.resourceGroups = resourceGroups;
            return this;
        }
        public Builder resourceGroups(String... resourceGroups) {
            return resourceGroups(List.of(resourceGroups));
        }
        @CustomType.Setter
        public Builder resourceTypes(@Nullable List<String> resourceTypes) {

            this.resourceTypes = resourceTypes;
            return this;
        }
        public Builder resourceTypes(String... resourceTypes) {
            return resourceTypes(List.of(resourceTypes));
        }
        @CustomType.Setter
        public Builder tagFilter(@Nullable String tagFilter) {

            this.tagFilter = tagFilter;
            return this;
        }
        @CustomType.Setter
        public Builder tags(@Nullable List<AssignmentDynamicScopeFilterTag> tags) {

            this.tags = tags;
            return this;
        }
        public Builder tags(AssignmentDynamicScopeFilterTag... tags) {
            return tags(List.of(tags));
        }
        public AssignmentDynamicScopeFilter build() {
            final var _resultValue = new AssignmentDynamicScopeFilter();
            _resultValue.locations = locations;
            _resultValue.osTypes = osTypes;
            _resultValue.resourceGroups = resourceGroups;
            _resultValue.resourceTypes = resourceTypes;
            _resultValue.tagFilter = tagFilter;
            _resultValue.tags = tags;
            return _resultValue;
        }
    }
}
