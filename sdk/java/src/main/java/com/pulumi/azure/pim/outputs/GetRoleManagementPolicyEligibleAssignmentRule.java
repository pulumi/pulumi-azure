// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.pim.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetRoleManagementPolicyEligibleAssignmentRule {
    /**
     * @return (Boolean) Must an assignment have an expiry date.
     * 
     */
    private Boolean expirationRequired;
    /**
     * @return (String) The maximum length of time an assignment can be valid, as an ISO8601 duration.
     * 
     */
    private String expireAfter;

    private GetRoleManagementPolicyEligibleAssignmentRule() {}
    /**
     * @return (Boolean) Must an assignment have an expiry date.
     * 
     */
    public Boolean expirationRequired() {
        return this.expirationRequired;
    }
    /**
     * @return (String) The maximum length of time an assignment can be valid, as an ISO8601 duration.
     * 
     */
    public String expireAfter() {
        return this.expireAfter;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetRoleManagementPolicyEligibleAssignmentRule defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Boolean expirationRequired;
        private String expireAfter;
        public Builder() {}
        public Builder(GetRoleManagementPolicyEligibleAssignmentRule defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.expirationRequired = defaults.expirationRequired;
    	      this.expireAfter = defaults.expireAfter;
        }

        @CustomType.Setter
        public Builder expirationRequired(Boolean expirationRequired) {
            if (expirationRequired == null) {
              throw new MissingRequiredPropertyException("GetRoleManagementPolicyEligibleAssignmentRule", "expirationRequired");
            }
            this.expirationRequired = expirationRequired;
            return this;
        }
        @CustomType.Setter
        public Builder expireAfter(String expireAfter) {
            if (expireAfter == null) {
              throw new MissingRequiredPropertyException("GetRoleManagementPolicyEligibleAssignmentRule", "expireAfter");
            }
            this.expireAfter = expireAfter;
            return this;
        }
        public GetRoleManagementPolicyEligibleAssignmentRule build() {
            final var _resultValue = new GetRoleManagementPolicyEligibleAssignmentRule();
            _resultValue.expirationRequired = expirationRequired;
            _resultValue.expireAfter = expireAfter;
            return _resultValue;
        }
    }
}
