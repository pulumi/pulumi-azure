// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.avs.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class PrivateCloudCircuit {
    /**
     * @return The ID of the ExpressRoute Circuit.
     * 
     */
    private final @Nullable String expressRouteId;
    /**
     * @return The ID of the ExpressRoute Circuit private peering.
     * 
     */
    private final @Nullable String expressRoutePrivatePeeringId;
    /**
     * @return The CIDR of the primary subnet.
     * 
     */
    private final @Nullable String primarySubnetCidr;
    /**
     * @return The CIDR of the secondary subnet.
     * 
     */
    private final @Nullable String secondarySubnetCidr;

    @CustomType.Constructor
    private PrivateCloudCircuit(
        @CustomType.Parameter("expressRouteId") @Nullable String expressRouteId,
        @CustomType.Parameter("expressRoutePrivatePeeringId") @Nullable String expressRoutePrivatePeeringId,
        @CustomType.Parameter("primarySubnetCidr") @Nullable String primarySubnetCidr,
        @CustomType.Parameter("secondarySubnetCidr") @Nullable String secondarySubnetCidr) {
        this.expressRouteId = expressRouteId;
        this.expressRoutePrivatePeeringId = expressRoutePrivatePeeringId;
        this.primarySubnetCidr = primarySubnetCidr;
        this.secondarySubnetCidr = secondarySubnetCidr;
    }

    /**
     * @return The ID of the ExpressRoute Circuit.
     * 
     */
    public Optional<String> expressRouteId() {
        return Optional.ofNullable(this.expressRouteId);
    }
    /**
     * @return The ID of the ExpressRoute Circuit private peering.
     * 
     */
    public Optional<String> expressRoutePrivatePeeringId() {
        return Optional.ofNullable(this.expressRoutePrivatePeeringId);
    }
    /**
     * @return The CIDR of the primary subnet.
     * 
     */
    public Optional<String> primarySubnetCidr() {
        return Optional.ofNullable(this.primarySubnetCidr);
    }
    /**
     * @return The CIDR of the secondary subnet.
     * 
     */
    public Optional<String> secondarySubnetCidr() {
        return Optional.ofNullable(this.secondarySubnetCidr);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(PrivateCloudCircuit defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String expressRouteId;
        private @Nullable String expressRoutePrivatePeeringId;
        private @Nullable String primarySubnetCidr;
        private @Nullable String secondarySubnetCidr;

        public Builder() {
    	      // Empty
        }

        public Builder(PrivateCloudCircuit defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.expressRouteId = defaults.expressRouteId;
    	      this.expressRoutePrivatePeeringId = defaults.expressRoutePrivatePeeringId;
    	      this.primarySubnetCidr = defaults.primarySubnetCidr;
    	      this.secondarySubnetCidr = defaults.secondarySubnetCidr;
        }

        public Builder expressRouteId(@Nullable String expressRouteId) {
            this.expressRouteId = expressRouteId;
            return this;
        }
        public Builder expressRoutePrivatePeeringId(@Nullable String expressRoutePrivatePeeringId) {
            this.expressRoutePrivatePeeringId = expressRoutePrivatePeeringId;
            return this;
        }
        public Builder primarySubnetCidr(@Nullable String primarySubnetCidr) {
            this.primarySubnetCidr = primarySubnetCidr;
            return this;
        }
        public Builder secondarySubnetCidr(@Nullable String secondarySubnetCidr) {
            this.secondarySubnetCidr = secondarySubnetCidr;
            return this;
        }        public PrivateCloudCircuit build() {
            return new PrivateCloudCircuit(expressRouteId, expressRoutePrivatePeeringId, primarySubnetCidr, secondarySubnetCidr);
        }
    }
}
