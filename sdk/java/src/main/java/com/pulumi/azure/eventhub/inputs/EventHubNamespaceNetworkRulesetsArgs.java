// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.eventhub.inputs;

import com.pulumi.azure.eventhub.inputs.EventHubNamespaceNetworkRulesetsIpRuleArgs;
import com.pulumi.azure.eventhub.inputs.EventHubNamespaceNetworkRulesetsVirtualNetworkRuleArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class EventHubNamespaceNetworkRulesetsArgs extends com.pulumi.resources.ResourceArgs {

    public static final EventHubNamespaceNetworkRulesetsArgs Empty = new EventHubNamespaceNetworkRulesetsArgs();

    /**
     * The default action to take when a rule is not matched. Possible values are `Allow` and `Deny`.
     * 
     */
    @Import(name="defaultAction", required=true)
    private Output<String> defaultAction;

    /**
     * @return The default action to take when a rule is not matched. Possible values are `Allow` and `Deny`.
     * 
     */
    public Output<String> defaultAction() {
        return this.defaultAction;
    }

    /**
     * One or more `ip_rule` blocks as defined below.
     * 
     */
    @Import(name="ipRules")
    private @Nullable Output<List<EventHubNamespaceNetworkRulesetsIpRuleArgs>> ipRules;

    /**
     * @return One or more `ip_rule` blocks as defined below.
     * 
     */
    public Optional<Output<List<EventHubNamespaceNetworkRulesetsIpRuleArgs>>> ipRules() {
        return Optional.ofNullable(this.ipRules);
    }

    /**
     * Is public network access enabled for the EventHub Namespace? Defaults to `true`.
     * 
     * &gt; **Note:** The public network access setting at the network rule sets level should be the same as it&#39;s at the namespace level.
     * 
     */
    @Import(name="publicNetworkAccessEnabled")
    private @Nullable Output<Boolean> publicNetworkAccessEnabled;

    /**
     * @return Is public network access enabled for the EventHub Namespace? Defaults to `true`.
     * 
     * &gt; **Note:** The public network access setting at the network rule sets level should be the same as it&#39;s at the namespace level.
     * 
     */
    public Optional<Output<Boolean>> publicNetworkAccessEnabled() {
        return Optional.ofNullable(this.publicNetworkAccessEnabled);
    }

    /**
     * Whether Trusted Microsoft Services are allowed to bypass firewall.
     * 
     */
    @Import(name="trustedServiceAccessEnabled")
    private @Nullable Output<Boolean> trustedServiceAccessEnabled;

    /**
     * @return Whether Trusted Microsoft Services are allowed to bypass firewall.
     * 
     */
    public Optional<Output<Boolean>> trustedServiceAccessEnabled() {
        return Optional.ofNullable(this.trustedServiceAccessEnabled);
    }

    /**
     * One or more `virtual_network_rule` blocks as defined below.
     * 
     */
    @Import(name="virtualNetworkRules")
    private @Nullable Output<List<EventHubNamespaceNetworkRulesetsVirtualNetworkRuleArgs>> virtualNetworkRules;

    /**
     * @return One or more `virtual_network_rule` blocks as defined below.
     * 
     */
    public Optional<Output<List<EventHubNamespaceNetworkRulesetsVirtualNetworkRuleArgs>>> virtualNetworkRules() {
        return Optional.ofNullable(this.virtualNetworkRules);
    }

    private EventHubNamespaceNetworkRulesetsArgs() {}

    private EventHubNamespaceNetworkRulesetsArgs(EventHubNamespaceNetworkRulesetsArgs $) {
        this.defaultAction = $.defaultAction;
        this.ipRules = $.ipRules;
        this.publicNetworkAccessEnabled = $.publicNetworkAccessEnabled;
        this.trustedServiceAccessEnabled = $.trustedServiceAccessEnabled;
        this.virtualNetworkRules = $.virtualNetworkRules;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(EventHubNamespaceNetworkRulesetsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private EventHubNamespaceNetworkRulesetsArgs $;

        public Builder() {
            $ = new EventHubNamespaceNetworkRulesetsArgs();
        }

        public Builder(EventHubNamespaceNetworkRulesetsArgs defaults) {
            $ = new EventHubNamespaceNetworkRulesetsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param defaultAction The default action to take when a rule is not matched. Possible values are `Allow` and `Deny`.
         * 
         * @return builder
         * 
         */
        public Builder defaultAction(Output<String> defaultAction) {
            $.defaultAction = defaultAction;
            return this;
        }

        /**
         * @param defaultAction The default action to take when a rule is not matched. Possible values are `Allow` and `Deny`.
         * 
         * @return builder
         * 
         */
        public Builder defaultAction(String defaultAction) {
            return defaultAction(Output.of(defaultAction));
        }

        /**
         * @param ipRules One or more `ip_rule` blocks as defined below.
         * 
         * @return builder
         * 
         */
        public Builder ipRules(@Nullable Output<List<EventHubNamespaceNetworkRulesetsIpRuleArgs>> ipRules) {
            $.ipRules = ipRules;
            return this;
        }

        /**
         * @param ipRules One or more `ip_rule` blocks as defined below.
         * 
         * @return builder
         * 
         */
        public Builder ipRules(List<EventHubNamespaceNetworkRulesetsIpRuleArgs> ipRules) {
            return ipRules(Output.of(ipRules));
        }

        /**
         * @param ipRules One or more `ip_rule` blocks as defined below.
         * 
         * @return builder
         * 
         */
        public Builder ipRules(EventHubNamespaceNetworkRulesetsIpRuleArgs... ipRules) {
            return ipRules(List.of(ipRules));
        }

        /**
         * @param publicNetworkAccessEnabled Is public network access enabled for the EventHub Namespace? Defaults to `true`.
         * 
         * &gt; **Note:** The public network access setting at the network rule sets level should be the same as it&#39;s at the namespace level.
         * 
         * @return builder
         * 
         */
        public Builder publicNetworkAccessEnabled(@Nullable Output<Boolean> publicNetworkAccessEnabled) {
            $.publicNetworkAccessEnabled = publicNetworkAccessEnabled;
            return this;
        }

        /**
         * @param publicNetworkAccessEnabled Is public network access enabled for the EventHub Namespace? Defaults to `true`.
         * 
         * &gt; **Note:** The public network access setting at the network rule sets level should be the same as it&#39;s at the namespace level.
         * 
         * @return builder
         * 
         */
        public Builder publicNetworkAccessEnabled(Boolean publicNetworkAccessEnabled) {
            return publicNetworkAccessEnabled(Output.of(publicNetworkAccessEnabled));
        }

        /**
         * @param trustedServiceAccessEnabled Whether Trusted Microsoft Services are allowed to bypass firewall.
         * 
         * @return builder
         * 
         */
        public Builder trustedServiceAccessEnabled(@Nullable Output<Boolean> trustedServiceAccessEnabled) {
            $.trustedServiceAccessEnabled = trustedServiceAccessEnabled;
            return this;
        }

        /**
         * @param trustedServiceAccessEnabled Whether Trusted Microsoft Services are allowed to bypass firewall.
         * 
         * @return builder
         * 
         */
        public Builder trustedServiceAccessEnabled(Boolean trustedServiceAccessEnabled) {
            return trustedServiceAccessEnabled(Output.of(trustedServiceAccessEnabled));
        }

        /**
         * @param virtualNetworkRules One or more `virtual_network_rule` blocks as defined below.
         * 
         * @return builder
         * 
         */
        public Builder virtualNetworkRules(@Nullable Output<List<EventHubNamespaceNetworkRulesetsVirtualNetworkRuleArgs>> virtualNetworkRules) {
            $.virtualNetworkRules = virtualNetworkRules;
            return this;
        }

        /**
         * @param virtualNetworkRules One or more `virtual_network_rule` blocks as defined below.
         * 
         * @return builder
         * 
         */
        public Builder virtualNetworkRules(List<EventHubNamespaceNetworkRulesetsVirtualNetworkRuleArgs> virtualNetworkRules) {
            return virtualNetworkRules(Output.of(virtualNetworkRules));
        }

        /**
         * @param virtualNetworkRules One or more `virtual_network_rule` blocks as defined below.
         * 
         * @return builder
         * 
         */
        public Builder virtualNetworkRules(EventHubNamespaceNetworkRulesetsVirtualNetworkRuleArgs... virtualNetworkRules) {
            return virtualNetworkRules(List.of(virtualNetworkRules));
        }

        public EventHubNamespaceNetworkRulesetsArgs build() {
            if ($.defaultAction == null) {
                throw new MissingRequiredPropertyException("EventHubNamespaceNetworkRulesetsArgs", "defaultAction");
            }
            return $;
        }
    }

}
