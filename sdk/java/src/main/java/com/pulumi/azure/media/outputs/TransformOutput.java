// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.media.outputs;

import com.pulumi.azure.media.outputs.TransformOutputAudioAnalyzerPreset;
import com.pulumi.azure.media.outputs.TransformOutputBuiltinPreset;
import com.pulumi.azure.media.outputs.TransformOutputFaceDetectorPreset;
import com.pulumi.azure.media.outputs.TransformOutputVideoAnalyzerPreset;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class TransformOutput {
    /**
     * @return A `audio_analyzer_preset` block as defined below.
     * 
     */
    private final @Nullable TransformOutputAudioAnalyzerPreset audioAnalyzerPreset;
    /**
     * @return A `builtin_preset` block as defined below.
     * 
     */
    private final @Nullable TransformOutputBuiltinPreset builtinPreset;
    /**
     * @return A `face_detector_preset` block as defined below.
     * 
     */
    private final @Nullable TransformOutputFaceDetectorPreset faceDetectorPreset;
    /**
     * @return A Transform can define more than one outputs. This property defines what the service should do when one output fails - either continue to produce other outputs, or, stop the other outputs. The overall Job state will not reflect failures of outputs that are specified with `ContinueJob`. Possibles value are `StopProcessingJob` or `ContinueJob`.
     * 
     */
    private final @Nullable String onErrorAction;
    /**
     * @return Sets the relative priority of the TransformOutputs within a Transform. This sets the priority that the service uses for processing Transform Outputs. Possibles value are `High`, `Normal` or `Low`.
     * 
     */
    private final @Nullable String relativePriority;
    /**
     * @return A `video_analyzer_preset` block as defined below.
     * 
     */
    private final @Nullable TransformOutputVideoAnalyzerPreset videoAnalyzerPreset;

    @CustomType.Constructor
    private TransformOutput(
        @CustomType.Parameter("audioAnalyzerPreset") @Nullable TransformOutputAudioAnalyzerPreset audioAnalyzerPreset,
        @CustomType.Parameter("builtinPreset") @Nullable TransformOutputBuiltinPreset builtinPreset,
        @CustomType.Parameter("faceDetectorPreset") @Nullable TransformOutputFaceDetectorPreset faceDetectorPreset,
        @CustomType.Parameter("onErrorAction") @Nullable String onErrorAction,
        @CustomType.Parameter("relativePriority") @Nullable String relativePriority,
        @CustomType.Parameter("videoAnalyzerPreset") @Nullable TransformOutputVideoAnalyzerPreset videoAnalyzerPreset) {
        this.audioAnalyzerPreset = audioAnalyzerPreset;
        this.builtinPreset = builtinPreset;
        this.faceDetectorPreset = faceDetectorPreset;
        this.onErrorAction = onErrorAction;
        this.relativePriority = relativePriority;
        this.videoAnalyzerPreset = videoAnalyzerPreset;
    }

    /**
     * @return A `audio_analyzer_preset` block as defined below.
     * 
     */
    public Optional<TransformOutputAudioAnalyzerPreset> audioAnalyzerPreset() {
        return Optional.ofNullable(this.audioAnalyzerPreset);
    }
    /**
     * @return A `builtin_preset` block as defined below.
     * 
     */
    public Optional<TransformOutputBuiltinPreset> builtinPreset() {
        return Optional.ofNullable(this.builtinPreset);
    }
    /**
     * @return A `face_detector_preset` block as defined below.
     * 
     */
    public Optional<TransformOutputFaceDetectorPreset> faceDetectorPreset() {
        return Optional.ofNullable(this.faceDetectorPreset);
    }
    /**
     * @return A Transform can define more than one outputs. This property defines what the service should do when one output fails - either continue to produce other outputs, or, stop the other outputs. The overall Job state will not reflect failures of outputs that are specified with `ContinueJob`. Possibles value are `StopProcessingJob` or `ContinueJob`.
     * 
     */
    public Optional<String> onErrorAction() {
        return Optional.ofNullable(this.onErrorAction);
    }
    /**
     * @return Sets the relative priority of the TransformOutputs within a Transform. This sets the priority that the service uses for processing Transform Outputs. Possibles value are `High`, `Normal` or `Low`.
     * 
     */
    public Optional<String> relativePriority() {
        return Optional.ofNullable(this.relativePriority);
    }
    /**
     * @return A `video_analyzer_preset` block as defined below.
     * 
     */
    public Optional<TransformOutputVideoAnalyzerPreset> videoAnalyzerPreset() {
        return Optional.ofNullable(this.videoAnalyzerPreset);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(TransformOutput defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable TransformOutputAudioAnalyzerPreset audioAnalyzerPreset;
        private @Nullable TransformOutputBuiltinPreset builtinPreset;
        private @Nullable TransformOutputFaceDetectorPreset faceDetectorPreset;
        private @Nullable String onErrorAction;
        private @Nullable String relativePriority;
        private @Nullable TransformOutputVideoAnalyzerPreset videoAnalyzerPreset;

        public Builder() {
    	      // Empty
        }

        public Builder(TransformOutput defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.audioAnalyzerPreset = defaults.audioAnalyzerPreset;
    	      this.builtinPreset = defaults.builtinPreset;
    	      this.faceDetectorPreset = defaults.faceDetectorPreset;
    	      this.onErrorAction = defaults.onErrorAction;
    	      this.relativePriority = defaults.relativePriority;
    	      this.videoAnalyzerPreset = defaults.videoAnalyzerPreset;
        }

        public Builder audioAnalyzerPreset(@Nullable TransformOutputAudioAnalyzerPreset audioAnalyzerPreset) {
            this.audioAnalyzerPreset = audioAnalyzerPreset;
            return this;
        }
        public Builder builtinPreset(@Nullable TransformOutputBuiltinPreset builtinPreset) {
            this.builtinPreset = builtinPreset;
            return this;
        }
        public Builder faceDetectorPreset(@Nullable TransformOutputFaceDetectorPreset faceDetectorPreset) {
            this.faceDetectorPreset = faceDetectorPreset;
            return this;
        }
        public Builder onErrorAction(@Nullable String onErrorAction) {
            this.onErrorAction = onErrorAction;
            return this;
        }
        public Builder relativePriority(@Nullable String relativePriority) {
            this.relativePriority = relativePriority;
            return this;
        }
        public Builder videoAnalyzerPreset(@Nullable TransformOutputVideoAnalyzerPreset videoAnalyzerPreset) {
            this.videoAnalyzerPreset = videoAnalyzerPreset;
            return this;
        }        public TransformOutput build() {
            return new TransformOutput(audioAnalyzerPreset, builtinPreset, faceDetectorPreset, onErrorAction, relativePriority, videoAnalyzerPreset);
        }
    }
}
