// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.appconfiguration;

import com.pulumi.azure.Utilities;
import com.pulumi.azure.appconfiguration.ConfigurationStoreArgs;
import com.pulumi.azure.appconfiguration.inputs.ConfigurationStoreState;
import com.pulumi.azure.appconfiguration.outputs.ConfigurationStoreEncryption;
import com.pulumi.azure.appconfiguration.outputs.ConfigurationStoreIdentity;
import com.pulumi.azure.appconfiguration.outputs.ConfigurationStorePrimaryReadKey;
import com.pulumi.azure.appconfiguration.outputs.ConfigurationStorePrimaryWriteKey;
import com.pulumi.azure.appconfiguration.outputs.ConfigurationStoreReplica;
import com.pulumi.azure.appconfiguration.outputs.ConfigurationStoreSecondaryReadKey;
import com.pulumi.azure.appconfiguration.outputs.ConfigurationStoreSecondaryWriteKey;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.azure.core.ResourceGroup;
 * import com.pulumi.azure.core.ResourceGroupArgs;
 * import com.pulumi.azure.appconfiguration.ConfigurationStore;
 * import com.pulumi.azure.appconfiguration.ConfigurationStoreArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new ResourceGroup("example", ResourceGroupArgs.builder()        
 *             .name("example-resources")
 *             .location("West Europe")
 *             .build());
 * 
 *         var appconf = new ConfigurationStore("appconf", ConfigurationStoreArgs.builder()        
 *             .name("appConf1")
 *             .resourceGroupName(example.name())
 *             .location(example.location())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ### Encryption)
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.azure.core.ResourceGroup;
 * import com.pulumi.azure.core.ResourceGroupArgs;
 * import com.pulumi.azure.authorization.UserAssignedIdentity;
 * import com.pulumi.azure.authorization.UserAssignedIdentityArgs;
 * import com.pulumi.azure.core.CoreFunctions;
 * import com.pulumi.azure.keyvault.KeyVault;
 * import com.pulumi.azure.keyvault.KeyVaultArgs;
 * import com.pulumi.azure.keyvault.AccessPolicy;
 * import com.pulumi.azure.keyvault.AccessPolicyArgs;
 * import com.pulumi.azure.keyvault.Key;
 * import com.pulumi.azure.keyvault.KeyArgs;
 * import com.pulumi.azure.appconfiguration.ConfigurationStore;
 * import com.pulumi.azure.appconfiguration.ConfigurationStoreArgs;
 * import com.pulumi.azure.appconfiguration.inputs.ConfigurationStoreIdentityArgs;
 * import com.pulumi.azure.appconfiguration.inputs.ConfigurationStoreEncryptionArgs;
 * import com.pulumi.azure.appconfiguration.inputs.ConfigurationStoreReplicaArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new ResourceGroup("example", ResourceGroupArgs.builder()        
 *             .name("example-resources")
 *             .location("West Europe")
 *             .build());
 * 
 *         var exampleUserAssignedIdentity = new UserAssignedIdentity("exampleUserAssignedIdentity", UserAssignedIdentityArgs.builder()        
 *             .name("example-identity")
 *             .location(example.location())
 *             .resourceGroupName(example.name())
 *             .build());
 * 
 *         final var current = CoreFunctions.getClientConfig();
 * 
 *         var exampleKeyVault = new KeyVault("exampleKeyVault", KeyVaultArgs.builder()        
 *             .name("exampleKVt123")
 *             .location(example.location())
 *             .resourceGroupName(example.name())
 *             .tenantId(current.applyValue(getClientConfigResult -> getClientConfigResult.tenantId()))
 *             .skuName("standard")
 *             .softDeleteRetentionDays(7)
 *             .purgeProtectionEnabled(true)
 *             .build());
 * 
 *         var server = new AccessPolicy("server", AccessPolicyArgs.builder()        
 *             .keyVaultId(exampleKeyVault.id())
 *             .tenantId(current.applyValue(getClientConfigResult -> getClientConfigResult.tenantId()))
 *             .objectId(exampleUserAssignedIdentity.principalId())
 *             .keyPermissions(            
 *                 "Get",
 *                 "UnwrapKey",
 *                 "WrapKey")
 *             .secretPermissions("Get")
 *             .build());
 * 
 *         var client = new AccessPolicy("client", AccessPolicyArgs.builder()        
 *             .keyVaultId(exampleKeyVault.id())
 *             .tenantId(current.applyValue(getClientConfigResult -> getClientConfigResult.tenantId()))
 *             .objectId(current.applyValue(getClientConfigResult -> getClientConfigResult.objectId()))
 *             .keyPermissions(            
 *                 "Get",
 *                 "Create",
 *                 "Delete",
 *                 "List",
 *                 "Restore",
 *                 "Recover",
 *                 "UnwrapKey",
 *                 "WrapKey",
 *                 "Purge",
 *                 "Encrypt",
 *                 "Decrypt",
 *                 "Sign",
 *                 "Verify",
 *                 "GetRotationPolicy")
 *             .secretPermissions("Get")
 *             .build());
 * 
 *         var exampleKey = new Key("exampleKey", KeyArgs.builder()        
 *             .name("exampleKVkey")
 *             .keyVaultId(exampleKeyVault.id())
 *             .keyType("RSA")
 *             .keySize(2048)
 *             .keyOpts(            
 *                 "decrypt",
 *                 "encrypt",
 *                 "sign",
 *                 "unwrapKey",
 *                 "verify",
 *                 "wrapKey")
 *             .build());
 * 
 *         var exampleConfigurationStore = new ConfigurationStore("exampleConfigurationStore", ConfigurationStoreArgs.builder()        
 *             .name("appConf2")
 *             .resourceGroupName(example.name())
 *             .location(example.location())
 *             .sku("standard")
 *             .localAuthEnabled(true)
 *             .publicNetworkAccess("Enabled")
 *             .purgeProtectionEnabled(false)
 *             .softDeleteRetentionDays(1)
 *             .identity(ConfigurationStoreIdentityArgs.builder()
 *                 .type("UserAssigned")
 *                 .identityIds(exampleUserAssignedIdentity.id())
 *                 .build())
 *             .encryption(ConfigurationStoreEncryptionArgs.builder()
 *                 .keyVaultKeyIdentifier(exampleKey.id())
 *                 .identityClientId(exampleUserAssignedIdentity.clientId())
 *                 .build())
 *             .replicas(ConfigurationStoreReplicaArgs.builder()
 *                 .name("replica1")
 *                 .location("West US")
 *                 .build())
 *             .tags(Map.of("environment", "development"))
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * App Configurations can be imported using the `resource id`, e.g.
 * 
 * ```sh
 * $ pulumi import azure:appconfiguration/configurationStore:ConfigurationStore appconf /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resourceGroup1/providers/Microsoft.AppConfiguration/configurationStores/appConf1
 * ```
 * 
 */
@ResourceType(type="azure:appconfiguration/configurationStore:ConfigurationStore")
public class ConfigurationStore extends com.pulumi.resources.CustomResource {
    /**
     * An `encryption` block as defined below.
     * 
     */
    @Export(name="encryption", refs={ConfigurationStoreEncryption.class}, tree="[0]")
    private Output</* @Nullable */ ConfigurationStoreEncryption> encryption;

    /**
     * @return An `encryption` block as defined below.
     * 
     */
    public Output<Optional<ConfigurationStoreEncryption>> encryption() {
        return Codegen.optional(this.encryption);
    }
    /**
     * The URL of the App Configuration Replica.
     * 
     */
    @Export(name="endpoint", refs={String.class}, tree="[0]")
    private Output<String> endpoint;

    /**
     * @return The URL of the App Configuration Replica.
     * 
     */
    public Output<String> endpoint() {
        return this.endpoint;
    }
    /**
     * An `identity` block as defined below.
     * 
     * &gt; **NOTE:** Azure does not allow a downgrade from `standard` to `free`.
     * 
     */
    @Export(name="identity", refs={ConfigurationStoreIdentity.class}, tree="[0]")
    private Output</* @Nullable */ ConfigurationStoreIdentity> identity;

    /**
     * @return An `identity` block as defined below.
     * 
     * &gt; **NOTE:** Azure does not allow a downgrade from `standard` to `free`.
     * 
     */
    public Output<Optional<ConfigurationStoreIdentity>> identity() {
        return Codegen.optional(this.identity);
    }
    /**
     * Whether local authentication methods is enabled. Defaults to `true`.
     * 
     */
    @Export(name="localAuthEnabled", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> localAuthEnabled;

    /**
     * @return Whether local authentication methods is enabled. Defaults to `true`.
     * 
     */
    public Output<Optional<Boolean>> localAuthEnabled() {
        return Codegen.optional(this.localAuthEnabled);
    }
    /**
     * Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="location", refs={String.class}, tree="[0]")
    private Output<String> location;

    /**
     * @return Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> location() {
        return this.location;
    }
    /**
     * Specifies the name of the App Configuration. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return Specifies the name of the App Configuration. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * A `primary_read_key` block as defined below containing the primary read access key.
     * 
     */
    @Export(name="primaryReadKeys", refs={List.class,ConfigurationStorePrimaryReadKey.class}, tree="[0,1]")
    private Output<List<ConfigurationStorePrimaryReadKey>> primaryReadKeys;

    /**
     * @return A `primary_read_key` block as defined below containing the primary read access key.
     * 
     */
    public Output<List<ConfigurationStorePrimaryReadKey>> primaryReadKeys() {
        return this.primaryReadKeys;
    }
    /**
     * A `primary_write_key` block as defined below containing the primary write access key.
     * 
     */
    @Export(name="primaryWriteKeys", refs={List.class,ConfigurationStorePrimaryWriteKey.class}, tree="[0,1]")
    private Output<List<ConfigurationStorePrimaryWriteKey>> primaryWriteKeys;

    /**
     * @return A `primary_write_key` block as defined below containing the primary write access key.
     * 
     */
    public Output<List<ConfigurationStorePrimaryWriteKey>> primaryWriteKeys() {
        return this.primaryWriteKeys;
    }
    /**
     * The Public Network Access setting of the App Configuration. Possible values are `Enabled` and `Disabled`.
     * 
     * &gt; **NOTE:** If `public_network_access` is not specified, the App Configuration will be created as  `Automatic`. However, once a different value is defined, can not be set again as automatic.
     * 
     */
    @Export(name="publicNetworkAccess", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> publicNetworkAccess;

    /**
     * @return The Public Network Access setting of the App Configuration. Possible values are `Enabled` and `Disabled`.
     * 
     * &gt; **NOTE:** If `public_network_access` is not specified, the App Configuration will be created as  `Automatic`. However, once a different value is defined, can not be set again as automatic.
     * 
     */
    public Output<Optional<String>> publicNetworkAccess() {
        return Codegen.optional(this.publicNetworkAccess);
    }
    /**
     * Whether Purge Protection is enabled. This field only works for `standard` sku. Defaults to `false`.
     * 
     * !&gt; **Note:** Once Purge Protection has been enabled it&#39;s not possible to disable it. Deleting the App Configuration with Purge Protection enabled will schedule the App Configuration to be deleted (which will happen by Azure in the configured number of days).
     * 
     */
    @Export(name="purgeProtectionEnabled", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> purgeProtectionEnabled;

    /**
     * @return Whether Purge Protection is enabled. This field only works for `standard` sku. Defaults to `false`.
     * 
     * !&gt; **Note:** Once Purge Protection has been enabled it&#39;s not possible to disable it. Deleting the App Configuration with Purge Protection enabled will schedule the App Configuration to be deleted (which will happen by Azure in the configured number of days).
     * 
     */
    public Output<Optional<Boolean>> purgeProtectionEnabled() {
        return Codegen.optional(this.purgeProtectionEnabled);
    }
    /**
     * One or more `replica` blocks as defined below.
     * 
     */
    @Export(name="replicas", refs={List.class,ConfigurationStoreReplica.class}, tree="[0,1]")
    private Output</* @Nullable */ List<ConfigurationStoreReplica>> replicas;

    /**
     * @return One or more `replica` blocks as defined below.
     * 
     */
    public Output<Optional<List<ConfigurationStoreReplica>>> replicas() {
        return Codegen.optional(this.replicas);
    }
    /**
     * The name of the resource group in which to create the App Configuration. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="resourceGroupName", refs={String.class}, tree="[0]")
    private Output<String> resourceGroupName;

    /**
     * @return The name of the resource group in which to create the App Configuration. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }
    /**
     * A `secondary_read_key` block as defined below containing the secondary read access key.
     * 
     */
    @Export(name="secondaryReadKeys", refs={List.class,ConfigurationStoreSecondaryReadKey.class}, tree="[0,1]")
    private Output<List<ConfigurationStoreSecondaryReadKey>> secondaryReadKeys;

    /**
     * @return A `secondary_read_key` block as defined below containing the secondary read access key.
     * 
     */
    public Output<List<ConfigurationStoreSecondaryReadKey>> secondaryReadKeys() {
        return this.secondaryReadKeys;
    }
    /**
     * A `secondary_write_key` block as defined below containing the secondary write access key.
     * 
     */
    @Export(name="secondaryWriteKeys", refs={List.class,ConfigurationStoreSecondaryWriteKey.class}, tree="[0,1]")
    private Output<List<ConfigurationStoreSecondaryWriteKey>> secondaryWriteKeys;

    /**
     * @return A `secondary_write_key` block as defined below containing the secondary write access key.
     * 
     */
    public Output<List<ConfigurationStoreSecondaryWriteKey>> secondaryWriteKeys() {
        return this.secondaryWriteKeys;
    }
    /**
     * The SKU name of the App Configuration. Possible values are `free` and `standard`. Defaults to `free`.
     * 
     */
    @Export(name="sku", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> sku;

    /**
     * @return The SKU name of the App Configuration. Possible values are `free` and `standard`. Defaults to `free`.
     * 
     */
    public Output<Optional<String>> sku() {
        return Codegen.optional(this.sku);
    }
    /**
     * The number of days that items should be retained for once soft-deleted. This field only works for `standard` sku. This value can be between `1` and `7` days. Defaults to `7`. Changing this forces a new resource to be created.
     * 
     * &gt; **Note:** If Purge Protection is enabled, this field can only be configured one time and cannot be updated.
     * 
     */
    @Export(name="softDeleteRetentionDays", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> softDeleteRetentionDays;

    /**
     * @return The number of days that items should be retained for once soft-deleted. This field only works for `standard` sku. This value can be between `1` and `7` days. Defaults to `7`. Changing this forces a new resource to be created.
     * 
     * &gt; **Note:** If Purge Protection is enabled, this field can only be configured one time and cannot be updated.
     * 
     */
    public Output<Optional<Integer>> softDeleteRetentionDays() {
        return Codegen.optional(this.softDeleteRetentionDays);
    }
    /**
     * A mapping of tags to assign to the resource.
     * 
     */
    @Export(name="tags", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output</* @Nullable */ Map<String,String>> tags;

    /**
     * @return A mapping of tags to assign to the resource.
     * 
     */
    public Output<Optional<Map<String,String>>> tags() {
        return Codegen.optional(this.tags);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public ConfigurationStore(String name) {
        this(name, ConfigurationStoreArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public ConfigurationStore(String name, ConfigurationStoreArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public ConfigurationStore(String name, ConfigurationStoreArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:appconfiguration/configurationStore:ConfigurationStore", name, args == null ? ConfigurationStoreArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private ConfigurationStore(String name, Output<String> id, @Nullable ConfigurationStoreState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:appconfiguration/configurationStore:ConfigurationStore", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static ConfigurationStore get(String name, Output<String> id, @Nullable ConfigurationStoreState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new ConfigurationStore(name, id, state, options);
    }
}
