// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.appconfiguration;

import com.pulumi.azure.Utilities;
import com.pulumi.azure.appconfiguration.ConfigurationStoreArgs;
import com.pulumi.azure.appconfiguration.inputs.ConfigurationStoreState;
import com.pulumi.azure.appconfiguration.outputs.ConfigurationStoreEncryption;
import com.pulumi.azure.appconfiguration.outputs.ConfigurationStoreIdentity;
import com.pulumi.azure.appconfiguration.outputs.ConfigurationStorePrimaryReadKey;
import com.pulumi.azure.appconfiguration.outputs.ConfigurationStorePrimaryWriteKey;
import com.pulumi.azure.appconfiguration.outputs.ConfigurationStoreSecondaryReadKey;
import com.pulumi.azure.appconfiguration.outputs.ConfigurationStoreSecondaryWriteKey;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * ## Example Usage
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.azure.core.ResourceGroup;
 * import com.pulumi.azure.core.ResourceGroupArgs;
 * import com.pulumi.azure.appconfiguration.ConfigurationStore;
 * import com.pulumi.azure.appconfiguration.ConfigurationStoreArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new ResourceGroup(&#34;example&#34;, ResourceGroupArgs.builder()        
 *             .location(&#34;West Europe&#34;)
 *             .build());
 * 
 *         var appconf = new ConfigurationStore(&#34;appconf&#34;, ConfigurationStoreArgs.builder()        
 *             .resourceGroupName(example.name())
 *             .location(example.location())
 *             .build());
 * 
 *     }
 * }
 * ```
 * ### Encryption)
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.azure.core.ResourceGroup;
 * import com.pulumi.azure.core.ResourceGroupArgs;
 * import com.pulumi.azure.authorization.UserAssignedIdentity;
 * import com.pulumi.azure.authorization.UserAssignedIdentityArgs;
 * import com.pulumi.azure.core.CoreFunctions;
 * import com.pulumi.azure.keyvault.KeyVault;
 * import com.pulumi.azure.keyvault.KeyVaultArgs;
 * import com.pulumi.azure.keyvault.AccessPolicy;
 * import com.pulumi.azure.keyvault.AccessPolicyArgs;
 * import com.pulumi.azure.keyvault.Key;
 * import com.pulumi.azure.keyvault.KeyArgs;
 * import com.pulumi.azure.appconfiguration.ConfigurationStore;
 * import com.pulumi.azure.appconfiguration.ConfigurationStoreArgs;
 * import com.pulumi.azure.appconfiguration.inputs.ConfigurationStoreIdentityArgs;
 * import com.pulumi.azure.appconfiguration.inputs.ConfigurationStoreEncryptionArgs;
 * import com.pulumi.resources.CustomResourceOptions;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var exampleResourceGroup = new ResourceGroup(&#34;exampleResourceGroup&#34;, ResourceGroupArgs.builder()        
 *             .location(&#34;West Europe&#34;)
 *             .build());
 * 
 *         var exampleUserAssignedIdentity = new UserAssignedIdentity(&#34;exampleUserAssignedIdentity&#34;, UserAssignedIdentityArgs.builder()        
 *             .location(exampleResourceGroup.location())
 *             .resourceGroupName(exampleResourceGroup.name())
 *             .build());
 * 
 *         final var current = CoreFunctions.getClientConfig();
 * 
 *         var exampleKeyVault = new KeyVault(&#34;exampleKeyVault&#34;, KeyVaultArgs.builder()        
 *             .location(exampleResourceGroup.location())
 *             .resourceGroupName(exampleResourceGroup.name())
 *             .tenantId(current.applyValue(getClientConfigResult -&gt; getClientConfigResult.tenantId()))
 *             .skuName(&#34;standard&#34;)
 *             .softDeleteRetentionDays(7)
 *             .purgeProtectionEnabled(true)
 *             .build());
 * 
 *         var server = new AccessPolicy(&#34;server&#34;, AccessPolicyArgs.builder()        
 *             .keyVaultId(exampleKeyVault.id())
 *             .tenantId(current.applyValue(getClientConfigResult -&gt; getClientConfigResult.tenantId()))
 *             .objectId(exampleUserAssignedIdentity.principalId())
 *             .keyPermissions(            
 *                 &#34;Get&#34;,
 *                 &#34;UnwrapKey&#34;,
 *                 &#34;WrapKey&#34;)
 *             .secretPermissions(&#34;Get&#34;)
 *             .build());
 * 
 *         var client = new AccessPolicy(&#34;client&#34;, AccessPolicyArgs.builder()        
 *             .keyVaultId(exampleKeyVault.id())
 *             .tenantId(current.applyValue(getClientConfigResult -&gt; getClientConfigResult.tenantId()))
 *             .objectId(current.applyValue(getClientConfigResult -&gt; getClientConfigResult.objectId()))
 *             .keyPermissions(            
 *                 &#34;Get&#34;,
 *                 &#34;Create&#34;,
 *                 &#34;Delete&#34;,
 *                 &#34;List&#34;,
 *                 &#34;Restore&#34;,
 *                 &#34;Recover&#34;,
 *                 &#34;UnwrapKey&#34;,
 *                 &#34;WrapKey&#34;,
 *                 &#34;Purge&#34;,
 *                 &#34;Encrypt&#34;,
 *                 &#34;Decrypt&#34;,
 *                 &#34;Sign&#34;,
 *                 &#34;Verify&#34;)
 *             .secretPermissions(&#34;Get&#34;)
 *             .build());
 * 
 *         var exampleKey = new Key(&#34;exampleKey&#34;, KeyArgs.builder()        
 *             .keyVaultId(exampleKeyVault.id())
 *             .keyType(&#34;RSA&#34;)
 *             .keySize(2048)
 *             .keyOpts(            
 *                 &#34;decrypt&#34;,
 *                 &#34;encrypt&#34;,
 *                 &#34;sign&#34;,
 *                 &#34;unwrapKey&#34;,
 *                 &#34;verify&#34;,
 *                 &#34;wrapKey&#34;)
 *             .build(), CustomResourceOptions.builder()
 *                 .dependsOn(                
 *                     client,
 *                     server)
 *                 .build());
 * 
 *         var exampleConfigurationStore = new ConfigurationStore(&#34;exampleConfigurationStore&#34;, ConfigurationStoreArgs.builder()        
 *             .resourceGroupName(exampleResourceGroup.name())
 *             .location(exampleResourceGroup.location())
 *             .sku(&#34;standard&#34;)
 *             .localAuthEnabled(true)
 *             .publicNetworkAccess(&#34;Enabled&#34;)
 *             .purgeProtectionEnabled(false)
 *             .softDeleteRetentionDays(1)
 *             .identity(ConfigurationStoreIdentityArgs.builder()
 *                 .type(&#34;UserAssigned&#34;)
 *                 .identityIds(exampleUserAssignedIdentity.id())
 *                 .build())
 *             .encryption(ConfigurationStoreEncryptionArgs.builder()
 *                 .keyVaultKeyIdentifier(exampleKey.id())
 *                 .identityClientId(exampleUserAssignedIdentity.clientId())
 *                 .build())
 *             .tags(Map.of(&#34;environment&#34;, &#34;development&#34;))
 *             .build(), CustomResourceOptions.builder()
 *                 .dependsOn(                
 *                     client,
 *                     server)
 *                 .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * App Configurations can be imported using the `resource id`, e.g.
 * 
 * ```sh
 *  $ pulumi import azure:appconfiguration/configurationStore:ConfigurationStore appconf /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resourceGroup1/providers/Microsoft.AppConfiguration/configurationStores/appConf1
 * ```
 * 
 */
@ResourceType(type="azure:appconfiguration/configurationStore:ConfigurationStore")
public class ConfigurationStore extends com.pulumi.resources.CustomResource {
    /**
     * An `encryption` block as defined below.
     * 
     */
    @Export(name="encryption", type=ConfigurationStoreEncryption.class, parameters={})
    private Output</* @Nullable */ ConfigurationStoreEncryption> encryption;

    /**
     * @return An `encryption` block as defined below.
     * 
     */
    public Output<Optional<ConfigurationStoreEncryption>> encryption() {
        return Codegen.optional(this.encryption);
    }
    /**
     * The URL of the App Configuration.
     * 
     */
    @Export(name="endpoint", type=String.class, parameters={})
    private Output<String> endpoint;

    /**
     * @return The URL of the App Configuration.
     * 
     */
    public Output<String> endpoint() {
        return this.endpoint;
    }
    /**
     * An `identity` block as defined below.
     * 
     */
    @Export(name="identity", type=ConfigurationStoreIdentity.class, parameters={})
    private Output</* @Nullable */ ConfigurationStoreIdentity> identity;

    /**
     * @return An `identity` block as defined below.
     * 
     */
    public Output<Optional<ConfigurationStoreIdentity>> identity() {
        return Codegen.optional(this.identity);
    }
    /**
     * Whether local authentication methods is enabled. Defaults to `true`.
     * 
     */
    @Export(name="localAuthEnabled", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> localAuthEnabled;

    /**
     * @return Whether local authentication methods is enabled. Defaults to `true`.
     * 
     */
    public Output<Optional<Boolean>> localAuthEnabled() {
        return Codegen.optional(this.localAuthEnabled);
    }
    /**
     * Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="location", type=String.class, parameters={})
    private Output<String> location;

    /**
     * @return Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> location() {
        return this.location;
    }
    /**
     * Specifies the name of the App Configuration. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return Specifies the name of the App Configuration. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * A `primary_read_key` block as defined below containing the primary read access key.
     * 
     */
    @Export(name="primaryReadKeys", type=List.class, parameters={ConfigurationStorePrimaryReadKey.class})
    private Output<List<ConfigurationStorePrimaryReadKey>> primaryReadKeys;

    /**
     * @return A `primary_read_key` block as defined below containing the primary read access key.
     * 
     */
    public Output<List<ConfigurationStorePrimaryReadKey>> primaryReadKeys() {
        return this.primaryReadKeys;
    }
    /**
     * A `primary_write_key` block as defined below containing the primary write access key.
     * 
     */
    @Export(name="primaryWriteKeys", type=List.class, parameters={ConfigurationStorePrimaryWriteKey.class})
    private Output<List<ConfigurationStorePrimaryWriteKey>> primaryWriteKeys;

    /**
     * @return A `primary_write_key` block as defined below containing the primary write access key.
     * 
     */
    public Output<List<ConfigurationStorePrimaryWriteKey>> primaryWriteKeys() {
        return this.primaryWriteKeys;
    }
    /**
     * The Public Network Access setting of the App Configuration. Possible values are `Enabled` and `Disabled`.
     * 
     */
    @Export(name="publicNetworkAccess", type=String.class, parameters={})
    private Output</* @Nullable */ String> publicNetworkAccess;

    /**
     * @return The Public Network Access setting of the App Configuration. Possible values are `Enabled` and `Disabled`.
     * 
     */
    public Output<Optional<String>> publicNetworkAccess() {
        return Codegen.optional(this.publicNetworkAccess);
    }
    /**
     * Whether Purge Protection is enabled. This field only works for `standard` sku. Defaults to `false`.
     * 
     */
    @Export(name="purgeProtectionEnabled", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> purgeProtectionEnabled;

    /**
     * @return Whether Purge Protection is enabled. This field only works for `standard` sku. Defaults to `false`.
     * 
     */
    public Output<Optional<Boolean>> purgeProtectionEnabled() {
        return Codegen.optional(this.purgeProtectionEnabled);
    }
    /**
     * The name of the resource group in which to create the App Configuration. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="resourceGroupName", type=String.class, parameters={})
    private Output<String> resourceGroupName;

    /**
     * @return The name of the resource group in which to create the App Configuration. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }
    /**
     * A `secondary_read_key` block as defined below containing the secondary read access key.
     * 
     */
    @Export(name="secondaryReadKeys", type=List.class, parameters={ConfigurationStoreSecondaryReadKey.class})
    private Output<List<ConfigurationStoreSecondaryReadKey>> secondaryReadKeys;

    /**
     * @return A `secondary_read_key` block as defined below containing the secondary read access key.
     * 
     */
    public Output<List<ConfigurationStoreSecondaryReadKey>> secondaryReadKeys() {
        return this.secondaryReadKeys;
    }
    /**
     * A `secondary_write_key` block as defined below containing the secondary write access key.
     * 
     */
    @Export(name="secondaryWriteKeys", type=List.class, parameters={ConfigurationStoreSecondaryWriteKey.class})
    private Output<List<ConfigurationStoreSecondaryWriteKey>> secondaryWriteKeys;

    /**
     * @return A `secondary_write_key` block as defined below containing the secondary write access key.
     * 
     */
    public Output<List<ConfigurationStoreSecondaryWriteKey>> secondaryWriteKeys() {
        return this.secondaryWriteKeys;
    }
    /**
     * The SKU name of the App Configuration. Possible values are `free` and `standard`.
     * 
     */
    @Export(name="sku", type=String.class, parameters={})
    private Output</* @Nullable */ String> sku;

    /**
     * @return The SKU name of the App Configuration. Possible values are `free` and `standard`.
     * 
     */
    public Output<Optional<String>> sku() {
        return Codegen.optional(this.sku);
    }
    /**
     * The number of days that items should be retained for once soft-deleted. This field only works for `standard` sku. This value can be between `1` and `7` days. Defaults to `7`. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="softDeleteRetentionDays", type=Integer.class, parameters={})
    private Output</* @Nullable */ Integer> softDeleteRetentionDays;

    /**
     * @return The number of days that items should be retained for once soft-deleted. This field only works for `standard` sku. This value can be between `1` and `7` days. Defaults to `7`. Changing this forces a new resource to be created.
     * 
     */
    public Output<Optional<Integer>> softDeleteRetentionDays() {
        return Codegen.optional(this.softDeleteRetentionDays);
    }
    /**
     * A mapping of tags to assign to the resource.
     * 
     */
    @Export(name="tags", type=Map.class, parameters={String.class, String.class})
    private Output</* @Nullable */ Map<String,String>> tags;

    /**
     * @return A mapping of tags to assign to the resource.
     * 
     */
    public Output<Optional<Map<String,String>>> tags() {
        return Codegen.optional(this.tags);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public ConfigurationStore(String name) {
        this(name, ConfigurationStoreArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public ConfigurationStore(String name, ConfigurationStoreArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public ConfigurationStore(String name, ConfigurationStoreArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:appconfiguration/configurationStore:ConfigurationStore", name, args == null ? ConfigurationStoreArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private ConfigurationStore(String name, Output<String> id, @Nullable ConfigurationStoreState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:appconfiguration/configurationStore:ConfigurationStore", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static ConfigurationStore get(String name, Output<String> id, @Nullable ConfigurationStoreState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new ConfigurationStore(name, id, state, options);
    }
}
