// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.apimanagement.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class GetProductArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetProductArgs Empty = new GetProductArgs();

    /**
     * The Name of the API Management Service in which this Product exists.
     * 
     */
    @Import(name="apiManagementName", required=true)
    private Output<String> apiManagementName;

    /**
     * @return The Name of the API Management Service in which this Product exists.
     * 
     */
    public Output<String> apiManagementName() {
        return this.apiManagementName;
    }

    /**
     * The Identifier for the API Management Product.
     * 
     */
    @Import(name="productId", required=true)
    private Output<String> productId;

    /**
     * @return The Identifier for the API Management Product.
     * 
     */
    public Output<String> productId() {
        return this.productId;
    }

    /**
     * The Name of the Resource Group in which the API Management Service exists.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    /**
     * @return The Name of the Resource Group in which the API Management Service exists.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    private GetProductArgs() {}

    private GetProductArgs(GetProductArgs $) {
        this.apiManagementName = $.apiManagementName;
        this.productId = $.productId;
        this.resourceGroupName = $.resourceGroupName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetProductArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetProductArgs $;

        public Builder() {
            $ = new GetProductArgs();
        }

        public Builder(GetProductArgs defaults) {
            $ = new GetProductArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param apiManagementName The Name of the API Management Service in which this Product exists.
         * 
         * @return builder
         * 
         */
        public Builder apiManagementName(Output<String> apiManagementName) {
            $.apiManagementName = apiManagementName;
            return this;
        }

        /**
         * @param apiManagementName The Name of the API Management Service in which this Product exists.
         * 
         * @return builder
         * 
         */
        public Builder apiManagementName(String apiManagementName) {
            return apiManagementName(Output.of(apiManagementName));
        }

        /**
         * @param productId The Identifier for the API Management Product.
         * 
         * @return builder
         * 
         */
        public Builder productId(Output<String> productId) {
            $.productId = productId;
            return this;
        }

        /**
         * @param productId The Identifier for the API Management Product.
         * 
         * @return builder
         * 
         */
        public Builder productId(String productId) {
            return productId(Output.of(productId));
        }

        /**
         * @param resourceGroupName The Name of the Resource Group in which the API Management Service exists.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName The Name of the Resource Group in which the API Management Service exists.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        public GetProductArgs build() {
            if ($.apiManagementName == null) {
                throw new MissingRequiredPropertyException("GetProductArgs", "apiManagementName");
            }
            if ($.productId == null) {
                throw new MissingRequiredPropertyException("GetProductArgs", "productId");
            }
            if ($.resourceGroupName == null) {
                throw new MissingRequiredPropertyException("GetProductArgs", "resourceGroupName");
            }
            return $;
        }
    }

}
