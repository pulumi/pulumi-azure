// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.workloadssap.inputs;

import com.pulumi.azure.workloadssap.inputs.SingleNodeVirtualInstanceSingleServerConfigurationDiskVolumeConfigurationArgs;
import com.pulumi.azure.workloadssap.inputs.SingleNodeVirtualInstanceSingleServerConfigurationVirtualMachineConfigurationArgs;
import com.pulumi.azure.workloadssap.inputs.SingleNodeVirtualInstanceSingleServerConfigurationVirtualMachineResourceNamesArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SingleNodeVirtualInstanceSingleServerConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final SingleNodeVirtualInstanceSingleServerConfigurationArgs Empty = new SingleNodeVirtualInstanceSingleServerConfigurationArgs();

    @Import(name="appResourceGroupName", required=true)
    private Output<String> appResourceGroupName;

    public Output<String> appResourceGroupName() {
        return this.appResourceGroupName;
    }

    /**
     * The supported SAP database type. Possible values are `DB2` and `HANA`. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="databaseType")
    private @Nullable Output<String> databaseType;

    /**
     * @return The supported SAP database type. Possible values are `DB2` and `HANA`. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> databaseType() {
        return Optional.ofNullable(this.databaseType);
    }

    /**
     * One or more `disk_volume_configuration` blocks as defined below. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="diskVolumeConfigurations")
    private @Nullable Output<List<SingleNodeVirtualInstanceSingleServerConfigurationDiskVolumeConfigurationArgs>> diskVolumeConfigurations;

    /**
     * @return One or more `disk_volume_configuration` blocks as defined below. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<List<SingleNodeVirtualInstanceSingleServerConfigurationDiskVolumeConfigurationArgs>>> diskVolumeConfigurations() {
        return Optional.ofNullable(this.diskVolumeConfigurations);
    }

    /**
     * Specifies whether a secondary IP address should be added to the network interface on all VMs of the SAP system being deployed. Defaults to `false`. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="secondaryIpEnabled")
    private @Nullable Output<Boolean> secondaryIpEnabled;

    /**
     * @return Specifies whether a secondary IP address should be added to the network interface on all VMs of the SAP system being deployed. Defaults to `false`. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<Boolean>> secondaryIpEnabled() {
        return Optional.ofNullable(this.secondaryIpEnabled);
    }

    /**
     * The resource ID of the Subnet for the SAP Single Node Virtual Instance. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="subnetId", required=true)
    private Output<String> subnetId;

    /**
     * @return The resource ID of the Subnet for the SAP Single Node Virtual Instance. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> subnetId() {
        return this.subnetId;
    }

    /**
     * A `virtual_machine_configuration` block as defined below. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="virtualMachineConfiguration", required=true)
    private Output<SingleNodeVirtualInstanceSingleServerConfigurationVirtualMachineConfigurationArgs> virtualMachineConfiguration;

    /**
     * @return A `virtual_machine_configuration` block as defined below. Changing this forces a new resource to be created.
     * 
     */
    public Output<SingleNodeVirtualInstanceSingleServerConfigurationVirtualMachineConfigurationArgs> virtualMachineConfiguration() {
        return this.virtualMachineConfiguration;
    }

    /**
     * A `virtual_machine_resource_names` block as defined below. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="virtualMachineResourceNames")
    private @Nullable Output<SingleNodeVirtualInstanceSingleServerConfigurationVirtualMachineResourceNamesArgs> virtualMachineResourceNames;

    /**
     * @return A `virtual_machine_resource_names` block as defined below. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<SingleNodeVirtualInstanceSingleServerConfigurationVirtualMachineResourceNamesArgs>> virtualMachineResourceNames() {
        return Optional.ofNullable(this.virtualMachineResourceNames);
    }

    private SingleNodeVirtualInstanceSingleServerConfigurationArgs() {}

    private SingleNodeVirtualInstanceSingleServerConfigurationArgs(SingleNodeVirtualInstanceSingleServerConfigurationArgs $) {
        this.appResourceGroupName = $.appResourceGroupName;
        this.databaseType = $.databaseType;
        this.diskVolumeConfigurations = $.diskVolumeConfigurations;
        this.secondaryIpEnabled = $.secondaryIpEnabled;
        this.subnetId = $.subnetId;
        this.virtualMachineConfiguration = $.virtualMachineConfiguration;
        this.virtualMachineResourceNames = $.virtualMachineResourceNames;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SingleNodeVirtualInstanceSingleServerConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SingleNodeVirtualInstanceSingleServerConfigurationArgs $;

        public Builder() {
            $ = new SingleNodeVirtualInstanceSingleServerConfigurationArgs();
        }

        public Builder(SingleNodeVirtualInstanceSingleServerConfigurationArgs defaults) {
            $ = new SingleNodeVirtualInstanceSingleServerConfigurationArgs(Objects.requireNonNull(defaults));
        }

        public Builder appResourceGroupName(Output<String> appResourceGroupName) {
            $.appResourceGroupName = appResourceGroupName;
            return this;
        }

        public Builder appResourceGroupName(String appResourceGroupName) {
            return appResourceGroupName(Output.of(appResourceGroupName));
        }

        /**
         * @param databaseType The supported SAP database type. Possible values are `DB2` and `HANA`. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder databaseType(@Nullable Output<String> databaseType) {
            $.databaseType = databaseType;
            return this;
        }

        /**
         * @param databaseType The supported SAP database type. Possible values are `DB2` and `HANA`. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder databaseType(String databaseType) {
            return databaseType(Output.of(databaseType));
        }

        /**
         * @param diskVolumeConfigurations One or more `disk_volume_configuration` blocks as defined below. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder diskVolumeConfigurations(@Nullable Output<List<SingleNodeVirtualInstanceSingleServerConfigurationDiskVolumeConfigurationArgs>> diskVolumeConfigurations) {
            $.diskVolumeConfigurations = diskVolumeConfigurations;
            return this;
        }

        /**
         * @param diskVolumeConfigurations One or more `disk_volume_configuration` blocks as defined below. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder diskVolumeConfigurations(List<SingleNodeVirtualInstanceSingleServerConfigurationDiskVolumeConfigurationArgs> diskVolumeConfigurations) {
            return diskVolumeConfigurations(Output.of(diskVolumeConfigurations));
        }

        /**
         * @param diskVolumeConfigurations One or more `disk_volume_configuration` blocks as defined below. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder diskVolumeConfigurations(SingleNodeVirtualInstanceSingleServerConfigurationDiskVolumeConfigurationArgs... diskVolumeConfigurations) {
            return diskVolumeConfigurations(List.of(diskVolumeConfigurations));
        }

        /**
         * @param secondaryIpEnabled Specifies whether a secondary IP address should be added to the network interface on all VMs of the SAP system being deployed. Defaults to `false`. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder secondaryIpEnabled(@Nullable Output<Boolean> secondaryIpEnabled) {
            $.secondaryIpEnabled = secondaryIpEnabled;
            return this;
        }

        /**
         * @param secondaryIpEnabled Specifies whether a secondary IP address should be added to the network interface on all VMs of the SAP system being deployed. Defaults to `false`. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder secondaryIpEnabled(Boolean secondaryIpEnabled) {
            return secondaryIpEnabled(Output.of(secondaryIpEnabled));
        }

        /**
         * @param subnetId The resource ID of the Subnet for the SAP Single Node Virtual Instance. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder subnetId(Output<String> subnetId) {
            $.subnetId = subnetId;
            return this;
        }

        /**
         * @param subnetId The resource ID of the Subnet for the SAP Single Node Virtual Instance. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder subnetId(String subnetId) {
            return subnetId(Output.of(subnetId));
        }

        /**
         * @param virtualMachineConfiguration A `virtual_machine_configuration` block as defined below. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder virtualMachineConfiguration(Output<SingleNodeVirtualInstanceSingleServerConfigurationVirtualMachineConfigurationArgs> virtualMachineConfiguration) {
            $.virtualMachineConfiguration = virtualMachineConfiguration;
            return this;
        }

        /**
         * @param virtualMachineConfiguration A `virtual_machine_configuration` block as defined below. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder virtualMachineConfiguration(SingleNodeVirtualInstanceSingleServerConfigurationVirtualMachineConfigurationArgs virtualMachineConfiguration) {
            return virtualMachineConfiguration(Output.of(virtualMachineConfiguration));
        }

        /**
         * @param virtualMachineResourceNames A `virtual_machine_resource_names` block as defined below. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder virtualMachineResourceNames(@Nullable Output<SingleNodeVirtualInstanceSingleServerConfigurationVirtualMachineResourceNamesArgs> virtualMachineResourceNames) {
            $.virtualMachineResourceNames = virtualMachineResourceNames;
            return this;
        }

        /**
         * @param virtualMachineResourceNames A `virtual_machine_resource_names` block as defined below. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder virtualMachineResourceNames(SingleNodeVirtualInstanceSingleServerConfigurationVirtualMachineResourceNamesArgs virtualMachineResourceNames) {
            return virtualMachineResourceNames(Output.of(virtualMachineResourceNames));
        }

        public SingleNodeVirtualInstanceSingleServerConfigurationArgs build() {
            if ($.appResourceGroupName == null) {
                throw new MissingRequiredPropertyException("SingleNodeVirtualInstanceSingleServerConfigurationArgs", "appResourceGroupName");
            }
            if ($.subnetId == null) {
                throw new MissingRequiredPropertyException("SingleNodeVirtualInstanceSingleServerConfigurationArgs", "subnetId");
            }
            if ($.virtualMachineConfiguration == null) {
                throw new MissingRequiredPropertyException("SingleNodeVirtualInstanceSingleServerConfigurationArgs", "virtualMachineConfiguration");
            }
            return $;
        }
    }

}
