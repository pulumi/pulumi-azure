// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.loganalytics.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DataExportRuleState extends com.pulumi.resources.ResourceArgs {

    public static final DataExportRuleState Empty = new DataExportRuleState();

    /**
     * The destination resource ID. It should be a storage account, an event hub namespace or an event hub. If the destination is an event hub namespace, an event hub would be created for each table automatically.
     * 
     */
    @Import(name="destinationResourceId")
    private @Nullable Output<String> destinationResourceId;

    /**
     * @return The destination resource ID. It should be a storage account, an event hub namespace or an event hub. If the destination is an event hub namespace, an event hub would be created for each table automatically.
     * 
     */
    public Optional<Output<String>> destinationResourceId() {
        return Optional.ofNullable(this.destinationResourceId);
    }

    /**
     * Is this Log Analytics Data Export Rule enabled? Possible values include `true` or `false`. Defaults to `false`.
     * 
     */
    @Import(name="enabled")
    private @Nullable Output<Boolean> enabled;

    /**
     * @return Is this Log Analytics Data Export Rule enabled? Possible values include `true` or `false`. Defaults to `false`.
     * 
     */
    public Optional<Output<Boolean>> enabled() {
        return Optional.ofNullable(this.enabled);
    }

    /**
     * The ID of the created Data Export Rule.
     * 
     */
    @Import(name="exportRuleId")
    private @Nullable Output<String> exportRuleId;

    /**
     * @return The ID of the created Data Export Rule.
     * 
     */
    public Optional<Output<String>> exportRuleId() {
        return Optional.ofNullable(this.exportRuleId);
    }

    /**
     * The name of the Log Analytics Data Export Rule. Changing this forces a new Log Analytics Data Export Rule to be created.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the Log Analytics Data Export Rule. Changing this forces a new Log Analytics Data Export Rule to be created.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The name of the Resource Group where the Log Analytics Data Export should exist. Changing this forces a new Log Analytics Data Export Rule to be created.
     * 
     */
    @Import(name="resourceGroupName")
    private @Nullable Output<String> resourceGroupName;

    /**
     * @return The name of the Resource Group where the Log Analytics Data Export should exist. Changing this forces a new Log Analytics Data Export Rule to be created.
     * 
     */
    public Optional<Output<String>> resourceGroupName() {
        return Optional.ofNullable(this.resourceGroupName);
    }

    /**
     * A list of table names to export to the destination resource, for example: `[&#34;Heartbeat&#34;, &#34;SecurityEvent&#34;]`.
     * 
     */
    @Import(name="tableNames")
    private @Nullable Output<List<String>> tableNames;

    /**
     * @return A list of table names to export to the destination resource, for example: `[&#34;Heartbeat&#34;, &#34;SecurityEvent&#34;]`.
     * 
     */
    public Optional<Output<List<String>>> tableNames() {
        return Optional.ofNullable(this.tableNames);
    }

    /**
     * The resource ID of the workspace. Changing this forces a new Log Analytics Data Export Rule to be created.
     * 
     */
    @Import(name="workspaceResourceId")
    private @Nullable Output<String> workspaceResourceId;

    /**
     * @return The resource ID of the workspace. Changing this forces a new Log Analytics Data Export Rule to be created.
     * 
     */
    public Optional<Output<String>> workspaceResourceId() {
        return Optional.ofNullable(this.workspaceResourceId);
    }

    private DataExportRuleState() {}

    private DataExportRuleState(DataExportRuleState $) {
        this.destinationResourceId = $.destinationResourceId;
        this.enabled = $.enabled;
        this.exportRuleId = $.exportRuleId;
        this.name = $.name;
        this.resourceGroupName = $.resourceGroupName;
        this.tableNames = $.tableNames;
        this.workspaceResourceId = $.workspaceResourceId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DataExportRuleState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DataExportRuleState $;

        public Builder() {
            $ = new DataExportRuleState();
        }

        public Builder(DataExportRuleState defaults) {
            $ = new DataExportRuleState(Objects.requireNonNull(defaults));
        }

        /**
         * @param destinationResourceId The destination resource ID. It should be a storage account, an event hub namespace or an event hub. If the destination is an event hub namespace, an event hub would be created for each table automatically.
         * 
         * @return builder
         * 
         */
        public Builder destinationResourceId(@Nullable Output<String> destinationResourceId) {
            $.destinationResourceId = destinationResourceId;
            return this;
        }

        /**
         * @param destinationResourceId The destination resource ID. It should be a storage account, an event hub namespace or an event hub. If the destination is an event hub namespace, an event hub would be created for each table automatically.
         * 
         * @return builder
         * 
         */
        public Builder destinationResourceId(String destinationResourceId) {
            return destinationResourceId(Output.of(destinationResourceId));
        }

        /**
         * @param enabled Is this Log Analytics Data Export Rule enabled? Possible values include `true` or `false`. Defaults to `false`.
         * 
         * @return builder
         * 
         */
        public Builder enabled(@Nullable Output<Boolean> enabled) {
            $.enabled = enabled;
            return this;
        }

        /**
         * @param enabled Is this Log Analytics Data Export Rule enabled? Possible values include `true` or `false`. Defaults to `false`.
         * 
         * @return builder
         * 
         */
        public Builder enabled(Boolean enabled) {
            return enabled(Output.of(enabled));
        }

        /**
         * @param exportRuleId The ID of the created Data Export Rule.
         * 
         * @return builder
         * 
         */
        public Builder exportRuleId(@Nullable Output<String> exportRuleId) {
            $.exportRuleId = exportRuleId;
            return this;
        }

        /**
         * @param exportRuleId The ID of the created Data Export Rule.
         * 
         * @return builder
         * 
         */
        public Builder exportRuleId(String exportRuleId) {
            return exportRuleId(Output.of(exportRuleId));
        }

        /**
         * @param name The name of the Log Analytics Data Export Rule. Changing this forces a new Log Analytics Data Export Rule to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the Log Analytics Data Export Rule. Changing this forces a new Log Analytics Data Export Rule to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param resourceGroupName The name of the Resource Group where the Log Analytics Data Export should exist. Changing this forces a new Log Analytics Data Export Rule to be created.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(@Nullable Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName The name of the Resource Group where the Log Analytics Data Export should exist. Changing this forces a new Log Analytics Data Export Rule to be created.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        /**
         * @param tableNames A list of table names to export to the destination resource, for example: `[&#34;Heartbeat&#34;, &#34;SecurityEvent&#34;]`.
         * 
         * @return builder
         * 
         */
        public Builder tableNames(@Nullable Output<List<String>> tableNames) {
            $.tableNames = tableNames;
            return this;
        }

        /**
         * @param tableNames A list of table names to export to the destination resource, for example: `[&#34;Heartbeat&#34;, &#34;SecurityEvent&#34;]`.
         * 
         * @return builder
         * 
         */
        public Builder tableNames(List<String> tableNames) {
            return tableNames(Output.of(tableNames));
        }

        /**
         * @param tableNames A list of table names to export to the destination resource, for example: `[&#34;Heartbeat&#34;, &#34;SecurityEvent&#34;]`.
         * 
         * @return builder
         * 
         */
        public Builder tableNames(String... tableNames) {
            return tableNames(List.of(tableNames));
        }

        /**
         * @param workspaceResourceId The resource ID of the workspace. Changing this forces a new Log Analytics Data Export Rule to be created.
         * 
         * @return builder
         * 
         */
        public Builder workspaceResourceId(@Nullable Output<String> workspaceResourceId) {
            $.workspaceResourceId = workspaceResourceId;
            return this;
        }

        /**
         * @param workspaceResourceId The resource ID of the workspace. Changing this forces a new Log Analytics Data Export Rule to be created.
         * 
         * @return builder
         * 
         */
        public Builder workspaceResourceId(String workspaceResourceId) {
            return workspaceResourceId(Output.of(workspaceResourceId));
        }

        public DataExportRuleState build() {
            return $;
        }
    }

}
