// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.monitoring.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class ActionGroupSmsReceiver {
    /**
     * @return The country code of the SMS receiver.
     * 
     */
    private String countryCode;
    /**
     * @return The name of the SMS receiver. Names must be unique (case-insensitive) across all receivers within an action group.
     * 
     */
    private String name;
    /**
     * @return The phone number of the SMS receiver.
     * 
     */
    private String phoneNumber;

    private ActionGroupSmsReceiver() {}
    /**
     * @return The country code of the SMS receiver.
     * 
     */
    public String countryCode() {
        return this.countryCode;
    }
    /**
     * @return The name of the SMS receiver. Names must be unique (case-insensitive) across all receivers within an action group.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The phone number of the SMS receiver.
     * 
     */
    public String phoneNumber() {
        return this.phoneNumber;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ActionGroupSmsReceiver defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String countryCode;
        private String name;
        private String phoneNumber;
        public Builder() {}
        public Builder(ActionGroupSmsReceiver defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.countryCode = defaults.countryCode;
    	      this.name = defaults.name;
    	      this.phoneNumber = defaults.phoneNumber;
        }

        @CustomType.Setter
        public Builder countryCode(String countryCode) {
            this.countryCode = Objects.requireNonNull(countryCode);
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder phoneNumber(String phoneNumber) {
            this.phoneNumber = Objects.requireNonNull(phoneNumber);
            return this;
        }
        public ActionGroupSmsReceiver build() {
            final var o = new ActionGroupSmsReceiver();
            o.countryCode = countryCode;
            o.name = name;
            o.phoneNumber = phoneNumber;
            return o;
        }
    }
}
