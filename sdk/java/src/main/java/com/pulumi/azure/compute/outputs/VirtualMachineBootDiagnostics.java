// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.compute.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class VirtualMachineBootDiagnostics {
    /**
     * @return Should Boot Diagnostics be enabled for this Virtual Machine?
     * 
     */
    private Boolean enabled;
    /**
     * @return The Storage Account&#39;s Blob Endpoint which should hold the virtual machine&#39;s diagnostic files.
     * 
     * &gt; **NOTE:** This needs to be the root of a Storage Account and not a Storage Container.
     * 
     */
    private String storageUri;

    private VirtualMachineBootDiagnostics() {}
    /**
     * @return Should Boot Diagnostics be enabled for this Virtual Machine?
     * 
     */
    public Boolean enabled() {
        return this.enabled;
    }
    /**
     * @return The Storage Account&#39;s Blob Endpoint which should hold the virtual machine&#39;s diagnostic files.
     * 
     * &gt; **NOTE:** This needs to be the root of a Storage Account and not a Storage Container.
     * 
     */
    public String storageUri() {
        return this.storageUri;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(VirtualMachineBootDiagnostics defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Boolean enabled;
        private String storageUri;
        public Builder() {}
        public Builder(VirtualMachineBootDiagnostics defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.enabled = defaults.enabled;
    	      this.storageUri = defaults.storageUri;
        }

        @CustomType.Setter
        public Builder enabled(Boolean enabled) {
            if (enabled == null) {
              throw new MissingRequiredPropertyException("VirtualMachineBootDiagnostics", "enabled");
            }
            this.enabled = enabled;
            return this;
        }
        @CustomType.Setter
        public Builder storageUri(String storageUri) {
            if (storageUri == null) {
              throw new MissingRequiredPropertyException("VirtualMachineBootDiagnostics", "storageUri");
            }
            this.storageUri = storageUri;
            return this;
        }
        public VirtualMachineBootDiagnostics build() {
            final var _resultValue = new VirtualMachineBootDiagnostics();
            _resultValue.enabled = enabled;
            _resultValue.storageUri = storageUri;
            return _resultValue;
        }
    }
}
