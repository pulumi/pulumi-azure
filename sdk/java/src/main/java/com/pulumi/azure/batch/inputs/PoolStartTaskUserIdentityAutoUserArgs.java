// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.batch.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class PoolStartTaskUserIdentityAutoUserArgs extends com.pulumi.resources.ResourceArgs {

    public static final PoolStartTaskUserIdentityAutoUserArgs Empty = new PoolStartTaskUserIdentityAutoUserArgs();

    /**
     * The elevation level of the user identity under which the start task runs. Possible values are `Admin` or `NonAdmin`. Defaults to `NonAdmin`.
     * 
     */
    @Import(name="elevationLevel")
    private @Nullable Output<String> elevationLevel;

    /**
     * @return The elevation level of the user identity under which the start task runs. Possible values are `Admin` or `NonAdmin`. Defaults to `NonAdmin`.
     * 
     */
    public Optional<Output<String>> elevationLevel() {
        return Optional.ofNullable(this.elevationLevel);
    }

    /**
     * The scope of the user identity under which the start task runs. Possible values are `Task` or `Pool`. Defaults to `Task`.
     * 
     */
    @Import(name="scope")
    private @Nullable Output<String> scope;

    /**
     * @return The scope of the user identity under which the start task runs. Possible values are `Task` or `Pool`. Defaults to `Task`.
     * 
     */
    public Optional<Output<String>> scope() {
        return Optional.ofNullable(this.scope);
    }

    private PoolStartTaskUserIdentityAutoUserArgs() {}

    private PoolStartTaskUserIdentityAutoUserArgs(PoolStartTaskUserIdentityAutoUserArgs $) {
        this.elevationLevel = $.elevationLevel;
        this.scope = $.scope;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PoolStartTaskUserIdentityAutoUserArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PoolStartTaskUserIdentityAutoUserArgs $;

        public Builder() {
            $ = new PoolStartTaskUserIdentityAutoUserArgs();
        }

        public Builder(PoolStartTaskUserIdentityAutoUserArgs defaults) {
            $ = new PoolStartTaskUserIdentityAutoUserArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param elevationLevel The elevation level of the user identity under which the start task runs. Possible values are `Admin` or `NonAdmin`. Defaults to `NonAdmin`.
         * 
         * @return builder
         * 
         */
        public Builder elevationLevel(@Nullable Output<String> elevationLevel) {
            $.elevationLevel = elevationLevel;
            return this;
        }

        /**
         * @param elevationLevel The elevation level of the user identity under which the start task runs. Possible values are `Admin` or `NonAdmin`. Defaults to `NonAdmin`.
         * 
         * @return builder
         * 
         */
        public Builder elevationLevel(String elevationLevel) {
            return elevationLevel(Output.of(elevationLevel));
        }

        /**
         * @param scope The scope of the user identity under which the start task runs. Possible values are `Task` or `Pool`. Defaults to `Task`.
         * 
         * @return builder
         * 
         */
        public Builder scope(@Nullable Output<String> scope) {
            $.scope = scope;
            return this;
        }

        /**
         * @param scope The scope of the user identity under which the start task runs. Possible values are `Task` or `Pool`. Defaults to `Task`.
         * 
         * @return builder
         * 
         */
        public Builder scope(String scope) {
            return scope(Output.of(scope));
        }

        public PoolStartTaskUserIdentityAutoUserArgs build() {
            return $;
        }
    }

}
