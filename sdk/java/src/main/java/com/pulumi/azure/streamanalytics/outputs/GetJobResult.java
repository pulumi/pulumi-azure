// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.streamanalytics.outputs;

import com.pulumi.azure.streamanalytics.outputs.GetJobIdentity;
import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetJobResult {
    /**
     * @return The compatibility level for this job.
     * 
     */
    private final String compatibilityLevel;
    /**
     * @return The Data Locale of the Job.
     * 
     */
    private final String dataLocale;
    /**
     * @return The maximum tolerable delay in seconds where events arriving late could be included.
     * 
     */
    private final Integer eventsLateArrivalMaxDelayInSeconds;
    /**
     * @return The maximum tolerable delay in seconds where out-of-order events can be adjusted to be back in order.
     * 
     */
    private final Integer eventsOutOfOrderMaxDelayInSeconds;
    /**
     * @return The policy which should be applied to events which arrive out of order in the input event stream.
     * 
     */
    private final String eventsOutOfOrderPolicy;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private final String id;
    /**
     * @return An `identity` block as defined below.
     * 
     */
    private final List<GetJobIdentity> identities;
    /**
     * @return The Job ID assigned by the Stream Analytics Job.
     * 
     */
    private final String jobId;
    /**
     * @return The time at which the Stream Analytics job last produced an output.
     * 
     */
    private final String lastOutputTime;
    /**
     * @return The Azure location where the Stream Analytics Job exists.
     * 
     */
    private final String location;
    private final String name;
    /**
     * @return The policy which should be applied to events which arrive at the output and cannot be written to the external storage due to being malformed (such as missing column values, column values of wrong type or size).
     * 
     */
    private final String outputErrorPolicy;
    private final String resourceGroupName;
    /**
     * @return The starting mode set for this Stream Analytics Job.
     * 
     */
    private final String startMode;
    /**
     * @return The time at which this Stream Analytics Job was scheduled to start.
     * 
     */
    private final String startTime;
    /**
     * @return The number of streaming units that this Stream Analytics Job uses.
     * 
     */
    private final Integer streamingUnits;
    /**
     * @return The query that will be run in this Stream Analytics Job, [written in Stream Analytics Query Language (SAQL)](https://msdn.microsoft.com/library/azure/dn834998).
     * 
     */
    private final String transformationQuery;

    @CustomType.Constructor
    private GetJobResult(
        @CustomType.Parameter("compatibilityLevel") String compatibilityLevel,
        @CustomType.Parameter("dataLocale") String dataLocale,
        @CustomType.Parameter("eventsLateArrivalMaxDelayInSeconds") Integer eventsLateArrivalMaxDelayInSeconds,
        @CustomType.Parameter("eventsOutOfOrderMaxDelayInSeconds") Integer eventsOutOfOrderMaxDelayInSeconds,
        @CustomType.Parameter("eventsOutOfOrderPolicy") String eventsOutOfOrderPolicy,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("identities") List<GetJobIdentity> identities,
        @CustomType.Parameter("jobId") String jobId,
        @CustomType.Parameter("lastOutputTime") String lastOutputTime,
        @CustomType.Parameter("location") String location,
        @CustomType.Parameter("name") String name,
        @CustomType.Parameter("outputErrorPolicy") String outputErrorPolicy,
        @CustomType.Parameter("resourceGroupName") String resourceGroupName,
        @CustomType.Parameter("startMode") String startMode,
        @CustomType.Parameter("startTime") String startTime,
        @CustomType.Parameter("streamingUnits") Integer streamingUnits,
        @CustomType.Parameter("transformationQuery") String transformationQuery) {
        this.compatibilityLevel = compatibilityLevel;
        this.dataLocale = dataLocale;
        this.eventsLateArrivalMaxDelayInSeconds = eventsLateArrivalMaxDelayInSeconds;
        this.eventsOutOfOrderMaxDelayInSeconds = eventsOutOfOrderMaxDelayInSeconds;
        this.eventsOutOfOrderPolicy = eventsOutOfOrderPolicy;
        this.id = id;
        this.identities = identities;
        this.jobId = jobId;
        this.lastOutputTime = lastOutputTime;
        this.location = location;
        this.name = name;
        this.outputErrorPolicy = outputErrorPolicy;
        this.resourceGroupName = resourceGroupName;
        this.startMode = startMode;
        this.startTime = startTime;
        this.streamingUnits = streamingUnits;
        this.transformationQuery = transformationQuery;
    }

    /**
     * @return The compatibility level for this job.
     * 
     */
    public String compatibilityLevel() {
        return this.compatibilityLevel;
    }
    /**
     * @return The Data Locale of the Job.
     * 
     */
    public String dataLocale() {
        return this.dataLocale;
    }
    /**
     * @return The maximum tolerable delay in seconds where events arriving late could be included.
     * 
     */
    public Integer eventsLateArrivalMaxDelayInSeconds() {
        return this.eventsLateArrivalMaxDelayInSeconds;
    }
    /**
     * @return The maximum tolerable delay in seconds where out-of-order events can be adjusted to be back in order.
     * 
     */
    public Integer eventsOutOfOrderMaxDelayInSeconds() {
        return this.eventsOutOfOrderMaxDelayInSeconds;
    }
    /**
     * @return The policy which should be applied to events which arrive out of order in the input event stream.
     * 
     */
    public String eventsOutOfOrderPolicy() {
        return this.eventsOutOfOrderPolicy;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return An `identity` block as defined below.
     * 
     */
    public List<GetJobIdentity> identities() {
        return this.identities;
    }
    /**
     * @return The Job ID assigned by the Stream Analytics Job.
     * 
     */
    public String jobId() {
        return this.jobId;
    }
    /**
     * @return The time at which the Stream Analytics job last produced an output.
     * 
     */
    public String lastOutputTime() {
        return this.lastOutputTime;
    }
    /**
     * @return The Azure location where the Stream Analytics Job exists.
     * 
     */
    public String location() {
        return this.location;
    }
    public String name() {
        return this.name;
    }
    /**
     * @return The policy which should be applied to events which arrive at the output and cannot be written to the external storage due to being malformed (such as missing column values, column values of wrong type or size).
     * 
     */
    public String outputErrorPolicy() {
        return this.outputErrorPolicy;
    }
    public String resourceGroupName() {
        return this.resourceGroupName;
    }
    /**
     * @return The starting mode set for this Stream Analytics Job.
     * 
     */
    public String startMode() {
        return this.startMode;
    }
    /**
     * @return The time at which this Stream Analytics Job was scheduled to start.
     * 
     */
    public String startTime() {
        return this.startTime;
    }
    /**
     * @return The number of streaming units that this Stream Analytics Job uses.
     * 
     */
    public Integer streamingUnits() {
        return this.streamingUnits;
    }
    /**
     * @return The query that will be run in this Stream Analytics Job, [written in Stream Analytics Query Language (SAQL)](https://msdn.microsoft.com/library/azure/dn834998).
     * 
     */
    public String transformationQuery() {
        return this.transformationQuery;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetJobResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String compatibilityLevel;
        private String dataLocale;
        private Integer eventsLateArrivalMaxDelayInSeconds;
        private Integer eventsOutOfOrderMaxDelayInSeconds;
        private String eventsOutOfOrderPolicy;
        private String id;
        private List<GetJobIdentity> identities;
        private String jobId;
        private String lastOutputTime;
        private String location;
        private String name;
        private String outputErrorPolicy;
        private String resourceGroupName;
        private String startMode;
        private String startTime;
        private Integer streamingUnits;
        private String transformationQuery;

        public Builder() {
    	      // Empty
        }

        public Builder(GetJobResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compatibilityLevel = defaults.compatibilityLevel;
    	      this.dataLocale = defaults.dataLocale;
    	      this.eventsLateArrivalMaxDelayInSeconds = defaults.eventsLateArrivalMaxDelayInSeconds;
    	      this.eventsOutOfOrderMaxDelayInSeconds = defaults.eventsOutOfOrderMaxDelayInSeconds;
    	      this.eventsOutOfOrderPolicy = defaults.eventsOutOfOrderPolicy;
    	      this.id = defaults.id;
    	      this.identities = defaults.identities;
    	      this.jobId = defaults.jobId;
    	      this.lastOutputTime = defaults.lastOutputTime;
    	      this.location = defaults.location;
    	      this.name = defaults.name;
    	      this.outputErrorPolicy = defaults.outputErrorPolicy;
    	      this.resourceGroupName = defaults.resourceGroupName;
    	      this.startMode = defaults.startMode;
    	      this.startTime = defaults.startTime;
    	      this.streamingUnits = defaults.streamingUnits;
    	      this.transformationQuery = defaults.transformationQuery;
        }

        public Builder compatibilityLevel(String compatibilityLevel) {
            this.compatibilityLevel = Objects.requireNonNull(compatibilityLevel);
            return this;
        }
        public Builder dataLocale(String dataLocale) {
            this.dataLocale = Objects.requireNonNull(dataLocale);
            return this;
        }
        public Builder eventsLateArrivalMaxDelayInSeconds(Integer eventsLateArrivalMaxDelayInSeconds) {
            this.eventsLateArrivalMaxDelayInSeconds = Objects.requireNonNull(eventsLateArrivalMaxDelayInSeconds);
            return this;
        }
        public Builder eventsOutOfOrderMaxDelayInSeconds(Integer eventsOutOfOrderMaxDelayInSeconds) {
            this.eventsOutOfOrderMaxDelayInSeconds = Objects.requireNonNull(eventsOutOfOrderMaxDelayInSeconds);
            return this;
        }
        public Builder eventsOutOfOrderPolicy(String eventsOutOfOrderPolicy) {
            this.eventsOutOfOrderPolicy = Objects.requireNonNull(eventsOutOfOrderPolicy);
            return this;
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder identities(List<GetJobIdentity> identities) {
            this.identities = Objects.requireNonNull(identities);
            return this;
        }
        public Builder identities(GetJobIdentity... identities) {
            return identities(List.of(identities));
        }
        public Builder jobId(String jobId) {
            this.jobId = Objects.requireNonNull(jobId);
            return this;
        }
        public Builder lastOutputTime(String lastOutputTime) {
            this.lastOutputTime = Objects.requireNonNull(lastOutputTime);
            return this;
        }
        public Builder location(String location) {
            this.location = Objects.requireNonNull(location);
            return this;
        }
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        public Builder outputErrorPolicy(String outputErrorPolicy) {
            this.outputErrorPolicy = Objects.requireNonNull(outputErrorPolicy);
            return this;
        }
        public Builder resourceGroupName(String resourceGroupName) {
            this.resourceGroupName = Objects.requireNonNull(resourceGroupName);
            return this;
        }
        public Builder startMode(String startMode) {
            this.startMode = Objects.requireNonNull(startMode);
            return this;
        }
        public Builder startTime(String startTime) {
            this.startTime = Objects.requireNonNull(startTime);
            return this;
        }
        public Builder streamingUnits(Integer streamingUnits) {
            this.streamingUnits = Objects.requireNonNull(streamingUnits);
            return this;
        }
        public Builder transformationQuery(String transformationQuery) {
            this.transformationQuery = Objects.requireNonNull(transformationQuery);
            return this;
        }        public GetJobResult build() {
            return new GetJobResult(compatibilityLevel, dataLocale, eventsLateArrivalMaxDelayInSeconds, eventsOutOfOrderMaxDelayInSeconds, eventsOutOfOrderPolicy, id, identities, jobId, lastOutputTime, location, name, outputErrorPolicy, resourceGroupName, startMode, startTime, streamingUnits, transformationQuery);
        }
    }
}
