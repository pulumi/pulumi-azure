// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.newrelic.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class MonitorUser {
    /**
     * @return Specifies the user Email. Changing this forces a new Azure Native New Relic Monitor to be created.
     * 
     */
    private String email;
    /**
     * @return Specifies the first name. Changing this forces a new Azure Native New Relic Monitor to be created.
     * 
     */
    private String firstName;
    /**
     * @return Specifies the last name. Changing this forces a new Azure Native New Relic Monitor to be created.
     * 
     */
    private String lastName;
    /**
     * @return Specifies the contact phone number. Changing this forces a new Azure Native New Relic Monitor to be created.
     * 
     */
    private String phoneNumber;

    private MonitorUser() {}
    /**
     * @return Specifies the user Email. Changing this forces a new Azure Native New Relic Monitor to be created.
     * 
     */
    public String email() {
        return this.email;
    }
    /**
     * @return Specifies the first name. Changing this forces a new Azure Native New Relic Monitor to be created.
     * 
     */
    public String firstName() {
        return this.firstName;
    }
    /**
     * @return Specifies the last name. Changing this forces a new Azure Native New Relic Monitor to be created.
     * 
     */
    public String lastName() {
        return this.lastName;
    }
    /**
     * @return Specifies the contact phone number. Changing this forces a new Azure Native New Relic Monitor to be created.
     * 
     */
    public String phoneNumber() {
        return this.phoneNumber;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(MonitorUser defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String email;
        private String firstName;
        private String lastName;
        private String phoneNumber;
        public Builder() {}
        public Builder(MonitorUser defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.email = defaults.email;
    	      this.firstName = defaults.firstName;
    	      this.lastName = defaults.lastName;
    	      this.phoneNumber = defaults.phoneNumber;
        }

        @CustomType.Setter
        public Builder email(String email) {
            if (email == null) {
              throw new MissingRequiredPropertyException("MonitorUser", "email");
            }
            this.email = email;
            return this;
        }
        @CustomType.Setter
        public Builder firstName(String firstName) {
            if (firstName == null) {
              throw new MissingRequiredPropertyException("MonitorUser", "firstName");
            }
            this.firstName = firstName;
            return this;
        }
        @CustomType.Setter
        public Builder lastName(String lastName) {
            if (lastName == null) {
              throw new MissingRequiredPropertyException("MonitorUser", "lastName");
            }
            this.lastName = lastName;
            return this;
        }
        @CustomType.Setter
        public Builder phoneNumber(String phoneNumber) {
            if (phoneNumber == null) {
              throw new MissingRequiredPropertyException("MonitorUser", "phoneNumber");
            }
            this.phoneNumber = phoneNumber;
            return this;
        }
        public MonitorUser build() {
            final var _resultValue = new MonitorUser();
            _resultValue.email = email;
            _resultValue.firstName = firstName;
            _resultValue.lastName = lastName;
            _resultValue.phoneNumber = phoneNumber;
            return _resultValue;
        }
    }
}
