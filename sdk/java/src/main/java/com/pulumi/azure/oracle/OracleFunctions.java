// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.oracle;

import com.pulumi.azure.Utilities;
import com.pulumi.azure.oracle.inputs.GetCloudVmClusterArgs;
import com.pulumi.azure.oracle.inputs.GetCloudVmClusterPlainArgs;
import com.pulumi.azure.oracle.inputs.GetDbServersArgs;
import com.pulumi.azure.oracle.inputs.GetDbServersPlainArgs;
import com.pulumi.azure.oracle.inputs.GetExadataInfrastructureArgs;
import com.pulumi.azure.oracle.inputs.GetExadataInfrastructurePlainArgs;
import com.pulumi.azure.oracle.outputs.GetCloudVmClusterResult;
import com.pulumi.azure.oracle.outputs.GetDbServersResult;
import com.pulumi.azure.oracle.outputs.GetExadataInfrastructureResult;
import com.pulumi.core.Output;
import com.pulumi.core.TypeShape;
import com.pulumi.deployment.Deployment;
import com.pulumi.deployment.InvokeOptions;
import java.util.concurrent.CompletableFuture;

public final class OracleFunctions {
    /**
     * Use this data source to access information about an existing Cloud VM Cluster.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azure.oracle.OracleFunctions;
     * import com.pulumi.azure.oracle.inputs.GetCloudVmClusterArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OracleFunctions.getCloudVmCluster(GetCloudVmClusterArgs.builder()
     *             .name("existing")
     *             .resourceGroupName("existing")
     *             .build());
     * 
     *         ctx.export("id", example.applyValue(getCloudVmClusterResult -> getCloudVmClusterResult.id()));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetCloudVmClusterResult> getCloudVmCluster(GetCloudVmClusterArgs args) {
        return getCloudVmCluster(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to access information about an existing Cloud VM Cluster.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azure.oracle.OracleFunctions;
     * import com.pulumi.azure.oracle.inputs.GetCloudVmClusterArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OracleFunctions.getCloudVmCluster(GetCloudVmClusterArgs.builder()
     *             .name("existing")
     *             .resourceGroupName("existing")
     *             .build());
     * 
     *         ctx.export("id", example.applyValue(getCloudVmClusterResult -> getCloudVmClusterResult.id()));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetCloudVmClusterResult> getCloudVmClusterPlain(GetCloudVmClusterPlainArgs args) {
        return getCloudVmClusterPlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to access information about an existing Cloud VM Cluster.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azure.oracle.OracleFunctions;
     * import com.pulumi.azure.oracle.inputs.GetCloudVmClusterArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OracleFunctions.getCloudVmCluster(GetCloudVmClusterArgs.builder()
     *             .name("existing")
     *             .resourceGroupName("existing")
     *             .build());
     * 
     *         ctx.export("id", example.applyValue(getCloudVmClusterResult -> getCloudVmClusterResult.id()));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetCloudVmClusterResult> getCloudVmCluster(GetCloudVmClusterArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("azure:oracle/getCloudVmCluster:getCloudVmCluster", TypeShape.of(GetCloudVmClusterResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to access information about an existing Cloud VM Cluster.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azure.oracle.OracleFunctions;
     * import com.pulumi.azure.oracle.inputs.GetCloudVmClusterArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OracleFunctions.getCloudVmCluster(GetCloudVmClusterArgs.builder()
     *             .name("existing")
     *             .resourceGroupName("existing")
     *             .build());
     * 
     *         ctx.export("id", example.applyValue(getCloudVmClusterResult -> getCloudVmClusterResult.id()));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetCloudVmClusterResult> getCloudVmClusterPlain(GetCloudVmClusterPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("azure:oracle/getCloudVmCluster:getCloudVmCluster", TypeShape.of(GetCloudVmClusterResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to access information about existing DB Servers.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azure.oracle.OracleFunctions;
     * import com.pulumi.azure.oracle.inputs.GetDbServersArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OracleFunctions.getDbServers(GetDbServersArgs.builder()
     *             .resourceGroupName("existing")
     *             .cloudExadataInfrastructureName("existing")
     *             .build());
     * 
     *         ctx.export("id", example.applyValue(getDbServersResult -> getDbServersResult.id()));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetDbServersResult> getDbServers(GetDbServersArgs args) {
        return getDbServers(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to access information about existing DB Servers.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azure.oracle.OracleFunctions;
     * import com.pulumi.azure.oracle.inputs.GetDbServersArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OracleFunctions.getDbServers(GetDbServersArgs.builder()
     *             .resourceGroupName("existing")
     *             .cloudExadataInfrastructureName("existing")
     *             .build());
     * 
     *         ctx.export("id", example.applyValue(getDbServersResult -> getDbServersResult.id()));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetDbServersResult> getDbServersPlain(GetDbServersPlainArgs args) {
        return getDbServersPlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to access information about existing DB Servers.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azure.oracle.OracleFunctions;
     * import com.pulumi.azure.oracle.inputs.GetDbServersArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OracleFunctions.getDbServers(GetDbServersArgs.builder()
     *             .resourceGroupName("existing")
     *             .cloudExadataInfrastructureName("existing")
     *             .build());
     * 
     *         ctx.export("id", example.applyValue(getDbServersResult -> getDbServersResult.id()));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetDbServersResult> getDbServers(GetDbServersArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("azure:oracle/getDbServers:getDbServers", TypeShape.of(GetDbServersResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to access information about existing DB Servers.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azure.oracle.OracleFunctions;
     * import com.pulumi.azure.oracle.inputs.GetDbServersArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OracleFunctions.getDbServers(GetDbServersArgs.builder()
     *             .resourceGroupName("existing")
     *             .cloudExadataInfrastructureName("existing")
     *             .build());
     * 
     *         ctx.export("id", example.applyValue(getDbServersResult -> getDbServersResult.id()));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetDbServersResult> getDbServersPlain(GetDbServersPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("azure:oracle/getDbServers:getDbServers", TypeShape.of(GetDbServersResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to access information about an existing Cloud Exadata Infrastructure.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azure.oracle.OracleFunctions;
     * import com.pulumi.azure.oracle.inputs.GetExadataInfrastructureArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OracleFunctions.getExadataInfrastructure(GetExadataInfrastructureArgs.builder()
     *             .name("existing")
     *             .resourceGroupName("existing")
     *             .build());
     * 
     *         ctx.export("id", example.applyValue(getExadataInfrastructureResult -> getExadataInfrastructureResult.id()));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetExadataInfrastructureResult> getExadataInfrastructure(GetExadataInfrastructureArgs args) {
        return getExadataInfrastructure(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to access information about an existing Cloud Exadata Infrastructure.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azure.oracle.OracleFunctions;
     * import com.pulumi.azure.oracle.inputs.GetExadataInfrastructureArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OracleFunctions.getExadataInfrastructure(GetExadataInfrastructureArgs.builder()
     *             .name("existing")
     *             .resourceGroupName("existing")
     *             .build());
     * 
     *         ctx.export("id", example.applyValue(getExadataInfrastructureResult -> getExadataInfrastructureResult.id()));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetExadataInfrastructureResult> getExadataInfrastructurePlain(GetExadataInfrastructurePlainArgs args) {
        return getExadataInfrastructurePlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to access information about an existing Cloud Exadata Infrastructure.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azure.oracle.OracleFunctions;
     * import com.pulumi.azure.oracle.inputs.GetExadataInfrastructureArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OracleFunctions.getExadataInfrastructure(GetExadataInfrastructureArgs.builder()
     *             .name("existing")
     *             .resourceGroupName("existing")
     *             .build());
     * 
     *         ctx.export("id", example.applyValue(getExadataInfrastructureResult -> getExadataInfrastructureResult.id()));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetExadataInfrastructureResult> getExadataInfrastructure(GetExadataInfrastructureArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("azure:oracle/getExadataInfrastructure:getExadataInfrastructure", TypeShape.of(GetExadataInfrastructureResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to access information about an existing Cloud Exadata Infrastructure.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azure.oracle.OracleFunctions;
     * import com.pulumi.azure.oracle.inputs.GetExadataInfrastructureArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OracleFunctions.getExadataInfrastructure(GetExadataInfrastructureArgs.builder()
     *             .name("existing")
     *             .resourceGroupName("existing")
     *             .build());
     * 
     *         ctx.export("id", example.applyValue(getExadataInfrastructureResult -> getExadataInfrastructureResult.id()));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetExadataInfrastructureResult> getExadataInfrastructurePlain(GetExadataInfrastructurePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("azure:oracle/getExadataInfrastructure:getExadataInfrastructure", TypeShape.of(GetExadataInfrastructureResult.class), args, Utilities.withVersion(options));
    }
}
