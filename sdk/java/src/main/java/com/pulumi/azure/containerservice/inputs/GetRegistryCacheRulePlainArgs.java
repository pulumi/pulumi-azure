// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.containerservice.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class GetRegistryCacheRulePlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetRegistryCacheRulePlainArgs Empty = new GetRegistryCacheRulePlainArgs();

    /**
     * The ID of the container registry where the cache rule should apply. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="containerRegistryId", required=true)
    private String containerRegistryId;

    /**
     * @return The ID of the container registry where the cache rule should apply. Changing this forces a new resource to be created.
     * 
     */
    public String containerRegistryId() {
        return this.containerRegistryId;
    }

    /**
     * Specifies the name of the Container Registry Cache Rule. Only Alphanumeric characters allowed. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="name", required=true)
    private String name;

    /**
     * @return Specifies the name of the Container Registry Cache Rule. Only Alphanumeric characters allowed. Changing this forces a new resource to be created.
     * 
     */
    public String name() {
        return this.name;
    }

    private GetRegistryCacheRulePlainArgs() {}

    private GetRegistryCacheRulePlainArgs(GetRegistryCacheRulePlainArgs $) {
        this.containerRegistryId = $.containerRegistryId;
        this.name = $.name;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetRegistryCacheRulePlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetRegistryCacheRulePlainArgs $;

        public Builder() {
            $ = new GetRegistryCacheRulePlainArgs();
        }

        public Builder(GetRegistryCacheRulePlainArgs defaults) {
            $ = new GetRegistryCacheRulePlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param containerRegistryId The ID of the container registry where the cache rule should apply. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder containerRegistryId(String containerRegistryId) {
            $.containerRegistryId = containerRegistryId;
            return this;
        }

        /**
         * @param name Specifies the name of the Container Registry Cache Rule. Only Alphanumeric characters allowed. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            $.name = name;
            return this;
        }

        public GetRegistryCacheRulePlainArgs build() {
            if ($.containerRegistryId == null) {
                throw new MissingRequiredPropertyException("GetRegistryCacheRulePlainArgs", "containerRegistryId");
            }
            if ($.name == null) {
                throw new MissingRequiredPropertyException("GetRegistryCacheRulePlainArgs", "name");
            }
            return $;
        }
    }

}
