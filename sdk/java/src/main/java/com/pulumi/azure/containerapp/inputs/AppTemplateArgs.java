// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.containerapp.inputs;

import com.pulumi.azure.containerapp.inputs.AppTemplateContainerArgs;
import com.pulumi.azure.containerapp.inputs.AppTemplateVolumeArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AppTemplateArgs extends com.pulumi.resources.ResourceArgs {

    public static final AppTemplateArgs Empty = new AppTemplateArgs();

    /**
     * One or more `container` blocks as detailed below.
     * 
     */
    @Import(name="containers", required=true)
    private Output<List<AppTemplateContainerArgs>> containers;

    /**
     * @return One or more `container` blocks as detailed below.
     * 
     */
    public Output<List<AppTemplateContainerArgs>> containers() {
        return this.containers;
    }

    /**
     * The maximum number of replicas for this container.
     * 
     */
    @Import(name="maxReplicas")
    private @Nullable Output<Integer> maxReplicas;

    /**
     * @return The maximum number of replicas for this container.
     * 
     */
    public Optional<Output<Integer>> maxReplicas() {
        return Optional.ofNullable(this.maxReplicas);
    }

    /**
     * The minimum number of replicas for this container.
     * 
     */
    @Import(name="minReplicas")
    private @Nullable Output<Integer> minReplicas;

    /**
     * @return The minimum number of replicas for this container.
     * 
     */
    public Optional<Output<Integer>> minReplicas() {
        return Optional.ofNullable(this.minReplicas);
    }

    /**
     * The suffix for the revision. This value must be unique for the lifetime of the Resource. If omitted the service will use a hash function to create one.
     * 
     */
    @Import(name="revisionSuffix")
    private @Nullable Output<String> revisionSuffix;

    /**
     * @return The suffix for the revision. This value must be unique for the lifetime of the Resource. If omitted the service will use a hash function to create one.
     * 
     */
    public Optional<Output<String>> revisionSuffix() {
        return Optional.ofNullable(this.revisionSuffix);
    }

    /**
     * A `volume` block as detailed below.
     * 
     */
    @Import(name="volumes")
    private @Nullable Output<List<AppTemplateVolumeArgs>> volumes;

    /**
     * @return A `volume` block as detailed below.
     * 
     */
    public Optional<Output<List<AppTemplateVolumeArgs>>> volumes() {
        return Optional.ofNullable(this.volumes);
    }

    private AppTemplateArgs() {}

    private AppTemplateArgs(AppTemplateArgs $) {
        this.containers = $.containers;
        this.maxReplicas = $.maxReplicas;
        this.minReplicas = $.minReplicas;
        this.revisionSuffix = $.revisionSuffix;
        this.volumes = $.volumes;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AppTemplateArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AppTemplateArgs $;

        public Builder() {
            $ = new AppTemplateArgs();
        }

        public Builder(AppTemplateArgs defaults) {
            $ = new AppTemplateArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param containers One or more `container` blocks as detailed below.
         * 
         * @return builder
         * 
         */
        public Builder containers(Output<List<AppTemplateContainerArgs>> containers) {
            $.containers = containers;
            return this;
        }

        /**
         * @param containers One or more `container` blocks as detailed below.
         * 
         * @return builder
         * 
         */
        public Builder containers(List<AppTemplateContainerArgs> containers) {
            return containers(Output.of(containers));
        }

        /**
         * @param containers One or more `container` blocks as detailed below.
         * 
         * @return builder
         * 
         */
        public Builder containers(AppTemplateContainerArgs... containers) {
            return containers(List.of(containers));
        }

        /**
         * @param maxReplicas The maximum number of replicas for this container.
         * 
         * @return builder
         * 
         */
        public Builder maxReplicas(@Nullable Output<Integer> maxReplicas) {
            $.maxReplicas = maxReplicas;
            return this;
        }

        /**
         * @param maxReplicas The maximum number of replicas for this container.
         * 
         * @return builder
         * 
         */
        public Builder maxReplicas(Integer maxReplicas) {
            return maxReplicas(Output.of(maxReplicas));
        }

        /**
         * @param minReplicas The minimum number of replicas for this container.
         * 
         * @return builder
         * 
         */
        public Builder minReplicas(@Nullable Output<Integer> minReplicas) {
            $.minReplicas = minReplicas;
            return this;
        }

        /**
         * @param minReplicas The minimum number of replicas for this container.
         * 
         * @return builder
         * 
         */
        public Builder minReplicas(Integer minReplicas) {
            return minReplicas(Output.of(minReplicas));
        }

        /**
         * @param revisionSuffix The suffix for the revision. This value must be unique for the lifetime of the Resource. If omitted the service will use a hash function to create one.
         * 
         * @return builder
         * 
         */
        public Builder revisionSuffix(@Nullable Output<String> revisionSuffix) {
            $.revisionSuffix = revisionSuffix;
            return this;
        }

        /**
         * @param revisionSuffix The suffix for the revision. This value must be unique for the lifetime of the Resource. If omitted the service will use a hash function to create one.
         * 
         * @return builder
         * 
         */
        public Builder revisionSuffix(String revisionSuffix) {
            return revisionSuffix(Output.of(revisionSuffix));
        }

        /**
         * @param volumes A `volume` block as detailed below.
         * 
         * @return builder
         * 
         */
        public Builder volumes(@Nullable Output<List<AppTemplateVolumeArgs>> volumes) {
            $.volumes = volumes;
            return this;
        }

        /**
         * @param volumes A `volume` block as detailed below.
         * 
         * @return builder
         * 
         */
        public Builder volumes(List<AppTemplateVolumeArgs> volumes) {
            return volumes(Output.of(volumes));
        }

        /**
         * @param volumes A `volume` block as detailed below.
         * 
         * @return builder
         * 
         */
        public Builder volumes(AppTemplateVolumeArgs... volumes) {
            return volumes(List.of(volumes));
        }

        public AppTemplateArgs build() {
            $.containers = Objects.requireNonNull($.containers, "expected parameter 'containers' to be non-null");
            return $;
        }
    }

}
