// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.containerservice;

import com.pulumi.azure.Utilities;
import com.pulumi.azure.containerservice.inputs.GetClusterNodePoolArgs;
import com.pulumi.azure.containerservice.inputs.GetClusterNodePoolPlainArgs;
import com.pulumi.azure.containerservice.inputs.GetGroupArgs;
import com.pulumi.azure.containerservice.inputs.GetGroupPlainArgs;
import com.pulumi.azure.containerservice.inputs.GetKubernetesClusterArgs;
import com.pulumi.azure.containerservice.inputs.GetKubernetesClusterPlainArgs;
import com.pulumi.azure.containerservice.inputs.GetKubernetesNodePoolSnapshotArgs;
import com.pulumi.azure.containerservice.inputs.GetKubernetesNodePoolSnapshotPlainArgs;
import com.pulumi.azure.containerservice.inputs.GetKubernetesServiceVersionsArgs;
import com.pulumi.azure.containerservice.inputs.GetKubernetesServiceVersionsPlainArgs;
import com.pulumi.azure.containerservice.inputs.GetRegistryArgs;
import com.pulumi.azure.containerservice.inputs.GetRegistryPlainArgs;
import com.pulumi.azure.containerservice.inputs.GetRegistryScopeMapArgs;
import com.pulumi.azure.containerservice.inputs.GetRegistryScopeMapPlainArgs;
import com.pulumi.azure.containerservice.inputs.GetRegistryTokenArgs;
import com.pulumi.azure.containerservice.inputs.GetRegistryTokenPlainArgs;
import com.pulumi.azure.containerservice.outputs.GetClusterNodePoolResult;
import com.pulumi.azure.containerservice.outputs.GetGroupResult;
import com.pulumi.azure.containerservice.outputs.GetKubernetesClusterResult;
import com.pulumi.azure.containerservice.outputs.GetKubernetesNodePoolSnapshotResult;
import com.pulumi.azure.containerservice.outputs.GetKubernetesServiceVersionsResult;
import com.pulumi.azure.containerservice.outputs.GetRegistryResult;
import com.pulumi.azure.containerservice.outputs.GetRegistryScopeMapResult;
import com.pulumi.azure.containerservice.outputs.GetRegistryTokenResult;
import com.pulumi.core.Output;
import com.pulumi.core.TypeShape;
import com.pulumi.deployment.Deployment;
import com.pulumi.deployment.InvokeOptions;
import java.util.concurrent.CompletableFuture;

public final class ContainerserviceFunctions {
    /**
     * Use this data source to access information about an existing Kubernetes Cluster Node Pool.
     * 
     */
    public static Output<GetClusterNodePoolResult> getClusterNodePool(GetClusterNodePoolArgs args) {
        return getClusterNodePool(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to access information about an existing Kubernetes Cluster Node Pool.
     * 
     */
    public static CompletableFuture<GetClusterNodePoolResult> getClusterNodePoolPlain(GetClusterNodePoolPlainArgs args) {
        return getClusterNodePoolPlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to access information about an existing Kubernetes Cluster Node Pool.
     * 
     */
    public static Output<GetClusterNodePoolResult> getClusterNodePool(GetClusterNodePoolArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("azure:containerservice/getClusterNodePool:getClusterNodePool", TypeShape.of(GetClusterNodePoolResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to access information about an existing Kubernetes Cluster Node Pool.
     * 
     */
    public static CompletableFuture<GetClusterNodePoolResult> getClusterNodePoolPlain(GetClusterNodePoolPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("azure:containerservice/getClusterNodePool:getClusterNodePool", TypeShape.of(GetClusterNodePoolResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to access information about an existing Container Group instance.
     * 
     */
    public static Output<GetGroupResult> getGroup(GetGroupArgs args) {
        return getGroup(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to access information about an existing Container Group instance.
     * 
     */
    public static CompletableFuture<GetGroupResult> getGroupPlain(GetGroupPlainArgs args) {
        return getGroupPlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to access information about an existing Container Group instance.
     * 
     */
    public static Output<GetGroupResult> getGroup(GetGroupArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("azure:containerservice/getGroup:getGroup", TypeShape.of(GetGroupResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to access information about an existing Container Group instance.
     * 
     */
    public static CompletableFuture<GetGroupResult> getGroupPlain(GetGroupPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("azure:containerservice/getGroup:getGroup", TypeShape.of(GetGroupResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to access information about an existing Managed Kubernetes Cluster (AKS).
     * 
     */
    public static Output<GetKubernetesClusterResult> getKubernetesCluster(GetKubernetesClusterArgs args) {
        return getKubernetesCluster(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to access information about an existing Managed Kubernetes Cluster (AKS).
     * 
     */
    public static CompletableFuture<GetKubernetesClusterResult> getKubernetesClusterPlain(GetKubernetesClusterPlainArgs args) {
        return getKubernetesClusterPlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to access information about an existing Managed Kubernetes Cluster (AKS).
     * 
     */
    public static Output<GetKubernetesClusterResult> getKubernetesCluster(GetKubernetesClusterArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("azure:containerservice/getKubernetesCluster:getKubernetesCluster", TypeShape.of(GetKubernetesClusterResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to access information about an existing Managed Kubernetes Cluster (AKS).
     * 
     */
    public static CompletableFuture<GetKubernetesClusterResult> getKubernetesClusterPlain(GetKubernetesClusterPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("azure:containerservice/getKubernetesCluster:getKubernetesCluster", TypeShape.of(GetKubernetesClusterResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to access information about an existing Kubernetes Node Pool Snapshot.
     * 
     */
    public static Output<GetKubernetesNodePoolSnapshotResult> getKubernetesNodePoolSnapshot(GetKubernetesNodePoolSnapshotArgs args) {
        return getKubernetesNodePoolSnapshot(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to access information about an existing Kubernetes Node Pool Snapshot.
     * 
     */
    public static CompletableFuture<GetKubernetesNodePoolSnapshotResult> getKubernetesNodePoolSnapshotPlain(GetKubernetesNodePoolSnapshotPlainArgs args) {
        return getKubernetesNodePoolSnapshotPlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to access information about an existing Kubernetes Node Pool Snapshot.
     * 
     */
    public static Output<GetKubernetesNodePoolSnapshotResult> getKubernetesNodePoolSnapshot(GetKubernetesNodePoolSnapshotArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("azure:containerservice/getKubernetesNodePoolSnapshot:getKubernetesNodePoolSnapshot", TypeShape.of(GetKubernetesNodePoolSnapshotResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to access information about an existing Kubernetes Node Pool Snapshot.
     * 
     */
    public static CompletableFuture<GetKubernetesNodePoolSnapshotResult> getKubernetesNodePoolSnapshotPlain(GetKubernetesNodePoolSnapshotPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("azure:containerservice/getKubernetesNodePoolSnapshot:getKubernetesNodePoolSnapshot", TypeShape.of(GetKubernetesNodePoolSnapshotResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to retrieve the version of Kubernetes supported by Azure Kubernetes Service.
     * 
     */
    public static Output<GetKubernetesServiceVersionsResult> getKubernetesServiceVersions(GetKubernetesServiceVersionsArgs args) {
        return getKubernetesServiceVersions(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to retrieve the version of Kubernetes supported by Azure Kubernetes Service.
     * 
     */
    public static CompletableFuture<GetKubernetesServiceVersionsResult> getKubernetesServiceVersionsPlain(GetKubernetesServiceVersionsPlainArgs args) {
        return getKubernetesServiceVersionsPlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to retrieve the version of Kubernetes supported by Azure Kubernetes Service.
     * 
     */
    public static Output<GetKubernetesServiceVersionsResult> getKubernetesServiceVersions(GetKubernetesServiceVersionsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("azure:containerservice/getKubernetesServiceVersions:getKubernetesServiceVersions", TypeShape.of(GetKubernetesServiceVersionsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to retrieve the version of Kubernetes supported by Azure Kubernetes Service.
     * 
     */
    public static CompletableFuture<GetKubernetesServiceVersionsResult> getKubernetesServiceVersionsPlain(GetKubernetesServiceVersionsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("azure:containerservice/getKubernetesServiceVersions:getKubernetesServiceVersions", TypeShape.of(GetKubernetesServiceVersionsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to access information about an existing Container Registry.
     * 
     */
    public static Output<GetRegistryResult> getRegistry(GetRegistryArgs args) {
        return getRegistry(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to access information about an existing Container Registry.
     * 
     */
    public static CompletableFuture<GetRegistryResult> getRegistryPlain(GetRegistryPlainArgs args) {
        return getRegistryPlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to access information about an existing Container Registry.
     * 
     */
    public static Output<GetRegistryResult> getRegistry(GetRegistryArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("azure:containerservice/getRegistry:getRegistry", TypeShape.of(GetRegistryResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to access information about an existing Container Registry.
     * 
     */
    public static CompletableFuture<GetRegistryResult> getRegistryPlain(GetRegistryPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("azure:containerservice/getRegistry:getRegistry", TypeShape.of(GetRegistryResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to access information about an existing Container Registry scope map.
     * 
     */
    public static Output<GetRegistryScopeMapResult> getRegistryScopeMap(GetRegistryScopeMapArgs args) {
        return getRegistryScopeMap(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to access information about an existing Container Registry scope map.
     * 
     */
    public static CompletableFuture<GetRegistryScopeMapResult> getRegistryScopeMapPlain(GetRegistryScopeMapPlainArgs args) {
        return getRegistryScopeMapPlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to access information about an existing Container Registry scope map.
     * 
     */
    public static Output<GetRegistryScopeMapResult> getRegistryScopeMap(GetRegistryScopeMapArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("azure:containerservice/getRegistryScopeMap:getRegistryScopeMap", TypeShape.of(GetRegistryScopeMapResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to access information about an existing Container Registry scope map.
     * 
     */
    public static CompletableFuture<GetRegistryScopeMapResult> getRegistryScopeMapPlain(GetRegistryScopeMapPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("azure:containerservice/getRegistryScopeMap:getRegistryScopeMap", TypeShape.of(GetRegistryScopeMapResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to access information about an existing Container Registry token.
     * 
     */
    public static Output<GetRegistryTokenResult> getRegistryToken(GetRegistryTokenArgs args) {
        return getRegistryToken(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to access information about an existing Container Registry token.
     * 
     */
    public static CompletableFuture<GetRegistryTokenResult> getRegistryTokenPlain(GetRegistryTokenPlainArgs args) {
        return getRegistryTokenPlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to access information about an existing Container Registry token.
     * 
     */
    public static Output<GetRegistryTokenResult> getRegistryToken(GetRegistryTokenArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("azure:containerservice/getRegistryToken:getRegistryToken", TypeShape.of(GetRegistryTokenResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to access information about an existing Container Registry token.
     * 
     */
    public static CompletableFuture<GetRegistryTokenResult> getRegistryTokenPlain(GetRegistryTokenPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("azure:containerservice/getRegistryToken:getRegistryToken", TypeShape.of(GetRegistryTokenResult.class), args, Utilities.withVersion(options));
    }
}
