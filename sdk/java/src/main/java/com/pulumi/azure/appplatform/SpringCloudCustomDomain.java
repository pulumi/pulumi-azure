// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.appplatform;

import com.pulumi.azure.Utilities;
import com.pulumi.azure.appplatform.SpringCloudCustomDomainArgs;
import com.pulumi.azure.appplatform.inputs.SpringCloudCustomDomainState;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Manages an Azure Spring Cloud Custom Domain.
 * 
 * !&gt; **Note:** Azure Spring Apps is now deprecated and will be retired on 2028-05-31 - as such the `azure.appplatform.SpringCloudCustomDomain` resource is deprecated and will be removed in a future major version of the AzureRM Provider. See https://aka.ms/asaretirement for more information.
 * 
 * ## Example Usage
 * 
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.azure.core.ResourceGroup;
 * import com.pulumi.azure.core.ResourceGroupArgs;
 * import com.pulumi.azure.dns.DnsFunctions;
 * import com.pulumi.azure.dns.inputs.GetZoneArgs;
 * import com.pulumi.azure.appplatform.SpringCloudService;
 * import com.pulumi.azure.appplatform.SpringCloudServiceArgs;
 * import com.pulumi.azure.appplatform.SpringCloudApp;
 * import com.pulumi.azure.appplatform.SpringCloudAppArgs;
 * import com.pulumi.azure.dns.CNameRecord;
 * import com.pulumi.azure.dns.CNameRecordArgs;
 * import com.pulumi.azure.appplatform.SpringCloudCustomDomain;
 * import com.pulumi.azure.appplatform.SpringCloudCustomDomainArgs;
 * import com.pulumi.std.StdFunctions;
 * import com.pulumi.std.inputs.JoinArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var exampleResourceGroup = new ResourceGroup("exampleResourceGroup", ResourceGroupArgs.builder()
 *             .name("rg-example")
 *             .location("West Europe")
 *             .build());
 * 
 *         final var example = DnsFunctions.getZone(GetZoneArgs.builder()
 *             .name("mydomain.com")
 *             .resourceGroupName(exampleResourceGroup.name())
 *             .build());
 * 
 *         var exampleSpringCloudService = new SpringCloudService("exampleSpringCloudService", SpringCloudServiceArgs.builder()
 *             .name("example-springcloud")
 *             .resourceGroupName(exampleResourceGroup.name())
 *             .location(exampleResourceGroup.location())
 *             .build());
 * 
 *         var exampleSpringCloudApp = new SpringCloudApp("exampleSpringCloudApp", SpringCloudAppArgs.builder()
 *             .name("example-springcloudapp")
 *             .resourceGroupName(exampleResourceGroup.name())
 *             .serviceName(exampleSpringCloudService.name())
 *             .build());
 * 
 *         var exampleCNameRecord = new CNameRecord("exampleCNameRecord", CNameRecordArgs.builder()
 *             .name("record1")
 *             .zoneName(example.applyValue(_example -> _example.name()))
 *             .resourceGroupName(example.applyValue(_example -> _example.resourceGroupName()))
 *             .ttl(300)
 *             .record(exampleSpringCloudApp.fqdn())
 *             .build());
 * 
 *         var exampleSpringCloudCustomDomain = new SpringCloudCustomDomain("exampleSpringCloudCustomDomain", SpringCloudCustomDomainArgs.builder()
 *             .name(StdFunctions.join(JoinArgs.builder()
 *                 .separator(".")
 *                 .input(                
 *                     exampleCNameRecord.name(),
 *                     exampleCNameRecord.zoneName())
 *                 .build()).applyValue(_invoke -> _invoke.result()))
 *             .springCloudAppId(exampleSpringCloudApp.id())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * 
 * ## Import
 * 
 * Spring Cloud Custom Domain can be imported using the `resource id`, e.g.
 * 
 * ```sh
 * $ pulumi import azure:appplatform/springCloudCustomDomain:SpringCloudCustomDomain example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resGroup1/providers/Microsoft.AppPlatform/spring/spring1/apps/app1/domains/domain.com
 * ```
 * 
 */
@ResourceType(type="azure:appplatform/springCloudCustomDomain:SpringCloudCustomDomain")
public class SpringCloudCustomDomain extends com.pulumi.resources.CustomResource {
    /**
     * Specifies the name of the Spring Cloud Certificate that binds to the Spring Cloud Custom Domain. Required when `thumbprint` is specified
     * 
     */
    @Export(name="certificateName", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> certificateName;

    /**
     * @return Specifies the name of the Spring Cloud Certificate that binds to the Spring Cloud Custom Domain. Required when `thumbprint` is specified
     * 
     */
    public Output<Optional<String>> certificateName() {
        return Codegen.optional(this.certificateName);
    }
    /**
     * Specifies the name of the Spring Cloud Custom Domain. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return Specifies the name of the Spring Cloud Custom Domain. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Specifies the resource ID of the Spring Cloud Application. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="springCloudAppId", refs={String.class}, tree="[0]")
    private Output<String> springCloudAppId;

    /**
     * @return Specifies the resource ID of the Spring Cloud Application. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> springCloudAppId() {
        return this.springCloudAppId;
    }
    /**
     * Specifies the thumbprint of the Spring Cloud Certificate that binds to the Spring Cloud Custom Domain. Required when `certificate_name` is specified. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="thumbprint", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> thumbprint;

    /**
     * @return Specifies the thumbprint of the Spring Cloud Certificate that binds to the Spring Cloud Custom Domain. Required when `certificate_name` is specified. Changing this forces a new resource to be created.
     * 
     */
    public Output<Optional<String>> thumbprint() {
        return Codegen.optional(this.thumbprint);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public SpringCloudCustomDomain(java.lang.String name) {
        this(name, SpringCloudCustomDomainArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public SpringCloudCustomDomain(java.lang.String name, SpringCloudCustomDomainArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public SpringCloudCustomDomain(java.lang.String name, SpringCloudCustomDomainArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:appplatform/springCloudCustomDomain:SpringCloudCustomDomain", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private SpringCloudCustomDomain(java.lang.String name, Output<java.lang.String> id, @Nullable SpringCloudCustomDomainState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:appplatform/springCloudCustomDomain:SpringCloudCustomDomain", name, state, makeResourceOptions(options, id), false);
    }

    private static SpringCloudCustomDomainArgs makeArgs(SpringCloudCustomDomainArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? SpringCloudCustomDomainArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static SpringCloudCustomDomain get(java.lang.String name, Output<java.lang.String> id, @Nullable SpringCloudCustomDomainState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new SpringCloudCustomDomain(name, id, state, options);
    }
}
