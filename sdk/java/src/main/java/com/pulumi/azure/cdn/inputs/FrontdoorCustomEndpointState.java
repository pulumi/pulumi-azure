// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.cdn.inputs;

import com.pulumi.azure.cdn.inputs.FrontdoorCustomEndpointTlsArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class FrontdoorCustomEndpointState extends com.pulumi.resources.ResourceArgs {

    public static final FrontdoorCustomEndpointState Empty = new FrontdoorCustomEndpointState();

    /**
     * The resource ID of the CDN FrontDoor Route this Custom Domain should be associated with.
     * 
     */
    @Import(name="associateWithCdnFrontdoorRouteId")
    private @Nullable Output<String> associateWithCdnFrontdoorRouteId;

    /**
     * @return The resource ID of the CDN FrontDoor Route this Custom Domain should be associated with.
     * 
     */
    public Optional<Output<String>> associateWithCdnFrontdoorRouteId() {
        return Optional.ofNullable(this.associateWithCdnFrontdoorRouteId);
    }

    /**
     * The ID of the Frontdoor Profile. Changing this forces a new Frontdoor Profile to be created.
     * 
     */
    @Import(name="cdnFrontdoorProfileId")
    private @Nullable Output<String> cdnFrontdoorProfileId;

    /**
     * @return The ID of the Frontdoor Profile. Changing this forces a new Frontdoor Profile to be created.
     * 
     */
    public Optional<Output<String>> cdnFrontdoorProfileId() {
        return Optional.ofNullable(this.cdnFrontdoorProfileId);
    }

    /**
     * The ID of the DNS Zone which should be used for this FrontDoor Custom Domain.
     * 
     */
    @Import(name="dnsZoneId")
    private @Nullable Output<String> dnsZoneId;

    /**
     * @return The ID of the DNS Zone which should be used for this FrontDoor Custom Domain.
     * 
     */
    public Optional<Output<String>> dnsZoneId() {
        return Optional.ofNullable(this.dnsZoneId);
    }

    /**
     * The date time that the token expires.
     * 
     */
    @Import(name="expirationDate")
    private @Nullable Output<String> expirationDate;

    /**
     * @return The date time that the token expires.
     * 
     */
    public Optional<Output<String>> expirationDate() {
        return Optional.ofNullable(this.expirationDate);
    }

    /**
     * The host name of the domain. Changing this forces a new CDN FrontDoor Custom Domain to be created.
     * 
     */
    @Import(name="hostName")
    private @Nullable Output<String> hostName;

    /**
     * @return The host name of the domain. Changing this forces a new CDN FrontDoor Custom Domain to be created.
     * 
     */
    public Optional<Output<String>> hostName() {
        return Optional.ofNullable(this.hostName);
    }

    /**
     * The name which should be used for this CDN FrontDoor Custom Domain. Possible values must be between 2 and 260 characters in length, must begin with a letter or number, end with a letter or number and contain only letters, numbers and hyphens. Changing this forces a new CDN FrontDoor Custom Domain to be created.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name which should be used for this CDN FrontDoor Custom Domain. Possible values must be between 2 and 260 characters in length, must begin with a letter or number, end with a letter or number and contain only letters, numbers and hyphens. Changing this forces a new CDN FrontDoor Custom Domain to be created.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * A `tls` block as defined below.
     * 
     */
    @Import(name="tls")
    private @Nullable Output<FrontdoorCustomEndpointTlsArgs> tls;

    /**
     * @return A `tls` block as defined below.
     * 
     */
    public Optional<Output<FrontdoorCustomEndpointTlsArgs>> tls() {
        return Optional.ofNullable(this.tls);
    }

    /**
     * Challenge used for DNS TXT record or file based validation.
     * 
     */
    @Import(name="validationToken")
    private @Nullable Output<String> validationToken;

    /**
     * @return Challenge used for DNS TXT record or file based validation.
     * 
     */
    public Optional<Output<String>> validationToken() {
        return Optional.ofNullable(this.validationToken);
    }

    private FrontdoorCustomEndpointState() {}

    private FrontdoorCustomEndpointState(FrontdoorCustomEndpointState $) {
        this.associateWithCdnFrontdoorRouteId = $.associateWithCdnFrontdoorRouteId;
        this.cdnFrontdoorProfileId = $.cdnFrontdoorProfileId;
        this.dnsZoneId = $.dnsZoneId;
        this.expirationDate = $.expirationDate;
        this.hostName = $.hostName;
        this.name = $.name;
        this.tls = $.tls;
        this.validationToken = $.validationToken;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FrontdoorCustomEndpointState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FrontdoorCustomEndpointState $;

        public Builder() {
            $ = new FrontdoorCustomEndpointState();
        }

        public Builder(FrontdoorCustomEndpointState defaults) {
            $ = new FrontdoorCustomEndpointState(Objects.requireNonNull(defaults));
        }

        /**
         * @param associateWithCdnFrontdoorRouteId The resource ID of the CDN FrontDoor Route this Custom Domain should be associated with.
         * 
         * @return builder
         * 
         */
        public Builder associateWithCdnFrontdoorRouteId(@Nullable Output<String> associateWithCdnFrontdoorRouteId) {
            $.associateWithCdnFrontdoorRouteId = associateWithCdnFrontdoorRouteId;
            return this;
        }

        /**
         * @param associateWithCdnFrontdoorRouteId The resource ID of the CDN FrontDoor Route this Custom Domain should be associated with.
         * 
         * @return builder
         * 
         */
        public Builder associateWithCdnFrontdoorRouteId(String associateWithCdnFrontdoorRouteId) {
            return associateWithCdnFrontdoorRouteId(Output.of(associateWithCdnFrontdoorRouteId));
        }

        /**
         * @param cdnFrontdoorProfileId The ID of the Frontdoor Profile. Changing this forces a new Frontdoor Profile to be created.
         * 
         * @return builder
         * 
         */
        public Builder cdnFrontdoorProfileId(@Nullable Output<String> cdnFrontdoorProfileId) {
            $.cdnFrontdoorProfileId = cdnFrontdoorProfileId;
            return this;
        }

        /**
         * @param cdnFrontdoorProfileId The ID of the Frontdoor Profile. Changing this forces a new Frontdoor Profile to be created.
         * 
         * @return builder
         * 
         */
        public Builder cdnFrontdoorProfileId(String cdnFrontdoorProfileId) {
            return cdnFrontdoorProfileId(Output.of(cdnFrontdoorProfileId));
        }

        /**
         * @param dnsZoneId The ID of the DNS Zone which should be used for this FrontDoor Custom Domain.
         * 
         * @return builder
         * 
         */
        public Builder dnsZoneId(@Nullable Output<String> dnsZoneId) {
            $.dnsZoneId = dnsZoneId;
            return this;
        }

        /**
         * @param dnsZoneId The ID of the DNS Zone which should be used for this FrontDoor Custom Domain.
         * 
         * @return builder
         * 
         */
        public Builder dnsZoneId(String dnsZoneId) {
            return dnsZoneId(Output.of(dnsZoneId));
        }

        /**
         * @param expirationDate The date time that the token expires.
         * 
         * @return builder
         * 
         */
        public Builder expirationDate(@Nullable Output<String> expirationDate) {
            $.expirationDate = expirationDate;
            return this;
        }

        /**
         * @param expirationDate The date time that the token expires.
         * 
         * @return builder
         * 
         */
        public Builder expirationDate(String expirationDate) {
            return expirationDate(Output.of(expirationDate));
        }

        /**
         * @param hostName The host name of the domain. Changing this forces a new CDN FrontDoor Custom Domain to be created.
         * 
         * @return builder
         * 
         */
        public Builder hostName(@Nullable Output<String> hostName) {
            $.hostName = hostName;
            return this;
        }

        /**
         * @param hostName The host name of the domain. Changing this forces a new CDN FrontDoor Custom Domain to be created.
         * 
         * @return builder
         * 
         */
        public Builder hostName(String hostName) {
            return hostName(Output.of(hostName));
        }

        /**
         * @param name The name which should be used for this CDN FrontDoor Custom Domain. Possible values must be between 2 and 260 characters in length, must begin with a letter or number, end with a letter or number and contain only letters, numbers and hyphens. Changing this forces a new CDN FrontDoor Custom Domain to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name which should be used for this CDN FrontDoor Custom Domain. Possible values must be between 2 and 260 characters in length, must begin with a letter or number, end with a letter or number and contain only letters, numbers and hyphens. Changing this forces a new CDN FrontDoor Custom Domain to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param tls A `tls` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder tls(@Nullable Output<FrontdoorCustomEndpointTlsArgs> tls) {
            $.tls = tls;
            return this;
        }

        /**
         * @param tls A `tls` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder tls(FrontdoorCustomEndpointTlsArgs tls) {
            return tls(Output.of(tls));
        }

        /**
         * @param validationToken Challenge used for DNS TXT record or file based validation.
         * 
         * @return builder
         * 
         */
        public Builder validationToken(@Nullable Output<String> validationToken) {
            $.validationToken = validationToken;
            return this;
        }

        /**
         * @param validationToken Challenge used for DNS TXT record or file based validation.
         * 
         * @return builder
         * 
         */
        public Builder validationToken(String validationToken) {
            return validationToken(Output.of(validationToken));
        }

        public FrontdoorCustomEndpointState build() {
            return $;
        }
    }

}
