// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.appplatform.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SpringCloudStorageState extends com.pulumi.resources.ResourceArgs {

    public static final SpringCloudStorageState Empty = new SpringCloudStorageState();

    /**
     * The name which should be used for this Spring Cloud Storage. Changing this forces a new Spring Cloud Storage to be created.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name which should be used for this Spring Cloud Storage. Changing this forces a new Spring Cloud Storage to be created.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The ID of the Spring Cloud Service where the Spring Cloud Storage should exist. Changing this forces a new Spring Cloud Storage to be created.
     * 
     */
    @Import(name="springCloudServiceId")
    private @Nullable Output<String> springCloudServiceId;

    /**
     * @return The ID of the Spring Cloud Service where the Spring Cloud Storage should exist. Changing this forces a new Spring Cloud Storage to be created.
     * 
     */
    public Optional<Output<String>> springCloudServiceId() {
        return Optional.ofNullable(this.springCloudServiceId);
    }

    /**
     * The access key of the Azure Storage Account.
     * 
     */
    @Import(name="storageAccountKey")
    private @Nullable Output<String> storageAccountKey;

    /**
     * @return The access key of the Azure Storage Account.
     * 
     */
    public Optional<Output<String>> storageAccountKey() {
        return Optional.ofNullable(this.storageAccountKey);
    }

    /**
     * The account name of the Azure Storage Account.
     * 
     */
    @Import(name="storageAccountName")
    private @Nullable Output<String> storageAccountName;

    /**
     * @return The account name of the Azure Storage Account.
     * 
     */
    public Optional<Output<String>> storageAccountName() {
        return Optional.ofNullable(this.storageAccountName);
    }

    private SpringCloudStorageState() {}

    private SpringCloudStorageState(SpringCloudStorageState $) {
        this.name = $.name;
        this.springCloudServiceId = $.springCloudServiceId;
        this.storageAccountKey = $.storageAccountKey;
        this.storageAccountName = $.storageAccountName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SpringCloudStorageState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SpringCloudStorageState $;

        public Builder() {
            $ = new SpringCloudStorageState();
        }

        public Builder(SpringCloudStorageState defaults) {
            $ = new SpringCloudStorageState(Objects.requireNonNull(defaults));
        }

        /**
         * @param name The name which should be used for this Spring Cloud Storage. Changing this forces a new Spring Cloud Storage to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name which should be used for this Spring Cloud Storage. Changing this forces a new Spring Cloud Storage to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param springCloudServiceId The ID of the Spring Cloud Service where the Spring Cloud Storage should exist. Changing this forces a new Spring Cloud Storage to be created.
         * 
         * @return builder
         * 
         */
        public Builder springCloudServiceId(@Nullable Output<String> springCloudServiceId) {
            $.springCloudServiceId = springCloudServiceId;
            return this;
        }

        /**
         * @param springCloudServiceId The ID of the Spring Cloud Service where the Spring Cloud Storage should exist. Changing this forces a new Spring Cloud Storage to be created.
         * 
         * @return builder
         * 
         */
        public Builder springCloudServiceId(String springCloudServiceId) {
            return springCloudServiceId(Output.of(springCloudServiceId));
        }

        /**
         * @param storageAccountKey The access key of the Azure Storage Account.
         * 
         * @return builder
         * 
         */
        public Builder storageAccountKey(@Nullable Output<String> storageAccountKey) {
            $.storageAccountKey = storageAccountKey;
            return this;
        }

        /**
         * @param storageAccountKey The access key of the Azure Storage Account.
         * 
         * @return builder
         * 
         */
        public Builder storageAccountKey(String storageAccountKey) {
            return storageAccountKey(Output.of(storageAccountKey));
        }

        /**
         * @param storageAccountName The account name of the Azure Storage Account.
         * 
         * @return builder
         * 
         */
        public Builder storageAccountName(@Nullable Output<String> storageAccountName) {
            $.storageAccountName = storageAccountName;
            return this;
        }

        /**
         * @param storageAccountName The account name of the Azure Storage Account.
         * 
         * @return builder
         * 
         */
        public Builder storageAccountName(String storageAccountName) {
            return storageAccountName(Output.of(storageAccountName));
        }

        public SpringCloudStorageState build() {
            return $;
        }
    }

}
