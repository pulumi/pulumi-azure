// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.monitoring.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ActionGroupEventHubReceiverArgs extends com.pulumi.resources.ResourceArgs {

    public static final ActionGroupEventHubReceiverArgs Empty = new ActionGroupEventHubReceiverArgs();

    /**
     * The name of the specific Event Hub queue.
     * 
     */
    @Import(name="eventHubName", required=true)
    private Output<String> eventHubName;

    /**
     * @return The name of the specific Event Hub queue.
     * 
     */
    public Output<String> eventHubName() {
        return this.eventHubName;
    }

    /**
     * The namespace name of the Event Hub.
     * 
     */
    @Import(name="eventHubNamespace", required=true)
    private Output<String> eventHubNamespace;

    /**
     * @return The namespace name of the Event Hub.
     * 
     */
    public Output<String> eventHubNamespace() {
        return this.eventHubNamespace;
    }

    /**
     * The name of the EventHub Receiver, must be unique within action group.
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    /**
     * @return The name of the EventHub Receiver, must be unique within action group.
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    /**
     * The ID for the subscription containing this Event Hub. Default to the subscription ID of the Action Group.
     * 
     */
    @Import(name="subscriptionId")
    private @Nullable Output<String> subscriptionId;

    /**
     * @return The ID for the subscription containing this Event Hub. Default to the subscription ID of the Action Group.
     * 
     */
    public Optional<Output<String>> subscriptionId() {
        return Optional.ofNullable(this.subscriptionId);
    }

    /**
     * The Tenant ID for the subscription containing this Event Hub.
     * 
     */
    @Import(name="tenantId")
    private @Nullable Output<String> tenantId;

    /**
     * @return The Tenant ID for the subscription containing this Event Hub.
     * 
     */
    public Optional<Output<String>> tenantId() {
        return Optional.ofNullable(this.tenantId);
    }

    /**
     * Indicates whether to use common alert schema.
     * 
     */
    @Import(name="useCommonAlertSchema")
    private @Nullable Output<Boolean> useCommonAlertSchema;

    /**
     * @return Indicates whether to use common alert schema.
     * 
     */
    public Optional<Output<Boolean>> useCommonAlertSchema() {
        return Optional.ofNullable(this.useCommonAlertSchema);
    }

    private ActionGroupEventHubReceiverArgs() {}

    private ActionGroupEventHubReceiverArgs(ActionGroupEventHubReceiverArgs $) {
        this.eventHubName = $.eventHubName;
        this.eventHubNamespace = $.eventHubNamespace;
        this.name = $.name;
        this.subscriptionId = $.subscriptionId;
        this.tenantId = $.tenantId;
        this.useCommonAlertSchema = $.useCommonAlertSchema;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ActionGroupEventHubReceiverArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ActionGroupEventHubReceiverArgs $;

        public Builder() {
            $ = new ActionGroupEventHubReceiverArgs();
        }

        public Builder(ActionGroupEventHubReceiverArgs defaults) {
            $ = new ActionGroupEventHubReceiverArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param eventHubName The name of the specific Event Hub queue.
         * 
         * @return builder
         * 
         */
        public Builder eventHubName(Output<String> eventHubName) {
            $.eventHubName = eventHubName;
            return this;
        }

        /**
         * @param eventHubName The name of the specific Event Hub queue.
         * 
         * @return builder
         * 
         */
        public Builder eventHubName(String eventHubName) {
            return eventHubName(Output.of(eventHubName));
        }

        /**
         * @param eventHubNamespace The namespace name of the Event Hub.
         * 
         * @return builder
         * 
         */
        public Builder eventHubNamespace(Output<String> eventHubNamespace) {
            $.eventHubNamespace = eventHubNamespace;
            return this;
        }

        /**
         * @param eventHubNamespace The namespace name of the Event Hub.
         * 
         * @return builder
         * 
         */
        public Builder eventHubNamespace(String eventHubNamespace) {
            return eventHubNamespace(Output.of(eventHubNamespace));
        }

        /**
         * @param name The name of the EventHub Receiver, must be unique within action group.
         * 
         * @return builder
         * 
         */
        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the EventHub Receiver, must be unique within action group.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param subscriptionId The ID for the subscription containing this Event Hub. Default to the subscription ID of the Action Group.
         * 
         * @return builder
         * 
         */
        public Builder subscriptionId(@Nullable Output<String> subscriptionId) {
            $.subscriptionId = subscriptionId;
            return this;
        }

        /**
         * @param subscriptionId The ID for the subscription containing this Event Hub. Default to the subscription ID of the Action Group.
         * 
         * @return builder
         * 
         */
        public Builder subscriptionId(String subscriptionId) {
            return subscriptionId(Output.of(subscriptionId));
        }

        /**
         * @param tenantId The Tenant ID for the subscription containing this Event Hub.
         * 
         * @return builder
         * 
         */
        public Builder tenantId(@Nullable Output<String> tenantId) {
            $.tenantId = tenantId;
            return this;
        }

        /**
         * @param tenantId The Tenant ID for the subscription containing this Event Hub.
         * 
         * @return builder
         * 
         */
        public Builder tenantId(String tenantId) {
            return tenantId(Output.of(tenantId));
        }

        /**
         * @param useCommonAlertSchema Indicates whether to use common alert schema.
         * 
         * @return builder
         * 
         */
        public Builder useCommonAlertSchema(@Nullable Output<Boolean> useCommonAlertSchema) {
            $.useCommonAlertSchema = useCommonAlertSchema;
            return this;
        }

        /**
         * @param useCommonAlertSchema Indicates whether to use common alert schema.
         * 
         * @return builder
         * 
         */
        public Builder useCommonAlertSchema(Boolean useCommonAlertSchema) {
            return useCommonAlertSchema(Output.of(useCommonAlertSchema));
        }

        public ActionGroupEventHubReceiverArgs build() {
            if ($.eventHubName == null) {
                throw new MissingRequiredPropertyException("ActionGroupEventHubReceiverArgs", "eventHubName");
            }
            if ($.eventHubNamespace == null) {
                throw new MissingRequiredPropertyException("ActionGroupEventHubReceiverArgs", "eventHubNamespace");
            }
            if ($.name == null) {
                throw new MissingRequiredPropertyException("ActionGroupEventHubReceiverArgs", "name");
            }
            return $;
        }
    }

}
