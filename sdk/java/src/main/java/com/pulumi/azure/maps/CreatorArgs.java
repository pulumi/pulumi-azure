// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.maps;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CreatorArgs extends com.pulumi.resources.ResourceArgs {

    public static final CreatorArgs Empty = new CreatorArgs();

    /**
     * The Azure Region where the Azure Maps Creator should exist. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="location")
    private @Nullable Output<String> location;

    /**
     * @return The Azure Region where the Azure Maps Creator should exist. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * The ID of the Azure Maps Creator. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="mapsAccountId", required=true)
    private Output<String> mapsAccountId;

    /**
     * @return The ID of the Azure Maps Creator. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> mapsAccountId() {
        return this.mapsAccountId;
    }

    /**
     * The name of the Azure Maps Creator. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the Azure Maps Creator. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The storage units to be allocated. Integer values from 1 to 100, inclusive.
     * 
     */
    @Import(name="storageUnits", required=true)
    private Output<Integer> storageUnits;

    /**
     * @return The storage units to be allocated. Integer values from 1 to 100, inclusive.
     * 
     */
    public Output<Integer> storageUnits() {
        return this.storageUnits;
    }

    /**
     * A mapping of tags which should be assigned to the Azure Maps Creator.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return A mapping of tags which should be assigned to the Azure Maps Creator.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private CreatorArgs() {}

    private CreatorArgs(CreatorArgs $) {
        this.location = $.location;
        this.mapsAccountId = $.mapsAccountId;
        this.name = $.name;
        this.storageUnits = $.storageUnits;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CreatorArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CreatorArgs $;

        public Builder() {
            $ = new CreatorArgs();
        }

        public Builder(CreatorArgs defaults) {
            $ = new CreatorArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param location The Azure Region where the Azure Maps Creator should exist. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location The Azure Region where the Azure Maps Creator should exist. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param mapsAccountId The ID of the Azure Maps Creator. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder mapsAccountId(Output<String> mapsAccountId) {
            $.mapsAccountId = mapsAccountId;
            return this;
        }

        /**
         * @param mapsAccountId The ID of the Azure Maps Creator. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder mapsAccountId(String mapsAccountId) {
            return mapsAccountId(Output.of(mapsAccountId));
        }

        /**
         * @param name The name of the Azure Maps Creator. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the Azure Maps Creator. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param storageUnits The storage units to be allocated. Integer values from 1 to 100, inclusive.
         * 
         * @return builder
         * 
         */
        public Builder storageUnits(Output<Integer> storageUnits) {
            $.storageUnits = storageUnits;
            return this;
        }

        /**
         * @param storageUnits The storage units to be allocated. Integer values from 1 to 100, inclusive.
         * 
         * @return builder
         * 
         */
        public Builder storageUnits(Integer storageUnits) {
            return storageUnits(Output.of(storageUnits));
        }

        /**
         * @param tags A mapping of tags which should be assigned to the Azure Maps Creator.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags A mapping of tags which should be assigned to the Azure Maps Creator.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public CreatorArgs build() {
            if ($.mapsAccountId == null) {
                throw new MissingRequiredPropertyException("CreatorArgs", "mapsAccountId");
            }
            if ($.storageUnits == null) {
                throw new MissingRequiredPropertyException("CreatorArgs", "storageUnits");
            }
            return $;
        }
    }

}
