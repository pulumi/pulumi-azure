// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.signalr.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;


public final class ServiceSkuArgs extends com.pulumi.resources.ResourceArgs {

    public static final ServiceSkuArgs Empty = new ServiceSkuArgs();

    /**
     * Specifies the number of units associated with this SignalR service. Valid values are `1`, `2`, `3`, `4`, `5`, `6`, `7`, `8`, `9`, `10`, `20`, `30`, `40`, `50`, `60`, `70`, `80`, `90` and `100`.
     * 
     */
    @Import(name="capacity", required=true)
    private Output<Integer> capacity;

    /**
     * @return Specifies the number of units associated with this SignalR service. Valid values are `1`, `2`, `3`, `4`, `5`, `6`, `7`, `8`, `9`, `10`, `20`, `30`, `40`, `50`, `60`, `70`, `80`, `90` and `100`.
     * 
     */
    public Output<Integer> capacity() {
        return this.capacity;
    }

    /**
     * Specifies which tier to use. Valid values are `Free_F1`, `Standard_S1` and `Premium_P1`.
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    /**
     * @return Specifies which tier to use. Valid values are `Free_F1`, `Standard_S1` and `Premium_P1`.
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    private ServiceSkuArgs() {}

    private ServiceSkuArgs(ServiceSkuArgs $) {
        this.capacity = $.capacity;
        this.name = $.name;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ServiceSkuArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ServiceSkuArgs $;

        public Builder() {
            $ = new ServiceSkuArgs();
        }

        public Builder(ServiceSkuArgs defaults) {
            $ = new ServiceSkuArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param capacity Specifies the number of units associated with this SignalR service. Valid values are `1`, `2`, `3`, `4`, `5`, `6`, `7`, `8`, `9`, `10`, `20`, `30`, `40`, `50`, `60`, `70`, `80`, `90` and `100`.
         * 
         * @return builder
         * 
         */
        public Builder capacity(Output<Integer> capacity) {
            $.capacity = capacity;
            return this;
        }

        /**
         * @param capacity Specifies the number of units associated with this SignalR service. Valid values are `1`, `2`, `3`, `4`, `5`, `6`, `7`, `8`, `9`, `10`, `20`, `30`, `40`, `50`, `60`, `70`, `80`, `90` and `100`.
         * 
         * @return builder
         * 
         */
        public Builder capacity(Integer capacity) {
            return capacity(Output.of(capacity));
        }

        /**
         * @param name Specifies which tier to use. Valid values are `Free_F1`, `Standard_S1` and `Premium_P1`.
         * 
         * @return builder
         * 
         */
        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Specifies which tier to use. Valid values are `Free_F1`, `Standard_S1` and `Premium_P1`.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        public ServiceSkuArgs build() {
            if ($.capacity == null) {
                throw new MissingRequiredPropertyException("ServiceSkuArgs", "capacity");
            }
            if ($.name == null) {
                throw new MissingRequiredPropertyException("ServiceSkuArgs", "name");
            }
            return $;
        }
    }

}
