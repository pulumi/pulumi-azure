// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.appservice.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class AppServiceBackupSchedule {
    /**
     * @return Sets how often the backup should be executed.
     * 
     */
    private Integer frequencyInterval;
    /**
     * @return Sets the unit of time for how often the backup should be executed. Possible values are `Day` or `Hour`.
     * 
     */
    private String frequencyUnit;
    /**
     * @return Should at least one backup always be kept in the Storage Account by the Retention Policy, regardless of how old it is?
     * 
     */
    private @Nullable Boolean keepAtLeastOneBackup;
    /**
     * @return Specifies the number of days after which Backups should be deleted. Defaults to `30`.
     * 
     */
    private @Nullable Integer retentionPeriodInDays;
    /**
     * @return Sets when the schedule should start working.
     * 
     */
    private @Nullable String startTime;

    private AppServiceBackupSchedule() {}
    /**
     * @return Sets how often the backup should be executed.
     * 
     */
    public Integer frequencyInterval() {
        return this.frequencyInterval;
    }
    /**
     * @return Sets the unit of time for how often the backup should be executed. Possible values are `Day` or `Hour`.
     * 
     */
    public String frequencyUnit() {
        return this.frequencyUnit;
    }
    /**
     * @return Should at least one backup always be kept in the Storage Account by the Retention Policy, regardless of how old it is?
     * 
     */
    public Optional<Boolean> keepAtLeastOneBackup() {
        return Optional.ofNullable(this.keepAtLeastOneBackup);
    }
    /**
     * @return Specifies the number of days after which Backups should be deleted. Defaults to `30`.
     * 
     */
    public Optional<Integer> retentionPeriodInDays() {
        return Optional.ofNullable(this.retentionPeriodInDays);
    }
    /**
     * @return Sets when the schedule should start working.
     * 
     */
    public Optional<String> startTime() {
        return Optional.ofNullable(this.startTime);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AppServiceBackupSchedule defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer frequencyInterval;
        private String frequencyUnit;
        private @Nullable Boolean keepAtLeastOneBackup;
        private @Nullable Integer retentionPeriodInDays;
        private @Nullable String startTime;
        public Builder() {}
        public Builder(AppServiceBackupSchedule defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.frequencyInterval = defaults.frequencyInterval;
    	      this.frequencyUnit = defaults.frequencyUnit;
    	      this.keepAtLeastOneBackup = defaults.keepAtLeastOneBackup;
    	      this.retentionPeriodInDays = defaults.retentionPeriodInDays;
    	      this.startTime = defaults.startTime;
        }

        @CustomType.Setter
        public Builder frequencyInterval(Integer frequencyInterval) {
            if (frequencyInterval == null) {
              throw new MissingRequiredPropertyException("AppServiceBackupSchedule", "frequencyInterval");
            }
            this.frequencyInterval = frequencyInterval;
            return this;
        }
        @CustomType.Setter
        public Builder frequencyUnit(String frequencyUnit) {
            if (frequencyUnit == null) {
              throw new MissingRequiredPropertyException("AppServiceBackupSchedule", "frequencyUnit");
            }
            this.frequencyUnit = frequencyUnit;
            return this;
        }
        @CustomType.Setter
        public Builder keepAtLeastOneBackup(@Nullable Boolean keepAtLeastOneBackup) {

            this.keepAtLeastOneBackup = keepAtLeastOneBackup;
            return this;
        }
        @CustomType.Setter
        public Builder retentionPeriodInDays(@Nullable Integer retentionPeriodInDays) {

            this.retentionPeriodInDays = retentionPeriodInDays;
            return this;
        }
        @CustomType.Setter
        public Builder startTime(@Nullable String startTime) {

            this.startTime = startTime;
            return this;
        }
        public AppServiceBackupSchedule build() {
            final var _resultValue = new AppServiceBackupSchedule();
            _resultValue.frequencyInterval = frequencyInterval;
            _resultValue.frequencyUnit = frequencyUnit;
            _resultValue.keepAtLeastOneBackup = keepAtLeastOneBackup;
            _resultValue.retentionPeriodInDays = retentionPeriodInDays;
            _resultValue.startTime = startTime;
            return _resultValue;
        }
    }
}
