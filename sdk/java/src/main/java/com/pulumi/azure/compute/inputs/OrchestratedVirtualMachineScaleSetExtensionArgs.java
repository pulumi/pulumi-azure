// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.compute.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class OrchestratedVirtualMachineScaleSetExtensionArgs extends com.pulumi.resources.ResourceArgs {

    public static final OrchestratedVirtualMachineScaleSetExtensionArgs Empty = new OrchestratedVirtualMachineScaleSetExtensionArgs();

    @Import(name="autoUpgradeMinorVersionEnabled")
    private @Nullable Output<Boolean> autoUpgradeMinorVersionEnabled;

    public Optional<Output<Boolean>> autoUpgradeMinorVersionEnabled() {
        return Optional.ofNullable(this.autoUpgradeMinorVersionEnabled);
    }

    /**
     * An ordered list of Extension names which Orchestrated Virtual Machine Scale Set should provision after VM creation.
     * 
     */
    @Import(name="extensionsToProvisionAfterVmCreations")
    private @Nullable Output<List<String>> extensionsToProvisionAfterVmCreations;

    /**
     * @return An ordered list of Extension names which Orchestrated Virtual Machine Scale Set should provision after VM creation.
     * 
     */
    public Optional<Output<List<String>>> extensionsToProvisionAfterVmCreations() {
        return Optional.ofNullable(this.extensionsToProvisionAfterVmCreations);
    }

    @Import(name="forceExtensionExecutionOnChange")
    private @Nullable Output<String> forceExtensionExecutionOnChange;

    public Optional<Output<String>> forceExtensionExecutionOnChange() {
        return Optional.ofNullable(this.forceExtensionExecutionOnChange);
    }

    /**
     * The name of the Orchestrated Virtual Machine Scale Set. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    /**
     * @return The name of the Orchestrated Virtual Machine Scale Set. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    @Import(name="protectedSettings")
    private @Nullable Output<String> protectedSettings;

    public Optional<Output<String>> protectedSettings() {
        return Optional.ofNullable(this.protectedSettings);
    }

    @Import(name="publisher", required=true)
    private Output<String> publisher;

    public Output<String> publisher() {
        return this.publisher;
    }

    @Import(name="settings")
    private @Nullable Output<String> settings;

    public Optional<Output<String>> settings() {
        return Optional.ofNullable(this.settings);
    }

    @Import(name="type", required=true)
    private Output<String> type;

    public Output<String> type() {
        return this.type;
    }

    @Import(name="typeHandlerVersion", required=true)
    private Output<String> typeHandlerVersion;

    public Output<String> typeHandlerVersion() {
        return this.typeHandlerVersion;
    }

    private OrchestratedVirtualMachineScaleSetExtensionArgs() {}

    private OrchestratedVirtualMachineScaleSetExtensionArgs(OrchestratedVirtualMachineScaleSetExtensionArgs $) {
        this.autoUpgradeMinorVersionEnabled = $.autoUpgradeMinorVersionEnabled;
        this.extensionsToProvisionAfterVmCreations = $.extensionsToProvisionAfterVmCreations;
        this.forceExtensionExecutionOnChange = $.forceExtensionExecutionOnChange;
        this.name = $.name;
        this.protectedSettings = $.protectedSettings;
        this.publisher = $.publisher;
        this.settings = $.settings;
        this.type = $.type;
        this.typeHandlerVersion = $.typeHandlerVersion;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(OrchestratedVirtualMachineScaleSetExtensionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private OrchestratedVirtualMachineScaleSetExtensionArgs $;

        public Builder() {
            $ = new OrchestratedVirtualMachineScaleSetExtensionArgs();
        }

        public Builder(OrchestratedVirtualMachineScaleSetExtensionArgs defaults) {
            $ = new OrchestratedVirtualMachineScaleSetExtensionArgs(Objects.requireNonNull(defaults));
        }

        public Builder autoUpgradeMinorVersionEnabled(@Nullable Output<Boolean> autoUpgradeMinorVersionEnabled) {
            $.autoUpgradeMinorVersionEnabled = autoUpgradeMinorVersionEnabled;
            return this;
        }

        public Builder autoUpgradeMinorVersionEnabled(Boolean autoUpgradeMinorVersionEnabled) {
            return autoUpgradeMinorVersionEnabled(Output.of(autoUpgradeMinorVersionEnabled));
        }

        /**
         * @param extensionsToProvisionAfterVmCreations An ordered list of Extension names which Orchestrated Virtual Machine Scale Set should provision after VM creation.
         * 
         * @return builder
         * 
         */
        public Builder extensionsToProvisionAfterVmCreations(@Nullable Output<List<String>> extensionsToProvisionAfterVmCreations) {
            $.extensionsToProvisionAfterVmCreations = extensionsToProvisionAfterVmCreations;
            return this;
        }

        /**
         * @param extensionsToProvisionAfterVmCreations An ordered list of Extension names which Orchestrated Virtual Machine Scale Set should provision after VM creation.
         * 
         * @return builder
         * 
         */
        public Builder extensionsToProvisionAfterVmCreations(List<String> extensionsToProvisionAfterVmCreations) {
            return extensionsToProvisionAfterVmCreations(Output.of(extensionsToProvisionAfterVmCreations));
        }

        /**
         * @param extensionsToProvisionAfterVmCreations An ordered list of Extension names which Orchestrated Virtual Machine Scale Set should provision after VM creation.
         * 
         * @return builder
         * 
         */
        public Builder extensionsToProvisionAfterVmCreations(String... extensionsToProvisionAfterVmCreations) {
            return extensionsToProvisionAfterVmCreations(List.of(extensionsToProvisionAfterVmCreations));
        }

        public Builder forceExtensionExecutionOnChange(@Nullable Output<String> forceExtensionExecutionOnChange) {
            $.forceExtensionExecutionOnChange = forceExtensionExecutionOnChange;
            return this;
        }

        public Builder forceExtensionExecutionOnChange(String forceExtensionExecutionOnChange) {
            return forceExtensionExecutionOnChange(Output.of(forceExtensionExecutionOnChange));
        }

        /**
         * @param name The name of the Orchestrated Virtual Machine Scale Set. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the Orchestrated Virtual Machine Scale Set. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder protectedSettings(@Nullable Output<String> protectedSettings) {
            $.protectedSettings = protectedSettings;
            return this;
        }

        public Builder protectedSettings(String protectedSettings) {
            return protectedSettings(Output.of(protectedSettings));
        }

        public Builder publisher(Output<String> publisher) {
            $.publisher = publisher;
            return this;
        }

        public Builder publisher(String publisher) {
            return publisher(Output.of(publisher));
        }

        public Builder settings(@Nullable Output<String> settings) {
            $.settings = settings;
            return this;
        }

        public Builder settings(String settings) {
            return settings(Output.of(settings));
        }

        public Builder type(Output<String> type) {
            $.type = type;
            return this;
        }

        public Builder type(String type) {
            return type(Output.of(type));
        }

        public Builder typeHandlerVersion(Output<String> typeHandlerVersion) {
            $.typeHandlerVersion = typeHandlerVersion;
            return this;
        }

        public Builder typeHandlerVersion(String typeHandlerVersion) {
            return typeHandlerVersion(Output.of(typeHandlerVersion));
        }

        public OrchestratedVirtualMachineScaleSetExtensionArgs build() {
            $.name = Objects.requireNonNull($.name, "expected parameter 'name' to be non-null");
            $.publisher = Objects.requireNonNull($.publisher, "expected parameter 'publisher' to be non-null");
            $.type = Objects.requireNonNull($.type, "expected parameter 'type' to be non-null");
            $.typeHandlerVersion = Objects.requireNonNull($.typeHandlerVersion, "expected parameter 'typeHandlerVersion' to be non-null");
            return $;
        }
    }

}
