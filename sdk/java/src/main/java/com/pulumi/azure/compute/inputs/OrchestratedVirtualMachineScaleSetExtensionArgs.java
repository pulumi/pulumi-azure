// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.compute.inputs;

import com.pulumi.azure.compute.inputs.OrchestratedVirtualMachineScaleSetExtensionProtectedSettingsFromKeyVaultArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class OrchestratedVirtualMachineScaleSetExtensionArgs extends com.pulumi.resources.ResourceArgs {

    public static final OrchestratedVirtualMachineScaleSetExtensionArgs Empty = new OrchestratedVirtualMachineScaleSetExtensionArgs();

    /**
     * Should the latest version of the Extension be used at Deployment Time, if one is available? This won&#39;t auto-update the extension on existing installation. Defaults to `true`.
     * 
     */
    @Import(name="autoUpgradeMinorVersionEnabled")
    private @Nullable Output<Boolean> autoUpgradeMinorVersionEnabled;

    /**
     * @return Should the latest version of the Extension be used at Deployment Time, if one is available? This won&#39;t auto-update the extension on existing installation. Defaults to `true`.
     * 
     */
    public Optional<Output<Boolean>> autoUpgradeMinorVersionEnabled() {
        return Optional.ofNullable(this.autoUpgradeMinorVersionEnabled);
    }

    /**
     * An ordered list of Extension names which Orchestrated Virtual Machine Scale Set should provision after VM creation.
     * 
     */
    @Import(name="extensionsToProvisionAfterVmCreations")
    private @Nullable Output<List<String>> extensionsToProvisionAfterVmCreations;

    /**
     * @return An ordered list of Extension names which Orchestrated Virtual Machine Scale Set should provision after VM creation.
     * 
     */
    public Optional<Output<List<String>>> extensionsToProvisionAfterVmCreations() {
        return Optional.ofNullable(this.extensionsToProvisionAfterVmCreations);
    }

    /**
     * Should failures from the extension be suppressed? Possible values are `true` or `false`.
     * 
     * &gt; **NOTE:** Operational failures such as not connecting to the VM will not be suppressed regardless of the `failure_suppression_enabled` value.
     * 
     */
    @Import(name="failureSuppressionEnabled")
    private @Nullable Output<Boolean> failureSuppressionEnabled;

    /**
     * @return Should failures from the extension be suppressed? Possible values are `true` or `false`.
     * 
     * &gt; **NOTE:** Operational failures such as not connecting to the VM will not be suppressed regardless of the `failure_suppression_enabled` value.
     * 
     */
    public Optional<Output<Boolean>> failureSuppressionEnabled() {
        return Optional.ofNullable(this.failureSuppressionEnabled);
    }

    /**
     * A value which, when different to the previous value can be used to force-run the Extension even if the Extension Configuration hasn&#39;t changed.
     * 
     */
    @Import(name="forceExtensionExecutionOnChange")
    private @Nullable Output<String> forceExtensionExecutionOnChange;

    /**
     * @return A value which, when different to the previous value can be used to force-run the Extension even if the Extension Configuration hasn&#39;t changed.
     * 
     */
    public Optional<Output<String>> forceExtensionExecutionOnChange() {
        return Optional.ofNullable(this.forceExtensionExecutionOnChange);
    }

    /**
     * The name for the Virtual Machine Scale Set Extension.
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    /**
     * @return The name for the Virtual Machine Scale Set Extension.
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    /**
     * A JSON String which specifies Sensitive Settings (such as Passwords) for the Extension.
     * 
     * &gt; **NOTE:** Keys within the `protected_settings` block are notoriously case-sensitive, where the casing required (e.g. `TitleCase` vs `snakeCase`) depends on the Extension being used. Please refer to the documentation for the specific Orchestrated Virtual Machine Extension you&#39;re looking to use for more information.
     * 
     */
    @Import(name="protectedSettings")
    private @Nullable Output<String> protectedSettings;

    /**
     * @return A JSON String which specifies Sensitive Settings (such as Passwords) for the Extension.
     * 
     * &gt; **NOTE:** Keys within the `protected_settings` block are notoriously case-sensitive, where the casing required (e.g. `TitleCase` vs `snakeCase`) depends on the Extension being used. Please refer to the documentation for the specific Orchestrated Virtual Machine Extension you&#39;re looking to use for more information.
     * 
     */
    public Optional<Output<String>> protectedSettings() {
        return Optional.ofNullable(this.protectedSettings);
    }

    /**
     * A `protected_settings_from_key_vault` block as defined below.
     * 
     * &gt; **Note:** `protected_settings_from_key_vault` cannot be used with `protected_settings`
     * 
     */
    @Import(name="protectedSettingsFromKeyVault")
    private @Nullable Output<OrchestratedVirtualMachineScaleSetExtensionProtectedSettingsFromKeyVaultArgs> protectedSettingsFromKeyVault;

    /**
     * @return A `protected_settings_from_key_vault` block as defined below.
     * 
     * &gt; **Note:** `protected_settings_from_key_vault` cannot be used with `protected_settings`
     * 
     */
    public Optional<Output<OrchestratedVirtualMachineScaleSetExtensionProtectedSettingsFromKeyVaultArgs>> protectedSettingsFromKeyVault() {
        return Optional.ofNullable(this.protectedSettingsFromKeyVault);
    }

    /**
     * Specifies the Publisher of the Extension.
     * 
     */
    @Import(name="publisher", required=true)
    private Output<String> publisher;

    /**
     * @return Specifies the Publisher of the Extension.
     * 
     */
    public Output<String> publisher() {
        return this.publisher;
    }

    /**
     * A JSON String which specifies Settings for the Extension.
     * 
     */
    @Import(name="settings")
    private @Nullable Output<String> settings;

    /**
     * @return A JSON String which specifies Settings for the Extension.
     * 
     */
    public Optional<Output<String>> settings() {
        return Optional.ofNullable(this.settings);
    }

    /**
     * Specifies the Type of the Extension.
     * 
     */
    @Import(name="type", required=true)
    private Output<String> type;

    /**
     * @return Specifies the Type of the Extension.
     * 
     */
    public Output<String> type() {
        return this.type;
    }

    /**
     * Specifies the version of the extension to use, available versions can be found using the Azure CLI.
     * 
     */
    @Import(name="typeHandlerVersion", required=true)
    private Output<String> typeHandlerVersion;

    /**
     * @return Specifies the version of the extension to use, available versions can be found using the Azure CLI.
     * 
     */
    public Output<String> typeHandlerVersion() {
        return this.typeHandlerVersion;
    }

    private OrchestratedVirtualMachineScaleSetExtensionArgs() {}

    private OrchestratedVirtualMachineScaleSetExtensionArgs(OrchestratedVirtualMachineScaleSetExtensionArgs $) {
        this.autoUpgradeMinorVersionEnabled = $.autoUpgradeMinorVersionEnabled;
        this.extensionsToProvisionAfterVmCreations = $.extensionsToProvisionAfterVmCreations;
        this.failureSuppressionEnabled = $.failureSuppressionEnabled;
        this.forceExtensionExecutionOnChange = $.forceExtensionExecutionOnChange;
        this.name = $.name;
        this.protectedSettings = $.protectedSettings;
        this.protectedSettingsFromKeyVault = $.protectedSettingsFromKeyVault;
        this.publisher = $.publisher;
        this.settings = $.settings;
        this.type = $.type;
        this.typeHandlerVersion = $.typeHandlerVersion;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(OrchestratedVirtualMachineScaleSetExtensionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private OrchestratedVirtualMachineScaleSetExtensionArgs $;

        public Builder() {
            $ = new OrchestratedVirtualMachineScaleSetExtensionArgs();
        }

        public Builder(OrchestratedVirtualMachineScaleSetExtensionArgs defaults) {
            $ = new OrchestratedVirtualMachineScaleSetExtensionArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param autoUpgradeMinorVersionEnabled Should the latest version of the Extension be used at Deployment Time, if one is available? This won&#39;t auto-update the extension on existing installation. Defaults to `true`.
         * 
         * @return builder
         * 
         */
        public Builder autoUpgradeMinorVersionEnabled(@Nullable Output<Boolean> autoUpgradeMinorVersionEnabled) {
            $.autoUpgradeMinorVersionEnabled = autoUpgradeMinorVersionEnabled;
            return this;
        }

        /**
         * @param autoUpgradeMinorVersionEnabled Should the latest version of the Extension be used at Deployment Time, if one is available? This won&#39;t auto-update the extension on existing installation. Defaults to `true`.
         * 
         * @return builder
         * 
         */
        public Builder autoUpgradeMinorVersionEnabled(Boolean autoUpgradeMinorVersionEnabled) {
            return autoUpgradeMinorVersionEnabled(Output.of(autoUpgradeMinorVersionEnabled));
        }

        /**
         * @param extensionsToProvisionAfterVmCreations An ordered list of Extension names which Orchestrated Virtual Machine Scale Set should provision after VM creation.
         * 
         * @return builder
         * 
         */
        public Builder extensionsToProvisionAfterVmCreations(@Nullable Output<List<String>> extensionsToProvisionAfterVmCreations) {
            $.extensionsToProvisionAfterVmCreations = extensionsToProvisionAfterVmCreations;
            return this;
        }

        /**
         * @param extensionsToProvisionAfterVmCreations An ordered list of Extension names which Orchestrated Virtual Machine Scale Set should provision after VM creation.
         * 
         * @return builder
         * 
         */
        public Builder extensionsToProvisionAfterVmCreations(List<String> extensionsToProvisionAfterVmCreations) {
            return extensionsToProvisionAfterVmCreations(Output.of(extensionsToProvisionAfterVmCreations));
        }

        /**
         * @param extensionsToProvisionAfterVmCreations An ordered list of Extension names which Orchestrated Virtual Machine Scale Set should provision after VM creation.
         * 
         * @return builder
         * 
         */
        public Builder extensionsToProvisionAfterVmCreations(String... extensionsToProvisionAfterVmCreations) {
            return extensionsToProvisionAfterVmCreations(List.of(extensionsToProvisionAfterVmCreations));
        }

        /**
         * @param failureSuppressionEnabled Should failures from the extension be suppressed? Possible values are `true` or `false`.
         * 
         * &gt; **NOTE:** Operational failures such as not connecting to the VM will not be suppressed regardless of the `failure_suppression_enabled` value.
         * 
         * @return builder
         * 
         */
        public Builder failureSuppressionEnabled(@Nullable Output<Boolean> failureSuppressionEnabled) {
            $.failureSuppressionEnabled = failureSuppressionEnabled;
            return this;
        }

        /**
         * @param failureSuppressionEnabled Should failures from the extension be suppressed? Possible values are `true` or `false`.
         * 
         * &gt; **NOTE:** Operational failures such as not connecting to the VM will not be suppressed regardless of the `failure_suppression_enabled` value.
         * 
         * @return builder
         * 
         */
        public Builder failureSuppressionEnabled(Boolean failureSuppressionEnabled) {
            return failureSuppressionEnabled(Output.of(failureSuppressionEnabled));
        }

        /**
         * @param forceExtensionExecutionOnChange A value which, when different to the previous value can be used to force-run the Extension even if the Extension Configuration hasn&#39;t changed.
         * 
         * @return builder
         * 
         */
        public Builder forceExtensionExecutionOnChange(@Nullable Output<String> forceExtensionExecutionOnChange) {
            $.forceExtensionExecutionOnChange = forceExtensionExecutionOnChange;
            return this;
        }

        /**
         * @param forceExtensionExecutionOnChange A value which, when different to the previous value can be used to force-run the Extension even if the Extension Configuration hasn&#39;t changed.
         * 
         * @return builder
         * 
         */
        public Builder forceExtensionExecutionOnChange(String forceExtensionExecutionOnChange) {
            return forceExtensionExecutionOnChange(Output.of(forceExtensionExecutionOnChange));
        }

        /**
         * @param name The name for the Virtual Machine Scale Set Extension.
         * 
         * @return builder
         * 
         */
        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name for the Virtual Machine Scale Set Extension.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param protectedSettings A JSON String which specifies Sensitive Settings (such as Passwords) for the Extension.
         * 
         * &gt; **NOTE:** Keys within the `protected_settings` block are notoriously case-sensitive, where the casing required (e.g. `TitleCase` vs `snakeCase`) depends on the Extension being used. Please refer to the documentation for the specific Orchestrated Virtual Machine Extension you&#39;re looking to use for more information.
         * 
         * @return builder
         * 
         */
        public Builder protectedSettings(@Nullable Output<String> protectedSettings) {
            $.protectedSettings = protectedSettings;
            return this;
        }

        /**
         * @param protectedSettings A JSON String which specifies Sensitive Settings (such as Passwords) for the Extension.
         * 
         * &gt; **NOTE:** Keys within the `protected_settings` block are notoriously case-sensitive, where the casing required (e.g. `TitleCase` vs `snakeCase`) depends on the Extension being used. Please refer to the documentation for the specific Orchestrated Virtual Machine Extension you&#39;re looking to use for more information.
         * 
         * @return builder
         * 
         */
        public Builder protectedSettings(String protectedSettings) {
            return protectedSettings(Output.of(protectedSettings));
        }

        /**
         * @param protectedSettingsFromKeyVault A `protected_settings_from_key_vault` block as defined below.
         * 
         * &gt; **Note:** `protected_settings_from_key_vault` cannot be used with `protected_settings`
         * 
         * @return builder
         * 
         */
        public Builder protectedSettingsFromKeyVault(@Nullable Output<OrchestratedVirtualMachineScaleSetExtensionProtectedSettingsFromKeyVaultArgs> protectedSettingsFromKeyVault) {
            $.protectedSettingsFromKeyVault = protectedSettingsFromKeyVault;
            return this;
        }

        /**
         * @param protectedSettingsFromKeyVault A `protected_settings_from_key_vault` block as defined below.
         * 
         * &gt; **Note:** `protected_settings_from_key_vault` cannot be used with `protected_settings`
         * 
         * @return builder
         * 
         */
        public Builder protectedSettingsFromKeyVault(OrchestratedVirtualMachineScaleSetExtensionProtectedSettingsFromKeyVaultArgs protectedSettingsFromKeyVault) {
            return protectedSettingsFromKeyVault(Output.of(protectedSettingsFromKeyVault));
        }

        /**
         * @param publisher Specifies the Publisher of the Extension.
         * 
         * @return builder
         * 
         */
        public Builder publisher(Output<String> publisher) {
            $.publisher = publisher;
            return this;
        }

        /**
         * @param publisher Specifies the Publisher of the Extension.
         * 
         * @return builder
         * 
         */
        public Builder publisher(String publisher) {
            return publisher(Output.of(publisher));
        }

        /**
         * @param settings A JSON String which specifies Settings for the Extension.
         * 
         * @return builder
         * 
         */
        public Builder settings(@Nullable Output<String> settings) {
            $.settings = settings;
            return this;
        }

        /**
         * @param settings A JSON String which specifies Settings for the Extension.
         * 
         * @return builder
         * 
         */
        public Builder settings(String settings) {
            return settings(Output.of(settings));
        }

        /**
         * @param type Specifies the Type of the Extension.
         * 
         * @return builder
         * 
         */
        public Builder type(Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type Specifies the Type of the Extension.
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        /**
         * @param typeHandlerVersion Specifies the version of the extension to use, available versions can be found using the Azure CLI.
         * 
         * @return builder
         * 
         */
        public Builder typeHandlerVersion(Output<String> typeHandlerVersion) {
            $.typeHandlerVersion = typeHandlerVersion;
            return this;
        }

        /**
         * @param typeHandlerVersion Specifies the version of the extension to use, available versions can be found using the Azure CLI.
         * 
         * @return builder
         * 
         */
        public Builder typeHandlerVersion(String typeHandlerVersion) {
            return typeHandlerVersion(Output.of(typeHandlerVersion));
        }

        public OrchestratedVirtualMachineScaleSetExtensionArgs build() {
            if ($.name == null) {
                throw new MissingRequiredPropertyException("OrchestratedVirtualMachineScaleSetExtensionArgs", "name");
            }
            if ($.publisher == null) {
                throw new MissingRequiredPropertyException("OrchestratedVirtualMachineScaleSetExtensionArgs", "publisher");
            }
            if ($.type == null) {
                throw new MissingRequiredPropertyException("OrchestratedVirtualMachineScaleSetExtensionArgs", "type");
            }
            if ($.typeHandlerVersion == null) {
                throw new MissingRequiredPropertyException("OrchestratedVirtualMachineScaleSetExtensionArgs", "typeHandlerVersion");
            }
            return $;
        }
    }

}
