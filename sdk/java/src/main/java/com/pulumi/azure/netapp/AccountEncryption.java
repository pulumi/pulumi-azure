// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.netapp;

import com.pulumi.azure.Utilities;
import com.pulumi.azure.netapp.AccountEncryptionArgs;
import com.pulumi.azure.netapp.inputs.AccountEncryptionState;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Manages a NetApp Account Encryption Resource.
 * 
 * For more information about Azure NetApp Files Customer-Managed Keys feature, please refer to [Configure customer-managed keys for Azure NetApp Files volume encryption](https://learn.microsoft.com/en-us/azure/azure-netapp-files/configure-customer-managed-keys)
 * 
 * ## Import
 * 
 * Account Encryption Resources can be imported using the `resource id`, e.g.
 * 
 * ```sh
 * $ pulumi import azure:netapp/accountEncryption:AccountEncryption example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.NetApp/netAppAccounts/account1
 * ```
 * 
 */
@ResourceType(type="azure:netapp/accountEncryption:AccountEncryption")
public class AccountEncryption extends com.pulumi.resources.CustomResource {
    /**
     * The versionless encryption key url.
     * 
     */
    @Export(name="encryptionKey", refs={String.class}, tree="[0]")
    private Output<String> encryptionKey;

    /**
     * @return The versionless encryption key url.
     * 
     */
    public Output<String> encryptionKey() {
        return this.encryptionKey;
    }
    /**
     * The ID of the NetApp account where volume under it will have customer managed keys-based encryption enabled.
     * 
     */
    @Export(name="netappAccountId", refs={String.class}, tree="[0]")
    private Output<String> netappAccountId;

    /**
     * @return The ID of the NetApp account where volume under it will have customer managed keys-based encryption enabled.
     * 
     */
    public Output<String> netappAccountId() {
        return this.netappAccountId;
    }
    /**
     * The ID of the System Assigned Manged Identity. Conflicts with `user_assigned_identity_id`.
     * 
     */
    @Export(name="systemAssignedIdentityPrincipalId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> systemAssignedIdentityPrincipalId;

    /**
     * @return The ID of the System Assigned Manged Identity. Conflicts with `user_assigned_identity_id`.
     * 
     */
    public Output<Optional<String>> systemAssignedIdentityPrincipalId() {
        return Codegen.optional(this.systemAssignedIdentityPrincipalId);
    }
    /**
     * The ID of the User Assigned Managed Identity. Conflicts with `system_assigned_identity_principal_id`.
     * 
     */
    @Export(name="userAssignedIdentityId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> userAssignedIdentityId;

    /**
     * @return The ID of the User Assigned Managed Identity. Conflicts with `system_assigned_identity_principal_id`.
     * 
     */
    public Output<Optional<String>> userAssignedIdentityId() {
        return Codegen.optional(this.userAssignedIdentityId);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public AccountEncryption(String name) {
        this(name, AccountEncryptionArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public AccountEncryption(String name, AccountEncryptionArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public AccountEncryption(String name, AccountEncryptionArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:netapp/accountEncryption:AccountEncryption", name, args == null ? AccountEncryptionArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private AccountEncryption(String name, Output<String> id, @Nullable AccountEncryptionState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:netapp/accountEncryption:AccountEncryption", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static AccountEncryption get(String name, Output<String> id, @Nullable AccountEncryptionState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new AccountEncryption(name, id, state, options);
    }
}
