// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.systemcenter.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class VirtualMachineManagerVirtualMachineInstanceStorageDiskArgs extends com.pulumi.resources.ResourceArgs {

    public static final VirtualMachineManagerVirtualMachineInstanceStorageDiskArgs Empty = new VirtualMachineManagerVirtualMachineInstanceStorageDiskArgs();

    /**
     * The disk bus. Possible values are between `0` and `3`.
     * 
     */
    @Import(name="bus")
    private @Nullable Output<Integer> bus;

    /**
     * @return The disk bus. Possible values are between `0` and `3`.
     * 
     */
    public Optional<Output<Integer>> bus() {
        return Optional.ofNullable(this.bus);
    }

    /**
     * The disk bus type. Possible values are `IDE` and `SCSI`.
     * 
     */
    @Import(name="busType")
    private @Nullable Output<String> busType;

    /**
     * @return The disk bus type. Possible values are `IDE` and `SCSI`.
     * 
     */
    public Optional<Output<String>> busType() {
        return Optional.ofNullable(this.busType);
    }

    /**
     * The disk total size.
     * 
     */
    @Import(name="diskSizeGb")
    private @Nullable Output<Integer> diskSizeGb;

    /**
     * @return The disk total size.
     * 
     */
    public Optional<Output<Integer>> diskSizeGb() {
        return Optional.ofNullable(this.diskSizeGb);
    }

    /**
     * The disk lun. Possible values are between `0` and `63`.
     * 
     */
    @Import(name="lun")
    private @Nullable Output<Integer> lun;

    /**
     * @return The disk lun. Possible values are between `0` and `63`.
     * 
     */
    public Optional<Output<Integer>> lun() {
        return Optional.ofNullable(this.lun);
    }

    /**
     * The name of the disk.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the disk.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The name of the Storage QoS policy.
     * 
     */
    @Import(name="storageQosPolicyName")
    private @Nullable Output<String> storageQosPolicyName;

    /**
     * @return The name of the Storage QoS policy.
     * 
     */
    public Optional<Output<String>> storageQosPolicyName() {
        return Optional.ofNullable(this.storageQosPolicyName);
    }

    /**
     * The disk ID in the System Center Virtual Machine Manager Virtual Machine Template. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="templateDiskId")
    private @Nullable Output<String> templateDiskId;

    /**
     * @return The disk ID in the System Center Virtual Machine Manager Virtual Machine Template. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> templateDiskId() {
        return Optional.ofNullable(this.templateDiskId);
    }

    /**
     * The disk vhd type. Possible values are `Dynamic` and `Fixed`.
     * 
     */
    @Import(name="vhdType")
    private @Nullable Output<String> vhdType;

    /**
     * @return The disk vhd type. Possible values are `Dynamic` and `Fixed`.
     * 
     */
    public Optional<Output<String>> vhdType() {
        return Optional.ofNullable(this.vhdType);
    }

    private VirtualMachineManagerVirtualMachineInstanceStorageDiskArgs() {}

    private VirtualMachineManagerVirtualMachineInstanceStorageDiskArgs(VirtualMachineManagerVirtualMachineInstanceStorageDiskArgs $) {
        this.bus = $.bus;
        this.busType = $.busType;
        this.diskSizeGb = $.diskSizeGb;
        this.lun = $.lun;
        this.name = $.name;
        this.storageQosPolicyName = $.storageQosPolicyName;
        this.templateDiskId = $.templateDiskId;
        this.vhdType = $.vhdType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VirtualMachineManagerVirtualMachineInstanceStorageDiskArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VirtualMachineManagerVirtualMachineInstanceStorageDiskArgs $;

        public Builder() {
            $ = new VirtualMachineManagerVirtualMachineInstanceStorageDiskArgs();
        }

        public Builder(VirtualMachineManagerVirtualMachineInstanceStorageDiskArgs defaults) {
            $ = new VirtualMachineManagerVirtualMachineInstanceStorageDiskArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param bus The disk bus. Possible values are between `0` and `3`.
         * 
         * @return builder
         * 
         */
        public Builder bus(@Nullable Output<Integer> bus) {
            $.bus = bus;
            return this;
        }

        /**
         * @param bus The disk bus. Possible values are between `0` and `3`.
         * 
         * @return builder
         * 
         */
        public Builder bus(Integer bus) {
            return bus(Output.of(bus));
        }

        /**
         * @param busType The disk bus type. Possible values are `IDE` and `SCSI`.
         * 
         * @return builder
         * 
         */
        public Builder busType(@Nullable Output<String> busType) {
            $.busType = busType;
            return this;
        }

        /**
         * @param busType The disk bus type. Possible values are `IDE` and `SCSI`.
         * 
         * @return builder
         * 
         */
        public Builder busType(String busType) {
            return busType(Output.of(busType));
        }

        /**
         * @param diskSizeGb The disk total size.
         * 
         * @return builder
         * 
         */
        public Builder diskSizeGb(@Nullable Output<Integer> diskSizeGb) {
            $.diskSizeGb = diskSizeGb;
            return this;
        }

        /**
         * @param diskSizeGb The disk total size.
         * 
         * @return builder
         * 
         */
        public Builder diskSizeGb(Integer diskSizeGb) {
            return diskSizeGb(Output.of(diskSizeGb));
        }

        /**
         * @param lun The disk lun. Possible values are between `0` and `63`.
         * 
         * @return builder
         * 
         */
        public Builder lun(@Nullable Output<Integer> lun) {
            $.lun = lun;
            return this;
        }

        /**
         * @param lun The disk lun. Possible values are between `0` and `63`.
         * 
         * @return builder
         * 
         */
        public Builder lun(Integer lun) {
            return lun(Output.of(lun));
        }

        /**
         * @param name The name of the disk.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the disk.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param storageQosPolicyName The name of the Storage QoS policy.
         * 
         * @return builder
         * 
         */
        public Builder storageQosPolicyName(@Nullable Output<String> storageQosPolicyName) {
            $.storageQosPolicyName = storageQosPolicyName;
            return this;
        }

        /**
         * @param storageQosPolicyName The name of the Storage QoS policy.
         * 
         * @return builder
         * 
         */
        public Builder storageQosPolicyName(String storageQosPolicyName) {
            return storageQosPolicyName(Output.of(storageQosPolicyName));
        }

        /**
         * @param templateDiskId The disk ID in the System Center Virtual Machine Manager Virtual Machine Template. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder templateDiskId(@Nullable Output<String> templateDiskId) {
            $.templateDiskId = templateDiskId;
            return this;
        }

        /**
         * @param templateDiskId The disk ID in the System Center Virtual Machine Manager Virtual Machine Template. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder templateDiskId(String templateDiskId) {
            return templateDiskId(Output.of(templateDiskId));
        }

        /**
         * @param vhdType The disk vhd type. Possible values are `Dynamic` and `Fixed`.
         * 
         * @return builder
         * 
         */
        public Builder vhdType(@Nullable Output<String> vhdType) {
            $.vhdType = vhdType;
            return this;
        }

        /**
         * @param vhdType The disk vhd type. Possible values are `Dynamic` and `Fixed`.
         * 
         * @return builder
         * 
         */
        public Builder vhdType(String vhdType) {
            return vhdType(Output.of(vhdType));
        }

        public VirtualMachineManagerVirtualMachineInstanceStorageDiskArgs build() {
            return $;
        }
    }

}
