// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.operationalinsights;

import com.pulumi.azure.Utilities;
import com.pulumi.azure.operationalinsights.inputs.GetAnalyticsWorkspaceArgs;
import com.pulumi.azure.operationalinsights.inputs.GetAnalyticsWorkspacePlainArgs;
import com.pulumi.azure.operationalinsights.outputs.GetAnalyticsWorkspaceResult;
import com.pulumi.core.Output;
import com.pulumi.core.TypeShape;
import com.pulumi.deployment.Deployment;
import com.pulumi.deployment.InvokeOptions;
import com.pulumi.deployment.InvokeOutputOptions;
import java.util.concurrent.CompletableFuture;

public final class OperationalinsightsFunctions {
    /**
     * Use this data source to access information about an existing Log Analytics (formally Operational Insights) Workspace.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azure.operationalinsights.OperationalinsightsFunctions;
     * import com.pulumi.azure.operationalinsights.inputs.GetAnalyticsWorkspaceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OperationalinsightsFunctions.getAnalyticsWorkspace(GetAnalyticsWorkspaceArgs.builder()
     *             .name("acctest-01")
     *             .resourceGroupName("acctest")
     *             .build());
     * 
     *         ctx.export("logAnalyticsWorkspaceId", example.workspaceId());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ## API Providers
     * 
     * &lt;!-- This section is generated, changes will be overwritten --&gt;
     * This data source uses the following Azure API Providers:
     * 
     * * `Microsoft.OperationalInsights`: 2020-08-01
     * 
     */
    public static Output<GetAnalyticsWorkspaceResult> getAnalyticsWorkspace(GetAnalyticsWorkspaceArgs args) {
        return getAnalyticsWorkspace(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to access information about an existing Log Analytics (formally Operational Insights) Workspace.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azure.operationalinsights.OperationalinsightsFunctions;
     * import com.pulumi.azure.operationalinsights.inputs.GetAnalyticsWorkspaceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OperationalinsightsFunctions.getAnalyticsWorkspace(GetAnalyticsWorkspaceArgs.builder()
     *             .name("acctest-01")
     *             .resourceGroupName("acctest")
     *             .build());
     * 
     *         ctx.export("logAnalyticsWorkspaceId", example.workspaceId());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ## API Providers
     * 
     * &lt;!-- This section is generated, changes will be overwritten --&gt;
     * This data source uses the following Azure API Providers:
     * 
     * * `Microsoft.OperationalInsights`: 2020-08-01
     * 
     */
    public static CompletableFuture<GetAnalyticsWorkspaceResult> getAnalyticsWorkspacePlain(GetAnalyticsWorkspacePlainArgs args) {
        return getAnalyticsWorkspacePlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to access information about an existing Log Analytics (formally Operational Insights) Workspace.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azure.operationalinsights.OperationalinsightsFunctions;
     * import com.pulumi.azure.operationalinsights.inputs.GetAnalyticsWorkspaceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OperationalinsightsFunctions.getAnalyticsWorkspace(GetAnalyticsWorkspaceArgs.builder()
     *             .name("acctest-01")
     *             .resourceGroupName("acctest")
     *             .build());
     * 
     *         ctx.export("logAnalyticsWorkspaceId", example.workspaceId());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ## API Providers
     * 
     * &lt;!-- This section is generated, changes will be overwritten --&gt;
     * This data source uses the following Azure API Providers:
     * 
     * * `Microsoft.OperationalInsights`: 2020-08-01
     * 
     */
    public static Output<GetAnalyticsWorkspaceResult> getAnalyticsWorkspace(GetAnalyticsWorkspaceArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("azure:operationalinsights/getAnalyticsWorkspace:getAnalyticsWorkspace", TypeShape.of(GetAnalyticsWorkspaceResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to access information about an existing Log Analytics (formally Operational Insights) Workspace.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azure.operationalinsights.OperationalinsightsFunctions;
     * import com.pulumi.azure.operationalinsights.inputs.GetAnalyticsWorkspaceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OperationalinsightsFunctions.getAnalyticsWorkspace(GetAnalyticsWorkspaceArgs.builder()
     *             .name("acctest-01")
     *             .resourceGroupName("acctest")
     *             .build());
     * 
     *         ctx.export("logAnalyticsWorkspaceId", example.workspaceId());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ## API Providers
     * 
     * &lt;!-- This section is generated, changes will be overwritten --&gt;
     * This data source uses the following Azure API Providers:
     * 
     * * `Microsoft.OperationalInsights`: 2020-08-01
     * 
     */
    public static Output<GetAnalyticsWorkspaceResult> getAnalyticsWorkspace(GetAnalyticsWorkspaceArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("azure:operationalinsights/getAnalyticsWorkspace:getAnalyticsWorkspace", TypeShape.of(GetAnalyticsWorkspaceResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to access information about an existing Log Analytics (formally Operational Insights) Workspace.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azure.operationalinsights.OperationalinsightsFunctions;
     * import com.pulumi.azure.operationalinsights.inputs.GetAnalyticsWorkspaceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = OperationalinsightsFunctions.getAnalyticsWorkspace(GetAnalyticsWorkspaceArgs.builder()
     *             .name("acctest-01")
     *             .resourceGroupName("acctest")
     *             .build());
     * 
     *         ctx.export("logAnalyticsWorkspaceId", example.workspaceId());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ## API Providers
     * 
     * &lt;!-- This section is generated, changes will be overwritten --&gt;
     * This data source uses the following Azure API Providers:
     * 
     * * `Microsoft.OperationalInsights`: 2020-08-01
     * 
     */
    public static CompletableFuture<GetAnalyticsWorkspaceResult> getAnalyticsWorkspacePlain(GetAnalyticsWorkspacePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("azure:operationalinsights/getAnalyticsWorkspace:getAnalyticsWorkspace", TypeShape.of(GetAnalyticsWorkspaceResult.class), args, Utilities.withVersion(options));
    }
}
