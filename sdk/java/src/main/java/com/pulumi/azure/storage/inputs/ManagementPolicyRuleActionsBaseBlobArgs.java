// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.storage.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ManagementPolicyRuleActionsBaseBlobArgs extends com.pulumi.resources.ResourceArgs {

    public static final ManagementPolicyRuleActionsBaseBlobArgs Empty = new ManagementPolicyRuleActionsBaseBlobArgs();

    /**
     * Whether a blob should automatically be tiered from cool back to hot if it&#39;s accessed again after being tiered to cool. Defaults to `false`.
     * 
     * &gt; **Note:** The `auto_tier_to_hot_from_cool_enabled` must be used together with `tier_to_cool_after_days_since_last_access_time_greater_than`.
     * 
     */
    @Import(name="autoTierToHotFromCoolEnabled")
    private @Nullable Output<Boolean> autoTierToHotFromCoolEnabled;

    /**
     * @return Whether a blob should automatically be tiered from cool back to hot if it&#39;s accessed again after being tiered to cool. Defaults to `false`.
     * 
     * &gt; **Note:** The `auto_tier_to_hot_from_cool_enabled` must be used together with `tier_to_cool_after_days_since_last_access_time_greater_than`.
     * 
     */
    public Optional<Output<Boolean>> autoTierToHotFromCoolEnabled() {
        return Optional.ofNullable(this.autoTierToHotFromCoolEnabled);
    }

    /**
     * The age in days after creation to delete the blob. Must be between `0` and `99999`. Defaults to `-1`.
     * 
     * &gt; **Note:** The `delete_after_days_since_modification_greater_than`, `delete_after_days_since_last_access_time_greater_than` and `delete_after_days_since_creation_greater_than` can not be set at the same time.
     * 
     * &gt; **Note:** The `last_access_time_enabled` must be set to `true` in the `azure.storage.Account` in order to use `tier_to_cool_after_days_since_last_access_time_greater_than`, `tier_to_archive_after_days_since_last_access_time_greater_than` and `delete_after_days_since_last_access_time_greater_than`.
     * 
     */
    @Import(name="deleteAfterDaysSinceCreationGreaterThan")
    private @Nullable Output<Integer> deleteAfterDaysSinceCreationGreaterThan;

    /**
     * @return The age in days after creation to delete the blob. Must be between `0` and `99999`. Defaults to `-1`.
     * 
     * &gt; **Note:** The `delete_after_days_since_modification_greater_than`, `delete_after_days_since_last_access_time_greater_than` and `delete_after_days_since_creation_greater_than` can not be set at the same time.
     * 
     * &gt; **Note:** The `last_access_time_enabled` must be set to `true` in the `azure.storage.Account` in order to use `tier_to_cool_after_days_since_last_access_time_greater_than`, `tier_to_archive_after_days_since_last_access_time_greater_than` and `delete_after_days_since_last_access_time_greater_than`.
     * 
     */
    public Optional<Output<Integer>> deleteAfterDaysSinceCreationGreaterThan() {
        return Optional.ofNullable(this.deleteAfterDaysSinceCreationGreaterThan);
    }

    /**
     * The age in days after last access time to delete the blob. Must be between `0` and `99999`. Defaults to `-1`.
     * 
     */
    @Import(name="deleteAfterDaysSinceLastAccessTimeGreaterThan")
    private @Nullable Output<Integer> deleteAfterDaysSinceLastAccessTimeGreaterThan;

    /**
     * @return The age in days after last access time to delete the blob. Must be between `0` and `99999`. Defaults to `-1`.
     * 
     */
    public Optional<Output<Integer>> deleteAfterDaysSinceLastAccessTimeGreaterThan() {
        return Optional.ofNullable(this.deleteAfterDaysSinceLastAccessTimeGreaterThan);
    }

    /**
     * The age in days after last modification to delete the blob. Must be between 0 and 99999. Defaults to `-1`.
     * 
     */
    @Import(name="deleteAfterDaysSinceModificationGreaterThan")
    private @Nullable Output<Integer> deleteAfterDaysSinceModificationGreaterThan;

    /**
     * @return The age in days after last modification to delete the blob. Must be between 0 and 99999. Defaults to `-1`.
     * 
     */
    public Optional<Output<Integer>> deleteAfterDaysSinceModificationGreaterThan() {
        return Optional.ofNullable(this.deleteAfterDaysSinceModificationGreaterThan);
    }

    /**
     * The age in days after creation to archive storage. Supports blob currently at Hot or Cool tier. Must be between `0` and`99999`. Defaults to `-1`.
     * 
     * &gt; **Note:** The `tier_to_archive_after_days_since_modification_greater_than`, `tier_to_archive_after_days_since_last_access_time_greater_than` and `tier_to_archive_after_days_since_creation_greater_than` can not be set at the same time.
     * 
     */
    @Import(name="tierToArchiveAfterDaysSinceCreationGreaterThan")
    private @Nullable Output<Integer> tierToArchiveAfterDaysSinceCreationGreaterThan;

    /**
     * @return The age in days after creation to archive storage. Supports blob currently at Hot or Cool tier. Must be between `0` and`99999`. Defaults to `-1`.
     * 
     * &gt; **Note:** The `tier_to_archive_after_days_since_modification_greater_than`, `tier_to_archive_after_days_since_last_access_time_greater_than` and `tier_to_archive_after_days_since_creation_greater_than` can not be set at the same time.
     * 
     */
    public Optional<Output<Integer>> tierToArchiveAfterDaysSinceCreationGreaterThan() {
        return Optional.ofNullable(this.tierToArchiveAfterDaysSinceCreationGreaterThan);
    }

    /**
     * The age in days after last access time to tier blobs to archive storage. Supports blob currently at Hot or Cool tier. Must be between `0` and`99999`. Defaults to `-1`.
     * 
     */
    @Import(name="tierToArchiveAfterDaysSinceLastAccessTimeGreaterThan")
    private @Nullable Output<Integer> tierToArchiveAfterDaysSinceLastAccessTimeGreaterThan;

    /**
     * @return The age in days after last access time to tier blobs to archive storage. Supports blob currently at Hot or Cool tier. Must be between `0` and`99999`. Defaults to `-1`.
     * 
     */
    public Optional<Output<Integer>> tierToArchiveAfterDaysSinceLastAccessTimeGreaterThan() {
        return Optional.ofNullable(this.tierToArchiveAfterDaysSinceLastAccessTimeGreaterThan);
    }

    /**
     * The age in days after last tier change to the blobs to skip to be archved. Must be between 0 and 99999. Defaults to `-1`.
     * 
     */
    @Import(name="tierToArchiveAfterDaysSinceLastTierChangeGreaterThan")
    private @Nullable Output<Integer> tierToArchiveAfterDaysSinceLastTierChangeGreaterThan;

    /**
     * @return The age in days after last tier change to the blobs to skip to be archved. Must be between 0 and 99999. Defaults to `-1`.
     * 
     */
    public Optional<Output<Integer>> tierToArchiveAfterDaysSinceLastTierChangeGreaterThan() {
        return Optional.ofNullable(this.tierToArchiveAfterDaysSinceLastTierChangeGreaterThan);
    }

    /**
     * The age in days after last modification to tier blobs to archive storage. Supports blob currently at Hot or Cool tier. Must be between 0 and 99999. Defaults to `-1`.
     * 
     */
    @Import(name="tierToArchiveAfterDaysSinceModificationGreaterThan")
    private @Nullable Output<Integer> tierToArchiveAfterDaysSinceModificationGreaterThan;

    /**
     * @return The age in days after last modification to tier blobs to archive storage. Supports blob currently at Hot or Cool tier. Must be between 0 and 99999. Defaults to `-1`.
     * 
     */
    public Optional<Output<Integer>> tierToArchiveAfterDaysSinceModificationGreaterThan() {
        return Optional.ofNullable(this.tierToArchiveAfterDaysSinceModificationGreaterThan);
    }

    /**
     * The age in days after creation to cold storage. Supports blob currently at Hot tier. Must be between `0` and `99999`. Defaults to `-1`.
     * 
     * &gt; **Note:** The `tier_to_cool_after_days_since_modification_greater_than`, `tier_to_cool_after_days_since_last_access_time_greater_than` and `tier_to_cool_after_days_since_creation_greater_than` can not be set at the same time.
     * 
     */
    @Import(name="tierToColdAfterDaysSinceCreationGreaterThan")
    private @Nullable Output<Integer> tierToColdAfterDaysSinceCreationGreaterThan;

    /**
     * @return The age in days after creation to cold storage. Supports blob currently at Hot tier. Must be between `0` and `99999`. Defaults to `-1`.
     * 
     * &gt; **Note:** The `tier_to_cool_after_days_since_modification_greater_than`, `tier_to_cool_after_days_since_last_access_time_greater_than` and `tier_to_cool_after_days_since_creation_greater_than` can not be set at the same time.
     * 
     */
    public Optional<Output<Integer>> tierToColdAfterDaysSinceCreationGreaterThan() {
        return Optional.ofNullable(this.tierToColdAfterDaysSinceCreationGreaterThan);
    }

    /**
     * The age in days after last access time to tier blobs to cold storage. Supports blob currently at Hot tier. Must be between `0` and `99999`. Defaults to `-1`.
     * 
     */
    @Import(name="tierToColdAfterDaysSinceLastAccessTimeGreaterThan")
    private @Nullable Output<Integer> tierToColdAfterDaysSinceLastAccessTimeGreaterThan;

    /**
     * @return The age in days after last access time to tier blobs to cold storage. Supports blob currently at Hot tier. Must be between `0` and `99999`. Defaults to `-1`.
     * 
     */
    public Optional<Output<Integer>> tierToColdAfterDaysSinceLastAccessTimeGreaterThan() {
        return Optional.ofNullable(this.tierToColdAfterDaysSinceLastAccessTimeGreaterThan);
    }

    /**
     * The age in days after last modification to tier blobs to cold storage. Supports blob currently at Hot tier. Must be between 0 and 99999. Defaults to `-1`.
     * 
     */
    @Import(name="tierToColdAfterDaysSinceModificationGreaterThan")
    private @Nullable Output<Integer> tierToColdAfterDaysSinceModificationGreaterThan;

    /**
     * @return The age in days after last modification to tier blobs to cold storage. Supports blob currently at Hot tier. Must be between 0 and 99999. Defaults to `-1`.
     * 
     */
    public Optional<Output<Integer>> tierToColdAfterDaysSinceModificationGreaterThan() {
        return Optional.ofNullable(this.tierToColdAfterDaysSinceModificationGreaterThan);
    }

    /**
     * The age in days after creation to cool storage. Supports blob currently at Hot tier. Must be between `0` and `99999`. Defaults to `-1`.
     * 
     * &gt; **Note:** The `tier_to_cool_after_days_since_modification_greater_than`, `tier_to_cool_after_days_since_last_access_time_greater_than` and `tier_to_cool_after_days_since_creation_greater_than` can not be set at the same time.
     * 
     */
    @Import(name="tierToCoolAfterDaysSinceCreationGreaterThan")
    private @Nullable Output<Integer> tierToCoolAfterDaysSinceCreationGreaterThan;

    /**
     * @return The age in days after creation to cool storage. Supports blob currently at Hot tier. Must be between `0` and `99999`. Defaults to `-1`.
     * 
     * &gt; **Note:** The `tier_to_cool_after_days_since_modification_greater_than`, `tier_to_cool_after_days_since_last_access_time_greater_than` and `tier_to_cool_after_days_since_creation_greater_than` can not be set at the same time.
     * 
     */
    public Optional<Output<Integer>> tierToCoolAfterDaysSinceCreationGreaterThan() {
        return Optional.ofNullable(this.tierToCoolAfterDaysSinceCreationGreaterThan);
    }

    /**
     * The age in days after last access time to tier blobs to cool storage. Supports blob currently at Hot tier. Must be between `0` and `99999`. Defaults to `-1`.
     * 
     */
    @Import(name="tierToCoolAfterDaysSinceLastAccessTimeGreaterThan")
    private @Nullable Output<Integer> tierToCoolAfterDaysSinceLastAccessTimeGreaterThan;

    /**
     * @return The age in days after last access time to tier blobs to cool storage. Supports blob currently at Hot tier. Must be between `0` and `99999`. Defaults to `-1`.
     * 
     */
    public Optional<Output<Integer>> tierToCoolAfterDaysSinceLastAccessTimeGreaterThan() {
        return Optional.ofNullable(this.tierToCoolAfterDaysSinceLastAccessTimeGreaterThan);
    }

    /**
     * The age in days after last modification to tier blobs to cool storage. Supports blob currently at Hot tier. Must be between 0 and 99999. Defaults to `-1`.
     * 
     */
    @Import(name="tierToCoolAfterDaysSinceModificationGreaterThan")
    private @Nullable Output<Integer> tierToCoolAfterDaysSinceModificationGreaterThan;

    /**
     * @return The age in days after last modification to tier blobs to cool storage. Supports blob currently at Hot tier. Must be between 0 and 99999. Defaults to `-1`.
     * 
     */
    public Optional<Output<Integer>> tierToCoolAfterDaysSinceModificationGreaterThan() {
        return Optional.ofNullable(this.tierToCoolAfterDaysSinceModificationGreaterThan);
    }

    private ManagementPolicyRuleActionsBaseBlobArgs() {}

    private ManagementPolicyRuleActionsBaseBlobArgs(ManagementPolicyRuleActionsBaseBlobArgs $) {
        this.autoTierToHotFromCoolEnabled = $.autoTierToHotFromCoolEnabled;
        this.deleteAfterDaysSinceCreationGreaterThan = $.deleteAfterDaysSinceCreationGreaterThan;
        this.deleteAfterDaysSinceLastAccessTimeGreaterThan = $.deleteAfterDaysSinceLastAccessTimeGreaterThan;
        this.deleteAfterDaysSinceModificationGreaterThan = $.deleteAfterDaysSinceModificationGreaterThan;
        this.tierToArchiveAfterDaysSinceCreationGreaterThan = $.tierToArchiveAfterDaysSinceCreationGreaterThan;
        this.tierToArchiveAfterDaysSinceLastAccessTimeGreaterThan = $.tierToArchiveAfterDaysSinceLastAccessTimeGreaterThan;
        this.tierToArchiveAfterDaysSinceLastTierChangeGreaterThan = $.tierToArchiveAfterDaysSinceLastTierChangeGreaterThan;
        this.tierToArchiveAfterDaysSinceModificationGreaterThan = $.tierToArchiveAfterDaysSinceModificationGreaterThan;
        this.tierToColdAfterDaysSinceCreationGreaterThan = $.tierToColdAfterDaysSinceCreationGreaterThan;
        this.tierToColdAfterDaysSinceLastAccessTimeGreaterThan = $.tierToColdAfterDaysSinceLastAccessTimeGreaterThan;
        this.tierToColdAfterDaysSinceModificationGreaterThan = $.tierToColdAfterDaysSinceModificationGreaterThan;
        this.tierToCoolAfterDaysSinceCreationGreaterThan = $.tierToCoolAfterDaysSinceCreationGreaterThan;
        this.tierToCoolAfterDaysSinceLastAccessTimeGreaterThan = $.tierToCoolAfterDaysSinceLastAccessTimeGreaterThan;
        this.tierToCoolAfterDaysSinceModificationGreaterThan = $.tierToCoolAfterDaysSinceModificationGreaterThan;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ManagementPolicyRuleActionsBaseBlobArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ManagementPolicyRuleActionsBaseBlobArgs $;

        public Builder() {
            $ = new ManagementPolicyRuleActionsBaseBlobArgs();
        }

        public Builder(ManagementPolicyRuleActionsBaseBlobArgs defaults) {
            $ = new ManagementPolicyRuleActionsBaseBlobArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param autoTierToHotFromCoolEnabled Whether a blob should automatically be tiered from cool back to hot if it&#39;s accessed again after being tiered to cool. Defaults to `false`.
         * 
         * &gt; **Note:** The `auto_tier_to_hot_from_cool_enabled` must be used together with `tier_to_cool_after_days_since_last_access_time_greater_than`.
         * 
         * @return builder
         * 
         */
        public Builder autoTierToHotFromCoolEnabled(@Nullable Output<Boolean> autoTierToHotFromCoolEnabled) {
            $.autoTierToHotFromCoolEnabled = autoTierToHotFromCoolEnabled;
            return this;
        }

        /**
         * @param autoTierToHotFromCoolEnabled Whether a blob should automatically be tiered from cool back to hot if it&#39;s accessed again after being tiered to cool. Defaults to `false`.
         * 
         * &gt; **Note:** The `auto_tier_to_hot_from_cool_enabled` must be used together with `tier_to_cool_after_days_since_last_access_time_greater_than`.
         * 
         * @return builder
         * 
         */
        public Builder autoTierToHotFromCoolEnabled(Boolean autoTierToHotFromCoolEnabled) {
            return autoTierToHotFromCoolEnabled(Output.of(autoTierToHotFromCoolEnabled));
        }

        /**
         * @param deleteAfterDaysSinceCreationGreaterThan The age in days after creation to delete the blob. Must be between `0` and `99999`. Defaults to `-1`.
         * 
         * &gt; **Note:** The `delete_after_days_since_modification_greater_than`, `delete_after_days_since_last_access_time_greater_than` and `delete_after_days_since_creation_greater_than` can not be set at the same time.
         * 
         * &gt; **Note:** The `last_access_time_enabled` must be set to `true` in the `azure.storage.Account` in order to use `tier_to_cool_after_days_since_last_access_time_greater_than`, `tier_to_archive_after_days_since_last_access_time_greater_than` and `delete_after_days_since_last_access_time_greater_than`.
         * 
         * @return builder
         * 
         */
        public Builder deleteAfterDaysSinceCreationGreaterThan(@Nullable Output<Integer> deleteAfterDaysSinceCreationGreaterThan) {
            $.deleteAfterDaysSinceCreationGreaterThan = deleteAfterDaysSinceCreationGreaterThan;
            return this;
        }

        /**
         * @param deleteAfterDaysSinceCreationGreaterThan The age in days after creation to delete the blob. Must be between `0` and `99999`. Defaults to `-1`.
         * 
         * &gt; **Note:** The `delete_after_days_since_modification_greater_than`, `delete_after_days_since_last_access_time_greater_than` and `delete_after_days_since_creation_greater_than` can not be set at the same time.
         * 
         * &gt; **Note:** The `last_access_time_enabled` must be set to `true` in the `azure.storage.Account` in order to use `tier_to_cool_after_days_since_last_access_time_greater_than`, `tier_to_archive_after_days_since_last_access_time_greater_than` and `delete_after_days_since_last_access_time_greater_than`.
         * 
         * @return builder
         * 
         */
        public Builder deleteAfterDaysSinceCreationGreaterThan(Integer deleteAfterDaysSinceCreationGreaterThan) {
            return deleteAfterDaysSinceCreationGreaterThan(Output.of(deleteAfterDaysSinceCreationGreaterThan));
        }

        /**
         * @param deleteAfterDaysSinceLastAccessTimeGreaterThan The age in days after last access time to delete the blob. Must be between `0` and `99999`. Defaults to `-1`.
         * 
         * @return builder
         * 
         */
        public Builder deleteAfterDaysSinceLastAccessTimeGreaterThan(@Nullable Output<Integer> deleteAfterDaysSinceLastAccessTimeGreaterThan) {
            $.deleteAfterDaysSinceLastAccessTimeGreaterThan = deleteAfterDaysSinceLastAccessTimeGreaterThan;
            return this;
        }

        /**
         * @param deleteAfterDaysSinceLastAccessTimeGreaterThan The age in days after last access time to delete the blob. Must be between `0` and `99999`. Defaults to `-1`.
         * 
         * @return builder
         * 
         */
        public Builder deleteAfterDaysSinceLastAccessTimeGreaterThan(Integer deleteAfterDaysSinceLastAccessTimeGreaterThan) {
            return deleteAfterDaysSinceLastAccessTimeGreaterThan(Output.of(deleteAfterDaysSinceLastAccessTimeGreaterThan));
        }

        /**
         * @param deleteAfterDaysSinceModificationGreaterThan The age in days after last modification to delete the blob. Must be between 0 and 99999. Defaults to `-1`.
         * 
         * @return builder
         * 
         */
        public Builder deleteAfterDaysSinceModificationGreaterThan(@Nullable Output<Integer> deleteAfterDaysSinceModificationGreaterThan) {
            $.deleteAfterDaysSinceModificationGreaterThan = deleteAfterDaysSinceModificationGreaterThan;
            return this;
        }

        /**
         * @param deleteAfterDaysSinceModificationGreaterThan The age in days after last modification to delete the blob. Must be between 0 and 99999. Defaults to `-1`.
         * 
         * @return builder
         * 
         */
        public Builder deleteAfterDaysSinceModificationGreaterThan(Integer deleteAfterDaysSinceModificationGreaterThan) {
            return deleteAfterDaysSinceModificationGreaterThan(Output.of(deleteAfterDaysSinceModificationGreaterThan));
        }

        /**
         * @param tierToArchiveAfterDaysSinceCreationGreaterThan The age in days after creation to archive storage. Supports blob currently at Hot or Cool tier. Must be between `0` and`99999`. Defaults to `-1`.
         * 
         * &gt; **Note:** The `tier_to_archive_after_days_since_modification_greater_than`, `tier_to_archive_after_days_since_last_access_time_greater_than` and `tier_to_archive_after_days_since_creation_greater_than` can not be set at the same time.
         * 
         * @return builder
         * 
         */
        public Builder tierToArchiveAfterDaysSinceCreationGreaterThan(@Nullable Output<Integer> tierToArchiveAfterDaysSinceCreationGreaterThan) {
            $.tierToArchiveAfterDaysSinceCreationGreaterThan = tierToArchiveAfterDaysSinceCreationGreaterThan;
            return this;
        }

        /**
         * @param tierToArchiveAfterDaysSinceCreationGreaterThan The age in days after creation to archive storage. Supports blob currently at Hot or Cool tier. Must be between `0` and`99999`. Defaults to `-1`.
         * 
         * &gt; **Note:** The `tier_to_archive_after_days_since_modification_greater_than`, `tier_to_archive_after_days_since_last_access_time_greater_than` and `tier_to_archive_after_days_since_creation_greater_than` can not be set at the same time.
         * 
         * @return builder
         * 
         */
        public Builder tierToArchiveAfterDaysSinceCreationGreaterThan(Integer tierToArchiveAfterDaysSinceCreationGreaterThan) {
            return tierToArchiveAfterDaysSinceCreationGreaterThan(Output.of(tierToArchiveAfterDaysSinceCreationGreaterThan));
        }

        /**
         * @param tierToArchiveAfterDaysSinceLastAccessTimeGreaterThan The age in days after last access time to tier blobs to archive storage. Supports blob currently at Hot or Cool tier. Must be between `0` and`99999`. Defaults to `-1`.
         * 
         * @return builder
         * 
         */
        public Builder tierToArchiveAfterDaysSinceLastAccessTimeGreaterThan(@Nullable Output<Integer> tierToArchiveAfterDaysSinceLastAccessTimeGreaterThan) {
            $.tierToArchiveAfterDaysSinceLastAccessTimeGreaterThan = tierToArchiveAfterDaysSinceLastAccessTimeGreaterThan;
            return this;
        }

        /**
         * @param tierToArchiveAfterDaysSinceLastAccessTimeGreaterThan The age in days after last access time to tier blobs to archive storage. Supports blob currently at Hot or Cool tier. Must be between `0` and`99999`. Defaults to `-1`.
         * 
         * @return builder
         * 
         */
        public Builder tierToArchiveAfterDaysSinceLastAccessTimeGreaterThan(Integer tierToArchiveAfterDaysSinceLastAccessTimeGreaterThan) {
            return tierToArchiveAfterDaysSinceLastAccessTimeGreaterThan(Output.of(tierToArchiveAfterDaysSinceLastAccessTimeGreaterThan));
        }

        /**
         * @param tierToArchiveAfterDaysSinceLastTierChangeGreaterThan The age in days after last tier change to the blobs to skip to be archved. Must be between 0 and 99999. Defaults to `-1`.
         * 
         * @return builder
         * 
         */
        public Builder tierToArchiveAfterDaysSinceLastTierChangeGreaterThan(@Nullable Output<Integer> tierToArchiveAfterDaysSinceLastTierChangeGreaterThan) {
            $.tierToArchiveAfterDaysSinceLastTierChangeGreaterThan = tierToArchiveAfterDaysSinceLastTierChangeGreaterThan;
            return this;
        }

        /**
         * @param tierToArchiveAfterDaysSinceLastTierChangeGreaterThan The age in days after last tier change to the blobs to skip to be archved. Must be between 0 and 99999. Defaults to `-1`.
         * 
         * @return builder
         * 
         */
        public Builder tierToArchiveAfterDaysSinceLastTierChangeGreaterThan(Integer tierToArchiveAfterDaysSinceLastTierChangeGreaterThan) {
            return tierToArchiveAfterDaysSinceLastTierChangeGreaterThan(Output.of(tierToArchiveAfterDaysSinceLastTierChangeGreaterThan));
        }

        /**
         * @param tierToArchiveAfterDaysSinceModificationGreaterThan The age in days after last modification to tier blobs to archive storage. Supports blob currently at Hot or Cool tier. Must be between 0 and 99999. Defaults to `-1`.
         * 
         * @return builder
         * 
         */
        public Builder tierToArchiveAfterDaysSinceModificationGreaterThan(@Nullable Output<Integer> tierToArchiveAfterDaysSinceModificationGreaterThan) {
            $.tierToArchiveAfterDaysSinceModificationGreaterThan = tierToArchiveAfterDaysSinceModificationGreaterThan;
            return this;
        }

        /**
         * @param tierToArchiveAfterDaysSinceModificationGreaterThan The age in days after last modification to tier blobs to archive storage. Supports blob currently at Hot or Cool tier. Must be between 0 and 99999. Defaults to `-1`.
         * 
         * @return builder
         * 
         */
        public Builder tierToArchiveAfterDaysSinceModificationGreaterThan(Integer tierToArchiveAfterDaysSinceModificationGreaterThan) {
            return tierToArchiveAfterDaysSinceModificationGreaterThan(Output.of(tierToArchiveAfterDaysSinceModificationGreaterThan));
        }

        /**
         * @param tierToColdAfterDaysSinceCreationGreaterThan The age in days after creation to cold storage. Supports blob currently at Hot tier. Must be between `0` and `99999`. Defaults to `-1`.
         * 
         * &gt; **Note:** The `tier_to_cool_after_days_since_modification_greater_than`, `tier_to_cool_after_days_since_last_access_time_greater_than` and `tier_to_cool_after_days_since_creation_greater_than` can not be set at the same time.
         * 
         * @return builder
         * 
         */
        public Builder tierToColdAfterDaysSinceCreationGreaterThan(@Nullable Output<Integer> tierToColdAfterDaysSinceCreationGreaterThan) {
            $.tierToColdAfterDaysSinceCreationGreaterThan = tierToColdAfterDaysSinceCreationGreaterThan;
            return this;
        }

        /**
         * @param tierToColdAfterDaysSinceCreationGreaterThan The age in days after creation to cold storage. Supports blob currently at Hot tier. Must be between `0` and `99999`. Defaults to `-1`.
         * 
         * &gt; **Note:** The `tier_to_cool_after_days_since_modification_greater_than`, `tier_to_cool_after_days_since_last_access_time_greater_than` and `tier_to_cool_after_days_since_creation_greater_than` can not be set at the same time.
         * 
         * @return builder
         * 
         */
        public Builder tierToColdAfterDaysSinceCreationGreaterThan(Integer tierToColdAfterDaysSinceCreationGreaterThan) {
            return tierToColdAfterDaysSinceCreationGreaterThan(Output.of(tierToColdAfterDaysSinceCreationGreaterThan));
        }

        /**
         * @param tierToColdAfterDaysSinceLastAccessTimeGreaterThan The age in days after last access time to tier blobs to cold storage. Supports blob currently at Hot tier. Must be between `0` and `99999`. Defaults to `-1`.
         * 
         * @return builder
         * 
         */
        public Builder tierToColdAfterDaysSinceLastAccessTimeGreaterThan(@Nullable Output<Integer> tierToColdAfterDaysSinceLastAccessTimeGreaterThan) {
            $.tierToColdAfterDaysSinceLastAccessTimeGreaterThan = tierToColdAfterDaysSinceLastAccessTimeGreaterThan;
            return this;
        }

        /**
         * @param tierToColdAfterDaysSinceLastAccessTimeGreaterThan The age in days after last access time to tier blobs to cold storage. Supports blob currently at Hot tier. Must be between `0` and `99999`. Defaults to `-1`.
         * 
         * @return builder
         * 
         */
        public Builder tierToColdAfterDaysSinceLastAccessTimeGreaterThan(Integer tierToColdAfterDaysSinceLastAccessTimeGreaterThan) {
            return tierToColdAfterDaysSinceLastAccessTimeGreaterThan(Output.of(tierToColdAfterDaysSinceLastAccessTimeGreaterThan));
        }

        /**
         * @param tierToColdAfterDaysSinceModificationGreaterThan The age in days after last modification to tier blobs to cold storage. Supports blob currently at Hot tier. Must be between 0 and 99999. Defaults to `-1`.
         * 
         * @return builder
         * 
         */
        public Builder tierToColdAfterDaysSinceModificationGreaterThan(@Nullable Output<Integer> tierToColdAfterDaysSinceModificationGreaterThan) {
            $.tierToColdAfterDaysSinceModificationGreaterThan = tierToColdAfterDaysSinceModificationGreaterThan;
            return this;
        }

        /**
         * @param tierToColdAfterDaysSinceModificationGreaterThan The age in days after last modification to tier blobs to cold storage. Supports blob currently at Hot tier. Must be between 0 and 99999. Defaults to `-1`.
         * 
         * @return builder
         * 
         */
        public Builder tierToColdAfterDaysSinceModificationGreaterThan(Integer tierToColdAfterDaysSinceModificationGreaterThan) {
            return tierToColdAfterDaysSinceModificationGreaterThan(Output.of(tierToColdAfterDaysSinceModificationGreaterThan));
        }

        /**
         * @param tierToCoolAfterDaysSinceCreationGreaterThan The age in days after creation to cool storage. Supports blob currently at Hot tier. Must be between `0` and `99999`. Defaults to `-1`.
         * 
         * &gt; **Note:** The `tier_to_cool_after_days_since_modification_greater_than`, `tier_to_cool_after_days_since_last_access_time_greater_than` and `tier_to_cool_after_days_since_creation_greater_than` can not be set at the same time.
         * 
         * @return builder
         * 
         */
        public Builder tierToCoolAfterDaysSinceCreationGreaterThan(@Nullable Output<Integer> tierToCoolAfterDaysSinceCreationGreaterThan) {
            $.tierToCoolAfterDaysSinceCreationGreaterThan = tierToCoolAfterDaysSinceCreationGreaterThan;
            return this;
        }

        /**
         * @param tierToCoolAfterDaysSinceCreationGreaterThan The age in days after creation to cool storage. Supports blob currently at Hot tier. Must be between `0` and `99999`. Defaults to `-1`.
         * 
         * &gt; **Note:** The `tier_to_cool_after_days_since_modification_greater_than`, `tier_to_cool_after_days_since_last_access_time_greater_than` and `tier_to_cool_after_days_since_creation_greater_than` can not be set at the same time.
         * 
         * @return builder
         * 
         */
        public Builder tierToCoolAfterDaysSinceCreationGreaterThan(Integer tierToCoolAfterDaysSinceCreationGreaterThan) {
            return tierToCoolAfterDaysSinceCreationGreaterThan(Output.of(tierToCoolAfterDaysSinceCreationGreaterThan));
        }

        /**
         * @param tierToCoolAfterDaysSinceLastAccessTimeGreaterThan The age in days after last access time to tier blobs to cool storage. Supports blob currently at Hot tier. Must be between `0` and `99999`. Defaults to `-1`.
         * 
         * @return builder
         * 
         */
        public Builder tierToCoolAfterDaysSinceLastAccessTimeGreaterThan(@Nullable Output<Integer> tierToCoolAfterDaysSinceLastAccessTimeGreaterThan) {
            $.tierToCoolAfterDaysSinceLastAccessTimeGreaterThan = tierToCoolAfterDaysSinceLastAccessTimeGreaterThan;
            return this;
        }

        /**
         * @param tierToCoolAfterDaysSinceLastAccessTimeGreaterThan The age in days after last access time to tier blobs to cool storage. Supports blob currently at Hot tier. Must be between `0` and `99999`. Defaults to `-1`.
         * 
         * @return builder
         * 
         */
        public Builder tierToCoolAfterDaysSinceLastAccessTimeGreaterThan(Integer tierToCoolAfterDaysSinceLastAccessTimeGreaterThan) {
            return tierToCoolAfterDaysSinceLastAccessTimeGreaterThan(Output.of(tierToCoolAfterDaysSinceLastAccessTimeGreaterThan));
        }

        /**
         * @param tierToCoolAfterDaysSinceModificationGreaterThan The age in days after last modification to tier blobs to cool storage. Supports blob currently at Hot tier. Must be between 0 and 99999. Defaults to `-1`.
         * 
         * @return builder
         * 
         */
        public Builder tierToCoolAfterDaysSinceModificationGreaterThan(@Nullable Output<Integer> tierToCoolAfterDaysSinceModificationGreaterThan) {
            $.tierToCoolAfterDaysSinceModificationGreaterThan = tierToCoolAfterDaysSinceModificationGreaterThan;
            return this;
        }

        /**
         * @param tierToCoolAfterDaysSinceModificationGreaterThan The age in days after last modification to tier blobs to cool storage. Supports blob currently at Hot tier. Must be between 0 and 99999. Defaults to `-1`.
         * 
         * @return builder
         * 
         */
        public Builder tierToCoolAfterDaysSinceModificationGreaterThan(Integer tierToCoolAfterDaysSinceModificationGreaterThan) {
            return tierToCoolAfterDaysSinceModificationGreaterThan(Output.of(tierToCoolAfterDaysSinceModificationGreaterThan));
        }

        public ManagementPolicyRuleActionsBaseBlobArgs build() {
            return $;
        }
    }

}
