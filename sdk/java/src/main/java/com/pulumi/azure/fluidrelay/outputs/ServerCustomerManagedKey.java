// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.fluidrelay.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class ServerCustomerManagedKey {
    /**
     * @return The Key Vault Key Id that will be used to encrypt the Fluid Relay Server.
     * 
     */
    private String keyVaultKeyId;
    /**
     * @return The User Assigned Managed Identity ID to be used for accessing the Customer Managed Key for encryption.
     * 
     */
    private String userAssignedIdentityId;

    private ServerCustomerManagedKey() {}
    /**
     * @return The Key Vault Key Id that will be used to encrypt the Fluid Relay Server.
     * 
     */
    public String keyVaultKeyId() {
        return this.keyVaultKeyId;
    }
    /**
     * @return The User Assigned Managed Identity ID to be used for accessing the Customer Managed Key for encryption.
     * 
     */
    public String userAssignedIdentityId() {
        return this.userAssignedIdentityId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ServerCustomerManagedKey defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String keyVaultKeyId;
        private String userAssignedIdentityId;
        public Builder() {}
        public Builder(ServerCustomerManagedKey defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.keyVaultKeyId = defaults.keyVaultKeyId;
    	      this.userAssignedIdentityId = defaults.userAssignedIdentityId;
        }

        @CustomType.Setter
        public Builder keyVaultKeyId(String keyVaultKeyId) {
            if (keyVaultKeyId == null) {
              throw new MissingRequiredPropertyException("ServerCustomerManagedKey", "keyVaultKeyId");
            }
            this.keyVaultKeyId = keyVaultKeyId;
            return this;
        }
        @CustomType.Setter
        public Builder userAssignedIdentityId(String userAssignedIdentityId) {
            if (userAssignedIdentityId == null) {
              throw new MissingRequiredPropertyException("ServerCustomerManagedKey", "userAssignedIdentityId");
            }
            this.userAssignedIdentityId = userAssignedIdentityId;
            return this;
        }
        public ServerCustomerManagedKey build() {
            final var _resultValue = new ServerCustomerManagedKey();
            _resultValue.keyVaultKeyId = keyVaultKeyId;
            _resultValue.userAssignedIdentityId = userAssignedIdentityId;
            return _resultValue;
        }
    }
}
