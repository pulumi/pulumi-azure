// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.eventgrid.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class SystemTopicEventSubscriptionWebhookEndpoint {
    /**
     * @return The Azure Active Directory Application ID or URI to get the access token that will be included as the bearer token in delivery requests.
     * 
     */
    private @Nullable String activeDirectoryAppIdOrUri;
    /**
     * @return The Azure Active Directory Tenant ID to get the access token that will be included as the bearer token in delivery requests.
     * 
     */
    private @Nullable String activeDirectoryTenantId;
    /**
     * @return The base url of the webhook where the Event Subscription will receive events.
     * 
     */
    private @Nullable String baseUrl;
    /**
     * @return Maximum number of events per batch.
     * 
     */
    private @Nullable Integer maxEventsPerBatch;
    /**
     * @return Preferred batch size in Kilobytes.
     * 
     */
    private @Nullable Integer preferredBatchSizeInKilobytes;
    /**
     * @return Specifies the url of the webhook where the Event Subscription will receive events.
     * 
     */
    private String url;

    private SystemTopicEventSubscriptionWebhookEndpoint() {}
    /**
     * @return The Azure Active Directory Application ID or URI to get the access token that will be included as the bearer token in delivery requests.
     * 
     */
    public Optional<String> activeDirectoryAppIdOrUri() {
        return Optional.ofNullable(this.activeDirectoryAppIdOrUri);
    }
    /**
     * @return The Azure Active Directory Tenant ID to get the access token that will be included as the bearer token in delivery requests.
     * 
     */
    public Optional<String> activeDirectoryTenantId() {
        return Optional.ofNullable(this.activeDirectoryTenantId);
    }
    /**
     * @return The base url of the webhook where the Event Subscription will receive events.
     * 
     */
    public Optional<String> baseUrl() {
        return Optional.ofNullable(this.baseUrl);
    }
    /**
     * @return Maximum number of events per batch.
     * 
     */
    public Optional<Integer> maxEventsPerBatch() {
        return Optional.ofNullable(this.maxEventsPerBatch);
    }
    /**
     * @return Preferred batch size in Kilobytes.
     * 
     */
    public Optional<Integer> preferredBatchSizeInKilobytes() {
        return Optional.ofNullable(this.preferredBatchSizeInKilobytes);
    }
    /**
     * @return Specifies the url of the webhook where the Event Subscription will receive events.
     * 
     */
    public String url() {
        return this.url;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SystemTopicEventSubscriptionWebhookEndpoint defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String activeDirectoryAppIdOrUri;
        private @Nullable String activeDirectoryTenantId;
        private @Nullable String baseUrl;
        private @Nullable Integer maxEventsPerBatch;
        private @Nullable Integer preferredBatchSizeInKilobytes;
        private String url;
        public Builder() {}
        public Builder(SystemTopicEventSubscriptionWebhookEndpoint defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.activeDirectoryAppIdOrUri = defaults.activeDirectoryAppIdOrUri;
    	      this.activeDirectoryTenantId = defaults.activeDirectoryTenantId;
    	      this.baseUrl = defaults.baseUrl;
    	      this.maxEventsPerBatch = defaults.maxEventsPerBatch;
    	      this.preferredBatchSizeInKilobytes = defaults.preferredBatchSizeInKilobytes;
    	      this.url = defaults.url;
        }

        @CustomType.Setter
        public Builder activeDirectoryAppIdOrUri(@Nullable String activeDirectoryAppIdOrUri) {

            this.activeDirectoryAppIdOrUri = activeDirectoryAppIdOrUri;
            return this;
        }
        @CustomType.Setter
        public Builder activeDirectoryTenantId(@Nullable String activeDirectoryTenantId) {

            this.activeDirectoryTenantId = activeDirectoryTenantId;
            return this;
        }
        @CustomType.Setter
        public Builder baseUrl(@Nullable String baseUrl) {

            this.baseUrl = baseUrl;
            return this;
        }
        @CustomType.Setter
        public Builder maxEventsPerBatch(@Nullable Integer maxEventsPerBatch) {

            this.maxEventsPerBatch = maxEventsPerBatch;
            return this;
        }
        @CustomType.Setter
        public Builder preferredBatchSizeInKilobytes(@Nullable Integer preferredBatchSizeInKilobytes) {

            this.preferredBatchSizeInKilobytes = preferredBatchSizeInKilobytes;
            return this;
        }
        @CustomType.Setter
        public Builder url(String url) {
            if (url == null) {
              throw new MissingRequiredPropertyException("SystemTopicEventSubscriptionWebhookEndpoint", "url");
            }
            this.url = url;
            return this;
        }
        public SystemTopicEventSubscriptionWebhookEndpoint build() {
            final var _resultValue = new SystemTopicEventSubscriptionWebhookEndpoint();
            _resultValue.activeDirectoryAppIdOrUri = activeDirectoryAppIdOrUri;
            _resultValue.activeDirectoryTenantId = activeDirectoryTenantId;
            _resultValue.baseUrl = baseUrl;
            _resultValue.maxEventsPerBatch = maxEventsPerBatch;
            _resultValue.preferredBatchSizeInKilobytes = preferredBatchSizeInKilobytes;
            _resultValue.url = url;
            return _resultValue;
        }
    }
}
