// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.compute.inputs;

import com.pulumi.azure.compute.inputs.WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressIpTagArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressArgs extends com.pulumi.resources.ResourceArgs {

    public static final WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressArgs Empty = new WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressArgs();

    /**
     * The Prefix which should be used for the Domain Name Label for each Virtual Machine Instance. Azure concatenates the Domain Name Label and Virtual Machine Index to create a unique Domain Name Label for each Virtual Machine.
     * 
     */
    @Import(name="domainNameLabel")
    private @Nullable Output<String> domainNameLabel;

    /**
     * @return The Prefix which should be used for the Domain Name Label for each Virtual Machine Instance. Azure concatenates the Domain Name Label and Virtual Machine Index to create a unique Domain Name Label for each Virtual Machine.
     * 
     */
    public Optional<Output<String>> domainNameLabel() {
        return Optional.ofNullable(this.domainNameLabel);
    }

    /**
     * The Idle Timeout in Minutes for the Public IP Address. Possible values are in the range `4` to `32`.
     * 
     */
    @Import(name="idleTimeoutInMinutes")
    private @Nullable Output<Integer> idleTimeoutInMinutes;

    /**
     * @return The Idle Timeout in Minutes for the Public IP Address. Possible values are in the range `4` to `32`.
     * 
     */
    public Optional<Output<Integer>> idleTimeoutInMinutes() {
        return Optional.ofNullable(this.idleTimeoutInMinutes);
    }

    /**
     * One or more `ip_tag` blocks as defined above. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="ipTags")
    private @Nullable Output<List<WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressIpTagArgs>> ipTags;

    /**
     * @return One or more `ip_tag` blocks as defined above. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<List<WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressIpTagArgs>>> ipTags() {
        return Optional.ofNullable(this.ipTags);
    }

    /**
     * The Name of the Public IP Address Configuration.
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    /**
     * @return The Name of the Public IP Address Configuration.
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    /**
     * The ID of the Public IP Address Prefix from where Public IP Addresses should be allocated. Changing this forces a new resource to be created.
     * 
     * &gt; **NOTE:** This functionality is in Preview and must be opted into via `az feature register --namespace Microsoft.Network --name AllowBringYourOwnPublicIpAddress` and then `az provider register -n Microsoft.Network`.
     * 
     */
    @Import(name="publicIpPrefixId")
    private @Nullable Output<String> publicIpPrefixId;

    /**
     * @return The ID of the Public IP Address Prefix from where Public IP Addresses should be allocated. Changing this forces a new resource to be created.
     * 
     * &gt; **NOTE:** This functionality is in Preview and must be opted into via `az feature register --namespace Microsoft.Network --name AllowBringYourOwnPublicIpAddress` and then `az provider register -n Microsoft.Network`.
     * 
     */
    public Optional<Output<String>> publicIpPrefixId() {
        return Optional.ofNullable(this.publicIpPrefixId);
    }

    /**
     * The Internet Protocol Version which should be used for this public IP address. Possible values are `IPv4` and `IPv6`. Defaults to `IPv4`. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="version")
    private @Nullable Output<String> version;

    /**
     * @return The Internet Protocol Version which should be used for this public IP address. Possible values are `IPv4` and `IPv6`. Defaults to `IPv4`. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> version() {
        return Optional.ofNullable(this.version);
    }

    private WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressArgs() {}

    private WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressArgs(WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressArgs $) {
        this.domainNameLabel = $.domainNameLabel;
        this.idleTimeoutInMinutes = $.idleTimeoutInMinutes;
        this.ipTags = $.ipTags;
        this.name = $.name;
        this.publicIpPrefixId = $.publicIpPrefixId;
        this.version = $.version;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressArgs $;

        public Builder() {
            $ = new WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressArgs();
        }

        public Builder(WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressArgs defaults) {
            $ = new WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param domainNameLabel The Prefix which should be used for the Domain Name Label for each Virtual Machine Instance. Azure concatenates the Domain Name Label and Virtual Machine Index to create a unique Domain Name Label for each Virtual Machine.
         * 
         * @return builder
         * 
         */
        public Builder domainNameLabel(@Nullable Output<String> domainNameLabel) {
            $.domainNameLabel = domainNameLabel;
            return this;
        }

        /**
         * @param domainNameLabel The Prefix which should be used for the Domain Name Label for each Virtual Machine Instance. Azure concatenates the Domain Name Label and Virtual Machine Index to create a unique Domain Name Label for each Virtual Machine.
         * 
         * @return builder
         * 
         */
        public Builder domainNameLabel(String domainNameLabel) {
            return domainNameLabel(Output.of(domainNameLabel));
        }

        /**
         * @param idleTimeoutInMinutes The Idle Timeout in Minutes for the Public IP Address. Possible values are in the range `4` to `32`.
         * 
         * @return builder
         * 
         */
        public Builder idleTimeoutInMinutes(@Nullable Output<Integer> idleTimeoutInMinutes) {
            $.idleTimeoutInMinutes = idleTimeoutInMinutes;
            return this;
        }

        /**
         * @param idleTimeoutInMinutes The Idle Timeout in Minutes for the Public IP Address. Possible values are in the range `4` to `32`.
         * 
         * @return builder
         * 
         */
        public Builder idleTimeoutInMinutes(Integer idleTimeoutInMinutes) {
            return idleTimeoutInMinutes(Output.of(idleTimeoutInMinutes));
        }

        /**
         * @param ipTags One or more `ip_tag` blocks as defined above. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder ipTags(@Nullable Output<List<WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressIpTagArgs>> ipTags) {
            $.ipTags = ipTags;
            return this;
        }

        /**
         * @param ipTags One or more `ip_tag` blocks as defined above. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder ipTags(List<WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressIpTagArgs> ipTags) {
            return ipTags(Output.of(ipTags));
        }

        /**
         * @param ipTags One or more `ip_tag` blocks as defined above. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder ipTags(WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressIpTagArgs... ipTags) {
            return ipTags(List.of(ipTags));
        }

        /**
         * @param name The Name of the Public IP Address Configuration.
         * 
         * @return builder
         * 
         */
        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The Name of the Public IP Address Configuration.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param publicIpPrefixId The ID of the Public IP Address Prefix from where Public IP Addresses should be allocated. Changing this forces a new resource to be created.
         * 
         * &gt; **NOTE:** This functionality is in Preview and must be opted into via `az feature register --namespace Microsoft.Network --name AllowBringYourOwnPublicIpAddress` and then `az provider register -n Microsoft.Network`.
         * 
         * @return builder
         * 
         */
        public Builder publicIpPrefixId(@Nullable Output<String> publicIpPrefixId) {
            $.publicIpPrefixId = publicIpPrefixId;
            return this;
        }

        /**
         * @param publicIpPrefixId The ID of the Public IP Address Prefix from where Public IP Addresses should be allocated. Changing this forces a new resource to be created.
         * 
         * &gt; **NOTE:** This functionality is in Preview and must be opted into via `az feature register --namespace Microsoft.Network --name AllowBringYourOwnPublicIpAddress` and then `az provider register -n Microsoft.Network`.
         * 
         * @return builder
         * 
         */
        public Builder publicIpPrefixId(String publicIpPrefixId) {
            return publicIpPrefixId(Output.of(publicIpPrefixId));
        }

        /**
         * @param version The Internet Protocol Version which should be used for this public IP address. Possible values are `IPv4` and `IPv6`. Defaults to `IPv4`. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder version(@Nullable Output<String> version) {
            $.version = version;
            return this;
        }

        /**
         * @param version The Internet Protocol Version which should be used for this public IP address. Possible values are `IPv4` and `IPv6`. Defaults to `IPv4`. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder version(String version) {
            return version(Output.of(version));
        }

        public WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressArgs build() {
            if ($.name == null) {
                throw new MissingRequiredPropertyException("WindowsVirtualMachineScaleSetNetworkInterfaceIpConfigurationPublicIpAddressArgs", "name");
            }
            return $;
        }
    }

}
