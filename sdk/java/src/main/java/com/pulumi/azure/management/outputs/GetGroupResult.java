// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.management.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetGroupResult {
    /**
     * @return A list of Management Group IDs which directly or indirectly belong to this Management Group.
     * 
     */
    private List<String> allManagementGroupIds;
    /**
     * @return A list of Subscription IDs which are assigned to this Management Group or its children Management Groups.
     * 
     */
    private List<String> allSubscriptionIds;
    private String displayName;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return A list of Management Group IDs which directly belong to this Management Group.
     * 
     */
    private List<String> managementGroupIds;
    private String name;
    /**
     * @return The ID of any Parent Management Group.
     * 
     */
    private String parentManagementGroupId;
    /**
     * @return A list of Subscription IDs which are directly assigned to this Management Group.
     * 
     */
    private List<String> subscriptionIds;

    private GetGroupResult() {}
    /**
     * @return A list of Management Group IDs which directly or indirectly belong to this Management Group.
     * 
     */
    public List<String> allManagementGroupIds() {
        return this.allManagementGroupIds;
    }
    /**
     * @return A list of Subscription IDs which are assigned to this Management Group or its children Management Groups.
     * 
     */
    public List<String> allSubscriptionIds() {
        return this.allSubscriptionIds;
    }
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return A list of Management Group IDs which directly belong to this Management Group.
     * 
     */
    public List<String> managementGroupIds() {
        return this.managementGroupIds;
    }
    public String name() {
        return this.name;
    }
    /**
     * @return The ID of any Parent Management Group.
     * 
     */
    public String parentManagementGroupId() {
        return this.parentManagementGroupId;
    }
    /**
     * @return A list of Subscription IDs which are directly assigned to this Management Group.
     * 
     */
    public List<String> subscriptionIds() {
        return this.subscriptionIds;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetGroupResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<String> allManagementGroupIds;
        private List<String> allSubscriptionIds;
        private String displayName;
        private String id;
        private List<String> managementGroupIds;
        private String name;
        private String parentManagementGroupId;
        private List<String> subscriptionIds;
        public Builder() {}
        public Builder(GetGroupResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.allManagementGroupIds = defaults.allManagementGroupIds;
    	      this.allSubscriptionIds = defaults.allSubscriptionIds;
    	      this.displayName = defaults.displayName;
    	      this.id = defaults.id;
    	      this.managementGroupIds = defaults.managementGroupIds;
    	      this.name = defaults.name;
    	      this.parentManagementGroupId = defaults.parentManagementGroupId;
    	      this.subscriptionIds = defaults.subscriptionIds;
        }

        @CustomType.Setter
        public Builder allManagementGroupIds(List<String> allManagementGroupIds) {
            this.allManagementGroupIds = Objects.requireNonNull(allManagementGroupIds);
            return this;
        }
        public Builder allManagementGroupIds(String... allManagementGroupIds) {
            return allManagementGroupIds(List.of(allManagementGroupIds));
        }
        @CustomType.Setter
        public Builder allSubscriptionIds(List<String> allSubscriptionIds) {
            this.allSubscriptionIds = Objects.requireNonNull(allSubscriptionIds);
            return this;
        }
        public Builder allSubscriptionIds(String... allSubscriptionIds) {
            return allSubscriptionIds(List.of(allSubscriptionIds));
        }
        @CustomType.Setter
        public Builder displayName(String displayName) {
            this.displayName = Objects.requireNonNull(displayName);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder managementGroupIds(List<String> managementGroupIds) {
            this.managementGroupIds = Objects.requireNonNull(managementGroupIds);
            return this;
        }
        public Builder managementGroupIds(String... managementGroupIds) {
            return managementGroupIds(List.of(managementGroupIds));
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder parentManagementGroupId(String parentManagementGroupId) {
            this.parentManagementGroupId = Objects.requireNonNull(parentManagementGroupId);
            return this;
        }
        @CustomType.Setter
        public Builder subscriptionIds(List<String> subscriptionIds) {
            this.subscriptionIds = Objects.requireNonNull(subscriptionIds);
            return this;
        }
        public Builder subscriptionIds(String... subscriptionIds) {
            return subscriptionIds(List.of(subscriptionIds));
        }
        public GetGroupResult build() {
            final var o = new GetGroupResult();
            o.allManagementGroupIds = allManagementGroupIds;
            o.allSubscriptionIds = allSubscriptionIds;
            o.displayName = displayName;
            o.id = id;
            o.managementGroupIds = managementGroupIds;
            o.name = name;
            o.parentManagementGroupId = parentManagementGroupId;
            o.subscriptionIds = subscriptionIds;
            return o;
        }
    }
}
