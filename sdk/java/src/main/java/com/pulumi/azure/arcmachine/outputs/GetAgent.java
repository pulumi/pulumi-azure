// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.arcmachine.outputs;

import com.pulumi.azure.arcmachine.outputs.GetAgentExtensionsAllowList;
import com.pulumi.azure.arcmachine.outputs.GetAgentExtensionsBlockList;
import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetAgent {
    /**
     * @return A `extensions_allow_list` block as defined below.
     * 
     */
    private List<GetAgentExtensionsAllowList> extensionsAllowLists;
    /**
     * @return A `extensions_block_list` block as defined below.
     * 
     */
    private List<GetAgentExtensionsBlockList> extensionsBlockLists;
    /**
     * @return Specifies whether the extension service is enabled or disabled.
     * 
     */
    private Boolean extensionsEnabled;
    /**
     * @return Specified whether the guest configuration service is enabled or disabled.
     * 
     */
    private Boolean guestConfigurationEnabled;
    /**
     * @return Specifies the list of ports that the agent will be able to listen on.
     * 
     */
    private List<String> incomingConnectionsPorts;
    /**
     * @return List of service names which should not use the specified proxy server.
     * 
     */
    private List<String> proxyBypasses;
    /**
     * @return Specifies the URL of the proxy to be used.
     * 
     */
    private String proxyUrl;

    private GetAgent() {}
    /**
     * @return A `extensions_allow_list` block as defined below.
     * 
     */
    public List<GetAgentExtensionsAllowList> extensionsAllowLists() {
        return this.extensionsAllowLists;
    }
    /**
     * @return A `extensions_block_list` block as defined below.
     * 
     */
    public List<GetAgentExtensionsBlockList> extensionsBlockLists() {
        return this.extensionsBlockLists;
    }
    /**
     * @return Specifies whether the extension service is enabled or disabled.
     * 
     */
    public Boolean extensionsEnabled() {
        return this.extensionsEnabled;
    }
    /**
     * @return Specified whether the guest configuration service is enabled or disabled.
     * 
     */
    public Boolean guestConfigurationEnabled() {
        return this.guestConfigurationEnabled;
    }
    /**
     * @return Specifies the list of ports that the agent will be able to listen on.
     * 
     */
    public List<String> incomingConnectionsPorts() {
        return this.incomingConnectionsPorts;
    }
    /**
     * @return List of service names which should not use the specified proxy server.
     * 
     */
    public List<String> proxyBypasses() {
        return this.proxyBypasses;
    }
    /**
     * @return Specifies the URL of the proxy to be used.
     * 
     */
    public String proxyUrl() {
        return this.proxyUrl;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAgent defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetAgentExtensionsAllowList> extensionsAllowLists;
        private List<GetAgentExtensionsBlockList> extensionsBlockLists;
        private Boolean extensionsEnabled;
        private Boolean guestConfigurationEnabled;
        private List<String> incomingConnectionsPorts;
        private List<String> proxyBypasses;
        private String proxyUrl;
        public Builder() {}
        public Builder(GetAgent defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.extensionsAllowLists = defaults.extensionsAllowLists;
    	      this.extensionsBlockLists = defaults.extensionsBlockLists;
    	      this.extensionsEnabled = defaults.extensionsEnabled;
    	      this.guestConfigurationEnabled = defaults.guestConfigurationEnabled;
    	      this.incomingConnectionsPorts = defaults.incomingConnectionsPorts;
    	      this.proxyBypasses = defaults.proxyBypasses;
    	      this.proxyUrl = defaults.proxyUrl;
        }

        @CustomType.Setter
        public Builder extensionsAllowLists(List<GetAgentExtensionsAllowList> extensionsAllowLists) {
            this.extensionsAllowLists = Objects.requireNonNull(extensionsAllowLists);
            return this;
        }
        public Builder extensionsAllowLists(GetAgentExtensionsAllowList... extensionsAllowLists) {
            return extensionsAllowLists(List.of(extensionsAllowLists));
        }
        @CustomType.Setter
        public Builder extensionsBlockLists(List<GetAgentExtensionsBlockList> extensionsBlockLists) {
            this.extensionsBlockLists = Objects.requireNonNull(extensionsBlockLists);
            return this;
        }
        public Builder extensionsBlockLists(GetAgentExtensionsBlockList... extensionsBlockLists) {
            return extensionsBlockLists(List.of(extensionsBlockLists));
        }
        @CustomType.Setter
        public Builder extensionsEnabled(Boolean extensionsEnabled) {
            this.extensionsEnabled = Objects.requireNonNull(extensionsEnabled);
            return this;
        }
        @CustomType.Setter
        public Builder guestConfigurationEnabled(Boolean guestConfigurationEnabled) {
            this.guestConfigurationEnabled = Objects.requireNonNull(guestConfigurationEnabled);
            return this;
        }
        @CustomType.Setter
        public Builder incomingConnectionsPorts(List<String> incomingConnectionsPorts) {
            this.incomingConnectionsPorts = Objects.requireNonNull(incomingConnectionsPorts);
            return this;
        }
        public Builder incomingConnectionsPorts(String... incomingConnectionsPorts) {
            return incomingConnectionsPorts(List.of(incomingConnectionsPorts));
        }
        @CustomType.Setter
        public Builder proxyBypasses(List<String> proxyBypasses) {
            this.proxyBypasses = Objects.requireNonNull(proxyBypasses);
            return this;
        }
        public Builder proxyBypasses(String... proxyBypasses) {
            return proxyBypasses(List.of(proxyBypasses));
        }
        @CustomType.Setter
        public Builder proxyUrl(String proxyUrl) {
            this.proxyUrl = Objects.requireNonNull(proxyUrl);
            return this;
        }
        public GetAgent build() {
            final var _resultValue = new GetAgent();
            _resultValue.extensionsAllowLists = extensionsAllowLists;
            _resultValue.extensionsBlockLists = extensionsBlockLists;
            _resultValue.extensionsEnabled = extensionsEnabled;
            _resultValue.guestConfigurationEnabled = guestConfigurationEnabled;
            _resultValue.incomingConnectionsPorts = incomingConnectionsPorts;
            _resultValue.proxyBypasses = proxyBypasses;
            _resultValue.proxyUrl = proxyUrl;
            return _resultValue;
        }
    }
}
