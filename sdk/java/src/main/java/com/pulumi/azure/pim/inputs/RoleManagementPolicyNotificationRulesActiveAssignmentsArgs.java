// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.pim.inputs;

import com.pulumi.azure.pim.inputs.RoleManagementPolicyNotificationRulesActiveAssignmentsAdminNotificationsArgs;
import com.pulumi.azure.pim.inputs.RoleManagementPolicyNotificationRulesActiveAssignmentsApproverNotificationsArgs;
import com.pulumi.azure.pim.inputs.RoleManagementPolicyNotificationRulesActiveAssignmentsAssigneeNotificationsArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class RoleManagementPolicyNotificationRulesActiveAssignmentsArgs extends com.pulumi.resources.ResourceArgs {

    public static final RoleManagementPolicyNotificationRulesActiveAssignmentsArgs Empty = new RoleManagementPolicyNotificationRulesActiveAssignmentsArgs();

    /**
     * Admin notification settings
     * 
     */
    @Import(name="adminNotifications")
    private @Nullable Output<RoleManagementPolicyNotificationRulesActiveAssignmentsAdminNotificationsArgs> adminNotifications;

    /**
     * @return Admin notification settings
     * 
     */
    public Optional<Output<RoleManagementPolicyNotificationRulesActiveAssignmentsAdminNotificationsArgs>> adminNotifications() {
        return Optional.ofNullable(this.adminNotifications);
    }

    /**
     * Approver notification settings
     * 
     */
    @Import(name="approverNotifications")
    private @Nullable Output<RoleManagementPolicyNotificationRulesActiveAssignmentsApproverNotificationsArgs> approverNotifications;

    /**
     * @return Approver notification settings
     * 
     */
    public Optional<Output<RoleManagementPolicyNotificationRulesActiveAssignmentsApproverNotificationsArgs>> approverNotifications() {
        return Optional.ofNullable(this.approverNotifications);
    }

    /**
     * Assignee notification settings
     * 
     */
    @Import(name="assigneeNotifications")
    private @Nullable Output<RoleManagementPolicyNotificationRulesActiveAssignmentsAssigneeNotificationsArgs> assigneeNotifications;

    /**
     * @return Assignee notification settings
     * 
     */
    public Optional<Output<RoleManagementPolicyNotificationRulesActiveAssignmentsAssigneeNotificationsArgs>> assigneeNotifications() {
        return Optional.ofNullable(this.assigneeNotifications);
    }

    private RoleManagementPolicyNotificationRulesActiveAssignmentsArgs() {}

    private RoleManagementPolicyNotificationRulesActiveAssignmentsArgs(RoleManagementPolicyNotificationRulesActiveAssignmentsArgs $) {
        this.adminNotifications = $.adminNotifications;
        this.approverNotifications = $.approverNotifications;
        this.assigneeNotifications = $.assigneeNotifications;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RoleManagementPolicyNotificationRulesActiveAssignmentsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RoleManagementPolicyNotificationRulesActiveAssignmentsArgs $;

        public Builder() {
            $ = new RoleManagementPolicyNotificationRulesActiveAssignmentsArgs();
        }

        public Builder(RoleManagementPolicyNotificationRulesActiveAssignmentsArgs defaults) {
            $ = new RoleManagementPolicyNotificationRulesActiveAssignmentsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param adminNotifications Admin notification settings
         * 
         * @return builder
         * 
         */
        public Builder adminNotifications(@Nullable Output<RoleManagementPolicyNotificationRulesActiveAssignmentsAdminNotificationsArgs> adminNotifications) {
            $.adminNotifications = adminNotifications;
            return this;
        }

        /**
         * @param adminNotifications Admin notification settings
         * 
         * @return builder
         * 
         */
        public Builder adminNotifications(RoleManagementPolicyNotificationRulesActiveAssignmentsAdminNotificationsArgs adminNotifications) {
            return adminNotifications(Output.of(adminNotifications));
        }

        /**
         * @param approverNotifications Approver notification settings
         * 
         * @return builder
         * 
         */
        public Builder approverNotifications(@Nullable Output<RoleManagementPolicyNotificationRulesActiveAssignmentsApproverNotificationsArgs> approverNotifications) {
            $.approverNotifications = approverNotifications;
            return this;
        }

        /**
         * @param approverNotifications Approver notification settings
         * 
         * @return builder
         * 
         */
        public Builder approverNotifications(RoleManagementPolicyNotificationRulesActiveAssignmentsApproverNotificationsArgs approverNotifications) {
            return approverNotifications(Output.of(approverNotifications));
        }

        /**
         * @param assigneeNotifications Assignee notification settings
         * 
         * @return builder
         * 
         */
        public Builder assigneeNotifications(@Nullable Output<RoleManagementPolicyNotificationRulesActiveAssignmentsAssigneeNotificationsArgs> assigneeNotifications) {
            $.assigneeNotifications = assigneeNotifications;
            return this;
        }

        /**
         * @param assigneeNotifications Assignee notification settings
         * 
         * @return builder
         * 
         */
        public Builder assigneeNotifications(RoleManagementPolicyNotificationRulesActiveAssignmentsAssigneeNotificationsArgs assigneeNotifications) {
            return assigneeNotifications(Output.of(assigneeNotifications));
        }

        public RoleManagementPolicyNotificationRulesActiveAssignmentsArgs build() {
            return $;
        }
    }

}
