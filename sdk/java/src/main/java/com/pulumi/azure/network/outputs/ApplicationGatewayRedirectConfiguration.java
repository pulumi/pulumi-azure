// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.network.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ApplicationGatewayRedirectConfiguration {
    /**
     * @return The ID of the Rewrite Rule Set
     * 
     */
    private @Nullable String id;
    /**
     * @return Whether to include the path in the redirected URL. Defaults to `false`
     * 
     */
    private @Nullable Boolean includePath;
    /**
     * @return Whether to include the query string in the redirected URL. Default to `false`
     * 
     */
    private @Nullable Boolean includeQueryString;
    /**
     * @return Unique name of the redirect configuration block
     * 
     */
    private String name;
    /**
     * @return The type of redirect. Possible values are `Permanent`, `Temporary`, `Found` and `SeeOther`
     * 
     */
    private String redirectType;
    private @Nullable String targetListenerId;
    /**
     * @return The name of the listener to redirect to. Cannot be set if `target_url` is set.
     * 
     */
    private @Nullable String targetListenerName;
    /**
     * @return The URL to redirect the request to. Cannot be set if `target_listener_name` is set.
     * 
     */
    private @Nullable String targetUrl;

    private ApplicationGatewayRedirectConfiguration() {}
    /**
     * @return The ID of the Rewrite Rule Set
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return Whether to include the path in the redirected URL. Defaults to `false`
     * 
     */
    public Optional<Boolean> includePath() {
        return Optional.ofNullable(this.includePath);
    }
    /**
     * @return Whether to include the query string in the redirected URL. Default to `false`
     * 
     */
    public Optional<Boolean> includeQueryString() {
        return Optional.ofNullable(this.includeQueryString);
    }
    /**
     * @return Unique name of the redirect configuration block
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The type of redirect. Possible values are `Permanent`, `Temporary`, `Found` and `SeeOther`
     * 
     */
    public String redirectType() {
        return this.redirectType;
    }
    public Optional<String> targetListenerId() {
        return Optional.ofNullable(this.targetListenerId);
    }
    /**
     * @return The name of the listener to redirect to. Cannot be set if `target_url` is set.
     * 
     */
    public Optional<String> targetListenerName() {
        return Optional.ofNullable(this.targetListenerName);
    }
    /**
     * @return The URL to redirect the request to. Cannot be set if `target_listener_name` is set.
     * 
     */
    public Optional<String> targetUrl() {
        return Optional.ofNullable(this.targetUrl);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ApplicationGatewayRedirectConfiguration defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String id;
        private @Nullable Boolean includePath;
        private @Nullable Boolean includeQueryString;
        private String name;
        private String redirectType;
        private @Nullable String targetListenerId;
        private @Nullable String targetListenerName;
        private @Nullable String targetUrl;
        public Builder() {}
        public Builder(ApplicationGatewayRedirectConfiguration defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.id = defaults.id;
    	      this.includePath = defaults.includePath;
    	      this.includeQueryString = defaults.includeQueryString;
    	      this.name = defaults.name;
    	      this.redirectType = defaults.redirectType;
    	      this.targetListenerId = defaults.targetListenerId;
    	      this.targetListenerName = defaults.targetListenerName;
    	      this.targetUrl = defaults.targetUrl;
        }

        @CustomType.Setter
        public Builder id(@Nullable String id) {

            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder includePath(@Nullable Boolean includePath) {

            this.includePath = includePath;
            return this;
        }
        @CustomType.Setter
        public Builder includeQueryString(@Nullable Boolean includeQueryString) {

            this.includeQueryString = includeQueryString;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("ApplicationGatewayRedirectConfiguration", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder redirectType(String redirectType) {
            if (redirectType == null) {
              throw new MissingRequiredPropertyException("ApplicationGatewayRedirectConfiguration", "redirectType");
            }
            this.redirectType = redirectType;
            return this;
        }
        @CustomType.Setter
        public Builder targetListenerId(@Nullable String targetListenerId) {

            this.targetListenerId = targetListenerId;
            return this;
        }
        @CustomType.Setter
        public Builder targetListenerName(@Nullable String targetListenerName) {

            this.targetListenerName = targetListenerName;
            return this;
        }
        @CustomType.Setter
        public Builder targetUrl(@Nullable String targetUrl) {

            this.targetUrl = targetUrl;
            return this;
        }
        public ApplicationGatewayRedirectConfiguration build() {
            final var _resultValue = new ApplicationGatewayRedirectConfiguration();
            _resultValue.id = id;
            _resultValue.includePath = includePath;
            _resultValue.includeQueryString = includeQueryString;
            _resultValue.name = name;
            _resultValue.redirectType = redirectType;
            _resultValue.targetListenerId = targetListenerId;
            _resultValue.targetListenerName = targetListenerName;
            _resultValue.targetUrl = targetUrl;
            return _resultValue;
        }
    }
}
