// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.network.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ApplicationGatewayRedirectConfiguration {
    /**
     * @return The ID of the Rewrite Rule Set
     * 
     */
    private final @Nullable String id;
    /**
     * @return Whether or not to include the path in the redirected Url. Defaults to `false`
     * 
     */
    private final @Nullable Boolean includePath;
    /**
     * @return Whether or not to include the query string in the redirected Url. Default to `false`
     * 
     */
    private final @Nullable Boolean includeQueryString;
    /**
     * @return Unique name of the redirect configuration block
     * 
     */
    private final String name;
    /**
     * @return The type of redirect. Possible values are `Permanent`, `Temporary`, `Found` and `SeeOther`
     * 
     */
    private final String redirectType;
    private final @Nullable String targetListenerId;
    /**
     * @return The name of the listener to redirect to. Cannot be set if `target_url` is set.
     * 
     */
    private final @Nullable String targetListenerName;
    /**
     * @return The Url to redirect the request to. Cannot be set if `target_listener_name` is set.
     * 
     */
    private final @Nullable String targetUrl;

    @CustomType.Constructor
    private ApplicationGatewayRedirectConfiguration(
        @CustomType.Parameter("id") @Nullable String id,
        @CustomType.Parameter("includePath") @Nullable Boolean includePath,
        @CustomType.Parameter("includeQueryString") @Nullable Boolean includeQueryString,
        @CustomType.Parameter("name") String name,
        @CustomType.Parameter("redirectType") String redirectType,
        @CustomType.Parameter("targetListenerId") @Nullable String targetListenerId,
        @CustomType.Parameter("targetListenerName") @Nullable String targetListenerName,
        @CustomType.Parameter("targetUrl") @Nullable String targetUrl) {
        this.id = id;
        this.includePath = includePath;
        this.includeQueryString = includeQueryString;
        this.name = name;
        this.redirectType = redirectType;
        this.targetListenerId = targetListenerId;
        this.targetListenerName = targetListenerName;
        this.targetUrl = targetUrl;
    }

    /**
     * @return The ID of the Rewrite Rule Set
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return Whether or not to include the path in the redirected Url. Defaults to `false`
     * 
     */
    public Optional<Boolean> includePath() {
        return Optional.ofNullable(this.includePath);
    }
    /**
     * @return Whether or not to include the query string in the redirected Url. Default to `false`
     * 
     */
    public Optional<Boolean> includeQueryString() {
        return Optional.ofNullable(this.includeQueryString);
    }
    /**
     * @return Unique name of the redirect configuration block
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The type of redirect. Possible values are `Permanent`, `Temporary`, `Found` and `SeeOther`
     * 
     */
    public String redirectType() {
        return this.redirectType;
    }
    public Optional<String> targetListenerId() {
        return Optional.ofNullable(this.targetListenerId);
    }
    /**
     * @return The name of the listener to redirect to. Cannot be set if `target_url` is set.
     * 
     */
    public Optional<String> targetListenerName() {
        return Optional.ofNullable(this.targetListenerName);
    }
    /**
     * @return The Url to redirect the request to. Cannot be set if `target_listener_name` is set.
     * 
     */
    public Optional<String> targetUrl() {
        return Optional.ofNullable(this.targetUrl);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ApplicationGatewayRedirectConfiguration defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String id;
        private @Nullable Boolean includePath;
        private @Nullable Boolean includeQueryString;
        private String name;
        private String redirectType;
        private @Nullable String targetListenerId;
        private @Nullable String targetListenerName;
        private @Nullable String targetUrl;

        public Builder() {
    	      // Empty
        }

        public Builder(ApplicationGatewayRedirectConfiguration defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.id = defaults.id;
    	      this.includePath = defaults.includePath;
    	      this.includeQueryString = defaults.includeQueryString;
    	      this.name = defaults.name;
    	      this.redirectType = defaults.redirectType;
    	      this.targetListenerId = defaults.targetListenerId;
    	      this.targetListenerName = defaults.targetListenerName;
    	      this.targetUrl = defaults.targetUrl;
        }

        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        public Builder includePath(@Nullable Boolean includePath) {
            this.includePath = includePath;
            return this;
        }
        public Builder includeQueryString(@Nullable Boolean includeQueryString) {
            this.includeQueryString = includeQueryString;
            return this;
        }
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        public Builder redirectType(String redirectType) {
            this.redirectType = Objects.requireNonNull(redirectType);
            return this;
        }
        public Builder targetListenerId(@Nullable String targetListenerId) {
            this.targetListenerId = targetListenerId;
            return this;
        }
        public Builder targetListenerName(@Nullable String targetListenerName) {
            this.targetListenerName = targetListenerName;
            return this;
        }
        public Builder targetUrl(@Nullable String targetUrl) {
            this.targetUrl = targetUrl;
            return this;
        }        public ApplicationGatewayRedirectConfiguration build() {
            return new ApplicationGatewayRedirectConfiguration(id, includePath, includeQueryString, name, redirectType, targetListenerId, targetListenerName, targetUrl);
        }
    }
}
