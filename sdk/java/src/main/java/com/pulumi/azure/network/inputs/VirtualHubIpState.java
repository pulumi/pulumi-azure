// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.network.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class VirtualHubIpState extends com.pulumi.resources.ResourceArgs {

    public static final VirtualHubIpState Empty = new VirtualHubIpState();

    /**
     * The name which should be used for this Virtual Hub IP. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name which should be used for this Virtual Hub IP. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The private IP address of the IP configuration.
     * 
     */
    @Import(name="privateIpAddress")
    private @Nullable Output<String> privateIpAddress;

    /**
     * @return The private IP address of the IP configuration.
     * 
     */
    public Optional<Output<String>> privateIpAddress() {
        return Optional.ofNullable(this.privateIpAddress);
    }

    /**
     * The private IP address allocation method. Possible values are `Static` and `Dynamic` is allowed. Defaults to `Dynamic`.
     * 
     */
    @Import(name="privateIpAllocationMethod")
    private @Nullable Output<String> privateIpAllocationMethod;

    /**
     * @return The private IP address allocation method. Possible values are `Static` and `Dynamic` is allowed. Defaults to `Dynamic`.
     * 
     */
    public Optional<Output<String>> privateIpAllocationMethod() {
        return Optional.ofNullable(this.privateIpAllocationMethod);
    }

    /**
     * The ID of the Public IP Address. This option is required since September 1st 2021. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="publicIpAddressId")
    private @Nullable Output<String> publicIpAddressId;

    /**
     * @return The ID of the Public IP Address. This option is required since September 1st 2021. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> publicIpAddressId() {
        return Optional.ofNullable(this.publicIpAddressId);
    }

    /**
     * The ID of the Subnet that the IP will reside. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="subnetId")
    private @Nullable Output<String> subnetId;

    /**
     * @return The ID of the Subnet that the IP will reside. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> subnetId() {
        return Optional.ofNullable(this.subnetId);
    }

    /**
     * The ID of the Virtual Hub within which this IP configuration should be created. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="virtualHubId")
    private @Nullable Output<String> virtualHubId;

    /**
     * @return The ID of the Virtual Hub within which this IP configuration should be created. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> virtualHubId() {
        return Optional.ofNullable(this.virtualHubId);
    }

    private VirtualHubIpState() {}

    private VirtualHubIpState(VirtualHubIpState $) {
        this.name = $.name;
        this.privateIpAddress = $.privateIpAddress;
        this.privateIpAllocationMethod = $.privateIpAllocationMethod;
        this.publicIpAddressId = $.publicIpAddressId;
        this.subnetId = $.subnetId;
        this.virtualHubId = $.virtualHubId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VirtualHubIpState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VirtualHubIpState $;

        public Builder() {
            $ = new VirtualHubIpState();
        }

        public Builder(VirtualHubIpState defaults) {
            $ = new VirtualHubIpState(Objects.requireNonNull(defaults));
        }

        /**
         * @param name The name which should be used for this Virtual Hub IP. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name which should be used for this Virtual Hub IP. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param privateIpAddress The private IP address of the IP configuration.
         * 
         * @return builder
         * 
         */
        public Builder privateIpAddress(@Nullable Output<String> privateIpAddress) {
            $.privateIpAddress = privateIpAddress;
            return this;
        }

        /**
         * @param privateIpAddress The private IP address of the IP configuration.
         * 
         * @return builder
         * 
         */
        public Builder privateIpAddress(String privateIpAddress) {
            return privateIpAddress(Output.of(privateIpAddress));
        }

        /**
         * @param privateIpAllocationMethod The private IP address allocation method. Possible values are `Static` and `Dynamic` is allowed. Defaults to `Dynamic`.
         * 
         * @return builder
         * 
         */
        public Builder privateIpAllocationMethod(@Nullable Output<String> privateIpAllocationMethod) {
            $.privateIpAllocationMethod = privateIpAllocationMethod;
            return this;
        }

        /**
         * @param privateIpAllocationMethod The private IP address allocation method. Possible values are `Static` and `Dynamic` is allowed. Defaults to `Dynamic`.
         * 
         * @return builder
         * 
         */
        public Builder privateIpAllocationMethod(String privateIpAllocationMethod) {
            return privateIpAllocationMethod(Output.of(privateIpAllocationMethod));
        }

        /**
         * @param publicIpAddressId The ID of the Public IP Address. This option is required since September 1st 2021. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder publicIpAddressId(@Nullable Output<String> publicIpAddressId) {
            $.publicIpAddressId = publicIpAddressId;
            return this;
        }

        /**
         * @param publicIpAddressId The ID of the Public IP Address. This option is required since September 1st 2021. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder publicIpAddressId(String publicIpAddressId) {
            return publicIpAddressId(Output.of(publicIpAddressId));
        }

        /**
         * @param subnetId The ID of the Subnet that the IP will reside. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder subnetId(@Nullable Output<String> subnetId) {
            $.subnetId = subnetId;
            return this;
        }

        /**
         * @param subnetId The ID of the Subnet that the IP will reside. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder subnetId(String subnetId) {
            return subnetId(Output.of(subnetId));
        }

        /**
         * @param virtualHubId The ID of the Virtual Hub within which this IP configuration should be created. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder virtualHubId(@Nullable Output<String> virtualHubId) {
            $.virtualHubId = virtualHubId;
            return this;
        }

        /**
         * @param virtualHubId The ID of the Virtual Hub within which this IP configuration should be created. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder virtualHubId(String virtualHubId) {
            return virtualHubId(Output.of(virtualHubId));
        }

        public VirtualHubIpState build() {
            return $;
        }
    }

}
