// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.storage;

import com.pulumi.azure.storage.inputs.AccountAzureFilesAuthenticationArgs;
import com.pulumi.azure.storage.inputs.AccountBlobPropertiesArgs;
import com.pulumi.azure.storage.inputs.AccountCustomDomainArgs;
import com.pulumi.azure.storage.inputs.AccountCustomerManagedKeyArgs;
import com.pulumi.azure.storage.inputs.AccountIdentityArgs;
import com.pulumi.azure.storage.inputs.AccountImmutabilityPolicyArgs;
import com.pulumi.azure.storage.inputs.AccountNetworkRulesArgs;
import com.pulumi.azure.storage.inputs.AccountQueuePropertiesArgs;
import com.pulumi.azure.storage.inputs.AccountRoutingArgs;
import com.pulumi.azure.storage.inputs.AccountSasPolicyArgs;
import com.pulumi.azure.storage.inputs.AccountSharePropertiesArgs;
import com.pulumi.azure.storage.inputs.AccountStaticWebsiteArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AccountArgs extends com.pulumi.resources.ResourceArgs {

    public static final AccountArgs Empty = new AccountArgs();

    /**
     * Defines the access tier for `BlobStorage`, `FileStorage` and `StorageV2` accounts. Valid options are `Hot` and `Cool`, defaults to `Hot`.
     * 
     */
    @Import(name="accessTier")
    private @Nullable Output<String> accessTier;

    /**
     * @return Defines the access tier for `BlobStorage`, `FileStorage` and `StorageV2` accounts. Valid options are `Hot` and `Cool`, defaults to `Hot`.
     * 
     */
    public Optional<Output<String>> accessTier() {
        return Optional.ofNullable(this.accessTier);
    }

    /**
     * Defines the Kind of account. Valid options are `BlobStorage`, `BlockBlobStorage`, `FileStorage`, `Storage` and `StorageV2`. Defaults to `StorageV2`.
     * 
     * &gt; **NOTE:** Changing the `account_kind` value from `Storage` to `StorageV2` will not trigger a force new on the storage account, it will only upgrade the existing storage account from `Storage` to `StorageV2` keeping the existing storage account in place.
     * 
     */
    @Import(name="accountKind")
    private @Nullable Output<String> accountKind;

    /**
     * @return Defines the Kind of account. Valid options are `BlobStorage`, `BlockBlobStorage`, `FileStorage`, `Storage` and `StorageV2`. Defaults to `StorageV2`.
     * 
     * &gt; **NOTE:** Changing the `account_kind` value from `Storage` to `StorageV2` will not trigger a force new on the storage account, it will only upgrade the existing storage account from `Storage` to `StorageV2` keeping the existing storage account in place.
     * 
     */
    public Optional<Output<String>> accountKind() {
        return Optional.ofNullable(this.accountKind);
    }

    /**
     * Defines the type of replication to use for this storage account. Valid options are `LRS`, `GRS`, `RAGRS`, `ZRS`, `GZRS` and `RAGZRS`. Changing this forces a new resource to be created when types `LRS`, `GRS` and `RAGRS` are changed to `ZRS`, `GZRS` or `RAGZRS` and vice versa.
     * 
     */
    @Import(name="accountReplicationType", required=true)
    private Output<String> accountReplicationType;

    /**
     * @return Defines the type of replication to use for this storage account. Valid options are `LRS`, `GRS`, `RAGRS`, `ZRS`, `GZRS` and `RAGZRS`. Changing this forces a new resource to be created when types `LRS`, `GRS` and `RAGRS` are changed to `ZRS`, `GZRS` or `RAGZRS` and vice versa.
     * 
     */
    public Output<String> accountReplicationType() {
        return this.accountReplicationType;
    }

    /**
     * Defines the Tier to use for this storage account. Valid options are `Standard` and `Premium`. For `BlockBlobStorage` and `FileStorage` accounts only `Premium` is valid. Changing this forces a new resource to be created.
     * 
     * &gt; **NOTE:** Blobs with a tier of `Premium` are of account kind `StorageV2`.
     * 
     */
    @Import(name="accountTier", required=true)
    private Output<String> accountTier;

    /**
     * @return Defines the Tier to use for this storage account. Valid options are `Standard` and `Premium`. For `BlockBlobStorage` and `FileStorage` accounts only `Premium` is valid. Changing this forces a new resource to be created.
     * 
     * &gt; **NOTE:** Blobs with a tier of `Premium` are of account kind `StorageV2`.
     * 
     */
    public Output<String> accountTier() {
        return this.accountTier;
    }

    /**
     * Allow or disallow nested items within this Account to opt into being public. Defaults to `true`.
     * 
     * &gt; **NOTE:** At this time `allow_nested_items_to_be_public` is only supported in the Public Cloud, China Cloud, and US Government Cloud.
     * 
     */
    @Import(name="allowNestedItemsToBePublic")
    private @Nullable Output<Boolean> allowNestedItemsToBePublic;

    /**
     * @return Allow or disallow nested items within this Account to opt into being public. Defaults to `true`.
     * 
     * &gt; **NOTE:** At this time `allow_nested_items_to_be_public` is only supported in the Public Cloud, China Cloud, and US Government Cloud.
     * 
     */
    public Optional<Output<Boolean>> allowNestedItemsToBePublic() {
        return Optional.ofNullable(this.allowNestedItemsToBePublic);
    }

    /**
     * Restrict copy to and from Storage Accounts within an AAD tenant or with Private Links to the same VNet. Possible values are `AAD` and `PrivateLink`.
     * 
     */
    @Import(name="allowedCopyScope")
    private @Nullable Output<String> allowedCopyScope;

    /**
     * @return Restrict copy to and from Storage Accounts within an AAD tenant or with Private Links to the same VNet. Possible values are `AAD` and `PrivateLink`.
     * 
     */
    public Optional<Output<String>> allowedCopyScope() {
        return Optional.ofNullable(this.allowedCopyScope);
    }

    /**
     * A `azure_files_authentication` block as defined below.
     * 
     */
    @Import(name="azureFilesAuthentication")
    private @Nullable Output<AccountAzureFilesAuthenticationArgs> azureFilesAuthentication;

    /**
     * @return A `azure_files_authentication` block as defined below.
     * 
     */
    public Optional<Output<AccountAzureFilesAuthenticationArgs>> azureFilesAuthentication() {
        return Optional.ofNullable(this.azureFilesAuthentication);
    }

    /**
     * A `blob_properties` block as defined below.
     * 
     */
    @Import(name="blobProperties")
    private @Nullable Output<AccountBlobPropertiesArgs> blobProperties;

    /**
     * @return A `blob_properties` block as defined below.
     * 
     */
    public Optional<Output<AccountBlobPropertiesArgs>> blobProperties() {
        return Optional.ofNullable(this.blobProperties);
    }

    /**
     * Should cross Tenant replication be enabled? Defaults to `true`.
     * 
     */
    @Import(name="crossTenantReplicationEnabled")
    private @Nullable Output<Boolean> crossTenantReplicationEnabled;

    /**
     * @return Should cross Tenant replication be enabled? Defaults to `true`.
     * 
     */
    public Optional<Output<Boolean>> crossTenantReplicationEnabled() {
        return Optional.ofNullable(this.crossTenantReplicationEnabled);
    }

    /**
     * A `custom_domain` block as documented below.
     * 
     */
    @Import(name="customDomain")
    private @Nullable Output<AccountCustomDomainArgs> customDomain;

    /**
     * @return A `custom_domain` block as documented below.
     * 
     */
    public Optional<Output<AccountCustomDomainArgs>> customDomain() {
        return Optional.ofNullable(this.customDomain);
    }

    /**
     * A `customer_managed_key` block as documented below.
     * 
     */
    @Import(name="customerManagedKey")
    private @Nullable Output<AccountCustomerManagedKeyArgs> customerManagedKey;

    /**
     * @return A `customer_managed_key` block as documented below.
     * 
     */
    public Optional<Output<AccountCustomerManagedKeyArgs>> customerManagedKey() {
        return Optional.ofNullable(this.customerManagedKey);
    }

    /**
     * Default to Azure Active Directory authorization in the Azure portal when accessing the Storage Account. The default value is `false`
     * 
     */
    @Import(name="defaultToOauthAuthentication")
    private @Nullable Output<Boolean> defaultToOauthAuthentication;

    /**
     * @return Default to Azure Active Directory authorization in the Azure portal when accessing the Storage Account. The default value is `false`
     * 
     */
    public Optional<Output<Boolean>> defaultToOauthAuthentication() {
        return Optional.ofNullable(this.defaultToOauthAuthentication);
    }

    /**
     * Specifies the Edge Zone within the Azure Region where this Storage Account should exist. Changing this forces a new Storage Account to be created.
     * 
     */
    @Import(name="edgeZone")
    private @Nullable Output<String> edgeZone;

    /**
     * @return Specifies the Edge Zone within the Azure Region where this Storage Account should exist. Changing this forces a new Storage Account to be created.
     * 
     */
    public Optional<Output<String>> edgeZone() {
        return Optional.ofNullable(this.edgeZone);
    }

    /**
     * Boolean flag which forces HTTPS if enabled, see [here](https://docs.microsoft.com/azure/storage/storage-require-secure-transfer/) for more information. Defaults to `true`.
     * 
     */
    @Import(name="enableHttpsTrafficOnly")
    private @Nullable Output<Boolean> enableHttpsTrafficOnly;

    /**
     * @return Boolean flag which forces HTTPS if enabled, see [here](https://docs.microsoft.com/azure/storage/storage-require-secure-transfer/) for more information. Defaults to `true`.
     * 
     */
    public Optional<Output<Boolean>> enableHttpsTrafficOnly() {
        return Optional.ofNullable(this.enableHttpsTrafficOnly);
    }

    /**
     * An `identity` block as defined below.
     * 
     */
    @Import(name="identity")
    private @Nullable Output<AccountIdentityArgs> identity;

    /**
     * @return An `identity` block as defined below.
     * 
     */
    public Optional<Output<AccountIdentityArgs>> identity() {
        return Optional.ofNullable(this.identity);
    }

    /**
     * An `immutability_policy` block as defined below. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="immutabilityPolicy")
    private @Nullable Output<AccountImmutabilityPolicyArgs> immutabilityPolicy;

    /**
     * @return An `immutability_policy` block as defined below. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<AccountImmutabilityPolicyArgs>> immutabilityPolicy() {
        return Optional.ofNullable(this.immutabilityPolicy);
    }

    /**
     * Is infrastructure encryption enabled? Changing this forces a new resource to be created. Defaults to `false`.
     * 
     * &gt; **NOTE:** This can only be `true` when `account_kind` is `StorageV2` or when `account_tier` is `Premium` *and* `account_kind` is one of `BlockBlobStorage` or `FileStorage`.
     * 
     */
    @Import(name="infrastructureEncryptionEnabled")
    private @Nullable Output<Boolean> infrastructureEncryptionEnabled;

    /**
     * @return Is infrastructure encryption enabled? Changing this forces a new resource to be created. Defaults to `false`.
     * 
     * &gt; **NOTE:** This can only be `true` when `account_kind` is `StorageV2` or when `account_tier` is `Premium` *and* `account_kind` is one of `BlockBlobStorage` or `FileStorage`.
     * 
     */
    public Optional<Output<Boolean>> infrastructureEncryptionEnabled() {
        return Optional.ofNullable(this.infrastructureEncryptionEnabled);
    }

    /**
     * Is Hierarchical Namespace enabled? This can be used with Azure Data Lake Storage Gen 2 ([see here for more information](https://docs.microsoft.com/azure/storage/blobs/data-lake-storage-quickstart-create-account/)). Changing this forces a new resource to be created.
     * 
     * &gt; **NOTE:** This can only be `true` when `account_tier` is `Standard` or when `account_tier` is `Premium` *and* `account_kind` is `BlockBlobStorage`
     * 
     */
    @Import(name="isHnsEnabled")
    private @Nullable Output<Boolean> isHnsEnabled;

    /**
     * @return Is Hierarchical Namespace enabled? This can be used with Azure Data Lake Storage Gen 2 ([see here for more information](https://docs.microsoft.com/azure/storage/blobs/data-lake-storage-quickstart-create-account/)). Changing this forces a new resource to be created.
     * 
     * &gt; **NOTE:** This can only be `true` when `account_tier` is `Standard` or when `account_tier` is `Premium` *and* `account_kind` is `BlockBlobStorage`
     * 
     */
    public Optional<Output<Boolean>> isHnsEnabled() {
        return Optional.ofNullable(this.isHnsEnabled);
    }

    /**
     * Is Large File Share Enabled?
     * 
     */
    @Import(name="largeFileShareEnabled")
    private @Nullable Output<Boolean> largeFileShareEnabled;

    /**
     * @return Is Large File Share Enabled?
     * 
     */
    public Optional<Output<Boolean>> largeFileShareEnabled() {
        return Optional.ofNullable(this.largeFileShareEnabled);
    }

    /**
     * Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="location")
    private @Nullable Output<String> location;

    /**
     * @return Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * The minimum supported TLS version for the storage account. Possible values are `TLS1_0`, `TLS1_1`, and `TLS1_2`. Defaults to `TLS1_2` for new storage accounts.
     * 
     * &gt; **NOTE:** At this time `min_tls_version` is only supported in the Public Cloud, China Cloud, and US Government Cloud.
     * 
     */
    @Import(name="minTlsVersion")
    private @Nullable Output<String> minTlsVersion;

    /**
     * @return The minimum supported TLS version for the storage account. Possible values are `TLS1_0`, `TLS1_1`, and `TLS1_2`. Defaults to `TLS1_2` for new storage accounts.
     * 
     * &gt; **NOTE:** At this time `min_tls_version` is only supported in the Public Cloud, China Cloud, and US Government Cloud.
     * 
     */
    public Optional<Output<String>> minTlsVersion() {
        return Optional.ofNullable(this.minTlsVersion);
    }

    /**
     * Specifies the name of the storage account. Only lowercase Alphanumeric characters allowed. Changing this forces a new resource to be created. This must be unique across the entire Azure service, not just within the resource group.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Specifies the name of the storage account. Only lowercase Alphanumeric characters allowed. Changing this forces a new resource to be created. This must be unique across the entire Azure service, not just within the resource group.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * A `network_rules` block as documented below.
     * 
     */
    @Import(name="networkRules")
    private @Nullable Output<AccountNetworkRulesArgs> networkRules;

    /**
     * @return A `network_rules` block as documented below.
     * 
     */
    public Optional<Output<AccountNetworkRulesArgs>> networkRules() {
        return Optional.ofNullable(this.networkRules);
    }

    /**
     * Is NFSv3 protocol enabled? Changing this forces a new resource to be created. Defaults to `false`.
     * 
     * &gt; **NOTE:** This can only be `true` when `account_tier` is `Standard` and `account_kind` is `StorageV2`, or `account_tier` is `Premium` and `account_kind` is `BlockBlobStorage`. Additionally, the `is_hns_enabled` is `true` and `account_replication_type` must be `LRS` or `RAGRS`.
     * 
     */
    @Import(name="nfsv3Enabled")
    private @Nullable Output<Boolean> nfsv3Enabled;

    /**
     * @return Is NFSv3 protocol enabled? Changing this forces a new resource to be created. Defaults to `false`.
     * 
     * &gt; **NOTE:** This can only be `true` when `account_tier` is `Standard` and `account_kind` is `StorageV2`, or `account_tier` is `Premium` and `account_kind` is `BlockBlobStorage`. Additionally, the `is_hns_enabled` is `true` and `account_replication_type` must be `LRS` or `RAGRS`.
     * 
     */
    public Optional<Output<Boolean>> nfsv3Enabled() {
        return Optional.ofNullable(this.nfsv3Enabled);
    }

    /**
     * Whether the public network access is enabled? Defaults to `true`.
     * 
     */
    @Import(name="publicNetworkAccessEnabled")
    private @Nullable Output<Boolean> publicNetworkAccessEnabled;

    /**
     * @return Whether the public network access is enabled? Defaults to `true`.
     * 
     */
    public Optional<Output<Boolean>> publicNetworkAccessEnabled() {
        return Optional.ofNullable(this.publicNetworkAccessEnabled);
    }

    /**
     * The encryption type of the queue service. Possible values are `Service` and `Account`. Changing this forces a new resource to be created. Default value is `Service`.
     * 
     */
    @Import(name="queueEncryptionKeyType")
    private @Nullable Output<String> queueEncryptionKeyType;

    /**
     * @return The encryption type of the queue service. Possible values are `Service` and `Account`. Changing this forces a new resource to be created. Default value is `Service`.
     * 
     */
    public Optional<Output<String>> queueEncryptionKeyType() {
        return Optional.ofNullable(this.queueEncryptionKeyType);
    }

    /**
     * A `queue_properties` block as defined below.
     * 
     * &gt; **NOTE:** `queue_properties` cannot be set when the `account_kind` is set to `BlobStorage`
     * 
     */
    @Import(name="queueProperties")
    private @Nullable Output<AccountQueuePropertiesArgs> queueProperties;

    /**
     * @return A `queue_properties` block as defined below.
     * 
     * &gt; **NOTE:** `queue_properties` cannot be set when the `account_kind` is set to `BlobStorage`
     * 
     */
    public Optional<Output<AccountQueuePropertiesArgs>> queueProperties() {
        return Optional.ofNullable(this.queueProperties);
    }

    /**
     * The name of the resource group in which to create the storage account. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="resourceGroupName", required=true)
    private Output<String> resourceGroupName;

    /**
     * @return The name of the resource group in which to create the storage account. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }

    /**
     * A `routing` block as defined below.
     * 
     */
    @Import(name="routing")
    private @Nullable Output<AccountRoutingArgs> routing;

    /**
     * @return A `routing` block as defined below.
     * 
     */
    public Optional<Output<AccountRoutingArgs>> routing() {
        return Optional.ofNullable(this.routing);
    }

    /**
     * A `sas_policy` block as defined below.
     * 
     */
    @Import(name="sasPolicy")
    private @Nullable Output<AccountSasPolicyArgs> sasPolicy;

    /**
     * @return A `sas_policy` block as defined below.
     * 
     */
    public Optional<Output<AccountSasPolicyArgs>> sasPolicy() {
        return Optional.ofNullable(this.sasPolicy);
    }

    /**
     * Boolean, enable SFTP for the storage account
     * 
     * &gt; **NOTE:** SFTP support requires `is_hns_enabled` set to `true`. [More information on SFTP support can be found here](https://learn.microsoft.com/azure/storage/blobs/secure-file-transfer-protocol-support). Defaults to `false`
     * 
     */
    @Import(name="sftpEnabled")
    private @Nullable Output<Boolean> sftpEnabled;

    /**
     * @return Boolean, enable SFTP for the storage account
     * 
     * &gt; **NOTE:** SFTP support requires `is_hns_enabled` set to `true`. [More information on SFTP support can be found here](https://learn.microsoft.com/azure/storage/blobs/secure-file-transfer-protocol-support). Defaults to `false`
     * 
     */
    public Optional<Output<Boolean>> sftpEnabled() {
        return Optional.ofNullable(this.sftpEnabled);
    }

    /**
     * A `share_properties` block as defined below.
     * 
     */
    @Import(name="shareProperties")
    private @Nullable Output<AccountSharePropertiesArgs> shareProperties;

    /**
     * @return A `share_properties` block as defined below.
     * 
     */
    public Optional<Output<AccountSharePropertiesArgs>> shareProperties() {
        return Optional.ofNullable(this.shareProperties);
    }

    @Import(name="sharedAccessKeyEnabled")
    private @Nullable Output<Boolean> sharedAccessKeyEnabled;

    public Optional<Output<Boolean>> sharedAccessKeyEnabled() {
        return Optional.ofNullable(this.sharedAccessKeyEnabled);
    }

    /**
     * A `static_website` block as defined below.
     * 
     * &gt; **NOTE:** `static_website` can only be set when the `account_kind` is set to `StorageV2` or `BlockBlobStorage`.
     * 
     */
    @Import(name="staticWebsite")
    private @Nullable Output<AccountStaticWebsiteArgs> staticWebsite;

    /**
     * @return A `static_website` block as defined below.
     * 
     * &gt; **NOTE:** `static_website` can only be set when the `account_kind` is set to `StorageV2` or `BlockBlobStorage`.
     * 
     */
    public Optional<Output<AccountStaticWebsiteArgs>> staticWebsite() {
        return Optional.ofNullable(this.staticWebsite);
    }

    /**
     * The encryption type of the table service. Possible values are `Service` and `Account`. Changing this forces a new resource to be created. Default value is `Service`.
     * 
     * &gt; **NOTE:** For the `queue_encryption_key_type` and `table_encryption_key_type`, the `Account` key type is only allowed when the `account_kind` is set to `StorageV2`
     * 
     */
    @Import(name="tableEncryptionKeyType")
    private @Nullable Output<String> tableEncryptionKeyType;

    /**
     * @return The encryption type of the table service. Possible values are `Service` and `Account`. Changing this forces a new resource to be created. Default value is `Service`.
     * 
     * &gt; **NOTE:** For the `queue_encryption_key_type` and `table_encryption_key_type`, the `Account` key type is only allowed when the `account_kind` is set to `StorageV2`
     * 
     */
    public Optional<Output<String>> tableEncryptionKeyType() {
        return Optional.ofNullable(this.tableEncryptionKeyType);
    }

    /**
     * A mapping of tags to assign to the resource.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return A mapping of tags to assign to the resource.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private AccountArgs() {}

    private AccountArgs(AccountArgs $) {
        this.accessTier = $.accessTier;
        this.accountKind = $.accountKind;
        this.accountReplicationType = $.accountReplicationType;
        this.accountTier = $.accountTier;
        this.allowNestedItemsToBePublic = $.allowNestedItemsToBePublic;
        this.allowedCopyScope = $.allowedCopyScope;
        this.azureFilesAuthentication = $.azureFilesAuthentication;
        this.blobProperties = $.blobProperties;
        this.crossTenantReplicationEnabled = $.crossTenantReplicationEnabled;
        this.customDomain = $.customDomain;
        this.customerManagedKey = $.customerManagedKey;
        this.defaultToOauthAuthentication = $.defaultToOauthAuthentication;
        this.edgeZone = $.edgeZone;
        this.enableHttpsTrafficOnly = $.enableHttpsTrafficOnly;
        this.identity = $.identity;
        this.immutabilityPolicy = $.immutabilityPolicy;
        this.infrastructureEncryptionEnabled = $.infrastructureEncryptionEnabled;
        this.isHnsEnabled = $.isHnsEnabled;
        this.largeFileShareEnabled = $.largeFileShareEnabled;
        this.location = $.location;
        this.minTlsVersion = $.minTlsVersion;
        this.name = $.name;
        this.networkRules = $.networkRules;
        this.nfsv3Enabled = $.nfsv3Enabled;
        this.publicNetworkAccessEnabled = $.publicNetworkAccessEnabled;
        this.queueEncryptionKeyType = $.queueEncryptionKeyType;
        this.queueProperties = $.queueProperties;
        this.resourceGroupName = $.resourceGroupName;
        this.routing = $.routing;
        this.sasPolicy = $.sasPolicy;
        this.sftpEnabled = $.sftpEnabled;
        this.shareProperties = $.shareProperties;
        this.sharedAccessKeyEnabled = $.sharedAccessKeyEnabled;
        this.staticWebsite = $.staticWebsite;
        this.tableEncryptionKeyType = $.tableEncryptionKeyType;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AccountArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AccountArgs $;

        public Builder() {
            $ = new AccountArgs();
        }

        public Builder(AccountArgs defaults) {
            $ = new AccountArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param accessTier Defines the access tier for `BlobStorage`, `FileStorage` and `StorageV2` accounts. Valid options are `Hot` and `Cool`, defaults to `Hot`.
         * 
         * @return builder
         * 
         */
        public Builder accessTier(@Nullable Output<String> accessTier) {
            $.accessTier = accessTier;
            return this;
        }

        /**
         * @param accessTier Defines the access tier for `BlobStorage`, `FileStorage` and `StorageV2` accounts. Valid options are `Hot` and `Cool`, defaults to `Hot`.
         * 
         * @return builder
         * 
         */
        public Builder accessTier(String accessTier) {
            return accessTier(Output.of(accessTier));
        }

        /**
         * @param accountKind Defines the Kind of account. Valid options are `BlobStorage`, `BlockBlobStorage`, `FileStorage`, `Storage` and `StorageV2`. Defaults to `StorageV2`.
         * 
         * &gt; **NOTE:** Changing the `account_kind` value from `Storage` to `StorageV2` will not trigger a force new on the storage account, it will only upgrade the existing storage account from `Storage` to `StorageV2` keeping the existing storage account in place.
         * 
         * @return builder
         * 
         */
        public Builder accountKind(@Nullable Output<String> accountKind) {
            $.accountKind = accountKind;
            return this;
        }

        /**
         * @param accountKind Defines the Kind of account. Valid options are `BlobStorage`, `BlockBlobStorage`, `FileStorage`, `Storage` and `StorageV2`. Defaults to `StorageV2`.
         * 
         * &gt; **NOTE:** Changing the `account_kind` value from `Storage` to `StorageV2` will not trigger a force new on the storage account, it will only upgrade the existing storage account from `Storage` to `StorageV2` keeping the existing storage account in place.
         * 
         * @return builder
         * 
         */
        public Builder accountKind(String accountKind) {
            return accountKind(Output.of(accountKind));
        }

        /**
         * @param accountReplicationType Defines the type of replication to use for this storage account. Valid options are `LRS`, `GRS`, `RAGRS`, `ZRS`, `GZRS` and `RAGZRS`. Changing this forces a new resource to be created when types `LRS`, `GRS` and `RAGRS` are changed to `ZRS`, `GZRS` or `RAGZRS` and vice versa.
         * 
         * @return builder
         * 
         */
        public Builder accountReplicationType(Output<String> accountReplicationType) {
            $.accountReplicationType = accountReplicationType;
            return this;
        }

        /**
         * @param accountReplicationType Defines the type of replication to use for this storage account. Valid options are `LRS`, `GRS`, `RAGRS`, `ZRS`, `GZRS` and `RAGZRS`. Changing this forces a new resource to be created when types `LRS`, `GRS` and `RAGRS` are changed to `ZRS`, `GZRS` or `RAGZRS` and vice versa.
         * 
         * @return builder
         * 
         */
        public Builder accountReplicationType(String accountReplicationType) {
            return accountReplicationType(Output.of(accountReplicationType));
        }

        /**
         * @param accountTier Defines the Tier to use for this storage account. Valid options are `Standard` and `Premium`. For `BlockBlobStorage` and `FileStorage` accounts only `Premium` is valid. Changing this forces a new resource to be created.
         * 
         * &gt; **NOTE:** Blobs with a tier of `Premium` are of account kind `StorageV2`.
         * 
         * @return builder
         * 
         */
        public Builder accountTier(Output<String> accountTier) {
            $.accountTier = accountTier;
            return this;
        }

        /**
         * @param accountTier Defines the Tier to use for this storage account. Valid options are `Standard` and `Premium`. For `BlockBlobStorage` and `FileStorage` accounts only `Premium` is valid. Changing this forces a new resource to be created.
         * 
         * &gt; **NOTE:** Blobs with a tier of `Premium` are of account kind `StorageV2`.
         * 
         * @return builder
         * 
         */
        public Builder accountTier(String accountTier) {
            return accountTier(Output.of(accountTier));
        }

        /**
         * @param allowNestedItemsToBePublic Allow or disallow nested items within this Account to opt into being public. Defaults to `true`.
         * 
         * &gt; **NOTE:** At this time `allow_nested_items_to_be_public` is only supported in the Public Cloud, China Cloud, and US Government Cloud.
         * 
         * @return builder
         * 
         */
        public Builder allowNestedItemsToBePublic(@Nullable Output<Boolean> allowNestedItemsToBePublic) {
            $.allowNestedItemsToBePublic = allowNestedItemsToBePublic;
            return this;
        }

        /**
         * @param allowNestedItemsToBePublic Allow or disallow nested items within this Account to opt into being public. Defaults to `true`.
         * 
         * &gt; **NOTE:** At this time `allow_nested_items_to_be_public` is only supported in the Public Cloud, China Cloud, and US Government Cloud.
         * 
         * @return builder
         * 
         */
        public Builder allowNestedItemsToBePublic(Boolean allowNestedItemsToBePublic) {
            return allowNestedItemsToBePublic(Output.of(allowNestedItemsToBePublic));
        }

        /**
         * @param allowedCopyScope Restrict copy to and from Storage Accounts within an AAD tenant or with Private Links to the same VNet. Possible values are `AAD` and `PrivateLink`.
         * 
         * @return builder
         * 
         */
        public Builder allowedCopyScope(@Nullable Output<String> allowedCopyScope) {
            $.allowedCopyScope = allowedCopyScope;
            return this;
        }

        /**
         * @param allowedCopyScope Restrict copy to and from Storage Accounts within an AAD tenant or with Private Links to the same VNet. Possible values are `AAD` and `PrivateLink`.
         * 
         * @return builder
         * 
         */
        public Builder allowedCopyScope(String allowedCopyScope) {
            return allowedCopyScope(Output.of(allowedCopyScope));
        }

        /**
         * @param azureFilesAuthentication A `azure_files_authentication` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder azureFilesAuthentication(@Nullable Output<AccountAzureFilesAuthenticationArgs> azureFilesAuthentication) {
            $.azureFilesAuthentication = azureFilesAuthentication;
            return this;
        }

        /**
         * @param azureFilesAuthentication A `azure_files_authentication` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder azureFilesAuthentication(AccountAzureFilesAuthenticationArgs azureFilesAuthentication) {
            return azureFilesAuthentication(Output.of(azureFilesAuthentication));
        }

        /**
         * @param blobProperties A `blob_properties` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder blobProperties(@Nullable Output<AccountBlobPropertiesArgs> blobProperties) {
            $.blobProperties = blobProperties;
            return this;
        }

        /**
         * @param blobProperties A `blob_properties` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder blobProperties(AccountBlobPropertiesArgs blobProperties) {
            return blobProperties(Output.of(blobProperties));
        }

        /**
         * @param crossTenantReplicationEnabled Should cross Tenant replication be enabled? Defaults to `true`.
         * 
         * @return builder
         * 
         */
        public Builder crossTenantReplicationEnabled(@Nullable Output<Boolean> crossTenantReplicationEnabled) {
            $.crossTenantReplicationEnabled = crossTenantReplicationEnabled;
            return this;
        }

        /**
         * @param crossTenantReplicationEnabled Should cross Tenant replication be enabled? Defaults to `true`.
         * 
         * @return builder
         * 
         */
        public Builder crossTenantReplicationEnabled(Boolean crossTenantReplicationEnabled) {
            return crossTenantReplicationEnabled(Output.of(crossTenantReplicationEnabled));
        }

        /**
         * @param customDomain A `custom_domain` block as documented below.
         * 
         * @return builder
         * 
         */
        public Builder customDomain(@Nullable Output<AccountCustomDomainArgs> customDomain) {
            $.customDomain = customDomain;
            return this;
        }

        /**
         * @param customDomain A `custom_domain` block as documented below.
         * 
         * @return builder
         * 
         */
        public Builder customDomain(AccountCustomDomainArgs customDomain) {
            return customDomain(Output.of(customDomain));
        }

        /**
         * @param customerManagedKey A `customer_managed_key` block as documented below.
         * 
         * @return builder
         * 
         */
        public Builder customerManagedKey(@Nullable Output<AccountCustomerManagedKeyArgs> customerManagedKey) {
            $.customerManagedKey = customerManagedKey;
            return this;
        }

        /**
         * @param customerManagedKey A `customer_managed_key` block as documented below.
         * 
         * @return builder
         * 
         */
        public Builder customerManagedKey(AccountCustomerManagedKeyArgs customerManagedKey) {
            return customerManagedKey(Output.of(customerManagedKey));
        }

        /**
         * @param defaultToOauthAuthentication Default to Azure Active Directory authorization in the Azure portal when accessing the Storage Account. The default value is `false`
         * 
         * @return builder
         * 
         */
        public Builder defaultToOauthAuthentication(@Nullable Output<Boolean> defaultToOauthAuthentication) {
            $.defaultToOauthAuthentication = defaultToOauthAuthentication;
            return this;
        }

        /**
         * @param defaultToOauthAuthentication Default to Azure Active Directory authorization in the Azure portal when accessing the Storage Account. The default value is `false`
         * 
         * @return builder
         * 
         */
        public Builder defaultToOauthAuthentication(Boolean defaultToOauthAuthentication) {
            return defaultToOauthAuthentication(Output.of(defaultToOauthAuthentication));
        }

        /**
         * @param edgeZone Specifies the Edge Zone within the Azure Region where this Storage Account should exist. Changing this forces a new Storage Account to be created.
         * 
         * @return builder
         * 
         */
        public Builder edgeZone(@Nullable Output<String> edgeZone) {
            $.edgeZone = edgeZone;
            return this;
        }

        /**
         * @param edgeZone Specifies the Edge Zone within the Azure Region where this Storage Account should exist. Changing this forces a new Storage Account to be created.
         * 
         * @return builder
         * 
         */
        public Builder edgeZone(String edgeZone) {
            return edgeZone(Output.of(edgeZone));
        }

        /**
         * @param enableHttpsTrafficOnly Boolean flag which forces HTTPS if enabled, see [here](https://docs.microsoft.com/azure/storage/storage-require-secure-transfer/) for more information. Defaults to `true`.
         * 
         * @return builder
         * 
         */
        public Builder enableHttpsTrafficOnly(@Nullable Output<Boolean> enableHttpsTrafficOnly) {
            $.enableHttpsTrafficOnly = enableHttpsTrafficOnly;
            return this;
        }

        /**
         * @param enableHttpsTrafficOnly Boolean flag which forces HTTPS if enabled, see [here](https://docs.microsoft.com/azure/storage/storage-require-secure-transfer/) for more information. Defaults to `true`.
         * 
         * @return builder
         * 
         */
        public Builder enableHttpsTrafficOnly(Boolean enableHttpsTrafficOnly) {
            return enableHttpsTrafficOnly(Output.of(enableHttpsTrafficOnly));
        }

        /**
         * @param identity An `identity` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder identity(@Nullable Output<AccountIdentityArgs> identity) {
            $.identity = identity;
            return this;
        }

        /**
         * @param identity An `identity` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder identity(AccountIdentityArgs identity) {
            return identity(Output.of(identity));
        }

        /**
         * @param immutabilityPolicy An `immutability_policy` block as defined below. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder immutabilityPolicy(@Nullable Output<AccountImmutabilityPolicyArgs> immutabilityPolicy) {
            $.immutabilityPolicy = immutabilityPolicy;
            return this;
        }

        /**
         * @param immutabilityPolicy An `immutability_policy` block as defined below. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder immutabilityPolicy(AccountImmutabilityPolicyArgs immutabilityPolicy) {
            return immutabilityPolicy(Output.of(immutabilityPolicy));
        }

        /**
         * @param infrastructureEncryptionEnabled Is infrastructure encryption enabled? Changing this forces a new resource to be created. Defaults to `false`.
         * 
         * &gt; **NOTE:** This can only be `true` when `account_kind` is `StorageV2` or when `account_tier` is `Premium` *and* `account_kind` is one of `BlockBlobStorage` or `FileStorage`.
         * 
         * @return builder
         * 
         */
        public Builder infrastructureEncryptionEnabled(@Nullable Output<Boolean> infrastructureEncryptionEnabled) {
            $.infrastructureEncryptionEnabled = infrastructureEncryptionEnabled;
            return this;
        }

        /**
         * @param infrastructureEncryptionEnabled Is infrastructure encryption enabled? Changing this forces a new resource to be created. Defaults to `false`.
         * 
         * &gt; **NOTE:** This can only be `true` when `account_kind` is `StorageV2` or when `account_tier` is `Premium` *and* `account_kind` is one of `BlockBlobStorage` or `FileStorage`.
         * 
         * @return builder
         * 
         */
        public Builder infrastructureEncryptionEnabled(Boolean infrastructureEncryptionEnabled) {
            return infrastructureEncryptionEnabled(Output.of(infrastructureEncryptionEnabled));
        }

        /**
         * @param isHnsEnabled Is Hierarchical Namespace enabled? This can be used with Azure Data Lake Storage Gen 2 ([see here for more information](https://docs.microsoft.com/azure/storage/blobs/data-lake-storage-quickstart-create-account/)). Changing this forces a new resource to be created.
         * 
         * &gt; **NOTE:** This can only be `true` when `account_tier` is `Standard` or when `account_tier` is `Premium` *and* `account_kind` is `BlockBlobStorage`
         * 
         * @return builder
         * 
         */
        public Builder isHnsEnabled(@Nullable Output<Boolean> isHnsEnabled) {
            $.isHnsEnabled = isHnsEnabled;
            return this;
        }

        /**
         * @param isHnsEnabled Is Hierarchical Namespace enabled? This can be used with Azure Data Lake Storage Gen 2 ([see here for more information](https://docs.microsoft.com/azure/storage/blobs/data-lake-storage-quickstart-create-account/)). Changing this forces a new resource to be created.
         * 
         * &gt; **NOTE:** This can only be `true` when `account_tier` is `Standard` or when `account_tier` is `Premium` *and* `account_kind` is `BlockBlobStorage`
         * 
         * @return builder
         * 
         */
        public Builder isHnsEnabled(Boolean isHnsEnabled) {
            return isHnsEnabled(Output.of(isHnsEnabled));
        }

        /**
         * @param largeFileShareEnabled Is Large File Share Enabled?
         * 
         * @return builder
         * 
         */
        public Builder largeFileShareEnabled(@Nullable Output<Boolean> largeFileShareEnabled) {
            $.largeFileShareEnabled = largeFileShareEnabled;
            return this;
        }

        /**
         * @param largeFileShareEnabled Is Large File Share Enabled?
         * 
         * @return builder
         * 
         */
        public Builder largeFileShareEnabled(Boolean largeFileShareEnabled) {
            return largeFileShareEnabled(Output.of(largeFileShareEnabled));
        }

        /**
         * @param location Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param minTlsVersion The minimum supported TLS version for the storage account. Possible values are `TLS1_0`, `TLS1_1`, and `TLS1_2`. Defaults to `TLS1_2` for new storage accounts.
         * 
         * &gt; **NOTE:** At this time `min_tls_version` is only supported in the Public Cloud, China Cloud, and US Government Cloud.
         * 
         * @return builder
         * 
         */
        public Builder minTlsVersion(@Nullable Output<String> minTlsVersion) {
            $.minTlsVersion = minTlsVersion;
            return this;
        }

        /**
         * @param minTlsVersion The minimum supported TLS version for the storage account. Possible values are `TLS1_0`, `TLS1_1`, and `TLS1_2`. Defaults to `TLS1_2` for new storage accounts.
         * 
         * &gt; **NOTE:** At this time `min_tls_version` is only supported in the Public Cloud, China Cloud, and US Government Cloud.
         * 
         * @return builder
         * 
         */
        public Builder minTlsVersion(String minTlsVersion) {
            return minTlsVersion(Output.of(minTlsVersion));
        }

        /**
         * @param name Specifies the name of the storage account. Only lowercase Alphanumeric characters allowed. Changing this forces a new resource to be created. This must be unique across the entire Azure service, not just within the resource group.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Specifies the name of the storage account. Only lowercase Alphanumeric characters allowed. Changing this forces a new resource to be created. This must be unique across the entire Azure service, not just within the resource group.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param networkRules A `network_rules` block as documented below.
         * 
         * @return builder
         * 
         */
        public Builder networkRules(@Nullable Output<AccountNetworkRulesArgs> networkRules) {
            $.networkRules = networkRules;
            return this;
        }

        /**
         * @param networkRules A `network_rules` block as documented below.
         * 
         * @return builder
         * 
         */
        public Builder networkRules(AccountNetworkRulesArgs networkRules) {
            return networkRules(Output.of(networkRules));
        }

        /**
         * @param nfsv3Enabled Is NFSv3 protocol enabled? Changing this forces a new resource to be created. Defaults to `false`.
         * 
         * &gt; **NOTE:** This can only be `true` when `account_tier` is `Standard` and `account_kind` is `StorageV2`, or `account_tier` is `Premium` and `account_kind` is `BlockBlobStorage`. Additionally, the `is_hns_enabled` is `true` and `account_replication_type` must be `LRS` or `RAGRS`.
         * 
         * @return builder
         * 
         */
        public Builder nfsv3Enabled(@Nullable Output<Boolean> nfsv3Enabled) {
            $.nfsv3Enabled = nfsv3Enabled;
            return this;
        }

        /**
         * @param nfsv3Enabled Is NFSv3 protocol enabled? Changing this forces a new resource to be created. Defaults to `false`.
         * 
         * &gt; **NOTE:** This can only be `true` when `account_tier` is `Standard` and `account_kind` is `StorageV2`, or `account_tier` is `Premium` and `account_kind` is `BlockBlobStorage`. Additionally, the `is_hns_enabled` is `true` and `account_replication_type` must be `LRS` or `RAGRS`.
         * 
         * @return builder
         * 
         */
        public Builder nfsv3Enabled(Boolean nfsv3Enabled) {
            return nfsv3Enabled(Output.of(nfsv3Enabled));
        }

        /**
         * @param publicNetworkAccessEnabled Whether the public network access is enabled? Defaults to `true`.
         * 
         * @return builder
         * 
         */
        public Builder publicNetworkAccessEnabled(@Nullable Output<Boolean> publicNetworkAccessEnabled) {
            $.publicNetworkAccessEnabled = publicNetworkAccessEnabled;
            return this;
        }

        /**
         * @param publicNetworkAccessEnabled Whether the public network access is enabled? Defaults to `true`.
         * 
         * @return builder
         * 
         */
        public Builder publicNetworkAccessEnabled(Boolean publicNetworkAccessEnabled) {
            return publicNetworkAccessEnabled(Output.of(publicNetworkAccessEnabled));
        }

        /**
         * @param queueEncryptionKeyType The encryption type of the queue service. Possible values are `Service` and `Account`. Changing this forces a new resource to be created. Default value is `Service`.
         * 
         * @return builder
         * 
         */
        public Builder queueEncryptionKeyType(@Nullable Output<String> queueEncryptionKeyType) {
            $.queueEncryptionKeyType = queueEncryptionKeyType;
            return this;
        }

        /**
         * @param queueEncryptionKeyType The encryption type of the queue service. Possible values are `Service` and `Account`. Changing this forces a new resource to be created. Default value is `Service`.
         * 
         * @return builder
         * 
         */
        public Builder queueEncryptionKeyType(String queueEncryptionKeyType) {
            return queueEncryptionKeyType(Output.of(queueEncryptionKeyType));
        }

        /**
         * @param queueProperties A `queue_properties` block as defined below.
         * 
         * &gt; **NOTE:** `queue_properties` cannot be set when the `account_kind` is set to `BlobStorage`
         * 
         * @return builder
         * 
         */
        public Builder queueProperties(@Nullable Output<AccountQueuePropertiesArgs> queueProperties) {
            $.queueProperties = queueProperties;
            return this;
        }

        /**
         * @param queueProperties A `queue_properties` block as defined below.
         * 
         * &gt; **NOTE:** `queue_properties` cannot be set when the `account_kind` is set to `BlobStorage`
         * 
         * @return builder
         * 
         */
        public Builder queueProperties(AccountQueuePropertiesArgs queueProperties) {
            return queueProperties(Output.of(queueProperties));
        }

        /**
         * @param resourceGroupName The name of the resource group in which to create the storage account. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName The name of the resource group in which to create the storage account. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        /**
         * @param routing A `routing` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder routing(@Nullable Output<AccountRoutingArgs> routing) {
            $.routing = routing;
            return this;
        }

        /**
         * @param routing A `routing` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder routing(AccountRoutingArgs routing) {
            return routing(Output.of(routing));
        }

        /**
         * @param sasPolicy A `sas_policy` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder sasPolicy(@Nullable Output<AccountSasPolicyArgs> sasPolicy) {
            $.sasPolicy = sasPolicy;
            return this;
        }

        /**
         * @param sasPolicy A `sas_policy` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder sasPolicy(AccountSasPolicyArgs sasPolicy) {
            return sasPolicy(Output.of(sasPolicy));
        }

        /**
         * @param sftpEnabled Boolean, enable SFTP for the storage account
         * 
         * &gt; **NOTE:** SFTP support requires `is_hns_enabled` set to `true`. [More information on SFTP support can be found here](https://learn.microsoft.com/azure/storage/blobs/secure-file-transfer-protocol-support). Defaults to `false`
         * 
         * @return builder
         * 
         */
        public Builder sftpEnabled(@Nullable Output<Boolean> sftpEnabled) {
            $.sftpEnabled = sftpEnabled;
            return this;
        }

        /**
         * @param sftpEnabled Boolean, enable SFTP for the storage account
         * 
         * &gt; **NOTE:** SFTP support requires `is_hns_enabled` set to `true`. [More information on SFTP support can be found here](https://learn.microsoft.com/azure/storage/blobs/secure-file-transfer-protocol-support). Defaults to `false`
         * 
         * @return builder
         * 
         */
        public Builder sftpEnabled(Boolean sftpEnabled) {
            return sftpEnabled(Output.of(sftpEnabled));
        }

        /**
         * @param shareProperties A `share_properties` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder shareProperties(@Nullable Output<AccountSharePropertiesArgs> shareProperties) {
            $.shareProperties = shareProperties;
            return this;
        }

        /**
         * @param shareProperties A `share_properties` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder shareProperties(AccountSharePropertiesArgs shareProperties) {
            return shareProperties(Output.of(shareProperties));
        }

        public Builder sharedAccessKeyEnabled(@Nullable Output<Boolean> sharedAccessKeyEnabled) {
            $.sharedAccessKeyEnabled = sharedAccessKeyEnabled;
            return this;
        }

        public Builder sharedAccessKeyEnabled(Boolean sharedAccessKeyEnabled) {
            return sharedAccessKeyEnabled(Output.of(sharedAccessKeyEnabled));
        }

        /**
         * @param staticWebsite A `static_website` block as defined below.
         * 
         * &gt; **NOTE:** `static_website` can only be set when the `account_kind` is set to `StorageV2` or `BlockBlobStorage`.
         * 
         * @return builder
         * 
         */
        public Builder staticWebsite(@Nullable Output<AccountStaticWebsiteArgs> staticWebsite) {
            $.staticWebsite = staticWebsite;
            return this;
        }

        /**
         * @param staticWebsite A `static_website` block as defined below.
         * 
         * &gt; **NOTE:** `static_website` can only be set when the `account_kind` is set to `StorageV2` or `BlockBlobStorage`.
         * 
         * @return builder
         * 
         */
        public Builder staticWebsite(AccountStaticWebsiteArgs staticWebsite) {
            return staticWebsite(Output.of(staticWebsite));
        }

        /**
         * @param tableEncryptionKeyType The encryption type of the table service. Possible values are `Service` and `Account`. Changing this forces a new resource to be created. Default value is `Service`.
         * 
         * &gt; **NOTE:** For the `queue_encryption_key_type` and `table_encryption_key_type`, the `Account` key type is only allowed when the `account_kind` is set to `StorageV2`
         * 
         * @return builder
         * 
         */
        public Builder tableEncryptionKeyType(@Nullable Output<String> tableEncryptionKeyType) {
            $.tableEncryptionKeyType = tableEncryptionKeyType;
            return this;
        }

        /**
         * @param tableEncryptionKeyType The encryption type of the table service. Possible values are `Service` and `Account`. Changing this forces a new resource to be created. Default value is `Service`.
         * 
         * &gt; **NOTE:** For the `queue_encryption_key_type` and `table_encryption_key_type`, the `Account` key type is only allowed when the `account_kind` is set to `StorageV2`
         * 
         * @return builder
         * 
         */
        public Builder tableEncryptionKeyType(String tableEncryptionKeyType) {
            return tableEncryptionKeyType(Output.of(tableEncryptionKeyType));
        }

        /**
         * @param tags A mapping of tags to assign to the resource.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags A mapping of tags to assign to the resource.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public AccountArgs build() {
            if ($.accountReplicationType == null) {
                throw new MissingRequiredPropertyException("AccountArgs", "accountReplicationType");
            }
            if ($.accountTier == null) {
                throw new MissingRequiredPropertyException("AccountArgs", "accountTier");
            }
            if ($.resourceGroupName == null) {
                throw new MissingRequiredPropertyException("AccountArgs", "resourceGroupName");
            }
            return $;
        }
    }

}
