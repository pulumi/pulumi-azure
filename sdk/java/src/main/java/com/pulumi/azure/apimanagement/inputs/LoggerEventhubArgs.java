// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.apimanagement.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class LoggerEventhubArgs extends com.pulumi.resources.ResourceArgs {

    public static final LoggerEventhubArgs Empty = new LoggerEventhubArgs();

    /**
     * The connection string of an EventHub Namespace.
     * 
     * &gt; **Note:** At least one of `connection_string` or `endpoint_uri` must be specified
     * 
     */
    @Import(name="connectionString")
    private @Nullable Output<String> connectionString;

    /**
     * @return The connection string of an EventHub Namespace.
     * 
     * &gt; **Note:** At least one of `connection_string` or `endpoint_uri` must be specified
     * 
     */
    public Optional<Output<String>> connectionString() {
        return Optional.ofNullable(this.connectionString);
    }

    /**
     * The endpoint address of an EventHub Namespace. Required when `client_id` is set.
     * 
     */
    @Import(name="endpointUri")
    private @Nullable Output<String> endpointUri;

    /**
     * @return The endpoint address of an EventHub Namespace. Required when `client_id` is set.
     * 
     */
    public Optional<Output<String>> endpointUri() {
        return Optional.ofNullable(this.endpointUri);
    }

    /**
     * The name of an EventHub.
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    /**
     * @return The name of an EventHub.
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    /**
     * The Client Id of the User Assigned Identity  with the &#34;Azure Event Hubs Data Sender&#34; role to the target EventHub Namespace. Required when `endpoint_uri` is set. If not specified the System Assigned Identity will be used.
     * 
     */
    @Import(name="userAssignedIdentityClientId")
    private @Nullable Output<String> userAssignedIdentityClientId;

    /**
     * @return The Client Id of the User Assigned Identity  with the &#34;Azure Event Hubs Data Sender&#34; role to the target EventHub Namespace. Required when `endpoint_uri` is set. If not specified the System Assigned Identity will be used.
     * 
     */
    public Optional<Output<String>> userAssignedIdentityClientId() {
        return Optional.ofNullable(this.userAssignedIdentityClientId);
    }

    private LoggerEventhubArgs() {}

    private LoggerEventhubArgs(LoggerEventhubArgs $) {
        this.connectionString = $.connectionString;
        this.endpointUri = $.endpointUri;
        this.name = $.name;
        this.userAssignedIdentityClientId = $.userAssignedIdentityClientId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(LoggerEventhubArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private LoggerEventhubArgs $;

        public Builder() {
            $ = new LoggerEventhubArgs();
        }

        public Builder(LoggerEventhubArgs defaults) {
            $ = new LoggerEventhubArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param connectionString The connection string of an EventHub Namespace.
         * 
         * &gt; **Note:** At least one of `connection_string` or `endpoint_uri` must be specified
         * 
         * @return builder
         * 
         */
        public Builder connectionString(@Nullable Output<String> connectionString) {
            $.connectionString = connectionString;
            return this;
        }

        /**
         * @param connectionString The connection string of an EventHub Namespace.
         * 
         * &gt; **Note:** At least one of `connection_string` or `endpoint_uri` must be specified
         * 
         * @return builder
         * 
         */
        public Builder connectionString(String connectionString) {
            return connectionString(Output.of(connectionString));
        }

        /**
         * @param endpointUri The endpoint address of an EventHub Namespace. Required when `client_id` is set.
         * 
         * @return builder
         * 
         */
        public Builder endpointUri(@Nullable Output<String> endpointUri) {
            $.endpointUri = endpointUri;
            return this;
        }

        /**
         * @param endpointUri The endpoint address of an EventHub Namespace. Required when `client_id` is set.
         * 
         * @return builder
         * 
         */
        public Builder endpointUri(String endpointUri) {
            return endpointUri(Output.of(endpointUri));
        }

        /**
         * @param name The name of an EventHub.
         * 
         * @return builder
         * 
         */
        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of an EventHub.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param userAssignedIdentityClientId The Client Id of the User Assigned Identity  with the &#34;Azure Event Hubs Data Sender&#34; role to the target EventHub Namespace. Required when `endpoint_uri` is set. If not specified the System Assigned Identity will be used.
         * 
         * @return builder
         * 
         */
        public Builder userAssignedIdentityClientId(@Nullable Output<String> userAssignedIdentityClientId) {
            $.userAssignedIdentityClientId = userAssignedIdentityClientId;
            return this;
        }

        /**
         * @param userAssignedIdentityClientId The Client Id of the User Assigned Identity  with the &#34;Azure Event Hubs Data Sender&#34; role to the target EventHub Namespace. Required when `endpoint_uri` is set. If not specified the System Assigned Identity will be used.
         * 
         * @return builder
         * 
         */
        public Builder userAssignedIdentityClientId(String userAssignedIdentityClientId) {
            return userAssignedIdentityClientId(Output.of(userAssignedIdentityClientId));
        }

        public LoggerEventhubArgs build() {
            if ($.name == null) {
                throw new MissingRequiredPropertyException("LoggerEventhubArgs", "name");
            }
            return $;
        }
    }

}
