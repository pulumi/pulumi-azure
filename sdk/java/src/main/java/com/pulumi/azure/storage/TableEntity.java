// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.storage;

import com.pulumi.azure.Utilities;
import com.pulumi.azure.storage.TableEntityArgs;
import com.pulumi.azure.storage.inputs.TableEntityState;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;

/**
 * Manages an Entity within a Table in an Azure Storage Account.
 * 
 * ## Example Usage
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.azure.core.ResourceGroup;
 * import com.pulumi.azure.core.ResourceGroupArgs;
 * import com.pulumi.azure.storage.Account;
 * import com.pulumi.azure.storage.AccountArgs;
 * import com.pulumi.azure.storage.Table;
 * import com.pulumi.azure.storage.TableArgs;
 * import com.pulumi.azure.storage.TableEntity;
 * import com.pulumi.azure.storage.TableEntityArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var exampleResourceGroup = new ResourceGroup(&#34;exampleResourceGroup&#34;, ResourceGroupArgs.builder()        
 *             .location(&#34;West Europe&#34;)
 *             .build());
 * 
 *         var exampleAccount = new Account(&#34;exampleAccount&#34;, AccountArgs.builder()        
 *             .resourceGroupName(exampleResourceGroup.name())
 *             .location(exampleResourceGroup.location())
 *             .accountTier(&#34;Standard&#34;)
 *             .accountReplicationType(&#34;LRS&#34;)
 *             .build());
 * 
 *         var exampleTable = new Table(&#34;exampleTable&#34;, TableArgs.builder()        
 *             .storageAccountName(exampleAccount.name())
 *             .build());
 * 
 *         var exampleTableEntity = new TableEntity(&#34;exampleTableEntity&#34;, TableEntityArgs.builder()        
 *             .storageAccountName(exampleAccount.name())
 *             .tableName(exampleTable.name())
 *             .partitionKey(&#34;examplepartition&#34;)
 *             .rowKey(&#34;examplerow&#34;)
 *             .entity(Map.of(&#34;example&#34;, &#34;example&#34;))
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * Entities within a Table in an Azure Storage Account can be imported using the `resource id`, e.g.
 * 
 * ```sh
 *  $ pulumi import azure:storage/tableEntity:TableEntity entity1 https://example.table.core.windows.net/table1(PartitionKey=&#39;samplepartition&#39;,RowKey=&#39;samplerow&#39;)
 * ```
 * 
 */
@ResourceType(type="azure:storage/tableEntity:TableEntity")
public class TableEntity extends com.pulumi.resources.CustomResource {
    /**
     * A map of key/value pairs that describe the entity to be inserted/merged in to the storage table.
     * 
     */
    @Export(name="entity", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output<Map<String,String>> entity;

    /**
     * @return A map of key/value pairs that describe the entity to be inserted/merged in to the storage table.
     * 
     */
    public Output<Map<String,String>> entity() {
        return this.entity;
    }
    /**
     * The key for the partition where the entity will be inserted/merged. Changing this forces a new resource.
     * 
     */
    @Export(name="partitionKey", refs={String.class}, tree="[0]")
    private Output<String> partitionKey;

    /**
     * @return The key for the partition where the entity will be inserted/merged. Changing this forces a new resource.
     * 
     */
    public Output<String> partitionKey() {
        return this.partitionKey;
    }
    /**
     * The key for the row where the entity will be inserted/merged. Changing this forces a new resource.
     * 
     */
    @Export(name="rowKey", refs={String.class}, tree="[0]")
    private Output<String> rowKey;

    /**
     * @return The key for the row where the entity will be inserted/merged. Changing this forces a new resource.
     * 
     */
    public Output<String> rowKey() {
        return this.rowKey;
    }
    /**
     * Specifies the storage account in which to create the storage table entity. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="storageAccountName", refs={String.class}, tree="[0]")
    private Output<String> storageAccountName;

    /**
     * @return Specifies the storage account in which to create the storage table entity. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> storageAccountName() {
        return this.storageAccountName;
    }
    /**
     * The name of the storage table in which to create the storage table entity. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="tableName", refs={String.class}, tree="[0]")
    private Output<String> tableName;

    /**
     * @return The name of the storage table in which to create the storage table entity. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> tableName() {
        return this.tableName;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public TableEntity(String name) {
        this(name, TableEntityArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public TableEntity(String name, TableEntityArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public TableEntity(String name, TableEntityArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:storage/tableEntity:TableEntity", name, args == null ? TableEntityArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private TableEntity(String name, Output<String> id, @Nullable TableEntityState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:storage/tableEntity:TableEntity", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static TableEntity get(String name, Output<String> id, @Nullable TableEntityState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new TableEntity(name, id, state, options);
    }
}
