// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.containerapp;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class EnvironmentCertificateArgs extends com.pulumi.resources.ResourceArgs {

    public static final EnvironmentCertificateArgs Empty = new EnvironmentCertificateArgs();

    /**
     * The Certificate Private Key as a base64 encoded PFX or PEM. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="certificateBlobBase64", required=true)
    private Output<String> certificateBlobBase64;

    /**
     * @return The Certificate Private Key as a base64 encoded PFX or PEM. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> certificateBlobBase64() {
        return this.certificateBlobBase64;
    }

    /**
     * The password for the Certificate. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="certificatePassword", required=true)
    private Output<String> certificatePassword;

    /**
     * @return The password for the Certificate. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> certificatePassword() {
        return this.certificatePassword;
    }

    /**
     * The Container App Managed Environment ID to configure this Certificate on. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="containerAppEnvironmentId", required=true)
    private Output<String> containerAppEnvironmentId;

    /**
     * @return The Container App Managed Environment ID to configure this Certificate on. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> containerAppEnvironmentId() {
        return this.containerAppEnvironmentId;
    }

    /**
     * The name of the Container Apps Environment Certificate. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the Container Apps Environment Certificate. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * A mapping of tags to assign to the resource.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return A mapping of tags to assign to the resource.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private EnvironmentCertificateArgs() {}

    private EnvironmentCertificateArgs(EnvironmentCertificateArgs $) {
        this.certificateBlobBase64 = $.certificateBlobBase64;
        this.certificatePassword = $.certificatePassword;
        this.containerAppEnvironmentId = $.containerAppEnvironmentId;
        this.name = $.name;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(EnvironmentCertificateArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private EnvironmentCertificateArgs $;

        public Builder() {
            $ = new EnvironmentCertificateArgs();
        }

        public Builder(EnvironmentCertificateArgs defaults) {
            $ = new EnvironmentCertificateArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param certificateBlobBase64 The Certificate Private Key as a base64 encoded PFX or PEM. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder certificateBlobBase64(Output<String> certificateBlobBase64) {
            $.certificateBlobBase64 = certificateBlobBase64;
            return this;
        }

        /**
         * @param certificateBlobBase64 The Certificate Private Key as a base64 encoded PFX or PEM. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder certificateBlobBase64(String certificateBlobBase64) {
            return certificateBlobBase64(Output.of(certificateBlobBase64));
        }

        /**
         * @param certificatePassword The password for the Certificate. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder certificatePassword(Output<String> certificatePassword) {
            $.certificatePassword = certificatePassword;
            return this;
        }

        /**
         * @param certificatePassword The password for the Certificate. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder certificatePassword(String certificatePassword) {
            return certificatePassword(Output.of(certificatePassword));
        }

        /**
         * @param containerAppEnvironmentId The Container App Managed Environment ID to configure this Certificate on. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder containerAppEnvironmentId(Output<String> containerAppEnvironmentId) {
            $.containerAppEnvironmentId = containerAppEnvironmentId;
            return this;
        }

        /**
         * @param containerAppEnvironmentId The Container App Managed Environment ID to configure this Certificate on. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder containerAppEnvironmentId(String containerAppEnvironmentId) {
            return containerAppEnvironmentId(Output.of(containerAppEnvironmentId));
        }

        /**
         * @param name The name of the Container Apps Environment Certificate. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the Container Apps Environment Certificate. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param tags A mapping of tags to assign to the resource.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags A mapping of tags to assign to the resource.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        public EnvironmentCertificateArgs build() {
            if ($.certificateBlobBase64 == null) {
                throw new MissingRequiredPropertyException("EnvironmentCertificateArgs", "certificateBlobBase64");
            }
            if ($.certificatePassword == null) {
                throw new MissingRequiredPropertyException("EnvironmentCertificateArgs", "certificatePassword");
            }
            if ($.containerAppEnvironmentId == null) {
                throw new MissingRequiredPropertyException("EnvironmentCertificateArgs", "containerAppEnvironmentId");
            }
            return $;
        }
    }

}
