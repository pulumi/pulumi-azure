// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.network;

import com.pulumi.azure.Utilities;
import com.pulumi.azure.network.VirtualNetworkArgs;
import com.pulumi.azure.network.inputs.VirtualNetworkState;
import com.pulumi.azure.network.outputs.VirtualNetworkDdosProtectionPlan;
import com.pulumi.azure.network.outputs.VirtualNetworkSubnet;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Manages a virtual network including any configured subnets. Each subnet can
 * optionally be configured with a security group to be associated with the subnet.
 * 
 * &gt; **NOTE on Virtual Networks and Subnet&#39;s:** This provider currently
 * provides both a standalone Subnet resource, and allows for Subnets to be defined in-line within the Virtual Network resource.
 * At this time you cannot use a Virtual Network with in-line Subnets in conjunction with any Subnet resources. Doing so will cause a conflict of Subnet configurations and will overwrite Subnet&#39;s.
 * **NOTE on Virtual Networks and DNS Servers:** This provider currently provides both a standalone virtual network DNS Servers resource, and allows for DNS servers to be defined in-line within the Virtual Network resource.
 * At this time you cannot use a Virtual Network with in-line DNS servers in conjunction with any Virtual Network DNS Servers resources. Doing so will cause a conflict of Virtual Network DNS Servers configurations and will overwrite virtual networks DNS servers.
 * 
 * ## Example Usage
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.azure.core.ResourceGroup;
 * import com.pulumi.azure.core.ResourceGroupArgs;
 * import com.pulumi.azure.network.NetworkSecurityGroup;
 * import com.pulumi.azure.network.NetworkSecurityGroupArgs;
 * import com.pulumi.azure.network.VirtualNetwork;
 * import com.pulumi.azure.network.VirtualNetworkArgs;
 * import com.pulumi.azure.network.inputs.VirtualNetworkSubnetArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var exampleResourceGroup = new ResourceGroup(&#34;exampleResourceGroup&#34;, ResourceGroupArgs.builder()        
 *             .location(&#34;West Europe&#34;)
 *             .build());
 * 
 *         var exampleNetworkSecurityGroup = new NetworkSecurityGroup(&#34;exampleNetworkSecurityGroup&#34;, NetworkSecurityGroupArgs.builder()        
 *             .location(exampleResourceGroup.location())
 *             .resourceGroupName(exampleResourceGroup.name())
 *             .build());
 * 
 *         var exampleVirtualNetwork = new VirtualNetwork(&#34;exampleVirtualNetwork&#34;, VirtualNetworkArgs.builder()        
 *             .location(exampleResourceGroup.location())
 *             .resourceGroupName(exampleResourceGroup.name())
 *             .addressSpaces(&#34;10.0.0.0/16&#34;)
 *             .dnsServers(            
 *                 &#34;10.0.0.4&#34;,
 *                 &#34;10.0.0.5&#34;)
 *             .subnets(            
 *                 VirtualNetworkSubnetArgs.builder()
 *                     .name(&#34;subnet1&#34;)
 *                     .addressPrefix(&#34;10.0.1.0/24&#34;)
 *                     .build(),
 *                 VirtualNetworkSubnetArgs.builder()
 *                     .name(&#34;subnet2&#34;)
 *                     .addressPrefix(&#34;10.0.2.0/24&#34;)
 *                     .securityGroup(exampleNetworkSecurityGroup.id())
 *                     .build())
 *             .tags(Map.of(&#34;environment&#34;, &#34;Production&#34;))
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * Virtual Networks can be imported using the `resource id`, e.g.
 * 
 * ```sh
 *  $ pulumi import azure:network/virtualNetwork:VirtualNetwork exampleNetwork /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/mygroup1/providers/Microsoft.Network/virtualNetworks/myvnet1
 * ```
 * 
 */
@ResourceType(type="azure:network/virtualNetwork:VirtualNetwork")
public class VirtualNetwork extends com.pulumi.resources.CustomResource {
    /**
     * The address space that is used the virtual network. You can supply more than one address space.
     * 
     */
    @Export(name="addressSpaces", refs={List.class,String.class}, tree="[0,1]")
    private Output<List<String>> addressSpaces;

    /**
     * @return The address space that is used the virtual network. You can supply more than one address space.
     * 
     */
    public Output<List<String>> addressSpaces() {
        return this.addressSpaces;
    }
    /**
     * The BGP community attribute in format `&lt;as-number&gt;:&lt;community-value&gt;`.
     * 
     * &gt; **NOTE** The `as-number` segment is the Microsoft ASN, which is always `12076` for now.
     * 
     */
    @Export(name="bgpCommunity", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> bgpCommunity;

    /**
     * @return The BGP community attribute in format `&lt;as-number&gt;:&lt;community-value&gt;`.
     * 
     * &gt; **NOTE** The `as-number` segment is the Microsoft ASN, which is always `12076` for now.
     * 
     */
    public Output<Optional<String>> bgpCommunity() {
        return Codegen.optional(this.bgpCommunity);
    }
    /**
     * A `ddos_protection_plan` block as documented below.
     * 
     */
    @Export(name="ddosProtectionPlan", refs={VirtualNetworkDdosProtectionPlan.class}, tree="[0]")
    private Output</* @Nullable */ VirtualNetworkDdosProtectionPlan> ddosProtectionPlan;

    /**
     * @return A `ddos_protection_plan` block as documented below.
     * 
     */
    public Output<Optional<VirtualNetworkDdosProtectionPlan>> ddosProtectionPlan() {
        return Codegen.optional(this.ddosProtectionPlan);
    }
    /**
     * List of IP addresses of DNS servers
     * 
     * &gt; **NOTE** Since `dns_servers` can be configured both inline and via the separate `azure.network.VirtualNetworkDnsServers` resource, we have to explicitly set it to empty slice (`[]`) to remove it.
     * 
     */
    @Export(name="dnsServers", refs={List.class,String.class}, tree="[0,1]")
    private Output<List<String>> dnsServers;

    /**
     * @return List of IP addresses of DNS servers
     * 
     * &gt; **NOTE** Since `dns_servers` can be configured both inline and via the separate `azure.network.VirtualNetworkDnsServers` resource, we have to explicitly set it to empty slice (`[]`) to remove it.
     * 
     */
    public Output<List<String>> dnsServers() {
        return this.dnsServers;
    }
    /**
     * Specifies the Edge Zone within the Azure Region where this Virtual Network should exist. Changing this forces a new Virtual Network to be created.
     * 
     */
    @Export(name="edgeZone", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> edgeZone;

    /**
     * @return Specifies the Edge Zone within the Azure Region where this Virtual Network should exist. Changing this forces a new Virtual Network to be created.
     * 
     */
    public Output<Optional<String>> edgeZone() {
        return Codegen.optional(this.edgeZone);
    }
    /**
     * The flow timeout in minutes for the Virtual Network, which is used to enable connection tracking for intra-VM flows. Possible values are between `4` and `30` minutes.
     * 
     */
    @Export(name="flowTimeoutInMinutes", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> flowTimeoutInMinutes;

    /**
     * @return The flow timeout in minutes for the Virtual Network, which is used to enable connection tracking for intra-VM flows. Possible values are between `4` and `30` minutes.
     * 
     */
    public Output<Optional<Integer>> flowTimeoutInMinutes() {
        return Codegen.optional(this.flowTimeoutInMinutes);
    }
    /**
     * The GUID of the virtual network.
     * 
     */
    @Export(name="guid", refs={String.class}, tree="[0]")
    private Output<String> guid;

    /**
     * @return The GUID of the virtual network.
     * 
     */
    public Output<String> guid() {
        return this.guid;
    }
    /**
     * The location/region where the virtual network is created. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="location", refs={String.class}, tree="[0]")
    private Output<String> location;

    /**
     * @return The location/region where the virtual network is created. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> location() {
        return this.location;
    }
    /**
     * The name of the virtual network. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The name of the virtual network. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The name of the resource group in which to create the virtual network. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="resourceGroupName", refs={String.class}, tree="[0]")
    private Output<String> resourceGroupName;

    /**
     * @return The name of the resource group in which to create the virtual network. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }
    /**
     * Can be specified multiple times to define multiple subnets. Each `subnet` block supports fields documented below.
     * 
     * &gt; **NOTE** Since `subnet` can be configured both inline and via the separate `azure.network.Subnet` resource, we have to explicitly set it to empty slice (`[]`) to remove it.
     * 
     */
    @Export(name="subnets", refs={List.class,VirtualNetworkSubnet.class}, tree="[0,1]")
    private Output<List<VirtualNetworkSubnet>> subnets;

    /**
     * @return Can be specified multiple times to define multiple subnets. Each `subnet` block supports fields documented below.
     * 
     * &gt; **NOTE** Since `subnet` can be configured both inline and via the separate `azure.network.Subnet` resource, we have to explicitly set it to empty slice (`[]`) to remove it.
     * 
     */
    public Output<List<VirtualNetworkSubnet>> subnets() {
        return this.subnets;
    }
    /**
     * A mapping of tags to assign to the resource.
     * 
     */
    @Export(name="tags", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output</* @Nullable */ Map<String,String>> tags;

    /**
     * @return A mapping of tags to assign to the resource.
     * 
     */
    public Output<Optional<Map<String,String>>> tags() {
        return Codegen.optional(this.tags);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public VirtualNetwork(String name) {
        this(name, VirtualNetworkArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public VirtualNetwork(String name, VirtualNetworkArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public VirtualNetwork(String name, VirtualNetworkArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:network/virtualNetwork:VirtualNetwork", name, args == null ? VirtualNetworkArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private VirtualNetwork(String name, Output<String> id, @Nullable VirtualNetworkState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:network/virtualNetwork:VirtualNetwork", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static VirtualNetwork get(String name, Output<String> id, @Nullable VirtualNetworkState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new VirtualNetwork(name, id, state, options);
    }
}
