// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.frontdoor.inputs;

import com.pulumi.azure.frontdoor.inputs.FirewallPolicyManagedRuleOverrideExclusionArgs;
import com.pulumi.azure.frontdoor.inputs.FirewallPolicyManagedRuleOverrideRuleArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class FirewallPolicyManagedRuleOverrideArgs extends com.pulumi.resources.ResourceArgs {

    public static final FirewallPolicyManagedRuleOverrideArgs Empty = new FirewallPolicyManagedRuleOverrideArgs();

    /**
     * One or more `exclusion` blocks as defined below.
     * 
     */
    @Import(name="exclusions")
    private @Nullable Output<List<FirewallPolicyManagedRuleOverrideExclusionArgs>> exclusions;

    /**
     * @return One or more `exclusion` blocks as defined below.
     * 
     */
    public Optional<Output<List<FirewallPolicyManagedRuleOverrideExclusionArgs>>> exclusions() {
        return Optional.ofNullable(this.exclusions);
    }

    /**
     * The managed rule group to override.
     * 
     */
    @Import(name="ruleGroupName", required=true)
    private Output<String> ruleGroupName;

    /**
     * @return The managed rule group to override.
     * 
     */
    public Output<String> ruleGroupName() {
        return this.ruleGroupName;
    }

    /**
     * One or more `rule` blocks as defined below. If none are specified, all of the rules in the group will be disabled.
     * 
     */
    @Import(name="rules")
    private @Nullable Output<List<FirewallPolicyManagedRuleOverrideRuleArgs>> rules;

    /**
     * @return One or more `rule` blocks as defined below. If none are specified, all of the rules in the group will be disabled.
     * 
     */
    public Optional<Output<List<FirewallPolicyManagedRuleOverrideRuleArgs>>> rules() {
        return Optional.ofNullable(this.rules);
    }

    private FirewallPolicyManagedRuleOverrideArgs() {}

    private FirewallPolicyManagedRuleOverrideArgs(FirewallPolicyManagedRuleOverrideArgs $) {
        this.exclusions = $.exclusions;
        this.ruleGroupName = $.ruleGroupName;
        this.rules = $.rules;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FirewallPolicyManagedRuleOverrideArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FirewallPolicyManagedRuleOverrideArgs $;

        public Builder() {
            $ = new FirewallPolicyManagedRuleOverrideArgs();
        }

        public Builder(FirewallPolicyManagedRuleOverrideArgs defaults) {
            $ = new FirewallPolicyManagedRuleOverrideArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param exclusions One or more `exclusion` blocks as defined below.
         * 
         * @return builder
         * 
         */
        public Builder exclusions(@Nullable Output<List<FirewallPolicyManagedRuleOverrideExclusionArgs>> exclusions) {
            $.exclusions = exclusions;
            return this;
        }

        /**
         * @param exclusions One or more `exclusion` blocks as defined below.
         * 
         * @return builder
         * 
         */
        public Builder exclusions(List<FirewallPolicyManagedRuleOverrideExclusionArgs> exclusions) {
            return exclusions(Output.of(exclusions));
        }

        /**
         * @param exclusions One or more `exclusion` blocks as defined below.
         * 
         * @return builder
         * 
         */
        public Builder exclusions(FirewallPolicyManagedRuleOverrideExclusionArgs... exclusions) {
            return exclusions(List.of(exclusions));
        }

        /**
         * @param ruleGroupName The managed rule group to override.
         * 
         * @return builder
         * 
         */
        public Builder ruleGroupName(Output<String> ruleGroupName) {
            $.ruleGroupName = ruleGroupName;
            return this;
        }

        /**
         * @param ruleGroupName The managed rule group to override.
         * 
         * @return builder
         * 
         */
        public Builder ruleGroupName(String ruleGroupName) {
            return ruleGroupName(Output.of(ruleGroupName));
        }

        /**
         * @param rules One or more `rule` blocks as defined below. If none are specified, all of the rules in the group will be disabled.
         * 
         * @return builder
         * 
         */
        public Builder rules(@Nullable Output<List<FirewallPolicyManagedRuleOverrideRuleArgs>> rules) {
            $.rules = rules;
            return this;
        }

        /**
         * @param rules One or more `rule` blocks as defined below. If none are specified, all of the rules in the group will be disabled.
         * 
         * @return builder
         * 
         */
        public Builder rules(List<FirewallPolicyManagedRuleOverrideRuleArgs> rules) {
            return rules(Output.of(rules));
        }

        /**
         * @param rules One or more `rule` blocks as defined below. If none are specified, all of the rules in the group will be disabled.
         * 
         * @return builder
         * 
         */
        public Builder rules(FirewallPolicyManagedRuleOverrideRuleArgs... rules) {
            return rules(List.of(rules));
        }

        public FirewallPolicyManagedRuleOverrideArgs build() {
            if ($.ruleGroupName == null) {
                throw new MissingRequiredPropertyException("FirewallPolicyManagedRuleOverrideArgs", "ruleGroupName");
            }
            return $;
        }
    }

}
