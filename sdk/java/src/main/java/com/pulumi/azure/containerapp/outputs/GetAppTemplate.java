// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.containerapp.outputs;

import com.pulumi.azure.containerapp.outputs.GetAppTemplateContainer;
import com.pulumi.azure.containerapp.outputs.GetAppTemplateVolume;
import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class GetAppTemplate {
    /**
     * @return One or more `container` blocks as detailed below.
     * 
     */
    private List<GetAppTemplateContainer> containers;
    /**
     * @return The maximum number of replicas for this container.
     * 
     */
    private Integer maxReplicas;
    /**
     * @return The minimum number of replicas for this container.
     * 
     */
    private Integer minReplicas;
    /**
     * @return The suffix string to which this `traffic_weight` applies.
     * 
     */
    private String revisionSuffix;
    /**
     * @return A `volume` block as detailed below.
     * 
     */
    private @Nullable List<GetAppTemplateVolume> volumes;

    private GetAppTemplate() {}
    /**
     * @return One or more `container` blocks as detailed below.
     * 
     */
    public List<GetAppTemplateContainer> containers() {
        return this.containers;
    }
    /**
     * @return The maximum number of replicas for this container.
     * 
     */
    public Integer maxReplicas() {
        return this.maxReplicas;
    }
    /**
     * @return The minimum number of replicas for this container.
     * 
     */
    public Integer minReplicas() {
        return this.minReplicas;
    }
    /**
     * @return The suffix string to which this `traffic_weight` applies.
     * 
     */
    public String revisionSuffix() {
        return this.revisionSuffix;
    }
    /**
     * @return A `volume` block as detailed below.
     * 
     */
    public List<GetAppTemplateVolume> volumes() {
        return this.volumes == null ? List.of() : this.volumes;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAppTemplate defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetAppTemplateContainer> containers;
        private Integer maxReplicas;
        private Integer minReplicas;
        private String revisionSuffix;
        private @Nullable List<GetAppTemplateVolume> volumes;
        public Builder() {}
        public Builder(GetAppTemplate defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.containers = defaults.containers;
    	      this.maxReplicas = defaults.maxReplicas;
    	      this.minReplicas = defaults.minReplicas;
    	      this.revisionSuffix = defaults.revisionSuffix;
    	      this.volumes = defaults.volumes;
        }

        @CustomType.Setter
        public Builder containers(List<GetAppTemplateContainer> containers) {
            this.containers = Objects.requireNonNull(containers);
            return this;
        }
        public Builder containers(GetAppTemplateContainer... containers) {
            return containers(List.of(containers));
        }
        @CustomType.Setter
        public Builder maxReplicas(Integer maxReplicas) {
            this.maxReplicas = Objects.requireNonNull(maxReplicas);
            return this;
        }
        @CustomType.Setter
        public Builder minReplicas(Integer minReplicas) {
            this.minReplicas = Objects.requireNonNull(minReplicas);
            return this;
        }
        @CustomType.Setter
        public Builder revisionSuffix(String revisionSuffix) {
            this.revisionSuffix = Objects.requireNonNull(revisionSuffix);
            return this;
        }
        @CustomType.Setter
        public Builder volumes(@Nullable List<GetAppTemplateVolume> volumes) {
            this.volumes = volumes;
            return this;
        }
        public Builder volumes(GetAppTemplateVolume... volumes) {
            return volumes(List.of(volumes));
        }
        public GetAppTemplate build() {
            final var o = new GetAppTemplate();
            o.containers = containers;
            o.maxReplicas = maxReplicas;
            o.minReplicas = minReplicas;
            o.revisionSuffix = revisionSuffix;
            o.volumes = volumes;
            return o;
        }
    }
}
