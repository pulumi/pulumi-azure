// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.mssql;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class FirewallRuleArgs extends com.pulumi.resources.ResourceArgs {

    public static final FirewallRuleArgs Empty = new FirewallRuleArgs();

    /**
     * The ending IP address to allow through the firewall for this rule.
     * 
     */
    @Import(name="endIpAddress", required=true)
    private Output<String> endIpAddress;

    /**
     * @return The ending IP address to allow through the firewall for this rule.
     * 
     */
    public Output<String> endIpAddress() {
        return this.endIpAddress;
    }

    /**
     * The name of the firewall rule.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the firewall rule.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The resource ID of the SQL Server on which to create the Firewall Rule.
     * 
     */
    @Import(name="serverId", required=true)
    private Output<String> serverId;

    /**
     * @return The resource ID of the SQL Server on which to create the Firewall Rule.
     * 
     */
    public Output<String> serverId() {
        return this.serverId;
    }

    /**
     * The starting IP address to allow through the firewall for this rule.
     * 
     */
    @Import(name="startIpAddress", required=true)
    private Output<String> startIpAddress;

    /**
     * @return The starting IP address to allow through the firewall for this rule.
     * 
     */
    public Output<String> startIpAddress() {
        return this.startIpAddress;
    }

    private FirewallRuleArgs() {}

    private FirewallRuleArgs(FirewallRuleArgs $) {
        this.endIpAddress = $.endIpAddress;
        this.name = $.name;
        this.serverId = $.serverId;
        this.startIpAddress = $.startIpAddress;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FirewallRuleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FirewallRuleArgs $;

        public Builder() {
            $ = new FirewallRuleArgs();
        }

        public Builder(FirewallRuleArgs defaults) {
            $ = new FirewallRuleArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param endIpAddress The ending IP address to allow through the firewall for this rule.
         * 
         * @return builder
         * 
         */
        public Builder endIpAddress(Output<String> endIpAddress) {
            $.endIpAddress = endIpAddress;
            return this;
        }

        /**
         * @param endIpAddress The ending IP address to allow through the firewall for this rule.
         * 
         * @return builder
         * 
         */
        public Builder endIpAddress(String endIpAddress) {
            return endIpAddress(Output.of(endIpAddress));
        }

        /**
         * @param name The name of the firewall rule.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the firewall rule.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param serverId The resource ID of the SQL Server on which to create the Firewall Rule.
         * 
         * @return builder
         * 
         */
        public Builder serverId(Output<String> serverId) {
            $.serverId = serverId;
            return this;
        }

        /**
         * @param serverId The resource ID of the SQL Server on which to create the Firewall Rule.
         * 
         * @return builder
         * 
         */
        public Builder serverId(String serverId) {
            return serverId(Output.of(serverId));
        }

        /**
         * @param startIpAddress The starting IP address to allow through the firewall for this rule.
         * 
         * @return builder
         * 
         */
        public Builder startIpAddress(Output<String> startIpAddress) {
            $.startIpAddress = startIpAddress;
            return this;
        }

        /**
         * @param startIpAddress The starting IP address to allow through the firewall for this rule.
         * 
         * @return builder
         * 
         */
        public Builder startIpAddress(String startIpAddress) {
            return startIpAddress(Output.of(startIpAddress));
        }

        public FirewallRuleArgs build() {
            $.endIpAddress = Objects.requireNonNull($.endIpAddress, "expected parameter 'endIpAddress' to be non-null");
            $.serverId = Objects.requireNonNull($.serverId, "expected parameter 'serverId' to be non-null");
            $.startIpAddress = Objects.requireNonNull($.startIpAddress, "expected parameter 'startIpAddress' to be non-null");
            return $;
        }
    }

}
