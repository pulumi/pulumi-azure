// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.servicebus;

import com.pulumi.azure.Utilities;
import com.pulumi.azure.servicebus.SubscriptionRuleArgs;
import com.pulumi.azure.servicebus.inputs.SubscriptionRuleState;
import com.pulumi.azure.servicebus.outputs.SubscriptionRuleCorrelationFilter;
import com.pulumi.core.Alias;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Manages a ServiceBus Subscription Rule.
 * 
 * ## Example Usage
 * ### SQL Filter)
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.azure.core.ResourceGroup;
 * import com.pulumi.azure.core.ResourceGroupArgs;
 * import com.pulumi.azure.servicebus.Namespace;
 * import com.pulumi.azure.servicebus.NamespaceArgs;
 * import com.pulumi.azure.servicebus.Topic;
 * import com.pulumi.azure.servicebus.TopicArgs;
 * import com.pulumi.azure.servicebus.Subscription;
 * import com.pulumi.azure.servicebus.SubscriptionArgs;
 * import com.pulumi.azure.servicebus.SubscriptionRule;
 * import com.pulumi.azure.servicebus.SubscriptionRuleArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var exampleResourceGroup = new ResourceGroup(&#34;exampleResourceGroup&#34;, ResourceGroupArgs.builder()        
 *             .location(&#34;West Europe&#34;)
 *             .build());
 * 
 *         var exampleNamespace = new Namespace(&#34;exampleNamespace&#34;, NamespaceArgs.builder()        
 *             .location(exampleResourceGroup.location())
 *             .resourceGroupName(exampleResourceGroup.name())
 *             .sku(&#34;Standard&#34;)
 *             .tags(Map.of(&#34;source&#34;, &#34;example&#34;))
 *             .build());
 * 
 *         var exampleTopic = new Topic(&#34;exampleTopic&#34;, TopicArgs.builder()        
 *             .namespaceId(exampleNamespace.id())
 *             .enablePartitioning(true)
 *             .build());
 * 
 *         var exampleSubscription = new Subscription(&#34;exampleSubscription&#34;, SubscriptionArgs.builder()        
 *             .topicId(exampleTopic.id())
 *             .maxDeliveryCount(1)
 *             .build());
 * 
 *         var exampleSubscriptionRule = new SubscriptionRule(&#34;exampleSubscriptionRule&#34;, SubscriptionRuleArgs.builder()        
 *             .subscriptionId(exampleSubscription.id())
 *             .filterType(&#34;SqlFilter&#34;)
 *             .sqlFilter(&#34;colour = &#39;red&#39;&#34;)
 *             .build());
 * 
 *     }
 * }
 * ```
 * ### Correlation Filter)
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.azure.core.ResourceGroup;
 * import com.pulumi.azure.core.ResourceGroupArgs;
 * import com.pulumi.azure.servicebus.Namespace;
 * import com.pulumi.azure.servicebus.NamespaceArgs;
 * import com.pulumi.azure.servicebus.Topic;
 * import com.pulumi.azure.servicebus.TopicArgs;
 * import com.pulumi.azure.servicebus.Subscription;
 * import com.pulumi.azure.servicebus.SubscriptionArgs;
 * import com.pulumi.azure.servicebus.SubscriptionRule;
 * import com.pulumi.azure.servicebus.SubscriptionRuleArgs;
 * import com.pulumi.azure.servicebus.inputs.SubscriptionRuleCorrelationFilterArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var exampleResourceGroup = new ResourceGroup(&#34;exampleResourceGroup&#34;, ResourceGroupArgs.builder()        
 *             .location(&#34;West Europe&#34;)
 *             .build());
 * 
 *         var exampleNamespace = new Namespace(&#34;exampleNamespace&#34;, NamespaceArgs.builder()        
 *             .location(exampleResourceGroup.location())
 *             .resourceGroupName(exampleResourceGroup.name())
 *             .sku(&#34;Standard&#34;)
 *             .tags(Map.of(&#34;source&#34;, &#34;example&#34;))
 *             .build());
 * 
 *         var exampleTopic = new Topic(&#34;exampleTopic&#34;, TopicArgs.builder()        
 *             .namespaceId(exampleNamespace.id())
 *             .enablePartitioning(true)
 *             .build());
 * 
 *         var exampleSubscription = new Subscription(&#34;exampleSubscription&#34;, SubscriptionArgs.builder()        
 *             .topicId(exampleTopic.id())
 *             .maxDeliveryCount(1)
 *             .build());
 * 
 *         var exampleSubscriptionRule = new SubscriptionRule(&#34;exampleSubscriptionRule&#34;, SubscriptionRuleArgs.builder()        
 *             .subscriptionId(exampleSubscription.id())
 *             .filterType(&#34;CorrelationFilter&#34;)
 *             .correlationFilter(SubscriptionRuleCorrelationFilterArgs.builder()
 *                 .correlationId(&#34;high&#34;)
 *                 .label(&#34;red&#34;)
 *                 .properties(Map.of(&#34;customProperty&#34;, &#34;value&#34;))
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * Service Bus Subscription Rule can be imported using the `resource id`, e.g.
 * 
 * ```sh
 *  $ pulumi import azure:servicebus/subscriptionRule:SubscriptionRule example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/mygroup1/providers/microsoft.servicebus/namespaces/sbns1/topics/sntopic1/subscriptions/sbsub1/rules/sbrule1
 * ```
 * 
 */
@ResourceType(type="azure:servicebus/subscriptionRule:SubscriptionRule")
public class SubscriptionRule extends com.pulumi.resources.CustomResource {
    /**
     * Represents set of actions written in SQL language-based syntax that is performed against a BrokeredMessage.
     * 
     */
    @Export(name="action", type=String.class, parameters={})
    private Output</* @Nullable */ String> action;

    /**
     * @return Represents set of actions written in SQL language-based syntax that is performed against a BrokeredMessage.
     * 
     */
    public Output<Optional<String>> action() {
        return Codegen.optional(this.action);
    }
    /**
     * A `correlation_filter` block as documented below to be evaluated against a BrokeredMessage. Required when `filter_type` is set to `CorrelationFilter`.
     * 
     */
    @Export(name="correlationFilter", type=SubscriptionRuleCorrelationFilter.class, parameters={})
    private Output</* @Nullable */ SubscriptionRuleCorrelationFilter> correlationFilter;

    /**
     * @return A `correlation_filter` block as documented below to be evaluated against a BrokeredMessage. Required when `filter_type` is set to `CorrelationFilter`.
     * 
     */
    public Output<Optional<SubscriptionRuleCorrelationFilter>> correlationFilter() {
        return Codegen.optional(this.correlationFilter);
    }
    /**
     * Type of filter to be applied to a BrokeredMessage. Possible values are `SqlFilter` and `CorrelationFilter`.
     * 
     */
    @Export(name="filterType", type=String.class, parameters={})
    private Output<String> filterType;

    /**
     * @return Type of filter to be applied to a BrokeredMessage. Possible values are `SqlFilter` and `CorrelationFilter`.
     * 
     */
    public Output<String> filterType() {
        return this.filterType;
    }
    /**
     * Specifies the name of the ServiceBus Subscription Rule. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return Specifies the name of the ServiceBus Subscription Rule. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Represents a filter written in SQL language-based syntax that to be evaluated against a BrokeredMessage. Required when `filter_type` is set to `SqlFilter`.
     * 
     */
    @Export(name="sqlFilter", type=String.class, parameters={})
    private Output</* @Nullable */ String> sqlFilter;

    /**
     * @return Represents a filter written in SQL language-based syntax that to be evaluated against a BrokeredMessage. Required when `filter_type` is set to `SqlFilter`.
     * 
     */
    public Output<Optional<String>> sqlFilter() {
        return Codegen.optional(this.sqlFilter);
    }
    /**
     * The ID of the ServiceBus Subscription in which this Rule should be created. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="subscriptionId", type=String.class, parameters={})
    private Output<String> subscriptionId;

    /**
     * @return The ID of the ServiceBus Subscription in which this Rule should be created. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> subscriptionId() {
        return this.subscriptionId;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public SubscriptionRule(String name) {
        this(name, SubscriptionRuleArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public SubscriptionRule(String name, SubscriptionRuleArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public SubscriptionRule(String name, SubscriptionRuleArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:servicebus/subscriptionRule:SubscriptionRule", name, args == null ? SubscriptionRuleArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private SubscriptionRule(String name, Output<String> id, @Nullable SubscriptionRuleState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:servicebus/subscriptionRule:SubscriptionRule", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .aliases(List.of(
                Output.of(Alias.builder().type("azure:eventhub/subscriptionRule:SubscriptionRule").build())
            ))
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static SubscriptionRule get(String name, Output<String> id, @Nullable SubscriptionRuleState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new SubscriptionRule(name, id, state, options);
    }
}
