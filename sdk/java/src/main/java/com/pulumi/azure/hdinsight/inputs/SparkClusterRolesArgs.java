// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.hdinsight.inputs;

import com.pulumi.azure.hdinsight.inputs.SparkClusterRolesHeadNodeArgs;
import com.pulumi.azure.hdinsight.inputs.SparkClusterRolesWorkerNodeArgs;
import com.pulumi.azure.hdinsight.inputs.SparkClusterRolesZookeeperNodeArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.util.Objects;


public final class SparkClusterRolesArgs extends com.pulumi.resources.ResourceArgs {

    public static final SparkClusterRolesArgs Empty = new SparkClusterRolesArgs();

    /**
     * A `headNode` block as defined above.
     * 
     */
    @Import(name="headNode", required=true)
    private Output<SparkClusterRolesHeadNodeArgs> headNode;

    /**
     * @return A `headNode` block as defined above.
     * 
     */
    public Output<SparkClusterRolesHeadNodeArgs> headNode() {
        return this.headNode;
    }

    /**
     * A `workerNode` block as defined below.
     * 
     */
    @Import(name="workerNode", required=true)
    private Output<SparkClusterRolesWorkerNodeArgs> workerNode;

    /**
     * @return A `workerNode` block as defined below.
     * 
     */
    public Output<SparkClusterRolesWorkerNodeArgs> workerNode() {
        return this.workerNode;
    }

    /**
     * A `zookeeperNode` block as defined below.
     * 
     */
    @Import(name="zookeeperNode", required=true)
    private Output<SparkClusterRolesZookeeperNodeArgs> zookeeperNode;

    /**
     * @return A `zookeeperNode` block as defined below.
     * 
     */
    public Output<SparkClusterRolesZookeeperNodeArgs> zookeeperNode() {
        return this.zookeeperNode;
    }

    private SparkClusterRolesArgs() {}

    private SparkClusterRolesArgs(SparkClusterRolesArgs $) {
        this.headNode = $.headNode;
        this.workerNode = $.workerNode;
        this.zookeeperNode = $.zookeeperNode;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SparkClusterRolesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SparkClusterRolesArgs $;

        public Builder() {
            $ = new SparkClusterRolesArgs();
        }

        public Builder(SparkClusterRolesArgs defaults) {
            $ = new SparkClusterRolesArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param headNode A `headNode` block as defined above.
         * 
         * @return builder
         * 
         */
        public Builder headNode(Output<SparkClusterRolesHeadNodeArgs> headNode) {
            $.headNode = headNode;
            return this;
        }

        /**
         * @param headNode A `headNode` block as defined above.
         * 
         * @return builder
         * 
         */
        public Builder headNode(SparkClusterRolesHeadNodeArgs headNode) {
            return headNode(Output.of(headNode));
        }

        /**
         * @param workerNode A `workerNode` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder workerNode(Output<SparkClusterRolesWorkerNodeArgs> workerNode) {
            $.workerNode = workerNode;
            return this;
        }

        /**
         * @param workerNode A `workerNode` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder workerNode(SparkClusterRolesWorkerNodeArgs workerNode) {
            return workerNode(Output.of(workerNode));
        }

        /**
         * @param zookeeperNode A `zookeeperNode` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder zookeeperNode(Output<SparkClusterRolesZookeeperNodeArgs> zookeeperNode) {
            $.zookeeperNode = zookeeperNode;
            return this;
        }

        /**
         * @param zookeeperNode A `zookeeperNode` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder zookeeperNode(SparkClusterRolesZookeeperNodeArgs zookeeperNode) {
            return zookeeperNode(Output.of(zookeeperNode));
        }

        public SparkClusterRolesArgs build() {
            if ($.headNode == null) {
                throw new MissingRequiredPropertyException("SparkClusterRolesArgs", "headNode");
            }
            if ($.workerNode == null) {
                throw new MissingRequiredPropertyException("SparkClusterRolesArgs", "workerNode");
            }
            if ($.zookeeperNode == null) {
                throw new MissingRequiredPropertyException("SparkClusterRolesArgs", "zookeeperNode");
            }
            return $;
        }
    }

}
