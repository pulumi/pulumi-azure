// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.authorization;

import com.pulumi.azure.Utilities;
import com.pulumi.azure.authorization.AssignmentArgs;
import com.pulumi.azure.authorization.inputs.AssignmentState;
import com.pulumi.core.Alias;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Assigns a given Principal (User or Group) to a given Role.
 * 
 * ## Example Usage
 * ### Using A Built-In Role)
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.azure.core.CoreFunctions;
 * import com.pulumi.azure.core.inputs.GetSubscriptionArgs;
 * import com.pulumi.azure.authorization.Assignment;
 * import com.pulumi.azure.authorization.AssignmentArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         final var primary = CoreFunctions.getSubscription();
 * 
 *         final var exampleClientConfig = CoreFunctions.getClientConfig();
 * 
 *         var exampleAssignment = new Assignment(&#34;exampleAssignment&#34;, AssignmentArgs.builder()        
 *             .scope(primary.applyValue(getSubscriptionResult -&gt; getSubscriptionResult.id()))
 *             .roleDefinitionName(&#34;Reader&#34;)
 *             .principalId(exampleClientConfig.applyValue(getClientConfigResult -&gt; getClientConfigResult.objectId()))
 *             .build());
 * 
 *     }
 * }
 * ```
 * ### Custom Role &amp; Service Principal)
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.azure.core.CoreFunctions;
 * import com.pulumi.azure.core.inputs.GetSubscriptionArgs;
 * import com.pulumi.azure.authorization.RoleDefinition;
 * import com.pulumi.azure.authorization.RoleDefinitionArgs;
 * import com.pulumi.azure.authorization.inputs.RoleDefinitionPermissionArgs;
 * import com.pulumi.azure.authorization.Assignment;
 * import com.pulumi.azure.authorization.AssignmentArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         final var primary = CoreFunctions.getSubscription();
 * 
 *         final var exampleClientConfig = CoreFunctions.getClientConfig();
 * 
 *         var exampleRoleDefinition = new RoleDefinition(&#34;exampleRoleDefinition&#34;, RoleDefinitionArgs.builder()        
 *             .roleDefinitionId(&#34;00000000-0000-0000-0000-000000000000&#34;)
 *             .scope(primary.applyValue(getSubscriptionResult -&gt; getSubscriptionResult.id()))
 *             .permissions(RoleDefinitionPermissionArgs.builder()
 *                 .actions(&#34;Microsoft.Resources/subscriptions/resourceGroups/read&#34;)
 *                 .notActions()
 *                 .build())
 *             .assignableScopes(primary.applyValue(getSubscriptionResult -&gt; getSubscriptionResult.id()))
 *             .build());
 * 
 *         var exampleAssignment = new Assignment(&#34;exampleAssignment&#34;, AssignmentArgs.builder()        
 *             .name(&#34;00000000-0000-0000-0000-000000000000&#34;)
 *             .scope(primary.applyValue(getSubscriptionResult -&gt; getSubscriptionResult.id()))
 *             .roleDefinitionId(exampleRoleDefinition.roleDefinitionResourceId())
 *             .principalId(exampleClientConfig.applyValue(getClientConfigResult -&gt; getClientConfigResult.objectId()))
 *             .build());
 * 
 *     }
 * }
 * ```
 * ### Custom Role &amp; User)
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.azure.core.CoreFunctions;
 * import com.pulumi.azure.core.inputs.GetSubscriptionArgs;
 * import com.pulumi.azure.authorization.RoleDefinition;
 * import com.pulumi.azure.authorization.RoleDefinitionArgs;
 * import com.pulumi.azure.authorization.inputs.RoleDefinitionPermissionArgs;
 * import com.pulumi.azure.authorization.Assignment;
 * import com.pulumi.azure.authorization.AssignmentArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         final var primary = CoreFunctions.getSubscription();
 * 
 *         final var exampleClientConfig = CoreFunctions.getClientConfig();
 * 
 *         var exampleRoleDefinition = new RoleDefinition(&#34;exampleRoleDefinition&#34;, RoleDefinitionArgs.builder()        
 *             .roleDefinitionId(&#34;00000000-0000-0000-0000-000000000000&#34;)
 *             .scope(primary.applyValue(getSubscriptionResult -&gt; getSubscriptionResult.id()))
 *             .permissions(RoleDefinitionPermissionArgs.builder()
 *                 .actions(&#34;Microsoft.Resources/subscriptions/resourceGroups/read&#34;)
 *                 .notActions()
 *                 .build())
 *             .assignableScopes(primary.applyValue(getSubscriptionResult -&gt; getSubscriptionResult.id()))
 *             .build());
 * 
 *         var exampleAssignment = new Assignment(&#34;exampleAssignment&#34;, AssignmentArgs.builder()        
 *             .name(&#34;00000000-0000-0000-0000-000000000000&#34;)
 *             .scope(primary.applyValue(getSubscriptionResult -&gt; getSubscriptionResult.id()))
 *             .roleDefinitionId(exampleRoleDefinition.roleDefinitionResourceId())
 *             .principalId(exampleClientConfig.applyValue(getClientConfigResult -&gt; getClientConfigResult.objectId()))
 *             .build());
 * 
 *     }
 * }
 * ```
 * ### Custom Role &amp; Management Group)
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.azure.core.CoreFunctions;
 * import com.pulumi.azure.core.inputs.GetSubscriptionArgs;
 * import com.pulumi.azure.management.ManagementFunctions;
 * import com.pulumi.azure.management.inputs.GetGroupArgs;
 * import com.pulumi.azure.authorization.RoleDefinition;
 * import com.pulumi.azure.authorization.RoleDefinitionArgs;
 * import com.pulumi.azure.authorization.inputs.RoleDefinitionPermissionArgs;
 * import com.pulumi.azure.authorization.Assignment;
 * import com.pulumi.azure.authorization.AssignmentArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         final var primary = CoreFunctions.getSubscription();
 * 
 *         final var exampleClientConfig = CoreFunctions.getClientConfig();
 * 
 *         final var exampleGroup = ManagementFunctions.getGroup(GetGroupArgs.builder()
 *             .name(&#34;00000000-0000-0000-0000-000000000000&#34;)
 *             .build());
 * 
 *         var exampleRoleDefinition = new RoleDefinition(&#34;exampleRoleDefinition&#34;, RoleDefinitionArgs.builder()        
 *             .roleDefinitionId(&#34;00000000-0000-0000-0000-000000000000&#34;)
 *             .scope(primary.applyValue(getSubscriptionResult -&gt; getSubscriptionResult.id()))
 *             .permissions(RoleDefinitionPermissionArgs.builder()
 *                 .actions(&#34;Microsoft.Resources/subscriptions/resourceGroups/read&#34;)
 *                 .notActions()
 *                 .build())
 *             .assignableScopes(primary.applyValue(getSubscriptionResult -&gt; getSubscriptionResult.id()))
 *             .build());
 * 
 *         var exampleAssignment = new Assignment(&#34;exampleAssignment&#34;, AssignmentArgs.builder()        
 *             .name(&#34;00000000-0000-0000-0000-000000000000&#34;)
 *             .scope(data.azurerm_management_group().primary().id())
 *             .roleDefinitionId(exampleRoleDefinition.roleDefinitionResourceId())
 *             .principalId(exampleClientConfig.applyValue(getClientConfigResult -&gt; getClientConfigResult.objectId()))
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * Role Assignments can be imported using the `resource id`, e.g.
 * 
 * ```sh
 *  $ pulumi import azure:authorization/assignment:Assignment example /subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Authorization/roleAssignments/00000000-0000-0000-0000-000000000000
 * ```
 * 
 *  * for scope `Subscription`, the id format is `/subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Authorization/roleAssignments/00000000-0000-0000-0000-000000000000` * for scope `Resource Group`, the id format is `/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.Authorization/roleAssignments/00000000-0000-0000-0000-000000000000` text /subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Authorization/roleAssignments/00000000-0000-0000-0000-000000000000|00000000-0000-0000-0000-000000000000
 * 
 */
@ResourceType(type="azure:authorization/assignment:Assignment")
public class Assignment extends com.pulumi.resources.CustomResource {
    /**
     * The condition that limits the resources that the role can be assigned to. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="condition", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> condition;

    /**
     * @return The condition that limits the resources that the role can be assigned to. Changing this forces a new resource to be created.
     * 
     */
    public Output<Optional<String>> condition() {
        return Codegen.optional(this.condition);
    }
    /**
     * The version of the condition. Possible values are `1.0` or `2.0`. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="conditionVersion", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> conditionVersion;

    /**
     * @return The version of the condition. Possible values are `1.0` or `2.0`. Changing this forces a new resource to be created.
     * 
     */
    public Output<Optional<String>> conditionVersion() {
        return Codegen.optional(this.conditionVersion);
    }
    /**
     * The delegated Azure Resource Id which contains a Managed Identity. Changing this forces a new resource to be created.
     * 
     * &gt; **NOTE:** this field is only used in cross tenant scenario.
     * 
     */
    @Export(name="delegatedManagedIdentityResourceId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> delegatedManagedIdentityResourceId;

    /**
     * @return The delegated Azure Resource Id which contains a Managed Identity. Changing this forces a new resource to be created.
     * 
     * &gt; **NOTE:** this field is only used in cross tenant scenario.
     * 
     */
    public Output<Optional<String>> delegatedManagedIdentityResourceId() {
        return Codegen.optional(this.delegatedManagedIdentityResourceId);
    }
    /**
     * The description for this Role Assignment. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> description;

    /**
     * @return The description for this Role Assignment. Changing this forces a new resource to be created.
     * 
     */
    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    /**
     * A unique UUID/GUID for this Role Assignment - one will be generated if not specified. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return A unique UUID/GUID for this Role Assignment - one will be generated if not specified. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The ID of the Principal (User, Group or Service Principal) to assign the Role Definition to. Changing this forces a new resource to be created.
     * 
     * &gt; **NOTE:** The Principal ID is also known as the Object ID (ie not the &#34;Application ID&#34; for applications).
     * 
     */
    @Export(name="principalId", refs={String.class}, tree="[0]")
    private Output<String> principalId;

    /**
     * @return The ID of the Principal (User, Group or Service Principal) to assign the Role Definition to. Changing this forces a new resource to be created.
     * 
     * &gt; **NOTE:** The Principal ID is also known as the Object ID (ie not the &#34;Application ID&#34; for applications).
     * 
     */
    public Output<String> principalId() {
        return this.principalId;
    }
    /**
     * The type of the `principal_id`. Possible values are `User`, `Group` and `ServicePrincipal`. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="principalType", refs={String.class}, tree="[0]")
    private Output<String> principalType;

    /**
     * @return The type of the `principal_id`. Possible values are `User`, `Group` and `ServicePrincipal`. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> principalType() {
        return this.principalType;
    }
    /**
     * The Scoped-ID of the Role Definition. Changing this forces a new resource to be created. Conflicts with `role_definition_name`.
     * 
     */
    @Export(name="roleDefinitionId", refs={String.class}, tree="[0]")
    private Output<String> roleDefinitionId;

    /**
     * @return The Scoped-ID of the Role Definition. Changing this forces a new resource to be created. Conflicts with `role_definition_name`.
     * 
     */
    public Output<String> roleDefinitionId() {
        return this.roleDefinitionId;
    }
    /**
     * The name of a built-in Role. Changing this forces a new resource to be created. Conflicts with `role_definition_id`.
     * 
     */
    @Export(name="roleDefinitionName", refs={String.class}, tree="[0]")
    private Output<String> roleDefinitionName;

    /**
     * @return The name of a built-in Role. Changing this forces a new resource to be created. Conflicts with `role_definition_id`.
     * 
     */
    public Output<String> roleDefinitionName() {
        return this.roleDefinitionName;
    }
    /**
     * The scope at which the Role Assignment applies to, such as `/subscriptions/0b1f6471-1bf0-4dda-aec3-111122223333`, `/subscriptions/0b1f6471-1bf0-4dda-aec3-111122223333/resourceGroups/myGroup`, or `/subscriptions/0b1f6471-1bf0-4dda-aec3-111122223333/resourceGroups/myGroup/providers/Microsoft.Compute/virtualMachines/myVM`, or `/providers/Microsoft.Management/managementGroups/myMG`. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="scope", refs={String.class}, tree="[0]")
    private Output<String> scope;

    /**
     * @return The scope at which the Role Assignment applies to, such as `/subscriptions/0b1f6471-1bf0-4dda-aec3-111122223333`, `/subscriptions/0b1f6471-1bf0-4dda-aec3-111122223333/resourceGroups/myGroup`, or `/subscriptions/0b1f6471-1bf0-4dda-aec3-111122223333/resourceGroups/myGroup/providers/Microsoft.Compute/virtualMachines/myVM`, or `/providers/Microsoft.Management/managementGroups/myMG`. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> scope() {
        return this.scope;
    }
    /**
     * If the `principal_id` is a newly provisioned `Service Principal` set this value to `true` to skip the `Azure Active Directory` check which may fail due to replication lag. This argument is only valid if the `principal_id` is a `Service Principal` identity. Defaults to `false`.
     * 
     * &gt; **NOTE:** If it is not a `Service Principal` identity it will cause the role assignment to fail.
     * 
     */
    @Export(name="skipServicePrincipalAadCheck", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> skipServicePrincipalAadCheck;

    /**
     * @return If the `principal_id` is a newly provisioned `Service Principal` set this value to `true` to skip the `Azure Active Directory` check which may fail due to replication lag. This argument is only valid if the `principal_id` is a `Service Principal` identity. Defaults to `false`.
     * 
     * &gt; **NOTE:** If it is not a `Service Principal` identity it will cause the role assignment to fail.
     * 
     */
    public Output<Boolean> skipServicePrincipalAadCheck() {
        return this.skipServicePrincipalAadCheck;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Assignment(String name) {
        this(name, AssignmentArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Assignment(String name, AssignmentArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Assignment(String name, AssignmentArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:authorization/assignment:Assignment", name, args == null ? AssignmentArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private Assignment(String name, Output<String> id, @Nullable AssignmentState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:authorization/assignment:Assignment", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .aliases(List.of(
                Output.of(Alias.builder().type("azure:role/assignment:Assignment").build())
            ))
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Assignment get(String name, Output<String> id, @Nullable AssignmentState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Assignment(name, id, state, options);
    }
}
