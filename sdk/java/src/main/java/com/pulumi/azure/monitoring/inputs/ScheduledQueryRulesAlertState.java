// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.monitoring.inputs;

import com.pulumi.azure.monitoring.inputs.ScheduledQueryRulesAlertActionArgs;
import com.pulumi.azure.monitoring.inputs.ScheduledQueryRulesAlertTriggerArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ScheduledQueryRulesAlertState extends com.pulumi.resources.ResourceArgs {

    public static final ScheduledQueryRulesAlertState Empty = new ScheduledQueryRulesAlertState();

    /**
     * An `action` block as defined below.
     * 
     */
    @Import(name="action")
    private @Nullable Output<ScheduledQueryRulesAlertActionArgs> action;

    /**
     * @return An `action` block as defined below.
     * 
     */
    public Optional<Output<ScheduledQueryRulesAlertActionArgs>> action() {
        return Optional.ofNullable(this.action);
    }

    /**
     * List of Resource IDs referred into query.
     * 
     */
    @Import(name="authorizedResourceIds")
    private @Nullable Output<List<String>> authorizedResourceIds;

    /**
     * @return List of Resource IDs referred into query.
     * 
     */
    public Optional<Output<List<String>>> authorizedResourceIds() {
        return Optional.ofNullable(this.authorizedResourceIds);
    }

    /**
     * Should the alerts in this Metric Alert be auto resolved? Defaults to `false`.
     * &gt; **NOTE** `auto_mitigation_enabled` and `throttling` are mutually exclusive and cannot both be set.
     * 
     */
    @Import(name="autoMitigationEnabled")
    private @Nullable Output<Boolean> autoMitigationEnabled;

    /**
     * @return Should the alerts in this Metric Alert be auto resolved? Defaults to `false`.
     * &gt; **NOTE** `auto_mitigation_enabled` and `throttling` are mutually exclusive and cannot both be set.
     * 
     */
    public Optional<Output<Boolean>> autoMitigationEnabled() {
        return Optional.ofNullable(this.autoMitigationEnabled);
    }

    /**
     * The resource URI over which log search query is to be run. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="dataSourceId")
    private @Nullable Output<String> dataSourceId;

    /**
     * @return The resource URI over which log search query is to be run. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> dataSourceId() {
        return Optional.ofNullable(this.dataSourceId);
    }

    /**
     * The description of the scheduled query rule.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return The description of the scheduled query rule.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Whether this scheduled query rule is enabled. Default is `true`.
     * 
     */
    @Import(name="enabled")
    private @Nullable Output<Boolean> enabled;

    /**
     * @return Whether this scheduled query rule is enabled. Default is `true`.
     * 
     */
    public Optional<Output<Boolean>> enabled() {
        return Optional.ofNullable(this.enabled);
    }

    /**
     * Frequency (in minutes) at which rule condition should be evaluated. Values must be between 5 and 1440 (inclusive).
     * 
     */
    @Import(name="frequency")
    private @Nullable Output<Integer> frequency;

    /**
     * @return Frequency (in minutes) at which rule condition should be evaluated. Values must be between 5 and 1440 (inclusive).
     * 
     */
    public Optional<Output<Integer>> frequency() {
        return Optional.ofNullable(this.frequency);
    }

    /**
     * Specifies the Azure Region where the resource should exist. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="location")
    private @Nullable Output<String> location;

    /**
     * @return Specifies the Azure Region where the resource should exist. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> location() {
        return Optional.ofNullable(this.location);
    }

    /**
     * The name of the scheduled query rule. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the scheduled query rule. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Log search query.
     * 
     */
    @Import(name="query")
    private @Nullable Output<String> query;

    /**
     * @return Log search query.
     * 
     */
    public Optional<Output<String>> query() {
        return Optional.ofNullable(this.query);
    }

    /**
     * The type of query results. Possible values are `ResultCount` and `Number`. Default is `ResultCount`. If set to `ResultCount`, `query` must include an `AggregatedValue` column of a numeric type, for example, `Heartbeat | summarize AggregatedValue = count() by bin(TimeGenerated, 5m)`.
     * 
     */
    @Import(name="queryType")
    private @Nullable Output<String> queryType;

    /**
     * @return The type of query results. Possible values are `ResultCount` and `Number`. Default is `ResultCount`. If set to `ResultCount`, `query` must include an `AggregatedValue` column of a numeric type, for example, `Heartbeat | summarize AggregatedValue = count() by bin(TimeGenerated, 5m)`.
     * 
     */
    public Optional<Output<String>> queryType() {
        return Optional.ofNullable(this.queryType);
    }

    /**
     * The name of the resource group in which to create the scheduled query rule instance. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="resourceGroupName")
    private @Nullable Output<String> resourceGroupName;

    /**
     * @return The name of the resource group in which to create the scheduled query rule instance. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> resourceGroupName() {
        return Optional.ofNullable(this.resourceGroupName);
    }

    /**
     * Severity of the alert. Possible values include: 0, 1, 2, 3, or 4.
     * 
     */
    @Import(name="severity")
    private @Nullable Output<Integer> severity;

    /**
     * @return Severity of the alert. Possible values include: 0, 1, 2, 3, or 4.
     * 
     */
    public Optional<Output<Integer>> severity() {
        return Optional.ofNullable(this.severity);
    }

    /**
     * A mapping of tags to assign to the resource.
     * 
     */
    @Import(name="tags")
    private @Nullable Output<Map<String,String>> tags;

    /**
     * @return A mapping of tags to assign to the resource.
     * 
     */
    public Optional<Output<Map<String,String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * Time (in minutes) for which Alerts should be throttled or suppressed. Values must be between 0 and 10000 (inclusive).
     * 
     */
    @Import(name="throttling")
    private @Nullable Output<Integer> throttling;

    /**
     * @return Time (in minutes) for which Alerts should be throttled or suppressed. Values must be between 0 and 10000 (inclusive).
     * 
     */
    public Optional<Output<Integer>> throttling() {
        return Optional.ofNullable(this.throttling);
    }

    /**
     * Time window for which data needs to be fetched for query (must be greater than or equal to `frequency`). Values must be between 5 and 2880 (inclusive).
     * 
     */
    @Import(name="timeWindow")
    private @Nullable Output<Integer> timeWindow;

    /**
     * @return Time window for which data needs to be fetched for query (must be greater than or equal to `frequency`). Values must be between 5 and 2880 (inclusive).
     * 
     */
    public Optional<Output<Integer>> timeWindow() {
        return Optional.ofNullable(this.timeWindow);
    }

    /**
     * A `trigger` block as defined below.
     * 
     */
    @Import(name="trigger")
    private @Nullable Output<ScheduledQueryRulesAlertTriggerArgs> trigger;

    /**
     * @return A `trigger` block as defined below.
     * 
     */
    public Optional<Output<ScheduledQueryRulesAlertTriggerArgs>> trigger() {
        return Optional.ofNullable(this.trigger);
    }

    private ScheduledQueryRulesAlertState() {}

    private ScheduledQueryRulesAlertState(ScheduledQueryRulesAlertState $) {
        this.action = $.action;
        this.authorizedResourceIds = $.authorizedResourceIds;
        this.autoMitigationEnabled = $.autoMitigationEnabled;
        this.dataSourceId = $.dataSourceId;
        this.description = $.description;
        this.enabled = $.enabled;
        this.frequency = $.frequency;
        this.location = $.location;
        this.name = $.name;
        this.query = $.query;
        this.queryType = $.queryType;
        this.resourceGroupName = $.resourceGroupName;
        this.severity = $.severity;
        this.tags = $.tags;
        this.throttling = $.throttling;
        this.timeWindow = $.timeWindow;
        this.trigger = $.trigger;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ScheduledQueryRulesAlertState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ScheduledQueryRulesAlertState $;

        public Builder() {
            $ = new ScheduledQueryRulesAlertState();
        }

        public Builder(ScheduledQueryRulesAlertState defaults) {
            $ = new ScheduledQueryRulesAlertState(Objects.requireNonNull(defaults));
        }

        /**
         * @param action An `action` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder action(@Nullable Output<ScheduledQueryRulesAlertActionArgs> action) {
            $.action = action;
            return this;
        }

        /**
         * @param action An `action` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder action(ScheduledQueryRulesAlertActionArgs action) {
            return action(Output.of(action));
        }

        /**
         * @param authorizedResourceIds List of Resource IDs referred into query.
         * 
         * @return builder
         * 
         */
        public Builder authorizedResourceIds(@Nullable Output<List<String>> authorizedResourceIds) {
            $.authorizedResourceIds = authorizedResourceIds;
            return this;
        }

        /**
         * @param authorizedResourceIds List of Resource IDs referred into query.
         * 
         * @return builder
         * 
         */
        public Builder authorizedResourceIds(List<String> authorizedResourceIds) {
            return authorizedResourceIds(Output.of(authorizedResourceIds));
        }

        /**
         * @param authorizedResourceIds List of Resource IDs referred into query.
         * 
         * @return builder
         * 
         */
        public Builder authorizedResourceIds(String... authorizedResourceIds) {
            return authorizedResourceIds(List.of(authorizedResourceIds));
        }

        /**
         * @param autoMitigationEnabled Should the alerts in this Metric Alert be auto resolved? Defaults to `false`.
         * &gt; **NOTE** `auto_mitigation_enabled` and `throttling` are mutually exclusive and cannot both be set.
         * 
         * @return builder
         * 
         */
        public Builder autoMitigationEnabled(@Nullable Output<Boolean> autoMitigationEnabled) {
            $.autoMitigationEnabled = autoMitigationEnabled;
            return this;
        }

        /**
         * @param autoMitigationEnabled Should the alerts in this Metric Alert be auto resolved? Defaults to `false`.
         * &gt; **NOTE** `auto_mitigation_enabled` and `throttling` are mutually exclusive and cannot both be set.
         * 
         * @return builder
         * 
         */
        public Builder autoMitigationEnabled(Boolean autoMitigationEnabled) {
            return autoMitigationEnabled(Output.of(autoMitigationEnabled));
        }

        /**
         * @param dataSourceId The resource URI over which log search query is to be run. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder dataSourceId(@Nullable Output<String> dataSourceId) {
            $.dataSourceId = dataSourceId;
            return this;
        }

        /**
         * @param dataSourceId The resource URI over which log search query is to be run. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder dataSourceId(String dataSourceId) {
            return dataSourceId(Output.of(dataSourceId));
        }

        /**
         * @param description The description of the scheduled query rule.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description The description of the scheduled query rule.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param enabled Whether this scheduled query rule is enabled. Default is `true`.
         * 
         * @return builder
         * 
         */
        public Builder enabled(@Nullable Output<Boolean> enabled) {
            $.enabled = enabled;
            return this;
        }

        /**
         * @param enabled Whether this scheduled query rule is enabled. Default is `true`.
         * 
         * @return builder
         * 
         */
        public Builder enabled(Boolean enabled) {
            return enabled(Output.of(enabled));
        }

        /**
         * @param frequency Frequency (in minutes) at which rule condition should be evaluated. Values must be between 5 and 1440 (inclusive).
         * 
         * @return builder
         * 
         */
        public Builder frequency(@Nullable Output<Integer> frequency) {
            $.frequency = frequency;
            return this;
        }

        /**
         * @param frequency Frequency (in minutes) at which rule condition should be evaluated. Values must be between 5 and 1440 (inclusive).
         * 
         * @return builder
         * 
         */
        public Builder frequency(Integer frequency) {
            return frequency(Output.of(frequency));
        }

        /**
         * @param location Specifies the Azure Region where the resource should exist. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder location(@Nullable Output<String> location) {
            $.location = location;
            return this;
        }

        /**
         * @param location Specifies the Azure Region where the resource should exist. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder location(String location) {
            return location(Output.of(location));
        }

        /**
         * @param name The name of the scheduled query rule. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the scheduled query rule. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param query Log search query.
         * 
         * @return builder
         * 
         */
        public Builder query(@Nullable Output<String> query) {
            $.query = query;
            return this;
        }

        /**
         * @param query Log search query.
         * 
         * @return builder
         * 
         */
        public Builder query(String query) {
            return query(Output.of(query));
        }

        /**
         * @param queryType The type of query results. Possible values are `ResultCount` and `Number`. Default is `ResultCount`. If set to `ResultCount`, `query` must include an `AggregatedValue` column of a numeric type, for example, `Heartbeat | summarize AggregatedValue = count() by bin(TimeGenerated, 5m)`.
         * 
         * @return builder
         * 
         */
        public Builder queryType(@Nullable Output<String> queryType) {
            $.queryType = queryType;
            return this;
        }

        /**
         * @param queryType The type of query results. Possible values are `ResultCount` and `Number`. Default is `ResultCount`. If set to `ResultCount`, `query` must include an `AggregatedValue` column of a numeric type, for example, `Heartbeat | summarize AggregatedValue = count() by bin(TimeGenerated, 5m)`.
         * 
         * @return builder
         * 
         */
        public Builder queryType(String queryType) {
            return queryType(Output.of(queryType));
        }

        /**
         * @param resourceGroupName The name of the resource group in which to create the scheduled query rule instance. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(@Nullable Output<String> resourceGroupName) {
            $.resourceGroupName = resourceGroupName;
            return this;
        }

        /**
         * @param resourceGroupName The name of the resource group in which to create the scheduled query rule instance. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder resourceGroupName(String resourceGroupName) {
            return resourceGroupName(Output.of(resourceGroupName));
        }

        /**
         * @param severity Severity of the alert. Possible values include: 0, 1, 2, 3, or 4.
         * 
         * @return builder
         * 
         */
        public Builder severity(@Nullable Output<Integer> severity) {
            $.severity = severity;
            return this;
        }

        /**
         * @param severity Severity of the alert. Possible values include: 0, 1, 2, 3, or 4.
         * 
         * @return builder
         * 
         */
        public Builder severity(Integer severity) {
            return severity(Output.of(severity));
        }

        /**
         * @param tags A mapping of tags to assign to the resource.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<Map<String,String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags A mapping of tags to assign to the resource.
         * 
         * @return builder
         * 
         */
        public Builder tags(Map<String,String> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param throttling Time (in minutes) for which Alerts should be throttled or suppressed. Values must be between 0 and 10000 (inclusive).
         * 
         * @return builder
         * 
         */
        public Builder throttling(@Nullable Output<Integer> throttling) {
            $.throttling = throttling;
            return this;
        }

        /**
         * @param throttling Time (in minutes) for which Alerts should be throttled or suppressed. Values must be between 0 and 10000 (inclusive).
         * 
         * @return builder
         * 
         */
        public Builder throttling(Integer throttling) {
            return throttling(Output.of(throttling));
        }

        /**
         * @param timeWindow Time window for which data needs to be fetched for query (must be greater than or equal to `frequency`). Values must be between 5 and 2880 (inclusive).
         * 
         * @return builder
         * 
         */
        public Builder timeWindow(@Nullable Output<Integer> timeWindow) {
            $.timeWindow = timeWindow;
            return this;
        }

        /**
         * @param timeWindow Time window for which data needs to be fetched for query (must be greater than or equal to `frequency`). Values must be between 5 and 2880 (inclusive).
         * 
         * @return builder
         * 
         */
        public Builder timeWindow(Integer timeWindow) {
            return timeWindow(Output.of(timeWindow));
        }

        /**
         * @param trigger A `trigger` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder trigger(@Nullable Output<ScheduledQueryRulesAlertTriggerArgs> trigger) {
            $.trigger = trigger;
            return this;
        }

        /**
         * @param trigger A `trigger` block as defined below.
         * 
         * @return builder
         * 
         */
        public Builder trigger(ScheduledQueryRulesAlertTriggerArgs trigger) {
            return trigger(Output.of(trigger));
        }

        public ScheduledQueryRulesAlertState build() {
            return $;
        }
    }

}
