// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.monitoring.outputs;

import com.pulumi.azure.monitoring.outputs.GetScheduledQueryRulesAlertTriggerMetricTrigger;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Double;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetScheduledQueryRulesAlertTrigger {
    private List<GetScheduledQueryRulesAlertTriggerMetricTrigger> metricTriggers;
    /**
     * @return Evaluation operation for rule.
     * 
     */
    private String operator;
    /**
     * @return Result or count threshold based on which rule should be triggered.
     * 
     */
    private Double threshold;

    private GetScheduledQueryRulesAlertTrigger() {}
    public List<GetScheduledQueryRulesAlertTriggerMetricTrigger> metricTriggers() {
        return this.metricTriggers;
    }
    /**
     * @return Evaluation operation for rule.
     * 
     */
    public String operator() {
        return this.operator;
    }
    /**
     * @return Result or count threshold based on which rule should be triggered.
     * 
     */
    public Double threshold() {
        return this.threshold;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetScheduledQueryRulesAlertTrigger defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetScheduledQueryRulesAlertTriggerMetricTrigger> metricTriggers;
        private String operator;
        private Double threshold;
        public Builder() {}
        public Builder(GetScheduledQueryRulesAlertTrigger defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.metricTriggers = defaults.metricTriggers;
    	      this.operator = defaults.operator;
    	      this.threshold = defaults.threshold;
        }

        @CustomType.Setter
        public Builder metricTriggers(List<GetScheduledQueryRulesAlertTriggerMetricTrigger> metricTriggers) {
            if (metricTriggers == null) {
              throw new MissingRequiredPropertyException("GetScheduledQueryRulesAlertTrigger", "metricTriggers");
            }
            this.metricTriggers = metricTriggers;
            return this;
        }
        public Builder metricTriggers(GetScheduledQueryRulesAlertTriggerMetricTrigger... metricTriggers) {
            return metricTriggers(List.of(metricTriggers));
        }
        @CustomType.Setter
        public Builder operator(String operator) {
            if (operator == null) {
              throw new MissingRequiredPropertyException("GetScheduledQueryRulesAlertTrigger", "operator");
            }
            this.operator = operator;
            return this;
        }
        @CustomType.Setter
        public Builder threshold(Double threshold) {
            if (threshold == null) {
              throw new MissingRequiredPropertyException("GetScheduledQueryRulesAlertTrigger", "threshold");
            }
            this.threshold = threshold;
            return this;
        }
        public GetScheduledQueryRulesAlertTrigger build() {
            final var _resultValue = new GetScheduledQueryRulesAlertTrigger();
            _resultValue.metricTriggers = metricTriggers;
            _resultValue.operator = operator;
            _resultValue.threshold = threshold;
            return _resultValue;
        }
    }
}
