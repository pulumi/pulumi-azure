// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.waf.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class PolicyManagedRulesManagedRuleSetRuleGroupOverrideArgs extends com.pulumi.resources.ResourceArgs {

    public static final PolicyManagedRulesManagedRuleSetRuleGroupOverrideArgs Empty = new PolicyManagedRulesManagedRuleSetRuleGroupOverrideArgs();

    /**
     * One or more Rule IDs
     * 
     */
    @Import(name="disabledRules")
    private @Nullable Output<List<String>> disabledRules;

    /**
     * @return One or more Rule IDs
     * 
     */
    public Optional<Output<List<String>>> disabledRules() {
        return Optional.ofNullable(this.disabledRules);
    }

    /**
     * The name of the Rule Group
     * 
     */
    @Import(name="ruleGroupName", required=true)
    private Output<String> ruleGroupName;

    /**
     * @return The name of the Rule Group
     * 
     */
    public Output<String> ruleGroupName() {
        return this.ruleGroupName;
    }

    private PolicyManagedRulesManagedRuleSetRuleGroupOverrideArgs() {}

    private PolicyManagedRulesManagedRuleSetRuleGroupOverrideArgs(PolicyManagedRulesManagedRuleSetRuleGroupOverrideArgs $) {
        this.disabledRules = $.disabledRules;
        this.ruleGroupName = $.ruleGroupName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PolicyManagedRulesManagedRuleSetRuleGroupOverrideArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PolicyManagedRulesManagedRuleSetRuleGroupOverrideArgs $;

        public Builder() {
            $ = new PolicyManagedRulesManagedRuleSetRuleGroupOverrideArgs();
        }

        public Builder(PolicyManagedRulesManagedRuleSetRuleGroupOverrideArgs defaults) {
            $ = new PolicyManagedRulesManagedRuleSetRuleGroupOverrideArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param disabledRules One or more Rule IDs
         * 
         * @return builder
         * 
         */
        public Builder disabledRules(@Nullable Output<List<String>> disabledRules) {
            $.disabledRules = disabledRules;
            return this;
        }

        /**
         * @param disabledRules One or more Rule IDs
         * 
         * @return builder
         * 
         */
        public Builder disabledRules(List<String> disabledRules) {
            return disabledRules(Output.of(disabledRules));
        }

        /**
         * @param disabledRules One or more Rule IDs
         * 
         * @return builder
         * 
         */
        public Builder disabledRules(String... disabledRules) {
            return disabledRules(List.of(disabledRules));
        }

        /**
         * @param ruleGroupName The name of the Rule Group
         * 
         * @return builder
         * 
         */
        public Builder ruleGroupName(Output<String> ruleGroupName) {
            $.ruleGroupName = ruleGroupName;
            return this;
        }

        /**
         * @param ruleGroupName The name of the Rule Group
         * 
         * @return builder
         * 
         */
        public Builder ruleGroupName(String ruleGroupName) {
            return ruleGroupName(Output.of(ruleGroupName));
        }

        public PolicyManagedRulesManagedRuleSetRuleGroupOverrideArgs build() {
            $.ruleGroupName = Objects.requireNonNull($.ruleGroupName, "expected parameter 'ruleGroupName' to be non-null");
            return $;
        }
    }

}
