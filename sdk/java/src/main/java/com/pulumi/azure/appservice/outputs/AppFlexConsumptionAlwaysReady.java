// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.appservice.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class AppFlexConsumptionAlwaysReady {
    /**
     * @return The instance count of the `always_ready` of the  Function App. The minimum number is `0`. The total number of `instance_count` should not exceed the `maximum_instance_count`.
     * 
     */
    private @Nullable Integer instanceCount;
    /**
     * @return The name of the `always_ready` of the Function App.
     * 
     */
    private String name;

    private AppFlexConsumptionAlwaysReady() {}
    /**
     * @return The instance count of the `always_ready` of the  Function App. The minimum number is `0`. The total number of `instance_count` should not exceed the `maximum_instance_count`.
     * 
     */
    public Optional<Integer> instanceCount() {
        return Optional.ofNullable(this.instanceCount);
    }
    /**
     * @return The name of the `always_ready` of the Function App.
     * 
     */
    public String name() {
        return this.name;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AppFlexConsumptionAlwaysReady defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Integer instanceCount;
        private String name;
        public Builder() {}
        public Builder(AppFlexConsumptionAlwaysReady defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.instanceCount = defaults.instanceCount;
    	      this.name = defaults.name;
        }

        @CustomType.Setter
        public Builder instanceCount(@Nullable Integer instanceCount) {

            this.instanceCount = instanceCount;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("AppFlexConsumptionAlwaysReady", "name");
            }
            this.name = name;
            return this;
        }
        public AppFlexConsumptionAlwaysReady build() {
            final var _resultValue = new AppFlexConsumptionAlwaysReady();
            _resultValue.instanceCount = instanceCount;
            _resultValue.name = name;
            return _resultValue;
        }
    }
}
