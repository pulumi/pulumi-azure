// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.mssql;

import com.pulumi.azure.Utilities;
import com.pulumi.azure.mssql.inputs.GetDatabaseArgs;
import com.pulumi.azure.mssql.inputs.GetDatabasePlainArgs;
import com.pulumi.azure.mssql.inputs.GetElasticPoolArgs;
import com.pulumi.azure.mssql.inputs.GetElasticPoolPlainArgs;
import com.pulumi.azure.mssql.inputs.GetManagedDatabaseArgs;
import com.pulumi.azure.mssql.inputs.GetManagedDatabasePlainArgs;
import com.pulumi.azure.mssql.inputs.GetManagedInstanceArgs;
import com.pulumi.azure.mssql.inputs.GetManagedInstancePlainArgs;
import com.pulumi.azure.mssql.inputs.GetServerArgs;
import com.pulumi.azure.mssql.inputs.GetServerPlainArgs;
import com.pulumi.azure.mssql.outputs.GetDatabaseResult;
import com.pulumi.azure.mssql.outputs.GetElasticPoolResult;
import com.pulumi.azure.mssql.outputs.GetManagedDatabaseResult;
import com.pulumi.azure.mssql.outputs.GetManagedInstanceResult;
import com.pulumi.azure.mssql.outputs.GetServerResult;
import com.pulumi.core.Output;
import com.pulumi.core.TypeShape;
import com.pulumi.deployment.Deployment;
import com.pulumi.deployment.InvokeOptions;
import com.pulumi.deployment.InvokeOutputOptions;
import java.util.concurrent.CompletableFuture;

public final class MssqlFunctions {
    /**
     * Use this data source to access information about an existing SQL database.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azure.core.ResourceGroup;
     * import com.pulumi.azure.core.ResourceGroupArgs;
     * import com.pulumi.azure.mssql.Server;
     * import com.pulumi.azure.mssql.ServerArgs;
     * import com.pulumi.azure.mssql.MssqlFunctions;
     * import com.pulumi.azure.mssql.inputs.GetDatabaseArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var exampleResourceGroup = new ResourceGroup("exampleResourceGroup", ResourceGroupArgs.builder()
     *             .name("example-resources")
     *             .location("West Europe")
     *             .build());
     * 
     *         var exampleServer = new Server("exampleServer", ServerArgs.builder()
     *             .name("example")
     *             .resourceGroupName(exampleResourceGroup.name())
     *             .location(exampleResourceGroup.location())
     *             .version("12.0")
     *             .administratorLogin("4dm1n157r470r")
     *             .administratorLoginPassword("4-v3ry-53cr37-p455w0rd")
     *             .build());
     * 
     *         final var example = MssqlFunctions.getDatabase(GetDatabaseArgs.builder()
     *             .name("example-mssql-db")
     *             .serverId(exampleServer.id())
     *             .build());
     * 
     *         ctx.export("databaseId", example.applyValue(getDatabaseResult -> getDatabaseResult).applyValue(example -> example.applyValue(getDatabaseResult -> getDatabaseResult.id())));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetDatabaseResult> getDatabase(GetDatabaseArgs args) {
        return getDatabase(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to access information about an existing SQL database.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azure.core.ResourceGroup;
     * import com.pulumi.azure.core.ResourceGroupArgs;
     * import com.pulumi.azure.mssql.Server;
     * import com.pulumi.azure.mssql.ServerArgs;
     * import com.pulumi.azure.mssql.MssqlFunctions;
     * import com.pulumi.azure.mssql.inputs.GetDatabaseArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var exampleResourceGroup = new ResourceGroup("exampleResourceGroup", ResourceGroupArgs.builder()
     *             .name("example-resources")
     *             .location("West Europe")
     *             .build());
     * 
     *         var exampleServer = new Server("exampleServer", ServerArgs.builder()
     *             .name("example")
     *             .resourceGroupName(exampleResourceGroup.name())
     *             .location(exampleResourceGroup.location())
     *             .version("12.0")
     *             .administratorLogin("4dm1n157r470r")
     *             .administratorLoginPassword("4-v3ry-53cr37-p455w0rd")
     *             .build());
     * 
     *         final var example = MssqlFunctions.getDatabase(GetDatabaseArgs.builder()
     *             .name("example-mssql-db")
     *             .serverId(exampleServer.id())
     *             .build());
     * 
     *         ctx.export("databaseId", example.applyValue(getDatabaseResult -> getDatabaseResult).applyValue(example -> example.applyValue(getDatabaseResult -> getDatabaseResult.id())));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetDatabaseResult> getDatabasePlain(GetDatabasePlainArgs args) {
        return getDatabasePlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to access information about an existing SQL database.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azure.core.ResourceGroup;
     * import com.pulumi.azure.core.ResourceGroupArgs;
     * import com.pulumi.azure.mssql.Server;
     * import com.pulumi.azure.mssql.ServerArgs;
     * import com.pulumi.azure.mssql.MssqlFunctions;
     * import com.pulumi.azure.mssql.inputs.GetDatabaseArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var exampleResourceGroup = new ResourceGroup("exampleResourceGroup", ResourceGroupArgs.builder()
     *             .name("example-resources")
     *             .location("West Europe")
     *             .build());
     * 
     *         var exampleServer = new Server("exampleServer", ServerArgs.builder()
     *             .name("example")
     *             .resourceGroupName(exampleResourceGroup.name())
     *             .location(exampleResourceGroup.location())
     *             .version("12.0")
     *             .administratorLogin("4dm1n157r470r")
     *             .administratorLoginPassword("4-v3ry-53cr37-p455w0rd")
     *             .build());
     * 
     *         final var example = MssqlFunctions.getDatabase(GetDatabaseArgs.builder()
     *             .name("example-mssql-db")
     *             .serverId(exampleServer.id())
     *             .build());
     * 
     *         ctx.export("databaseId", example.applyValue(getDatabaseResult -> getDatabaseResult).applyValue(example -> example.applyValue(getDatabaseResult -> getDatabaseResult.id())));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetDatabaseResult> getDatabase(GetDatabaseArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("azure:mssql/getDatabase:getDatabase", TypeShape.of(GetDatabaseResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to access information about an existing SQL database.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azure.core.ResourceGroup;
     * import com.pulumi.azure.core.ResourceGroupArgs;
     * import com.pulumi.azure.mssql.Server;
     * import com.pulumi.azure.mssql.ServerArgs;
     * import com.pulumi.azure.mssql.MssqlFunctions;
     * import com.pulumi.azure.mssql.inputs.GetDatabaseArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var exampleResourceGroup = new ResourceGroup("exampleResourceGroup", ResourceGroupArgs.builder()
     *             .name("example-resources")
     *             .location("West Europe")
     *             .build());
     * 
     *         var exampleServer = new Server("exampleServer", ServerArgs.builder()
     *             .name("example")
     *             .resourceGroupName(exampleResourceGroup.name())
     *             .location(exampleResourceGroup.location())
     *             .version("12.0")
     *             .administratorLogin("4dm1n157r470r")
     *             .administratorLoginPassword("4-v3ry-53cr37-p455w0rd")
     *             .build());
     * 
     *         final var example = MssqlFunctions.getDatabase(GetDatabaseArgs.builder()
     *             .name("example-mssql-db")
     *             .serverId(exampleServer.id())
     *             .build());
     * 
     *         ctx.export("databaseId", example.applyValue(getDatabaseResult -> getDatabaseResult).applyValue(example -> example.applyValue(getDatabaseResult -> getDatabaseResult.id())));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetDatabaseResult> getDatabase(GetDatabaseArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("azure:mssql/getDatabase:getDatabase", TypeShape.of(GetDatabaseResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to access information about an existing SQL database.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azure.core.ResourceGroup;
     * import com.pulumi.azure.core.ResourceGroupArgs;
     * import com.pulumi.azure.mssql.Server;
     * import com.pulumi.azure.mssql.ServerArgs;
     * import com.pulumi.azure.mssql.MssqlFunctions;
     * import com.pulumi.azure.mssql.inputs.GetDatabaseArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var exampleResourceGroup = new ResourceGroup("exampleResourceGroup", ResourceGroupArgs.builder()
     *             .name("example-resources")
     *             .location("West Europe")
     *             .build());
     * 
     *         var exampleServer = new Server("exampleServer", ServerArgs.builder()
     *             .name("example")
     *             .resourceGroupName(exampleResourceGroup.name())
     *             .location(exampleResourceGroup.location())
     *             .version("12.0")
     *             .administratorLogin("4dm1n157r470r")
     *             .administratorLoginPassword("4-v3ry-53cr37-p455w0rd")
     *             .build());
     * 
     *         final var example = MssqlFunctions.getDatabase(GetDatabaseArgs.builder()
     *             .name("example-mssql-db")
     *             .serverId(exampleServer.id())
     *             .build());
     * 
     *         ctx.export("databaseId", example.applyValue(getDatabaseResult -> getDatabaseResult).applyValue(example -> example.applyValue(getDatabaseResult -> getDatabaseResult.id())));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetDatabaseResult> getDatabasePlain(GetDatabasePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("azure:mssql/getDatabase:getDatabase", TypeShape.of(GetDatabaseResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to access information about an existing SQL elastic pool.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azure.mssql.MssqlFunctions;
     * import com.pulumi.azure.mssql.inputs.GetElasticPoolArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = MssqlFunctions.getElasticPool(GetElasticPoolArgs.builder()
     *             .name("mssqlelasticpoolname")
     *             .resourceGroupName("example-resources")
     *             .serverName("example-sql-server")
     *             .build());
     * 
     *         ctx.export("elasticpoolId", example.applyValue(getElasticPoolResult -> getElasticPoolResult.id()));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetElasticPoolResult> getElasticPool(GetElasticPoolArgs args) {
        return getElasticPool(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to access information about an existing SQL elastic pool.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azure.mssql.MssqlFunctions;
     * import com.pulumi.azure.mssql.inputs.GetElasticPoolArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = MssqlFunctions.getElasticPool(GetElasticPoolArgs.builder()
     *             .name("mssqlelasticpoolname")
     *             .resourceGroupName("example-resources")
     *             .serverName("example-sql-server")
     *             .build());
     * 
     *         ctx.export("elasticpoolId", example.applyValue(getElasticPoolResult -> getElasticPoolResult.id()));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetElasticPoolResult> getElasticPoolPlain(GetElasticPoolPlainArgs args) {
        return getElasticPoolPlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to access information about an existing SQL elastic pool.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azure.mssql.MssqlFunctions;
     * import com.pulumi.azure.mssql.inputs.GetElasticPoolArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = MssqlFunctions.getElasticPool(GetElasticPoolArgs.builder()
     *             .name("mssqlelasticpoolname")
     *             .resourceGroupName("example-resources")
     *             .serverName("example-sql-server")
     *             .build());
     * 
     *         ctx.export("elasticpoolId", example.applyValue(getElasticPoolResult -> getElasticPoolResult.id()));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetElasticPoolResult> getElasticPool(GetElasticPoolArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("azure:mssql/getElasticPool:getElasticPool", TypeShape.of(GetElasticPoolResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to access information about an existing SQL elastic pool.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azure.mssql.MssqlFunctions;
     * import com.pulumi.azure.mssql.inputs.GetElasticPoolArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = MssqlFunctions.getElasticPool(GetElasticPoolArgs.builder()
     *             .name("mssqlelasticpoolname")
     *             .resourceGroupName("example-resources")
     *             .serverName("example-sql-server")
     *             .build());
     * 
     *         ctx.export("elasticpoolId", example.applyValue(getElasticPoolResult -> getElasticPoolResult.id()));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetElasticPoolResult> getElasticPool(GetElasticPoolArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("azure:mssql/getElasticPool:getElasticPool", TypeShape.of(GetElasticPoolResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to access information about an existing SQL elastic pool.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azure.mssql.MssqlFunctions;
     * import com.pulumi.azure.mssql.inputs.GetElasticPoolArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = MssqlFunctions.getElasticPool(GetElasticPoolArgs.builder()
     *             .name("mssqlelasticpoolname")
     *             .resourceGroupName("example-resources")
     *             .serverName("example-sql-server")
     *             .build());
     * 
     *         ctx.export("elasticpoolId", example.applyValue(getElasticPoolResult -> getElasticPoolResult.id()));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetElasticPoolResult> getElasticPoolPlain(GetElasticPoolPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("azure:mssql/getElasticPool:getElasticPool", TypeShape.of(GetElasticPoolResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to access information about an existing Azure SQL Azure Managed Database.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azure.mssql.MssqlFunctions;
     * import com.pulumi.azure.mssql.inputs.GetManagedDatabaseArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = MssqlFunctions.getManagedDatabase(GetManagedDatabaseArgs.builder()
     *             .name("example")
     *             .resourceGroupName(exampleAzurermResourceGroup.name())
     *             .managedInstanceName(exampleAzurermMssqlManagedInstance.name())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetManagedDatabaseResult> getManagedDatabase(GetManagedDatabaseArgs args) {
        return getManagedDatabase(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to access information about an existing Azure SQL Azure Managed Database.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azure.mssql.MssqlFunctions;
     * import com.pulumi.azure.mssql.inputs.GetManagedDatabaseArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = MssqlFunctions.getManagedDatabase(GetManagedDatabaseArgs.builder()
     *             .name("example")
     *             .resourceGroupName(exampleAzurermResourceGroup.name())
     *             .managedInstanceName(exampleAzurermMssqlManagedInstance.name())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetManagedDatabaseResult> getManagedDatabasePlain(GetManagedDatabasePlainArgs args) {
        return getManagedDatabasePlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to access information about an existing Azure SQL Azure Managed Database.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azure.mssql.MssqlFunctions;
     * import com.pulumi.azure.mssql.inputs.GetManagedDatabaseArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = MssqlFunctions.getManagedDatabase(GetManagedDatabaseArgs.builder()
     *             .name("example")
     *             .resourceGroupName(exampleAzurermResourceGroup.name())
     *             .managedInstanceName(exampleAzurermMssqlManagedInstance.name())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetManagedDatabaseResult> getManagedDatabase(GetManagedDatabaseArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("azure:mssql/getManagedDatabase:getManagedDatabase", TypeShape.of(GetManagedDatabaseResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to access information about an existing Azure SQL Azure Managed Database.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azure.mssql.MssqlFunctions;
     * import com.pulumi.azure.mssql.inputs.GetManagedDatabaseArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = MssqlFunctions.getManagedDatabase(GetManagedDatabaseArgs.builder()
     *             .name("example")
     *             .resourceGroupName(exampleAzurermResourceGroup.name())
     *             .managedInstanceName(exampleAzurermMssqlManagedInstance.name())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetManagedDatabaseResult> getManagedDatabase(GetManagedDatabaseArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("azure:mssql/getManagedDatabase:getManagedDatabase", TypeShape.of(GetManagedDatabaseResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to access information about an existing Azure SQL Azure Managed Database.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azure.mssql.MssqlFunctions;
     * import com.pulumi.azure.mssql.inputs.GetManagedDatabaseArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = MssqlFunctions.getManagedDatabase(GetManagedDatabaseArgs.builder()
     *             .name("example")
     *             .resourceGroupName(exampleAzurermResourceGroup.name())
     *             .managedInstanceName(exampleAzurermMssqlManagedInstance.name())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetManagedDatabaseResult> getManagedDatabasePlain(GetManagedDatabasePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("azure:mssql/getManagedDatabase:getManagedDatabase", TypeShape.of(GetManagedDatabaseResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to access information about an existing Microsoft SQL Azure Managed Instance.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azure.mssql.MssqlFunctions;
     * import com.pulumi.azure.mssql.inputs.GetManagedInstanceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = MssqlFunctions.getManagedInstance(GetManagedInstanceArgs.builder()
     *             .name("managedsqlinstance")
     *             .resourceGroupName(exampleAzurermResourceGroup.name())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetManagedInstanceResult> getManagedInstance(GetManagedInstanceArgs args) {
        return getManagedInstance(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to access information about an existing Microsoft SQL Azure Managed Instance.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azure.mssql.MssqlFunctions;
     * import com.pulumi.azure.mssql.inputs.GetManagedInstanceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = MssqlFunctions.getManagedInstance(GetManagedInstanceArgs.builder()
     *             .name("managedsqlinstance")
     *             .resourceGroupName(exampleAzurermResourceGroup.name())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetManagedInstanceResult> getManagedInstancePlain(GetManagedInstancePlainArgs args) {
        return getManagedInstancePlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to access information about an existing Microsoft SQL Azure Managed Instance.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azure.mssql.MssqlFunctions;
     * import com.pulumi.azure.mssql.inputs.GetManagedInstanceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = MssqlFunctions.getManagedInstance(GetManagedInstanceArgs.builder()
     *             .name("managedsqlinstance")
     *             .resourceGroupName(exampleAzurermResourceGroup.name())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetManagedInstanceResult> getManagedInstance(GetManagedInstanceArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("azure:mssql/getManagedInstance:getManagedInstance", TypeShape.of(GetManagedInstanceResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to access information about an existing Microsoft SQL Azure Managed Instance.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azure.mssql.MssqlFunctions;
     * import com.pulumi.azure.mssql.inputs.GetManagedInstanceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = MssqlFunctions.getManagedInstance(GetManagedInstanceArgs.builder()
     *             .name("managedsqlinstance")
     *             .resourceGroupName(exampleAzurermResourceGroup.name())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetManagedInstanceResult> getManagedInstance(GetManagedInstanceArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("azure:mssql/getManagedInstance:getManagedInstance", TypeShape.of(GetManagedInstanceResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to access information about an existing Microsoft SQL Azure Managed Instance.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azure.mssql.MssqlFunctions;
     * import com.pulumi.azure.mssql.inputs.GetManagedInstanceArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = MssqlFunctions.getManagedInstance(GetManagedInstanceArgs.builder()
     *             .name("managedsqlinstance")
     *             .resourceGroupName(exampleAzurermResourceGroup.name())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetManagedInstanceResult> getManagedInstancePlain(GetManagedInstancePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("azure:mssql/getManagedInstance:getManagedInstance", TypeShape.of(GetManagedInstanceResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to access information about an existing Microsoft SQL Server.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azure.mssql.MssqlFunctions;
     * import com.pulumi.azure.mssql.inputs.GetServerArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = MssqlFunctions.getServer(GetServerArgs.builder()
     *             .name("existingMsSqlServer")
     *             .resourceGroupName("existingResGroup")
     *             .build());
     * 
     *         ctx.export("id", example.applyValue(getServerResult -> getServerResult.id()));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetServerResult> getServer(GetServerArgs args) {
        return getServer(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to access information about an existing Microsoft SQL Server.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azure.mssql.MssqlFunctions;
     * import com.pulumi.azure.mssql.inputs.GetServerArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = MssqlFunctions.getServer(GetServerArgs.builder()
     *             .name("existingMsSqlServer")
     *             .resourceGroupName("existingResGroup")
     *             .build());
     * 
     *         ctx.export("id", example.applyValue(getServerResult -> getServerResult.id()));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetServerResult> getServerPlain(GetServerPlainArgs args) {
        return getServerPlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to access information about an existing Microsoft SQL Server.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azure.mssql.MssqlFunctions;
     * import com.pulumi.azure.mssql.inputs.GetServerArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = MssqlFunctions.getServer(GetServerArgs.builder()
     *             .name("existingMsSqlServer")
     *             .resourceGroupName("existingResGroup")
     *             .build());
     * 
     *         ctx.export("id", example.applyValue(getServerResult -> getServerResult.id()));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetServerResult> getServer(GetServerArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("azure:mssql/getServer:getServer", TypeShape.of(GetServerResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to access information about an existing Microsoft SQL Server.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azure.mssql.MssqlFunctions;
     * import com.pulumi.azure.mssql.inputs.GetServerArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = MssqlFunctions.getServer(GetServerArgs.builder()
     *             .name("existingMsSqlServer")
     *             .resourceGroupName("existingResGroup")
     *             .build());
     * 
     *         ctx.export("id", example.applyValue(getServerResult -> getServerResult.id()));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetServerResult> getServer(GetServerArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("azure:mssql/getServer:getServer", TypeShape.of(GetServerResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to access information about an existing Microsoft SQL Server.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azure.mssql.MssqlFunctions;
     * import com.pulumi.azure.mssql.inputs.GetServerArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = MssqlFunctions.getServer(GetServerArgs.builder()
     *             .name("existingMsSqlServer")
     *             .resourceGroupName("existingResGroup")
     *             .build());
     * 
     *         ctx.export("id", example.applyValue(getServerResult -> getServerResult.id()));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetServerResult> getServerPlain(GetServerPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("azure:mssql/getServer:getServer", TypeShape.of(GetServerResult.class), args, Utilities.withVersion(options));
    }
}
