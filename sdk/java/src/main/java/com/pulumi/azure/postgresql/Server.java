// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.postgresql;

import com.pulumi.azure.Utilities;
import com.pulumi.azure.postgresql.ServerArgs;
import com.pulumi.azure.postgresql.inputs.ServerState;
import com.pulumi.azure.postgresql.outputs.ServerIdentity;
import com.pulumi.azure.postgresql.outputs.ServerThreatDetectionPolicy;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Manages a PostgreSQL Server.
 * 
 * ## Example Usage
 * ```java
 * package generated_program;
 * 
 * import java.util.*;
 * import java.io.*;
 * import java.nio.*;
 * import com.pulumi.*;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var exampleResourceGroup = new ResourceGroup(&#34;exampleResourceGroup&#34;, ResourceGroupArgs.builder()        
 *             .location(&#34;West Europe&#34;)
 *             .build());
 * 
 *         var exampleServer = new Server(&#34;exampleServer&#34;, ServerArgs.builder()        
 *             .location(exampleResourceGroup.location())
 *             .resourceGroupName(exampleResourceGroup.name())
 *             .administratorLogin(&#34;psqladmin&#34;)
 *             .administratorLoginPassword(&#34;H@Sh1CoR3!&#34;)
 *             .skuName(&#34;GP_Gen5_4&#34;)
 *             .version(&#34;11&#34;)
 *             .storageMb(640000)
 *             .backupRetentionDays(7)
 *             .geoRedundantBackupEnabled(true)
 *             .autoGrowEnabled(true)
 *             .publicNetworkAccessEnabled(false)
 *             .sslEnforcementEnabled(true)
 *             .sslMinimalTlsVersionEnforced(&#34;TLS1_2&#34;)
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * PostgreSQL Server&#39;s can be imported using the `resource id`, e.g.
 * 
 * ```sh
 *  $ pulumi import azure:postgresql/server:Server server1 /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/mygroup1/providers/Microsoft.DBforPostgreSQL/servers/server1
 * ```
 * 
 */
@ResourceType(type="azure:postgresql/server:Server")
public class Server extends com.pulumi.resources.CustomResource {
    /**
     * The Administrator login for the PostgreSQL Server. Required when `create_mode` is `Default`. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="administratorLogin", type=String.class, parameters={})
    private Output<String> administratorLogin;

    /**
     * @return The Administrator login for the PostgreSQL Server. Required when `create_mode` is `Default`. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> administratorLogin() {
        return this.administratorLogin;
    }
    /**
     * The Password associated with the `administrator_login` for the PostgreSQL Server. Required when `create_mode` is `Default`.
     * 
     */
    @Export(name="administratorLoginPassword", type=String.class, parameters={})
    private Output</* @Nullable */ String> administratorLoginPassword;

    /**
     * @return The Password associated with the `administrator_login` for the PostgreSQL Server. Required when `create_mode` is `Default`.
     * 
     */
    public Output<Optional<String>> administratorLoginPassword() {
        return Codegen.optional(this.administratorLoginPassword);
    }
    /**
     * Enable/Disable auto-growing of the storage. Storage auto-grow prevents your server from running out of storage and becoming read-only. If storage auto grow is enabled, the storage automatically grows without impacting the workload. The default value if not explicitly specified is `true`.
     * 
     */
    @Export(name="autoGrowEnabled", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> autoGrowEnabled;

    /**
     * @return Enable/Disable auto-growing of the storage. Storage auto-grow prevents your server from running out of storage and becoming read-only. If storage auto grow is enabled, the storage automatically grows without impacting the workload. The default value if not explicitly specified is `true`.
     * 
     */
    public Output<Optional<Boolean>> autoGrowEnabled() {
        return Codegen.optional(this.autoGrowEnabled);
    }
    /**
     * Backup retention days for the server, supported values are between `7` and `35` days.
     * 
     */
    @Export(name="backupRetentionDays", type=Integer.class, parameters={})
    private Output<Integer> backupRetentionDays;

    /**
     * @return Backup retention days for the server, supported values are between `7` and `35` days.
     * 
     */
    public Output<Integer> backupRetentionDays() {
        return this.backupRetentionDays;
    }
    /**
     * The creation mode. Can be used to restore or replicate existing servers. Possible values are `Default`, `Replica`, `GeoRestore`, and `PointInTimeRestore`. Defaults to `Default.`
     * 
     */
    @Export(name="createMode", type=String.class, parameters={})
    private Output</* @Nullable */ String> createMode;

    /**
     * @return The creation mode. Can be used to restore or replicate existing servers. Possible values are `Default`, `Replica`, `GeoRestore`, and `PointInTimeRestore`. Defaults to `Default.`
     * 
     */
    public Output<Optional<String>> createMode() {
        return Codegen.optional(this.createMode);
    }
    /**
     * For creation modes other than `Default`, the source server ID to use.
     * 
     */
    @Export(name="creationSourceServerId", type=String.class, parameters={})
    private Output</* @Nullable */ String> creationSourceServerId;

    /**
     * @return For creation modes other than `Default`, the source server ID to use.
     * 
     */
    public Output<Optional<String>> creationSourceServerId() {
        return Codegen.optional(this.creationSourceServerId);
    }
    /**
     * The FQDN of the PostgreSQL Server.
     * 
     */
    @Export(name="fqdn", type=String.class, parameters={})
    private Output<String> fqdn;

    /**
     * @return The FQDN of the PostgreSQL Server.
     * 
     */
    public Output<String> fqdn() {
        return this.fqdn;
    }
    /**
     * Turn Geo-redundant server backups on/off. This allows you to choose between locally redundant or geo-redundant backup storage in the General Purpose and Memory Optimized tiers. When the backups are stored in geo-redundant backup storage, they are not only stored within the region in which your server is hosted, but are also replicated to a paired data center. This provides better protection and ability to restore your server in a different region in the event of a disaster. This is not support for the Basic tier. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="geoRedundantBackupEnabled", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> geoRedundantBackupEnabled;

    /**
     * @return Turn Geo-redundant server backups on/off. This allows you to choose between locally redundant or geo-redundant backup storage in the General Purpose and Memory Optimized tiers. When the backups are stored in geo-redundant backup storage, they are not only stored within the region in which your server is hosted, but are also replicated to a paired data center. This provides better protection and ability to restore your server in a different region in the event of a disaster. This is not support for the Basic tier. Changing this forces a new resource to be created.
     * 
     */
    public Output<Optional<Boolean>> geoRedundantBackupEnabled() {
        return Codegen.optional(this.geoRedundantBackupEnabled);
    }
    /**
     * An `identity` block as defined below.
     * 
     */
    @Export(name="identity", type=ServerIdentity.class, parameters={})
    private Output</* @Nullable */ ServerIdentity> identity;

    /**
     * @return An `identity` block as defined below.
     * 
     */
    public Output<Optional<ServerIdentity>> identity() {
        return Codegen.optional(this.identity);
    }
    /**
     * Whether or not infrastructure is encrypted for this server. Defaults to `false`. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="infrastructureEncryptionEnabled", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> infrastructureEncryptionEnabled;

    /**
     * @return Whether or not infrastructure is encrypted for this server. Defaults to `false`. Changing this forces a new resource to be created.
     * 
     */
    public Output<Optional<Boolean>> infrastructureEncryptionEnabled() {
        return Codegen.optional(this.infrastructureEncryptionEnabled);
    }
    /**
     * Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="location", type=String.class, parameters={})
    private Output<String> location;

    /**
     * @return Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> location() {
        return this.location;
    }
    /**
     * Specifies the name of the PostgreSQL Server. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return Specifies the name of the PostgreSQL Server. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Whether or not public network access is allowed for this server. Defaults to `true`.
     * 
     */
    @Export(name="publicNetworkAccessEnabled", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> publicNetworkAccessEnabled;

    /**
     * @return Whether or not public network access is allowed for this server. Defaults to `true`.
     * 
     */
    public Output<Optional<Boolean>> publicNetworkAccessEnabled() {
        return Codegen.optional(this.publicNetworkAccessEnabled);
    }
    /**
     * The name of the resource group in which to create the PostgreSQL Server. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="resourceGroupName", type=String.class, parameters={})
    private Output<String> resourceGroupName;

    /**
     * @return The name of the resource group in which to create the PostgreSQL Server. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }
    /**
     * When `create_mode` is `PointInTimeRestore` the point in time to restore from `creation_source_server_id`.
     * 
     */
    @Export(name="restorePointInTime", type=String.class, parameters={})
    private Output</* @Nullable */ String> restorePointInTime;

    /**
     * @return When `create_mode` is `PointInTimeRestore` the point in time to restore from `creation_source_server_id`.
     * 
     */
    public Output<Optional<String>> restorePointInTime() {
        return Codegen.optional(this.restorePointInTime);
    }
    /**
     * Specifies the SKU Name for this PostgreSQL Server. The name of the SKU, follows the `tier` + `family` + `cores` pattern (e.g. `B_Gen4_1`, `GP_Gen5_8`). For more information see the [product documentation](https://docs.microsoft.com/rest/api/postgresql/singleserver/servers/create#sku).
     * 
     */
    @Export(name="skuName", type=String.class, parameters={})
    private Output<String> skuName;

    /**
     * @return Specifies the SKU Name for this PostgreSQL Server. The name of the SKU, follows the `tier` + `family` + `cores` pattern (e.g. `B_Gen4_1`, `GP_Gen5_8`). For more information see the [product documentation](https://docs.microsoft.com/rest/api/postgresql/singleserver/servers/create#sku).
     * 
     */
    public Output<String> skuName() {
        return this.skuName;
    }
    /**
     * Specifies if SSL should be enforced on connections. Possible values are `true` and `false`.
     * 
     */
    @Export(name="sslEnforcementEnabled", type=Boolean.class, parameters={})
    private Output<Boolean> sslEnforcementEnabled;

    /**
     * @return Specifies if SSL should be enforced on connections. Possible values are `true` and `false`.
     * 
     */
    public Output<Boolean> sslEnforcementEnabled() {
        return this.sslEnforcementEnabled;
    }
    /**
     * The minimum TLS version to support on the sever. Possible values are `TLSEnforcementDisabled`, `TLS1_0`, `TLS1_1`, and `TLS1_2`. Defaults to `TLSEnforcementDisabled`.
     * 
     */
    @Export(name="sslMinimalTlsVersionEnforced", type=String.class, parameters={})
    private Output</* @Nullable */ String> sslMinimalTlsVersionEnforced;

    /**
     * @return The minimum TLS version to support on the sever. Possible values are `TLSEnforcementDisabled`, `TLS1_0`, `TLS1_1`, and `TLS1_2`. Defaults to `TLSEnforcementDisabled`.
     * 
     */
    public Output<Optional<String>> sslMinimalTlsVersionEnforced() {
        return Codegen.optional(this.sslMinimalTlsVersionEnforced);
    }
    /**
     * Max storage allowed for a server. Possible values are between `5120` MB(5GB) and `1048576` MB(1TB) for the Basic SKU and between `5120` MB(5GB) and `16777216` MB(16TB) for General Purpose/Memory Optimized SKUs. For more information see the [product documentation](https://docs.microsoft.com/azure/postgresql/concepts-pricing-tiers#storage).
     * 
     */
    @Export(name="storageMb", type=Integer.class, parameters={})
    private Output<Integer> storageMb;

    /**
     * @return Max storage allowed for a server. Possible values are between `5120` MB(5GB) and `1048576` MB(1TB) for the Basic SKU and between `5120` MB(5GB) and `16777216` MB(16TB) for General Purpose/Memory Optimized SKUs. For more information see the [product documentation](https://docs.microsoft.com/azure/postgresql/concepts-pricing-tiers#storage).
     * 
     */
    public Output<Integer> storageMb() {
        return this.storageMb;
    }
    /**
     * A mapping of tags to assign to the resource.
     * 
     */
    @Export(name="tags", type=Map.class, parameters={String.class, String.class})
    private Output</* @Nullable */ Map<String,String>> tags;

    /**
     * @return A mapping of tags to assign to the resource.
     * 
     */
    public Output<Optional<Map<String,String>>> tags() {
        return Codegen.optional(this.tags);
    }
    /**
     * Threat detection policy configuration, known in the API as Server Security Alerts Policy. The `threat_detection_policy` block supports fields documented below.
     * 
     */
    @Export(name="threatDetectionPolicy", type=ServerThreatDetectionPolicy.class, parameters={})
    private Output</* @Nullable */ ServerThreatDetectionPolicy> threatDetectionPolicy;

    /**
     * @return Threat detection policy configuration, known in the API as Server Security Alerts Policy. The `threat_detection_policy` block supports fields documented below.
     * 
     */
    public Output<Optional<ServerThreatDetectionPolicy>> threatDetectionPolicy() {
        return Codegen.optional(this.threatDetectionPolicy);
    }
    /**
     * Specifies the version of PostgreSQL to use. Valid values are `9.5`, `9.6`, `10`, `10.0`, and `11`. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="version", type=String.class, parameters={})
    private Output<String> version;

    /**
     * @return Specifies the version of PostgreSQL to use. Valid values are `9.5`, `9.6`, `10`, `10.0`, and `11`. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> version() {
        return this.version;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Server(String name) {
        this(name, ServerArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Server(String name, ServerArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Server(String name, ServerArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:postgresql/server:Server", name, args == null ? ServerArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private Server(String name, Output<String> id, @Nullable ServerState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:postgresql/server:Server", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Server get(String name, Output<String> id, @Nullable ServerState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Server(name, id, state, options);
    }
}
