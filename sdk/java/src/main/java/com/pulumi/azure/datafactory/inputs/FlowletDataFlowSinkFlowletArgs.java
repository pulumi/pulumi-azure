// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.datafactory.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class FlowletDataFlowSinkFlowletArgs extends com.pulumi.resources.ResourceArgs {

    public static final FlowletDataFlowSinkFlowletArgs Empty = new FlowletDataFlowSinkFlowletArgs();

    /**
     * Specifies the reference data flow parameters from dataset.
     * 
     */
    @Import(name="datasetParameters")
    private @Nullable Output<String> datasetParameters;

    /**
     * @return Specifies the reference data flow parameters from dataset.
     * 
     */
    public Optional<Output<String>> datasetParameters() {
        return Optional.ofNullable(this.datasetParameters);
    }

    /**
     * The name for the Data Factory Flowlet.
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    /**
     * @return The name for the Data Factory Flowlet.
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    /**
     * A map of parameters to associate with the Data Factory Flowlet.
     * 
     */
    @Import(name="parameters")
    private @Nullable Output<Map<String,String>> parameters;

    /**
     * @return A map of parameters to associate with the Data Factory Flowlet.
     * 
     */
    public Optional<Output<Map<String,String>>> parameters() {
        return Optional.ofNullable(this.parameters);
    }

    private FlowletDataFlowSinkFlowletArgs() {}

    private FlowletDataFlowSinkFlowletArgs(FlowletDataFlowSinkFlowletArgs $) {
        this.datasetParameters = $.datasetParameters;
        this.name = $.name;
        this.parameters = $.parameters;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FlowletDataFlowSinkFlowletArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FlowletDataFlowSinkFlowletArgs $;

        public Builder() {
            $ = new FlowletDataFlowSinkFlowletArgs();
        }

        public Builder(FlowletDataFlowSinkFlowletArgs defaults) {
            $ = new FlowletDataFlowSinkFlowletArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param datasetParameters Specifies the reference data flow parameters from dataset.
         * 
         * @return builder
         * 
         */
        public Builder datasetParameters(@Nullable Output<String> datasetParameters) {
            $.datasetParameters = datasetParameters;
            return this;
        }

        /**
         * @param datasetParameters Specifies the reference data flow parameters from dataset.
         * 
         * @return builder
         * 
         */
        public Builder datasetParameters(String datasetParameters) {
            return datasetParameters(Output.of(datasetParameters));
        }

        /**
         * @param name The name for the Data Factory Flowlet.
         * 
         * @return builder
         * 
         */
        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name for the Data Factory Flowlet.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param parameters A map of parameters to associate with the Data Factory Flowlet.
         * 
         * @return builder
         * 
         */
        public Builder parameters(@Nullable Output<Map<String,String>> parameters) {
            $.parameters = parameters;
            return this;
        }

        /**
         * @param parameters A map of parameters to associate with the Data Factory Flowlet.
         * 
         * @return builder
         * 
         */
        public Builder parameters(Map<String,String> parameters) {
            return parameters(Output.of(parameters));
        }

        public FlowletDataFlowSinkFlowletArgs build() {
            if ($.name == null) {
                throw new MissingRequiredPropertyException("FlowletDataFlowSinkFlowletArgs", "name");
            }
            return $;
        }
    }

}
