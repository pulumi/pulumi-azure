// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.databricks.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetWorkspaceCustomParameter {
    /**
     * @return The ID of a Azure Machine Learning workspace to link with Databricks workspace.
     * 
     */
    private String machineLearningWorkspaceId;
    /**
     * @return Name of the NAT gateway for Secure Cluster Connectivity (No Public IP) workspace subnets (only for workspace with managed virtual network).
     * 
     */
    private String natGatewayName;
    /**
     * @return Are public IP Addresses not allowed?
     * 
     */
    private Boolean noPublicIp;
    /**
     * @return The name of the Private Subnet within the Virtual Network.
     * 
     */
    private String privateSubnetName;
    /**
     * @return Name of the Public IP for No Public IP workspace with managed virtual network.
     * 
     */
    private String publicIpName;
    /**
     * @return The name of the Public Subnet within the Virtual Network.
     * 
     */
    private String publicSubnetName;
    /**
     * @return Default Databricks File Storage account name.
     * 
     */
    private String storageAccountName;
    /**
     * @return Storage account SKU name.
     * 
     */
    private String storageAccountSkuName;
    /**
     * @return The ID of a Virtual Network where this Databricks Cluster should be created.
     * 
     */
    private String virtualNetworkId;
    /**
     * @return Address prefix for Managed virtual network.
     * 
     */
    private String vnetAddressPrefix;

    private GetWorkspaceCustomParameter() {}
    /**
     * @return The ID of a Azure Machine Learning workspace to link with Databricks workspace.
     * 
     */
    public String machineLearningWorkspaceId() {
        return this.machineLearningWorkspaceId;
    }
    /**
     * @return Name of the NAT gateway for Secure Cluster Connectivity (No Public IP) workspace subnets (only for workspace with managed virtual network).
     * 
     */
    public String natGatewayName() {
        return this.natGatewayName;
    }
    /**
     * @return Are public IP Addresses not allowed?
     * 
     */
    public Boolean noPublicIp() {
        return this.noPublicIp;
    }
    /**
     * @return The name of the Private Subnet within the Virtual Network.
     * 
     */
    public String privateSubnetName() {
        return this.privateSubnetName;
    }
    /**
     * @return Name of the Public IP for No Public IP workspace with managed virtual network.
     * 
     */
    public String publicIpName() {
        return this.publicIpName;
    }
    /**
     * @return The name of the Public Subnet within the Virtual Network.
     * 
     */
    public String publicSubnetName() {
        return this.publicSubnetName;
    }
    /**
     * @return Default Databricks File Storage account name.
     * 
     */
    public String storageAccountName() {
        return this.storageAccountName;
    }
    /**
     * @return Storage account SKU name.
     * 
     */
    public String storageAccountSkuName() {
        return this.storageAccountSkuName;
    }
    /**
     * @return The ID of a Virtual Network where this Databricks Cluster should be created.
     * 
     */
    public String virtualNetworkId() {
        return this.virtualNetworkId;
    }
    /**
     * @return Address prefix for Managed virtual network.
     * 
     */
    public String vnetAddressPrefix() {
        return this.vnetAddressPrefix;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetWorkspaceCustomParameter defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String machineLearningWorkspaceId;
        private String natGatewayName;
        private Boolean noPublicIp;
        private String privateSubnetName;
        private String publicIpName;
        private String publicSubnetName;
        private String storageAccountName;
        private String storageAccountSkuName;
        private String virtualNetworkId;
        private String vnetAddressPrefix;
        public Builder() {}
        public Builder(GetWorkspaceCustomParameter defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.machineLearningWorkspaceId = defaults.machineLearningWorkspaceId;
    	      this.natGatewayName = defaults.natGatewayName;
    	      this.noPublicIp = defaults.noPublicIp;
    	      this.privateSubnetName = defaults.privateSubnetName;
    	      this.publicIpName = defaults.publicIpName;
    	      this.publicSubnetName = defaults.publicSubnetName;
    	      this.storageAccountName = defaults.storageAccountName;
    	      this.storageAccountSkuName = defaults.storageAccountSkuName;
    	      this.virtualNetworkId = defaults.virtualNetworkId;
    	      this.vnetAddressPrefix = defaults.vnetAddressPrefix;
        }

        @CustomType.Setter
        public Builder machineLearningWorkspaceId(String machineLearningWorkspaceId) {
            if (machineLearningWorkspaceId == null) {
              throw new MissingRequiredPropertyException("GetWorkspaceCustomParameter", "machineLearningWorkspaceId");
            }
            this.machineLearningWorkspaceId = machineLearningWorkspaceId;
            return this;
        }
        @CustomType.Setter
        public Builder natGatewayName(String natGatewayName) {
            if (natGatewayName == null) {
              throw new MissingRequiredPropertyException("GetWorkspaceCustomParameter", "natGatewayName");
            }
            this.natGatewayName = natGatewayName;
            return this;
        }
        @CustomType.Setter
        public Builder noPublicIp(Boolean noPublicIp) {
            if (noPublicIp == null) {
              throw new MissingRequiredPropertyException("GetWorkspaceCustomParameter", "noPublicIp");
            }
            this.noPublicIp = noPublicIp;
            return this;
        }
        @CustomType.Setter
        public Builder privateSubnetName(String privateSubnetName) {
            if (privateSubnetName == null) {
              throw new MissingRequiredPropertyException("GetWorkspaceCustomParameter", "privateSubnetName");
            }
            this.privateSubnetName = privateSubnetName;
            return this;
        }
        @CustomType.Setter
        public Builder publicIpName(String publicIpName) {
            if (publicIpName == null) {
              throw new MissingRequiredPropertyException("GetWorkspaceCustomParameter", "publicIpName");
            }
            this.publicIpName = publicIpName;
            return this;
        }
        @CustomType.Setter
        public Builder publicSubnetName(String publicSubnetName) {
            if (publicSubnetName == null) {
              throw new MissingRequiredPropertyException("GetWorkspaceCustomParameter", "publicSubnetName");
            }
            this.publicSubnetName = publicSubnetName;
            return this;
        }
        @CustomType.Setter
        public Builder storageAccountName(String storageAccountName) {
            if (storageAccountName == null) {
              throw new MissingRequiredPropertyException("GetWorkspaceCustomParameter", "storageAccountName");
            }
            this.storageAccountName = storageAccountName;
            return this;
        }
        @CustomType.Setter
        public Builder storageAccountSkuName(String storageAccountSkuName) {
            if (storageAccountSkuName == null) {
              throw new MissingRequiredPropertyException("GetWorkspaceCustomParameter", "storageAccountSkuName");
            }
            this.storageAccountSkuName = storageAccountSkuName;
            return this;
        }
        @CustomType.Setter
        public Builder virtualNetworkId(String virtualNetworkId) {
            if (virtualNetworkId == null) {
              throw new MissingRequiredPropertyException("GetWorkspaceCustomParameter", "virtualNetworkId");
            }
            this.virtualNetworkId = virtualNetworkId;
            return this;
        }
        @CustomType.Setter
        public Builder vnetAddressPrefix(String vnetAddressPrefix) {
            if (vnetAddressPrefix == null) {
              throw new MissingRequiredPropertyException("GetWorkspaceCustomParameter", "vnetAddressPrefix");
            }
            this.vnetAddressPrefix = vnetAddressPrefix;
            return this;
        }
        public GetWorkspaceCustomParameter build() {
            final var _resultValue = new GetWorkspaceCustomParameter();
            _resultValue.machineLearningWorkspaceId = machineLearningWorkspaceId;
            _resultValue.natGatewayName = natGatewayName;
            _resultValue.noPublicIp = noPublicIp;
            _resultValue.privateSubnetName = privateSubnetName;
            _resultValue.publicIpName = publicIpName;
            _resultValue.publicSubnetName = publicSubnetName;
            _resultValue.storageAccountName = storageAccountName;
            _resultValue.storageAccountSkuName = storageAccountSkuName;
            _resultValue.virtualNetworkId = virtualNetworkId;
            _resultValue.vnetAddressPrefix = vnetAddressPrefix;
            return _resultValue;
        }
    }
}
