// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.lb.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetBackendAddressPoolBackendAddressInboundNatRulePortMapping {
    /**
     * @return The Backend Port of the Load Balancing Inbound NAT Rules associated with this Backend Address Pool Address.
     * 
     */
    private Integer backendPort;
    /**
     * @return The Frontend Port of the Load Balancing Inbound NAT Rules associated with this Backend Address Pool Address.
     * 
     */
    private Integer frontendPort;
    /**
     * @return The name of the Load Balancing Inbound NAT Rules associated with this Backend Address Pool Address.
     * 
     */
    private String inboundNatRuleName;

    private GetBackendAddressPoolBackendAddressInboundNatRulePortMapping() {}
    /**
     * @return The Backend Port of the Load Balancing Inbound NAT Rules associated with this Backend Address Pool Address.
     * 
     */
    public Integer backendPort() {
        return this.backendPort;
    }
    /**
     * @return The Frontend Port of the Load Balancing Inbound NAT Rules associated with this Backend Address Pool Address.
     * 
     */
    public Integer frontendPort() {
        return this.frontendPort;
    }
    /**
     * @return The name of the Load Balancing Inbound NAT Rules associated with this Backend Address Pool Address.
     * 
     */
    public String inboundNatRuleName() {
        return this.inboundNatRuleName;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetBackendAddressPoolBackendAddressInboundNatRulePortMapping defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer backendPort;
        private Integer frontendPort;
        private String inboundNatRuleName;
        public Builder() {}
        public Builder(GetBackendAddressPoolBackendAddressInboundNatRulePortMapping defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.backendPort = defaults.backendPort;
    	      this.frontendPort = defaults.frontendPort;
    	      this.inboundNatRuleName = defaults.inboundNatRuleName;
        }

        @CustomType.Setter
        public Builder backendPort(Integer backendPort) {
            if (backendPort == null) {
              throw new MissingRequiredPropertyException("GetBackendAddressPoolBackendAddressInboundNatRulePortMapping", "backendPort");
            }
            this.backendPort = backendPort;
            return this;
        }
        @CustomType.Setter
        public Builder frontendPort(Integer frontendPort) {
            if (frontendPort == null) {
              throw new MissingRequiredPropertyException("GetBackendAddressPoolBackendAddressInboundNatRulePortMapping", "frontendPort");
            }
            this.frontendPort = frontendPort;
            return this;
        }
        @CustomType.Setter
        public Builder inboundNatRuleName(String inboundNatRuleName) {
            if (inboundNatRuleName == null) {
              throw new MissingRequiredPropertyException("GetBackendAddressPoolBackendAddressInboundNatRulePortMapping", "inboundNatRuleName");
            }
            this.inboundNatRuleName = inboundNatRuleName;
            return this;
        }
        public GetBackendAddressPoolBackendAddressInboundNatRulePortMapping build() {
            final var _resultValue = new GetBackendAddressPoolBackendAddressInboundNatRulePortMapping();
            _resultValue.backendPort = backendPort;
            _resultValue.frontendPort = frontendPort;
            _resultValue.inboundNatRuleName = inboundNatRuleName;
            return _resultValue;
        }
    }
}
