// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.network;

import com.pulumi.azure.Utilities;
import com.pulumi.azure.network.VpnGatewayArgs;
import com.pulumi.azure.network.inputs.VpnGatewayState;
import com.pulumi.azure.network.outputs.VpnGatewayBgpSettings;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Manages a VPN Gateway within a Virtual Hub, which enables Site-to-Site communication.
 * 
 * ## Example Usage
 * ```java
 * package generated_program;
 * 
 * import java.util.*;
 * import java.io.*;
 * import java.nio.*;
 * import com.pulumi.*;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var exampleResourceGroup = new ResourceGroup(&#34;exampleResourceGroup&#34;, ResourceGroupArgs.builder()        
 *             .location(&#34;West Europe&#34;)
 *             .build());
 * 
 *         var exampleVirtualNetwork = new VirtualNetwork(&#34;exampleVirtualNetwork&#34;, VirtualNetworkArgs.builder()        
 *             .location(exampleResourceGroup.location())
 *             .resourceGroupName(exampleResourceGroup.name())
 *             .addressSpaces(&#34;10.0.0.0/16&#34;)
 *             .build());
 * 
 *         var exampleVirtualWan = new VirtualWan(&#34;exampleVirtualWan&#34;, VirtualWanArgs.builder()        
 *             .resourceGroupName(exampleResourceGroup.name())
 *             .location(exampleResourceGroup.location())
 *             .build());
 * 
 *         var exampleVirtualHub = new VirtualHub(&#34;exampleVirtualHub&#34;, VirtualHubArgs.builder()        
 *             .resourceGroupName(exampleResourceGroup.name())
 *             .location(exampleResourceGroup.location())
 *             .virtualWanId(exampleVirtualWan.id())
 *             .addressPrefix(&#34;10.0.1.0/24&#34;)
 *             .build());
 * 
 *         var exampleVpnGateway = new VpnGateway(&#34;exampleVpnGateway&#34;, VpnGatewayArgs.builder()        
 *             .location(exampleResourceGroup.location())
 *             .resourceGroupName(exampleResourceGroup.name())
 *             .virtualHubId(exampleVirtualHub.id())
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * VPN Gateways can be imported using the `resource id`, e.g.
 * 
 * ```sh
 *  $ pulumi import azure:network/vpnGateway:VpnGateway gateway1 /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.Network/vpnGateways/gateway1
 * ```
 * 
 */
@ResourceType(type="azure:network/vpnGateway:VpnGateway")
public class VpnGateway extends com.pulumi.resources.CustomResource {
    /**
     * Is BGP route translation for NAT on this VPN Gateway enabled? Defaults to `false`.
     * 
     */
    @Export(name="bgpRouteTranslationForNatEnabled", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> bgpRouteTranslationForNatEnabled;

    /**
     * @return Is BGP route translation for NAT on this VPN Gateway enabled? Defaults to `false`.
     * 
     */
    public Output<Optional<Boolean>> bgpRouteTranslationForNatEnabled() {
        return Codegen.optional(this.bgpRouteTranslationForNatEnabled);
    }
    /**
     * A `bgp_settings` block as defined below.
     * 
     */
    @Export(name="bgpSettings", type=VpnGatewayBgpSettings.class, parameters={})
    private Output<VpnGatewayBgpSettings> bgpSettings;

    /**
     * @return A `bgp_settings` block as defined below.
     * 
     */
    public Output<VpnGatewayBgpSettings> bgpSettings() {
        return this.bgpSettings;
    }
    /**
     * The Azure location where this VPN Gateway should be created. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="location", type=String.class, parameters={})
    private Output<String> location;

    /**
     * @return The Azure location where this VPN Gateway should be created. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> location() {
        return this.location;
    }
    /**
     * The Name which should be used for this VPN Gateway. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return The Name which should be used for this VPN Gateway. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The Name of the Resource Group in which this VPN Gateway should be created. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="resourceGroupName", type=String.class, parameters={})
    private Output<String> resourceGroupName;

    /**
     * @return The Name of the Resource Group in which this VPN Gateway should be created. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> resourceGroupName() {
        return this.resourceGroupName;
    }
    /**
     * Azure routing preference lets you to choose how your traffic routes between Azure and the internet. You can choose to route traffic either via the Microsoft network (default value, `Microsoft Network`), or via the ISP network (public internet, set to `Internet`). More context of the configuration can be found in the
     * [Microsoft Docs](https://docs.microsoft.com/azure/virtual-wan/virtual-wan-site-to-site-portal#gateway) to create a VPN Gateway. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="routingPreference", type=String.class, parameters={})
    private Output<String> routingPreference;

    /**
     * @return Azure routing preference lets you to choose how your traffic routes between Azure and the internet. You can choose to route traffic either via the Microsoft network (default value, `Microsoft Network`), or via the ISP network (public internet, set to `Internet`). More context of the configuration can be found in the
     * [Microsoft Docs](https://docs.microsoft.com/azure/virtual-wan/virtual-wan-site-to-site-portal#gateway) to create a VPN Gateway. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> routingPreference() {
        return this.routingPreference;
    }
    /**
     * The Scale Unit for this VPN Gateway. Defaults to `1`.
     * 
     */
    @Export(name="scaleUnit", type=Integer.class, parameters={})
    private Output</* @Nullable */ Integer> scaleUnit;

    /**
     * @return The Scale Unit for this VPN Gateway. Defaults to `1`.
     * 
     */
    public Output<Optional<Integer>> scaleUnit() {
        return Codegen.optional(this.scaleUnit);
    }
    /**
     * A mapping of tags to assign to the VPN Gateway.
     * 
     */
    @Export(name="tags", type=Map.class, parameters={String.class, String.class})
    private Output</* @Nullable */ Map<String,String>> tags;

    /**
     * @return A mapping of tags to assign to the VPN Gateway.
     * 
     */
    public Output<Optional<Map<String,String>>> tags() {
        return Codegen.optional(this.tags);
    }
    /**
     * The ID of the Virtual Hub within which this VPN Gateway should be created. Changing this forces a new resource to be created.
     * 
     */
    @Export(name="virtualHubId", type=String.class, parameters={})
    private Output<String> virtualHubId;

    /**
     * @return The ID of the Virtual Hub within which this VPN Gateway should be created. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> virtualHubId() {
        return this.virtualHubId;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public VpnGateway(String name) {
        this(name, VpnGatewayArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public VpnGateway(String name, VpnGatewayArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public VpnGateway(String name, VpnGatewayArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:network/vpnGateway:VpnGateway", name, args == null ? VpnGatewayArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private VpnGateway(String name, Output<String> id, @Nullable VpnGatewayState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azure:network/vpnGateway:VpnGateway", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static VpnGateway get(String name, Output<String> id, @Nullable VpnGatewayState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new VpnGateway(name, id, state, options);
    }
}
