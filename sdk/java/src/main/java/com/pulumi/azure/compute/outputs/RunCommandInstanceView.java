// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azure.compute.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class RunCommandInstanceView {
    private @Nullable String endTime;
    private @Nullable String errorMessage;
    private @Nullable String executionMessage;
    private @Nullable String executionState;
    private @Nullable Integer exitCode;
    private @Nullable String output;
    private @Nullable String startTime;

    private RunCommandInstanceView() {}
    public Optional<String> endTime() {
        return Optional.ofNullable(this.endTime);
    }
    public Optional<String> errorMessage() {
        return Optional.ofNullable(this.errorMessage);
    }
    public Optional<String> executionMessage() {
        return Optional.ofNullable(this.executionMessage);
    }
    public Optional<String> executionState() {
        return Optional.ofNullable(this.executionState);
    }
    public Optional<Integer> exitCode() {
        return Optional.ofNullable(this.exitCode);
    }
    public Optional<String> output() {
        return Optional.ofNullable(this.output);
    }
    public Optional<String> startTime() {
        return Optional.ofNullable(this.startTime);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(RunCommandInstanceView defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String endTime;
        private @Nullable String errorMessage;
        private @Nullable String executionMessage;
        private @Nullable String executionState;
        private @Nullable Integer exitCode;
        private @Nullable String output;
        private @Nullable String startTime;
        public Builder() {}
        public Builder(RunCommandInstanceView defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.endTime = defaults.endTime;
    	      this.errorMessage = defaults.errorMessage;
    	      this.executionMessage = defaults.executionMessage;
    	      this.executionState = defaults.executionState;
    	      this.exitCode = defaults.exitCode;
    	      this.output = defaults.output;
    	      this.startTime = defaults.startTime;
        }

        @CustomType.Setter
        public Builder endTime(@Nullable String endTime) {

            this.endTime = endTime;
            return this;
        }
        @CustomType.Setter
        public Builder errorMessage(@Nullable String errorMessage) {

            this.errorMessage = errorMessage;
            return this;
        }
        @CustomType.Setter
        public Builder executionMessage(@Nullable String executionMessage) {

            this.executionMessage = executionMessage;
            return this;
        }
        @CustomType.Setter
        public Builder executionState(@Nullable String executionState) {

            this.executionState = executionState;
            return this;
        }
        @CustomType.Setter
        public Builder exitCode(@Nullable Integer exitCode) {

            this.exitCode = exitCode;
            return this;
        }
        @CustomType.Setter
        public Builder output(@Nullable String output) {

            this.output = output;
            return this;
        }
        @CustomType.Setter
        public Builder startTime(@Nullable String startTime) {

            this.startTime = startTime;
            return this;
        }
        public RunCommandInstanceView build() {
            final var _resultValue = new RunCommandInstanceView();
            _resultValue.endTime = endTime;
            _resultValue.errorMessage = errorMessage;
            _resultValue.executionMessage = executionMessage;
            _resultValue.executionState = executionState;
            _resultValue.exitCode = exitCode;
            _resultValue.output = output;
            _resultValue.startTime = startTime;
            return _resultValue;
        }
    }
}
